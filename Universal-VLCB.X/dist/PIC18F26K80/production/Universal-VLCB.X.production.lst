

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 01 15:33:53 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   217                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=2,class=CODE,delta=1
   249                           	psect	text225,global,reloc=2,class=CODE,delta=1
   250                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   251                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   252                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   253                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   254   000000                     
   255                           ; Generated 12/10/2023 GMT
   256                           ; 
   257                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   258                           ; All rights reserved.
   259                           ; 
   260                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   261                           ; 
   262                           ; Redistribution and use in source and binary forms, with or without modification, are
   263                           ; permitted provided that the following conditions are met:
   264                           ; 
   265                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   266                           ;        conditions and the following disclaimer.
   267                           ; 
   268                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   269                           ;        of conditions and the following disclaimer in the documentation and/or other
   270                           ;        materials provided with the distribution. Publication is not required when
   271                           ;        this file is used in an embedded application.
   272                           ; 
   273                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   274                           ;        software without specific prior written permission.
   275                           ; 
   276                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   277                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   278                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   279                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   280                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   281                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   282                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   283                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   284                           ; 
   285                           ; 
   286                           ; Code-generator required, PIC18F26K80 Definitions
   287                           ; 
   288                           ; SFR Addresses
   289   000000                     
   290                           	psect	eeprom_data
   291   F003FF                     	org	1023	;# 
   292   F003FF  00                 	db	0	;# 
   293   000000                     _eventTable_absaddr	set	61312
   294                           
   295                           	psect	mediumconst
   296   00ED34                     __pmediumconst:
   297                           	callstack 0
   298   00ED34  00                 	db	0
   299   00ED35                     _priorities:
   300                           	callstack 0
   301   00ED35  01                 	db	1
   302   00ED36  01                 	db	1
   303   00ED37  03                 	db	3
   304   00ED38  02                 	db	2
   305   00ED39  02                 	db	2
   306   00ED3A  02                 	db	2
   307   00ED3B  02                 	db	2
   308   00ED3C  03                 	db	3
   309   00ED3D  02                 	db	2
   310   00ED3E  02                 	db	2
   311   00ED3F  03                 	db	3
   312   00ED40  01                 	db	1
   313   00ED41  00                 	db	0
   314   00ED42  00                 	db	0
   315   00ED43  01                 	db	1
   316   00ED44  01                 	db	1
   317   00ED45  01                 	db	1
   318   00ED46  01                 	db	1
   319   00ED47  01                 	db	1
   320   00ED48  01                 	db	1
   321   00ED49  01                 	db	1
   322   00ED4A  01                 	db	1
   323   00ED4B  01                 	db	1
   324   00ED4C  01                 	db	1
   325   00ED4D  01                 	db	1
   326   00ED4E  01                 	db	1
   327   00ED4F  01                 	db	1
   328   00ED50  01                 	db	1
   329   00ED51  01                 	db	1
   330   00ED52  01                 	db	1
   331   00ED53  01                 	db	1
   332   00ED54  01                 	db	1
   333   00ED55  01                 	db	1
   334   00ED56  01                 	db	1
   335   00ED57  01                 	db	1
   336   00ED58  01                 	db	1
   337   00ED59  01                 	db	1
   338   00ED5A  01                 	db	1
   339   00ED5B  01                 	db	1
   340   00ED5C  01                 	db	1
   341   00ED5D  01                 	db	1
   342   00ED5E  01                 	db	1
   343   00ED5F  01                 	db	1
   344   00ED60  01                 	db	1
   345   00ED61  01                 	db	1
   346   00ED62  01                 	db	1
   347   00ED63  01                 	db	1
   348   00ED64  01                 	db	1
   349   00ED65  01                 	db	1
   350   00ED66  01                 	db	1
   351   00ED67  01                 	db	1
   352   00ED68  01                 	db	1
   353   00ED69  01                 	db	1
   354   00ED6A  01                 	db	1
   355   00ED6B  01                 	db	1
   356   00ED6C  01                 	db	1
   357   00ED6D  01                 	db	1
   358   00ED6E  01                 	db	1
   359   00ED6F  01                 	db	1
   360   00ED70  01                 	db	1
   361   00ED71  01                 	db	1
   362   00ED72  01                 	db	1
   363   00ED73  01                 	db	1
   364   00ED74  00                 	db	0
   365   00ED75  01                 	db	1
   366   00ED76  01                 	db	1
   367   00ED77  01                 	db	1
   368   00ED78  01                 	db	1
   369   00ED79  01                 	db	1
   370   00ED7A  01                 	db	1
   371   00ED7B  01                 	db	1
   372   00ED7C  01                 	db	1
   373   00ED7D  01                 	db	1
   374   00ED7E  00                 	db	0
   375   00ED7F  01                 	db	1
   376   00ED80  01                 	db	1
   377   00ED81  00                 	db	0
   378   00ED82  00                 	db	0
   379   00ED83  00                 	db	0
   380   00ED84  00                 	db	0
   381   00ED85  00                 	db	0
   382   00ED86  00                 	db	0
   383   00ED87  00                 	db	0
   384   00ED88  00                 	db	0
   385   00ED89  00                 	db	0
   386   00ED8A  00                 	db	0
   387   00ED8B  00                 	db	0
   388   00ED8C  00                 	db	0
   389   00ED8D  00                 	db	0
   390   00ED8E  00                 	db	0
   391   00ED8F  00                 	db	0
   392   00ED90  00                 	db	0
   393   00ED91  00                 	db	0
   394   00ED92  01                 	db	1
   395   00ED93  01                 	db	1
   396   00ED94  01                 	db	1
   397   00ED95  01                 	db	1
   398   00ED96  01                 	db	1
   399   00ED97  03                 	db	3
   400   00ED98  01                 	db	1
   401   00ED99  01                 	db	1
   402   00ED9A  01                 	db	1
   403   00ED9B  01                 	db	1
   404   00ED9C  01                 	db	1
   405   00ED9D  01                 	db	1
   406   00ED9E  01                 	db	1
   407   00ED9F  01                 	db	1
   408   00EDA0  00                 	db	0
   409   00EDA1  00                 	db	0
   410   00EDA2  00                 	db	0
   411   00EDA3  00                 	db	0
   412   00EDA4  00                 	db	0
   413   00EDA5  00                 	db	0
   414   00EDA6  00                 	db	0
   415   00EDA7  00                 	db	0
   416   00EDA8  01                 	db	1
   417   00EDA9  00                 	db	0
   418   00EDAA  01                 	db	1
   419   00EDAB  01                 	db	1
   420   00EDAC  01                 	db	1
   421   00EDAD  01                 	db	1
   422   00EDAE  01                 	db	1
   423   00EDAF  01                 	db	1
   424   00EDB0  00                 	db	0
   425   00EDB1  01                 	db	1
   426   00EDB2  01                 	db	1
   427   00EDB3  01                 	db	1
   428   00EDB4  01                 	db	1
   429   00EDB5  01                 	db	1
   430   00EDB6  01                 	db	1
   431   00EDB7  01                 	db	1
   432   00EDB8  00                 	db	0
   433   00EDB9  01                 	db	1
   434   00EDBA  01                 	db	1
   435   00EDBB  01                 	db	1
   436   00EDBC  01                 	db	1
   437   00EDBD  01                 	db	1
   438   00EDBE  01                 	db	1
   439   00EDBF  00                 	db	0
   440   00EDC0  01                 	db	1
   441   00EDC1  00                 	db	0
   442   00EDC2  00                 	db	0
   443   00EDC3  00                 	db	0
   444   00EDC4  00                 	db	0
   445   00EDC5  00                 	db	0
   446   00EDC6  00                 	db	0
   447   00EDC7  00                 	db	0
   448   00EDC8  00                 	db	0
   449   00EDC9  00                 	db	0
   450   00EDCA  00                 	db	0
   451   00EDCB  00                 	db	0
   452   00EDCC  00                 	db	0
   453   00EDCD  00                 	db	0
   454   00EDCE  00                 	db	0
   455   00EDCF  00                 	db	0
   456   00EDD0  00                 	db	0
   457   00EDD1  01                 	db	1
   458   00EDD2  01                 	db	1
   459   00EDD3  01                 	db	1
   460   00EDD4  01                 	db	1
   461   00EDD5  01                 	db	1
   462   00EDD6  01                 	db	1
   463   00EDD7  01                 	db	1
   464   00EDD8  01                 	db	1
   465   00EDD9  01                 	db	1
   466   00EDDA  01                 	db	1
   467   00EDDB  01                 	db	1
   468   00EDDC  00                 	db	0
   469   00EDDD  00                 	db	0
   470   00EDDE  01                 	db	1
   471   00EDDF  01                 	db	1
   472   00EDE0  00                 	db	0
   473   00EDE1  00                 	db	0
   474   00EDE2  00                 	db	0
   475   00EDE3  00                 	db	0
   476   00EDE4  00                 	db	0
   477   00EDE5  00                 	db	0
   478   00EDE6  00                 	db	0
   479   00EDE7  00                 	db	0
   480   00EDE8  01                 	db	1
   481   00EDE9  00                 	db	0
   482   00EDEA  00                 	db	0
   483   00EDEB  01                 	db	1
   484   00EDEC  01                 	db	1
   485   00EDED  01                 	db	1
   486   00EDEE  00                 	db	0
   487   00EDEF  00                 	db	0
   488   00EDF0  00                 	db	0
   489   00EDF1  01                 	db	1
   490   00EDF2  01                 	db	1
   491   00EDF3  01                 	db	1
   492   00EDF4  01                 	db	1
   493   00EDF5  01                 	db	1
   494   00EDF6  01                 	db	1
   495   00EDF7  01                 	db	1
   496   00EDF8  00                 	db	0
   497   00EDF9  01                 	db	1
   498   00EDFA  01                 	db	1
   499   00EDFB  01                 	db	1
   500   00EDFC  01                 	db	1
   501   00EDFD  01                 	db	1
   502   00EDFE  01                 	db	1
   503   00EDFF  01                 	db	1
   504   00EE00  01                 	db	1
   505   00EE01  00                 	db	0
   506   00EE02  00                 	db	0
   507   00EE03  00                 	db	0
   508   00EE04  00                 	db	0
   509   00EE05  00                 	db	0
   510   00EE06  00                 	db	0
   511   00EE07  01                 	db	1
   512   00EE08  01                 	db	1
   513   00EE09  00                 	db	0
   514   00EE0A  00                 	db	0
   515   00EE0B  01                 	db	1
   516   00EE0C  01                 	db	1
   517   00EE0D  01                 	db	1
   518   00EE0E  00                 	db	0
   519   00EE0F  00                 	db	0
   520   00EE10  00                 	db	0
   521   00EE11  01                 	db	1
   522   00EE12  01                 	db	1
   523   00EE13  00                 	db	0
   524   00EE14  01                 	db	1
   525   00EE15  01                 	db	1
   526   00EE16  01                 	db	1
   527   00EE17  00                 	db	0
   528   00EE18  00                 	db	0
   529   00EE19  01                 	db	1
   530   00EE1A  00                 	db	0
   531   00EE1B  01                 	db	1
   532   00EE1C  01                 	db	1
   533   00EE1D  01                 	db	1
   534   00EE1E  01                 	db	1
   535   00EE1F  01                 	db	1
   536   00EE20  00                 	db	0
   537   00EE21  00                 	db	0
   538   00EE22  00                 	db	0
   539   00EE23  00                 	db	0
   540   00EE24  00                 	db	0
   541   00EE25  00                 	db	0
   542   00EE26  00                 	db	0
   543   00EE27  00                 	db	0
   544   00EE28  00                 	db	0
   545   00EE29  00                 	db	0
   546   00EE2A  00                 	db	0
   547   00EE2B  00                 	db	0
   548   00EE2C  00                 	db	0
   549   00EE2D  00                 	db	0
   550   00EE2E  00                 	db	0
   551   00EE2F  01                 	db	1
   552   00EE30  00                 	db	0
   553   00EE31  00                 	db	0
   554   00EE32  00                 	db	0
   555   00EE33  00                 	db	0
   556   00EE34  00                 	db	0
   557   00EE35                     __end_of_priorities:
   558                           	callstack 0
   559   00EE35                     _configs:
   560                           	callstack 0
   561   00EE35  0B                 	db	11
   562   00EE36  43                 	db	67
   563   00EE37  00                 	db	0
   564   00EE38  FF                 	db	255
   565   00EE39  0C                 	db	12
   566   00EE3A  43                 	db	67
   567   00EE3B  01                 	db	1
   568   00EE3C  FF                 	db	255
   569   00EE3D  0D                 	db	13
   570   00EE3E  43                 	db	67
   571   00EE3F  02                 	db	2
   572   00EE40  FF                 	db	255
   573   00EE41  0E                 	db	14
   574   00EE42  43                 	db	67
   575   00EE43  03                 	db	3
   576   00EE44  FF                 	db	255
   577   00EE45  0F                 	db	15
   578   00EE46  43                 	db	67
   579   00EE47  04                 	db	4
   580   00EE48  FF                 	db	255
   581   00EE49  10                 	db	16
   582   00EE4A  43                 	db	67
   583   00EE4B  05                 	db	5
   584   00EE4C  FF                 	db	255
   585   00EE4D  11                 	db	17
   586   00EE4E  43                 	db	67
   587   00EE4F  06                 	db	6
   588   00EE50  FF                 	db	255
   589   00EE51  12                 	db	18
   590   00EE52  43                 	db	67
   591   00EE53  07                 	db	7
   592   00EE54  FF                 	db	255
   593   00EE55  15                 	db	21
   594   00EE56  42                 	db	66
   595   00EE57  00                 	db	0
   596   00EE58  0A                 	db	10
   597   00EE59  16                 	db	22
   598   00EE5A  42                 	db	66
   599   00EE5B  01                 	db	1
   600   00EE5C  08                 	db	8
   601   00EE5D  19                 	db	25
   602   00EE5E  42                 	db	66
   603   00EE5F  04                 	db	4
   604   00EE60  09                 	db	9
   605   00EE61  1A                 	db	26
   606   00EE62  42                 	db	66
   607   00EE63  05                 	db	5
   608   00EE64  FF                 	db	255
   609   00EE65  03                 	db	3
   610   00EE66  41                 	db	65
   611   00EE67  01                 	db	1
   612   00EE68  01                 	db	1
   613   00EE69  02                 	db	2
   614   00EE6A  41                 	db	65
   615   00EE6B  00                 	db	0
   616   00EE6C  00                 	db	0
   617   00EE6D  05                 	db	5
   618   00EE6E  41                 	db	65
   619   00EE6F  03                 	db	3
   620   00EE70  03                 	db	3
   621   00EE71  07                 	db	7
   622   00EE72  41                 	db	65
   623   00EE73  05                 	db	5
   624   00EE74  04                 	db	4
   625   00EE75                     __end_of_configs:
   626                           	callstack 0
   627   000000                     _paramBlock_absaddr	set	2080
   628   00EE75                     _services:
   629                           	callstack 0
   630   00EE75  69                 	db	low _canService
   631   00EE76  EF                 	db	high _canService
   632   00EE77  57                 	db	low _mnsService
   633   00EE78  EF                 	db	high _mnsService
   634   00EE79  45                 	db	low _nvService
   635   00EE7A  EF                 	db	high _nvService
   636   00EE7B  33                 	db	low _bootService
   637   00EE7C  EF                 	db	high _bootService
   638   00EE7D  21                 	db	low _eventTeachService
   639   00EE7E  EF                 	db	high _eventTeachService
   640   00EE7F  0F                 	db	low _eventConsumer2QService
   641   00EE80  EF                 	db	high _eventConsumer2QService
   642   00EE81  FD                 	db	low _eventProducerService
   643   00EE82  EE                 	db	high _eventProducerService
   644   00EE83  EB                 	db	low _eventCoeService
   645   00EE84  EE                 	db	high _eventCoeService
   646   00EE85  D9                 	db	low _eventAckService
   647   00EE86  EE                 	db	high _eventAckService
   648   00EE87                     __end_of_services:
   649                           	callstack 0
   650   000000                     _name_absaddr	set	2120
   651   00EE87                     _canPri:
   652                           	callstack 0
   653   00EE87  70                 	db	112
   654   00EE88  60                 	db	96
   655   00EE89  50                 	db	80
   656   00EE8A  40                 	db	64
   657   00EE8B  00                 	db	0
   658   00EE8C                     __end_of_canPri:
   659                           	callstack 0
   660   00EE8C                     _channelDefaultNVs:
   661                           	callstack 0
   662   00EE8C  00                 	db	0
   663   00EE8D  06                 	db	6
   664   00EE8E  04                 	db	4
   665   00EE8F  04                 	db	4
   666   00EE90  00                 	db	0
   667   00EE91  00                 	db	0
   668   00EE92  00                 	db	0
   669   00EE93  01                 	db	1
   670   00EE94  06                 	db	6
   671   00EE95  00                 	db	0
   672   00EE96  00                 	db	0
   673   00EE97  00                 	db	0
   674   00EE98  00                 	db	0
   675   00EE99  00                 	db	0
   676   00EE9A  02                 	db	2
   677   00EE9B  06                 	db	6
   678   00EE9C  80                 	db	128
   679   00EE9D  80                 	db	128
   680   00EE9E  EB                 	db	235
   681   00EE9F  EB                 	db	235
   682   00EEA0  00                 	db	0
   683   00EEA1  03                 	db	3
   684   00EEA2  06                 	db	6
   685   00EEA3  80                 	db	128
   686   00EEA4  7F                 	db	127
   687   00EEA5  40                 	db	64
   688   00EEA6  03                 	db	3
   689   00EEA7  3C                 	db	60
   690   00EEA8  04                 	db	4
   691   00EEA9  06                 	db	6
   692   00EEAA  03                 	db	3
   693   00EEAB  80                 	db	128
   694   00EEAC  80                 	db	128
   695   00EEAD  80                 	db	128
   696   00EEAE  00                 	db	0
   697   00EEAF  05                 	db	5
   698   00EEB0  06                 	db	6
   699   00EEB1  80                 	db	128
   700   00EEB2  10                 	db	16
   701   00EEB3  00                 	db	0
   702   00EEB4  00                 	db	0
   703   00EEB5  00                 	db	0
   704   00EEB6  06                 	db	6
   705   00EEB7  06                 	db	6
   706   00EEB8  00                 	db	0
   707   00EEB9  7B                 	db	123
   708   00EEBA  20                 	db	32
   709   00EEBB  07                 	db	7
   710   00EEBC  FF                 	db	255
   711   00EEBD  07                 	db	7
   712   00EEBE  06                 	db	6
   713   00EEBF  05                 	db	5
   714   00EEC0  00                 	db	0
   715   00EEC1  00                 	db	0
   716   00EEC2  00                 	db	0
   717   00EEC3  00                 	db	0
   718   00EEC4  08                 	db	8
   719   00EEC5  00                 	db	0
   720   00EEC6  00                 	db	0
   721   00EEC7  00                 	db	0
   722   00EEC8  00                 	db	0
   723   00EEC9  00                 	db	0
   724   00EECA  00                 	db	0
   725   00EECB  00                 	db	0
   726   00EECC  00                 	db	0
   727   00EECD  00                 	db	0
   728   00EECE  00                 	db	0
   729   00EECF  00                 	db	0
   730   00EED0  00                 	db	0
   731   00EED1  00                 	db	0
   732   00EED2  00                 	db	0
   733   00EED3  00                 	db	0
   734   00EED4  00                 	db	0
   735   00EED5  00                 	db	0
   736   00EED6  00                 	db	0
   737   00EED7  00                 	db	0
   738   00EED8  00                 	db	0
   739   00EED9                     __end_of_channelDefaultNVs:
   740                           	callstack 0
   741   00EED9                     _eventAckService:
   742                           	callstack 0
   743   00EED9  09                 	db	9
   744   00EEDA  01                 	db	1
   745   00EEDB  00                 	db	0
   746   00EEDC  00                 	db	0
   747   00EEDD  90                 	db	low _ackPowerUp
   748   00EEDE  C0                 	db	high _ackPowerUp
   749   00EEDF  74                 	db	low _ackEventProcessMessage
   750   00EEE0  65                 	db	high _ackEventProcessMessage
   751   00EEE1  00                 	db	0
   752   00EEE2  00                 	db	0
   753   00EEE3  00                 	db	0
   754   00EEE4  00                 	db	0
   755   00EEE5  00                 	db	0
   756   00EEE6  00                 	db	0
   757   00EEE7  00                 	db	0
   758   00EEE8  00                 	db	0
   759   00EEE9  78                 	db	low _ackGetDiagnostic
   760   00EEEA  BC                 	db	high _ackGetDiagnostic
   761   00EEEB                     __end_of_eventAckService:
   762                           	callstack 0
   763   00EEEB                     _eventCoeService:
   764                           	callstack 0
   765   00EEEB  08                 	db	8
   766   00EEEC  01                 	db	1
   767   00EEED  00                 	db	0
   768   00EEEE  00                 	db	0
   769   00EEEF  00                 	db	0
   770   00EEF0  00                 	db	0
   771   00EEF1  00                 	db	0
   772   00EEF2  00                 	db	0
   773   00EEF3  00                 	db	0
   774   00EEF4  00                 	db	0
   775   00EEF5  00                 	db	0
   776   00EEF6  00                 	db	0
   777   00EEF7  00                 	db	0
   778   00EEF8  00                 	db	0
   779   00EEF9  00                 	db	0
   780   00EEFA  00                 	db	0
   781   00EEFB  00                 	db	0
   782   00EEFC  00                 	db	0
   783   00EEFD                     __end_of_eventCoeService:
   784                           	callstack 0
   785   00EEFD                     _eventProducerService:
   786                           	callstack 0
   787   00EEFD  05                 	db	5
   788   00EEFE  01                 	db	1
   789   00EEFF  00                 	db	0
   790   00EF00  00                 	db	0
   791   00EF01  6C                 	db	low _producerPowerUp
   792   00EF02  C0                 	db	high _producerPowerUp
   793   00EF03  50                 	db	low _producerProcessMessage
   794   00EF04  5C                 	db	high _producerProcessMessage
   795   00EF05  00                 	db	0
   796   00EF06  00                 	db	0
   797   00EF07  00                 	db	0
   798   00EF08  00                 	db	0
   799   00EF09  00                 	db	0
   800   00EF0A  00                 	db	0
   801   00EF0B  66                 	db	low _producerEsdData
   802   00EF0C  C1                 	db	high _producerEsdData
   803   00EF0D  A0                 	db	low _producerGetDiagnostic
   804   00EF0E  BB                 	db	high _producerGetDiagnostic
   805   00EF0F                     __end_of_eventProducerService:
   806                           	callstack 0
   807   00EF0F                     _eventConsumer2QService:
   808                           	callstack 0
   809   00EF0F  06                 	db	6
   810   00EF10  01                 	db	1
   811   00EF11  00                 	db	0
   812   00EF12  00                 	db	0
   813   00EF13  AA                 	db	low _consumer2QPowerUp
   814   00EF14  C2                 	db	high _consumer2QPowerUp
   815   00EF15  1C                 	db	low _consumer2QProcessMessage
   816   00EF16  35                 	db	high _consumer2QProcessMessage
   817   00EF17  00                 	db	0
   818   00EF18  00                 	db	0
   819   00EF19  00                 	db	0
   820   00EF1A  00                 	db	0
   821   00EF1B  00                 	db	0
   822   00EF1C  00                 	db	0
   823   00EF1D  86                 	db	low _consumer2QEsdData
   824   00EF1E  C1                 	db	high _consumer2QEsdData
   825   00EF1F  AE                 	db	low _consumer2QGetDiagnostic
   826   00EF20  BC                 	db	high _consumer2QGetDiagnostic
   827   00EF21                     __end_of_eventConsumer2QService:
   828                           	callstack 0
   829   00EF21                     _eventTeachService:
   830                           	callstack 0
   831   00EF21  04                 	db	4
   832   00EF22  01                 	db	1
   833   00EF23  CE                 	db	low _teachFactoryReset
   834   00EF24  C3                 	db	high _teachFactoryReset
   835   00EF25  4E                 	db	low _teachPowerUp
   836   00EF26  BF                 	db	high _teachPowerUp
   837   00EF27  00                 	db	low _teachProcessMessage
   838   00EF28  22                 	db	high _teachProcessMessage
   839   00EF29  00                 	db	0
   840   00EF2A  00                 	db	0
   841   00EF2B  00                 	db	0
   842   00EF2C  00                 	db	0
   843   00EF2D  00                 	db	0
   844   00EF2E  00                 	db	0
   845   00EF2F  D8                 	db	low _teachGetESDdata
   846   00EF30  C0                 	db	high _teachGetESDdata
   847   00EF31  E4                 	db	low _teachGetDiagnostic
   848   00EF32  BC                 	db	high _teachGetDiagnostic
   849   00EF33                     __end_of_eventTeachService:
   850                           	callstack 0
   851   00EF33                     _bootService:
   852                           	callstack 0
   853   00EF33  0A                 	db	10
   854   00EF34  01                 	db	1
   855   00EF35  00                 	db	0
   856   00EF36  00                 	db	0
   857   00EF37  00                 	db	0
   858   00EF38  00                 	db	0
   859   00EF39  F4                 	db	low _bootProcessMessage
   860   00EF3A  9E                 	db	high _bootProcessMessage
   861   00EF3B  00                 	db	0
   862   00EF3C  00                 	db	0
   863   00EF3D  00                 	db	0
   864   00EF3E  00                 	db	0
   865   00EF3F  00                 	db	0
   866   00EF40  00                 	db	0
   867   00EF41  00                 	db	0
   868   00EF42  00                 	db	0
   869   00EF43  00                 	db	0
   870   00EF44  00                 	db	0
   871   00EF45                     __end_of_bootService:
   872                           	callstack 0
   873   00EF45                     _nvService:
   874                           	callstack 0
   875   00EF45  02                 	db	2
   876   00EF46  01                 	db	1
   877   00EF47  80                 	db	low _nvFactoryReset
   878   00EF48  BA                 	db	high _nvFactoryReset
   879   00EF49  CC                 	db	low _nvPowerUp
   880   00EF4A  BF                 	db	high _nvPowerUp
   881   00EF4B  00                 	db	low _nvProcessMessage
   882   00EF4C  46                 	db	high _nvProcessMessage
   883   00EF4D  00                 	db	0
   884   00EF4E  00                 	db	0
   885   00EF4F  00                 	db	0
   886   00EF50  00                 	db	0
   887   00EF51  00                 	db	0
   888   00EF52  00                 	db	0
   889   00EF53  76                 	db	low _nvGetESDdata
   890   00EF54  C2                 	db	high _nvGetESDdata
   891   00EF55  0C                 	db	low _nvGetDiagnostic
   892   00EF56  BC                 	db	high _nvGetDiagnostic
   893   00EF57                     __end_of_nvService:
   894                           	callstack 0
   895   00EF57                     _mnsService:
   896                           	callstack 0
   897   00EF57  01                 	db	1
   898   00EF58  01                 	db	1
   899   00EF59  0C                 	db	low _mnsFactoryReset
   900   00EF5A  AA                 	db	high _mnsFactoryReset
   901   00EF5B  A4                 	db	low _mnsPowerUp
   902   00EF5C  7D                 	db	high _mnsPowerUp
   903   00EF5D  CE                 	db	low _mnsProcessMessage
   904   00EF5E  16                 	db	high _mnsProcessMessage
   905   00EF5F  D0                 	db	low _mnsPoll
   906   00EF60  42                 	db	high _mnsPoll
   907   00EF61  00                 	db	0
   908   00EF62  00                 	db	0
   909   00EF63  1C                 	db	low _mnsLowIsr
   910   00EF64  C3                 	db	high _mnsLowIsr
   911   00EF65  00                 	db	0
   912   00EF66  00                 	db	0
   913   00EF67  42                 	db	low _mnsGetDiagnostic
   914   00EF68  BC                 	db	high _mnsGetDiagnostic
   915   00EF69                     __end_of_mnsService:
   916                           	callstack 0
   917   00EF69                     _canService:
   918                           	callstack 0
   919   00EF69  03                 	db	3
   920   00EF6A  01                 	db	1
   921   00EF6B  06                 	db	low _canFactoryReset
   922   00EF6C  C2                 	db	high _canFactoryReset
   923   00EF6D  8A                 	db	low _canPowerUp
   924   00EF6E  6E                 	db	high _canPowerUp
   925   00EF6F  94                 	db	low _canProcessMessage
   926   00EF70  99                 	db	high _canProcessMessage
   927   00EF71  00                 	db	0
   928   00EF72  00                 	db	0
   929   00EF73  C6                 	db	low _canIsr
   930   00EF74  C1                 	db	high _canIsr
   931   00EF75  C6                 	db	low _canIsr
   932   00EF76  C1                 	db	high _canIsr
   933   00EF77  5C                 	db	low _canEsdData
   934   00EF78  C2                 	db	high _canEsdData
   935   00EF79  D6                 	db	low _canGetDiagnostic
   936   00EF7A  BB                 	db	high _canGetDiagnostic
   937   00EF7B                     __end_of_canService:
   938                           	callstack 0
   939   00EF7B                     _canTransport:
   940                           	callstack 0
   941   00EF7B  EA                 	db	low _canSendMessage
   942   00EF7C  4E                 	db	high _canSendMessage
   943   00EF7D  44                 	db	low _canReceiveMessage
   944   00EF7E  69                 	db	high _canReceiveMessage
   945   00EF7F                     __end_of_canTransport:
   946                           	callstack 0
   947   000000                     _eventTable_absaddr	set	61312
   948   00EF7F  00                 	db	0	; dummy byte at the end
   949   000000                     
   950                           	psect	_eventTable_text
   951   00EF80                     __p_eventTable_text:
   952                           	callstack 0
   953   00EF80                     _eventTable:
   954                           	callstack 0
   955   00EF80  FF                 	db	255
   956   00EF81  FF                 	db	255
   957   00EF82  FF                 	db	255
   958   00EF83  FF                 	db	255
   959   00EF84  FF                 	db	255
   960   00EF85  FF                 	db	255
   961   00EF86  FF                 	db	255
   962   00EF87  FF                 	db	255
   963   00EF88  FF                 	db	255
   964   00EF89  FF                 	db	255
   965   00EF8A  FF                 	db	255
   966   00EF8B  FF                 	db	255
   967   00EF8C  FF                 	db	255
   968   00EF8D  FF                 	db	255
   969   00EF8E  FF                 	db	255
   970   00EF8F  FF                 	db	255
   971   00EF90  FF                 	db	255
   972   00EF91  FF                 	db	255
   973   00EF92  FF                 	db	255
   974   00EF93  FF                 	db	255
   975   00EF94  FF                 	db	255
   976   00EF95  FF                 	db	255
   977   00EF96  FF                 	db	255
   978   00EF97  FF                 	db	255
   979   00EF98  FF                 	db	255
   980   00EF99  FF                 	db	255
   981   00EF9A  FF                 	db	255
   982   00EF9B  FF                 	db	255
   983   00EF9C  FF                 	db	255
   984   00EF9D  FF                 	db	255
   985   00EF9E  FF                 	db	255
   986   00EF9F  FF                 	db	255
   987   00EFA0  FF                 	db	255
   988   00EFA1  FF                 	db	255
   989   00EFA2  FF                 	db	255
   990   00EFA3  FF                 	db	255
   991   00EFA4  FF                 	db	255
   992   00EFA5  FF                 	db	255
   993   00EFA6  FF                 	db	255
   994   00EFA7  FF                 	db	255
   995   00EFA8  FF                 	db	255
   996   00EFA9  FF                 	db	255
   997   00EFAA  FF                 	db	255
   998   00EFAB  FF                 	db	255
   999   00EFAC  FF                 	db	255
  1000   00EFAD  FF                 	db	255
  1001   00EFAE  FF                 	db	255
  1002   00EFAF  FF                 	db	255
  1003   00EFB0  FF                 	db	255
  1004   00EFB1  FF                 	db	255
  1005   00EFB2  FF                 	db	255
  1006   00EFB3  FF                 	db	255
  1007   00EFB4  FF                 	db	255
  1008   00EFB5  FF                 	db	255
  1009   00EFB6  FF                 	db	255
  1010   00EFB7  FF                 	db	255
  1011   00EFB8  FF                 	db	255
  1012   00EFB9  FF                 	db	255
  1013   00EFBA  FF                 	db	255
  1014   00EFBB  FF                 	db	255
  1015   00EFBC  FF                 	db	255
  1016   00EFBD  FF                 	db	255
  1017   00EFBE  FF                 	db	255
  1018   00EFBF  FF                 	db	255
  1019   00EFC0  FF                 	db	255
  1020   00EFC1  FF                 	db	255
  1021   00EFC2  FF                 	db	255
  1022   00EFC3  FF                 	db	255
  1023   00EFC4  FF                 	db	255
  1024   00EFC5  FF                 	db	255
  1025   00EFC6  FF                 	db	255
  1026   00EFC7  FF                 	db	255
  1027   00EFC8  FF                 	db	255
  1028   00EFC9  FF                 	db	255
  1029   00EFCA  FF                 	db	255
  1030   00EFCB  FF                 	db	255
  1031   00EFCC  FF                 	db	255
  1032   00EFCD  FF                 	db	255
  1033   00EFCE  FF                 	db	255
  1034   00EFCF  FF                 	db	255
  1035   00EFD0  FF                 	db	255
  1036   00EFD1  FF                 	db	255
  1037   00EFD2  FF                 	db	255
  1038   00EFD3  FF                 	db	255
  1039   00EFD4  FF                 	db	255
  1040   00EFD5  FF                 	db	255
  1041   00EFD6  FF                 	db	255
  1042   00EFD7  FF                 	db	255
  1043   00EFD8  FF                 	db	255
  1044   00EFD9  FF                 	db	255
  1045   00EFDA  FF                 	db	255
  1046   00EFDB  FF                 	db	255
  1047   00EFDC  FF                 	db	255
  1048   00EFDD  FF                 	db	255
  1049   00EFDE  FF                 	db	255
  1050   00EFDF  FF                 	db	255
  1051   00EFE0  FF                 	db	255
  1052   00EFE1  FF                 	db	255
  1053   00EFE2  FF                 	db	255
  1054   00EFE3  FF                 	db	255
  1055   00EFE4  FF                 	db	255
  1056   00EFE5  FF                 	db	255
  1057   00EFE6  FF                 	db	255
  1058   00EFE7  FF                 	db	255
  1059   00EFE8  FF                 	db	255
  1060   00EFE9  FF                 	db	255
  1061   00EFEA  FF                 	db	255
  1062   00EFEB  FF                 	db	255
  1063   00EFEC  FF                 	db	255
  1064   00EFED  FF                 	db	255
  1065   00EFEE  FF                 	db	255
  1066   00EFEF  FF                 	db	255
  1067   00EFF0  FF                 	db	255
  1068   00EFF1  FF                 	db	255
  1069   00EFF2  FF                 	db	255
  1070   00EFF3  FF                 	db	255
  1071   00EFF4  FF                 	db	255
  1072   00EFF5  FF                 	db	255
  1073   00EFF6  FF                 	db	255
  1074   00EFF7  FF                 	db	255
  1075   00EFF8  FF                 	db	255
  1076   00EFF9  FF                 	db	255
  1077   00EFFA  FF                 	db	255
  1078   00EFFB  FF                 	db	255
  1079   00EFFC  FF                 	db	255
  1080   00EFFD  FF                 	db	255
  1081   00EFFE  FF                 	db	255
  1082   00EFFF  FF                 	db	255
  1083   00F000  FF                 	db	255
  1084   00F001  FF                 	db	255
  1085   00F002  FF                 	db	255
  1086   00F003  FF                 	db	255
  1087   00F004  FF                 	db	255
  1088   00F005  FF                 	db	255
  1089   00F006  FF                 	db	255
  1090   00F007  FF                 	db	255
  1091   00F008  FF                 	db	255
  1092   00F009  FF                 	db	255
  1093   00F00A  FF                 	db	255
  1094   00F00B  FF                 	db	255
  1095   00F00C  FF                 	db	255
  1096   00F00D  FF                 	db	255
  1097   00F00E  FF                 	db	255
  1098   00F00F  FF                 	db	255
  1099   00F010  FF                 	db	255
  1100   00F011  FF                 	db	255
  1101   00F012  FF                 	db	255
  1102   00F013  FF                 	db	255
  1103   00F014  FF                 	db	255
  1104   00F015  FF                 	db	255
  1105   00F016  FF                 	db	255
  1106   00F017  FF                 	db	255
  1107   00F018  FF                 	db	255
  1108   00F019  FF                 	db	255
  1109   00F01A  FF                 	db	255
  1110   00F01B  FF                 	db	255
  1111   00F01C  FF                 	db	255
  1112   00F01D  FF                 	db	255
  1113   00F01E  FF                 	db	255
  1114   00F01F  FF                 	db	255
  1115   00F020  FF                 	db	255
  1116   00F021  FF                 	db	255
  1117   00F022  FF                 	db	255
  1118   00F023  FF                 	db	255
  1119   00F024  FF                 	db	255
  1120   00F025  FF                 	db	255
  1121   00F026  FF                 	db	255
  1122   00F027  FF                 	db	255
  1123   00F028  FF                 	db	255
  1124   00F029  FF                 	db	255
  1125   00F02A  FF                 	db	255
  1126   00F02B  FF                 	db	255
  1127   00F02C  FF                 	db	255
  1128   00F02D  FF                 	db	255
  1129   00F02E  FF                 	db	255
  1130   00F02F  FF                 	db	255
  1131   00F030  FF                 	db	255
  1132   00F031  FF                 	db	255
  1133   00F032  FF                 	db	255
  1134   00F033  FF                 	db	255
  1135   00F034  FF                 	db	255
  1136   00F035  FF                 	db	255
  1137   00F036  FF                 	db	255
  1138   00F037  FF                 	db	255
  1139   00F038  FF                 	db	255
  1140   00F039  FF                 	db	255
  1141   00F03A  FF                 	db	255
  1142   00F03B  FF                 	db	255
  1143   00F03C  FF                 	db	255
  1144   00F03D  FF                 	db	255
  1145   00F03E  FF                 	db	255
  1146   00F03F  FF                 	db	255
  1147   00F040  FF                 	db	255
  1148   00F041  FF                 	db	255
  1149   00F042  FF                 	db	255
  1150   00F043  FF                 	db	255
  1151   00F044  FF                 	db	255
  1152   00F045  FF                 	db	255
  1153   00F046  FF                 	db	255
  1154   00F047  FF                 	db	255
  1155   00F048  FF                 	db	255
  1156   00F049  FF                 	db	255
  1157   00F04A  FF                 	db	255
  1158   00F04B  FF                 	db	255
  1159   00F04C  FF                 	db	255
  1160   00F04D  FF                 	db	255
  1161   00F04E  FF                 	db	255
  1162   00F04F  FF                 	db	255
  1163   00F050  FF                 	db	255
  1164   00F051  FF                 	db	255
  1165   00F052  FF                 	db	255
  1166   00F053  FF                 	db	255
  1167   00F054  FF                 	db	255
  1168   00F055  FF                 	db	255
  1169   00F056  FF                 	db	255
  1170   00F057  FF                 	db	255
  1171   00F058  FF                 	db	255
  1172   00F059  FF                 	db	255
  1173   00F05A  FF                 	db	255
  1174   00F05B  FF                 	db	255
  1175   00F05C  FF                 	db	255
  1176   00F05D  FF                 	db	255
  1177   00F05E  FF                 	db	255
  1178   00F05F  FF                 	db	255
  1179   00F060  FF                 	db	255
  1180   00F061  FF                 	db	255
  1181   00F062  FF                 	db	255
  1182   00F063  FF                 	db	255
  1183   00F064  FF                 	db	255
  1184   00F065  FF                 	db	255
  1185   00F066  FF                 	db	255
  1186   00F067  FF                 	db	255
  1187   00F068  FF                 	db	255
  1188   00F069  FF                 	db	255
  1189   00F06A  FF                 	db	255
  1190   00F06B  FF                 	db	255
  1191   00F06C  FF                 	db	255
  1192   00F06D  FF                 	db	255
  1193   00F06E  FF                 	db	255
  1194   00F06F  FF                 	db	255
  1195   00F070  FF                 	db	255
  1196   00F071  FF                 	db	255
  1197   00F072  FF                 	db	255
  1198   00F073  FF                 	db	255
  1199   00F074  FF                 	db	255
  1200   00F075  FF                 	db	255
  1201   00F076  FF                 	db	255
  1202   00F077  FF                 	db	255
  1203   00F078  FF                 	db	255
  1204   00F079  FF                 	db	255
  1205   00F07A  FF                 	db	255
  1206   00F07B  FF                 	db	255
  1207   00F07C  FF                 	db	255
  1208   00F07D  FF                 	db	255
  1209   00F07E  FF                 	db	255
  1210   00F07F  FF                 	db	255
  1211   00F080  FF                 	db	255
  1212   00F081  FF                 	db	255
  1213   00F082  FF                 	db	255
  1214   00F083  FF                 	db	255
  1215   00F084  FF                 	db	255
  1216   00F085  FF                 	db	255
  1217   00F086  FF                 	db	255
  1218   00F087  FF                 	db	255
  1219   00F088  FF                 	db	255
  1220   00F089  FF                 	db	255
  1221   00F08A  FF                 	db	255
  1222   00F08B  FF                 	db	255
  1223   00F08C  FF                 	db	255
  1224   00F08D  FF                 	db	255
  1225   00F08E  FF                 	db	255
  1226   00F08F  FF                 	db	255
  1227   00F090  FF                 	db	255
  1228   00F091  FF                 	db	255
  1229   00F092  FF                 	db	255
  1230   00F093  FF                 	db	255
  1231   00F094  FF                 	db	255
  1232   00F095  FF                 	db	255
  1233   00F096  FF                 	db	255
  1234   00F097  FF                 	db	255
  1235   00F098  FF                 	db	255
  1236   00F099  FF                 	db	255
  1237   00F09A  FF                 	db	255
  1238   00F09B  FF                 	db	255
  1239   00F09C  FF                 	db	255
  1240   00F09D  FF                 	db	255
  1241   00F09E  FF                 	db	255
  1242   00F09F  FF                 	db	255
  1243   00F0A0  FF                 	db	255
  1244   00F0A1  FF                 	db	255
  1245   00F0A2  FF                 	db	255
  1246   00F0A3  FF                 	db	255
  1247   00F0A4  FF                 	db	255
  1248   00F0A5  FF                 	db	255
  1249   00F0A6  FF                 	db	255
  1250   00F0A7  FF                 	db	255
  1251   00F0A8  FF                 	db	255
  1252   00F0A9  FF                 	db	255
  1253   00F0AA  FF                 	db	255
  1254   00F0AB  FF                 	db	255
  1255   00F0AC  FF                 	db	255
  1256   00F0AD  FF                 	db	255
  1257   00F0AE  FF                 	db	255
  1258   00F0AF  FF                 	db	255
  1259   00F0B0  FF                 	db	255
  1260   00F0B1  FF                 	db	255
  1261   00F0B2  FF                 	db	255
  1262   00F0B3  FF                 	db	255
  1263   00F0B4  FF                 	db	255
  1264   00F0B5  FF                 	db	255
  1265   00F0B6  FF                 	db	255
  1266   00F0B7  FF                 	db	255
  1267   00F0B8  FF                 	db	255
  1268   00F0B9  FF                 	db	255
  1269   00F0BA  FF                 	db	255
  1270   00F0BB  FF                 	db	255
  1271   00F0BC  FF                 	db	255
  1272   00F0BD  FF                 	db	255
  1273   00F0BE  FF                 	db	255
  1274   00F0BF  FF                 	db	255
  1275   00F0C0  FF                 	db	255
  1276   00F0C1  FF                 	db	255
  1277   00F0C2  FF                 	db	255
  1278   00F0C3  FF                 	db	255
  1279   00F0C4  FF                 	db	255
  1280   00F0C5  FF                 	db	255
  1281   00F0C6  FF                 	db	255
  1282   00F0C7  FF                 	db	255
  1283   00F0C8  FF                 	db	255
  1284   00F0C9  FF                 	db	255
  1285   00F0CA  FF                 	db	255
  1286   00F0CB  FF                 	db	255
  1287   00F0CC  FF                 	db	255
  1288   00F0CD  FF                 	db	255
  1289   00F0CE  FF                 	db	255
  1290   00F0CF  FF                 	db	255
  1291   00F0D0  FF                 	db	255
  1292   00F0D1  FF                 	db	255
  1293   00F0D2  FF                 	db	255
  1294   00F0D3  FF                 	db	255
  1295   00F0D4  FF                 	db	255
  1296   00F0D5  FF                 	db	255
  1297   00F0D6  FF                 	db	255
  1298   00F0D7  FF                 	db	255
  1299   00F0D8  FF                 	db	255
  1300   00F0D9  FF                 	db	255
  1301   00F0DA  FF                 	db	255
  1302   00F0DB  FF                 	db	255
  1303   00F0DC  FF                 	db	255
  1304   00F0DD  FF                 	db	255
  1305   00F0DE  FF                 	db	255
  1306   00F0DF  FF                 	db	255
  1307   00F0E0  FF                 	db	255
  1308   00F0E1  FF                 	db	255
  1309   00F0E2  FF                 	db	255
  1310   00F0E3  FF                 	db	255
  1311   00F0E4  FF                 	db	255
  1312   00F0E5  FF                 	db	255
  1313   00F0E6  FF                 	db	255
  1314   00F0E7  FF                 	db	255
  1315   00F0E8  FF                 	db	255
  1316   00F0E9  FF                 	db	255
  1317   00F0EA  FF                 	db	255
  1318   00F0EB  FF                 	db	255
  1319   00F0EC  FF                 	db	255
  1320   00F0ED  FF                 	db	255
  1321   00F0EE  FF                 	db	255
  1322   00F0EF  FF                 	db	255
  1323   00F0F0  FF                 	db	255
  1324   00F0F1  FF                 	db	255
  1325   00F0F2  FF                 	db	255
  1326   00F0F3  FF                 	db	255
  1327   00F0F4  FF                 	db	255
  1328   00F0F5  FF                 	db	255
  1329   00F0F6  FF                 	db	255
  1330   00F0F7  FF                 	db	255
  1331   00F0F8  FF                 	db	255
  1332   00F0F9  FF                 	db	255
  1333   00F0FA  FF                 	db	255
  1334   00F0FB  FF                 	db	255
  1335   00F0FC  FF                 	db	255
  1336   00F0FD  FF                 	db	255
  1337   00F0FE  FF                 	db	255
  1338   00F0FF  FF                 	db	255
  1339   00F100  FF                 	db	255
  1340   00F101  FF                 	db	255
  1341   00F102  FF                 	db	255
  1342   00F103  FF                 	db	255
  1343   00F104  FF                 	db	255
  1344   00F105  FF                 	db	255
  1345   00F106  FF                 	db	255
  1346   00F107  FF                 	db	255
  1347   00F108  FF                 	db	255
  1348   00F109  FF                 	db	255
  1349   00F10A  FF                 	db	255
  1350   00F10B  FF                 	db	255
  1351   00F10C  FF                 	db	255
  1352   00F10D  FF                 	db	255
  1353   00F10E  FF                 	db	255
  1354   00F10F  FF                 	db	255
  1355   00F110  FF                 	db	255
  1356   00F111  FF                 	db	255
  1357   00F112  FF                 	db	255
  1358   00F113  FF                 	db	255
  1359   00F114  FF                 	db	255
  1360   00F115  FF                 	db	255
  1361   00F116  FF                 	db	255
  1362   00F117  FF                 	db	255
  1363   00F118  FF                 	db	255
  1364   00F119  FF                 	db	255
  1365   00F11A  FF                 	db	255
  1366   00F11B  FF                 	db	255
  1367   00F11C  FF                 	db	255
  1368   00F11D  FF                 	db	255
  1369   00F11E  FF                 	db	255
  1370   00F11F  FF                 	db	255
  1371   00F120  FF                 	db	255
  1372   00F121  FF                 	db	255
  1373   00F122  FF                 	db	255
  1374   00F123  FF                 	db	255
  1375   00F124  FF                 	db	255
  1376   00F125  FF                 	db	255
  1377   00F126  FF                 	db	255
  1378   00F127  FF                 	db	255
  1379   00F128  FF                 	db	255
  1380   00F129  FF                 	db	255
  1381   00F12A  FF                 	db	255
  1382   00F12B  FF                 	db	255
  1383   00F12C  FF                 	db	255
  1384   00F12D  FF                 	db	255
  1385   00F12E  FF                 	db	255
  1386   00F12F  FF                 	db	255
  1387   00F130  FF                 	db	255
  1388   00F131  FF                 	db	255
  1389   00F132  FF                 	db	255
  1390   00F133  FF                 	db	255
  1391   00F134  FF                 	db	255
  1392   00F135  FF                 	db	255
  1393   00F136  FF                 	db	255
  1394   00F137  FF                 	db	255
  1395   00F138  FF                 	db	255
  1396   00F139  FF                 	db	255
  1397   00F13A  FF                 	db	255
  1398   00F13B  FF                 	db	255
  1399   00F13C  FF                 	db	255
  1400   00F13D  FF                 	db	255
  1401   00F13E  FF                 	db	255
  1402   00F13F  FF                 	db	255
  1403   00F140  FF                 	db	255
  1404   00F141  FF                 	db	255
  1405   00F142  FF                 	db	255
  1406   00F143  FF                 	db	255
  1407   00F144  FF                 	db	255
  1408   00F145  FF                 	db	255
  1409   00F146  FF                 	db	255
  1410   00F147  FF                 	db	255
  1411   00F148  FF                 	db	255
  1412   00F149  FF                 	db	255
  1413   00F14A  FF                 	db	255
  1414   00F14B  FF                 	db	255
  1415   00F14C  FF                 	db	255
  1416   00F14D  FF                 	db	255
  1417   00F14E  FF                 	db	255
  1418   00F14F  FF                 	db	255
  1419   00F150  FF                 	db	255
  1420   00F151  FF                 	db	255
  1421   00F152  FF                 	db	255
  1422   00F153  FF                 	db	255
  1423   00F154  FF                 	db	255
  1424   00F155  FF                 	db	255
  1425   00F156  FF                 	db	255
  1426   00F157  FF                 	db	255
  1427   00F158  FF                 	db	255
  1428   00F159  FF                 	db	255
  1429   00F15A  FF                 	db	255
  1430   00F15B  FF                 	db	255
  1431   00F15C  FF                 	db	255
  1432   00F15D  FF                 	db	255
  1433   00F15E  FF                 	db	255
  1434   00F15F  FF                 	db	255
  1435   00F160  FF                 	db	255
  1436   00F161  FF                 	db	255
  1437   00F162  FF                 	db	255
  1438   00F163  FF                 	db	255
  1439   00F164  FF                 	db	255
  1440   00F165  FF                 	db	255
  1441   00F166  FF                 	db	255
  1442   00F167  FF                 	db	255
  1443   00F168  FF                 	db	255
  1444   00F169  FF                 	db	255
  1445   00F16A  FF                 	db	255
  1446   00F16B  FF                 	db	255
  1447   00F16C  FF                 	db	255
  1448   00F16D  FF                 	db	255
  1449   00F16E  FF                 	db	255
  1450   00F16F  FF                 	db	255
  1451   00F170  FF                 	db	255
  1452   00F171  FF                 	db	255
  1453   00F172  FF                 	db	255
  1454   00F173  FF                 	db	255
  1455   00F174  FF                 	db	255
  1456   00F175  FF                 	db	255
  1457   00F176  FF                 	db	255
  1458   00F177  FF                 	db	255
  1459   00F178  FF                 	db	255
  1460   00F179  FF                 	db	255
  1461   00F17A  FF                 	db	255
  1462   00F17B  FF                 	db	255
  1463   00F17C  FF                 	db	255
  1464   00F17D  FF                 	db	255
  1465   00F17E  FF                 	db	255
  1466   00F17F  FF                 	db	255
  1467   00F180  FF                 	db	255
  1468   00F181  FF                 	db	255
  1469   00F182  FF                 	db	255
  1470   00F183  FF                 	db	255
  1471   00F184  FF                 	db	255
  1472   00F185  FF                 	db	255
  1473   00F186  FF                 	db	255
  1474   00F187  FF                 	db	255
  1475   00F188  FF                 	db	255
  1476   00F189  FF                 	db	255
  1477   00F18A  FF                 	db	255
  1478   00F18B  FF                 	db	255
  1479   00F18C  FF                 	db	255
  1480   00F18D  FF                 	db	255
  1481   00F18E  FF                 	db	255
  1482   00F18F  FF                 	db	255
  1483   00F190  FF                 	db	255
  1484   00F191  FF                 	db	255
  1485   00F192  FF                 	db	255
  1486   00F193  FF                 	db	255
  1487   00F194  FF                 	db	255
  1488   00F195  FF                 	db	255
  1489   00F196  FF                 	db	255
  1490   00F197  FF                 	db	255
  1491   00F198  FF                 	db	255
  1492   00F199  FF                 	db	255
  1493   00F19A  FF                 	db	255
  1494   00F19B  FF                 	db	255
  1495   00F19C  FF                 	db	255
  1496   00F19D  FF                 	db	255
  1497   00F19E  FF                 	db	255
  1498   00F19F  FF                 	db	255
  1499   00F1A0  FF                 	db	255
  1500   00F1A1  FF                 	db	255
  1501   00F1A2  FF                 	db	255
  1502   00F1A3  FF                 	db	255
  1503   00F1A4  FF                 	db	255
  1504   00F1A5  FF                 	db	255
  1505   00F1A6  FF                 	db	255
  1506   00F1A7  FF                 	db	255
  1507   00F1A8  FF                 	db	255
  1508   00F1A9  FF                 	db	255
  1509   00F1AA  FF                 	db	255
  1510   00F1AB  FF                 	db	255
  1511   00F1AC  FF                 	db	255
  1512   00F1AD  FF                 	db	255
  1513   00F1AE  FF                 	db	255
  1514   00F1AF  FF                 	db	255
  1515   00F1B0  FF                 	db	255
  1516   00F1B1  FF                 	db	255
  1517   00F1B2  FF                 	db	255
  1518   00F1B3  FF                 	db	255
  1519   00F1B4  FF                 	db	255
  1520   00F1B5  FF                 	db	255
  1521   00F1B6  FF                 	db	255
  1522   00F1B7  FF                 	db	255
  1523   00F1B8  FF                 	db	255
  1524   00F1B9  FF                 	db	255
  1525   00F1BA  FF                 	db	255
  1526   00F1BB  FF                 	db	255
  1527   00F1BC  FF                 	db	255
  1528   00F1BD  FF                 	db	255
  1529   00F1BE  FF                 	db	255
  1530   00F1BF  FF                 	db	255
  1531   00F1C0  FF                 	db	255
  1532   00F1C1  FF                 	db	255
  1533   00F1C2  FF                 	db	255
  1534   00F1C3  FF                 	db	255
  1535   00F1C4  FF                 	db	255
  1536   00F1C5  FF                 	db	255
  1537   00F1C6  FF                 	db	255
  1538   00F1C7  FF                 	db	255
  1539   00F1C8  FF                 	db	255
  1540   00F1C9  FF                 	db	255
  1541   00F1CA  FF                 	db	255
  1542   00F1CB  FF                 	db	255
  1543   00F1CC  FF                 	db	255
  1544   00F1CD  FF                 	db	255
  1545   00F1CE  FF                 	db	255
  1546   00F1CF  FF                 	db	255
  1547   00F1D0  FF                 	db	255
  1548   00F1D1  FF                 	db	255
  1549   00F1D2  FF                 	db	255
  1550   00F1D3  FF                 	db	255
  1551   00F1D4  FF                 	db	255
  1552   00F1D5  FF                 	db	255
  1553   00F1D6  FF                 	db	255
  1554   00F1D7  FF                 	db	255
  1555   00F1D8  FF                 	db	255
  1556   00F1D9  FF                 	db	255
  1557   00F1DA  FF                 	db	255
  1558   00F1DB  FF                 	db	255
  1559   00F1DC  FF                 	db	255
  1560   00F1DD  FF                 	db	255
  1561   00F1DE  FF                 	db	255
  1562   00F1DF  FF                 	db	255
  1563   00F1E0  FF                 	db	255
  1564   00F1E1  FF                 	db	255
  1565   00F1E2  FF                 	db	255
  1566   00F1E3  FF                 	db	255
  1567   00F1E4  FF                 	db	255
  1568   00F1E5  FF                 	db	255
  1569   00F1E6  FF                 	db	255
  1570   00F1E7  FF                 	db	255
  1571   00F1E8  FF                 	db	255
  1572   00F1E9  FF                 	db	255
  1573   00F1EA  FF                 	db	255
  1574   00F1EB  FF                 	db	255
  1575   00F1EC  FF                 	db	255
  1576   00F1ED  FF                 	db	255
  1577   00F1EE  FF                 	db	255
  1578   00F1EF  FF                 	db	255
  1579   00F1F0  FF                 	db	255
  1580   00F1F1  FF                 	db	255
  1581   00F1F2  FF                 	db	255
  1582   00F1F3  FF                 	db	255
  1583   00F1F4  FF                 	db	255
  1584   00F1F5  FF                 	db	255
  1585   00F1F6  FF                 	db	255
  1586   00F1F7  FF                 	db	255
  1587   00F1F8  FF                 	db	255
  1588   00F1F9  FF                 	db	255
  1589   00F1FA  FF                 	db	255
  1590   00F1FB  FF                 	db	255
  1591   00F1FC  FF                 	db	255
  1592   00F1FD  FF                 	db	255
  1593   00F1FE  FF                 	db	255
  1594   00F1FF  FF                 	db	255
  1595   00F200  FF                 	db	255
  1596   00F201  FF                 	db	255
  1597   00F202  FF                 	db	255
  1598   00F203  FF                 	db	255
  1599   00F204  FF                 	db	255
  1600   00F205  FF                 	db	255
  1601   00F206  FF                 	db	255
  1602   00F207  FF                 	db	255
  1603   00F208  FF                 	db	255
  1604   00F209  FF                 	db	255
  1605   00F20A  FF                 	db	255
  1606   00F20B  FF                 	db	255
  1607   00F20C  FF                 	db	255
  1608   00F20D  FF                 	db	255
  1609   00F20E  FF                 	db	255
  1610   00F20F  FF                 	db	255
  1611   00F210  FF                 	db	255
  1612   00F211  FF                 	db	255
  1613   00F212  FF                 	db	255
  1614   00F213  FF                 	db	255
  1615   00F214  FF                 	db	255
  1616   00F215  FF                 	db	255
  1617   00F216  FF                 	db	255
  1618   00F217  FF                 	db	255
  1619   00F218  FF                 	db	255
  1620   00F219  FF                 	db	255
  1621   00F21A  FF                 	db	255
  1622   00F21B  FF                 	db	255
  1623   00F21C  FF                 	db	255
  1624   00F21D  FF                 	db	255
  1625   00F21E  FF                 	db	255
  1626   00F21F  FF                 	db	255
  1627   00F220  FF                 	db	255
  1628   00F221  FF                 	db	255
  1629   00F222  FF                 	db	255
  1630   00F223  FF                 	db	255
  1631   00F224  FF                 	db	255
  1632   00F225  FF                 	db	255
  1633   00F226  FF                 	db	255
  1634   00F227  FF                 	db	255
  1635   00F228  FF                 	db	255
  1636   00F229  FF                 	db	255
  1637   00F22A  FF                 	db	255
  1638   00F22B  FF                 	db	255
  1639   00F22C  FF                 	db	255
  1640   00F22D  FF                 	db	255
  1641   00F22E  FF                 	db	255
  1642   00F22F  FF                 	db	255
  1643   00F230  FF                 	db	255
  1644   00F231  FF                 	db	255
  1645   00F232  FF                 	db	255
  1646   00F233  FF                 	db	255
  1647   00F234  FF                 	db	255
  1648   00F235  FF                 	db	255
  1649   00F236  FF                 	db	255
  1650   00F237  FF                 	db	255
  1651   00F238  FF                 	db	255
  1652   00F239  FF                 	db	255
  1653   00F23A  FF                 	db	255
  1654   00F23B  FF                 	db	255
  1655   00F23C  FF                 	db	255
  1656   00F23D  FF                 	db	255
  1657   00F23E  FF                 	db	255
  1658   00F23F  FF                 	db	255
  1659   00F240  FF                 	db	255
  1660   00F241  FF                 	db	255
  1661   00F242  FF                 	db	255
  1662   00F243  FF                 	db	255
  1663   00F244  FF                 	db	255
  1664   00F245  FF                 	db	255
  1665   00F246  FF                 	db	255
  1666   00F247  FF                 	db	255
  1667   00F248  FF                 	db	255
  1668   00F249  FF                 	db	255
  1669   00F24A  FF                 	db	255
  1670   00F24B  FF                 	db	255
  1671   00F24C  FF                 	db	255
  1672   00F24D  FF                 	db	255
  1673   00F24E  FF                 	db	255
  1674   00F24F  FF                 	db	255
  1675   00F250  FF                 	db	255
  1676   00F251  FF                 	db	255
  1677   00F252  FF                 	db	255
  1678   00F253  FF                 	db	255
  1679   00F254  FF                 	db	255
  1680   00F255  FF                 	db	255
  1681   00F256  FF                 	db	255
  1682   00F257  FF                 	db	255
  1683   00F258  FF                 	db	255
  1684   00F259  FF                 	db	255
  1685   00F25A  FF                 	db	255
  1686   00F25B  FF                 	db	255
  1687   00F25C  FF                 	db	255
  1688   00F25D  FF                 	db	255
  1689   00F25E  FF                 	db	255
  1690   00F25F  FF                 	db	255
  1691   00F260  FF                 	db	255
  1692   00F261  FF                 	db	255
  1693   00F262  FF                 	db	255
  1694   00F263  FF                 	db	255
  1695   00F264  FF                 	db	255
  1696   00F265  FF                 	db	255
  1697   00F266  FF                 	db	255
  1698   00F267  FF                 	db	255
  1699   00F268  FF                 	db	255
  1700   00F269  FF                 	db	255
  1701   00F26A  FF                 	db	255
  1702   00F26B  FF                 	db	255
  1703   00F26C  FF                 	db	255
  1704   00F26D  FF                 	db	255
  1705   00F26E  FF                 	db	255
  1706   00F26F  FF                 	db	255
  1707   00F270  FF                 	db	255
  1708   00F271  FF                 	db	255
  1709   00F272  FF                 	db	255
  1710   00F273  FF                 	db	255
  1711   00F274  FF                 	db	255
  1712   00F275  FF                 	db	255
  1713   00F276  FF                 	db	255
  1714   00F277  FF                 	db	255
  1715   00F278  FF                 	db	255
  1716   00F279  FF                 	db	255
  1717   00F27A  FF                 	db	255
  1718   00F27B  FF                 	db	255
  1719   00F27C  FF                 	db	255
  1720   00F27D  FF                 	db	255
  1721   00F27E  FF                 	db	255
  1722   00F27F  FF                 	db	255
  1723   00F280  FF                 	db	255
  1724   00F281  FF                 	db	255
  1725   00F282  FF                 	db	255
  1726   00F283  FF                 	db	255
  1727   00F284  FF                 	db	255
  1728   00F285  FF                 	db	255
  1729   00F286  FF                 	db	255
  1730   00F287  FF                 	db	255
  1731   00F288  FF                 	db	255
  1732   00F289  FF                 	db	255
  1733   00F28A  FF                 	db	255
  1734   00F28B  FF                 	db	255
  1735   00F28C  FF                 	db	255
  1736   00F28D  FF                 	db	255
  1737   00F28E  FF                 	db	255
  1738   00F28F  FF                 	db	255
  1739   00F290  FF                 	db	255
  1740   00F291  FF                 	db	255
  1741   00F292  FF                 	db	255
  1742   00F293  FF                 	db	255
  1743   00F294  FF                 	db	255
  1744   00F295  FF                 	db	255
  1745   00F296  FF                 	db	255
  1746   00F297  FF                 	db	255
  1747   00F298  FF                 	db	255
  1748   00F299  FF                 	db	255
  1749   00F29A  FF                 	db	255
  1750   00F29B  FF                 	db	255
  1751   00F29C  FF                 	db	255
  1752   00F29D  FF                 	db	255
  1753   00F29E  FF                 	db	255
  1754   00F29F  FF                 	db	255
  1755   00F2A0  FF                 	db	255
  1756   00F2A1  FF                 	db	255
  1757   00F2A2  FF                 	db	255
  1758   00F2A3  FF                 	db	255
  1759   00F2A4  FF                 	db	255
  1760   00F2A5  FF                 	db	255
  1761   00F2A6  FF                 	db	255
  1762   00F2A7  FF                 	db	255
  1763   00F2A8  FF                 	db	255
  1764   00F2A9  FF                 	db	255
  1765   00F2AA  FF                 	db	255
  1766   00F2AB  FF                 	db	255
  1767   00F2AC  FF                 	db	255
  1768   00F2AD  FF                 	db	255
  1769   00F2AE  FF                 	db	255
  1770   00F2AF  FF                 	db	255
  1771   00F2B0  FF                 	db	255
  1772   00F2B1  FF                 	db	255
  1773   00F2B2  FF                 	db	255
  1774   00F2B3  FF                 	db	255
  1775   00F2B4  FF                 	db	255
  1776   00F2B5  FF                 	db	255
  1777   00F2B6  FF                 	db	255
  1778   00F2B7  FF                 	db	255
  1779   00F2B8  FF                 	db	255
  1780   00F2B9  FF                 	db	255
  1781   00F2BA  FF                 	db	255
  1782   00F2BB  FF                 	db	255
  1783   00F2BC  FF                 	db	255
  1784   00F2BD  FF                 	db	255
  1785   00F2BE  FF                 	db	255
  1786   00F2BF  FF                 	db	255
  1787   00F2C0  FF                 	db	255
  1788   00F2C1  FF                 	db	255
  1789   00F2C2  FF                 	db	255
  1790   00F2C3  FF                 	db	255
  1791   00F2C4  FF                 	db	255
  1792   00F2C5  FF                 	db	255
  1793   00F2C6  FF                 	db	255
  1794   00F2C7  FF                 	db	255
  1795   00F2C8  FF                 	db	255
  1796   00F2C9  FF                 	db	255
  1797   00F2CA  FF                 	db	255
  1798   00F2CB  FF                 	db	255
  1799   00F2CC  FF                 	db	255
  1800   00F2CD  FF                 	db	255
  1801   00F2CE  FF                 	db	255
  1802   00F2CF  FF                 	db	255
  1803   00F2D0  FF                 	db	255
  1804   00F2D1  FF                 	db	255
  1805   00F2D2  FF                 	db	255
  1806   00F2D3  FF                 	db	255
  1807   00F2D4  FF                 	db	255
  1808   00F2D5  FF                 	db	255
  1809   00F2D6  FF                 	db	255
  1810   00F2D7  FF                 	db	255
  1811   00F2D8  FF                 	db	255
  1812   00F2D9  FF                 	db	255
  1813   00F2DA  FF                 	db	255
  1814   00F2DB  FF                 	db	255
  1815   00F2DC  FF                 	db	255
  1816   00F2DD  FF                 	db	255
  1817   00F2DE  FF                 	db	255
  1818   00F2DF  FF                 	db	255
  1819   00F2E0  FF                 	db	255
  1820   00F2E1  FF                 	db	255
  1821   00F2E2  FF                 	db	255
  1822   00F2E3  FF                 	db	255
  1823   00F2E4  FF                 	db	255
  1824   00F2E5  FF                 	db	255
  1825   00F2E6  FF                 	db	255
  1826   00F2E7  FF                 	db	255
  1827   00F2E8  FF                 	db	255
  1828   00F2E9  FF                 	db	255
  1829   00F2EA  FF                 	db	255
  1830   00F2EB  FF                 	db	255
  1831   00F2EC  FF                 	db	255
  1832   00F2ED  FF                 	db	255
  1833   00F2EE  FF                 	db	255
  1834   00F2EF  FF                 	db	255
  1835   00F2F0  FF                 	db	255
  1836   00F2F1  FF                 	db	255
  1837   00F2F2  FF                 	db	255
  1838   00F2F3  FF                 	db	255
  1839   00F2F4  FF                 	db	255
  1840   00F2F5  FF                 	db	255
  1841   00F2F6  FF                 	db	255
  1842   00F2F7  FF                 	db	255
  1843   00F2F8  FF                 	db	255
  1844   00F2F9  FF                 	db	255
  1845   00F2FA  FF                 	db	255
  1846   00F2FB  FF                 	db	255
  1847   00F2FC  FF                 	db	255
  1848   00F2FD  FF                 	db	255
  1849   00F2FE  FF                 	db	255
  1850   00F2FF  FF                 	db	255
  1851   00F300  FF                 	db	255
  1852   00F301  FF                 	db	255
  1853   00F302  FF                 	db	255
  1854   00F303  FF                 	db	255
  1855   00F304  FF                 	db	255
  1856   00F305  FF                 	db	255
  1857   00F306  FF                 	db	255
  1858   00F307  FF                 	db	255
  1859   00F308  FF                 	db	255
  1860   00F309  FF                 	db	255
  1861   00F30A  FF                 	db	255
  1862   00F30B  FF                 	db	255
  1863   00F30C  FF                 	db	255
  1864   00F30D  FF                 	db	255
  1865   00F30E  FF                 	db	255
  1866   00F30F  FF                 	db	255
  1867   00F310  FF                 	db	255
  1868   00F311  FF                 	db	255
  1869   00F312  FF                 	db	255
  1870   00F313  FF                 	db	255
  1871   00F314  FF                 	db	255
  1872   00F315  FF                 	db	255
  1873   00F316  FF                 	db	255
  1874   00F317  FF                 	db	255
  1875   00F318  FF                 	db	255
  1876   00F319  FF                 	db	255
  1877   00F31A  FF                 	db	255
  1878   00F31B  FF                 	db	255
  1879   00F31C  FF                 	db	255
  1880   00F31D  FF                 	db	255
  1881   00F31E  FF                 	db	255
  1882   00F31F  FF                 	db	255
  1883   00F320  FF                 	db	255
  1884   00F321  FF                 	db	255
  1885   00F322  FF                 	db	255
  1886   00F323  FF                 	db	255
  1887   00F324  FF                 	db	255
  1888   00F325  FF                 	db	255
  1889   00F326  FF                 	db	255
  1890   00F327  FF                 	db	255
  1891   00F328  FF                 	db	255
  1892   00F329  FF                 	db	255
  1893   00F32A  FF                 	db	255
  1894   00F32B  FF                 	db	255
  1895   00F32C  FF                 	db	255
  1896   00F32D  FF                 	db	255
  1897   00F32E  FF                 	db	255
  1898   00F32F  FF                 	db	255
  1899   00F330  FF                 	db	255
  1900   00F331  FF                 	db	255
  1901   00F332  FF                 	db	255
  1902   00F333  FF                 	db	255
  1903   00F334  FF                 	db	255
  1904   00F335  FF                 	db	255
  1905   00F336  FF                 	db	255
  1906   00F337  FF                 	db	255
  1907   00F338  FF                 	db	255
  1908   00F339  FF                 	db	255
  1909   00F33A  FF                 	db	255
  1910   00F33B  FF                 	db	255
  1911   00F33C  FF                 	db	255
  1912   00F33D  FF                 	db	255
  1913   00F33E  FF                 	db	255
  1914   00F33F  FF                 	db	255
  1915   00F340  FF                 	db	255
  1916   00F341  FF                 	db	255
  1917   00F342  FF                 	db	255
  1918   00F343  FF                 	db	255
  1919   00F344  FF                 	db	255
  1920   00F345  FF                 	db	255
  1921   00F346  FF                 	db	255
  1922   00F347  FF                 	db	255
  1923   00F348  FF                 	db	255
  1924   00F349  FF                 	db	255
  1925   00F34A  FF                 	db	255
  1926   00F34B  FF                 	db	255
  1927   00F34C  FF                 	db	255
  1928   00F34D  FF                 	db	255
  1929   00F34E  FF                 	db	255
  1930   00F34F  FF                 	db	255
  1931   00F350  FF                 	db	255
  1932   00F351  FF                 	db	255
  1933   00F352  FF                 	db	255
  1934   00F353  FF                 	db	255
  1935   00F354  FF                 	db	255
  1936   00F355  FF                 	db	255
  1937   00F356  FF                 	db	255
  1938   00F357  FF                 	db	255
  1939   00F358  FF                 	db	255
  1940   00F359  FF                 	db	255
  1941   00F35A  FF                 	db	255
  1942   00F35B  FF                 	db	255
  1943   00F35C  FF                 	db	255
  1944   00F35D  FF                 	db	255
  1945   00F35E  FF                 	db	255
  1946   00F35F  FF                 	db	255
  1947   00F360  FF                 	db	255
  1948   00F361  FF                 	db	255
  1949   00F362  FF                 	db	255
  1950   00F363  FF                 	db	255
  1951   00F364  FF                 	db	255
  1952   00F365  FF                 	db	255
  1953   00F366  FF                 	db	255
  1954   00F367  FF                 	db	255
  1955   00F368  FF                 	db	255
  1956   00F369  FF                 	db	255
  1957   00F36A  FF                 	db	255
  1958   00F36B  FF                 	db	255
  1959   00F36C  FF                 	db	255
  1960   00F36D  FF                 	db	255
  1961   00F36E  FF                 	db	255
  1962   00F36F  FF                 	db	255
  1963   00F370  FF                 	db	255
  1964   00F371  FF                 	db	255
  1965   00F372  FF                 	db	255
  1966   00F373  FF                 	db	255
  1967   00F374  FF                 	db	255
  1968   00F375  FF                 	db	255
  1969   00F376  FF                 	db	255
  1970   00F377  FF                 	db	255
  1971   00F378  FF                 	db	255
  1972   00F379  FF                 	db	255
  1973   00F37A  FF                 	db	255
  1974   00F37B  FF                 	db	255
  1975   00F37C  FF                 	db	255
  1976   00F37D  FF                 	db	255
  1977   00F37E  FF                 	db	255
  1978   00F37F  FF                 	db	255
  1979   00F380  FF                 	db	255
  1980   00F381  FF                 	db	255
  1981   00F382  FF                 	db	255
  1982   00F383  FF                 	db	255
  1983   00F384  FF                 	db	255
  1984   00F385  FF                 	db	255
  1985   00F386  FF                 	db	255
  1986   00F387  FF                 	db	255
  1987   00F388  FF                 	db	255
  1988   00F389  FF                 	db	255
  1989   00F38A  FF                 	db	255
  1990   00F38B  FF                 	db	255
  1991   00F38C  FF                 	db	255
  1992   00F38D  FF                 	db	255
  1993   00F38E  FF                 	db	255
  1994   00F38F  FF                 	db	255
  1995   00F390  FF                 	db	255
  1996   00F391  FF                 	db	255
  1997   00F392  FF                 	db	255
  1998   00F393  FF                 	db	255
  1999   00F394  FF                 	db	255
  2000   00F395  FF                 	db	255
  2001   00F396  FF                 	db	255
  2002   00F397  FF                 	db	255
  2003   00F398  FF                 	db	255
  2004   00F399  FF                 	db	255
  2005   00F39A  FF                 	db	255
  2006   00F39B  FF                 	db	255
  2007   00F39C  FF                 	db	255
  2008   00F39D  FF                 	db	255
  2009   00F39E  FF                 	db	255
  2010   00F39F  FF                 	db	255
  2011   00F3A0  FF                 	db	255
  2012   00F3A1  FF                 	db	255
  2013   00F3A2  FF                 	db	255
  2014   00F3A3  FF                 	db	255
  2015   00F3A4  FF                 	db	255
  2016   00F3A5  FF                 	db	255
  2017   00F3A6  FF                 	db	255
  2018   00F3A7  FF                 	db	255
  2019   00F3A8  FF                 	db	255
  2020   00F3A9  FF                 	db	255
  2021   00F3AA  FF                 	db	255
  2022   00F3AB  FF                 	db	255
  2023   00F3AC  FF                 	db	255
  2024   00F3AD  FF                 	db	255
  2025   00F3AE  FF                 	db	255
  2026   00F3AF  FF                 	db	255
  2027   00F3B0  FF                 	db	255
  2028   00F3B1  FF                 	db	255
  2029   00F3B2  FF                 	db	255
  2030   00F3B3  FF                 	db	255
  2031   00F3B4  FF                 	db	255
  2032   00F3B5  FF                 	db	255
  2033   00F3B6  FF                 	db	255
  2034   00F3B7  FF                 	db	255
  2035   00F3B8  FF                 	db	255
  2036   00F3B9  FF                 	db	255
  2037   00F3BA  FF                 	db	255
  2038   00F3BB  FF                 	db	255
  2039   00F3BC  FF                 	db	255
  2040   00F3BD  FF                 	db	255
  2041   00F3BE  FF                 	db	255
  2042   00F3BF  FF                 	db	255
  2043   00F3C0  FF                 	db	255
  2044   00F3C1  FF                 	db	255
  2045   00F3C2  FF                 	db	255
  2046   00F3C3  FF                 	db	255
  2047   00F3C4  FF                 	db	255
  2048   00F3C5  FF                 	db	255
  2049   00F3C6  FF                 	db	255
  2050   00F3C7  FF                 	db	255
  2051   00F3C8  FF                 	db	255
  2052   00F3C9  FF                 	db	255
  2053   00F3CA  FF                 	db	255
  2054   00F3CB  FF                 	db	255
  2055   00F3CC  FF                 	db	255
  2056   00F3CD  FF                 	db	255
  2057   00F3CE  FF                 	db	255
  2058   00F3CF  FF                 	db	255
  2059   00F3D0  FF                 	db	255
  2060   00F3D1  FF                 	db	255
  2061   00F3D2  FF                 	db	255
  2062   00F3D3  FF                 	db	255
  2063   00F3D4  FF                 	db	255
  2064   00F3D5  FF                 	db	255
  2065   00F3D6  FF                 	db	255
  2066   00F3D7  FF                 	db	255
  2067   00F3D8  FF                 	db	255
  2068   00F3D9  FF                 	db	255
  2069   00F3DA  FF                 	db	255
  2070   00F3DB  FF                 	db	255
  2071   00F3DC  FF                 	db	255
  2072   00F3DD  FF                 	db	255
  2073   00F3DE  FF                 	db	255
  2074   00F3DF  FF                 	db	255
  2075   00F3E0  FF                 	db	255
  2076   00F3E1  FF                 	db	255
  2077   00F3E2  FF                 	db	255
  2078   00F3E3  FF                 	db	255
  2079   00F3E4  FF                 	db	255
  2080   00F3E5  FF                 	db	255
  2081   00F3E6  FF                 	db	255
  2082   00F3E7  FF                 	db	255
  2083   00F3E8  FF                 	db	255
  2084   00F3E9  FF                 	db	255
  2085   00F3EA  FF                 	db	255
  2086   00F3EB  FF                 	db	255
  2087   00F3EC  FF                 	db	255
  2088   00F3ED  FF                 	db	255
  2089   00F3EE  FF                 	db	255
  2090   00F3EF  FF                 	db	255
  2091   00F3F0  FF                 	db	255
  2092   00F3F1  FF                 	db	255
  2093   00F3F2  FF                 	db	255
  2094   00F3F3  FF                 	db	255
  2095   00F3F4  FF                 	db	255
  2096   00F3F5  FF                 	db	255
  2097   00F3F6  FF                 	db	255
  2098   00F3F7  FF                 	db	255
  2099   00F3F8  FF                 	db	255
  2100   00F3F9  FF                 	db	255
  2101   00F3FA  FF                 	db	255
  2102   00F3FB  FF                 	db	255
  2103   00F3FC  FF                 	db	255
  2104   00F3FD  FF                 	db	255
  2105   00F3FE  FF                 	db	255
  2106   00F3FF  FF                 	db	255
  2107   00F400  FF                 	db	255
  2108   00F401  FF                 	db	255
  2109   00F402  FF                 	db	255
  2110   00F403  FF                 	db	255
  2111   00F404  FF                 	db	255
  2112   00F405  FF                 	db	255
  2113   00F406  FF                 	db	255
  2114   00F407  FF                 	db	255
  2115   00F408  FF                 	db	255
  2116   00F409  FF                 	db	255
  2117   00F40A  FF                 	db	255
  2118   00F40B  FF                 	db	255
  2119   00F40C  FF                 	db	255
  2120   00F40D  FF                 	db	255
  2121   00F40E  FF                 	db	255
  2122   00F40F  FF                 	db	255
  2123   00F410  FF                 	db	255
  2124   00F411  FF                 	db	255
  2125   00F412  FF                 	db	255
  2126   00F413  FF                 	db	255
  2127   00F414  FF                 	db	255
  2128   00F415  FF                 	db	255
  2129   00F416  FF                 	db	255
  2130   00F417  FF                 	db	255
  2131   00F418  FF                 	db	255
  2132   00F419  FF                 	db	255
  2133   00F41A  FF                 	db	255
  2134   00F41B  FF                 	db	255
  2135   00F41C  FF                 	db	255
  2136   00F41D  FF                 	db	255
  2137   00F41E  FF                 	db	255
  2138   00F41F  FF                 	db	255
  2139   00F420  FF                 	db	255
  2140   00F421  FF                 	db	255
  2141   00F422  FF                 	db	255
  2142   00F423  FF                 	db	255
  2143   00F424  FF                 	db	255
  2144   00F425  FF                 	db	255
  2145   00F426  FF                 	db	255
  2146   00F427  FF                 	db	255
  2147   00F428  FF                 	db	255
  2148   00F429  FF                 	db	255
  2149   00F42A  FF                 	db	255
  2150   00F42B  FF                 	db	255
  2151   00F42C  FF                 	db	255
  2152   00F42D  FF                 	db	255
  2153   00F42E  FF                 	db	255
  2154   00F42F  FF                 	db	255
  2155   00F430  FF                 	db	255
  2156   00F431  FF                 	db	255
  2157   00F432  FF                 	db	255
  2158   00F433  FF                 	db	255
  2159   00F434  FF                 	db	255
  2160   00F435  FF                 	db	255
  2161   00F436  FF                 	db	255
  2162   00F437  FF                 	db	255
  2163   00F438  FF                 	db	255
  2164   00F439  FF                 	db	255
  2165   00F43A  FF                 	db	255
  2166   00F43B  FF                 	db	255
  2167   00F43C  FF                 	db	255
  2168   00F43D  FF                 	db	255
  2169   00F43E  FF                 	db	255
  2170   00F43F  FF                 	db	255
  2171   00F440  FF                 	db	255
  2172   00F441  FF                 	db	255
  2173   00F442  FF                 	db	255
  2174   00F443  FF                 	db	255
  2175   00F444  FF                 	db	255
  2176   00F445  FF                 	db	255
  2177   00F446  FF                 	db	255
  2178   00F447  FF                 	db	255
  2179   00F448  FF                 	db	255
  2180   00F449  FF                 	db	255
  2181   00F44A  FF                 	db	255
  2182   00F44B  FF                 	db	255
  2183   00F44C  FF                 	db	255
  2184   00F44D  FF                 	db	255
  2185   00F44E  FF                 	db	255
  2186   00F44F  FF                 	db	255
  2187   00F450  FF                 	db	255
  2188   00F451  FF                 	db	255
  2189   00F452  FF                 	db	255
  2190   00F453  FF                 	db	255
  2191   00F454  FF                 	db	255
  2192   00F455  FF                 	db	255
  2193   00F456  FF                 	db	255
  2194   00F457  FF                 	db	255
  2195   00F458  FF                 	db	255
  2196   00F459  FF                 	db	255
  2197   00F45A  FF                 	db	255
  2198   00F45B  FF                 	db	255
  2199   00F45C  FF                 	db	255
  2200   00F45D  FF                 	db	255
  2201   00F45E  FF                 	db	255
  2202   00F45F  FF                 	db	255
  2203   00F460  FF                 	db	255
  2204   00F461  FF                 	db	255
  2205   00F462  FF                 	db	255
  2206   00F463  FF                 	db	255
  2207   00F464  FF                 	db	255
  2208   00F465  FF                 	db	255
  2209   00F466  FF                 	db	255
  2210   00F467  FF                 	db	255
  2211   00F468  FF                 	db	255
  2212   00F469  FF                 	db	255
  2213   00F46A  FF                 	db	255
  2214   00F46B  FF                 	db	255
  2215   00F46C  FF                 	db	255
  2216   00F46D  FF                 	db	255
  2217   00F46E  FF                 	db	255
  2218   00F46F  FF                 	db	255
  2219   00F470  FF                 	db	255
  2220   00F471  FF                 	db	255
  2221   00F472  FF                 	db	255
  2222   00F473  FF                 	db	255
  2223   00F474  FF                 	db	255
  2224   00F475  FF                 	db	255
  2225   00F476  FF                 	db	255
  2226   00F477  FF                 	db	255
  2227   00F478  FF                 	db	255
  2228   00F479  FF                 	db	255
  2229   00F47A  FF                 	db	255
  2230   00F47B  FF                 	db	255
  2231   00F47C  FF                 	db	255
  2232   00F47D  FF                 	db	255
  2233   00F47E  FF                 	db	255
  2234   00F47F  FF                 	db	255
  2235   00F480  FF                 	db	255
  2236   00F481  FF                 	db	255
  2237   00F482  FF                 	db	255
  2238   00F483  FF                 	db	255
  2239   00F484  FF                 	db	255
  2240   00F485  FF                 	db	255
  2241   00F486  FF                 	db	255
  2242   00F487  FF                 	db	255
  2243   00F488  FF                 	db	255
  2244   00F489  FF                 	db	255
  2245   00F48A  FF                 	db	255
  2246   00F48B  FF                 	db	255
  2247   00F48C  FF                 	db	255
  2248   00F48D  FF                 	db	255
  2249   00F48E  FF                 	db	255
  2250   00F48F  FF                 	db	255
  2251   00F490  FF                 	db	255
  2252   00F491  FF                 	db	255
  2253   00F492  FF                 	db	255
  2254   00F493  FF                 	db	255
  2255   00F494  FF                 	db	255
  2256   00F495  FF                 	db	255
  2257   00F496  FF                 	db	255
  2258   00F497  FF                 	db	255
  2259   00F498  FF                 	db	255
  2260   00F499  FF                 	db	255
  2261   00F49A  FF                 	db	255
  2262   00F49B  FF                 	db	255
  2263   00F49C  FF                 	db	255
  2264   00F49D  FF                 	db	255
  2265   00F49E  FF                 	db	255
  2266   00F49F  FF                 	db	255
  2267   00F4A0  FF                 	db	255
  2268   00F4A1  FF                 	db	255
  2269   00F4A2  FF                 	db	255
  2270   00F4A3  FF                 	db	255
  2271   00F4A4  FF                 	db	255
  2272   00F4A5  FF                 	db	255
  2273   00F4A6  FF                 	db	255
  2274   00F4A7  FF                 	db	255
  2275   00F4A8  FF                 	db	255
  2276   00F4A9  FF                 	db	255
  2277   00F4AA  FF                 	db	255
  2278   00F4AB  FF                 	db	255
  2279   00F4AC  FF                 	db	255
  2280   00F4AD  FF                 	db	255
  2281   00F4AE  FF                 	db	255
  2282   00F4AF  FF                 	db	255
  2283   00F4B0  FF                 	db	255
  2284   00F4B1  FF                 	db	255
  2285   00F4B2  FF                 	db	255
  2286   00F4B3  FF                 	db	255
  2287   00F4B4  FF                 	db	255
  2288   00F4B5  FF                 	db	255
  2289   00F4B6  FF                 	db	255
  2290   00F4B7  FF                 	db	255
  2291   00F4B8  FF                 	db	255
  2292   00F4B9  FF                 	db	255
  2293   00F4BA  FF                 	db	255
  2294   00F4BB  FF                 	db	255
  2295   00F4BC  FF                 	db	255
  2296   00F4BD  FF                 	db	255
  2297   00F4BE  FF                 	db	255
  2298   00F4BF  FF                 	db	255
  2299   00F4C0  FF                 	db	255
  2300   00F4C1  FF                 	db	255
  2301   00F4C2  FF                 	db	255
  2302   00F4C3  FF                 	db	255
  2303   00F4C4  FF                 	db	255
  2304   00F4C5  FF                 	db	255
  2305   00F4C6  FF                 	db	255
  2306   00F4C7  FF                 	db	255
  2307   00F4C8  FF                 	db	255
  2308   00F4C9  FF                 	db	255
  2309   00F4CA  FF                 	db	255
  2310   00F4CB  FF                 	db	255
  2311   00F4CC  FF                 	db	255
  2312   00F4CD  FF                 	db	255
  2313   00F4CE  FF                 	db	255
  2314   00F4CF  FF                 	db	255
  2315   00F4D0  FF                 	db	255
  2316   00F4D1  FF                 	db	255
  2317   00F4D2  FF                 	db	255
  2318   00F4D3  FF                 	db	255
  2319   00F4D4  FF                 	db	255
  2320   00F4D5  FF                 	db	255
  2321   00F4D6  FF                 	db	255
  2322   00F4D7  FF                 	db	255
  2323   00F4D8  FF                 	db	255
  2324   00F4D9  FF                 	db	255
  2325   00F4DA  FF                 	db	255
  2326   00F4DB  FF                 	db	255
  2327   00F4DC  FF                 	db	255
  2328   00F4DD  FF                 	db	255
  2329   00F4DE  FF                 	db	255
  2330   00F4DF  FF                 	db	255
  2331   00F4E0  FF                 	db	255
  2332   00F4E1  FF                 	db	255
  2333   00F4E2  FF                 	db	255
  2334   00F4E3  FF                 	db	255
  2335   00F4E4  FF                 	db	255
  2336   00F4E5  FF                 	db	255
  2337   00F4E6  FF                 	db	255
  2338   00F4E7  FF                 	db	255
  2339   00F4E8  FF                 	db	255
  2340   00F4E9  FF                 	db	255
  2341   00F4EA  FF                 	db	255
  2342   00F4EB  FF                 	db	255
  2343   00F4EC  FF                 	db	255
  2344   00F4ED  FF                 	db	255
  2345   00F4EE  FF                 	db	255
  2346   00F4EF  FF                 	db	255
  2347   00F4F0  FF                 	db	255
  2348   00F4F1  FF                 	db	255
  2349   00F4F2  FF                 	db	255
  2350   00F4F3  FF                 	db	255
  2351   00F4F4  FF                 	db	255
  2352   00F4F5  FF                 	db	255
  2353   00F4F6  FF                 	db	255
  2354   00F4F7  FF                 	db	255
  2355   00F4F8  FF                 	db	255
  2356   00F4F9  FF                 	db	255
  2357   00F4FA  FF                 	db	255
  2358   00F4FB  FF                 	db	255
  2359   00F4FC  FF                 	db	255
  2360   00F4FD  FF                 	db	255
  2361   00F4FE  FF                 	db	255
  2362   00F4FF  FF                 	db	255
  2363   00F500  FF                 	db	255
  2364   00F501  FF                 	db	255
  2365   00F502  FF                 	db	255
  2366   00F503  FF                 	db	255
  2367   00F504  FF                 	db	255
  2368   00F505  FF                 	db	255
  2369   00F506  FF                 	db	255
  2370   00F507  FF                 	db	255
  2371   00F508  FF                 	db	255
  2372   00F509  FF                 	db	255
  2373   00F50A  FF                 	db	255
  2374   00F50B  FF                 	db	255
  2375   00F50C  FF                 	db	255
  2376   00F50D  FF                 	db	255
  2377   00F50E  FF                 	db	255
  2378   00F50F  FF                 	db	255
  2379   00F510  FF                 	db	255
  2380   00F511  FF                 	db	255
  2381   00F512  FF                 	db	255
  2382   00F513  FF                 	db	255
  2383   00F514  FF                 	db	255
  2384   00F515  FF                 	db	255
  2385   00F516  FF                 	db	255
  2386   00F517  FF                 	db	255
  2387   00F518  FF                 	db	255
  2388   00F519  FF                 	db	255
  2389   00F51A  FF                 	db	255
  2390   00F51B  FF                 	db	255
  2391   00F51C  FF                 	db	255
  2392   00F51D  FF                 	db	255
  2393   00F51E  FF                 	db	255
  2394   00F51F  FF                 	db	255
  2395   00F520  FF                 	db	255
  2396   00F521  FF                 	db	255
  2397   00F522  FF                 	db	255
  2398   00F523  FF                 	db	255
  2399   00F524  FF                 	db	255
  2400   00F525  FF                 	db	255
  2401   00F526  FF                 	db	255
  2402   00F527  FF                 	db	255
  2403   00F528  FF                 	db	255
  2404   00F529  FF                 	db	255
  2405   00F52A  FF                 	db	255
  2406   00F52B  FF                 	db	255
  2407   00F52C  FF                 	db	255
  2408   00F52D  FF                 	db	255
  2409   00F52E  FF                 	db	255
  2410   00F52F  FF                 	db	255
  2411   00F530  FF                 	db	255
  2412   00F531  FF                 	db	255
  2413   00F532  FF                 	db	255
  2414   00F533  FF                 	db	255
  2415   00F534  FF                 	db	255
  2416   00F535  FF                 	db	255
  2417   00F536  FF                 	db	255
  2418   00F537  FF                 	db	255
  2419   00F538  FF                 	db	255
  2420   00F539  FF                 	db	255
  2421   00F53A  FF                 	db	255
  2422   00F53B  FF                 	db	255
  2423   00F53C  FF                 	db	255
  2424   00F53D  FF                 	db	255
  2425   00F53E  FF                 	db	255
  2426   00F53F  FF                 	db	255
  2427   00F540  FF                 	db	255
  2428   00F541  FF                 	db	255
  2429   00F542  FF                 	db	255
  2430   00F543  FF                 	db	255
  2431   00F544  FF                 	db	255
  2432   00F545  FF                 	db	255
  2433   00F546  FF                 	db	255
  2434   00F547  FF                 	db	255
  2435   00F548  FF                 	db	255
  2436   00F549  FF                 	db	255
  2437   00F54A  FF                 	db	255
  2438   00F54B  FF                 	db	255
  2439   00F54C  FF                 	db	255
  2440   00F54D  FF                 	db	255
  2441   00F54E  FF                 	db	255
  2442   00F54F  FF                 	db	255
  2443   00F550  FF                 	db	255
  2444   00F551  FF                 	db	255
  2445   00F552  FF                 	db	255
  2446   00F553  FF                 	db	255
  2447   00F554  FF                 	db	255
  2448   00F555  FF                 	db	255
  2449   00F556  FF                 	db	255
  2450   00F557  FF                 	db	255
  2451   00F558  FF                 	db	255
  2452   00F559  FF                 	db	255
  2453   00F55A  FF                 	db	255
  2454   00F55B  FF                 	db	255
  2455   00F55C  FF                 	db	255
  2456   00F55D  FF                 	db	255
  2457   00F55E  FF                 	db	255
  2458   00F55F  FF                 	db	255
  2459   00F560  FF                 	db	255
  2460   00F561  FF                 	db	255
  2461   00F562  FF                 	db	255
  2462   00F563  FF                 	db	255
  2463   00F564  FF                 	db	255
  2464   00F565  FF                 	db	255
  2465   00F566  FF                 	db	255
  2466   00F567  FF                 	db	255
  2467   00F568  FF                 	db	255
  2468   00F569  FF                 	db	255
  2469   00F56A  FF                 	db	255
  2470   00F56B  FF                 	db	255
  2471   00F56C  FF                 	db	255
  2472   00F56D  FF                 	db	255
  2473   00F56E  FF                 	db	255
  2474   00F56F  FF                 	db	255
  2475   00F570  FF                 	db	255
  2476   00F571  FF                 	db	255
  2477   00F572  FF                 	db	255
  2478   00F573  FF                 	db	255
  2479   00F574  FF                 	db	255
  2480   00F575  FF                 	db	255
  2481   00F576  FF                 	db	255
  2482   00F577  FF                 	db	255
  2483   00F578  FF                 	db	255
  2484   00F579  FF                 	db	255
  2485   00F57A  FF                 	db	255
  2486   00F57B  FF                 	db	255
  2487   00F57C  FF                 	db	255
  2488   00F57D  FF                 	db	255
  2489   00F57E  FF                 	db	255
  2490   00F57F  FF                 	db	255
  2491   00F580  FF                 	db	255
  2492   00F581  FF                 	db	255
  2493   00F582  FF                 	db	255
  2494   00F583  FF                 	db	255
  2495   00F584  FF                 	db	255
  2496   00F585  FF                 	db	255
  2497   00F586  FF                 	db	255
  2498   00F587  FF                 	db	255
  2499   00F588  FF                 	db	255
  2500   00F589  FF                 	db	255
  2501   00F58A  FF                 	db	255
  2502   00F58B  FF                 	db	255
  2503   00F58C  FF                 	db	255
  2504   00F58D  FF                 	db	255
  2505   00F58E  FF                 	db	255
  2506   00F58F  FF                 	db	255
  2507   00F590  FF                 	db	255
  2508   00F591  FF                 	db	255
  2509   00F592  FF                 	db	255
  2510   00F593  FF                 	db	255
  2511   00F594  FF                 	db	255
  2512   00F595  FF                 	db	255
  2513   00F596  FF                 	db	255
  2514   00F597  FF                 	db	255
  2515   00F598  FF                 	db	255
  2516   00F599  FF                 	db	255
  2517   00F59A  FF                 	db	255
  2518   00F59B  FF                 	db	255
  2519   00F59C  FF                 	db	255
  2520   00F59D  FF                 	db	255
  2521   00F59E  FF                 	db	255
  2522   00F59F  FF                 	db	255
  2523   00F5A0  FF                 	db	255
  2524   00F5A1  FF                 	db	255
  2525   00F5A2  FF                 	db	255
  2526   00F5A3  FF                 	db	255
  2527   00F5A4  FF                 	db	255
  2528   00F5A5  FF                 	db	255
  2529   00F5A6  FF                 	db	255
  2530   00F5A7  FF                 	db	255
  2531   00F5A8  FF                 	db	255
  2532   00F5A9  FF                 	db	255
  2533   00F5AA  FF                 	db	255
  2534   00F5AB  FF                 	db	255
  2535   00F5AC  FF                 	db	255
  2536   00F5AD  FF                 	db	255
  2537   00F5AE  FF                 	db	255
  2538   00F5AF  FF                 	db	255
  2539   00F5B0  FF                 	db	255
  2540   00F5B1  FF                 	db	255
  2541   00F5B2  FF                 	db	255
  2542   00F5B3  FF                 	db	255
  2543   00F5B4  FF                 	db	255
  2544   00F5B5  FF                 	db	255
  2545   00F5B6  FF                 	db	255
  2546   00F5B7  FF                 	db	255
  2547   00F5B8  FF                 	db	255
  2548   00F5B9  FF                 	db	255
  2549   00F5BA  FF                 	db	255
  2550   00F5BB  FF                 	db	255
  2551   00F5BC  FF                 	db	255
  2552   00F5BD  FF                 	db	255
  2553   00F5BE  FF                 	db	255
  2554   00F5BF  FF                 	db	255
  2555   00F5C0  FF                 	db	255
  2556   00F5C1  FF                 	db	255
  2557   00F5C2  FF                 	db	255
  2558   00F5C3  FF                 	db	255
  2559   00F5C4  FF                 	db	255
  2560   00F5C5  FF                 	db	255
  2561   00F5C6  FF                 	db	255
  2562   00F5C7  FF                 	db	255
  2563   00F5C8  FF                 	db	255
  2564   00F5C9  FF                 	db	255
  2565   00F5CA  FF                 	db	255
  2566   00F5CB  FF                 	db	255
  2567   00F5CC  FF                 	db	255
  2568   00F5CD  FF                 	db	255
  2569   00F5CE  FF                 	db	255
  2570   00F5CF  FF                 	db	255
  2571   00F5D0  FF                 	db	255
  2572   00F5D1  FF                 	db	255
  2573   00F5D2  FF                 	db	255
  2574   00F5D3  FF                 	db	255
  2575   00F5D4  FF                 	db	255
  2576   00F5D5  FF                 	db	255
  2577   00F5D6  FF                 	db	255
  2578   00F5D7  FF                 	db	255
  2579   00F5D8  FF                 	db	255
  2580   00F5D9  FF                 	db	255
  2581   00F5DA  FF                 	db	255
  2582   00F5DB  FF                 	db	255
  2583   00F5DC  FF                 	db	255
  2584   00F5DD  FF                 	db	255
  2585   00F5DE  FF                 	db	255
  2586   00F5DF  FF                 	db	255
  2587   00F5E0  FF                 	db	255
  2588   00F5E1  FF                 	db	255
  2589   00F5E2  FF                 	db	255
  2590   00F5E3  FF                 	db	255
  2591   00F5E4  FF                 	db	255
  2592   00F5E5  FF                 	db	255
  2593   00F5E6  FF                 	db	255
  2594   00F5E7  FF                 	db	255
  2595   00F5E8  FF                 	db	255
  2596   00F5E9  FF                 	db	255
  2597   00F5EA  FF                 	db	255
  2598   00F5EB  FF                 	db	255
  2599   00F5EC  FF                 	db	255
  2600   00F5ED  FF                 	db	255
  2601   00F5EE  FF                 	db	255
  2602   00F5EF  FF                 	db	255
  2603   00F5F0  FF                 	db	255
  2604   00F5F1  FF                 	db	255
  2605   00F5F2  FF                 	db	255
  2606   00F5F3  FF                 	db	255
  2607   00F5F4  FF                 	db	255
  2608   00F5F5  FF                 	db	255
  2609   00F5F6  FF                 	db	255
  2610   00F5F7  FF                 	db	255
  2611   00F5F8  FF                 	db	255
  2612   00F5F9  FF                 	db	255
  2613   00F5FA  FF                 	db	255
  2614   00F5FB  FF                 	db	255
  2615   00F5FC  FF                 	db	255
  2616   00F5FD  FF                 	db	255
  2617   00F5FE  FF                 	db	255
  2618   00F5FF  FF                 	db	255
  2619   00F600  FF                 	db	255
  2620   00F601  FF                 	db	255
  2621   00F602  FF                 	db	255
  2622   00F603  FF                 	db	255
  2623   00F604  FF                 	db	255
  2624   00F605  FF                 	db	255
  2625   00F606  FF                 	db	255
  2626   00F607  FF                 	db	255
  2627   00F608  FF                 	db	255
  2628   00F609  FF                 	db	255
  2629   00F60A  FF                 	db	255
  2630   00F60B  FF                 	db	255
  2631   00F60C  FF                 	db	255
  2632   00F60D  FF                 	db	255
  2633   00F60E  FF                 	db	255
  2634   00F60F  FF                 	db	255
  2635   00F610  FF                 	db	255
  2636   00F611  FF                 	db	255
  2637   00F612  FF                 	db	255
  2638   00F613  FF                 	db	255
  2639   00F614  FF                 	db	255
  2640   00F615  FF                 	db	255
  2641   00F616  FF                 	db	255
  2642   00F617  FF                 	db	255
  2643   00F618  FF                 	db	255
  2644   00F619  FF                 	db	255
  2645   00F61A  FF                 	db	255
  2646   00F61B  FF                 	db	255
  2647   00F61C  FF                 	db	255
  2648   00F61D  FF                 	db	255
  2649   00F61E  FF                 	db	255
  2650   00F61F  FF                 	db	255
  2651   00F620  FF                 	db	255
  2652   00F621  FF                 	db	255
  2653   00F622  FF                 	db	255
  2654   00F623  FF                 	db	255
  2655   00F624  FF                 	db	255
  2656   00F625  FF                 	db	255
  2657   00F626  FF                 	db	255
  2658   00F627  FF                 	db	255
  2659   00F628  FF                 	db	255
  2660   00F629  FF                 	db	255
  2661   00F62A  FF                 	db	255
  2662   00F62B  FF                 	db	255
  2663   00F62C  FF                 	db	255
  2664   00F62D  FF                 	db	255
  2665   00F62E  FF                 	db	255
  2666   00F62F  FF                 	db	255
  2667   00F630  FF                 	db	255
  2668   00F631  FF                 	db	255
  2669   00F632  FF                 	db	255
  2670   00F633  FF                 	db	255
  2671   00F634  FF                 	db	255
  2672   00F635  FF                 	db	255
  2673   00F636  FF                 	db	255
  2674   00F637  FF                 	db	255
  2675   00F638  FF                 	db	255
  2676   00F639  FF                 	db	255
  2677   00F63A  FF                 	db	255
  2678   00F63B  FF                 	db	255
  2679   00F63C  FF                 	db	255
  2680   00F63D  FF                 	db	255
  2681   00F63E  FF                 	db	255
  2682   00F63F  FF                 	db	255
  2683   00F640  FF                 	db	255
  2684   00F641  FF                 	db	255
  2685   00F642  FF                 	db	255
  2686   00F643  FF                 	db	255
  2687   00F644  FF                 	db	255
  2688   00F645  FF                 	db	255
  2689   00F646  FF                 	db	255
  2690   00F647  FF                 	db	255
  2691   00F648  FF                 	db	255
  2692   00F649  FF                 	db	255
  2693   00F64A  FF                 	db	255
  2694   00F64B  FF                 	db	255
  2695   00F64C  FF                 	db	255
  2696   00F64D  FF                 	db	255
  2697   00F64E  FF                 	db	255
  2698   00F64F  FF                 	db	255
  2699   00F650  FF                 	db	255
  2700   00F651  FF                 	db	255
  2701   00F652  FF                 	db	255
  2702   00F653  FF                 	db	255
  2703   00F654  FF                 	db	255
  2704   00F655  FF                 	db	255
  2705   00F656  FF                 	db	255
  2706   00F657  FF                 	db	255
  2707   00F658  FF                 	db	255
  2708   00F659  FF                 	db	255
  2709   00F65A  FF                 	db	255
  2710   00F65B  FF                 	db	255
  2711   00F65C  FF                 	db	255
  2712   00F65D  FF                 	db	255
  2713   00F65E  FF                 	db	255
  2714   00F65F  FF                 	db	255
  2715   00F660  FF                 	db	255
  2716   00F661  FF                 	db	255
  2717   00F662  FF                 	db	255
  2718   00F663  FF                 	db	255
  2719   00F664  FF                 	db	255
  2720   00F665  FF                 	db	255
  2721   00F666  FF                 	db	255
  2722   00F667  FF                 	db	255
  2723   00F668  FF                 	db	255
  2724   00F669  FF                 	db	255
  2725   00F66A  FF                 	db	255
  2726   00F66B  FF                 	db	255
  2727   00F66C  FF                 	db	255
  2728   00F66D  FF                 	db	255
  2729   00F66E  FF                 	db	255
  2730   00F66F  FF                 	db	255
  2731   00F670  FF                 	db	255
  2732   00F671  FF                 	db	255
  2733   00F672  FF                 	db	255
  2734   00F673  FF                 	db	255
  2735   00F674  FF                 	db	255
  2736   00F675  FF                 	db	255
  2737   00F676  FF                 	db	255
  2738   00F677  FF                 	db	255
  2739   00F678  FF                 	db	255
  2740   00F679  FF                 	db	255
  2741   00F67A  FF                 	db	255
  2742   00F67B  FF                 	db	255
  2743   00F67C  FF                 	db	255
  2744   00F67D  FF                 	db	255
  2745   00F67E  FF                 	db	255
  2746   00F67F  FF                 	db	255
  2747   00F680  FF                 	db	255
  2748   00F681  FF                 	db	255
  2749   00F682  FF                 	db	255
  2750   00F683  FF                 	db	255
  2751   00F684  FF                 	db	255
  2752   00F685  FF                 	db	255
  2753   00F686  FF                 	db	255
  2754   00F687  FF                 	db	255
  2755   00F688  FF                 	db	255
  2756   00F689  FF                 	db	255
  2757   00F68A  FF                 	db	255
  2758   00F68B  FF                 	db	255
  2759   00F68C  FF                 	db	255
  2760   00F68D  FF                 	db	255
  2761   00F68E  FF                 	db	255
  2762   00F68F  FF                 	db	255
  2763   00F690  FF                 	db	255
  2764   00F691  FF                 	db	255
  2765   00F692  FF                 	db	255
  2766   00F693  FF                 	db	255
  2767   00F694  FF                 	db	255
  2768   00F695  FF                 	db	255
  2769   00F696  FF                 	db	255
  2770   00F697  FF                 	db	255
  2771   00F698  FF                 	db	255
  2772   00F699  FF                 	db	255
  2773   00F69A  FF                 	db	255
  2774   00F69B  FF                 	db	255
  2775   00F69C  FF                 	db	255
  2776   00F69D  FF                 	db	255
  2777   00F69E  FF                 	db	255
  2778   00F69F  FF                 	db	255
  2779   00F6A0  FF                 	db	255
  2780   00F6A1  FF                 	db	255
  2781   00F6A2  FF                 	db	255
  2782   00F6A3  FF                 	db	255
  2783   00F6A4  FF                 	db	255
  2784   00F6A5  FF                 	db	255
  2785   00F6A6  FF                 	db	255
  2786   00F6A7  FF                 	db	255
  2787   00F6A8  FF                 	db	255
  2788   00F6A9  FF                 	db	255
  2789   00F6AA  FF                 	db	255
  2790   00F6AB  FF                 	db	255
  2791   00F6AC  FF                 	db	255
  2792   00F6AD  FF                 	db	255
  2793   00F6AE  FF                 	db	255
  2794   00F6AF  FF                 	db	255
  2795   00F6B0  FF                 	db	255
  2796   00F6B1  FF                 	db	255
  2797   00F6B2  FF                 	db	255
  2798   00F6B3  FF                 	db	255
  2799   00F6B4  FF                 	db	255
  2800   00F6B5  FF                 	db	255
  2801   00F6B6  FF                 	db	255
  2802   00F6B7  FF                 	db	255
  2803   00F6B8  FF                 	db	255
  2804   00F6B9  FF                 	db	255
  2805   00F6BA  FF                 	db	255
  2806   00F6BB  FF                 	db	255
  2807   00F6BC  FF                 	db	255
  2808   00F6BD  FF                 	db	255
  2809   00F6BE  FF                 	db	255
  2810   00F6BF  FF                 	db	255
  2811   00F6C0  FF                 	db	255
  2812   00F6C1  FF                 	db	255
  2813   00F6C2  FF                 	db	255
  2814   00F6C3  FF                 	db	255
  2815   00F6C4  FF                 	db	255
  2816   00F6C5  FF                 	db	255
  2817   00F6C6  FF                 	db	255
  2818   00F6C7  FF                 	db	255
  2819   00F6C8  FF                 	db	255
  2820   00F6C9  FF                 	db	255
  2821   00F6CA  FF                 	db	255
  2822   00F6CB  FF                 	db	255
  2823   00F6CC  FF                 	db	255
  2824   00F6CD  FF                 	db	255
  2825   00F6CE  FF                 	db	255
  2826   00F6CF  FF                 	db	255
  2827   00F6D0  FF                 	db	255
  2828   00F6D1  FF                 	db	255
  2829   00F6D2  FF                 	db	255
  2830   00F6D3  FF                 	db	255
  2831   00F6D4  FF                 	db	255
  2832   00F6D5  FF                 	db	255
  2833   00F6D6  FF                 	db	255
  2834   00F6D7  FF                 	db	255
  2835   00F6D8  FF                 	db	255
  2836   00F6D9  FF                 	db	255
  2837   00F6DA  FF                 	db	255
  2838   00F6DB  FF                 	db	255
  2839   00F6DC  FF                 	db	255
  2840   00F6DD  FF                 	db	255
  2841   00F6DE  FF                 	db	255
  2842   00F6DF  FF                 	db	255
  2843   00F6E0  FF                 	db	255
  2844   00F6E1  FF                 	db	255
  2845   00F6E2  FF                 	db	255
  2846   00F6E3  FF                 	db	255
  2847   00F6E4  FF                 	db	255
  2848   00F6E5  FF                 	db	255
  2849   00F6E6  FF                 	db	255
  2850   00F6E7  FF                 	db	255
  2851   00F6E8  FF                 	db	255
  2852   00F6E9  FF                 	db	255
  2853   00F6EA  FF                 	db	255
  2854   00F6EB  FF                 	db	255
  2855   00F6EC  FF                 	db	255
  2856   00F6ED  FF                 	db	255
  2857   00F6EE  FF                 	db	255
  2858   00F6EF  FF                 	db	255
  2859   00F6F0  FF                 	db	255
  2860   00F6F1  FF                 	db	255
  2861   00F6F2  FF                 	db	255
  2862   00F6F3  FF                 	db	255
  2863   00F6F4  FF                 	db	255
  2864   00F6F5  FF                 	db	255
  2865   00F6F6  FF                 	db	255
  2866   00F6F7  FF                 	db	255
  2867   00F6F8  FF                 	db	255
  2868   00F6F9  FF                 	db	255
  2869   00F6FA  FF                 	db	255
  2870   00F6FB  FF                 	db	255
  2871   00F6FC  FF                 	db	255
  2872   00F6FD  FF                 	db	255
  2873   00F6FE  FF                 	db	255
  2874   00F6FF  FF                 	db	255
  2875   00F700  FF                 	db	255
  2876   00F701  FF                 	db	255
  2877   00F702  FF                 	db	255
  2878   00F703  FF                 	db	255
  2879   00F704  FF                 	db	255
  2880   00F705  FF                 	db	255
  2881   00F706  FF                 	db	255
  2882   00F707  FF                 	db	255
  2883   00F708  FF                 	db	255
  2884   00F709  FF                 	db	255
  2885   00F70A  FF                 	db	255
  2886   00F70B  FF                 	db	255
  2887   00F70C  FF                 	db	255
  2888   00F70D  FF                 	db	255
  2889   00F70E  FF                 	db	255
  2890   00F70F  FF                 	db	255
  2891   00F710  FF                 	db	255
  2892   00F711  FF                 	db	255
  2893   00F712  FF                 	db	255
  2894   00F713  FF                 	db	255
  2895   00F714  FF                 	db	255
  2896   00F715  FF                 	db	255
  2897   00F716  FF                 	db	255
  2898   00F717  FF                 	db	255
  2899   00F718  FF                 	db	255
  2900   00F719  FF                 	db	255
  2901   00F71A  FF                 	db	255
  2902   00F71B  FF                 	db	255
  2903   00F71C  FF                 	db	255
  2904   00F71D  FF                 	db	255
  2905   00F71E  FF                 	db	255
  2906   00F71F  FF                 	db	255
  2907   00F720  FF                 	db	255
  2908   00F721  FF                 	db	255
  2909   00F722  FF                 	db	255
  2910   00F723  FF                 	db	255
  2911   00F724  FF                 	db	255
  2912   00F725  FF                 	db	255
  2913   00F726  FF                 	db	255
  2914   00F727  FF                 	db	255
  2915   00F728  FF                 	db	255
  2916   00F729  FF                 	db	255
  2917   00F72A  FF                 	db	255
  2918   00F72B  FF                 	db	255
  2919   00F72C  FF                 	db	255
  2920   00F72D  FF                 	db	255
  2921   00F72E  FF                 	db	255
  2922   00F72F  FF                 	db	255
  2923   00F730  FF                 	db	255
  2924   00F731  FF                 	db	255
  2925   00F732  FF                 	db	255
  2926   00F733  FF                 	db	255
  2927   00F734  FF                 	db	255
  2928   00F735  FF                 	db	255
  2929   00F736  FF                 	db	255
  2930   00F737  FF                 	db	255
  2931   00F738  FF                 	db	255
  2932   00F739  FF                 	db	255
  2933   00F73A  FF                 	db	255
  2934   00F73B  FF                 	db	255
  2935   00F73C  FF                 	db	255
  2936   00F73D  FF                 	db	255
  2937   00F73E  FF                 	db	255
  2938   00F73F  FF                 	db	255
  2939   00F740  FF                 	db	255
  2940   00F741  FF                 	db	255
  2941   00F742  FF                 	db	255
  2942   00F743  FF                 	db	255
  2943   00F744  FF                 	db	255
  2944   00F745  FF                 	db	255
  2945   00F746  FF                 	db	255
  2946   00F747  FF                 	db	255
  2947   00F748  FF                 	db	255
  2948   00F749  FF                 	db	255
  2949   00F74A  FF                 	db	255
  2950   00F74B  FF                 	db	255
  2951   00F74C  FF                 	db	255
  2952   00F74D  FF                 	db	255
  2953   00F74E  FF                 	db	255
  2954   00F74F  FF                 	db	255
  2955   00F750  FF                 	db	255
  2956   00F751  FF                 	db	255
  2957   00F752  FF                 	db	255
  2958   00F753  FF                 	db	255
  2959   00F754  FF                 	db	255
  2960   00F755  FF                 	db	255
  2961   00F756  FF                 	db	255
  2962   00F757  FF                 	db	255
  2963   00F758  FF                 	db	255
  2964   00F759  FF                 	db	255
  2965   00F75A  FF                 	db	255
  2966   00F75B  FF                 	db	255
  2967   00F75C  FF                 	db	255
  2968   00F75D  FF                 	db	255
  2969   00F75E  FF                 	db	255
  2970   00F75F  FF                 	db	255
  2971   00F760  FF                 	db	255
  2972   00F761  FF                 	db	255
  2973   00F762  FF                 	db	255
  2974   00F763  FF                 	db	255
  2975   00F764  FF                 	db	255
  2976   00F765  FF                 	db	255
  2977   00F766  FF                 	db	255
  2978   00F767  FF                 	db	255
  2979   00F768  FF                 	db	255
  2980   00F769  FF                 	db	255
  2981   00F76A  FF                 	db	255
  2982   00F76B  FF                 	db	255
  2983   00F76C  FF                 	db	255
  2984   00F76D  FF                 	db	255
  2985   00F76E  FF                 	db	255
  2986   00F76F  FF                 	db	255
  2987   00F770  FF                 	db	255
  2988   00F771  FF                 	db	255
  2989   00F772  FF                 	db	255
  2990   00F773  FF                 	db	255
  2991   00F774  FF                 	db	255
  2992   00F775  FF                 	db	255
  2993   00F776  FF                 	db	255
  2994   00F777  FF                 	db	255
  2995   00F778  FF                 	db	255
  2996   00F779  FF                 	db	255
  2997   00F77A  FF                 	db	255
  2998   00F77B  FF                 	db	255
  2999   00F77C  FF                 	db	255
  3000   00F77D  FF                 	db	255
  3001   00F77E  FF                 	db	255
  3002   00F77F  FF                 	db	255
  3003   00F780  FF                 	db	255
  3004   00F781  FF                 	db	255
  3005   00F782  FF                 	db	255
  3006   00F783  FF                 	db	255
  3007   00F784  FF                 	db	255
  3008   00F785  FF                 	db	255
  3009   00F786  FF                 	db	255
  3010   00F787  FF                 	db	255
  3011   00F788  FF                 	db	255
  3012   00F789  FF                 	db	255
  3013   00F78A  FF                 	db	255
  3014   00F78B  FF                 	db	255
  3015   00F78C  FF                 	db	255
  3016   00F78D  FF                 	db	255
  3017   00F78E  FF                 	db	255
  3018   00F78F  FF                 	db	255
  3019   00F790  FF                 	db	255
  3020   00F791  FF                 	db	255
  3021   00F792  FF                 	db	255
  3022   00F793  FF                 	db	255
  3023   00F794  FF                 	db	255
  3024   00F795  FF                 	db	255
  3025   00F796  FF                 	db	255
  3026   00F797  FF                 	db	255
  3027   00F798  FF                 	db	255
  3028   00F799  FF                 	db	255
  3029   00F79A  FF                 	db	255
  3030   00F79B  FF                 	db	255
  3031   00F79C  FF                 	db	255
  3032   00F79D  FF                 	db	255
  3033   00F79E  FF                 	db	255
  3034   00F79F  FF                 	db	255
  3035   00F7A0  FF                 	db	255
  3036   00F7A1  FF                 	db	255
  3037   00F7A2  FF                 	db	255
  3038   00F7A3  FF                 	db	255
  3039   00F7A4  FF                 	db	255
  3040   00F7A5  FF                 	db	255
  3041   00F7A6  FF                 	db	255
  3042   00F7A7  FF                 	db	255
  3043   00F7A8  FF                 	db	255
  3044   00F7A9  FF                 	db	255
  3045   00F7AA  FF                 	db	255
  3046   00F7AB  FF                 	db	255
  3047   00F7AC  FF                 	db	255
  3048   00F7AD  FF                 	db	255
  3049   00F7AE  FF                 	db	255
  3050   00F7AF  FF                 	db	255
  3051   00F7B0  FF                 	db	255
  3052   00F7B1  FF                 	db	255
  3053   00F7B2  FF                 	db	255
  3054   00F7B3  FF                 	db	255
  3055   00F7B4  FF                 	db	255
  3056   00F7B5  FF                 	db	255
  3057   00F7B6  FF                 	db	255
  3058   00F7B7  FF                 	db	255
  3059   00F7B8  FF                 	db	255
  3060   00F7B9  FF                 	db	255
  3061   00F7BA  FF                 	db	255
  3062   00F7BB  FF                 	db	255
  3063   00F7BC  FF                 	db	255
  3064   00F7BD  FF                 	db	255
  3065   00F7BE  FF                 	db	255
  3066   00F7BF  FF                 	db	255
  3067   00F7C0  FF                 	db	255
  3068   00F7C1  FF                 	db	255
  3069   00F7C2  FF                 	db	255
  3070   00F7C3  FF                 	db	255
  3071   00F7C4  FF                 	db	255
  3072   00F7C5  FF                 	db	255
  3073   00F7C6  FF                 	db	255
  3074   00F7C7  FF                 	db	255
  3075   00F7C8  FF                 	db	255
  3076   00F7C9  FF                 	db	255
  3077   00F7CA  FF                 	db	255
  3078   00F7CB  FF                 	db	255
  3079   00F7CC  FF                 	db	255
  3080   00F7CD  FF                 	db	255
  3081   00F7CE  FF                 	db	255
  3082   00F7CF  FF                 	db	255
  3083   00F7D0  FF                 	db	255
  3084   00F7D1  FF                 	db	255
  3085   00F7D2  FF                 	db	255
  3086   00F7D3  FF                 	db	255
  3087   00F7D4  FF                 	db	255
  3088   00F7D5  FF                 	db	255
  3089   00F7D6  FF                 	db	255
  3090   00F7D7  FF                 	db	255
  3091   00F7D8  FF                 	db	255
  3092   00F7D9  FF                 	db	255
  3093   00F7DA  FF                 	db	255
  3094   00F7DB  FF                 	db	255
  3095   00F7DC  FF                 	db	255
  3096   00F7DD  FF                 	db	255
  3097   00F7DE  FF                 	db	255
  3098   00F7DF  FF                 	db	255
  3099   00F7E0  FF                 	db	255
  3100   00F7E1  FF                 	db	255
  3101   00F7E2  FF                 	db	255
  3102   00F7E3  FF                 	db	255
  3103   00F7E4  FF                 	db	255
  3104   00F7E5  FF                 	db	255
  3105   00F7E6  FF                 	db	255
  3106   00F7E7  FF                 	db	255
  3107   00F7E8  FF                 	db	255
  3108   00F7E9  FF                 	db	255
  3109   00F7EA  FF                 	db	255
  3110   00F7EB  FF                 	db	255
  3111   00F7EC  FF                 	db	255
  3112   00F7ED  FF                 	db	255
  3113   00F7EE  FF                 	db	255
  3114   00F7EF  FF                 	db	255
  3115   00F7F0  FF                 	db	255
  3116   00F7F1  FF                 	db	255
  3117   00F7F2  FF                 	db	255
  3118   00F7F3  FF                 	db	255
  3119   00F7F4  FF                 	db	255
  3120   00F7F5  FF                 	db	255
  3121   00F7F6  FF                 	db	255
  3122   00F7F7  FF                 	db	255
  3123   00F7F8  FF                 	db	255
  3124   00F7F9  FF                 	db	255
  3125   00F7FA  FF                 	db	255
  3126   00F7FB  FF                 	db	255
  3127   00F7FC  FF                 	db	255
  3128   00F7FD  FF                 	db	255
  3129   00F7FE  FF                 	db	255
  3130   00F7FF  FF                 	db	255
  3131   00F800  FF                 	db	255
  3132   00F801  FF                 	db	255
  3133   00F802  FF                 	db	255
  3134   00F803  FF                 	db	255
  3135   00F804  FF                 	db	255
  3136   00F805  FF                 	db	255
  3137   00F806  FF                 	db	255
  3138   00F807  FF                 	db	255
  3139   00F808  FF                 	db	255
  3140   00F809  FF                 	db	255
  3141   00F80A  FF                 	db	255
  3142   00F80B  FF                 	db	255
  3143   00F80C  FF                 	db	255
  3144   00F80D  FF                 	db	255
  3145   00F80E  FF                 	db	255
  3146   00F80F  FF                 	db	255
  3147   00F810  FF                 	db	255
  3148   00F811  FF                 	db	255
  3149   00F812  FF                 	db	255
  3150   00F813  FF                 	db	255
  3151   00F814  FF                 	db	255
  3152   00F815  FF                 	db	255
  3153   00F816  FF                 	db	255
  3154   00F817  FF                 	db	255
  3155   00F818  FF                 	db	255
  3156   00F819  FF                 	db	255
  3157   00F81A  FF                 	db	255
  3158   00F81B  FF                 	db	255
  3159   00F81C  FF                 	db	255
  3160   00F81D  FF                 	db	255
  3161   00F81E  FF                 	db	255
  3162   00F81F  FF                 	db	255
  3163   00F820  FF                 	db	255
  3164   00F821  FF                 	db	255
  3165   00F822  FF                 	db	255
  3166   00F823  FF                 	db	255
  3167   00F824  FF                 	db	255
  3168   00F825  FF                 	db	255
  3169   00F826  FF                 	db	255
  3170   00F827  FF                 	db	255
  3171   00F828  FF                 	db	255
  3172   00F829  FF                 	db	255
  3173   00F82A  FF                 	db	255
  3174   00F82B  FF                 	db	255
  3175   00F82C  FF                 	db	255
  3176   00F82D  FF                 	db	255
  3177   00F82E  FF                 	db	255
  3178   00F82F  FF                 	db	255
  3179   00F830  FF                 	db	255
  3180   00F831  FF                 	db	255
  3181   00F832  FF                 	db	255
  3182   00F833  FF                 	db	255
  3183   00F834  FF                 	db	255
  3184   00F835  FF                 	db	255
  3185   00F836  FF                 	db	255
  3186   00F837  FF                 	db	255
  3187   00F838  FF                 	db	255
  3188   00F839  FF                 	db	255
  3189   00F83A  FF                 	db	255
  3190   00F83B  FF                 	db	255
  3191   00F83C  FF                 	db	255
  3192   00F83D  FF                 	db	255
  3193   00F83E  FF                 	db	255
  3194   00F83F  FF                 	db	255
  3195   00F840  FF                 	db	255
  3196   00F841  FF                 	db	255
  3197   00F842  FF                 	db	255
  3198   00F843  FF                 	db	255
  3199   00F844  FF                 	db	255
  3200   00F845  FF                 	db	255
  3201   00F846  FF                 	db	255
  3202   00F847  FF                 	db	255
  3203   00F848  FF                 	db	255
  3204   00F849  FF                 	db	255
  3205   00F84A  FF                 	db	255
  3206   00F84B  FF                 	db	255
  3207   00F84C  FF                 	db	255
  3208   00F84D  FF                 	db	255
  3209   00F84E  FF                 	db	255
  3210   00F84F  FF                 	db	255
  3211   00F850  FF                 	db	255
  3212   00F851  FF                 	db	255
  3213   00F852  FF                 	db	255
  3214   00F853  FF                 	db	255
  3215   00F854  FF                 	db	255
  3216   00F855  FF                 	db	255
  3217   00F856  FF                 	db	255
  3218   00F857  FF                 	db	255
  3219   00F858  FF                 	db	255
  3220   00F859  FF                 	db	255
  3221   00F85A  FF                 	db	255
  3222   00F85B  FF                 	db	255
  3223   00F85C  FF                 	db	255
  3224   00F85D  FF                 	db	255
  3225   00F85E  FF                 	db	255
  3226   00F85F  FF                 	db	255
  3227   00F860  FF                 	db	255
  3228   00F861  FF                 	db	255
  3229   00F862  FF                 	db	255
  3230   00F863  FF                 	db	255
  3231   00F864  FF                 	db	255
  3232   00F865  FF                 	db	255
  3233   00F866  FF                 	db	255
  3234   00F867  FF                 	db	255
  3235   00F868  FF                 	db	255
  3236   00F869  FF                 	db	255
  3237   00F86A  FF                 	db	255
  3238   00F86B  FF                 	db	255
  3239   00F86C  FF                 	db	255
  3240   00F86D  FF                 	db	255
  3241   00F86E  FF                 	db	255
  3242   00F86F  FF                 	db	255
  3243   00F870  FF                 	db	255
  3244   00F871  FF                 	db	255
  3245   00F872  FF                 	db	255
  3246   00F873  FF                 	db	255
  3247   00F874  FF                 	db	255
  3248   00F875  FF                 	db	255
  3249   00F876  FF                 	db	255
  3250   00F877  FF                 	db	255
  3251   00F878  FF                 	db	255
  3252   00F879  FF                 	db	255
  3253   00F87A  FF                 	db	255
  3254   00F87B  FF                 	db	255
  3255   00F87C  FF                 	db	255
  3256   00F87D  FF                 	db	255
  3257   00F87E  FF                 	db	255
  3258   00F87F  FF                 	db	255
  3259   00F880  FF                 	db	255
  3260   00F881  FF                 	db	255
  3261   00F882  FF                 	db	255
  3262   00F883  FF                 	db	255
  3263   00F884  FF                 	db	255
  3264   00F885  FF                 	db	255
  3265   00F886  FF                 	db	255
  3266   00F887  FF                 	db	255
  3267   00F888  FF                 	db	255
  3268   00F889  FF                 	db	255
  3269   00F88A  FF                 	db	255
  3270   00F88B  FF                 	db	255
  3271   00F88C  FF                 	db	255
  3272   00F88D  FF                 	db	255
  3273   00F88E  FF                 	db	255
  3274   00F88F  FF                 	db	255
  3275   00F890  FF                 	db	255
  3276   00F891  FF                 	db	255
  3277   00F892  FF                 	db	255
  3278   00F893  FF                 	db	255
  3279   00F894  FF                 	db	255
  3280   00F895  FF                 	db	255
  3281   00F896  FF                 	db	255
  3282   00F897  FF                 	db	255
  3283   00F898  FF                 	db	255
  3284   00F899  FF                 	db	255
  3285   00F89A  FF                 	db	255
  3286   00F89B  FF                 	db	255
  3287   00F89C  FF                 	db	255
  3288   00F89D  FF                 	db	255
  3289   00F89E  FF                 	db	255
  3290   00F89F  FF                 	db	255
  3291   00F8A0  FF                 	db	255
  3292   00F8A1  FF                 	db	255
  3293   00F8A2  FF                 	db	255
  3294   00F8A3  FF                 	db	255
  3295   00F8A4  FF                 	db	255
  3296   00F8A5  FF                 	db	255
  3297   00F8A6  FF                 	db	255
  3298   00F8A7  FF                 	db	255
  3299   00F8A8  FF                 	db	255
  3300   00F8A9  FF                 	db	255
  3301   00F8AA  FF                 	db	255
  3302   00F8AB  FF                 	db	255
  3303   00F8AC  FF                 	db	255
  3304   00F8AD  FF                 	db	255
  3305   00F8AE  FF                 	db	255
  3306   00F8AF  FF                 	db	255
  3307   00F8B0  FF                 	db	255
  3308   00F8B1  FF                 	db	255
  3309   00F8B2  FF                 	db	255
  3310   00F8B3  FF                 	db	255
  3311   00F8B4  FF                 	db	255
  3312   00F8B5  FF                 	db	255
  3313   00F8B6  FF                 	db	255
  3314   00F8B7  FF                 	db	255
  3315   00F8B8  FF                 	db	255
  3316   00F8B9  FF                 	db	255
  3317   00F8BA  FF                 	db	255
  3318   00F8BB  FF                 	db	255
  3319   00F8BC  FF                 	db	255
  3320   00F8BD  FF                 	db	255
  3321   00F8BE  FF                 	db	255
  3322   00F8BF  FF                 	db	255
  3323   00F8C0  FF                 	db	255
  3324   00F8C1  FF                 	db	255
  3325   00F8C2  FF                 	db	255
  3326   00F8C3  FF                 	db	255
  3327   00F8C4  FF                 	db	255
  3328   00F8C5  FF                 	db	255
  3329   00F8C6  FF                 	db	255
  3330   00F8C7  FF                 	db	255
  3331   00F8C8  FF                 	db	255
  3332   00F8C9  FF                 	db	255
  3333   00F8CA  FF                 	db	255
  3334   00F8CB  FF                 	db	255
  3335   00F8CC  FF                 	db	255
  3336   00F8CD  FF                 	db	255
  3337   00F8CE  FF                 	db	255
  3338   00F8CF  FF                 	db	255
  3339   00F8D0  FF                 	db	255
  3340   00F8D1  FF                 	db	255
  3341   00F8D2  FF                 	db	255
  3342   00F8D3  FF                 	db	255
  3343   00F8D4  FF                 	db	255
  3344   00F8D5  FF                 	db	255
  3345   00F8D6  FF                 	db	255
  3346   00F8D7  FF                 	db	255
  3347   00F8D8  FF                 	db	255
  3348   00F8D9  FF                 	db	255
  3349   00F8DA  FF                 	db	255
  3350   00F8DB  FF                 	db	255
  3351   00F8DC  FF                 	db	255
  3352   00F8DD  FF                 	db	255
  3353   00F8DE  FF                 	db	255
  3354   00F8DF  FF                 	db	255
  3355   00F8E0  FF                 	db	255
  3356   00F8E1  FF                 	db	255
  3357   00F8E2  FF                 	db	255
  3358   00F8E3  FF                 	db	255
  3359   00F8E4  FF                 	db	255
  3360   00F8E5  FF                 	db	255
  3361   00F8E6  FF                 	db	255
  3362   00F8E7  FF                 	db	255
  3363   00F8E8  FF                 	db	255
  3364   00F8E9  FF                 	db	255
  3365   00F8EA  FF                 	db	255
  3366   00F8EB  FF                 	db	255
  3367   00F8EC  FF                 	db	255
  3368   00F8ED  FF                 	db	255
  3369   00F8EE  FF                 	db	255
  3370   00F8EF  FF                 	db	255
  3371   00F8F0  FF                 	db	255
  3372   00F8F1  FF                 	db	255
  3373   00F8F2  FF                 	db	255
  3374   00F8F3  FF                 	db	255
  3375   00F8F4  FF                 	db	255
  3376   00F8F5  FF                 	db	255
  3377   00F8F6  FF                 	db	255
  3378   00F8F7  FF                 	db	255
  3379   00F8F8  FF                 	db	255
  3380   00F8F9  FF                 	db	255
  3381   00F8FA  FF                 	db	255
  3382   00F8FB  FF                 	db	255
  3383   00F8FC  FF                 	db	255
  3384   00F8FD  FF                 	db	255
  3385   00F8FE  FF                 	db	255
  3386   00F8FF  FF                 	db	255
  3387   00F900  FF                 	db	255
  3388   00F901  FF                 	db	255
  3389   00F902  FF                 	db	255
  3390   00F903  FF                 	db	255
  3391   00F904  FF                 	db	255
  3392   00F905  FF                 	db	255
  3393   00F906  FF                 	db	255
  3394   00F907  FF                 	db	255
  3395   00F908  FF                 	db	255
  3396   00F909  FF                 	db	255
  3397   00F90A  FF                 	db	255
  3398   00F90B  FF                 	db	255
  3399   00F90C  FF                 	db	255
  3400   00F90D  FF                 	db	255
  3401   00F90E  FF                 	db	255
  3402   00F90F  FF                 	db	255
  3403   00F910  FF                 	db	255
  3404   00F911  FF                 	db	255
  3405   00F912  FF                 	db	255
  3406   00F913  FF                 	db	255
  3407   00F914  FF                 	db	255
  3408   00F915  FF                 	db	255
  3409   00F916  FF                 	db	255
  3410   00F917  FF                 	db	255
  3411   00F918  FF                 	db	255
  3412   00F919  FF                 	db	255
  3413   00F91A  FF                 	db	255
  3414   00F91B  FF                 	db	255
  3415   00F91C  FF                 	db	255
  3416   00F91D  FF                 	db	255
  3417   00F91E  FF                 	db	255
  3418   00F91F  FF                 	db	255
  3419   00F920  FF                 	db	255
  3420   00F921  FF                 	db	255
  3421   00F922  FF                 	db	255
  3422   00F923  FF                 	db	255
  3423   00F924  FF                 	db	255
  3424   00F925  FF                 	db	255
  3425   00F926  FF                 	db	255
  3426   00F927  FF                 	db	255
  3427   00F928  FF                 	db	255
  3428   00F929  FF                 	db	255
  3429   00F92A  FF                 	db	255
  3430   00F92B  FF                 	db	255
  3431   00F92C  FF                 	db	255
  3432   00F92D  FF                 	db	255
  3433   00F92E  FF                 	db	255
  3434   00F92F  FF                 	db	255
  3435   00F930  FF                 	db	255
  3436   00F931  FF                 	db	255
  3437   00F932  FF                 	db	255
  3438   00F933  FF                 	db	255
  3439   00F934  FF                 	db	255
  3440   00F935  FF                 	db	255
  3441   00F936  FF                 	db	255
  3442   00F937  FF                 	db	255
  3443   00F938  FF                 	db	255
  3444   00F939  FF                 	db	255
  3445   00F93A  FF                 	db	255
  3446   00F93B  FF                 	db	255
  3447   00F93C  FF                 	db	255
  3448   00F93D  FF                 	db	255
  3449   00F93E  FF                 	db	255
  3450   00F93F  FF                 	db	255
  3451   00F940  FF                 	db	255
  3452   00F941  FF                 	db	255
  3453   00F942  FF                 	db	255
  3454   00F943  FF                 	db	255
  3455   00F944  FF                 	db	255
  3456   00F945  FF                 	db	255
  3457   00F946  FF                 	db	255
  3458   00F947  FF                 	db	255
  3459   00F948  FF                 	db	255
  3460   00F949  FF                 	db	255
  3461   00F94A  FF                 	db	255
  3462   00F94B  FF                 	db	255
  3463   00F94C  FF                 	db	255
  3464   00F94D  FF                 	db	255
  3465   00F94E  FF                 	db	255
  3466   00F94F  FF                 	db	255
  3467   00F950  FF                 	db	255
  3468   00F951  FF                 	db	255
  3469   00F952  FF                 	db	255
  3470   00F953  FF                 	db	255
  3471   00F954  FF                 	db	255
  3472   00F955  FF                 	db	255
  3473   00F956  FF                 	db	255
  3474   00F957  FF                 	db	255
  3475   00F958  FF                 	db	255
  3476   00F959  FF                 	db	255
  3477   00F95A  FF                 	db	255
  3478   00F95B  FF                 	db	255
  3479   00F95C  FF                 	db	255
  3480   00F95D  FF                 	db	255
  3481   00F95E  FF                 	db	255
  3482   00F95F  FF                 	db	255
  3483   00F960  FF                 	db	255
  3484   00F961  FF                 	db	255
  3485   00F962  FF                 	db	255
  3486   00F963  FF                 	db	255
  3487   00F964  FF                 	db	255
  3488   00F965  FF                 	db	255
  3489   00F966  FF                 	db	255
  3490   00F967  FF                 	db	255
  3491   00F968  FF                 	db	255
  3492   00F969  FF                 	db	255
  3493   00F96A  FF                 	db	255
  3494   00F96B  FF                 	db	255
  3495   00F96C  FF                 	db	255
  3496   00F96D  FF                 	db	255
  3497   00F96E  FF                 	db	255
  3498   00F96F  FF                 	db	255
  3499   00F970  FF                 	db	255
  3500   00F971  FF                 	db	255
  3501   00F972  FF                 	db	255
  3502   00F973  FF                 	db	255
  3503   00F974  FF                 	db	255
  3504   00F975  FF                 	db	255
  3505   00F976  FF                 	db	255
  3506   00F977  FF                 	db	255
  3507   00F978  FF                 	db	255
  3508   00F979  FF                 	db	255
  3509   00F97A  FF                 	db	255
  3510   00F97B  FF                 	db	255
  3511   00F97C  FF                 	db	255
  3512   00F97D  FF                 	db	255
  3513   00F97E  FF                 	db	255
  3514   00F97F  FF                 	db	255
  3515   00F980  FF                 	db	255
  3516   00F981  FF                 	db	255
  3517   00F982  FF                 	db	255
  3518   00F983  FF                 	db	255
  3519   00F984  FF                 	db	255
  3520   00F985  FF                 	db	255
  3521   00F986  FF                 	db	255
  3522   00F987  FF                 	db	255
  3523   00F988  FF                 	db	255
  3524   00F989  FF                 	db	255
  3525   00F98A  FF                 	db	255
  3526   00F98B  FF                 	db	255
  3527   00F98C  FF                 	db	255
  3528   00F98D  FF                 	db	255
  3529   00F98E  FF                 	db	255
  3530   00F98F  FF                 	db	255
  3531   00F990  FF                 	db	255
  3532   00F991  FF                 	db	255
  3533   00F992  FF                 	db	255
  3534   00F993  FF                 	db	255
  3535   00F994  FF                 	db	255
  3536   00F995  FF                 	db	255
  3537   00F996  FF                 	db	255
  3538   00F997  FF                 	db	255
  3539   00F998  FF                 	db	255
  3540   00F999  FF                 	db	255
  3541   00F99A  FF                 	db	255
  3542   00F99B  FF                 	db	255
  3543   00F99C  FF                 	db	255
  3544   00F99D  FF                 	db	255
  3545   00F99E  FF                 	db	255
  3546   00F99F  FF                 	db	255
  3547   00F9A0  FF                 	db	255
  3548   00F9A1  FF                 	db	255
  3549   00F9A2  FF                 	db	255
  3550   00F9A3  FF                 	db	255
  3551   00F9A4  FF                 	db	255
  3552   00F9A5  FF                 	db	255
  3553   00F9A6  FF                 	db	255
  3554   00F9A7  FF                 	db	255
  3555   00F9A8  FF                 	db	255
  3556   00F9A9  FF                 	db	255
  3557   00F9AA  FF                 	db	255
  3558   00F9AB  FF                 	db	255
  3559   00F9AC  FF                 	db	255
  3560   00F9AD  FF                 	db	255
  3561   00F9AE  FF                 	db	255
  3562   00F9AF  FF                 	db	255
  3563   00F9B0  FF                 	db	255
  3564   00F9B1  FF                 	db	255
  3565   00F9B2  FF                 	db	255
  3566   00F9B3  FF                 	db	255
  3567   00F9B4  FF                 	db	255
  3568   00F9B5  FF                 	db	255
  3569   00F9B6  FF                 	db	255
  3570   00F9B7  FF                 	db	255
  3571   00F9B8  FF                 	db	255
  3572   00F9B9  FF                 	db	255
  3573   00F9BA  FF                 	db	255
  3574   00F9BB  FF                 	db	255
  3575   00F9BC  FF                 	db	255
  3576   00F9BD  FF                 	db	255
  3577   00F9BE  FF                 	db	255
  3578   00F9BF  FF                 	db	255
  3579   00F9C0  FF                 	db	255
  3580   00F9C1  FF                 	db	255
  3581   00F9C2  FF                 	db	255
  3582   00F9C3  FF                 	db	255
  3583   00F9C4  FF                 	db	255
  3584   00F9C5  FF                 	db	255
  3585   00F9C6  FF                 	db	255
  3586   00F9C7  FF                 	db	255
  3587   00F9C8  FF                 	db	255
  3588   00F9C9  FF                 	db	255
  3589   00F9CA  FF                 	db	255
  3590   00F9CB  FF                 	db	255
  3591   00F9CC  FF                 	db	255
  3592   00F9CD  FF                 	db	255
  3593   00F9CE  FF                 	db	255
  3594   00F9CF  FF                 	db	255
  3595   00F9D0  FF                 	db	255
  3596   00F9D1  FF                 	db	255
  3597   00F9D2  FF                 	db	255
  3598   00F9D3  FF                 	db	255
  3599   00F9D4  FF                 	db	255
  3600   00F9D5  FF                 	db	255
  3601   00F9D6  FF                 	db	255
  3602   00F9D7  FF                 	db	255
  3603   00F9D8  FF                 	db	255
  3604   00F9D9  FF                 	db	255
  3605   00F9DA  FF                 	db	255
  3606   00F9DB  FF                 	db	255
  3607   00F9DC  FF                 	db	255
  3608   00F9DD  FF                 	db	255
  3609   00F9DE  FF                 	db	255
  3610   00F9DF  FF                 	db	255
  3611   00F9E0  FF                 	db	255
  3612   00F9E1  FF                 	db	255
  3613   00F9E2  FF                 	db	255
  3614   00F9E3  FF                 	db	255
  3615   00F9E4  FF                 	db	255
  3616   00F9E5  FF                 	db	255
  3617   00F9E6  FF                 	db	255
  3618   00F9E7  FF                 	db	255
  3619   00F9E8  FF                 	db	255
  3620   00F9E9  FF                 	db	255
  3621   00F9EA  FF                 	db	255
  3622   00F9EB  FF                 	db	255
  3623   00F9EC  FF                 	db	255
  3624   00F9ED  FF                 	db	255
  3625   00F9EE  FF                 	db	255
  3626   00F9EF  FF                 	db	255
  3627   00F9F0  FF                 	db	255
  3628   00F9F1  FF                 	db	255
  3629   00F9F2  FF                 	db	255
  3630   00F9F3  FF                 	db	255
  3631   00F9F4  FF                 	db	255
  3632   00F9F5  FF                 	db	255
  3633   00F9F6  FF                 	db	255
  3634   00F9F7  FF                 	db	255
  3635   00F9F8  FF                 	db	255
  3636   00F9F9  FF                 	db	255
  3637   00F9FA  FF                 	db	255
  3638   00F9FB  FF                 	db	255
  3639   00F9FC  FF                 	db	255
  3640   00F9FD  FF                 	db	255
  3641   00F9FE  FF                 	db	255
  3642   00F9FF  FF                 	db	255
  3643   00FA00  FF                 	db	255
  3644   00FA01  FF                 	db	255
  3645   00FA02  FF                 	db	255
  3646   00FA03  FF                 	db	255
  3647   00FA04  FF                 	db	255
  3648   00FA05  FF                 	db	255
  3649   00FA06  FF                 	db	255
  3650   00FA07  FF                 	db	255
  3651   00FA08  FF                 	db	255
  3652   00FA09  FF                 	db	255
  3653   00FA0A  FF                 	db	255
  3654   00FA0B  FF                 	db	255
  3655   00FA0C  FF                 	db	255
  3656   00FA0D  FF                 	db	255
  3657   00FA0E  FF                 	db	255
  3658   00FA0F  FF                 	db	255
  3659   00FA10  FF                 	db	255
  3660   00FA11  FF                 	db	255
  3661   00FA12  FF                 	db	255
  3662   00FA13  FF                 	db	255
  3663   00FA14  FF                 	db	255
  3664   00FA15  FF                 	db	255
  3665   00FA16  FF                 	db	255
  3666   00FA17  FF                 	db	255
  3667   00FA18  FF                 	db	255
  3668   00FA19  FF                 	db	255
  3669   00FA1A  FF                 	db	255
  3670   00FA1B  FF                 	db	255
  3671   00FA1C  FF                 	db	255
  3672   00FA1D  FF                 	db	255
  3673   00FA1E  FF                 	db	255
  3674   00FA1F  FF                 	db	255
  3675   00FA20  FF                 	db	255
  3676   00FA21  FF                 	db	255
  3677   00FA22  FF                 	db	255
  3678   00FA23  FF                 	db	255
  3679   00FA24  FF                 	db	255
  3680   00FA25  FF                 	db	255
  3681   00FA26  FF                 	db	255
  3682   00FA27  FF                 	db	255
  3683   00FA28  FF                 	db	255
  3684   00FA29  FF                 	db	255
  3685   00FA2A  FF                 	db	255
  3686   00FA2B  FF                 	db	255
  3687   00FA2C  FF                 	db	255
  3688   00FA2D  FF                 	db	255
  3689   00FA2E  FF                 	db	255
  3690   00FA2F  FF                 	db	255
  3691   00FA30  FF                 	db	255
  3692   00FA31  FF                 	db	255
  3693   00FA32  FF                 	db	255
  3694   00FA33  FF                 	db	255
  3695   00FA34  FF                 	db	255
  3696   00FA35  FF                 	db	255
  3697   00FA36  FF                 	db	255
  3698   00FA37  FF                 	db	255
  3699   00FA38  FF                 	db	255
  3700   00FA39  FF                 	db	255
  3701   00FA3A  FF                 	db	255
  3702   00FA3B  FF                 	db	255
  3703   00FA3C  FF                 	db	255
  3704   00FA3D  FF                 	db	255
  3705   00FA3E  FF                 	db	255
  3706   00FA3F  FF                 	db	255
  3707   00FA40  FF                 	db	255
  3708   00FA41  FF                 	db	255
  3709   00FA42  FF                 	db	255
  3710   00FA43  FF                 	db	255
  3711   00FA44  FF                 	db	255
  3712   00FA45  FF                 	db	255
  3713   00FA46  FF                 	db	255
  3714   00FA47  FF                 	db	255
  3715   00FA48  FF                 	db	255
  3716   00FA49  FF                 	db	255
  3717   00FA4A  FF                 	db	255
  3718   00FA4B  FF                 	db	255
  3719   00FA4C  FF                 	db	255
  3720   00FA4D  FF                 	db	255
  3721   00FA4E  FF                 	db	255
  3722   00FA4F  FF                 	db	255
  3723   00FA50  FF                 	db	255
  3724   00FA51  FF                 	db	255
  3725   00FA52  FF                 	db	255
  3726   00FA53  FF                 	db	255
  3727   00FA54  FF                 	db	255
  3728   00FA55  FF                 	db	255
  3729   00FA56  FF                 	db	255
  3730   00FA57  FF                 	db	255
  3731   00FA58  FF                 	db	255
  3732   00FA59  FF                 	db	255
  3733   00FA5A  FF                 	db	255
  3734   00FA5B  FF                 	db	255
  3735   00FA5C  FF                 	db	255
  3736   00FA5D  FF                 	db	255
  3737   00FA5E  FF                 	db	255
  3738   00FA5F  FF                 	db	255
  3739   00FA60  FF                 	db	255
  3740   00FA61  FF                 	db	255
  3741   00FA62  FF                 	db	255
  3742   00FA63  FF                 	db	255
  3743   00FA64  FF                 	db	255
  3744   00FA65  FF                 	db	255
  3745   00FA66  FF                 	db	255
  3746   00FA67  FF                 	db	255
  3747   00FA68  FF                 	db	255
  3748   00FA69  FF                 	db	255
  3749   00FA6A  FF                 	db	255
  3750   00FA6B  FF                 	db	255
  3751   00FA6C  FF                 	db	255
  3752   00FA6D  FF                 	db	255
  3753   00FA6E  FF                 	db	255
  3754   00FA6F  FF                 	db	255
  3755   00FA70  FF                 	db	255
  3756   00FA71  FF                 	db	255
  3757   00FA72  FF                 	db	255
  3758   00FA73  FF                 	db	255
  3759   00FA74  FF                 	db	255
  3760   00FA75  FF                 	db	255
  3761   00FA76  FF                 	db	255
  3762   00FA77  FF                 	db	255
  3763   00FA78  FF                 	db	255
  3764   00FA79  FF                 	db	255
  3765   00FA7A  FF                 	db	255
  3766   00FA7B  FF                 	db	255
  3767   00FA7C  FF                 	db	255
  3768   00FA7D  FF                 	db	255
  3769   00FA7E  FF                 	db	255
  3770   00FA7F  FF                 	db	255
  3771   00FA80  FF                 	db	255
  3772   00FA81  FF                 	db	255
  3773   00FA82  FF                 	db	255
  3774   00FA83  FF                 	db	255
  3775   00FA84  FF                 	db	255
  3776   00FA85  FF                 	db	255
  3777   00FA86  FF                 	db	255
  3778   00FA87  FF                 	db	255
  3779   00FA88  FF                 	db	255
  3780   00FA89  FF                 	db	255
  3781   00FA8A  FF                 	db	255
  3782   00FA8B  FF                 	db	255
  3783   00FA8C  FF                 	db	255
  3784   00FA8D  FF                 	db	255
  3785   00FA8E  FF                 	db	255
  3786   00FA8F  FF                 	db	255
  3787   00FA90  FF                 	db	255
  3788   00FA91  FF                 	db	255
  3789   00FA92  FF                 	db	255
  3790   00FA93  FF                 	db	255
  3791   00FA94  FF                 	db	255
  3792   00FA95  FF                 	db	255
  3793   00FA96  FF                 	db	255
  3794   00FA97  FF                 	db	255
  3795   00FA98  FF                 	db	255
  3796   00FA99  FF                 	db	255
  3797   00FA9A  FF                 	db	255
  3798   00FA9B  FF                 	db	255
  3799   00FA9C  FF                 	db	255
  3800   00FA9D  FF                 	db	255
  3801   00FA9E  FF                 	db	255
  3802   00FA9F  FF                 	db	255
  3803   00FAA0  FF                 	db	255
  3804   00FAA1  FF                 	db	255
  3805   00FAA2  FF                 	db	255
  3806   00FAA3  FF                 	db	255
  3807   00FAA4  FF                 	db	255
  3808   00FAA5  FF                 	db	255
  3809   00FAA6  FF                 	db	255
  3810   00FAA7  FF                 	db	255
  3811   00FAA8  FF                 	db	255
  3812   00FAA9  FF                 	db	255
  3813   00FAAA  FF                 	db	255
  3814   00FAAB  FF                 	db	255
  3815   00FAAC  FF                 	db	255
  3816   00FAAD  FF                 	db	255
  3817   00FAAE  FF                 	db	255
  3818   00FAAF  FF                 	db	255
  3819   00FAB0  FF                 	db	255
  3820   00FAB1  FF                 	db	255
  3821   00FAB2  FF                 	db	255
  3822   00FAB3  FF                 	db	255
  3823   00FAB4  FF                 	db	255
  3824   00FAB5  FF                 	db	255
  3825   00FAB6  FF                 	db	255
  3826   00FAB7  FF                 	db	255
  3827   00FAB8  FF                 	db	255
  3828   00FAB9  FF                 	db	255
  3829   00FABA  FF                 	db	255
  3830   00FABB  FF                 	db	255
  3831   00FABC  FF                 	db	255
  3832   00FABD  FF                 	db	255
  3833   00FABE  FF                 	db	255
  3834   00FABF  FF                 	db	255
  3835   00FAC0  FF                 	db	255
  3836   00FAC1  FF                 	db	255
  3837   00FAC2  FF                 	db	255
  3838   00FAC3  FF                 	db	255
  3839   00FAC4  FF                 	db	255
  3840   00FAC5  FF                 	db	255
  3841   00FAC6  FF                 	db	255
  3842   00FAC7  FF                 	db	255
  3843   00FAC8  FF                 	db	255
  3844   00FAC9  FF                 	db	255
  3845   00FACA  FF                 	db	255
  3846   00FACB  FF                 	db	255
  3847   00FACC  FF                 	db	255
  3848   00FACD  FF                 	db	255
  3849   00FACE  FF                 	db	255
  3850   00FACF  FF                 	db	255
  3851   00FAD0  FF                 	db	255
  3852   00FAD1  FF                 	db	255
  3853   00FAD2  FF                 	db	255
  3854   00FAD3  FF                 	db	255
  3855   00FAD4  FF                 	db	255
  3856   00FAD5  FF                 	db	255
  3857   00FAD6  FF                 	db	255
  3858   00FAD7  FF                 	db	255
  3859   00FAD8  FF                 	db	255
  3860   00FAD9  FF                 	db	255
  3861   00FADA  FF                 	db	255
  3862   00FADB  FF                 	db	255
  3863   00FADC  FF                 	db	255
  3864   00FADD  FF                 	db	255
  3865   00FADE  FF                 	db	255
  3866   00FADF  FF                 	db	255
  3867   00FAE0  FF                 	db	255
  3868   00FAE1  FF                 	db	255
  3869   00FAE2  FF                 	db	255
  3870   00FAE3  FF                 	db	255
  3871   00FAE4  FF                 	db	255
  3872   00FAE5  FF                 	db	255
  3873   00FAE6  FF                 	db	255
  3874   00FAE7  FF                 	db	255
  3875   00FAE8  FF                 	db	255
  3876   00FAE9  FF                 	db	255
  3877   00FAEA  FF                 	db	255
  3878   00FAEB  FF                 	db	255
  3879   00FAEC  FF                 	db	255
  3880   00FAED  FF                 	db	255
  3881   00FAEE  FF                 	db	255
  3882   00FAEF  FF                 	db	255
  3883   00FAF0  FF                 	db	255
  3884   00FAF1  FF                 	db	255
  3885   00FAF2  FF                 	db	255
  3886   00FAF3  FF                 	db	255
  3887   00FAF4  FF                 	db	255
  3888   00FAF5  FF                 	db	255
  3889   00FAF6  FF                 	db	255
  3890   00FAF7  FF                 	db	255
  3891   00FAF8  FF                 	db	255
  3892   00FAF9  FF                 	db	255
  3893   00FAFA  FF                 	db	255
  3894   00FAFB  FF                 	db	255
  3895   00FAFC  FF                 	db	255
  3896   00FAFD  FF                 	db	255
  3897   00FAFE  FF                 	db	255
  3898   00FAFF  FF                 	db	255
  3899   00FB00  FF                 	db	255
  3900   00FB01  FF                 	db	255
  3901   00FB02  FF                 	db	255
  3902   00FB03  FF                 	db	255
  3903   00FB04  FF                 	db	255
  3904   00FB05  FF                 	db	255
  3905   00FB06  FF                 	db	255
  3906   00FB07  FF                 	db	255
  3907   00FB08  FF                 	db	255
  3908   00FB09  FF                 	db	255
  3909   00FB0A  FF                 	db	255
  3910   00FB0B  FF                 	db	255
  3911   00FB0C  FF                 	db	255
  3912   00FB0D  FF                 	db	255
  3913   00FB0E  FF                 	db	255
  3914   00FB0F  FF                 	db	255
  3915   00FB10  FF                 	db	255
  3916   00FB11  FF                 	db	255
  3917   00FB12  FF                 	db	255
  3918   00FB13  FF                 	db	255
  3919   00FB14  FF                 	db	255
  3920   00FB15  FF                 	db	255
  3921   00FB16  FF                 	db	255
  3922   00FB17  FF                 	db	255
  3923   00FB18  FF                 	db	255
  3924   00FB19  FF                 	db	255
  3925   00FB1A  FF                 	db	255
  3926   00FB1B  FF                 	db	255
  3927   00FB1C  FF                 	db	255
  3928   00FB1D  FF                 	db	255
  3929   00FB1E  FF                 	db	255
  3930   00FB1F  FF                 	db	255
  3931   00FB20  FF                 	db	255
  3932   00FB21  FF                 	db	255
  3933   00FB22  FF                 	db	255
  3934   00FB23  FF                 	db	255
  3935   00FB24  FF                 	db	255
  3936   00FB25  FF                 	db	255
  3937   00FB26  FF                 	db	255
  3938   00FB27  FF                 	db	255
  3939   00FB28  FF                 	db	255
  3940   00FB29  FF                 	db	255
  3941   00FB2A  FF                 	db	255
  3942   00FB2B  FF                 	db	255
  3943   00FB2C  FF                 	db	255
  3944   00FB2D  FF                 	db	255
  3945   00FB2E  FF                 	db	255
  3946   00FB2F  FF                 	db	255
  3947   00FB30  FF                 	db	255
  3948   00FB31  FF                 	db	255
  3949   00FB32  FF                 	db	255
  3950   00FB33  FF                 	db	255
  3951   00FB34  FF                 	db	255
  3952   00FB35  FF                 	db	255
  3953   00FB36  FF                 	db	255
  3954   00FB37  FF                 	db	255
  3955   00FB38  FF                 	db	255
  3956   00FB39  FF                 	db	255
  3957   00FB3A  FF                 	db	255
  3958   00FB3B  FF                 	db	255
  3959   00FB3C  FF                 	db	255
  3960   00FB3D  FF                 	db	255
  3961   00FB3E  FF                 	db	255
  3962   00FB3F  FF                 	db	255
  3963   00FB40  FF                 	db	255
  3964   00FB41  FF                 	db	255
  3965   00FB42  FF                 	db	255
  3966   00FB43  FF                 	db	255
  3967   00FB44  FF                 	db	255
  3968   00FB45  FF                 	db	255
  3969   00FB46  FF                 	db	255
  3970   00FB47  FF                 	db	255
  3971   00FB48  FF                 	db	255
  3972   00FB49  FF                 	db	255
  3973   00FB4A  FF                 	db	255
  3974   00FB4B  FF                 	db	255
  3975   00FB4C  FF                 	db	255
  3976   00FB4D  FF                 	db	255
  3977   00FB4E  FF                 	db	255
  3978   00FB4F  FF                 	db	255
  3979   00FB50  FF                 	db	255
  3980   00FB51  FF                 	db	255
  3981   00FB52  FF                 	db	255
  3982   00FB53  FF                 	db	255
  3983   00FB54  FF                 	db	255
  3984   00FB55  FF                 	db	255
  3985   00FB56  FF                 	db	255
  3986   00FB57  FF                 	db	255
  3987   00FB58  FF                 	db	255
  3988   00FB59  FF                 	db	255
  3989   00FB5A  FF                 	db	255
  3990   00FB5B  FF                 	db	255
  3991   00FB5C  FF                 	db	255
  3992   00FB5D  FF                 	db	255
  3993   00FB5E  FF                 	db	255
  3994   00FB5F  FF                 	db	255
  3995   00FB60  FF                 	db	255
  3996   00FB61  FF                 	db	255
  3997   00FB62  FF                 	db	255
  3998   00FB63  FF                 	db	255
  3999   00FB64  FF                 	db	255
  4000   00FB65  FF                 	db	255
  4001   00FB66  FF                 	db	255
  4002   00FB67  FF                 	db	255
  4003   00FB68  FF                 	db	255
  4004   00FB69  FF                 	db	255
  4005   00FB6A  FF                 	db	255
  4006   00FB6B  FF                 	db	255
  4007   00FB6C  FF                 	db	255
  4008   00FB6D  FF                 	db	255
  4009   00FB6E  FF                 	db	255
  4010   00FB6F  FF                 	db	255
  4011   00FB70  FF                 	db	255
  4012   00FB71  FF                 	db	255
  4013   00FB72  FF                 	db	255
  4014   00FB73  FF                 	db	255
  4015   00FB74  FF                 	db	255
  4016   00FB75  FF                 	db	255
  4017   00FB76  FF                 	db	255
  4018   00FB77  FF                 	db	255
  4019   00FB78  FF                 	db	255
  4020   00FB79  FF                 	db	255
  4021   00FB7A  FF                 	db	255
  4022   00FB7B  FF                 	db	255
  4023   00FB7C  FF                 	db	255
  4024   00FB7D  FF                 	db	255
  4025   00FB7E  FF                 	db	255
  4026   00FB7F  FF                 	db	255
  4027   00FB80  FF                 	db	255
  4028   00FB81  FF                 	db	255
  4029   00FB82  FF                 	db	255
  4030   00FB83  FF                 	db	255
  4031   00FB84  FF                 	db	255
  4032   00FB85  FF                 	db	255
  4033   00FB86  FF                 	db	255
  4034   00FB87  FF                 	db	255
  4035   00FB88  FF                 	db	255
  4036   00FB89  FF                 	db	255
  4037   00FB8A  FF                 	db	255
  4038   00FB8B  FF                 	db	255
  4039   00FB8C  FF                 	db	255
  4040   00FB8D  FF                 	db	255
  4041   00FB8E  FF                 	db	255
  4042   00FB8F  FF                 	db	255
  4043   00FB90  FF                 	db	255
  4044   00FB91  FF                 	db	255
  4045   00FB92  FF                 	db	255
  4046   00FB93  FF                 	db	255
  4047   00FB94  FF                 	db	255
  4048   00FB95  FF                 	db	255
  4049   00FB96  FF                 	db	255
  4050   00FB97  FF                 	db	255
  4051   00FB98  FF                 	db	255
  4052   00FB99  FF                 	db	255
  4053   00FB9A  FF                 	db	255
  4054   00FB9B  FF                 	db	255
  4055   00FB9C  FF                 	db	255
  4056   00FB9D  FF                 	db	255
  4057   00FB9E  FF                 	db	255
  4058   00FB9F  FF                 	db	255
  4059   00FBA0  FF                 	db	255
  4060   00FBA1  FF                 	db	255
  4061   00FBA2  FF                 	db	255
  4062   00FBA3  FF                 	db	255
  4063   00FBA4  FF                 	db	255
  4064   00FBA5  FF                 	db	255
  4065   00FBA6  FF                 	db	255
  4066   00FBA7  FF                 	db	255
  4067   00FBA8  FF                 	db	255
  4068   00FBA9  FF                 	db	255
  4069   00FBAA  FF                 	db	255
  4070   00FBAB  FF                 	db	255
  4071   00FBAC  FF                 	db	255
  4072   00FBAD  FF                 	db	255
  4073   00FBAE  FF                 	db	255
  4074   00FBAF  FF                 	db	255
  4075   00FBB0  FF                 	db	255
  4076   00FBB1  FF                 	db	255
  4077   00FBB2  FF                 	db	255
  4078   00FBB3  FF                 	db	255
  4079   00FBB4  FF                 	db	255
  4080   00FBB5  FF                 	db	255
  4081   00FBB6  FF                 	db	255
  4082   00FBB7  FF                 	db	255
  4083   00FBB8  FF                 	db	255
  4084   00FBB9  FF                 	db	255
  4085   00FBBA  FF                 	db	255
  4086   00FBBB  FF                 	db	255
  4087   00FBBC  FF                 	db	255
  4088   00FBBD  FF                 	db	255
  4089   00FBBE  FF                 	db	255
  4090   00FBBF  FF                 	db	255
  4091   00FBC0  FF                 	db	255
  4092   00FBC1  FF                 	db	255
  4093   00FBC2  FF                 	db	255
  4094   00FBC3  FF                 	db	255
  4095   00FBC4  FF                 	db	255
  4096   00FBC5  FF                 	db	255
  4097   00FBC6  FF                 	db	255
  4098   00FBC7  FF                 	db	255
  4099   00FBC8  FF                 	db	255
  4100   00FBC9  FF                 	db	255
  4101   00FBCA  FF                 	db	255
  4102   00FBCB  FF                 	db	255
  4103   00FBCC  FF                 	db	255
  4104   00FBCD  FF                 	db	255
  4105   00FBCE  FF                 	db	255
  4106   00FBCF  FF                 	db	255
  4107   00FBD0  FF                 	db	255
  4108   00FBD1  FF                 	db	255
  4109   00FBD2  FF                 	db	255
  4110   00FBD3  FF                 	db	255
  4111   00FBD4  FF                 	db	255
  4112   00FBD5  FF                 	db	255
  4113   00FBD6  FF                 	db	255
  4114   00FBD7  FF                 	db	255
  4115   00FBD8  FF                 	db	255
  4116   00FBD9  FF                 	db	255
  4117   00FBDA  FF                 	db	255
  4118   00FBDB  FF                 	db	255
  4119   00FBDC  FF                 	db	255
  4120   00FBDD  FF                 	db	255
  4121   00FBDE  FF                 	db	255
  4122   00FBDF  FF                 	db	255
  4123   00FBE0  FF                 	db	255
  4124   00FBE1  FF                 	db	255
  4125   00FBE2  FF                 	db	255
  4126   00FBE3  FF                 	db	255
  4127   00FBE4  FF                 	db	255
  4128   00FBE5  FF                 	db	255
  4129   00FBE6  FF                 	db	255
  4130   00FBE7  FF                 	db	255
  4131   00FBE8  FF                 	db	255
  4132   00FBE9  FF                 	db	255
  4133   00FBEA  FF                 	db	255
  4134   00FBEB  FF                 	db	255
  4135   00FBEC  FF                 	db	255
  4136   00FBED  FF                 	db	255
  4137   00FBEE  FF                 	db	255
  4138   00FBEF  FF                 	db	255
  4139   00FBF0  FF                 	db	255
  4140   00FBF1  FF                 	db	255
  4141   00FBF2  FF                 	db	255
  4142   00FBF3  FF                 	db	255
  4143   00FBF4  FF                 	db	255
  4144   00FBF5  FF                 	db	255
  4145   00FBF6  FF                 	db	255
  4146   00FBF7  FF                 	db	255
  4147   00FBF8  FF                 	db	255
  4148   00FBF9  FF                 	db	255
  4149   00FBFA  FF                 	db	255
  4150   00FBFB  FF                 	db	255
  4151   00FBFC  FF                 	db	255
  4152   00FBFD  FF                 	db	255
  4153   00FBFE  FF                 	db	255
  4154   00FBFF  FF                 	db	255
  4155   00FC00  FF                 	db	255
  4156   00FC01  FF                 	db	255
  4157   00FC02  FF                 	db	255
  4158   00FC03  FF                 	db	255
  4159   00FC04  FF                 	db	255
  4160   00FC05  FF                 	db	255
  4161   00FC06  FF                 	db	255
  4162   00FC07  FF                 	db	255
  4163   00FC08  FF                 	db	255
  4164   00FC09  FF                 	db	255
  4165   00FC0A  FF                 	db	255
  4166   00FC0B  FF                 	db	255
  4167   00FC0C  FF                 	db	255
  4168   00FC0D  FF                 	db	255
  4169   00FC0E  FF                 	db	255
  4170   00FC0F  FF                 	db	255
  4171   00FC10  FF                 	db	255
  4172   00FC11  FF                 	db	255
  4173   00FC12  FF                 	db	255
  4174   00FC13  FF                 	db	255
  4175   00FC14  FF                 	db	255
  4176   00FC15  FF                 	db	255
  4177   00FC16  FF                 	db	255
  4178   00FC17  FF                 	db	255
  4179   00FC18  FF                 	db	255
  4180   00FC19  FF                 	db	255
  4181   00FC1A  FF                 	db	255
  4182   00FC1B  FF                 	db	255
  4183   00FC1C  FF                 	db	255
  4184   00FC1D  FF                 	db	255
  4185   00FC1E  FF                 	db	255
  4186   00FC1F  FF                 	db	255
  4187   00FC20  FF                 	db	255
  4188   00FC21  FF                 	db	255
  4189   00FC22  FF                 	db	255
  4190   00FC23  FF                 	db	255
  4191   00FC24  FF                 	db	255
  4192   00FC25  FF                 	db	255
  4193   00FC26  FF                 	db	255
  4194   00FC27  FF                 	db	255
  4195   00FC28  FF                 	db	255
  4196   00FC29  FF                 	db	255
  4197   00FC2A  FF                 	db	255
  4198   00FC2B  FF                 	db	255
  4199   00FC2C  FF                 	db	255
  4200   00FC2D  FF                 	db	255
  4201   00FC2E  FF                 	db	255
  4202   00FC2F  FF                 	db	255
  4203   00FC30  FF                 	db	255
  4204   00FC31  FF                 	db	255
  4205   00FC32  FF                 	db	255
  4206   00FC33  FF                 	db	255
  4207   00FC34  FF                 	db	255
  4208   00FC35  FF                 	db	255
  4209   00FC36  FF                 	db	255
  4210   00FC37  FF                 	db	255
  4211   00FC38  FF                 	db	255
  4212   00FC39  FF                 	db	255
  4213   00FC3A  FF                 	db	255
  4214   00FC3B  FF                 	db	255
  4215   00FC3C  FF                 	db	255
  4216   00FC3D  FF                 	db	255
  4217   00FC3E  FF                 	db	255
  4218   00FC3F  FF                 	db	255
  4219   00FC40  FF                 	db	255
  4220   00FC41  FF                 	db	255
  4221   00FC42  FF                 	db	255
  4222   00FC43  FF                 	db	255
  4223   00FC44  FF                 	db	255
  4224   00FC45  FF                 	db	255
  4225   00FC46  FF                 	db	255
  4226   00FC47  FF                 	db	255
  4227   00FC48  FF                 	db	255
  4228   00FC49  FF                 	db	255
  4229   00FC4A  FF                 	db	255
  4230   00FC4B  FF                 	db	255
  4231   00FC4C  FF                 	db	255
  4232   00FC4D  FF                 	db	255
  4233   00FC4E  FF                 	db	255
  4234   00FC4F  FF                 	db	255
  4235   00FC50  FF                 	db	255
  4236   00FC51  FF                 	db	255
  4237   00FC52  FF                 	db	255
  4238   00FC53  FF                 	db	255
  4239   00FC54  FF                 	db	255
  4240   00FC55  FF                 	db	255
  4241   00FC56  FF                 	db	255
  4242   00FC57  FF                 	db	255
  4243   00FC58  FF                 	db	255
  4244   00FC59  FF                 	db	255
  4245   00FC5A  FF                 	db	255
  4246   00FC5B  FF                 	db	255
  4247   00FC5C  FF                 	db	255
  4248   00FC5D  FF                 	db	255
  4249   00FC5E  FF                 	db	255
  4250   00FC5F  FF                 	db	255
  4251   00FC60  FF                 	db	255
  4252   00FC61  FF                 	db	255
  4253   00FC62  FF                 	db	255
  4254   00FC63  FF                 	db	255
  4255   00FC64  FF                 	db	255
  4256   00FC65  FF                 	db	255
  4257   00FC66  FF                 	db	255
  4258   00FC67  FF                 	db	255
  4259   00FC68  FF                 	db	255
  4260   00FC69  FF                 	db	255
  4261   00FC6A  FF                 	db	255
  4262   00FC6B  FF                 	db	255
  4263   00FC6C  FF                 	db	255
  4264   00FC6D  FF                 	db	255
  4265   00FC6E  FF                 	db	255
  4266   00FC6F  FF                 	db	255
  4267   00FC70  FF                 	db	255
  4268   00FC71  FF                 	db	255
  4269   00FC72  FF                 	db	255
  4270   00FC73  FF                 	db	255
  4271   00FC74  FF                 	db	255
  4272   00FC75  FF                 	db	255
  4273   00FC76  FF                 	db	255
  4274   00FC77  FF                 	db	255
  4275   00FC78  FF                 	db	255
  4276   00FC79  FF                 	db	255
  4277   00FC7A  FF                 	db	255
  4278   00FC7B  FF                 	db	255
  4279   00FC7C  FF                 	db	255
  4280   00FC7D  FF                 	db	255
  4281   00FC7E  FF                 	db	255
  4282   00FC7F  FF                 	db	255
  4283   00FC80  FF                 	db	255
  4284   00FC81  FF                 	db	255
  4285   00FC82  FF                 	db	255
  4286   00FC83  FF                 	db	255
  4287   00FC84  FF                 	db	255
  4288   00FC85  FF                 	db	255
  4289   00FC86  FF                 	db	255
  4290   00FC87  FF                 	db	255
  4291   00FC88  FF                 	db	255
  4292   00FC89  FF                 	db	255
  4293   00FC8A  FF                 	db	255
  4294   00FC8B  FF                 	db	255
  4295   00FC8C  FF                 	db	255
  4296   00FC8D  FF                 	db	255
  4297   00FC8E  FF                 	db	255
  4298   00FC8F  FF                 	db	255
  4299   00FC90  FF                 	db	255
  4300   00FC91  FF                 	db	255
  4301   00FC92  FF                 	db	255
  4302   00FC93  FF                 	db	255
  4303   00FC94  FF                 	db	255
  4304   00FC95  FF                 	db	255
  4305   00FC96  FF                 	db	255
  4306   00FC97  FF                 	db	255
  4307   00FC98  FF                 	db	255
  4308   00FC99  FF                 	db	255
  4309   00FC9A  FF                 	db	255
  4310   00FC9B  FF                 	db	255
  4311   00FC9C  FF                 	db	255
  4312   00FC9D  FF                 	db	255
  4313   00FC9E  FF                 	db	255
  4314   00FC9F  FF                 	db	255
  4315   00FCA0  FF                 	db	255
  4316   00FCA1  FF                 	db	255
  4317   00FCA2  FF                 	db	255
  4318   00FCA3  FF                 	db	255
  4319   00FCA4  FF                 	db	255
  4320   00FCA5  FF                 	db	255
  4321   00FCA6  FF                 	db	255
  4322   00FCA7  FF                 	db	255
  4323   00FCA8  FF                 	db	255
  4324   00FCA9  FF                 	db	255
  4325   00FCAA  FF                 	db	255
  4326   00FCAB  FF                 	db	255
  4327   00FCAC  FF                 	db	255
  4328   00FCAD  FF                 	db	255
  4329   00FCAE  FF                 	db	255
  4330   00FCAF  FF                 	db	255
  4331   00FCB0  FF                 	db	255
  4332   00FCB1  FF                 	db	255
  4333   00FCB2  FF                 	db	255
  4334   00FCB3  FF                 	db	255
  4335   00FCB4  FF                 	db	255
  4336   00FCB5  FF                 	db	255
  4337   00FCB6  FF                 	db	255
  4338   00FCB7  FF                 	db	255
  4339   00FCB8  FF                 	db	255
  4340   00FCB9  FF                 	db	255
  4341   00FCBA  FF                 	db	255
  4342   00FCBB  FF                 	db	255
  4343   00FCBC  FF                 	db	255
  4344   00FCBD  FF                 	db	255
  4345   00FCBE  FF                 	db	255
  4346   00FCBF  FF                 	db	255
  4347   00FCC0  FF                 	db	255
  4348   00FCC1  FF                 	db	255
  4349   00FCC2  FF                 	db	255
  4350   00FCC3  FF                 	db	255
  4351   00FCC4  FF                 	db	255
  4352   00FCC5  FF                 	db	255
  4353   00FCC6  FF                 	db	255
  4354   00FCC7  FF                 	db	255
  4355   00FCC8  FF                 	db	255
  4356   00FCC9  FF                 	db	255
  4357   00FCCA  FF                 	db	255
  4358   00FCCB  FF                 	db	255
  4359   00FCCC  FF                 	db	255
  4360   00FCCD  FF                 	db	255
  4361   00FCCE  FF                 	db	255
  4362   00FCCF  FF                 	db	255
  4363   00FCD0  FF                 	db	255
  4364   00FCD1  FF                 	db	255
  4365   00FCD2  FF                 	db	255
  4366   00FCD3  FF                 	db	255
  4367   00FCD4  FF                 	db	255
  4368   00FCD5  FF                 	db	255
  4369   00FCD6  FF                 	db	255
  4370   00FCD7  FF                 	db	255
  4371   00FCD8  FF                 	db	255
  4372   00FCD9  FF                 	db	255
  4373   00FCDA  FF                 	db	255
  4374   00FCDB  FF                 	db	255
  4375   00FCDC  FF                 	db	255
  4376   00FCDD  FF                 	db	255
  4377   00FCDE  FF                 	db	255
  4378   00FCDF  FF                 	db	255
  4379   00FCE0  FF                 	db	255
  4380   00FCE1  FF                 	db	255
  4381   00FCE2  FF                 	db	255
  4382   00FCE3  FF                 	db	255
  4383   00FCE4  FF                 	db	255
  4384   00FCE5  FF                 	db	255
  4385   00FCE6  FF                 	db	255
  4386   00FCE7  FF                 	db	255
  4387   00FCE8  FF                 	db	255
  4388   00FCE9  FF                 	db	255
  4389   00FCEA  FF                 	db	255
  4390   00FCEB  FF                 	db	255
  4391   00FCEC  FF                 	db	255
  4392   00FCED  FF                 	db	255
  4393   00FCEE  FF                 	db	255
  4394   00FCEF  FF                 	db	255
  4395   00FCF0  FF                 	db	255
  4396   00FCF1  FF                 	db	255
  4397   00FCF2  FF                 	db	255
  4398   00FCF3  FF                 	db	255
  4399   00FCF4  FF                 	db	255
  4400   00FCF5  FF                 	db	255
  4401   00FCF6  FF                 	db	255
  4402   00FCF7  FF                 	db	255
  4403   00FCF8  FF                 	db	255
  4404   00FCF9  FF                 	db	255
  4405   00FCFA  FF                 	db	255
  4406   00FCFB  FF                 	db	255
  4407   00FCFC  FF                 	db	255
  4408   00FCFD  FF                 	db	255
  4409   00FCFE  FF                 	db	255
  4410   00FCFF  FF                 	db	255
  4411   00FD00  FF                 	db	255
  4412   00FD01  FF                 	db	255
  4413   00FD02  FF                 	db	255
  4414   00FD03  FF                 	db	255
  4415   00FD04  FF                 	db	255
  4416   00FD05  FF                 	db	255
  4417   00FD06  FF                 	db	255
  4418   00FD07  FF                 	db	255
  4419   00FD08  FF                 	db	255
  4420   00FD09  FF                 	db	255
  4421   00FD0A  FF                 	db	255
  4422   00FD0B  FF                 	db	255
  4423   00FD0C  FF                 	db	255
  4424   00FD0D  FF                 	db	255
  4425   00FD0E  FF                 	db	255
  4426   00FD0F  FF                 	db	255
  4427   00FD10  FF                 	db	255
  4428   00FD11  FF                 	db	255
  4429   00FD12  FF                 	db	255
  4430   00FD13  FF                 	db	255
  4431   00FD14  FF                 	db	255
  4432   00FD15  FF                 	db	255
  4433   00FD16  FF                 	db	255
  4434   00FD17  FF                 	db	255
  4435   00FD18  FF                 	db	255
  4436   00FD19  FF                 	db	255
  4437   00FD1A  FF                 	db	255
  4438   00FD1B  FF                 	db	255
  4439   00FD1C  FF                 	db	255
  4440   00FD1D  FF                 	db	255
  4441   00FD1E  FF                 	db	255
  4442   00FD1F  FF                 	db	255
  4443   00FD20  FF                 	db	255
  4444   00FD21  FF                 	db	255
  4445   00FD22  FF                 	db	255
  4446   00FD23  FF                 	db	255
  4447   00FD24  FF                 	db	255
  4448   00FD25  FF                 	db	255
  4449   00FD26  FF                 	db	255
  4450   00FD27  FF                 	db	255
  4451   00FD28  FF                 	db	255
  4452   00FD29  FF                 	db	255
  4453   00FD2A  FF                 	db	255
  4454   00FD2B  FF                 	db	255
  4455   00FD2C  FF                 	db	255
  4456   00FD2D  FF                 	db	255
  4457   00FD2E  FF                 	db	255
  4458   00FD2F  FF                 	db	255
  4459   00FD30  FF                 	db	255
  4460   00FD31  FF                 	db	255
  4461   00FD32  FF                 	db	255
  4462   00FD33  FF                 	db	255
  4463   00FD34  FF                 	db	255
  4464   00FD35  FF                 	db	255
  4465   00FD36  FF                 	db	255
  4466   00FD37  FF                 	db	255
  4467   00FD38  FF                 	db	255
  4468   00FD39  FF                 	db	255
  4469   00FD3A  FF                 	db	255
  4470   00FD3B  FF                 	db	255
  4471   00FD3C  FF                 	db	255
  4472   00FD3D  FF                 	db	255
  4473   00FD3E  FF                 	db	255
  4474   00FD3F  FF                 	db	255
  4475   00FD40  FF                 	db	255
  4476   00FD41  FF                 	db	255
  4477   00FD42  FF                 	db	255
  4478   00FD43  FF                 	db	255
  4479   00FD44  FF                 	db	255
  4480   00FD45  FF                 	db	255
  4481   00FD46  FF                 	db	255
  4482   00FD47  FF                 	db	255
  4483   00FD48  FF                 	db	255
  4484   00FD49  FF                 	db	255
  4485   00FD4A  FF                 	db	255
  4486   00FD4B  FF                 	db	255
  4487   00FD4C  FF                 	db	255
  4488   00FD4D  FF                 	db	255
  4489   00FD4E  FF                 	db	255
  4490   00FD4F  FF                 	db	255
  4491   00FD50  FF                 	db	255
  4492   00FD51  FF                 	db	255
  4493   00FD52  FF                 	db	255
  4494   00FD53  FF                 	db	255
  4495   00FD54  FF                 	db	255
  4496   00FD55  FF                 	db	255
  4497   00FD56  FF                 	db	255
  4498   00FD57  FF                 	db	255
  4499   00FD58  FF                 	db	255
  4500   00FD59  FF                 	db	255
  4501   00FD5A  FF                 	db	255
  4502   00FD5B  FF                 	db	255
  4503   00FD5C  FF                 	db	255
  4504   00FD5D  FF                 	db	255
  4505   00FD5E  FF                 	db	255
  4506   00FD5F  FF                 	db	255
  4507   00FD60  FF                 	db	255
  4508   00FD61  FF                 	db	255
  4509   00FD62  FF                 	db	255
  4510   00FD63  FF                 	db	255
  4511   00FD64  FF                 	db	255
  4512   00FD65  FF                 	db	255
  4513   00FD66  FF                 	db	255
  4514   00FD67  FF                 	db	255
  4515   00FD68  FF                 	db	255
  4516   00FD69  FF                 	db	255
  4517   00FD6A  FF                 	db	255
  4518   00FD6B  FF                 	db	255
  4519   00FD6C  FF                 	db	255
  4520   00FD6D  FF                 	db	255
  4521   00FD6E  FF                 	db	255
  4522   00FD6F  FF                 	db	255
  4523   00FD70  FF                 	db	255
  4524   00FD71  FF                 	db	255
  4525   00FD72  FF                 	db	255
  4526   00FD73  FF                 	db	255
  4527   00FD74  FF                 	db	255
  4528   00FD75  FF                 	db	255
  4529   00FD76  FF                 	db	255
  4530   00FD77  FF                 	db	255
  4531   00FD78  FF                 	db	255
  4532   00FD79  FF                 	db	255
  4533   00FD7A  FF                 	db	255
  4534   00FD7B  FF                 	db	255
  4535   00FD7C  FF                 	db	255
  4536   00FD7D  FF                 	db	255
  4537   00FD7E  FF                 	db	255
  4538   00FD7F  FF                 	db	255
  4539   00FD80  FF                 	db	255
  4540   00FD81  FF                 	db	255
  4541   00FD82  FF                 	db	255
  4542   00FD83  FF                 	db	255
  4543   00FD84  FF                 	db	255
  4544   00FD85  FF                 	db	255
  4545   00FD86  FF                 	db	255
  4546   00FD87  FF                 	db	255
  4547   00FD88  FF                 	db	255
  4548   00FD89  FF                 	db	255
  4549   00FD8A  FF                 	db	255
  4550   00FD8B  FF                 	db	255
  4551   00FD8C  FF                 	db	255
  4552   00FD8D  FF                 	db	255
  4553   00FD8E  FF                 	db	255
  4554   00FD8F  FF                 	db	255
  4555   00FD90  FF                 	db	255
  4556   00FD91  FF                 	db	255
  4557   00FD92  FF                 	db	255
  4558   00FD93  FF                 	db	255
  4559   00FD94  FF                 	db	255
  4560   00FD95  FF                 	db	255
  4561   00FD96  FF                 	db	255
  4562   00FD97  FF                 	db	255
  4563   00FD98  FF                 	db	255
  4564   00FD99  FF                 	db	255
  4565   00FD9A  FF                 	db	255
  4566   00FD9B  FF                 	db	255
  4567   00FD9C  FF                 	db	255
  4568   00FD9D  FF                 	db	255
  4569   00FD9E  FF                 	db	255
  4570   00FD9F  FF                 	db	255
  4571   00FDA0  FF                 	db	255
  4572   00FDA1  FF                 	db	255
  4573   00FDA2  FF                 	db	255
  4574   00FDA3  FF                 	db	255
  4575   00FDA4  FF                 	db	255
  4576   00FDA5  FF                 	db	255
  4577   00FDA6  FF                 	db	255
  4578   00FDA7  FF                 	db	255
  4579   00FDA8  FF                 	db	255
  4580   00FDA9  FF                 	db	255
  4581   00FDAA  FF                 	db	255
  4582   00FDAB  FF                 	db	255
  4583   00FDAC  FF                 	db	255
  4584   00FDAD  FF                 	db	255
  4585   00FDAE  FF                 	db	255
  4586   00FDAF  FF                 	db	255
  4587   00FDB0  FF                 	db	255
  4588   00FDB1  FF                 	db	255
  4589   00FDB2  FF                 	db	255
  4590   00FDB3  FF                 	db	255
  4591   00FDB4  FF                 	db	255
  4592   00FDB5  FF                 	db	255
  4593   00FDB6  FF                 	db	255
  4594   00FDB7  FF                 	db	255
  4595   00FDB8  FF                 	db	255
  4596   00FDB9  FF                 	db	255
  4597   00FDBA  FF                 	db	255
  4598   00FDBB  FF                 	db	255
  4599   00FDBC  FF                 	db	255
  4600   00FDBD  FF                 	db	255
  4601   00FDBE  FF                 	db	255
  4602   00FDBF  FF                 	db	255
  4603   00FDC0  FF                 	db	255
  4604   00FDC1  FF                 	db	255
  4605   00FDC2  FF                 	db	255
  4606   00FDC3  FF                 	db	255
  4607   00FDC4  FF                 	db	255
  4608   00FDC5  FF                 	db	255
  4609   00FDC6  FF                 	db	255
  4610   00FDC7  FF                 	db	255
  4611   00FDC8  FF                 	db	255
  4612   00FDC9  FF                 	db	255
  4613   00FDCA  FF                 	db	255
  4614   00FDCB  FF                 	db	255
  4615   00FDCC  FF                 	db	255
  4616   00FDCD  FF                 	db	255
  4617   00FDCE  FF                 	db	255
  4618   00FDCF  FF                 	db	255
  4619   00FDD0  FF                 	db	255
  4620   00FDD1  FF                 	db	255
  4621   00FDD2  FF                 	db	255
  4622   00FDD3  FF                 	db	255
  4623   00FDD4  FF                 	db	255
  4624   00FDD5  FF                 	db	255
  4625   00FDD6  FF                 	db	255
  4626   00FDD7  FF                 	db	255
  4627   00FDD8  FF                 	db	255
  4628   00FDD9  FF                 	db	255
  4629   00FDDA  FF                 	db	255
  4630   00FDDB  FF                 	db	255
  4631   00FDDC  FF                 	db	255
  4632   00FDDD  FF                 	db	255
  4633   00FDDE  FF                 	db	255
  4634   00FDDF  FF                 	db	255
  4635   00FDE0  FF                 	db	255
  4636   00FDE1  FF                 	db	255
  4637   00FDE2  FF                 	db	255
  4638   00FDE3  FF                 	db	255
  4639   00FDE4  FF                 	db	255
  4640   00FDE5  FF                 	db	255
  4641   00FDE6  FF                 	db	255
  4642   00FDE7  FF                 	db	255
  4643   00FDE8  FF                 	db	255
  4644   00FDE9  FF                 	db	255
  4645   00FDEA  FF                 	db	255
  4646   00FDEB  FF                 	db	255
  4647   00FDEC  FF                 	db	255
  4648   00FDED  FF                 	db	255
  4649   00FDEE  FF                 	db	255
  4650   00FDEF  FF                 	db	255
  4651   00FDF0  FF                 	db	255
  4652   00FDF1  FF                 	db	255
  4653   00FDF2  FF                 	db	255
  4654   00FDF3  FF                 	db	255
  4655   00FDF4  FF                 	db	255
  4656   00FDF5  FF                 	db	255
  4657   00FDF6  FF                 	db	255
  4658   00FDF7  FF                 	db	255
  4659   00FDF8  FF                 	db	255
  4660   00FDF9  FF                 	db	255
  4661   00FDFA  FF                 	db	255
  4662   00FDFB  FF                 	db	255
  4663   00FDFC  FF                 	db	255
  4664   00FDFD  FF                 	db	255
  4665   00FDFE  FF                 	db	255
  4666   00FDFF  FF                 	db	255
  4667   00FE00  FF                 	db	255
  4668   00FE01  FF                 	db	255
  4669   00FE02  FF                 	db	255
  4670   00FE03  FF                 	db	255
  4671   00FE04  FF                 	db	255
  4672   00FE05  FF                 	db	255
  4673   00FE06  FF                 	db	255
  4674   00FE07  FF                 	db	255
  4675   00FE08  FF                 	db	255
  4676   00FE09  FF                 	db	255
  4677   00FE0A  FF                 	db	255
  4678   00FE0B  FF                 	db	255
  4679   00FE0C  FF                 	db	255
  4680   00FE0D  FF                 	db	255
  4681   00FE0E  FF                 	db	255
  4682   00FE0F  FF                 	db	255
  4683   00FE10  FF                 	db	255
  4684   00FE11  FF                 	db	255
  4685   00FE12  FF                 	db	255
  4686   00FE13  FF                 	db	255
  4687   00FE14  FF                 	db	255
  4688   00FE15  FF                 	db	255
  4689   00FE16  FF                 	db	255
  4690   00FE17  FF                 	db	255
  4691   00FE18  FF                 	db	255
  4692   00FE19  FF                 	db	255
  4693   00FE1A  FF                 	db	255
  4694   00FE1B  FF                 	db	255
  4695   00FE1C  FF                 	db	255
  4696   00FE1D  FF                 	db	255
  4697   00FE1E  FF                 	db	255
  4698   00FE1F  FF                 	db	255
  4699   00FE20  FF                 	db	255
  4700   00FE21  FF                 	db	255
  4701   00FE22  FF                 	db	255
  4702   00FE23  FF                 	db	255
  4703   00FE24  FF                 	db	255
  4704   00FE25  FF                 	db	255
  4705   00FE26  FF                 	db	255
  4706   00FE27  FF                 	db	255
  4707   00FE28  FF                 	db	255
  4708   00FE29  FF                 	db	255
  4709   00FE2A  FF                 	db	255
  4710   00FE2B  FF                 	db	255
  4711   00FE2C  FF                 	db	255
  4712   00FE2D  FF                 	db	255
  4713   00FE2E  FF                 	db	255
  4714   00FE2F  FF                 	db	255
  4715   00FE30  FF                 	db	255
  4716   00FE31  FF                 	db	255
  4717   00FE32  FF                 	db	255
  4718   00FE33  FF                 	db	255
  4719   00FE34  FF                 	db	255
  4720   00FE35  FF                 	db	255
  4721   00FE36  FF                 	db	255
  4722   00FE37  FF                 	db	255
  4723   00FE38  FF                 	db	255
  4724   00FE39  FF                 	db	255
  4725   00FE3A  FF                 	db	255
  4726   00FE3B  FF                 	db	255
  4727   00FE3C  FF                 	db	255
  4728   00FE3D  FF                 	db	255
  4729   00FE3E  FF                 	db	255
  4730   00FE3F  FF                 	db	255
  4731   00FE40  FF                 	db	255
  4732   00FE41  FF                 	db	255
  4733   00FE42  FF                 	db	255
  4734   00FE43  FF                 	db	255
  4735   00FE44  FF                 	db	255
  4736   00FE45  FF                 	db	255
  4737   00FE46  FF                 	db	255
  4738   00FE47  FF                 	db	255
  4739   00FE48  FF                 	db	255
  4740   00FE49  FF                 	db	255
  4741   00FE4A  FF                 	db	255
  4742   00FE4B  FF                 	db	255
  4743   00FE4C  FF                 	db	255
  4744   00FE4D  FF                 	db	255
  4745   00FE4E  FF                 	db	255
  4746   00FE4F  FF                 	db	255
  4747   00FE50  FF                 	db	255
  4748   00FE51  FF                 	db	255
  4749   00FE52  FF                 	db	255
  4750   00FE53  FF                 	db	255
  4751   00FE54  FF                 	db	255
  4752   00FE55  FF                 	db	255
  4753   00FE56  FF                 	db	255
  4754   00FE57  FF                 	db	255
  4755   00FE58  FF                 	db	255
  4756   00FE59  FF                 	db	255
  4757   00FE5A  FF                 	db	255
  4758   00FE5B  FF                 	db	255
  4759   00FE5C  FF                 	db	255
  4760   00FE5D  FF                 	db	255
  4761   00FE5E  FF                 	db	255
  4762   00FE5F  FF                 	db	255
  4763   00FE60  FF                 	db	255
  4764   00FE61  FF                 	db	255
  4765   00FE62  FF                 	db	255
  4766   00FE63  FF                 	db	255
  4767   00FE64  FF                 	db	255
  4768   00FE65  FF                 	db	255
  4769   00FE66  FF                 	db	255
  4770   00FE67  FF                 	db	255
  4771   00FE68  FF                 	db	255
  4772   00FE69  FF                 	db	255
  4773   00FE6A  FF                 	db	255
  4774   00FE6B  FF                 	db	255
  4775   00FE6C  FF                 	db	255
  4776   00FE6D  FF                 	db	255
  4777   00FE6E  FF                 	db	255
  4778   00FE6F  FF                 	db	255
  4779   00FE70  FF                 	db	255
  4780   00FE71  FF                 	db	255
  4781   00FE72  FF                 	db	255
  4782   00FE73  FF                 	db	255
  4783   00FE74  FF                 	db	255
  4784   00FE75  FF                 	db	255
  4785   00FE76  FF                 	db	255
  4786   00FE77  FF                 	db	255
  4787   00FE78  FF                 	db	255
  4788   00FE79  FF                 	db	255
  4789   00FE7A  FF                 	db	255
  4790   00FE7B  FF                 	db	255
  4791   00FE7C  FF                 	db	255
  4792   00FE7D  FF                 	db	255
  4793   00FE7E  FF                 	db	255
  4794   00FE7F  FF                 	db	255
  4795   00FE80  FF                 	db	255
  4796   00FE81  FF                 	db	255
  4797   00FE82  FF                 	db	255
  4798   00FE83  FF                 	db	255
  4799   00FE84  FF                 	db	255
  4800   00FE85  FF                 	db	255
  4801   00FE86  FF                 	db	255
  4802   00FE87  FF                 	db	255
  4803   00FE88  FF                 	db	255
  4804   00FE89  FF                 	db	255
  4805   00FE8A  FF                 	db	255
  4806   00FE8B  FF                 	db	255
  4807   00FE8C  FF                 	db	255
  4808   00FE8D  FF                 	db	255
  4809   00FE8E  FF                 	db	255
  4810   00FE8F  FF                 	db	255
  4811   00FE90  FF                 	db	255
  4812   00FE91  FF                 	db	255
  4813   00FE92  FF                 	db	255
  4814   00FE93  FF                 	db	255
  4815   00FE94  FF                 	db	255
  4816   00FE95  FF                 	db	255
  4817   00FE96  FF                 	db	255
  4818   00FE97  FF                 	db	255
  4819   00FE98  FF                 	db	255
  4820   00FE99  FF                 	db	255
  4821   00FE9A  FF                 	db	255
  4822   00FE9B  FF                 	db	255
  4823   00FE9C  FF                 	db	255
  4824   00FE9D  FF                 	db	255
  4825   00FE9E  FF                 	db	255
  4826   00FE9F  FF                 	db	255
  4827   00FEA0  FF                 	db	255
  4828   00FEA1  FF                 	db	255
  4829   00FEA2  FF                 	db	255
  4830   00FEA3  FF                 	db	255
  4831   00FEA4  FF                 	db	255
  4832   00FEA5  FF                 	db	255
  4833   00FEA6  FF                 	db	255
  4834   00FEA7  FF                 	db	255
  4835   00FEA8  FF                 	db	255
  4836   00FEA9  FF                 	db	255
  4837   00FEAA  FF                 	db	255
  4838   00FEAB  FF                 	db	255
  4839   00FEAC  FF                 	db	255
  4840   00FEAD  FF                 	db	255
  4841   00FEAE  FF                 	db	255
  4842   00FEAF  FF                 	db	255
  4843   00FEB0  FF                 	db	255
  4844   00FEB1  FF                 	db	255
  4845   00FEB2  FF                 	db	255
  4846   00FEB3  FF                 	db	255
  4847   00FEB4  FF                 	db	255
  4848   00FEB5  FF                 	db	255
  4849   00FEB6  FF                 	db	255
  4850   00FEB7  FF                 	db	255
  4851   00FEB8  FF                 	db	255
  4852   00FEB9  FF                 	db	255
  4853   00FEBA  FF                 	db	255
  4854   00FEBB  FF                 	db	255
  4855   00FEBC  FF                 	db	255
  4856   00FEBD  FF                 	db	255
  4857   00FEBE  FF                 	db	255
  4858   00FEBF  FF                 	db	255
  4859   00FEC0  FF                 	db	255
  4860   00FEC1  FF                 	db	255
  4861   00FEC2  FF                 	db	255
  4862   00FEC3  FF                 	db	255
  4863   00FEC4  FF                 	db	255
  4864   00FEC5  FF                 	db	255
  4865   00FEC6  FF                 	db	255
  4866   00FEC7  FF                 	db	255
  4867   00FEC8  FF                 	db	255
  4868   00FEC9  FF                 	db	255
  4869   00FECA  FF                 	db	255
  4870   00FECB  FF                 	db	255
  4871   00FECC  FF                 	db	255
  4872   00FECD  FF                 	db	255
  4873   00FECE  FF                 	db	255
  4874   00FECF  FF                 	db	255
  4875   00FED0  FF                 	db	255
  4876   00FED1  FF                 	db	255
  4877   00FED2  FF                 	db	255
  4878   00FED3  FF                 	db	255
  4879   00FED4  FF                 	db	255
  4880   00FED5  FF                 	db	255
  4881   00FED6  FF                 	db	255
  4882   00FED7  FF                 	db	255
  4883   00FED8  FF                 	db	255
  4884   00FED9  FF                 	db	255
  4885   00FEDA  FF                 	db	255
  4886   00FEDB  FF                 	db	255
  4887   00FEDC  FF                 	db	255
  4888   00FEDD  FF                 	db	255
  4889   00FEDE  FF                 	db	255
  4890   00FEDF  FF                 	db	255
  4891   00FEE0  FF                 	db	255
  4892   00FEE1  FF                 	db	255
  4893   00FEE2  FF                 	db	255
  4894   00FEE3  FF                 	db	255
  4895   00FEE4  FF                 	db	255
  4896   00FEE5  FF                 	db	255
  4897   00FEE6  FF                 	db	255
  4898   00FEE7  FF                 	db	255
  4899   00FEE8  FF                 	db	255
  4900   00FEE9  FF                 	db	255
  4901   00FEEA  FF                 	db	255
  4902   00FEEB  FF                 	db	255
  4903   00FEEC  FF                 	db	255
  4904   00FEED  FF                 	db	255
  4905   00FEEE  FF                 	db	255
  4906   00FEEF  FF                 	db	255
  4907   00FEF0  FF                 	db	255
  4908   00FEF1  FF                 	db	255
  4909   00FEF2  FF                 	db	255
  4910   00FEF3  FF                 	db	255
  4911   00FEF4  FF                 	db	255
  4912   00FEF5  FF                 	db	255
  4913   00FEF6  FF                 	db	255
  4914   00FEF7  FF                 	db	255
  4915   00FEF8  FF                 	db	255
  4916   00FEF9  FF                 	db	255
  4917   00FEFA  FF                 	db	255
  4918   00FEFB  FF                 	db	255
  4919   00FEFC  FF                 	db	255
  4920   00FEFD  FF                 	db	255
  4921   00FEFE  FF                 	db	255
  4922   00FEFF  FF                 	db	255
  4923   00FF00  FF                 	db	255
  4924   00FF01  FF                 	db	255
  4925   00FF02  FF                 	db	255
  4926   00FF03  FF                 	db	255
  4927   00FF04  FF                 	db	255
  4928   00FF05  FF                 	db	255
  4929   00FF06  FF                 	db	255
  4930   00FF07  FF                 	db	255
  4931   00FF08  FF                 	db	255
  4932   00FF09  FF                 	db	255
  4933   00FF0A  FF                 	db	255
  4934   00FF0B  FF                 	db	255
  4935   00FF0C  FF                 	db	255
  4936   00FF0D  FF                 	db	255
  4937   00FF0E  FF                 	db	255
  4938   00FF0F  FF                 	db	255
  4939   00FF10  FF                 	db	255
  4940   00FF11  FF                 	db	255
  4941   00FF12  FF                 	db	255
  4942   00FF13  FF                 	db	255
  4943   00FF14  FF                 	db	255
  4944   00FF15  FF                 	db	255
  4945   00FF16  FF                 	db	255
  4946   00FF17  FF                 	db	255
  4947   00FF18  FF                 	db	255
  4948   00FF19  FF                 	db	255
  4949   00FF1A  FF                 	db	255
  4950   00FF1B  FF                 	db	255
  4951   00FF1C  FF                 	db	255
  4952   00FF1D  FF                 	db	255
  4953   00FF1E  FF                 	db	255
  4954   00FF1F  FF                 	db	255
  4955   00FF20  FF                 	db	255
  4956   00FF21  FF                 	db	255
  4957   00FF22  FF                 	db	255
  4958   00FF23  FF                 	db	255
  4959   00FF24  FF                 	db	255
  4960   00FF25  FF                 	db	255
  4961   00FF26  FF                 	db	255
  4962   00FF27  FF                 	db	255
  4963   00FF28  FF                 	db	255
  4964   00FF29  FF                 	db	255
  4965   00FF2A  FF                 	db	255
  4966   00FF2B  FF                 	db	255
  4967   00FF2C  FF                 	db	255
  4968   00FF2D  FF                 	db	255
  4969   00FF2E  FF                 	db	255
  4970   00FF2F  FF                 	db	255
  4971   00FF30  FF                 	db	255
  4972   00FF31  FF                 	db	255
  4973   00FF32  FF                 	db	255
  4974   00FF33  FF                 	db	255
  4975   00FF34  FF                 	db	255
  4976   00FF35  FF                 	db	255
  4977   00FF36  FF                 	db	255
  4978   00FF37  FF                 	db	255
  4979   00FF38  FF                 	db	255
  4980   00FF39  FF                 	db	255
  4981   00FF3A  FF                 	db	255
  4982   00FF3B  FF                 	db	255
  4983   00FF3C  FF                 	db	255
  4984   00FF3D  FF                 	db	255
  4985   00FF3E  FF                 	db	255
  4986   00FF3F  FF                 	db	255
  4987   00FF40  FF                 	db	255
  4988   00FF41  FF                 	db	255
  4989   00FF42  FF                 	db	255
  4990   00FF43  FF                 	db	255
  4991   00FF44  FF                 	db	255
  4992   00FF45  FF                 	db	255
  4993   00FF46  FF                 	db	255
  4994   00FF47  FF                 	db	255
  4995   00FF48  FF                 	db	255
  4996   00FF49  FF                 	db	255
  4997   00FF4A  FF                 	db	255
  4998   00FF4B  FF                 	db	255
  4999   00FF4C  FF                 	db	255
  5000   00FF4D  FF                 	db	255
  5001   00FF4E  FF                 	db	255
  5002   00FF4F  FF                 	db	255
  5003   00FF50  FF                 	db	255
  5004   00FF51  FF                 	db	255
  5005   00FF52  FF                 	db	255
  5006   00FF53  FF                 	db	255
  5007   00FF54  FF                 	db	255
  5008   00FF55  FF                 	db	255
  5009   00FF56  FF                 	db	255
  5010   00FF57  FF                 	db	255
  5011   00FF58  FF                 	db	255
  5012   00FF59  FF                 	db	255
  5013   00FF5A  FF                 	db	255
  5014   00FF5B  FF                 	db	255
  5015   00FF5C  FF                 	db	255
  5016   00FF5D  FF                 	db	255
  5017   00FF5E  FF                 	db	255
  5018   00FF5F  FF                 	db	255
  5019   00FF60  FF                 	db	255
  5020   00FF61  FF                 	db	255
  5021   00FF62  FF                 	db	255
  5022   00FF63  FF                 	db	255
  5023   00FF64  FF                 	db	255
  5024   00FF65  FF                 	db	255
  5025   00FF66  FF                 	db	255
  5026   00FF67  FF                 	db	255
  5027   00FF68  FF                 	db	255
  5028   00FF69  FF                 	db	255
  5029   00FF6A  FF                 	db	255
  5030   00FF6B  FF                 	db	255
  5031   00FF6C  FF                 	db	255
  5032   00FF6D  FF                 	db	255
  5033   00FF6E  FF                 	db	255
  5034   00FF6F  FF                 	db	255
  5035   00FF70                     __end_of_eventTable:
  5036                           	callstack 0
  5037   000000                     _paramBlock_absaddr	set	2080
  5038                           
  5039                           	psect	_paramBlock_text
  5040   000820                     __p_paramBlock_text:
  5041                           	callstack 0
  5042   000820                     _paramBlock:
  5043                           	callstack 0
  5044   000820  A5                 	db	165
  5045   000821  61                 	db	97
  5046   000822  20                 	db	32
  5047   000823  FF                 	db	255
  5048   000824  14                 	db	20
  5049   000825  7F                 	db	127
  5050   000826  04                 	db	4
  5051   000827  0B                 	db	11
  5052   000828  0F                 	db	15
  5053   000829  01                 	db	1
  5054   00082A  00                 	db	0
  5055   00082B  08                 	db	8
  5056   00082C  00                 	db	0
  5057   00082D  00                 	db	0
  5058   00082E  00                 	db	0
  5059   00082F  00                 	db	0
  5060   000830  00                 	db	0
  5061   000831  00                 	db	0
  5062   000832  01                 	db	1
  5063   000833  01                 	db	1
  5064   000834  00                 	db	0
  5065   000835  00                 	db	0
  5066   000836  00                 	db	0
  5067   000837  00                 	db	0
  5068   000838  14                 	db	20
  5069   000839  00                 	db	0
  5070   00083A  48                 	db	72
  5071   00083B  08                 	db	8
  5072   00083C  00                 	db	0
  5073   00083D  00                 	db	0
  5074   00083E  45                 	db	69
  5075   00083F  03                 	db	3
  5076   000840                     __end_of_paramBlock:
  5077                           	callstack 0
  5078   000000                     _name_absaddr	set	2120
  5079                           
  5080                           	psect	_name_text
  5081   000848                     __p_name_text:
  5082                           	callstack 0
  5083   000848                     _name:
  5084                           	callstack 0
  5085   000848  4D                 	db	77
  5086   000849  49                 	db	73
  5087   00084A  4F                 	db	79
  5088   00084B  20                 	db	32
  5089   00084C  20                 	db	32
  5090   00084D  20                 	db	32
  5091   00084E  20                 	db	32
  5092   00084F  00                 	db	0
  5093   000850                     __end_of_name:
  5094                           	callstack 0
  5095   000000                     _COMSTATbits	set	3953
  5096   000000                     _PIR5bits	set	3959
  5097   000000                     _PIE5bits	set	3958
  5098   000000                     _TXBIEbits	set	3711
  5099   000000                     _BIE0	set	3710
  5100   000000                     _RXF0SIDL	set	3809
  5101   000000                     _RXM0SIDH	set	3832
  5102   000000                     _CIOCON	set	3952
  5103   000000                     _ECANCON	set	3954
  5104   000000                     _IPR5	set	3960
  5105   000000                     _EECON2	set	3966
  5106   000000                     _TMR0L	set	4054
  5107   000000                     _TMR0H	set	4055
  5108   000000                     _TMR3L	set	4018
  5109   000000                     _TMR3H	set	4019
  5110   000000                     _TMR1L	set	4046
  5111   000000                     _TMR1H	set	4047
  5112   000000                     _T3CONbits	set	4017
  5113   000000                     _ANCON1	set	3932
  5114   000000                     _ANCON0	set	3933
  5115   000000                     _B0CON	set	3712
  5116   000000                     _TXB2CONbits	set	3840
  5117   000000                     _TXB1CONbits	set	3856
  5118   000000                     _TXB0CONbits	set	3872
  5119   000000                     _EECON1	set	3967
  5120   000000                     _T0CONbits	set	4053
  5121   000000                     _LATBbits	set	3978
  5122   000000                     _TRISAbits	set	3986
  5123   000000                     _TRISBbits	set	3987
  5124   000000                     _PORTAbits	set	3968
  5125   000000                     _BRGCON1	set	3651
  5126   000000                     _BSEL0	set	3709
  5127   000000                     _WPUB	set	3931
  5128   000000                     _INTCON2bits	set	4081
  5129   000000                     _TBLPTR	set	4086
  5130   000000                     _TABLAT	set	4085
  5131   000000                     _TBLPTRU	set	4088
  5132   000000                     _INTCONbits	set	4082
  5133   000000                     _CANSTATbits	set	3950
  5134   000000                     _CANCON	set	3951
  5135   000000                     _EEDATA	set	3955
  5136   000000                     _EEADR	set	3956
  5137   000000                     _EEADRH	set	3957
  5138   000000                     _EECON1bits	set	3967
  5139   000000                     _PORTA	set	3968
  5140   000000                     _LATA	set	3977
  5141   000000                     _TRISA	set	3986
  5142   000000                     _RXB0CON	set	3936
  5143   000000                     _OSCTUNEbits	set	3995
  5144   000000                     _PIE1bits	set	3997
  5145   000000                     _PIR1bits	set	3998
  5146   000000                     _TRISC	set	3988
  5147   000000                     _TRISB	set	3987
  5148   000000                     _PIE2bits	set	4000
  5149   000000                     _PIR2bits	set	4001
  5150   000000                     _T1GCONbits	set	4010
  5151   000000                     _LATC	set	3979
  5152   000000                     _LATB	set	3978
  5153   000000                     _PORTC	set	3970
  5154   000000                     _PORTB	set	3969
  5155   000000                     _T3GCONbits	set	4016
  5156   000000                     _T1CONbits	set	4045
  5157   000000                     _RCONbits	set	4048
  5158   000000                     _T0CON	set	4053
  5159   000000                     _EEIF	set	32190
  5160   000000                     _RXFCON0	set	3654
  5161   000000                     _RXFBCON0	set	3697
  5162   000000                     _BRGCON3	set	3653
  5163   000000                     _BRGCON2	set	3652
  5164   000000                     _TXB2CON	set	3840
  5165   000000                     _TXB1CON	set	3856
  5166   000000                     _TXB0CON	set	3872
  5167   000000                     _RXM0EIDL	set	3835
  5168   000000                     _RXM0EIDH	set	3834
  5169   000000                     _RXM0SIDL	set	3833
  5170   000000                     _RXB1CON	set	3888
  5171   000000                     _MSEL0	set	3705
  5172   000000                     _B1CON	set	3728
  5173   000000                     _B2CON	set	3744
  5174   000000                     _B3CON	set	3760
  5175   000000                     _B4CON	set	3776
  5176   000000                     _B5CON	set	3792
  5177   000000                     _TXB0SIDL	set	3874
  5178   000000                     _TXB0SIDH	set	3873
  5179   000000                     _TXB0DLC	set	3877
  5180   000000                     _TXB0D7	set	3885
  5181   000000                     _TXB0D6	set	3884
  5182   000000                     _TXB0D5	set	3883
  5183   000000                     _TXB0D4	set	3882
  5184   000000                     _TXB0D3	set	3881
  5185   000000                     _TXB0D2	set	3880
  5186   000000                     _TXB0D1	set	3879
  5187   000000                     _TXB0D0	set	3878
  5188   000000                     _TXB1SIDL	set	3858
  5189   000000                     _TXB1SIDH	set	3857
  5190   000000                     _TXB1DLC	set	3861
  5191   000000                     _TXB2SIDL	set	3842
  5192   000000                     _TXB2SIDH	set	3841
  5193   000000                     _TXB2DLC	set	3845
  5194                           
  5195                           ; #config settings
  5196                           
  5197                           	psect	cinit
  5198   00AE6A                     __pcinit:
  5199                           	callstack 0
  5200   00AE6A                     start_initialization:
  5201                           	callstack 0
  5202   00AE6A                     __initialization:
  5203                           	callstack 0
  5204                           
  5205                           ; Clear objects allocated to BIGRAM (928 bytes)
  5206   00AE6A  EE04  F0C8         	lfsr	0,__pbssBIGRAM
  5207   00AE6E  EE13 F0A0          	lfsr	1,928
  5208   00AE72                     clear_0:
  5209   00AE72  6AEE               	clrf	postinc0,c
  5210   00AE74  50E5               	movf	postdec1,w,c
  5211   00AE76  50E1               	movf	fsr1l,w,c
  5212   00AE78  E1FC               	bnz	clear_0
  5213   00AE7A  50E2               	movf	fsr1h,w,c
  5214   00AE7C  E1FA               	bnz	clear_0
  5215                           
  5216                           ; Clear objects allocated to BANK4 (200 bytes)
  5217   00AE7E  EE04  F000         	lfsr	0,__pbssBANK4
  5218   00AE82  0EC8               	movlw	200
  5219   00AE84                     clear_1:
  5220   00AE84  6AEE               	clrf	postinc0,c
  5221   00AE86  06E8               	decf	wreg,f,c
  5222   00AE88  E1FD               	bnz	clear_1
  5223                           
  5224                           ; Clear objects allocated to BANK3 (199 bytes)
  5225   00AE8A  EE03  F000         	lfsr	0,__pbssBANK3
  5226   00AE8E  0EC7               	movlw	199
  5227   00AE90                     clear_2:
  5228   00AE90  6AEE               	clrf	postinc0,c
  5229   00AE92  06E8               	decf	wreg,f,c
  5230   00AE94  E1FD               	bnz	clear_2
  5231                           
  5232                           ; Clear objects allocated to BANK2 (252 bytes)
  5233   00AE96  EE02  F000         	lfsr	0,__pbssBANK2
  5234   00AE9A  0EFC               	movlw	252
  5235   00AE9C                     clear_3:
  5236   00AE9C  6AEE               	clrf	postinc0,c
  5237   00AE9E  06E8               	decf	wreg,f,c
  5238   00AEA0  E1FD               	bnz	clear_3
  5239                           
  5240                           ; Clear objects allocated to BANK1 (184 bytes)
  5241   00AEA2  EE01  F000         	lfsr	0,__pbssBANK1
  5242   00AEA6  0EB8               	movlw	184
  5243   00AEA8                     clear_4:
  5244   00AEA8  6AEE               	clrf	postinc0,c
  5245   00AEAA  06E8               	decf	wreg,f,c
  5246   00AEAC  E1FD               	bnz	clear_4
  5247                           
  5248                           ; Clear objects allocated to BANK0 (42 bytes)
  5249   00AEAE  EE00  F0A9         	lfsr	0,__pbssBANK0
  5250   00AEB2  0E2A               	movlw	42
  5251   00AEB4                     clear_5:
  5252   00AEB4  6AEE               	clrf	postinc0,c
  5253   00AEB6  06E8               	decf	wreg,f,c
  5254   00AEB8  E1FD               	bnz	clear_5
  5255                           
  5256                           ; Clear objects allocated to COMRAM (39 bytes)
  5257   00AEBA  EE00  F02B         	lfsr	0,__pbssCOMRAM
  5258   00AEBE  0E27               	movlw	39
  5259   00AEC0                     clear_6:
  5260   00AEC0  6AEE               	clrf	postinc0,c
  5261   00AEC2  06E8               	decf	wreg,f,c
  5262   00AEC4  E1FD               	bnz	clear_6
  5263   00AEC6                     end_of_initialization:
  5264                           	callstack 0
  5265   00AEC6                     __end_of__initialization:
  5266                           	callstack 0
  5267   00AEC6  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5268   00AEC8  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5269   00AECA  0100               	movlb	0
  5270   00AECC  EFC4  F05B         	goto	_main	;jump to C main() function
  5271                           
  5272                           	psect	bssCOMRAM
  5273   00002B                     __pbssCOMRAM:
  5274                           	callstack 0
  5275   00002B                     _enumerationStartTime:
  5276                           	callstack 0
  5277   00002B                     	ds	4
  5278   00002F                     _canTransmitTimeout:
  5279                           	callstack 0
  5280   00002F                     	ds	4
  5281   000033                     _pbTimer:
  5282                           	callstack 0
  5283   000033                     	ds	4
  5284   000037                     _startWait:
  5285                           	callstack 0
  5286   000037                     	ds	4
  5287   00003B                     _startTime:
  5288                           	callstack 0
  5289   00003B                     	ds	4
  5290   00003F                     _timedResponseCallback:
  5291                           	callstack 0
  5292   00003F                     	ds	2
  5293   000041                     _EnumerationState:
  5294                           	callstack 0
  5295   000041                     	ds	1
  5296   000042                     _eeBootFlag:
  5297                           	callstack 0
  5298   000042                     	ds	1
  5299   000043                     _timedResponseStep:
  5300                           	callstack 0
  5301   000043                     	ds	1
  5302   000044                     _timedResponseAllServicesFlag:
  5303                           	callstack 0
  5304   000044                     	ds	1
  5305   000045                     _heartbeatSequence:
  5306                           	callstack 0
  5307   000045                     	ds	1
  5308   000046                     _last_mode_flags:
  5309                           	callstack 0
  5310   000046                     	ds	1
  5311   000047                     _expedited:
  5312                           	callstack 0
  5313   000047                     	ds	1
  5314   000048                     _txQueue:
  5315                           	callstack 0
  5316   000048                     	ds	5
  5317   00004D                     _rxQueue:
  5318                           	callstack 0
  5319   00004D                     	ds	5
  5320                           
  5321                           	psect	bssBANK0
  5322   0000A9                     __pbssBANK0:
  5323                           	callstack 0
  5324   0000A9                     _currentPos:
  5325                           	callstack 0
  5326   0000A9                     	ds	16
  5327   0000B9                     _flashBlock:
  5328                           	callstack 0
  5329   0000B9                     	ds	2
  5330   0000BB                     _flashCounter:
  5331                           	callstack 0
  5332   0000BB                     	ds	2
  5333   0000BD                     _ledState:
  5334                           	callstack 0
  5335   0000BD                     	ds	2
  5336   0000BF                     _nn:
  5337                           	callstack 0
  5338   0000BF                     	ds	2
  5339   0000C1                     _enumerationState:
  5340                           	callstack 0
  5341   0000C1                     	ds	1
  5342   0000C2                     _canTransmitFailed:
  5343                           	callstack 0
  5344   0000C2                     	ds	1
  5345   0000C3                     _canId:
  5346                           	callstack 0
  5347   0000C3                     	ds	1
  5348   0000C4                     _flashFlags:
  5349                           	callstack 0
  5350   0000C4                     	ds	1
  5351   0000C5                     _timedResponseType:
  5352                           	callstack 0
  5353   0000C5                     	ds	1
  5354   0000C6                     _timedResponseServiceIndex:
  5355                           	callstack 0
  5356   0000C6                     	ds	1
  5357   0000C7                     _last_mode_state:
  5358                           	callstack 0
  5359   0000C7                     	ds	1
  5360   0000C8                     _mode_state:
  5361                           	callstack 0
  5362   0000C8                     	ds	1
  5363   0000C9                     _timerExtension2:
  5364                           	callstack 0
  5365   0000C9                     	ds	1
  5366   0000CA                     _timerExtension1:
  5367                           	callstack 0
  5368   0000CA                     	ds	1
  5369   0000CB                     _servoInBlock:
  5370                           	callstack 0
  5371   0000CB                     	ds	1
  5372   0000CC                     _expeditedWriteIndex:
  5373                           	callstack 0
  5374   0000CC                     	ds	1
  5375   0000CD                     _expeditedReadIndex:
  5376                           	callstack 0
  5377   0000CD                     	ds	1
  5378   0000CE                     _normalWriteIndex:
  5379                           	callstack 0
  5380   0000CE                     	ds	1
  5381   0000CF                     _normalReadIndex:
  5382                           	callstack 0
  5383   0000CF                     	ds	1
  5384   0000D0                     _io@inputs$F849:
  5385                           	callstack 0
  5386   0000D0                     	ds	1
  5387   0000D1                     _io:
  5388                           	callstack 0
  5389   0000D1                     	ds	1
  5390   0000D2                     _started:
  5391                           	callstack 0
  5392   0000D2                     	ds	1
  5393                           
  5394                           	psect	bssBANK1
  5395   000100                     __pbssBANK1:
  5396                           	callstack 0
  5397   000100                     _speed:
  5398                           	callstack 0
  5399   000100                     	ds	32
  5400   000120                     _stepsPerPollSpeed:
  5401                           	callstack 0
  5402   000120                     	ds	16
  5403   000130                     _servoState:
  5404                           	callstack 0
  5405   000130                     	ds	16
  5406   000140                     _targetPos:
  5407                           	callstack 0
  5408   000140                     	ds	16
  5409   000150                     _flashFlushTime:
  5410                           	callstack 0
  5411   000150                     	ds	4
  5412   000154                     _timedResponseTime:
  5413                           	callstack 0
  5414   000154                     	ds	4
  5415   000158                     _ledTimer:
  5416                           	callstack 0
  5417   000158                     	ds	4
  5418   00015C                     _uptimeTimer:
  5419                           	callstack 0
  5420   00015C                     	ds	4
  5421   000160                     _heartbeatTimer:
  5422                           	callstack 0
  5423   000160                     	ds	4
  5424   000164                     _lastActionPollTime:
  5425                           	callstack 0
  5426   000164                     	ds	4
  5427   000168                     _lastInputScanTime:
  5428                           	callstack 0
  5429   000168                     	ds	4
  5430   00016C                     _lastServoStartTime:
  5431                           	callstack 0
  5432   00016C                     	ds	4
  5433   000170                     _previousNN:
  5434                           	callstack 0
  5435   000170                     	ds	2
  5436   000172                     _transport:
  5437                           	callstack 0
  5438   000172                     	ds	2
  5439   000174                     _timedResponseDelay:
  5440                           	callstack 0
  5441   000174                     	ds	1
  5442   000175                     _setupModePreviousMode:
  5443                           	callstack 0
  5444   000175                     	ds	1
  5445   000176                     _mode_flags:
  5446                           	callstack 0
  5447   000176                     	ds	1
  5448   000177                     _canDiagnostics:
  5449                           	callstack 0
  5450   000177                     	ds	32
  5451   000197                     _mnsDiagnostics:
  5452                           	callstack 0
  5453   000197                     	ds	12
  5454   0001A3                     _tmpMessage:
  5455                           	callstack 0
  5456   0001A3                     	ds	9
  5457   0001AC                     _nvDiagnostics:
  5458                           	callstack 0
  5459   0001AC                     	ds	4
  5460   0001B0                     _producerDiagnostics:
  5461                           	callstack 0
  5462   0001B0                     	ds	2
  5463   0001B2                     _teachDiagnostics:
  5464                           	callstack 0
  5465   0001B2                     	ds	2
  5466   0001B4                     _ackDiagnostics:
  5467                           	callstack 0
  5468   0001B4                     	ds	2
  5469   0001B6                     _consumer2QDiagnostics:
  5470                           	callstack 0
  5471   0001B6                     	ds	2
  5472                           
  5473                           	psect	bssBANK2
  5474   000200                     __pbssBANK2:
  5475                           	callstack 0
  5476   000200                     _ticksWhenStopped:
  5477                           	callstack 0
  5478   000200                     	ds	64
  5479   000240                     _evs:
  5480                           	callstack 0
  5481   000240                     	ds	20
  5482   000254                     _enumerationResults:
  5483                           	callstack 0
  5484   000254                     	ds	16
  5485   000264                     _bounceState:
  5486                           	callstack 0
  5487   000264                     	ds	16
  5488   000274                     _loopCount:
  5489                           	callstack 0
  5490   000274                     	ds	16
  5491   000284                     _pollCount:
  5492                           	callstack 0
  5493   000284                     	ds	16
  5494   000294                     _pollsPerStepSpeed:
  5495                           	callstack 0
  5496   000294                     	ds	16
  5497   0002A4                     _delayCount:
  5498                           	callstack 0
  5499   0002A4                     	ds	16
  5500   0002B4                     _inputState:
  5501                           	callstack 0
  5502   0002B4                     	ds	16
  5503   0002C4                     _flashDelays:
  5504                           	callstack 0
  5505   0002C4                     	ds	16
  5506   0002D4                     _pulseDelays:
  5507                           	callstack 0
  5508   0002D4                     	ds	16
  5509   0002E4                     _outputState:
  5510                           	callstack 0
  5511   0002E4                     	ds	16
  5512   0002F4                     _expeditedQueueBuf:
  5513                           	callstack 0
  5514   0002F4                     	ds	8
  5515                           
  5516                           	psect	bssBANK3
  5517   000300                     __pbssBANK3:
  5518                           	callstack 0
  5519   000300                     _happening2Event:
  5520                           	callstack 0
  5521   000300                     	ds	71
  5522   000347                     _flashBuffer:
  5523                           	callstack 0
  5524   000347                     	ds	64
  5525   000387                     _normalQueueBuf:
  5526                           	callstack 0
  5527   000387                     	ds	64
  5528                           
  5529                           	psect	bssBANK4
  5530   000400                     __pbssBANK4:
  5531                           	callstack 0
  5532   000400                     _nvCache:
  5533                           	callstack 0
  5534   000400                     	ds	128
  5535   000480                     _txBuffers:
  5536                           	callstack 0
  5537   000480                     	ds	72
  5538                           
  5539                           	psect	bssBIGRAM
  5540   0004C8                     __pbssBIGRAM:
  5541                           	callstack 0
  5542   0004C8                     _eventChains:
  5543                           	callstack 0
  5544   0004C8                     	ds	640
  5545   000748                     _rxBuffers:
  5546                           	callstack 0
  5547   000748                     	ds	288
  5548                           
  5549                           	psect	cstackBANK3
  5550   0003C7                     __pcstackBANK3:
  5551                           	callstack 0
  5552   0003C7                     ??_mnsProcessMessage:
  5553   0003C7                     consumer2QProcessMessage@end:
  5554                           	callstack 0
  5555   0003C7                     ackEventProcessMessage@ev:
  5556                           	callstack 0
  5557                           
  5558                           ; 2 bytes @ 0x0
  5559   0003C7                     	ds	1
  5560   0003C8                     consumer2QProcessMessage@change:
  5561                           	callstack 0
  5562                           
  5563                           ; 1 bytes @ 0x1
  5564   0003C8                     	ds	1
  5565   0003C9                     consumer2QProcessMessage@opc:
  5566                           	callstack 0
  5567   0003C9                     ackEventProcessMessage@eventEN:
  5568                           	callstack 0
  5569                           
  5570                           ; 2 bytes @ 0x2
  5571   0003C9                     	ds	1
  5572   0003CA                     consumer2QProcessMessage@enn:
  5573                           	callstack 0
  5574                           
  5575                           ; 2 bytes @ 0x3
  5576   0003CA                     	ds	1
  5577   0003CB                     ackEventProcessMessage@eventIndex:
  5578                           	callstack 0
  5579                           
  5580                           ; 1 bytes @ 0x4
  5581   0003CB                     	ds	1
  5582   0003CC                     consumer2QProcessMessage@tableIndex:
  5583                           	callstack 0
  5584   0003CC                     ackEventProcessMessage@eventNN:
  5585                           	callstack 0
  5586                           
  5587                           ; 2 bytes @ 0x5
  5588   0003CC                     	ds	1
  5589   0003CD                     consumer2QProcessMessage@nextAction:
  5590                           	callstack 0
  5591                           
  5592                           ; 1 bytes @ 0x6
  5593   0003CD                     	ds	1
  5594   0003CE                     consumer2QProcessMessage@firstAction:
  5595                           	callstack 0
  5596                           
  5597                           ; 1 bytes @ 0x7
  5598   0003CE                     	ds	1
  5599   0003CF                     consumer2QProcessMessage@nextSimultaneous:
  5600                           	callstack 0
  5601                           
  5602                           ; 1 bytes @ 0x8
  5603   0003CF                     	ds	1
  5604   0003D0                     consumer2QProcessMessage@io:
  5605                           	callstack 0
  5606                           
  5607                           ; 1 bytes @ 0x9
  5608   0003D0                     	ds	1
  5609   0003D1                     consumer2QProcessMessage@masked_action:
  5610                           	callstack 0
  5611                           
  5612                           ; 1 bytes @ 0xA
  5613   0003D1                     	ds	1
  5614   0003D2                     consumer2QProcessMessage@ca:
  5615                           	callstack 0
  5616                           
  5617                           ; 1 bytes @ 0xB
  5618   0003D2                     	ds	1
  5619   0003D3                     consumer2QProcessMessage@e:
  5620                           	callstack 0
  5621                           
  5622                           ; 1 bytes @ 0xC
  5623   0003D3                     	ds	1
  5624   0003D4                     consumer2QProcessMessage@action:
  5625                           	callstack 0
  5626                           
  5627                           ; 1 bytes @ 0xD
  5628   0003D4                     	ds	17
  5629   0003E5                     ??_poll:
  5630                           
  5631                           ; 1 bytes @ 0x1E
  5632   0003E5                     	ds	4
  5633   0003E9                     poll@handled:
  5634                           	callstack 0
  5635                           
  5636                           ; 1 bytes @ 0x22
  5637   0003E9                     	ds	1
  5638   0003EA                     poll@i:
  5639                           	callstack 0
  5640                           
  5641                           ; 1 bytes @ 0x23
  5642   0003EA                     	ds	1
  5643   0003EB                     poll@m:
  5644                           	callstack 0
  5645                           
  5646                           ; 9 bytes @ 0x24
  5647   0003EB                     	ds	9
  5648                           
  5649                           	psect	cstackBANK2
  5650   0002FC                     __pcstackBANK2:
  5651                           	callstack 0
  5652   0002FC                     producerProcessMessage@ev:
  5653                           	callstack 0
  5654                           
  5655                           ; 2 bytes @ 0x0
  5656   0002FC                     	ds	2
  5657   0002FE                     producerProcessMessage@h:
  5658                           	callstack 0
  5659                           
  5660                           ; 1 bytes @ 0x2
  5661   0002FE                     	ds	1
  5662   0002FF                     producerProcessMessage@index:
  5663                           	callstack 0
  5664                           
  5665                           ; 1 bytes @ 0x3
  5666   0002FF                     	ds	1
  5667                           
  5668                           	psect	cstackBANK1
  5669   0001B8                     __pcstackBANK1:
  5670                           	callstack 0
  5671   0001B8                     ??_writeNVM:
  5672   0001B8                     ??_rebuildHashtable:
  5673   0001B8                     APP_GetEventState@flags:
  5674                           	callstack 0
  5675   0001B8                     bounceDown@reversed:
  5676                           	callstack 0
  5677   0001B8                     sendMessage@len:
  5678                           	callstack 0
  5679   0001B8                     findEvent@nodeNumber:
  5680                           	callstack 0
  5681                           
  5682                           ; 2 bytes @ 0x0
  5683   0001B8                     	ds	1
  5684   0001B9                     APP_GetEventState@disable_off:
  5685                           	callstack 0
  5686   0001B9                     sendMessage@data1:
  5687                           	callstack 0
  5688   0001B9                     bounceDown@tmp:
  5689                           	callstack 0
  5690                           
  5691                           ; 2 bytes @ 0x1
  5692   0001B9                     	ds	1
  5693   0001BA                     ??_configIO:
  5694   0001BA                     ??_nvFactoryReset:
  5695   0001BA                     APP_GetEventState@h:
  5696                           	callstack 0
  5697   0001BA                     saveNV@value:
  5698                           	callstack 0
  5699   0001BA                     sendMessage@data2:
  5700                           	callstack 0
  5701   0001BA                     setNewCanId@newCanId:
  5702                           	callstack 0
  5703   0001BA                     findEvent@eventNumber:
  5704                           	callstack 0
  5705                           
  5706                           ; 2 bytes @ 0x2
  5707   0001BA                     	ds	1
  5708   0001BB                     ??_saveNV:
  5709   0001BB                     ??_processEnumeration:
  5710   0001BB                     APP_GetEventState@happeningIndex:
  5711                           	callstack 0
  5712   0001BB                     bounceDown@io:
  5713                           	callstack 0
  5714   0001BB                     sendMessage@data3:
  5715                           	callstack 0
  5716   0001BB                     rebuildHashtable@ev:
  5717                           	callstack 0
  5718                           
  5719                           ; 2 bytes @ 0x3
  5720   0001BB                     	ds	1
  5721   0001BC                     ??_findEvent:
  5722   0001BC                     nvFactoryReset@i:
  5723                           	callstack 0
  5724   0001BC                     sendMessage@data4:
  5725                           	callstack 0
  5726   0001BC                     _configIO$8039:
  5727                           	callstack 0
  5728                           
  5729                           ; 1 bytes @ 0x4
  5730   0001BC                     	ds	1
  5731   0001BD                     saveNV@index:
  5732                           	callstack 0
  5733   0001BD                     sendMessage@data5:
  5734                           	callstack 0
  5735   0001BD                     rebuildHashtable@hash:
  5736                           	callstack 0
  5737   0001BD                     _configIO$746:
  5738                           	callstack 0
  5739                           
  5740                           ; 2 bytes @ 0x5
  5741   0001BD                     	ds	1
  5742   0001BE                     defaultNVs@type:
  5743                           	callstack 0
  5744   0001BE                     sendMessage@data6:
  5745                           	callstack 0
  5746   0001BE                     rebuildHashtable@happening:
  5747                           	callstack 0
  5748   0001BE                     findEvent@nn:
  5749                           	callstack 0
  5750                           
  5751                           ; 2 bytes @ 0x6
  5752   0001BE                     	ds	1
  5753   0001BF                     ??_defaultNVs:
  5754   0001BF                     configIO@action:
  5755                           	callstack 0
  5756   0001BF                     sendMessage@data7:
  5757                           	callstack 0
  5758   0001BF                     processEnumeration@enumResult:
  5759                           	callstack 0
  5760   0001BF                     rebuildHashtable@chainIdx:
  5761                           	callstack 0
  5762                           
  5763                           ; 1 bytes @ 0x7
  5764   0001BF                     	ds	1
  5765   0001C0                     ??_doNnevn:
  5766   0001C0                     configIO@type:
  5767                           	callstack 0
  5768   0001C0                     sendMessage4@opc:
  5769                           	callstack 0
  5770   0001C0                     sendMessage5@data1:
  5771                           	callstack 0
  5772   0001C0                     sendMessage6@data1:
  5773                           	callstack 0
  5774   0001C0                     sendMessage7@data1:
  5775                           	callstack 0
  5776   0001C0                     processEnumeration@newCanId:
  5777                           	callstack 0
  5778   0001C0                     doRqevn@count:
  5779                           	callstack 0
  5780   0001C0                     rebuildHashtable@tableIndex:
  5781                           	callstack 0
  5782   0001C0                     findEvent@en:
  5783                           	callstack 0
  5784                           
  5785                           ; 2 bytes @ 0x8
  5786   0001C0                     	ds	1
  5787   0001C1                     ??_clearAllEvents:
  5788   0001C1                     ??_removeTableEntry:
  5789   0001C1                     configIO@i:
  5790                           	callstack 0
  5791   0001C1                     defaultNVs@io:
  5792                           	callstack 0
  5793   0001C1                     sendMessage5@data2:
  5794                           	callstack 0
  5795   0001C1                     sendMessage6@data2:
  5796                           	callstack 0
  5797   0001C1                     sendMessage7@data2:
  5798                           	callstack 0
  5799   0001C1                     processEnumeration@i:
  5800                           	callstack 0
  5801   0001C1                     teachPowerUp@i:
  5802                           	callstack 0
  5803   0001C1                     doRqevn@i:
  5804                           	callstack 0
  5805   0001C1                     sendProducedEvent@onOff:
  5806                           	callstack 0
  5807                           
  5808                           ; 1 bytes @ 0x9
  5809   0001C1                     	ds	1
  5810   0001C2                     ??_powerUp:
  5811   0001C2                     defaultNVs@i:
  5812                           	callstack 0
  5813   0001C2                     sendMessage5@data3:
  5814                           	callstack 0
  5815   0001C2                     sendMessage6@data3:
  5816                           	callstack 0
  5817   0001C2                     sendMessage7@data3:
  5818                           	callstack 0
  5819   0001C2                     findEvent@hash:
  5820                           	callstack 0
  5821   0001C2                     canReceiveMessage@m:
  5822                           	callstack 0
  5823                           
  5824                           ; 2 bytes @ 0xA
  5825   0001C2                     	ds	1
  5826   0001C3                     sendMessage5@data4:
  5827                           	callstack 0
  5828   0001C3                     sendMessage6@data4:
  5829                           	callstack 0
  5830   0001C3                     sendMessage7@data4:
  5831                           	callstack 0
  5832   0001C3                     findEvent@chainIdx:
  5833                           	callstack 0
  5834   0001C3                     sendProducedEvent@opc:
  5835                           	callstack 0
  5836                           
  5837                           ; 1 bytes @ 0xB
  5838   0001C3                     	ds	1
  5839   0001C4                     sendMessage5@data5:
  5840                           	callstack 0
  5841   0001C4                     sendMessage6@data5:
  5842                           	callstack 0
  5843   0001C4                     sendMessage7@data5:
  5844                           	callstack 0
  5845   0001C4                     doNnevn@f:
  5846                           	callstack 0
  5847   0001C4                     findEvent@tableIndex:
  5848                           	callstack 0
  5849   0001C4                     sendProducedEvent@producedEventEN:
  5850                           	callstack 0
  5851                           
  5852                           ; 2 bytes @ 0xC
  5853   0001C4                     	ds	1
  5854   0001C5                     ??_mnsPoll:
  5855   0001C5                     sendMessage6@data6:
  5856                           	callstack 0
  5857   0001C5                     sendMessage7@data6:
  5858                           	callstack 0
  5859   0001C5                     canReceiveMessage@messageAvailable:
  5860                           	callstack 0
  5861   0001C5                     clearAllEvents@tableIndex:
  5862                           	callstack 0
  5863   0001C5                     doNnevn@count:
  5864                           	callstack 0
  5865   0001C5                     doNenrd@index:
  5866                           	callstack 0
  5867   0001C5                     doReval@evNum:
  5868                           	callstack 0
  5869   0001C5                     removeTableEntry@f:
  5870                           	callstack 0
  5871   0001C5                     checkLen@m:
  5872                           	callstack 0
  5873                           
  5874                           ; 2 bytes @ 0xD
  5875   0001C5                     	ds	1
  5876   0001C6                     ??_doReval:
  5877   0001C6                     powerUp@i:
  5878                           	callstack 0
  5879   0001C6                     sendMessage7@data7:
  5880                           	callstack 0
  5881   0001C6                     doNnevn@i:
  5882                           	callstack 0
  5883   0001C6                     removeTableEntry@tableIndex:
  5884                           	callstack 0
  5885   0001C6                     canReceiveMessage@mp:
  5886                           	callstack 0
  5887   0001C6                     doNenrd@nodeNumber:
  5888                           	callstack 0
  5889   0001C6                     doReqev@nodeNumber:
  5890                           	callstack 0
  5891   0001C6                     sendProducedEvent@producedEventNN:
  5892                           	callstack 0
  5893                           
  5894                           ; 2 bytes @ 0xE
  5895   0001C6                     	ds	1
  5896   0001C7                     checkLen@needed:
  5897                           	callstack 0
  5898   0001C7                     doReval@evIndex:
  5899                           	callstack 0
  5900   0001C7                     checkRemoveTableEntry@tableIndex:
  5901                           	callstack 0
  5902   0001C7                     removeEvent@nodeNumber:
  5903                           	callstack 0
  5904                           
  5905                           ; 2 bytes @ 0xF
  5906   0001C7                     	ds	1
  5907   0001C8                     checkLen@service:
  5908                           	callstack 0
  5909   0001C8                     doReval@enNum:
  5910                           	callstack 0
  5911   0001C8                     checkRemoveTableEntry@e:
  5912                           	callstack 0
  5913   0001C8                     sendProducedEvent@happening:
  5914                           	callstack 0
  5915   0001C8                     canReceiveMessage@p:
  5916                           	callstack 0
  5917   0001C8                     doNenrd@eventNumber:
  5918                           	callstack 0
  5919   0001C8                     doReqev@eventNumber:
  5920                           	callstack 0
  5921                           
  5922                           ; 2 bytes @ 0x10
  5923   0001C8                     	ds	1
  5924   0001C9                     ??_inputScan:
  5925   0001C9                     ??_pollServos:
  5926   0001C9                     sendInvertedProducedEvent@state:
  5927                           	callstack 0
  5928   0001C9                     writeEv@evNum:
  5929                           	callstack 0
  5930   0001C9                     ackEventCheckLen@m:
  5931                           	callstack 0
  5932   0001C9                     teachCheckLen@m:
  5933                           	callstack 0
  5934   0001C9                     doReval@evVal:
  5935                           	callstack 0
  5936   0001C9                     removeEvent@eventNumber:
  5937                           	callstack 0
  5938                           
  5939                           ; 2 bytes @ 0x11
  5940   0001C9                     	ds	1
  5941   0001CA                     processOutputs@io:
  5942                           	callstack 0
  5943   0001CA                     sendInvertedProducedEvent@invert:
  5944                           	callstack 0
  5945   0001CA                     doNenrd@tableIndex:
  5946                           	callstack 0
  5947   0001CA                     doReqev@evNum:
  5948                           	callstack 0
  5949   0001CA                     writeEv@evVal:
  5950                           	callstack 0
  5951                           
  5952                           ; 1 bytes @ 0x12
  5953   0001CA                     	ds	1
  5954   0001CB                     ??_writeEv:
  5955   0001CB                     inputScan@change:
  5956                           	callstack 0
  5957   0001CB                     sendInvertedProducedEvent@can_send_on:
  5958                           	callstack 0
  5959   0001CB                     ackEventCheckLen@needed:
  5960                           	callstack 0
  5961   0001CB                     teachCheckLen@needed:
  5962                           	callstack 0
  5963   0001CB                     doReval@tableIndex:
  5964                           	callstack 0
  5965   0001CB                     removeEvent@tableIndex:
  5966                           	callstack 0
  5967   0001CB                     doReqev@evVal:
  5968                           	callstack 0
  5969                           
  5970                           ; 2 bytes @ 0x13
  5971   0001CB                     	ds	1
  5972   0001CC                     inputScan@input:
  5973                           	callstack 0
  5974   0001CC                     sendInvertedProducedEvent@can_send_off:
  5975                           	callstack 0
  5976   0001CC                     teachCheckLen@learn:
  5977                           	callstack 0
  5978   0001CC                     doEvuln@nodeNumber:
  5979                           	callstack 0
  5980                           
  5981                           ; 2 bytes @ 0x14
  5982   0001CC                     	ds	1
  5983   0001CD                     sendInvertedProducedEvent@happening:
  5984                           	callstack 0
  5985   0001CD                     doReqev@tableIndex:
  5986                           	callstack 0
  5987                           
  5988                           ; 1 bytes @ 0x15
  5989   0001CD                     	ds	1
  5990   0001CE                     _sendInvertedProducedEvent$1395:
  5991                           	callstack 0
  5992   0001CE                     doEvuln@eventNumber:
  5993                           	callstack 0
  5994                           
  5995                           ; 2 bytes @ 0x16
  5996   0001CE                     	ds	1
  5997   0001CF                     writeEv@startIndex:
  5998                           	callstack 0
  5999                           
  6000                           ; 1 bytes @ 0x17
  6001   0001CF                     	ds	1
  6002   0001D0                     sendInvertedProducedEvent@state_to_send:
  6003                           	callstack 0
  6004   0001D0                     doEvuln@result:
  6005                           	callstack 0
  6006   0001D0                     writeEv@nextF:
  6007                           	callstack 0
  6008                           
  6009                           ; 1 bytes @ 0x18
  6010   0001D0                     	ds	1
  6011   0001D1                     startDigitalOutput@state:
  6012                           	callstack 0
  6013   0001D1                     pollServos@target:
  6014                           	callstack 0
  6015   0001D1                     mnsTRallDiagnosticsCallback@serviceIndex:
  6016                           	callstack 0
  6017   0001D1                     reqevCallback@serviceIndex:
  6018                           	callstack 0
  6019   0001D1                     writeEv@e:
  6020                           	callstack 0
  6021                           
  6022                           ; 1 bytes @ 0x19
  6023   0001D1                     	ds	1
  6024   0001D2                     ??_startDigitalOutput:
  6025   0001D2                     sodTRCallback@step:
  6026                           	callstack 0
  6027   0001D2                     pollServos@beforeMidway:
  6028                           	callstack 0
  6029   0001D2                     mnsTRserviceDiscoveryCallback@step:
  6030                           	callstack 0
  6031   0001D2                     mnsTRallDiagnosticsCallback@step:
  6032                           	callstack 0
  6033   0001D2                     mnsTRrqnpnCallback@step:
  6034                           	callstack 0
  6035   0001D2                     nvTRnvrdCallback@step:
  6036                           	callstack 0
  6037   0001D2                     nerdCallback@step:
  6038                           	callstack 0
  6039   0001D2                     reqevCallback@step:
  6040                           	callstack 0
  6041   0001D2                     writeEv@f:
  6042                           	callstack 0
  6043                           
  6044                           ; 1 bytes @ 0x1A
  6045   0001D2                     	ds	1
  6046   0001D3                     ??_mnsTRallDiagnosticsCallback:
  6047   0001D3                     ??_mnsTRserviceDiscoveryCallback:
  6048   0001D3                     ??_reqevCallback:
  6049   0001D3                     sodTRCallback@disable_SOD_response:
  6050                           	callstack 0
  6051   0001D3                     pollServos@midway:
  6052                           	callstack 0
  6053   0001D3                     writeEv@tableIndex:
  6054                           	callstack 0
  6055   0001D3                     nvTRnvrdCallback@valueOrError:
  6056                           	callstack 0
  6057   0001D3                     nerdCallback@nodeNumber:
  6058                           	callstack 0
  6059                           
  6060                           ; 2 bytes @ 0x1B
  6061   0001D3                     	ds	1
  6062   0001D4                     sodTRCallback@send_on_ok:
  6063                           	callstack 0
  6064   0001D4                     pollServos@io:
  6065                           	callstack 0
  6066   0001D4                     writeEv@nextIdx:
  6067                           	callstack 0
  6068   0001D4                     _startDigitalOutput$808:
  6069                           	callstack 0
  6070                           
  6071                           ; 2 bytes @ 0x1C
  6072   0001D4                     	ds	1
  6073   0001D5                     deleteActionRange@number:
  6074                           	callstack 0
  6075   0001D5                     sodTRCallback@send_off_ok:
  6076                           	callstack 0
  6077   0001D5                     startServos@type:
  6078                           	callstack 0
  6079   0001D5                     deleteHappeningRange@number:
  6080                           	callstack 0
  6081   0001D5                     nerdCallback@eventNumber:
  6082                           	callstack 0
  6083   0001D5                     addEvent@nodeNumber:
  6084                           	callstack 0
  6085                           
  6086                           ; 2 bytes @ 0x1D
  6087   0001D5                     	ds	1
  6088   0001D6                     ??_deleteHappeningRange:
  6089   0001D6                     ??_deleteActionRange:
  6090   0001D6                     startDigitalOutput@pinState:
  6091                           	callstack 0
  6092   0001D6                     _sodTRCallback$1415:
  6093                           	callstack 0
  6094                           
  6095                           ; 1 bytes @ 0x1E
  6096   0001D6                     	ds	1
  6097   0001D7                     startDigitalOutput@actionState:
  6098                           	callstack 0
  6099   0001D7                     _sodTRCallback$1416:
  6100                           	callstack 0
  6101   0001D7                     mnsTRallDiagnosticsCallback@d:
  6102                           	callstack 0
  6103   0001D7                     addEvent@eventNumber:
  6104                           	callstack 0
  6105                           
  6106                           ; 2 bytes @ 0x1F
  6107   0001D7                     	ds	1
  6108   0001D8                     startDigitalOutput@io:
  6109                           	callstack 0
  6110   0001D8                     sodTRCallback@happeningIndex:
  6111                           	callstack 0
  6112   0001D8                     reqevCallback@nEv:
  6113                           	callstack 0
  6114                           
  6115                           ; 1 bytes @ 0x20
  6116   0001D8                     	ds	1
  6117   0001D9                     sodTRCallback@disable_off:
  6118                           	callstack 0
  6119   0001D9                     startOutput@act:
  6120                           	callstack 0
  6121   0001D9                     addEvent@evNum:
  6122                           	callstack 0
  6123   0001D9                     reqevCallback@ev:
  6124                           	callstack 0
  6125                           
  6126                           ; 2 bytes @ 0x21
  6127   0001D9                     	ds	1
  6128   0001DA                     sodTRCallback@value:
  6129                           	callstack 0
  6130   0001DA                     startOutput@type:
  6131                           	callstack 0
  6132   0001DA                     addEvent@evVal:
  6133                           	callstack 0
  6134                           
  6135                           ; 1 bytes @ 0x22
  6136   0001DA                     	ds	1
  6137   0001DB                     deleteActionRange@updated:
  6138                           	callstack 0
  6139   0001DB                     sodTRCallback@event_inverted:
  6140                           	callstack 0
  6141   0001DB                     startOutput@io:
  6142                           	callstack 0
  6143   0001DB                     addEvent@forceOwnNN:
  6144                           	callstack 0
  6145   0001DB                     deleteHappeningRange@happening:
  6146                           	callstack 0
  6147   0001DB                     reqevCallback@nodeNumber:
  6148                           	callstack 0
  6149                           
  6150                           ; 2 bytes @ 0x23
  6151   0001DB                     	ds	1
  6152   0001DC                     ??_addEvent:
  6153   0001DC                     deleteActionRange@action:
  6154                           	callstack 0
  6155   0001DC                     processActions@simultaneous:
  6156                           	callstack 0
  6157   0001DC                     sodTRCallback@flags:
  6158                           	callstack 0
  6159   0001DC                     deleteHappeningRange@h:
  6160                           	callstack 0
  6161                           
  6162                           ; 1 bytes @ 0x24
  6163   0001DC                     	ds	1
  6164   0001DD                     deleteActionRange@e:
  6165                           	callstack 0
  6166   0001DD                     processActions@peekItem:
  6167                           	callstack 0
  6168   0001DD                     sodTRCallback@io:
  6169                           	callstack 0
  6170   0001DD                     deleteHappeningRange@tableIndex:
  6171                           	callstack 0
  6172   0001DD                     reqevCallback@eventNumber:
  6173                           	callstack 0
  6174                           
  6175                           ; 2 bytes @ 0x25
  6176   0001DD                     	ds	1
  6177   0001DE                     deleteActionRange@tableIndex:
  6178                           	callstack 0
  6179   0001DE                     processActions@nextType:
  6180                           	callstack 0
  6181                           
  6182                           ; 1 bytes @ 0x26
  6183   0001DE                     	ds	1
  6184   0001DF                     clearEvents@io:
  6185                           	callstack 0
  6186   0001DF                     processActions@nextIo:
  6187                           	callstack 0
  6188   0001DF                     reqevCallback@tableIndex:
  6189                           	callstack 0
  6190                           
  6191                           ; 1 bytes @ 0x27
  6192   0001DF                     	ds	1
  6193   0001E0                     ??_pollTimedResponse:
  6194   0001E0                     processActions@type:
  6195                           	callstack 0
  6196   0001E0                     addEvent@error:
  6197                           	callstack 0
  6198                           
  6199                           ; 1 bytes @ 0x28
  6200   0001E0                     	ds	1
  6201   0001E1                     processActions@ioAction:
  6202                           	callstack 0
  6203   0001E1                     addEvent@f:
  6204                           	callstack 0
  6205                           
  6206                           ; 1 bytes @ 0x29
  6207   0001E1                     	ds	1
  6208   0001E2                     processActions@nextAction:
  6209                           	callstack 0
  6210   0001E2                     pollTimedResponse@result:
  6211                           	callstack 0
  6212   0001E2                     addEvent@e:
  6213                           	callstack 0
  6214                           
  6215                           ; 1 bytes @ 0x2A
  6216   0001E2                     	ds	1
  6217   0001E3                     processActions@io:
  6218                           	callstack 0
  6219   0001E3                     addEvent@tableIndex:
  6220                           	callstack 0
  6221                           
  6222                           ; 1 bytes @ 0x2B
  6223   0001E3                     	ds	1
  6224   0001E4                     defaultEvents@type:
  6225                           	callstack 0
  6226   0001E4                     processActions@action:
  6227                           	callstack 0
  6228   0001E4                     APP_addEvent@nodeNumber:
  6229                           	callstack 0
  6230                           
  6231                           ; 2 bytes @ 0x2C
  6232   0001E4                     	ds	1
  6233   0001E5                     ??_loop:
  6234   0001E5                     defaultEvents@en:
  6235                           	callstack 0
  6236                           
  6237                           ; 2 bytes @ 0x2D
  6238   0001E5                     	ds	1
  6239   0001E6                     APP_addEvent@eventNumber:
  6240                           	callstack 0
  6241                           
  6242                           ; 2 bytes @ 0x2E
  6243   0001E6                     	ds	1
  6244   0001E7                     defaultEvents@io:
  6245                           	callstack 0
  6246                           
  6247                           ; 1 bytes @ 0x2F
  6248   0001E7                     	ds	1
  6249   0001E8                     setType@type:
  6250                           	callstack 0
  6251   0001E8                     APP_addEvent@evNum:
  6252                           	callstack 0
  6253                           
  6254                           ; 1 bytes @ 0x30
  6255   0001E8                     	ds	1
  6256   0001E9                     setType@index:
  6257                           	callstack 0
  6258   0001E9                     APP_addEvent@evVal:
  6259                           	callstack 0
  6260                           
  6261                           ; 1 bytes @ 0x31
  6262   0001E9                     	ds	1
  6263   0001EA                     setType@io:
  6264                           	callstack 0
  6265   0001EA                     APP_addEvent@forceOwnNN:
  6266                           	callstack 0
  6267                           
  6268                           ; 1 bytes @ 0x32
  6269   0001EA                     	ds	1
  6270   0001EB                     APP_factoryReset@io:
  6271                           	callstack 0
  6272   0001EB                     APP_addEvent@tableIndex:
  6273                           	callstack 0
  6274   0001EB                     APP_nvValueChanged@value:
  6275                           	callstack 0
  6276                           
  6277                           ; 1 bytes @ 0x33
  6278   0001EB                     	ds	1
  6279   0001EC                     ??_factoryReset:
  6280   0001EC                     APP_nvValueChanged@oldValue:
  6281                           	callstack 0
  6282   0001EC                     doEvlrn@nodeNumber:
  6283                           	callstack 0
  6284                           
  6285                           ; 2 bytes @ 0x34
  6286   0001EC                     	ds	1
  6287   0001ED                     ??_APP_nvValueChanged:
  6288                           
  6289                           ; 1 bytes @ 0x35
  6290   0001ED                     	ds	1
  6291   0001EE                     doEvlrn@eventNumber:
  6292                           	callstack 0
  6293                           
  6294                           ; 2 bytes @ 0x36
  6295   0001EE                     	ds	2
  6296   0001F0                     APP_nvValueChanged@index:
  6297                           	callstack 0
  6298   0001F0                     factoryReset@i:
  6299                           	callstack 0
  6300   0001F0                     doEvlrn@evNum:
  6301                           	callstack 0
  6302                           
  6303                           ; 1 bytes @ 0x38
  6304   0001F0                     	ds	1
  6305   0001F1                     APP_nvValueChanged@io:
  6306                           	callstack 0
  6307   0001F1                     checkPowerOnPb@i:
  6308                           	callstack 0
  6309   0001F1                     doEvlrn@evVal:
  6310                           	callstack 0
  6311                           
  6312                           ; 1 bytes @ 0x39
  6313   0001F1                     	ds	1
  6314   0001F2                     setNV@value:
  6315                           	callstack 0
  6316   0001F2                     doEvlrn@error:
  6317                           	callstack 0
  6318                           
  6319                           ; 1 bytes @ 0x3A
  6320   0001F2                     	ds	1
  6321   0001F3                     ??_setNV:
  6322                           
  6323                           ; 1 bytes @ 0x3B
  6324   0001F3                     	ds	2
  6325   0001F5                     setNV@oldValue:
  6326                           	callstack 0
  6327                           
  6328                           ; 1 bytes @ 0x3D
  6329   0001F5                     	ds	1
  6330   0001F6                     setNV@index:
  6331                           	callstack 0
  6332                           
  6333                           ; 1 bytes @ 0x3E
  6334   0001F6                     	ds	1
  6335   0001F7                     consumer2QProcessMessage@m:
  6336                           	callstack 0
  6337   0001F7                     bootProcessMessage@m:
  6338                           	callstack 0
  6339   0001F7                     ackEventProcessMessage@m:
  6340                           	callstack 0
  6341   0001F7                     mnsProcessMessage@m:
  6342                           	callstack 0
  6343   0001F7                     nvProcessMessage@m:
  6344                           	callstack 0
  6345   0001F7                     canProcessMessage@m:
  6346                           	callstack 0
  6347   0001F7                     teachProcessMessage@m:
  6348                           	callstack 0
  6349   0001F7                     producerProcessMessage@m:
  6350                           	callstack 0
  6351                           
  6352                           ; 2 bytes @ 0x3F
  6353   0001F7                     	ds	2
  6354   0001F9                     ??_consumer2QProcessMessage:
  6355   0001F9                     ??_bootProcessMessage:
  6356   0001F9                     ??_ackEventProcessMessage:
  6357   0001F9                     ??_nvProcessMessage:
  6358   0001F9                     ??_canProcessMessage:
  6359   0001F9                     ??_teachProcessMessage:
  6360   0001F9                     ??_producerProcessMessage:
  6361   0001F9                     mnsProcessMessage@i:
  6362                           	callstack 0
  6363                           
  6364                           ; 1 bytes @ 0x41
  6365   0001F9                     	ds	1
  6366   0001FA                     mnsProcessMessage@d:
  6367                           	callstack 0
  6368                           
  6369                           ; 2 bytes @ 0x42
  6370   0001FA                     	ds	1
  6371   0001FB                     nvProcessMessage@valueOrError:
  6372                           	callstack 0
  6373                           
  6374                           ; 2 bytes @ 0x43
  6375   0001FB                     	ds	1
  6376   0001FC                     mnsProcessMessage@newMode:
  6377                           	callstack 0
  6378                           
  6379                           ; 1 bytes @ 0x44
  6380   0001FC                     	ds	3
  6381                           
  6382                           	psect	cstackBANK0
  6383   000060                     __pcstackBANK0:
  6384                           	callstack 0
  6385   000060                     ?i1_getNextWriteMessage:
  6386                           	callstack 0
  6387   000060                     ?i1_pop:
  6388                           	callstack 0
  6389   000060                     ?i1_getBufferPointer:
  6390                           	callstack 0
  6391   000060                     ?i1_tickGet:
  6392                           	callstack 0
  6393   000060                     i1_isEvent$4861:
  6394                           	callstack 0
  6395   000060                     i1getNextWriteMessage@q:
  6396                           	callstack 0
  6397   000060                     i1pop@q:
  6398                           	callstack 0
  6399                           
  6400                           ; 1 bytes @ 0x0
  6401   000060                     	ds	1
  6402   000061                     i1isEvent@opc:
  6403                           	callstack 0
  6404                           
  6405                           ; 1 bytes @ 0x1
  6406   000061                     	ds	1
  6407   000062                     ??i1_getNextWriteMessage:
  6408   000062                     ??i1_pop:
  6409   000062                     i1getBufferPointer@b:
  6410                           	callstack 0
  6411                           
  6412                           ; 1 bytes @ 0x2
  6413   000062                     	ds	2
  6414   000064                     i1tickGet@IntFlag2:
  6415                           	callstack 0
  6416                           
  6417                           ; 1 bytes @ 0x4
  6418   000064                     	ds	1
  6419   000065                     i1tickGet@IntFlag1:
  6420                           	callstack 0
  6421                           
  6422                           ; 1 bytes @ 0x5
  6423   000065                     	ds	1
  6424   000066                     i1tickGet@currentTime:
  6425                           	callstack 0
  6426                           
  6427                           ; 4 bytes @ 0x6
  6428   000066                     	ds	1
  6429   000067                     i1pop@ret:
  6430                           	callstack 0
  6431                           
  6432                           ; 2 bytes @ 0x7
  6433   000067                     	ds	4
  6434   00006B                     i1getNextWriteMessage@wr:
  6435                           	callstack 0
  6436                           
  6437                           ; 1 bytes @ 0xB
  6438   00006B                     	ds	1
  6439   00006C                     ??_checkTxFifo:
  6440   00006C                     canFillRxFifo@m:
  6441                           	callstack 0
  6442                           
  6443                           ; 2 bytes @ 0xC
  6444   00006C                     	ds	2
  6445   00006E                     canFillRxFifo@ptr:
  6446                           	callstack 0
  6447                           
  6448                           ; 2 bytes @ 0xE
  6449   00006E                     	ds	3
  6450   000071                     checkTxFifo@m:
  6451                           	callstack 0
  6452                           
  6453                           ; 2 bytes @ 0x11
  6454   000071                     	ds	2
  6455   000073                     checkTxFifo@mp:
  6456                           	callstack 0
  6457                           
  6458                           ; 2 bytes @ 0x13
  6459   000073                     	ds	2
  6460   000075                     ??_checkCANTimeout:
  6461                           
  6462                           ; 1 bytes @ 0x15
  6463   000075                     	ds	4
  6464   000079                     ??_lowIsr:
  6465                           
  6466                           ; 1 bytes @ 0x19
  6467   000079                     	ds	4
  6468   00007D                     lowIsr@i:
  6469                           	callstack 0
  6470                           
  6471                           ; 1 bytes @ 0x1D
  6472   00007D                     	ds	1
  6473   00007E                     ??_isrLow:
  6474                           
  6475                           ; 1 bytes @ 0x1E
  6476   00007E                     	ds	15
  6477   00008D                     ??_findServiceIndex:
  6478   00008D                     ??_have:
  6479   00008D                     ??_showStatus:
  6480   00008D                     ?_getNV:
  6481                           	callstack 0
  6482   00008D                     ?_consumer2QGetDiagnostic:
  6483                           	callstack 0
  6484   00008D                     ?_ackGetDiagnostic:
  6485                           	callstack 0
  6486   00008D                     ?_findService:
  6487                           	callstack 0
  6488   00008D                     ?_mnsGetDiagnostic:
  6489                           	callstack 0
  6490   00008D                     ?_nvGetDiagnostic:
  6491                           	callstack 0
  6492   00008D                     ?_getNextWriteMessage:
  6493                           	callstack 0
  6494   00008D                     ?_pop:
  6495                           	callstack 0
  6496   00008D                     ?_canGetDiagnostic:
  6497                           	callstack 0
  6498   00008D                     ?_getBufferPointer:
  6499                           	callstack 0
  6500   00008D                     ?_teachGetDiagnostic:
  6501                           	callstack 0
  6502   00008D                     ?_producerGetDiagnostic:
  6503                           	callstack 0
  6504   00008D                     ?___awmod:
  6505                           	callstack 0
  6506   00008D                     ?_tickGet:
  6507                           	callstack 0
  6508   00008D                     initOutputs@io:
  6509                           	callstack 0
  6510   00008D                     consumer2QEsdData@index:
  6511                           	callstack 0
  6512   00008D                     pushTwoAction@a:
  6513                           	callstack 0
  6514   00008D                     peekTwoActionQueue@qty:
  6515                           	callstack 0
  6516   00008D                     deleteTwoActionQueue@qty:
  6517                           	callstack 0
  6518   00008D                     needsStarting@act:
  6519                           	callstack 0
  6520   00008D                     completed@action:
  6521                           	callstack 0
  6522   00008D                     finaliseOutput@type:
  6523                           	callstack 0
  6524   00008D                     startBounceOutput@action:
  6525                           	callstack 0
  6526   00008D                     initBounce@io:
  6527                           	callstack 0
  6528   00008D                     ackPowerUp@i:
  6529                           	callstack 0
  6530   00008D                     nvGetESDdata@id:
  6531                           	callstack 0
  6532   00008D                     initTicker@priority:
  6533                           	callstack 0
  6534   00008D                     setTimedResponseDelay@delay:
  6535                           	callstack 0
  6536   00008D                     _isEvent$4861:
  6537                           	callstack 0
  6538   00008D                     push@q:
  6539                           	callstack 0
  6540   00008D                     getNextWriteMessage@q:
  6541                           	callstack 0
  6542   00008D                     pop@q:
  6543                           	callstack 0
  6544   00008D                     quantity@q:
  6545                           	callstack 0
  6546   00008D                     eraseFlashBlock@interruptEnabled:
  6547                           	callstack 0
  6548   00008D                     loadFlashBlock@i:
  6549                           	callstack 0
  6550   00008D                     canEsdData@id:
  6551                           	callstack 0
  6552   00008D                     teachGetESDdata@id:
  6553                           	callstack 0
  6554   00008D                     evtIdxToTableIndex@evtIdx:
  6555                           	callstack 0
  6556   00008D                     tableIndexToEvtIdx@tableIndex:
  6557                           	callstack 0
  6558   00008D                     producerPowerUp@i:
  6559                           	callstack 0
  6560   00008D                     producerEsdData@index:
  6561                           	callstack 0
  6562   00008D                     APP_preProcessMessage@m:
  6563                           	callstack 0
  6564   00008D                     APP_postProcessMessage@m:
  6565                           	callstack 0
  6566   00008D                     EEPROM_Read@index:
  6567                           	callstack 0
  6568   00008D                     FLASH_Read@address:
  6569                           	callstack 0
  6570   00008D                     ___awmod@dividend:
  6571                           	callstack 0
  6572   00008D                     memcpy@d1:
  6573                           	callstack 0
  6574                           
  6575                           ; 2 bytes @ 0x2D
  6576   00008D                     	ds	1
  6577   00008E                     ??_quantity:
  6578   00008E                     peekTwoActionQueue@index:
  6579                           	callstack 0
  6580   00008E                     deleteTwoActionQueue@index:
  6581                           	callstack 0
  6582   00008E                     needsStarting@type:
  6583                           	callstack 0
  6584   00008E                     completed@type:
  6585                           	callstack 0
  6586   00008E                     startBounceOutput@io:
  6587                           	callstack 0
  6588   00008E                     initTicker@divider:
  6589                           	callstack 0
  6590   00008E                     isEvent@opc:
  6591                           	callstack 0
  6592   00008E                     flushFlashBlock@interruptEnabled:
  6593                           	callstack 0
  6594   00008E                     push@m:
  6595                           	callstack 0
  6596                           
  6597                           ; 2 bytes @ 0x2E
  6598   00008E                     	ds	1
  6599   00008F                     ??_getNV:
  6600   00008F                     ??_consumer2QGetDiagnostic:
  6601   00008F                     ??_ackGetDiagnostic:
  6602   00008F                     ??_findService:
  6603   00008F                     ??_mnsGetDiagnostic:
  6604   00008F                     ??_nvGetDiagnostic:
  6605   00008F                     ??_getNextWriteMessage:
  6606   00008F                     ??_pop:
  6607   00008F                     ??_canGetDiagnostic:
  6608   00008F                     ??_teachGetDiagnostic:
  6609   00008F                     ??_producerGetDiagnostic:
  6610   00008F                     ??_FLASH_Read:
  6611   00008F                     showStatus@s:
  6612                           	callstack 0
  6613   00008F                     initTicker@i:
  6614                           	callstack 0
  6615   00008F                     findServiceIndex@serviceType:
  6616                           	callstack 0
  6617   00008F                     have@id:
  6618                           	callstack 0
  6619   00008F                     flushFlashBlock@i:
  6620                           	callstack 0
  6621   00008F                     getBufferPointer@b:
  6622                           	callstack 0
  6623   00008F                     EEPROM_Write@index:
  6624                           	callstack 0
  6625   00008F                     ___awmod@divisor:
  6626                           	callstack 0
  6627   00008F                     memcpy@s1:
  6628                           	callstack 0
  6629                           
  6630                           ; 2 bytes @ 0x2F
  6631   00008F                     	ds	1
  6632   000090                     ??_push:
  6633   000090                     getNV@index:
  6634                           	callstack 0
  6635   000090                     findServiceIndex@i:
  6636                           	callstack 0
  6637   000090                     have@i:
  6638                           	callstack 0
  6639   000090                     FLASH_Write@index:
  6640                           	callstack 0
  6641                           
  6642                           ; 2 bytes @ 0x30
  6643   000090                     	ds	1
  6644   000091                     ??_readInput:
  6645   000091                     ?_readNVM:
  6646                           	callstack 0
  6647   000091                     ?___wmul:
  6648                           	callstack 0
  6649   000091                     ?___lmul:
  6650                           	callstack 0
  6651   000091                     setOutputPin@state:
  6652                           	callstack 0
  6653   000091                     consumer2QGetDiagnostic@index:
  6654                           	callstack 0
  6655   000091                     needsStarting@io:
  6656                           	callstack 0
  6657   000091                     _completed$1536:
  6658                           	callstack 0
  6659   000091                     startServoOutput@action:
  6660                           	callstack 0
  6661   000091                     startMultiOutput@action:
  6662                           	callstack 0
  6663   000091                     setServoState@action:
  6664                           	callstack 0
  6665   000091                     setBounceState@action:
  6666                           	callstack 0
  6667   000091                     setMultiState@action:
  6668                           	callstack 0
  6669   000091                     ackGetDiagnostic@index:
  6670                           	callstack 0
  6671   000091                     getParameterFlags@flags:
  6672                           	callstack 0
  6673   000091                     mnsGetDiagnostic@index:
  6674                           	callstack 0
  6675   000091                     nvGetDiagnostic@index:
  6676                           	callstack 0
  6677   000091                     tickGet@IntFlag2:
  6678                           	callstack 0
  6679   000091                     startTimedResponse@serviceIndex:
  6680                           	callstack 0
  6681   000091                     findService@id:
  6682                           	callstack 0
  6683   000091                     EEPROM_Write@value:
  6684                           	callstack 0
  6685   000091                     canGetDiagnostic@index:
  6686                           	callstack 0
  6687   000091                     teachGetDiagnostic@index:
  6688                           	callstack 0
  6689   000091                     producerGetDiagnostic@index:
  6690                           	callstack 0
  6691   000091                     ___awmod@counter:
  6692                           	callstack 0
  6693   000091                     ___wmul@multiplier:
  6694                           	callstack 0
  6695   000091                     memcpy@n:
  6696                           	callstack 0
  6697   000091                     readNVM@index:
  6698                           	callstack 0
  6699   000091                     ___lmul@multiplier:
  6700                           	callstack 0
  6701                           
  6702                           ; 4 bytes @ 0x31
  6703   000091                     	ds	1
  6704   000092                     ??_setOutputPin:
  6705   000092                     ??_startServoOutput:
  6706   000092                     ??_startMultiOutput:
  6707   000092                     completed@io:
  6708                           	callstack 0
  6709   000092                     setServoState@io:
  6710                           	callstack 0
  6711   000092                     setBounceState@io:
  6712                           	callstack 0
  6713   000092                     setMultiState@io:
  6714                           	callstack 0
  6715   000092                     getParameter@idx:
  6716                           	callstack 0
  6717   000092                     tickGet@IntFlag1:
  6718                           	callstack 0
  6719   000092                     findService@i:
  6720                           	callstack 0
  6721   000092                     EEPROM_Write@interruptEnabled:
  6722                           	callstack 0
  6723   000092                     FLASH_Write@value:
  6724                           	callstack 0
  6725   000092                     ___awmod@sign:
  6726                           	callstack 0
  6727   000092                     startTimedResponse@callback:
  6728                           	callstack 0
  6729                           
  6730                           ; 2 bytes @ 0x32
  6731   000092                     	ds	1
  6732   000093                     ??_FLASH_Write:
  6733   000093                     readInput@io:
  6734                           	callstack 0
  6735   000093                     setOutputState@act:
  6736                           	callstack 0
  6737   000093                     startServoOutput@io:
  6738                           	callstack 0
  6739   000093                     startMultiOutput@io:
  6740                           	callstack 0
  6741   000093                     memcpy@tmp:
  6742                           	callstack 0
  6743   000093                     ___wmul@multiplicand:
  6744                           	callstack 0
  6745   000093                     tickGet@currentTime:
  6746                           	callstack 0
  6747                           
  6748                           ; 4 bytes @ 0x33
  6749   000093                     	ds	1
  6750   000094                     ??_readNVM:
  6751   000094                     setOutputPin@io:
  6752                           	callstack 0
  6753   000094                     setOutputState@type:
  6754                           	callstack 0
  6755   000094                     startTimedResponse@type:
  6756                           	callstack 0
  6757   000094                     pop@ret:
  6758                           	callstack 0
  6759   000094                     memcpy@d:
  6760                           	callstack 0
  6761                           
  6762                           ; 2 bytes @ 0x34
  6763   000094                     	ds	1
  6764   000095                     ??_setupTimer1:
  6765   000095                     ??_setupTimer3:
  6766   000095                     setOutputState@io:
  6767                           	callstack 0
  6768   000095                     ___wmul@product:
  6769                           	callstack 0
  6770   000095                     ___lmul@multiplicand:
  6771                           	callstack 0
  6772                           
  6773                           ; 4 bytes @ 0x35
  6774   000095                     	ds	1
  6775   000096                     readNVM@type:
  6776                           	callstack 0
  6777   000096                     memcpy@s:
  6778                           	callstack 0
  6779                           
  6780                           ; 2 bytes @ 0x36
  6781   000096                     	ds	1
  6782   000097                     ??_initInputScan:
  6783   000097                     ??_validStart:
  6784   000097                     ??_loadNvCache:
  6785   000097                     ??_canPowerUp:
  6786   000097                     ?_getNN:
  6787                           	callstack 0
  6788   000097                     ?_getEN:
  6789                           	callstack 0
  6790   000097                     ?___awdiv:
  6791                           	callstack 0
  6792   000097                     ?___lldiv:
  6793                           	callstack 0
  6794   000097                     setDigitalOutput@state:
  6795                           	callstack 0
  6796   000097                     mnsPowerUp@i:
  6797                           	callstack 0
  6798   000097                     handleSelfEnumeration@p:
  6799                           	callstack 0
  6800   000097                     ___awdiv@dividend:
  6801                           	callstack 0
  6802   000097                     ___lldiv@dividend:
  6803                           	callstack 0
  6804                           
  6805                           ; 4 bytes @ 0x37
  6806   000097                     	ds	1
  6807   000098                     setDigitalOutput@pinState:
  6808                           	callstack 0
  6809   000098                     getNextWriteMessage@wr:
  6810                           	callstack 0
  6811   000098                     _setupTimer1$1922:
  6812                           	callstack 0
  6813   000098                     _setupTimer3$1926:
  6814                           	callstack 0
  6815   000098                     mnsPowerUp@temp:
  6816                           	callstack 0
  6817   000098                     canPowerUp@temp:
  6818                           	callstack 0
  6819                           
  6820                           ; 2 bytes @ 0x38
  6821   000098                     	ds	1
  6822   000099                     ??_handleSelfEnumeration:
  6823   000099                     ??_getNN:
  6824   000099                     ??_getEN:
  6825   000099                     setDigitalOutput@io:
  6826                           	callstack 0
  6827   000099                     initInputScan@input:
  6828                           	callstack 0
  6829   000099                     loadNvCache@temp:
  6830                           	callstack 0
  6831   000099                     canSendMessage@mp:
  6832                           	callstack 0
  6833   000099                     ___awdiv@divisor:
  6834                           	callstack 0
  6835   000099                     ___lmul@product:
  6836                           	callstack 0
  6837                           
  6838                           ; 4 bytes @ 0x39
  6839   000099                     	ds	1
  6840   00009A                     setupTimer1@ticks:
  6841                           	callstack 0
  6842   00009A                     setupTimer3@ticks:
  6843                           	callstack 0
  6844                           
  6845                           ; 2 bytes @ 0x3A
  6846   00009A                     	ds	1
  6847   00009B                     ??_canSendMessage:
  6848   00009B                     loadNvCache@i:
  6849                           	callstack 0
  6850   00009B                     validStart@tableIndex:
  6851                           	callstack 0
  6852   00009B                     ___awdiv@counter:
  6853                           	callstack 0
  6854   00009B                     ___lldiv@divisor:
  6855                           	callstack 0
  6856                           
  6857                           ; 4 bytes @ 0x3B
  6858   00009B                     	ds	1
  6859   00009C                     setupTimer1@io:
  6860                           	callstack 0
  6861   00009C                     setupTimer3@io:
  6862                           	callstack 0
  6863   00009C                     nvPowerUp@i:
  6864                           	callstack 0
  6865   00009C                     validStart@f:
  6866                           	callstack 0
  6867   00009C                     ___awdiv@sign:
  6868                           	callstack 0
  6869                           
  6870                           ; 1 bytes @ 0x3C
  6871   00009C                     	ds	1
  6872   00009D                     ??_getEVs:
  6873   00009D                     ??_numEv:
  6874   00009D                     ?_getEv:
  6875                           	callstack 0
  6876   00009D                     handleSelfEnumeration@incomingCanId:
  6877                           	callstack 0
  6878   00009D                     getEv@evNum:
  6879                           	callstack 0
  6880   00009D                     doWait@duration:
  6881                           	callstack 0
  6882   00009D                     getNN@hi:
  6883                           	callstack 0
  6884   00009D                     getEN@hi:
  6885                           	callstack 0
  6886   00009D                     ___awdiv@quotient:
  6887                           	callstack 0
  6888                           
  6889                           ; 2 bytes @ 0x3D
  6890   00009D                     	ds	2
  6891   00009F                     ??_doWait:
  6892   00009F                     ??_bounceUp:
  6893   00009F                     ??_bounceDown:
  6894   00009F                     ??_getEv:
  6895   00009F                     ??_APP_GetEventState:
  6896   00009F                     ??_APP_nvDefault:
  6897   00009F                     ??_leds_poll:
  6898   00009F                     APP_nvValidate@value:
  6899                           	callstack 0
  6900   00009F                     setServoPosition@pos:
  6901                           	callstack 0
  6902   00009F                     getNN@lo:
  6903                           	callstack 0
  6904   00009F                     getEN@lo:
  6905                           	callstack 0
  6906   00009F                     ___lldiv@quotient:
  6907                           	callstack 0
  6908                           
  6909                           ; 4 bytes @ 0x3F
  6910   00009F                     	ds	1
  6911   0000A0                     APP_nvValidate@index:
  6912                           	callstack 0
  6913   0000A0                     setServoPosition@io:
  6914                           	callstack 0
  6915   0000A0                     canSendMessage@m:
  6916                           	callstack 0
  6917                           
  6918                           ; 2 bytes @ 0x40
  6919   0000A0                     	ds	1
  6920   0000A1                     setOutputPosition@pos:
  6921                           	callstack 0
  6922   0000A1                     numEv@num:
  6923                           	callstack 0
  6924   0000A1                     getEVs@f:
  6925                           	callstack 0
  6926   0000A1                     getNN@f:
  6927                           	callstack 0
  6928   0000A1                     getEN@tableIndex:
  6929                           	callstack 0
  6930                           
  6931                           ; 1 bytes @ 0x41
  6932   0000A1                     	ds	1
  6933   0000A2                     ??_sendMessage:
  6934   0000A2                     setOutputPosition@type:
  6935                           	callstack 0
  6936   0000A2                     numEv@f:
  6937                           	callstack 0
  6938   0000A2                     getEVs@evIdx:
  6939                           	callstack 0
  6940   0000A2                     getNN@tableIndex:
  6941                           	callstack 0
  6942                           
  6943                           ; 1 bytes @ 0x42
  6944   0000A2                     	ds	1
  6945   0000A3                     APP_nvDefault@index:
  6946                           	callstack 0
  6947   0000A3                     setOutputPosition@io:
  6948                           	callstack 0
  6949   0000A3                     numEv@tableIndex:
  6950                           	callstack 0
  6951   0000A3                     getEVs@tableIndex:
  6952                           	callstack 0
  6953   0000A3                     ___lldiv@counter:
  6954                           	callstack 0
  6955   0000A3                     getHash@nn:
  6956                           	callstack 0
  6957                           
  6958                           ; 2 bytes @ 0x43
  6959   0000A3                     	ds	1
  6960   0000A4                     ??_initServos:
  6961   0000A4                     ??_pbDownTimer:
  6962   0000A4                     ??_pbUpTimer:
  6963   0000A4                     sendMessage@opc:
  6964                           	callstack 0
  6965   0000A4                     getEv@f:
  6966                           	callstack 0
  6967   0000A4                     getEVs@evNum:
  6968                           	callstack 0
  6969   0000A4                     writeNVM@index:
  6970                           	callstack 0
  6971                           
  6972                           ; 3 bytes @ 0x44
  6973   0000A4                     	ds	1
  6974   0000A5                     bounceUp@reversed:
  6975                           	callstack 0
  6976   0000A5                     sendMessage2@data1:
  6977                           	callstack 0
  6978   0000A5                     sendMessage3@data1:
  6979                           	callstack 0
  6980   0000A5                     sendMessage4@data1:
  6981                           	callstack 0
  6982   0000A5                     sendMessage5@opc:
  6983                           	callstack 0
  6984   0000A5                     sendMessage6@opc:
  6985                           	callstack 0
  6986   0000A5                     sendMessage7@opc:
  6987                           	callstack 0
  6988   0000A5                     getEv@tableIndex:
  6989                           	callstack 0
  6990   0000A5                     getHash@en:
  6991                           	callstack 0
  6992                           
  6993                           ; 2 bytes @ 0x45
  6994   0000A5                     	ds	1
  6995   0000A6                     bounceUp@midway:
  6996                           	callstack 0
  6997   0000A6                     sendMessage2@data2:
  6998                           	callstack 0
  6999   0000A6                     sendMessage3@data2:
  7000                           	callstack 0
  7001   0000A6                     sendMessage4@data2:
  7002                           	callstack 0
  7003   0000A6                     _initServos$8041:
  7004                           	callstack 0
  7005                           
  7006                           ; 1 bytes @ 0x46
  7007   0000A6                     	ds	1
  7008   0000A7                     ??_getHash:
  7009   0000A7                     bounceUp@io:
  7010                           	callstack 0
  7011   0000A7                     sendMessage2@opc:
  7012                           	callstack 0
  7013   0000A7                     sendMessage3@data3:
  7014                           	callstack 0
  7015   0000A7                     sendMessage4@data3:
  7016                           	callstack 0
  7017   0000A7                     writeNVM@value:
  7018                           	callstack 0
  7019   0000A7                     _initServos$8040:
  7020                           	callstack 0
  7021                           
  7022                           ; 1 bytes @ 0x47
  7023   0000A7                     	ds	1
  7024   0000A8                     initServos@io:
  7025                           	callstack 0
  7026   0000A8                     pbDownTimer@timeout:
  7027                           	callstack 0
  7028   0000A8                     pbUpTimer@timeout:
  7029                           	callstack 0
  7030   0000A8                     sendMessage3@opc:
  7031                           	callstack 0
  7032   0000A8                     sendMessage4@data4:
  7033                           	callstack 0
  7034   0000A8                     writeNVM@type:
  7035                           	callstack 0
  7036   0000A8                     getHash@hash:
  7037                           	callstack 0
  7038                           
  7039                           ; 1 bytes @ 0x48
  7040   0000A8                     	ds	1
  7041   0000A9                     
  7042                           ; 1 bytes @ 0x49
  7043                           
  7044                           	psect	cstackCOMRAM
  7045   000001                     __pcstackCOMRAM:
  7046                           	callstack 0
  7047   000001                     ?i2_getNV:
  7048                           	callstack 0
  7049   000001                     ?i2_getNextWriteMessage:
  7050                           	callstack 0
  7051   000001                     ?i2_pop:
  7052                           	callstack 0
  7053   000001                     ?i2_getBufferPointer:
  7054                           	callstack 0
  7055   000001                     ?i2_tickGet:
  7056                           	callstack 0
  7057   000001                     i2_isEvent$4861:
  7058                           	callstack 0
  7059   000001                     i2getNextWriteMessage@q:
  7060                           	callstack 0
  7061   000001                     i2pop@q:
  7062                           	callstack 0
  7063                           
  7064                           ; 1 bytes @ 0x0
  7065   000001                     	ds	1
  7066   000002                     i2isEvent@opc:
  7067                           	callstack 0
  7068                           
  7069                           ; 1 bytes @ 0x1
  7070   000002                     	ds	1
  7071   000003                     ??i2_getNV:
  7072   000003                     ??i2_getNextWriteMessage:
  7073   000003                     ??i2_pop:
  7074   000003                     i2getBufferPointer@b:
  7075                           	callstack 0
  7076                           
  7077                           ; 1 bytes @ 0x2
  7078   000003                     	ds	1
  7079   000004                     i2getNV@index:
  7080                           	callstack 0
  7081                           
  7082                           ; 1 bytes @ 0x3
  7083   000004                     	ds	1
  7084   000005                     i2setOutputPin@state:
  7085                           	callstack 0
  7086   000005                     i2tickGet@IntFlag2:
  7087                           	callstack 0
  7088                           
  7089                           ; 1 bytes @ 0x4
  7090   000005                     	ds	1
  7091   000006                     ??i2_setOutputPin:
  7092   000006                     i2tickGet@IntFlag1:
  7093                           	callstack 0
  7094                           
  7095                           ; 1 bytes @ 0x5
  7096   000006                     	ds	1
  7097   000007                     i2tickGet@currentTime:
  7098                           	callstack 0
  7099                           
  7100                           ; 4 bytes @ 0x6
  7101   000007                     	ds	1
  7102   000008                     i2setOutputPin@io:
  7103                           	callstack 0
  7104   000008                     i2pop@ret:
  7105                           	callstack 0
  7106                           
  7107                           ; 2 bytes @ 0x7
  7108   000008                     	ds	1
  7109   000009                     
  7110                           ; 1 bytes @ 0x8
  7111   000009                     	ds	3
  7112   00000C                     i2getNextWriteMessage@wr:
  7113                           	callstack 0
  7114                           
  7115                           ; 1 bytes @ 0xB
  7116   00000C                     	ds	1
  7117   00000D                     ??i2_checkTxFifo:
  7118   00000D                     i2canFillRxFifo@m:
  7119                           	callstack 0
  7120                           
  7121                           ; 2 bytes @ 0xC
  7122   00000D                     	ds	2
  7123   00000F                     i2canFillRxFifo@ptr:
  7124                           	callstack 0
  7125                           
  7126                           ; 2 bytes @ 0xE
  7127   00000F                     	ds	3
  7128   000012                     i2checkTxFifo@m:
  7129                           	callstack 0
  7130                           
  7131                           ; 2 bytes @ 0x11
  7132   000012                     	ds	2
  7133   000014                     i2checkTxFifo@mp:
  7134                           	callstack 0
  7135                           
  7136                           ; 2 bytes @ 0x13
  7137   000014                     	ds	2
  7138   000016                     ??i2_checkCANTimeout:
  7139   000016                     
  7140                           ; 1 bytes @ 0x15
  7141   000016                     	ds	4
  7142   00001A                     ??_highIsr:
  7143   00001A                     
  7144                           ; 1 bytes @ 0x19
  7145   00001A                     	ds	4
  7146   00001E                     highIsr@i:
  7147                           	callstack 0
  7148                           
  7149                           ; 1 bytes @ 0x1D
  7150   00001E                     	ds	1
  7151   00001F                     ??_isrHigh:
  7152                           
  7153                           ; 1 bytes @ 0x1E
  7154   00001F                     	ds	12
  7155                           
  7156 ;;
  7157 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7158 ;;
  7159 ;; *************** function _main *****************
  7160 ;; Defined at:
  7161 ;;		line 1247 in file "../../VLCBlib_PIC/vlcb.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  i               1    0        unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7179 ;;Total ram usage:        0 bytes
  7180 ;; Hardware stack levels required when called: 29
  7181 ;; This function calls:
  7182 ;;		_checkPowerOnPb
  7183 ;;		_factoryReset
  7184 ;;		_initRomOps
  7185 ;;		_loop
  7186 ;;		_poll
  7187 ;;		_powerUp
  7188 ;;		_readNVM
  7189 ;;		_setup
  7190 ;; This function is called by:
  7191 ;;		Startup code after reset
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text0
  7196   00B788                     __ptext0:
  7197                           	callstack 0
  7198   00B788                     _main:
  7199                           	callstack 2
  7200                           
  7201                           ;../../VLCBlib_PIC/vlcb.c: 1248:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1254:     OSCT
      +                          UNEbits.PLLEN = 1;
  7202                           
  7203                           ;incstack = 0
  7204   00B788  8C9B               	bsf	155,6,c	;volatile
  7205                           
  7206                           ;../../VLCBlib_PIC/vlcb.c: 1269:     RCONbits.IPEN = 1;
  7207   00B78A  8ED0               	bsf	208,7,c	;volatile
  7208                           
  7209                           ;../../VLCBlib_PIC/vlcb.c: 1291:     initRomOps();
  7210   00B78C  EC84  F061         	call	_initRomOps	;wreg free
  7211                           
  7212                           ;../../VLCBlib_PIC/vlcb.c: 1293:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
  7213   00B790  0EFA               	movlw	250
  7214   00B792  0100               	movlb	0	; () banked
  7215   00B794  6F91               	movwf	readNVM@index& (0+255),b
  7216   00B796  0E03               	movlw	3
  7217   00B798  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7218   00B79A  0E00               	movlw	0
  7219   00B79C  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7220   00B79E  0E00               	movlw	0
  7221   00B7A0  ECC2  F058         	call	_readNVM
  7222   00B7A4  0100               	movlb	0	; () banked
  7223   00B7A6  0591               	decf	?_readNVM& (0+255),w,b
  7224   00B7A8  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7225   00B7AA  A4D8               	btfss	status,2,c
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;../../VLCBlib_PIC/vlcb.c: 1294:         factoryReset();
  7229   00B7AC  EC49  F042         	call	_factoryReset	;wreg free
  7230                           
  7231                           ;../../VLCBlib_PIC/vlcb.c: 1298:     powerUp();
  7232                           
  7233                           ;../../VLCBlib_PIC/vlcb.c: 1295:     }
  7234   00B7B0  EC0E  F044         	call	_powerUp	;wreg free
  7235                           
  7236                           ;../../VLCBlib_PIC/vlcb.c: 1301:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7237   00B7B4  8EF2               	bsf	242,7,c	;volatile
  7238   00B7B6  8CF2               	bsf	242,6,c	;volatile
  7239                           
  7240                           ;../../VLCBlib_PIC/vlcb.c: 1302:     checkPowerOnPb();
  7241   00B7B8  EC21  F059         	call	_checkPowerOnPb	;wreg free
  7242                           
  7243                           ;../../VLCBlib_PIC/vlcb.c: 1305:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7244   00B7BC  9EF2               	bcf	242,7,c	;volatile
  7245   00B7BE  9CF2               	bcf	242,6,c	;volatile
  7246                           
  7247                           ;../../VLCBlib_PIC/vlcb.c: 1306:     setup();
  7248   00B7C0  ECCD  F04B         	call	_setup	;wreg free
  7249                           
  7250                           ;../../VLCBlib_PIC/vlcb.c: 1309:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7251   00B7C4  8EF2               	bsf	242,7,c	;volatile
  7252   00B7C6  8CF2               	bsf	242,6,c	;volatile
  7253   00B7C8                     l24597:
  7254                           
  7255                           ;../../VLCBlib_PIC/vlcb.c: 1313:         poll();
  7256   00B7C8  EC53  F01C         	call	_poll	;wreg free
  7257                           
  7258                           ;../../VLCBlib_PIC/vlcb.c: 1314:         loop();
  7259   00B7CC  EC84  F035         	call	_loop	;wreg free
  7260   00B7D0  D7FB               	goto	l24597
  7261   00B7D2                     __end_of_main:
  7262                           	callstack 0
  7263                           
  7264 ;; *************** function _setup *****************
  7265 ;; Defined at:
  7266 ;;		line 236 in file "../main.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;		None
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;		None
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  1    wreg      void 
  7273 ;; Registers used:
  7274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7284 ;;Total ram usage:        0 bytes
  7285 ;; Hardware stack levels used: 1
  7286 ;; Hardware stack levels required when called: 19
  7287 ;; This function calls:
  7288 ;;		_configIO
  7289 ;;		_getNV
  7290 ;;		_initInputScan
  7291 ;;		_initOutputs
  7292 ;;		_initServos
  7293 ;;		_setTimedResponseDelay
  7294 ;;		_tickGet
  7295 ;;		_universalEventsInit
  7296 ;; This function is called by:
  7297 ;;		_main
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text1
  7302   00979A                     __ptext1:
  7303                           	callstack 0
  7304   00979A                     _setup:
  7305                           	callstack 11
  7306                           
  7307                           ;../main.c: 241:     transport = &canTransport;
  7308                           
  7309                           ;incstack = 0
  7310   00979A  0E7B               	movlw	low _canTransport
  7311   00979C  0101               	movlb	1	; () banked
  7312   00979E  6F72               	movwf	_transport& (0+255),b
  7313   0097A0  0EEF               	movlw	high _canTransport
  7314   0097A2  6F73               	movwf	(_transport+1)& (0+255),b
  7315                           
  7316                           ; BSR set to: 1
  7317                           ;../main.c: 248:     INTCON2bits.RBPU = 0;
  7318   0097A4  9EF1               	bcf	241,7,c	;volatile
  7319                           
  7320                           ; BSR set to: 1
  7321                           ;../main.c: 250:     WPUB = (uint8_t)getNV(4);
  7322   0097A6  0E04               	movlw	4
  7323   0097A8  EC21  F05D         	call	_getNV
  7324   0097AC  0100               	movlb	0	; () banked
  7325   0097AE  518D               	movf	?_getNV& (0+255),w,b
  7326   0097B0  010F               	movlb	15	; () banked
  7327   0097B2  6F5B               	movwf	91,b	;volatile
  7328                           
  7329                           ; BSR set to: 15
  7330                           ;../main.c: 301:     setTimedResponseDelay((uint8_t)getNV(5));
  7331   0097B4  0E05               	movlw	5
  7332   0097B6  EC21  F05D         	call	_getNV
  7333   0097BA  0100               	movlb	0	; () banked
  7334   0097BC  518D               	movf	?_getNV& (0+255),w,b
  7335   0097BE  ECCE  F061         	call	_setTimedResponseDelay
  7336                           
  7337                           ;../main.c: 302:     universalEventsInit();
  7338   0097C2  EC98  F061         	call	_universalEventsInit	;wreg free
  7339                           
  7340                           ;../main.c: 309:     ANCON0 = 0x00;
  7341   0097C6  0E00               	movlw	0
  7342   0097C8  010F               	movlb	15	; () banked
  7343   0097CA  6F5D               	movwf	93,b	;volatile
  7344                           
  7345                           ; BSR set to: 15
  7346                           ;../main.c: 310:     ANCON1 = 0x00;
  7347   0097CC  0E00               	movlw	0
  7348   0097CE  6F5C               	movwf	92,b	;volatile
  7349                           
  7350                           ; BSR set to: 15
  7351                           ;../main.c: 323:     initServos();
  7352   0097D0  ECAC  F03D         	call	_initServos	;wreg free
  7353                           
  7354                           ;../main.c: 325:     initOutputs();
  7355   0097D4  EC7B  F05F         	call	_initOutputs	;wreg free
  7356                           
  7357                           ;../main.c: 328:     for (io=0; io< 16; io++) {
  7358   0097D8  0E00               	movlw	0
  7359   0097DA  0100               	movlb	0	; () banked
  7360   0097DC  6FD1               	movwf	_io& (0+255),b
  7361   0097DE                     l24347:
  7362                           
  7363                           ; BSR set to: 0
  7364   0097DE  0E0F               	movlw	15
  7365   0097E0  65D1               	cpfsgt	_io& (0+255),b
  7366   0097E2  D001               	goto	l24351
  7367   0097E4  D006               	goto	l24357
  7368   0097E6                     l24351:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;../main.c: 329:         configIO(io);
  7372   0097E6  51D1               	movf	_io& (0+255),w,b
  7373   0097E8  EC04  F026         	call	_configIO
  7374                           
  7375                           ;../main.c: 330:     }
  7376   0097EC  0100               	movlb	0	; () banked
  7377   0097EE  2BD1               	incf	_io& (0+255),f,b
  7378   0097F0  D7F6               	goto	l24347
  7379   0097F2                     l24357:
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;../main.c: 331:     initInputScan();
  7383   0097F2  EC22  F04C         	call	_initInputScan	;wreg free
  7384                           
  7385                           ;../main.c: 337:     (INTCONbits.GIE = 1);
  7386   0097F6  8EF2               	bsf	242,7,c	;volatile
  7387                           
  7388                           ;../main.c: 339:     startTime.val = tickGet();
  7389   0097F8  ECD6  F059         	call	_tickGet	;wreg free
  7390   0097FC  C08D  F03B         	movff	?_tickGet,_startTime
  7391   009800  C08E  F03C         	movff	?_tickGet+1,_startTime+1
  7392   009804  C08F  F03D         	movff	?_tickGet+2,_startTime+2
  7393   009808  C090  F03E         	movff	?_tickGet+3,_startTime+3
  7394                           
  7395                           ;../main.c: 340:     lastServoStartTime.val = startTime.val;
  7396   00980C  C03B  F16C         	movff	_startTime,_lastServoStartTime
  7397   009810  C03C  F16D         	movff	_startTime+1,_lastServoStartTime+1
  7398   009814  C03D  F16E         	movff	_startTime+2,_lastServoStartTime+2
  7399   009818  C03E  F16F         	movff	_startTime+3,_lastServoStartTime+3
  7400                           
  7401                           ;../main.c: 341:     lastInputScanTime.val = startTime.val;
  7402   00981C  C03B  F168         	movff	_startTime,_lastInputScanTime
  7403   009820  C03C  F169         	movff	_startTime+1,_lastInputScanTime+1
  7404   009824  C03D  F16A         	movff	_startTime+2,_lastInputScanTime+2
  7405   009828  C03E  F16B         	movff	_startTime+3,_lastInputScanTime+3
  7406                           
  7407                           ;../main.c: 342:     lastActionPollTime.val = startTime.val;
  7408   00982C  C03B  F164         	movff	_startTime,_lastActionPollTime
  7409   009830  C03C  F165         	movff	_startTime+1,_lastActionPollTime+1
  7410   009834  C03D  F166         	movff	_startTime+2,_lastActionPollTime+2
  7411   009838  C03E  F167         	movff	_startTime+3,_lastActionPollTime+3
  7412                           
  7413                           ;../main.c: 347:     started = FALSE;
  7414   00983C  0E00               	movlw	0
  7415   00983E  0100               	movlb	0	; () banked
  7416   009840  6FD2               	movwf	_started& (0+255),b
  7417                           
  7418                           ; BSR set to: 0
  7419   009842  0012               	return		;funcret
  7420   009844                     __end_of_setup:
  7421                           	callstack 0
  7422                           
  7423 ;; *************** function _universalEventsInit *****************
  7424 ;; Defined at:
  7425 ;;		line 93 in file "../universalEvents.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;		None
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg, status,2
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7443 ;;Total ram usage:        0 bytes
  7444 ;; Hardware stack levels used: 1
  7445 ;; Hardware stack levels required when called: 12
  7446 ;; This function calls:
  7447 ;;		Nothing
  7448 ;; This function is called by:
  7449 ;;		_setup
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text2
  7454   00C330                     __ptext2:
  7455                           	callstack 0
  7456   00C330                     _universalEventsInit:
  7457                           	callstack 17
  7458                           
  7459                           ;../universalEvents.c: 94:     startWait.val = 0;
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;incstack = 0
  7463   00C330  0E00               	movlw	0
  7464   00C332  6E37               	movwf	_startWait^0,c
  7465   00C334  0E00               	movlw	0
  7466   00C336  6E38               	movwf	(_startWait+1)^0,c
  7467   00C338  0E00               	movlw	0
  7468   00C33A  6E39               	movwf	(_startWait+2)^0,c
  7469   00C33C  0E00               	movlw	0
  7470   00C33E  6E3A               	movwf	(_startWait+3)^0,c
  7471   00C340  0012               	return		;funcret
  7472   00C342                     __end_of_universalEventsInit:
  7473                           	callstack 0
  7474                           
  7475 ;; *************** function _initServos *****************
  7476 ;; Defined at:
  7477 ;;		line 123 in file "../servo.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;		None
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;  io              1   72[BANK0 ] unsigned char 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  1    wreg      void 
  7484 ;; Registers used:
  7485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7492 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7493 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7494 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7495 ;;Total ram usage:        5 bytes
  7496 ;; Hardware stack levels used: 1
  7497 ;; Hardware stack levels required when called: 15
  7498 ;; This function calls:
  7499 ;;		_getNV
  7500 ;;		_readNVM
  7501 ;;		_setOutputPosition
  7502 ;;		_tickGet
  7503 ;; This function is called by:
  7504 ;;		_setup
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508                           	psect	text3
  7509   007B58                     __ptext3:
  7510                           	callstack 0
  7511   007B58                     _initServos:
  7512                           	callstack 14
  7513                           
  7514                           ;incstack = 0
  7515   007B58  0E00               	movlw	0
  7516   007B5A  0100               	movlb	0	; () banked
  7517   007B5C  6FA8               	movwf	initServos@io& (0+255),b
  7518   007B5E                     l22375:
  7519                           
  7520                           ; BSR set to: 0
  7521   007B5E  51A8               	movf	initServos@io& (0+255),w,b
  7522   007B60  0D07               	mullw	7
  7523   007B62  50F3               	movf	243,w,c
  7524   007B64  0F11               	addlw	17
  7525   007B66  EC21  F05D         	call	_getNV
  7526   007B6A  0100               	movlb	0	; () banked
  7527   007B6C  A58D               	btfss	?_getNV& (0+255),2,b
  7528   007B6E  D009               	goto	l22379
  7529                           
  7530                           ; BSR set to: 0
  7531   007B70  0E30               	movlw	low _servoState
  7532   007B72  25A8               	addwf	initServos@io& (0+255),w,b
  7533   007B74  6ED9               	movwf	fsr2l,c
  7534   007B76  6ADA               	clrf	fsr2h,c
  7535   007B78  0E01               	movlw	high _servoState
  7536   007B7A  22DA               	addwfc	fsr2h,f,c
  7537   007B7C  0E01               	movlw	1
  7538   007B7E  6EDF               	movwf	indf2,c
  7539   007B80  D007               	goto	l22381
  7540   007B82                     l22379:
  7541                           
  7542                           ; BSR set to: 0
  7543   007B82  0E30               	movlw	low _servoState
  7544   007B84  25A8               	addwf	initServos@io& (0+255),w,b
  7545   007B86  6ED9               	movwf	fsr2l,c
  7546   007B88  6ADA               	clrf	fsr2h,c
  7547   007B8A  0E01               	movlw	high _servoState
  7548   007B8C  22DA               	addwfc	fsr2h,f,c
  7549   007B8E  6ADF               	clrf	indf2,c
  7550   007B90                     l22381:
  7551                           
  7552                           ; BSR set to: 0
  7553   007B90  ECD6  F059         	call	_tickGet	;wreg free
  7554   007B94  0100               	movlb	0	; () banked
  7555   007B96  51A8               	movf	initServos@io& (0+255),w,b
  7556   007B98  0D04               	mullw	4
  7557   007B9A  0E00               	movlw	low _ticksWhenStopped
  7558   007B9C  24F3               	addwf	243,w,c
  7559   007B9E  6ED9               	movwf	fsr2l,c
  7560   007BA0  0E02               	movlw	high _ticksWhenStopped
  7561   007BA2  20F4               	addwfc	prodh,w,c
  7562   007BA4  6EDA               	movwf	fsr2h,c
  7563   007BA6  C08D  FFDE         	movff	?_tickGet,postinc2
  7564   007BAA  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7565   007BAE  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7566   007BB2  C090  FFDE         	movff	?_tickGet+3,postinc2
  7567                           
  7568                           ; BSR set to: 0
  7569   007BB6  51A8               	movf	initServos@io& (0+255),w,b
  7570   007BB8  0D07               	mullw	7
  7571   007BBA  50F3               	movf	243,w,c
  7572   007BBC  0F11               	addlw	17
  7573   007BBE  EC21  F05D         	call	_getNV
  7574   007BC2  0100               	movlb	0	; () banked
  7575   007BC4  A58D               	btfss	?_getNV& (0+255),2,b
  7576   007BC6  D020               	goto	l22389
  7577                           
  7578                           ; BSR set to: 0
  7579   007BC8  51A8               	movf	initServos@io& (0+255),w,b
  7580   007BCA  0D07               	mullw	7
  7581   007BCC  50F3               	movf	243,w,c
  7582   007BCE  0F10               	addlw	16
  7583   007BD0  EC21  F05D         	call	_getNV
  7584   007BD4  0100               	movlb	0	; () banked
  7585   007BD6  518D               	movf	?_getNV& (0+255),w,b
  7586   007BD8  6FA7               	movwf	_initServos$8040& (0+255),b
  7587                           
  7588                           ; BSR set to: 0
  7589   007BDA  0EDE               	movlw	222
  7590   007BDC  25A8               	addwf	initServos@io& (0+255),w,b
  7591   007BDE  6FA4               	movwf	??_initServos& (0+255),b
  7592   007BE0  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7593   007BE2  0E03               	movlw	3
  7594   007BE4  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7595   007BE6  C0A4  F091         	movff	??_initServos,readNVM@index
  7596   007BEA  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7597   007BEE  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7598   007BF0  0E00               	movlw	0
  7599   007BF2  ECC2  F058         	call	_readNVM
  7600   007BF6  0100               	movlb	0	; () banked
  7601   007BF8  5191               	movf	?_readNVM& (0+255),w,b
  7602   007BFA  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7603   007BFC  C0A7  F0A2         	movff	_initServos$8040,setOutputPosition@type
  7604   007C00  51A8               	movf	initServos@io& (0+255),w,b
  7605   007C02  EC42  F055         	call	_setOutputPosition
  7606   007C06  D019               	goto	l22393
  7607   007C08                     l22389:
  7608                           
  7609                           ; BSR set to: 0
  7610   007C08  51A8               	movf	initServos@io& (0+255),w,b
  7611   007C0A  0D07               	mullw	7
  7612   007C0C  50F3               	movf	243,w,c
  7613   007C0E  0F12               	addlw	18
  7614   007C10  EC21  F05D         	call	_getNV
  7615   007C14  0100               	movlb	0	; () banked
  7616   007C16  518D               	movf	?_getNV& (0+255),w,b
  7617   007C18  6FA7               	movwf	_initServos$8040& (0+255),b
  7618   007C1A  51A8               	movf	initServos@io& (0+255),w,b
  7619   007C1C  0D07               	mullw	7
  7620   007C1E  50F3               	movf	243,w,c
  7621   007C20  0F10               	addlw	16
  7622   007C22  EC21  F05D         	call	_getNV
  7623   007C26  0100               	movlb	0	; () banked
  7624   007C28  518D               	movf	?_getNV& (0+255),w,b
  7625   007C2A  6FA6               	movwf	_initServos$8041& (0+255),b
  7626                           
  7627                           ; BSR set to: 0
  7628   007C2C  C0A7  F0A1         	movff	_initServos$8040,setOutputPosition@pos
  7629   007C30  C0A6  F0A2         	movff	_initServos$8041,setOutputPosition@type
  7630   007C34  51A8               	movf	initServos@io& (0+255),w,b
  7631   007C36  EC42  F055         	call	_setOutputPosition
  7632   007C3A                     l22393:
  7633   007C3A  0E20               	movlw	low _stepsPerPollSpeed
  7634   007C3C  0100               	movlb	0	; () banked
  7635   007C3E  25A8               	addwf	initServos@io& (0+255),w,b
  7636   007C40  6ED9               	movwf	fsr2l,c
  7637   007C42  6ADA               	clrf	fsr2h,c
  7638   007C44  0E01               	movlw	high _stepsPerPollSpeed
  7639   007C46  22DA               	addwfc	fsr2h,f,c
  7640   007C48  6ADF               	clrf	indf2,c
  7641                           
  7642                           ; BSR set to: 0
  7643   007C4A  2BA8               	incf	initServos@io& (0+255),f,b
  7644                           
  7645                           ; BSR set to: 0
  7646   007C4C  0E0F               	movlw	15
  7647   007C4E  65A8               	cpfsgt	initServos@io& (0+255),b
  7648   007C50  D786               	goto	l22375
  7649                           
  7650                           ; BSR set to: 0
  7651   007C52  9EAA               	bcf	170,7,c	;volatile
  7652                           
  7653                           ; BSR set to: 0
  7654   007C54  0E3F               	movlw	-193
  7655   007C56  16CD               	andwf	205,f,c	;volatile
  7656   007C58  50CD               	movf	205,w,c	;volatile
  7657   007C5A  0BCF               	andlw	-49
  7658   007C5C  0920               	iorlw	32
  7659   007C5E  6ECD               	movwf	205,c	;volatile
  7660                           
  7661                           ; BSR set to: 0
  7662   007C60  86CD               	bsf	205,3,c	;volatile
  7663                           
  7664                           ; BSR set to: 0
  7665   007C62  82CD               	bsf	205,1,c	;volatile
  7666                           
  7667                           ; BSR set to: 0
  7668   007C64  809D               	bsf	157,0,c	;volatile
  7669                           
  7670                           ; BSR set to: 0
  7671   007C66  9EB0               	bcf	176,7,c	;volatile
  7672   007C68  0E3F               	movlw	-193
  7673   007C6A  16B1               	andwf	177,f,c	;volatile
  7674   007C6C  50B1               	movf	177,w,c	;volatile
  7675   007C6E  0BCF               	andlw	-49
  7676   007C70  0920               	iorlw	32
  7677   007C72  6EB1               	movwf	177,c	;volatile
  7678                           
  7679                           ; BSR set to: 0
  7680   007C74  86B1               	bsf	177,3,c	;volatile
  7681                           
  7682                           ; BSR set to: 0
  7683   007C76  82B1               	bsf	177,1,c	;volatile
  7684                           
  7685                           ; BSR set to: 0
  7686   007C78  82A0               	bsf	160,1,c	;volatile
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;../servo.c: 175:     servoInBlock = io -1;
  7690   007C7A  05A8               	decf	initServos@io& (0+255),w,b
  7691   007C7C  6FCB               	movwf	_servoInBlock& (0+255),b
  7692                           
  7693                           ; BSR set to: 0
  7694   007C7E  0012               	return		;funcret
  7695   007C80                     __end_of_initServos:
  7696                           	callstack 0
  7697                           
  7698 ;; *************** function _setOutputPosition *****************
  7699 ;; Defined at:
  7700 ;;		line 148 in file "../outputs.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  io              1    wreg     unsigned char 
  7703 ;;  pos             1   65[BANK0 ] unsigned char 
  7704 ;;  type            1   66[BANK0 ] unsigned char 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;  io              1   67[BANK0 ] unsigned char 
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      void 
  7709 ;; Registers used:
  7710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7716 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7719 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7720 ;;Total ram usage:        3 bytes
  7721 ;; Hardware stack levels used: 1
  7722 ;; Hardware stack levels required when called: 14
  7723 ;; This function calls:
  7724 ;;		_getNV
  7725 ;;		_setDigitalOutput
  7726 ;;		_setOutputPin
  7727 ;;		_setServoPosition
  7728 ;; This function is called by:
  7729 ;;		_initServos
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           	psect	text4
  7734   00AA84                     __ptext4:
  7735                           	callstack 0
  7736   00AA84                     _setOutputPosition:
  7737                           	callstack 14
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;incstack = 0
  7741                           ;setOutputPosition@io stored from wreg
  7742   00AA84  0100               	movlb	0	; () banked
  7743   00AA86  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7744                           
  7745                           ;../outputs.c: 149:     switch(type) {
  7746   00AA88  D020               	goto	l21277
  7747   00AA8A                     l21265:
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;../outputs.c: 156:             setDigitalOutput(io, pos);
  7751   00AA8A  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7752   00AA8E  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7753   00AA90  EC78  F051         	call	_setDigitalOutput
  7754   00AA94  0012               	return	
  7755   00AA96                     l21269:
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;../outputs.c: 166:             setServoPosition(io, pos);
  7759   00AA96  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7760   00AA9A  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7761   00AA9C  EC5A  F060         	call	_setServoPosition
  7762                           
  7763                           ;../outputs.c: 167:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7764   00AAA0  0100               	movlb	0	; () banked
  7765   00AAA2  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7766   00AAA4  0D07               	mullw	7
  7767   00AAA6  50F3               	movf	243,w,c
  7768   00AAA8  0F11               	addlw	17
  7769   00AAAA  0B20               	andlw	32
  7770   00AAAC  EC21  F05D         	call	_getNV
  7771   00AAB0  0100               	movlb	0	; () banked
  7772   00AAB2  518D               	movf	?_getNV& (0+255),w,b
  7773   00AAB4  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7774   00AAB6  B4D8               	btfsc	status,2,c
  7775   00AAB8  D002               	goto	u22060
  7776   00AABA  0E01               	movlw	1
  7777   00AABC  D001               	goto	u22070
  7778   00AABE                     u22060:
  7779   00AABE  0E00               	movlw	0
  7780   00AAC0                     u22070:
  7781   00AAC0  6F91               	movwf	setOutputPin@state& (0+255),b
  7782   00AAC2  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7783   00AAC4  EC66  F036         	call	_setOutputPin
  7784   00AAC8  0012               	return	
  7785   00AACA                     l21277:
  7786   00AACA  0100               	movlb	0	; () banked
  7787   00AACC  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7788                           
  7789                           ; Switch size 1, requested type "simple"
  7790                           ; Number of cases is 7, Range of values is 0 to 6
  7791                           ; switch strategies available:
  7792                           ; Name         Instructions Cycles
  7793                           ; simple_byte           22    12 (average)
  7794                           ;	Chosen strategy is simple_byte
  7795   00AACE  0A00               	xorlw	0	; case 0
  7796   00AAD0  B4D8               	btfsc	status,2,c
  7797   00AAD2  0012               	return	
  7798   00AAD4  0A01               	xorlw	1	; case 1
  7799   00AAD6  B4D8               	btfsc	status,2,c
  7800   00AAD8  D7D8               	goto	l21265
  7801   00AADA  0A03               	xorlw	3	; case 2
  7802   00AADC  B4D8               	btfsc	status,2,c
  7803   00AADE  D7DB               	goto	l21269
  7804   00AAE0  0A01               	xorlw	1	; case 3
  7805   00AAE2  B4D8               	btfsc	status,2,c
  7806   00AAE4  D7D8               	goto	l21269
  7807   00AAE6  0A07               	xorlw	7	; case 4
  7808   00AAE8  B4D8               	btfsc	status,2,c
  7809   00AAEA  D7D5               	goto	l21269
  7810   00AAEC  0A01               	xorlw	1	; case 5
  7811   00AAEE  B4D8               	btfsc	status,2,c
  7812   00AAF0  0012               	return	
  7813   00AAF2  0A03               	xorlw	3	; case 6
  7814   00AAF4  0012               	return	
  7815   00AAF6                     __end_of_setOutputPosition:
  7816                           	callstack 0
  7817                           
  7818 ;; *************** function _initOutputs *****************
  7819 ;; Defined at:
  7820 ;;		line 86 in file "../digitalOut.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  io              1   45[BANK0 ] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7838 ;;Total ram usage:        1 bytes
  7839 ;; Hardware stack levels used: 1
  7840 ;; Hardware stack levels required when called: 12
  7841 ;; This function calls:
  7842 ;;		Nothing
  7843 ;; This function is called by:
  7844 ;;		_setup
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text5
  7849   00BEF6                     __ptext5:
  7850                           	callstack 0
  7851   00BEF6                     _initOutputs:
  7852                           	callstack 17
  7853                           
  7854                           ;../digitalOut.c: 88:     uint8_t io;;../digitalOut.c: 89:     for (io=0; io<16; io++) {
  7855                           
  7856                           ;incstack = 0
  7857   00BEF6  0E00               	movlw	0
  7858   00BEF8  0100               	movlb	0	; () banked
  7859   00BEFA  6F8D               	movwf	initOutputs@io& (0+255),b
  7860   00BEFC                     l15419:
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;../digitalOut.c: 90:        pulseDelays[io] = 0;
  7864   00BEFC  0ED4               	movlw	low _pulseDelays
  7865   00BEFE  258D               	addwf	initOutputs@io& (0+255),w,b
  7866   00BF00  6ED9               	movwf	fsr2l,c
  7867   00BF02  6ADA               	clrf	fsr2h,c
  7868   00BF04  0E02               	movlw	high _pulseDelays
  7869   00BF06  22DA               	addwfc	fsr2h,f,c
  7870   00BF08  6ADF               	clrf	indf2,c
  7871                           
  7872                           ;../digitalOut.c: 91:        flashDelays[io] = 0;
  7873   00BF0A  0EC4               	movlw	low _flashDelays
  7874   00BF0C  258D               	addwf	initOutputs@io& (0+255),w,b
  7875   00BF0E  6ED9               	movwf	fsr2l,c
  7876   00BF10  6ADA               	clrf	fsr2h,c
  7877   00BF12  0E02               	movlw	high _flashDelays
  7878   00BF14  22DA               	addwfc	fsr2h,f,c
  7879   00BF16  6ADF               	clrf	indf2,c
  7880                           
  7881                           ; BSR set to: 0
  7882                           ;../digitalOut.c: 92:     }
  7883   00BF18  2B8D               	incf	initOutputs@io& (0+255),f,b
  7884                           
  7885                           ; BSR set to: 0
  7886   00BF1A  0E0F               	movlw	15
  7887   00BF1C  658D               	cpfsgt	initOutputs@io& (0+255),b
  7888   00BF1E  D7EE               	goto	l15419
  7889   00BF20  0012               	return	
  7890   00BF22                     __end_of_initOutputs:
  7891                           	callstack 0
  7892                           
  7893 ;; *************** function _initInputScan *****************
  7894 ;; Defined at:
  7895 ;;		line 76 in file "../inputs.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;		None
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  input           1   57[BANK0 ] unsigned char 
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  1    wreg      void 
  7902 ;; Registers used:
  7903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7911 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7912 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7913 ;;Total ram usage:        3 bytes
  7914 ;; Hardware stack levels used: 1
  7915 ;; Hardware stack levels required when called: 14
  7916 ;; This function calls:
  7917 ;;		_getNV
  7918 ;;		_readInput
  7919 ;;		_readNVM
  7920 ;; This function is called by:
  7921 ;;		_setup
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text6
  7926   009844                     __ptext6:
  7927                           	callstack 0
  7928   009844                     _initInputScan:
  7929                           	callstack 15
  7930                           
  7931                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;incstack = 0
  7935   009844  0E00               	movlw	0
  7936   009846  0100               	movlb	0	; () banked
  7937   009848  6FD0               	movwf	_io@inputs$F849& (0+255),b
  7938   00984A                     l22419:
  7939                           
  7940                           ; BSR set to: 0
  7941   00984A  0E0F               	movlw	15
  7942   00984C  65D0               	cpfsgt	_io@inputs$F849& (0+255),b
  7943   00984E  D001               	goto	l22423
  7944   009850  0012               	return	
  7945   009852                     l22423:
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  7949   009852  51D0               	movf	_io@inputs$F849& (0+255),w,b
  7950   009854  EC57  F03F         	call	_readInput
  7951   009858  0100               	movlb	0	; () banked
  7952   00985A  6F99               	movwf	initInputScan@input& (0+255),b
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;../inputs.c: 79:         inputState[io] = input;
  7956   00985C  0EB4               	movlw	low _inputState
  7957   00985E  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  7958   009860  6ED9               	movwf	fsr2l,c
  7959   009862  6ADA               	clrf	fsr2h,c
  7960   009864  0E02               	movlw	high _inputState
  7961   009866  22DA               	addwfc	fsr2h,f,c
  7962   009868  C099  FFDF         	movff	initInputScan@input,indf2
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  7966   00986C  51D0               	movf	_io@inputs$F849& (0+255),w,b
  7967   00986E  0D07               	mullw	7
  7968   009870  50F3               	movf	243,w,c
  7969   009872  0F11               	addlw	17
  7970   009874  EC21  F05D         	call	_getNV
  7971   009878  0100               	movlb	0	; () banked
  7972   00987A  B18D               	btfsc	?_getNV& (0+255),0,b
  7973   00987C  D007               	goto	l22431
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;../inputs.c: 81:             input = !input;
  7977   00987E  5199               	movf	initInputScan@input& (0+255),w,b
  7978   009880  A4D8               	btfss	status,2,c
  7979   009882  D002               	goto	u23710
  7980   009884  0E01               	movlw	1
  7981   009886  D001               	goto	u23720
  7982   009888                     u23710:
  7983   009888  0E00               	movlw	0
  7984   00988A                     u23720:
  7985   00988A  6F99               	movwf	initInputScan@input& (0+255),b
  7986   00988C                     l22431:
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;../inputs.c: 83:         outputState[io] = input;
  7990   00988C  0EE4               	movlw	low _outputState
  7991   00988E  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  7992   009890  6ED9               	movwf	fsr2l,c
  7993   009892  6ADA               	clrf	fsr2h,c
  7994   009894  0E02               	movlw	high _outputState
  7995   009896  22DA               	addwfc	fsr2h,f,c
  7996   009898  C099  FFDF         	movff	initInputScan@input,indf2
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  8000   00989C  51D0               	movf	_io@inputs$F849& (0+255),w,b
  8001   00989E  0D07               	mullw	7
  8002   0098A0  50F3               	movf	243,w,c
  8003   0098A2  0F11               	addlw	17
  8004   0098A4  EC21  F05D         	call	_getNV
  8005   0098A8  0100               	movlb	0	; () banked
  8006   0098AA  A98D               	btfss	?_getNV& (0+255),4,b
  8007   0098AC  D017               	goto	l22437
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  8011   0098AE  0EDE               	movlw	222
  8012   0098B0  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  8013   0098B2  6F97               	movwf	??_initInputScan& (0+255),b
  8014   0098B4  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8015   0098B6  0E03               	movlw	3
  8016   0098B8  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8017   0098BA  C097  F091         	movff	??_initInputScan,readNVM@index
  8018   0098BE  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8019   0098C2  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8020   0098C4  0E00               	movlw	0
  8021   0098C6  ECC2  F058         	call	_readNVM
  8022   0098CA  0EE4               	movlw	low _outputState
  8023   0098CC  0100               	movlb	0	; () banked
  8024   0098CE  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  8025   0098D0  6ED9               	movwf	fsr2l,c
  8026   0098D2  6ADA               	clrf	fsr2h,c
  8027   0098D4  0E02               	movlw	high _outputState
  8028   0098D6  22DA               	addwfc	fsr2h,f,c
  8029   0098D8  C091  FFDF         	movff	?_readNVM,indf2
  8030   0098DC                     l22437:
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;../inputs.c: 87:         delayCount[io] = 0;
  8034   0098DC  0EA4               	movlw	low _delayCount
  8035   0098DE  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  8036   0098E0  6ED9               	movwf	fsr2l,c
  8037   0098E2  6ADA               	clrf	fsr2h,c
  8038   0098E4  0E02               	movlw	high _delayCount
  8039   0098E6  22DA               	addwfc	fsr2h,f,c
  8040   0098E8  6ADF               	clrf	indf2,c
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;../inputs.c: 88:     }
  8044   0098EA  2BD0               	incf	_io@inputs$F849& (0+255),f,b
  8045   0098EC  D7AE               	goto	l22419
  8046   0098EE                     __end_of_initInputScan:
  8047                           	callstack 0
  8048                           
  8049 ;; *************** function _powerUp *****************
  8050 ;; Defined at:
  8051 ;;		line 875 in file "../../VLCBlib_PIC/vlcb.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;		None
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  i               1   14[BANK1 ] unsigned char 
  8056 ;;  divider         1    0        unsigned char 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8067 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8068 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8069 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;Total ram usage:        5 bytes
  8071 ;; Hardware stack levels used: 1
  8072 ;; Hardware stack levels required when called: 18
  8073 ;; This function calls:
  8074 ;;		NULL
  8075 ;;		_ackPowerUp
  8076 ;;		_canPowerUp
  8077 ;;		_consumer2QPowerUp
  8078 ;;		_initTicker
  8079 ;;		_initTimedResponse
  8080 ;;		_leds_powerUp
  8081 ;;		_mnsPowerUp
  8082 ;;		_nvPowerUp
  8083 ;;		_producerPowerUp
  8084 ;;		_teachPowerUp
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text7
  8091   00881C                     __ptext7:
  8092                           	callstack 0
  8093   00881C                     _powerUp:
  8094                           	callstack 12
  8095                           
  8096                           ;../../VLCBlib_PIC/vlcb.c: 876:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 877:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 880:     initTicker(0);
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;incstack = 0
  8100   00881C  0E00               	movlw	0
  8101   00881E  EC7C  F05C         	call	_initTicker
  8102                           
  8103                           ;../../VLCBlib_PIC/vlcb.c: 881:     initTimedResponse();
  8104   008822  ECDB  F061         	call	_initTimedResponse	;wreg free
  8105                           
  8106                           ;../../VLCBlib_PIC/vlcb.c: 882:     leds_powerUp();
  8107   008826  EC8D  F05E         	call	_leds_powerUp	;wreg free
  8108                           
  8109                           ;../../VLCBlib_PIC/vlcb.c: 883:     timedResponseDelay = 5;
  8110   00882A  0E05               	movlw	5
  8111   00882C  0101               	movlb	1	; () banked
  8112   00882E  6F74               	movwf	_timedResponseDelay& (0+255),b
  8113                           
  8114                           ; BSR set to: 1
  8115                           ;../../VLCBlib_PIC/vlcb.c: 885:     for (i=0; i<9; i++) {
  8116   008830  0E00               	movlw	0
  8117   008832  6FC6               	movwf	powerUp@i& (0+255),b
  8118   008834                     l24413:
  8119                           
  8120                           ; BSR set to: 1
  8121                           ;../../VLCBlib_PIC/vlcb.c: 886:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8122   008834  51C6               	movf	powerUp@i& (0+255),w,b
  8123   008836  0D02               	mullw	2
  8124   008838  0E75               	movlw	low _services
  8125   00883A  24F3               	addwf	243,w,c
  8126   00883C  6EF6               	movwf	tblptrl,c
  8127   00883E  0EEE               	movlw	high _services
  8128   008840  20F4               	addwfc	244,w,c
  8129   008842  6EF7               	movwf	tblptrh,c
  8130   008844                     	if	1	;There are 3 active tblptr bytes
  8131   008844  6AF8               	clrf	tblptru,c
  8132   008846  0E00               	movlw	low (__mediumconst shr (0+16))
  8133   008848  22F8               	addwfc	tblptru,f,c
  8134   00884A                     	endif
  8135   00884A  0009               	tblrd		*+
  8136   00884C  50F5               	movf	tablat,w,c
  8137   00884E  0009               	tblrd		*+
  8138   008850  10F5               	iorwf	tablat,w,c
  8139   008852  B4D8               	btfsc	status,2,c
  8140   008854  D04B               	goto	u26259
  8141                           
  8142                           ; BSR set to: 1
  8143   008856  51C6               	movf	powerUp@i& (0+255),w,b
  8144   008858  0D02               	mullw	2
  8145   00885A  0E75               	movlw	low _services
  8146   00885C  24F3               	addwf	243,w,c
  8147   00885E  6EF6               	movwf	tblptrl,c
  8148   008860  0EEE               	movlw	high _services
  8149   008862  20F4               	addwfc	244,w,c
  8150   008864  6EF7               	movwf	tblptrh,c
  8151   008866                     	if	1	;There are 3 active tblptr bytes
  8152   008866  6AF8               	clrf	tblptru,c
  8153   008868  0E00               	movlw	low (__mediumconst shr (0+16))
  8154   00886A  22F8               	addwfc	tblptru,f,c
  8155   00886C                     	endif
  8156   00886C  0009               	tblrd		*+
  8157   00886E  CFF5 F1C2          	movff	tablat,??_powerUp
  8158   008872  0009               	tblrd		*+
  8159   008874  CFF5 F1C3          	movff	tablat,??_powerUp+1
  8160   008878  0E04               	movlw	4
  8161   00887A  27C2               	addwf	??_powerUp& (0+255),f,b
  8162   00887C  0E00               	movlw	0
  8163   00887E  23C3               	addwfc	(??_powerUp+1)& (0+255),f,b
  8164   008880  C1C2  FFF6         	movff	??_powerUp,tblptrl
  8165   008884  C1C3  FFF7         	movff	??_powerUp+1,tblptrh
  8166   008888                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8167   008888  6AF8               	clrf	tblptru,c
  8168   00888A                     	endif
  8169   00888A                     	if	0	;tblptru may be non-zero
  8170   00888A                     	endif
  8171   00888A  0009               	tblrd		*+
  8172   00888C  50F5               	movf	tablat,w,c
  8173   00888E  0009               	tblrd		*+
  8174   008890  10F5               	iorwf	tablat,w,c
  8175   008892  B4D8               	btfsc	status,2,c
  8176   008894  D02B               	goto	u26259
  8177                           
  8178                           ; BSR set to: 1
  8179                           ;../../VLCBlib_PIC/vlcb.c: 887:             services[i]->powerUp();
  8180   008896  51C6               	movf	powerUp@i& (0+255),w,b
  8181   008898  0D02               	mullw	2
  8182   00889A  0E75               	movlw	low _services
  8183   00889C  24F3               	addwf	243,w,c
  8184   00889E  6EF6               	movwf	tblptrl,c
  8185   0088A0  0EEE               	movlw	high _services
  8186   0088A2  20F4               	addwfc	244,w,c
  8187   0088A4  6EF7               	movwf	tblptrh,c
  8188   0088A6                     	if	1	;There are 3 active tblptr bytes
  8189   0088A6  6AF8               	clrf	tblptru,c
  8190   0088A8  0E00               	movlw	low (__mediumconst shr (0+16))
  8191   0088AA  22F8               	addwfc	tblptru,f,c
  8192   0088AC                     	endif
  8193   0088AC  0009               	tblrd		*+
  8194   0088AE  CFF5 F1C2          	movff	tablat,??_powerUp
  8195   0088B2  0009               	tblrd		*+
  8196   0088B4  CFF5 F1C3          	movff	tablat,??_powerUp+1
  8197   0088B8  0E04               	movlw	4
  8198   0088BA  27C2               	addwf	??_powerUp& (0+255),f,b
  8199   0088BC  0E00               	movlw	0
  8200   0088BE  23C3               	addwfc	(??_powerUp+1)& (0+255),f,b
  8201   0088C0  C1C2  FFF6         	movff	??_powerUp,tblptrl
  8202   0088C4  C1C3  FFF7         	movff	??_powerUp+1,tblptrh
  8203   0088C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8204   0088C8  6AF8               	clrf	tblptru,c
  8205   0088CA                     	endif
  8206   0088CA                     	if	0	;tblptru may be non-zero
  8207   0088CA                     	endif
  8208   0088CA  0009               	tblrd		*+
  8209   0088CC  CFF5 F1C4          	movff	tablat,??_powerUp+2
  8210   0088D0  0009               	tblrd		*+
  8211   0088D2  CFF5 F1C5          	movff	tablat,??_powerUp+3
  8212   0088D6  D801               	call	u26258
  8213   0088D8  D009               	goto	u26259
  8214   0088DA                     u26258:
  8215   0088DA  0005               	push	
  8216   0088DC  6EFA               	movwf	pclath,c
  8217   0088DE  51C4               	movf	(??_powerUp+2)& (0+255),w,b
  8218   0088E0  6EFD               	movwf	tosl,c
  8219   0088E2  51C5               	movf	(??_powerUp+3)& (0+255),w,b
  8220   0088E4  6EFE               	movwf	tosh,c
  8221   0088E6  6AFF               	clrf	tosu,c
  8222   0088E8  50FA               	movf	pclath,w,c
  8223   0088EA  0012               	return		;indir
  8224   0088EC                     u26259:
  8225                           
  8226                           ;../../VLCBlib_PIC/vlcb.c: 889:     }
  8227   0088EC  0101               	movlb	1	; () banked
  8228   0088EE  2BC6               	incf	powerUp@i& (0+255),f,b
  8229                           
  8230                           ; BSR set to: 1
  8231   0088F0  0E08               	movlw	8
  8232   0088F2  65C6               	cpfsgt	powerUp@i& (0+255),b
  8233   0088F4  D79F               	goto	l24413
  8234   0088F6  0012               	return	
  8235   0088F8                     __end_of_powerUp:
  8236                           	callstack 0
  8237                           
  8238 ;; *************** function _producerPowerUp *****************
  8239 ;; Defined at:
  8240 ;;		line 108 in file "../../VLCBlib_PIC/event_producer_happening.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;		None
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  i               1   45[BANK0 ] unsigned char 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      void 
  8247 ;; Registers used:
  8248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8257 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8258 ;;Total ram usage:        1 bytes
  8259 ;; Hardware stack levels used: 1
  8260 ;; Hardware stack levels required when called: 12
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		_powerUp
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           	psect	text8
  8269   00C06C                     __ptext8:
  8270                           	callstack 0
  8271   00C06C                     _producerPowerUp:
  8272                           	callstack 17
  8273                           
  8274                           ;../../VLCBlib_PIC/event_producer_happening.c: 109:     uint8_t i;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 110:     for (i=0; i<1; i++) {
  8275                           
  8276                           ; BSR set to: 1
  8277                           ;incstack = 0
  8278   00C06C  0E00               	movlw	0
  8279   00C06E  0100               	movlb	0	; () banked
  8280   00C070  6F8D               	movwf	producerPowerUp@i& (0+255),b
  8281   00C072                     l24259:
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;../../VLCBlib_PIC/event_producer_happening.c: 111:         producerDiagnostics[i].asInt
      +                           = 0;
  8285   00C072  518D               	movf	producerPowerUp@i& (0+255),w,b
  8286   00C074  0D02               	mullw	2
  8287   00C076  0EB0               	movlw	low _producerDiagnostics
  8288   00C078  24F3               	addwf	243,w,c
  8289   00C07A  6ED9               	movwf	fsr2l,c
  8290   00C07C  0E01               	movlw	high _producerDiagnostics
  8291   00C07E  20F4               	addwfc	prodh,w,c
  8292   00C080  6EDA               	movwf	fsr2h,c
  8293   00C082  6ADE               	clrf	postinc2,c
  8294   00C084  6ADD               	clrf	postdec2,c
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;../../VLCBlib_PIC/event_producer_happening.c: 112:     }
  8298   00C086  2B8D               	incf	producerPowerUp@i& (0+255),f,b
  8299                           
  8300                           ; BSR set to: 0
  8301   00C088  518D               	movf	producerPowerUp@i& (0+255),w,b
  8302   00C08A  A4D8               	btfss	status,2,c
  8303   00C08C  0012               	return	
  8304   00C08E  D7F1               	goto	l24259
  8305   00C090                     __end_of_producerPowerUp:
  8306                           	callstack 0
  8307                           
  8308 ;; *************** function _canPowerUp *****************
  8309 ;; Defined at:
  8310 ;;		line 213 in file "../../VLCBlib_PIC/can18_ecan.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;		None
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  temp            2   56[BANK0 ] int 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      void 
  8317 ;; Registers used:
  8318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8326 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8327 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8328 ;;Total ram usage:        3 bytes
  8329 ;; Hardware stack levels used: 1
  8330 ;; Hardware stack levels required when called: 14
  8331 ;; This function calls:
  8332 ;;		_readNVM
  8333 ;;		_tickGet
  8334 ;; This function is called by:
  8335 ;;		_powerUp
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text9
  8340   006E8A                     __ptext9:
  8341                           	callstack 0
  8342   006E8A                     _canPowerUp:
  8343                           	callstack 15
  8344                           
  8345                           ;../../VLCBlib_PIC/can18_ecan.c: 214:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 217:
      +                               rxQueue.readIndex = 0;
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;incstack = 0
  8349   006E8A  0E00               	movlw	0
  8350   006E8C  6E4F               	movwf	(_rxQueue+2)^0,c
  8351                           
  8352                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     rxQueue.writeIndex = 0;
  8353   006E8E  0E00               	movlw	0
  8354   006E90  6E50               	movwf	(_rxQueue+3)^0,c
  8355                           
  8356                           ;../../VLCBlib_PIC/can18_ecan.c: 219:     rxQueue.messages = rxBuffers;
  8357   006E92  0E48               	movlw	low _rxBuffers
  8358   006E94  6E4D               	movwf	_rxQueue^0,c
  8359   006E96  0E07               	movlw	high _rxBuffers
  8360   006E98  6E4E               	movwf	(_rxQueue+1)^0,c
  8361                           
  8362                           ;../../VLCBlib_PIC/can18_ecan.c: 220:     rxQueue.size = 32;
  8363   006E9A  0E20               	movlw	32
  8364   006E9C  6E51               	movwf	(_rxQueue+4)^0,c
  8365                           
  8366                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     txQueue.readIndex = 0;
  8367   006E9E  0E00               	movlw	0
  8368   006EA0  6E4A               	movwf	(_txQueue+2)^0,c
  8369                           
  8370                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     txQueue.writeIndex = 0;
  8371   006EA2  0E00               	movlw	0
  8372   006EA4  6E4B               	movwf	(_txQueue+3)^0,c
  8373                           
  8374                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     txQueue.messages = txBuffers;
  8375   006EA6  0E80               	movlw	low _txBuffers
  8376   006EA8  6E48               	movwf	_txQueue^0,c
  8377   006EAA  0E04               	movlw	high _txBuffers
  8378   006EAC  6E49               	movwf	(_txQueue+1)^0,c
  8379                           
  8380                           ;../../VLCBlib_PIC/can18_ecan.c: 225:     txQueue.size = 8;
  8381   006EAE  0E08               	movlw	8
  8382   006EB0  6E4C               	movwf	(_txQueue+4)^0,c
  8383                           
  8384                           ;../../VLCBlib_PIC/can18_ecan.c: 229:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8385   006EB2  0EFE               	movlw	254
  8386   006EB4  0100               	movlb	0	; () banked
  8387   006EB6  6F91               	movwf	readNVM@index& (0+255),b
  8388   006EB8  0E03               	movlw	3
  8389   006EBA  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8390   006EBC  0E00               	movlw	0
  8391   006EBE  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8392   006EC0  0E00               	movlw	0
  8393   006EC2  ECC2  F058         	call	_readNVM
  8394   006EC6  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8395   006ECA  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8396                           
  8397                           ;../../VLCBlib_PIC/can18_ecan.c: 230:     if (temp < 0) {
  8398   006ECE  0100               	movlb	0	; () banked
  8399   006ED0  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8400   006ED2  D003               	goto	l2401
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;../../VLCBlib_PIC/can18_ecan.c: 232:         canId = 0;
  8404   006ED4  0E00               	movlw	0
  8405   006ED6  6FC3               	movwf	_canId& (0+255),b
  8406                           
  8407                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     } else {
  8408   006ED8  D002               	goto	l23759
  8409   006EDA                     l2401:
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;../../VLCBlib_PIC/can18_ecan.c: 234:         canId = (uint8_t)temp;
  8413   006EDA  C098  F0C3         	movff	canPowerUp@temp,_canId
  8414   006EDE                     l23759:
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;../../VLCBlib_PIC/can18_ecan.c: 238:     for (temp=0; temp<16; temp++) {
  8418   006EDE  0E00               	movlw	0
  8419   006EE0  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8420   006EE2  0E00               	movlw	0
  8421   006EE4  6F98               	movwf	canPowerUp@temp& (0+255),b
  8422   006EE6                     l23765:
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;../../VLCBlib_PIC/can18_ecan.c: 239:         canDiagnostics[temp].asInt = 0;
  8426   006EE6  90D8               	bcf	status,0,c
  8427   006EE8  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8428   006EEA  6ED9               	movwf	fsr2l,c
  8429   006EEC  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8430   006EEE  6EDA               	movwf	fsr2h,c
  8431   006EF0  0E77               	movlw	low _canDiagnostics
  8432   006EF2  26D9               	addwf	fsr2l,f,c
  8433   006EF4  0E01               	movlw	high _canDiagnostics
  8434   006EF6  22DA               	addwfc	fsr2h,f,c
  8435   006EF8  6ADE               	clrf	postinc2,c
  8436   006EFA  6ADD               	clrf	postdec2,c
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;../../VLCBlib_PIC/can18_ecan.c: 240:     }
  8440   006EFC  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8441   006EFE  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8442                           
  8443                           ; BSR set to: 0
  8444   006F00  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8445   006F02  D7F1               	goto	l23765
  8446   006F04  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8447   006F06  E104               	bnz	u25510
  8448   006F08  0E10               	movlw	16
  8449   006F0A  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8450   006F0C  A0D8               	btfss	status,0,c
  8451   006F0E  D7EB               	goto	l23765
  8452   006F10                     u25510:
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;../../VLCBlib_PIC/can18_ecan.c: 243:     canTransmitFailed=0;
  8456   006F10  0E00               	movlw	0
  8457   006F12  6FC2               	movwf	_canTransmitFailed& (0+255),b
  8458                           
  8459                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     IPR5 = 0;
  8460   006F14  0E00               	movlw	0
  8461   006F16  6E78               	movwf	120,c	;volatile
  8462                           
  8463                           ;../../VLCBlib_PIC/can18_ecan.c: 247:     CANCON = 0b10000000;
  8464   006F18  0E80               	movlw	128
  8465   006F1A  6E6F               	movwf	111,c	;volatile
  8466   006F1C                     l2405:
  8467   006F1C  AE6E               	btfss	110,7,c	;volatile
  8468   006F1E  D7FE               	goto	l2405
  8469                           
  8470                           ;../../VLCBlib_PIC/can18_ecan.c: 251:     ECANCON = 0b10110000;
  8471   006F20  0EB0               	movlw	176
  8472   006F22  6E72               	movwf	114,c	;volatile
  8473                           
  8474                           ;../../VLCBlib_PIC/can18_ecan.c: 252:     BSEL0 = 0;
  8475   006F24  0E00               	movlw	0
  8476   006F26  010E               	movlb	14	; () banked
  8477   006F28  6F7D               	movwf	125,b	;volatile
  8478                           
  8479                           ;../../VLCBlib_PIC/can18_ecan.c: 276:       BRGCON1 = 0b00001111;
  8480   006F2A  0E0F               	movlw	15
  8481   006F2C  6F43               	movwf	67,b	;volatile
  8482                           
  8483                           ;../../VLCBlib_PIC/can18_ecan.c: 279:     BRGCON2 = 0b10011110;
  8484   006F2E  0E9E               	movlw	158
  8485   006F30  6F44               	movwf	68,b	;volatile
  8486                           
  8487                           ;../../VLCBlib_PIC/can18_ecan.c: 280:     BRGCON3 = 0b00000011;
  8488   006F32  0E03               	movlw	3
  8489   006F34  6F45               	movwf	69,b	;volatile
  8490                           
  8491                           ;../../VLCBlib_PIC/can18_ecan.c: 281:     CIOCON = 0b00100000;
  8492   006F36  0E20               	movlw	32
  8493   006F38  6E70               	movwf	112,c	;volatile
  8494                           
  8495                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     RXM0SIDH = 0;
  8496   006F3A  0E00               	movlw	0
  8497   006F3C  6FF8               	movwf	248,b	;volatile
  8498                           
  8499                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     RXM0SIDL = 0x08;
  8500   006F3E  0E08               	movlw	8
  8501   006F40  6FF9               	movwf	249,b	;volatile
  8502                           
  8503                           ;../../VLCBlib_PIC/can18_ecan.c: 287:     RXM0EIDH = 0;
  8504   006F42  0E00               	movlw	0
  8505   006F44  6FFA               	movwf	250,b	;volatile
  8506                           
  8507                           ;../../VLCBlib_PIC/can18_ecan.c: 288:     RXM0EIDL = 0;
  8508   006F46  0E00               	movlw	0
  8509   006F48  6FFB               	movwf	251,b	;volatile
  8510                           
  8511                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXF0SIDL = 0x00;
  8512   006F4A  0E00               	movlw	0
  8513   006F4C  6FE1               	movwf	225,b	;volatile
  8514                           
  8515                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXFBCON0 = 0;
  8516   006F4E  0E00               	movlw	0
  8517   006F50  6F71               	movwf	113,b	;volatile
  8518                           
  8519                           ;../../VLCBlib_PIC/can18_ecan.c: 294:     MSEL0 = 0;
  8520   006F52  0E00               	movlw	0
  8521   006F54  6F79               	movwf	121,b	;volatile
  8522                           
  8523                           ;../../VLCBlib_PIC/can18_ecan.c: 296:     RXFCON0 = 1;
  8524   006F56  0E01               	movlw	1
  8525   006F58  6F46               	movwf	70,b	;volatile
  8526                           
  8527                           ;../../VLCBlib_PIC/can18_ecan.c: 303:     RXB0CON = 0x00;
  8528   006F5A  0E00               	movlw	0
  8529   006F5C  6E60               	movwf	96,c	;volatile
  8530                           
  8531                           ;../../VLCBlib_PIC/can18_ecan.c: 304:     RXB1CON = 0x00;
  8532   006F5E  0E00               	movlw	0
  8533   006F60  010F               	movlb	15	; () banked
  8534   006F62  6F30               	movwf	48,b	;volatile
  8535                           
  8536                           ;../../VLCBlib_PIC/can18_ecan.c: 305:     B0CON = 0;
  8537   006F64  0E00               	movlw	0
  8538   006F66  010E               	movlb	14	; () banked
  8539   006F68  6F80               	movwf	128,b	;volatile
  8540                           
  8541                           ;../../VLCBlib_PIC/can18_ecan.c: 306:     B1CON = 0;
  8542   006F6A  0E00               	movlw	0
  8543   006F6C  6F90               	movwf	144,b	;volatile
  8544                           
  8545                           ;../../VLCBlib_PIC/can18_ecan.c: 307:     B2CON = 0;
  8546   006F6E  0E00               	movlw	0
  8547   006F70  6FA0               	movwf	160,b	;volatile
  8548                           
  8549                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     B3CON = 0;
  8550   006F72  0E00               	movlw	0
  8551   006F74  6FB0               	movwf	176,b	;volatile
  8552                           
  8553                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     B4CON = 0;
  8554   006F76  0E00               	movlw	0
  8555   006F78  6FC0               	movwf	192,b	;volatile
  8556                           
  8557                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B5CON = 0;
  8558   006F7A  0E00               	movlw	0
  8559   006F7C  6FD0               	movwf	208,b	;volatile
  8560                           
  8561                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     BIE0 = 0;
  8562   006F7E  0E00               	movlw	0
  8563   006F80  6F7E               	movwf	126,b	;volatile
  8564                           
  8565                           ; BSR set to: 14
  8566                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     TXBIEbits.TXB0IE = 1;
  8567   006F82  857F               	bsf	127,2,b	;volatile
  8568                           
  8569                           ; BSR set to: 14
  8570                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     TXBIEbits.TXB1IE = 0;
  8571   006F84  977F               	bcf	127,3,b	;volatile
  8572                           
  8573                           ; BSR set to: 14
  8574                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     TXBIEbits.TXB2IE = 0;
  8575   006F86  997F               	bcf	127,4,b	;volatile
  8576                           
  8577                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     CANCON = 0;
  8578   006F88  0E00               	movlw	0
  8579   006F8A  6E6F               	movwf	111,c	;volatile
  8580   006F8C                     l2408:
  8581   006F8C  BE6E               	btfsc	110,7,c	;volatile
  8582   006F8E  D7FE               	goto	l2408
  8583                           
  8584                           ;../../VLCBlib_PIC/can18_ecan.c: 322:     TXB0CON = 0;
  8585   006F90  0E00               	movlw	0
  8586   006F92  010F               	movlb	15	; () banked
  8587   006F94  6F20               	movwf	32,b	;volatile
  8588                           
  8589                           ; BSR set to: 15
  8590                           ;../../VLCBlib_PIC/can18_ecan.c: 323:     TXB0CONbits.TXPRI0 = 0;
  8591   006F96  9120               	bcf	32,0,b	;volatile
  8592                           
  8593                           ; BSR set to: 15
  8594                           ;../../VLCBlib_PIC/can18_ecan.c: 324:     TXB0CONbits.TXPRI1 = 0;
  8595   006F98  9320               	bcf	32,1,b	;volatile
  8596                           
  8597                           ;../../VLCBlib_PIC/can18_ecan.c: 325:     TXB0DLC = 0;
  8598   006F9A  0E00               	movlw	0
  8599   006F9C  6F25               	movwf	37,b	;volatile
  8600                           
  8601                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0SIDH = 0;
  8602   006F9E  0E00               	movlw	0
  8603   006FA0  6F21               	movwf	33,b	;volatile
  8604                           
  8605                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0SIDL = 0;
  8606   006FA2  0E00               	movlw	0
  8607   006FA4  6F22               	movwf	34,b	;volatile
  8608                           
  8609                           ;../../VLCBlib_PIC/can18_ecan.c: 332:     TXB1CON = 0;
  8610   006FA6  0E00               	movlw	0
  8611   006FA8  6F10               	movwf	16,b	;volatile
  8612                           
  8613                           ; BSR set to: 15
  8614                           ;../../VLCBlib_PIC/can18_ecan.c: 333:     TXB1CONbits.TXPRI0 = 0;
  8615   006FAA  9110               	bcf	16,0,b	;volatile
  8616                           
  8617                           ; BSR set to: 15
  8618                           ;../../VLCBlib_PIC/can18_ecan.c: 334:     TXB1CONbits.TXPRI1 = 1;
  8619   006FAC  8310               	bsf	16,1,b	;volatile
  8620                           
  8621                           ;../../VLCBlib_PIC/can18_ecan.c: 335:     TXB1DLC = 0x40;
  8622   006FAE  0E40               	movlw	64
  8623   006FB0  6F15               	movwf	21,b	;volatile
  8624                           
  8625                           ; BSR set to: 15
  8626                           ;../../VLCBlib_PIC/can18_ecan.c: 336:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8627   006FB2  0E8B               	movlw	low (_canPri+4)
  8628   006FB4  6EF6               	movwf	tblptrl,c
  8629   006FB6  0EEE               	movlw	high (_canPri+4)
  8630   006FB8  6EF7               	movwf	tblptrh,c
  8631   006FBA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8632   006FBA  6AF8               	clrf	tblptru,c
  8633   006FBC                     	endif
  8634   006FBC                     	if	0	;tblptru may be non-zero
  8635   006FBC                     	endif
  8636   006FBC  0008               	tblrd		*
  8637   006FBE  CFF5 F097          	movff	tablat,??_canPowerUp
  8638   006FC2  0100               	movlb	0	; () banked
  8639   006FC4  39C3               	swapf	_canId& (0+255),w,b
  8640   006FC6  46E8               	rlncf	wreg,f,c
  8641   006FC8  0B1F               	andlw	31
  8642   006FCA  0B0F               	andlw	15
  8643   006FCC  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8644   006FCE  010F               	movlb	15	; () banked
  8645   006FD0  6F11               	movwf	17,b	;volatile
  8646                           
  8647                           ; BSR set to: 15
  8648                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1SIDL = TXB0SIDL;
  8649   006FD2  CF22 FF12          	movff	3874,3858	;volatile
  8650                           
  8651                           ; BSR set to: 15
  8652                           ;../../VLCBlib_PIC/can18_ecan.c: 341:     TXB2CON = 0;
  8653   006FD6  0E00               	movlw	0
  8654   006FD8  6F00               	movwf	0,b	;volatile
  8655                           
  8656                           ; BSR set to: 15
  8657                           ;../../VLCBlib_PIC/can18_ecan.c: 342:     TXB2CONbits.TXPRI0 = 1;
  8658   006FDA  8100               	bsf	0,0,b	;volatile
  8659                           
  8660                           ; BSR set to: 15
  8661                           ;../../VLCBlib_PIC/can18_ecan.c: 343:     TXB2CONbits.TXPRI1 = 1;
  8662   006FDC  8300               	bsf	0,1,b	;volatile
  8663                           
  8664                           ; BSR set to: 15
  8665                           ;../../VLCBlib_PIC/can18_ecan.c: 344:     TXB2DLC = 0;
  8666   006FDE  0E00               	movlw	0
  8667   006FE0  6F05               	movwf	5,b	;volatile
  8668                           
  8669                           ; BSR set to: 15
  8670                           ;../../VLCBlib_PIC/can18_ecan.c: 345:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8671   006FE2  0E8B               	movlw	low (_canPri+4)
  8672   006FE4  6EF6               	movwf	tblptrl,c
  8673   006FE6  0EEE               	movlw	high (_canPri+4)
  8674   006FE8  6EF7               	movwf	tblptrh,c
  8675   006FEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8676   006FEA  6AF8               	clrf	tblptru,c
  8677   006FEC                     	endif
  8678   006FEC                     	if	0	;tblptru may be non-zero
  8679   006FEC                     	endif
  8680   006FEC  0008               	tblrd		*
  8681   006FEE  CFF5 F097          	movff	tablat,??_canPowerUp
  8682   006FF2  0100               	movlb	0	; () banked
  8683   006FF4  39C3               	swapf	_canId& (0+255),w,b
  8684   006FF6  46E8               	rlncf	wreg,f,c
  8685   006FF8  0B1F               	andlw	31
  8686   006FFA  0B0F               	andlw	15
  8687   006FFC  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8688   006FFE  010F               	movlb	15	; () banked
  8689   007000  6F01               	movwf	1,b	;volatile
  8690                           
  8691                           ; BSR set to: 15
  8692                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2SIDL = TXB0SIDL;
  8693   007002  CF22 FF02          	movff	3874,3842	;volatile
  8694                           
  8695                           ;../../VLCBlib_PIC/can18_ecan.c: 350:     enumerationState = NO_ENUMERATION;
  8696   007006  0E00               	movlw	0
  8697   007008  0100               	movlb	0	; () banked
  8698   00700A  6FC1               	movwf	_enumerationState& (0+255),b
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;../../VLCBlib_PIC/can18_ecan.c: 351:     enumerationStartTime.val = tickGet();
  8702   00700C  ECD6  F059         	call	_tickGet	;wreg free
  8703   007010  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
  8704   007014  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
  8705   007018  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
  8706   00701C  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
  8707                           
  8708                           ;../../VLCBlib_PIC/can18_ecan.c: 354:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8709   007020  C02B  F02F         	movff	_enumerationStartTime,_canTransmitTimeout
  8710   007024  C02C  F030         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8711   007028  C02D  F031         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8712   00702C  C02E  F032         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8713                           
  8714                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     PIE5bits.FIFOWMIE = 1;
  8715   007030  8076               	bsf	118,0,c	;volatile
  8716                           
  8717                           ;../../VLCBlib_PIC/can18_ecan.c: 357:     PIE5bits.TXBnIE = 1;
  8718   007032  8876               	bsf	118,4,c	;volatile
  8719                           
  8720                           ;../../VLCBlib_PIC/can18_ecan.c: 358:     PIE5bits.ERRIE = 1;
  8721   007034  8A76               	bsf	118,5,c	;volatile
  8722   007036  0012               	return		;funcret
  8723   007038                     __end_of_canPowerUp:
  8724                           	callstack 0
  8725                           
  8726 ;; *************** function _nvPowerUp *****************
  8727 ;; Defined at:
  8728 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;		None
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;  i               1   60[BANK0 ] unsigned char 
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      void 
  8735 ;; Registers used:
  8736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8743 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8745 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8746 ;;Total ram usage:        1 bytes
  8747 ;; Hardware stack levels used: 1
  8748 ;; Hardware stack levels required when called: 15
  8749 ;; This function calls:
  8750 ;;		_loadNvCache
  8751 ;; This function is called by:
  8752 ;;		_powerUp
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           	psect	text10
  8757   00BFCC                     __ptext10:
  8758                           	callstack 0
  8759   00BFCC                     _nvPowerUp:
  8760                           	callstack 14
  8761                           
  8762                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=0; 
      +                          i<2; i++) {
  8763                           
  8764                           ;incstack = 0
  8765   00BFCC  0E00               	movlw	0
  8766   00BFCE  0100               	movlb	0	; () banked
  8767   00BFD0  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8768   00BFD2                     l23509:
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
  8772   00BFD2  519C               	movf	nvPowerUp@i& (0+255),w,b
  8773   00BFD4  0D02               	mullw	2
  8774   00BFD6  0EAC               	movlw	low _nvDiagnostics
  8775   00BFD8  24F3               	addwf	243,w,c
  8776   00BFDA  6ED9               	movwf	fsr2l,c
  8777   00BFDC  0E01               	movlw	high _nvDiagnostics
  8778   00BFDE  20F4               	addwfc	prodh,w,c
  8779   00BFE0  6EDA               	movwf	fsr2h,c
  8780   00BFE2  6ADE               	clrf	postinc2,c
  8781   00BFE4  6ADD               	clrf	postdec2,c
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;../../VLCBlib_PIC/nv.c: 141:     }
  8785   00BFE6  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8786                           
  8787                           ; BSR set to: 0
  8788   00BFE8  0E01               	movlw	1
  8789   00BFEA  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8790   00BFEC  D7F2               	goto	l23509
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;../../VLCBlib_PIC/nv.c: 144:     loadNvCache();
  8794   00BFEE  EC0E  F05C         	call	_loadNvCache	;wreg free
  8795   00BFF2  0012               	return		;funcret
  8796   00BFF4                     __end_of_nvPowerUp:
  8797                           	callstack 0
  8798                           
  8799 ;; *************** function _mnsPowerUp *****************
  8800 ;; Defined at:
  8801 ;;		line 292 in file "../../VLCBlib_PIC/mns.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  temp            2   56[BANK0 ] int 
  8806 ;;  i               1   55[BANK0 ] unsigned char 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  1    wreg      void 
  8809 ;; Registers used:
  8810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8817 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8819 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8820 ;;Total ram usage:        3 bytes
  8821 ;; Hardware stack levels used: 1
  8822 ;; Hardware stack levels required when called: 14
  8823 ;; This function calls:
  8824 ;;		_readNVM
  8825 ;;		_setLEDsByMode
  8826 ;;		_tickGet
  8827 ;; This function is called by:
  8828 ;;		_powerUp
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           	psect	text11
  8833   007DA4                     __ptext11:
  8834                           	callstack 0
  8835   007DA4                     _mnsPowerUp:
  8836                           	callstack 15
  8837                           
  8838                           ;../../VLCBlib_PIC/mns.c: 293:     int temp;;../../VLCBlib_PIC/mns.c: 294:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 296:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8839                           
  8840                           ;incstack = 0
  8841   007DA4  0EFC               	movlw	252
  8842   007DA6  0100               	movlb	0	; () banked
  8843   007DA8  6F91               	movwf	readNVM@index& (0+255),b
  8844   007DAA  0E03               	movlw	3
  8845   007DAC  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8846   007DAE  0E00               	movlw	0
  8847   007DB0  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8848   007DB2  0E00               	movlw	0
  8849   007DB4  ECC2  F058         	call	_readNVM
  8850   007DB8  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8851   007DBC  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8852                           
  8853                           ;../../VLCBlib_PIC/mns.c: 297:     if (temp < 0) {
  8854   007DC0  0100               	movlb	0	; () banked
  8855   007DC2  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8856   007DC4  D005               	goto	l1402
  8857   007DC6                     u24700:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;../../VLCBlib_PIC/mns.c: 298:         nn.bytes.hi = 0;
  8861   007DC6  0E00               	movlw	0
  8862   007DC8  6FC0               	movwf	(_nn+1)& (0+255),b
  8863                           
  8864                           ;../../VLCBlib_PIC/mns.c: 299:         nn.bytes.lo = 0;
  8865   007DCA  0E00               	movlw	0
  8866   007DCC  6FBF               	movwf	_nn& (0+255),b
  8867                           
  8868                           ;../../VLCBlib_PIC/mns.c: 300:     } else {
  8869   007DCE  D014               	goto	l23027
  8870   007DD0                     l1402:
  8871                           
  8872                           ; BSR set to: 0
  8873                           ;../../VLCBlib_PIC/mns.c: 301:         nn.bytes.hi = (uint8_t)temp;
  8874   007DD0  C098  F0C0         	movff	mnsPowerUp@temp,_nn+1
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;../../VLCBlib_PIC/mns.c: 302:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8878   007DD4  0EFD               	movlw	253
  8879   007DD6  6F91               	movwf	readNVM@index& (0+255),b
  8880   007DD8  0E03               	movlw	3
  8881   007DDA  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8882   007DDC  0E00               	movlw	0
  8883   007DDE  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8884   007DE0  0E00               	movlw	0
  8885   007DE2  ECC2  F058         	call	_readNVM
  8886   007DE6  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8887   007DEA  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8888                           
  8889                           ;../../VLCBlib_PIC/mns.c: 303:         if (temp < 0) {
  8890   007DEE  0100               	movlb	0	; () banked
  8891   007DF0  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8892   007DF2  D7E9               	goto	u24700
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;../../VLCBlib_PIC/mns.c: 307:             nn.bytes.lo = (uint8_t)temp;
  8896   007DF4  C098  F0BF         	movff	mnsPowerUp@temp,_nn
  8897   007DF8                     l23027:
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;../../VLCBlib_PIC/mns.c: 310:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  8901   007DF8  0EFB               	movlw	251
  8902   007DFA  6F91               	movwf	readNVM@index& (0+255),b
  8903   007DFC  0E03               	movlw	3
  8904   007DFE  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8905   007E00  0E00               	movlw	0
  8906   007E02  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8907   007E04  0E00               	movlw	0
  8908   007E06  ECC2  F058         	call	_readNVM
  8909   007E0A  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8910   007E0E  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8911                           
  8912                           ;../../VLCBlib_PIC/mns.c: 311:     if (temp < 0) {
  8913   007E12  0100               	movlb	0	; () banked
  8914   007E14  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8915   007E16  D002               	goto	l1406
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;../../VLCBlib_PIC/mns.c: 312:         mode_state = MODE_UNINITIALISED;
  8919   007E18  69C8               	setf	_mode_state& (0+255),b
  8920                           
  8921                           ;../../VLCBlib_PIC/mns.c: 313:     } else {
  8922   007E1A  D002               	goto	l23033
  8923   007E1C                     l1406:
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;../../VLCBlib_PIC/mns.c: 314:         mode_state = (uint8_t)temp;
  8927   007E1C  C098  F0C8         	movff	mnsPowerUp@temp,_mode_state
  8928   007E20                     l23033:
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;../../VLCBlib_PIC/mns.c: 316:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
  8932   007E20  0EF9               	movlw	249
  8933   007E22  6F91               	movwf	readNVM@index& (0+255),b
  8934   007E24  0E03               	movlw	3
  8935   007E26  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8936   007E28  0E00               	movlw	0
  8937   007E2A  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8938   007E2C  0E00               	movlw	0
  8939   007E2E  ECC2  F058         	call	_readNVM
  8940   007E32  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8941   007E36  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8942                           
  8943                           ;../../VLCBlib_PIC/mns.c: 317:     if (temp < 0) {
  8944   007E3A  0100               	movlb	0	; () banked
  8945   007E3C  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8946   007E3E  D004               	goto	l1408
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;../../VLCBlib_PIC/mns.c: 318:         mode_flags = 4;
  8950   007E40  0E04               	movlw	4
  8951   007E42  0101               	movlb	1	; () banked
  8952   007E44  6F76               	movwf	_mode_flags& (0+255),b
  8953                           
  8954                           ;../../VLCBlib_PIC/mns.c: 319:     } else {
  8955   007E46  D002               	goto	l23039
  8956   007E48                     l1408:
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;../../VLCBlib_PIC/mns.c: 320:         mode_flags = (uint8_t)temp;
  8960   007E48  C098  F176         	movff	mnsPowerUp@temp,_mode_flags
  8961   007E4C                     l23039:
  8962                           
  8963                           ;../../VLCBlib_PIC/mns.c: 323:     setLEDsByMode();
  8964   007E4C  EC91  F05F         	call	_setLEDsByMode	;wreg free
  8965                           
  8966                           ;../../VLCBlib_PIC/mns.c: 325:     pbTimer.val = tickGet();
  8967   007E50  ECD6  F059         	call	_tickGet	;wreg free
  8968   007E54  C08D  F033         	movff	?_tickGet,_pbTimer
  8969   007E58  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
  8970   007E5C  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
  8971   007E60  C090  F036         	movff	?_tickGet+3,_pbTimer+3
  8972                           
  8973                           ;../../VLCBlib_PIC/mns.c: 329:     for (i=0; i< 6; i++) {
  8974   007E64  0E00               	movlw	0
  8975   007E66  0100               	movlb	0	; () banked
  8976   007E68  6F97               	movwf	mnsPowerUp@i& (0+255),b
  8977   007E6A                     l23047:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;../../VLCBlib_PIC/mns.c: 330:         mnsDiagnostics[i].asInt = 0;
  8981   007E6A  5197               	movf	mnsPowerUp@i& (0+255),w,b
  8982   007E6C  0D02               	mullw	2
  8983   007E6E  0E97               	movlw	low _mnsDiagnostics
  8984   007E70  24F3               	addwf	243,w,c
  8985   007E72  6ED9               	movwf	fsr2l,c
  8986   007E74  0E01               	movlw	high _mnsDiagnostics
  8987   007E76  20F4               	addwfc	prodh,w,c
  8988   007E78  6EDA               	movwf	fsr2h,c
  8989   007E7A  6ADE               	clrf	postinc2,c
  8990   007E7C  6ADD               	clrf	postdec2,c
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;../../VLCBlib_PIC/mns.c: 331:     }
  8994   007E7E  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  8995                           
  8996                           ; BSR set to: 0
  8997   007E80  0E05               	movlw	5
  8998   007E82  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  8999   007E84  D7F2               	goto	l23047
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;../../VLCBlib_PIC/mns.c: 333:     heartbeatSequence = 0;
  9003   007E86  0E00               	movlw	0
  9004   007E88  6E45               	movwf	_heartbeatSequence^0,c
  9005                           
  9006                           ;../../VLCBlib_PIC/mns.c: 334:     heartbeatTimer.val = 0;
  9007   007E8A  0E00               	movlw	0
  9008   007E8C  0101               	movlb	1	; () banked
  9009   007E8E  6F60               	movwf	_heartbeatTimer& (0+255),b
  9010   007E90  0E00               	movlw	0
  9011   007E92  6F61               	movwf	(_heartbeatTimer+1)& (0+255),b
  9012   007E94  0E00               	movlw	0
  9013   007E96  6F62               	movwf	(_heartbeatTimer+2)& (0+255),b
  9014   007E98  0E00               	movlw	0
  9015   007E9A  6F63               	movwf	(_heartbeatTimer+3)& (0+255),b
  9016                           
  9017                           ;../../VLCBlib_PIC/mns.c: 335:     uptimeTimer.val = 0;
  9018   007E9C  0E00               	movlw	0
  9019   007E9E  6F5C               	movwf	_uptimeTimer& (0+255),b
  9020   007EA0  0E00               	movlw	0
  9021   007EA2  6F5D               	movwf	(_uptimeTimer+1)& (0+255),b
  9022   007EA4  0E00               	movlw	0
  9023   007EA6  6F5E               	movwf	(_uptimeTimer+2)& (0+255),b
  9024   007EA8  0E00               	movlw	0
  9025   007EAA  6F5F               	movwf	(_uptimeTimer+3)& (0+255),b
  9026                           
  9027                           ; BSR set to: 1
  9028   007EAC  0012               	return		;funcret
  9029   007EAE                     __end_of_mnsPowerUp:
  9030                           	callstack 0
  9031                           
  9032 ;; *************** function _ackPowerUp *****************
  9033 ;; Defined at:
  9034 ;;		line 95 in file "../../VLCBlib_PIC/event_acknowledge.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;		None
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  i               1   45[BANK0 ] unsigned char 
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  1    wreg      void 
  9041 ;; Registers used:
  9042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9051 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9052 ;;Total ram usage:        1 bytes
  9053 ;; Hardware stack levels used: 1
  9054 ;; Hardware stack levels required when called: 12
  9055 ;; This function calls:
  9056 ;;		Nothing
  9057 ;; This function is called by:
  9058 ;;		_powerUp
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           	psect	text12
  9063   00C090                     __ptext12:
  9064                           	callstack 0
  9065   00C090                     _ackPowerUp:
  9066                           	callstack 17
  9067                           
  9068                           ;../../VLCBlib_PIC/event_acknowledge.c: 96:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 99:     for (i=0; i< 1; i++) {
  9069                           
  9070                           ; BSR set to: 1
  9071                           ;incstack = 0
  9072   00C090  0E00               	movlw	0
  9073   00C092  0100               	movlb	0	; () banked
  9074   00C094  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9075   00C096                     l22925:
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;../../VLCBlib_PIC/event_acknowledge.c: 100:         ackDiagnostics[i].asInt = 0;
  9079   00C096  518D               	movf	ackPowerUp@i& (0+255),w,b
  9080   00C098  0D02               	mullw	2
  9081   00C09A  0EB4               	movlw	low _ackDiagnostics
  9082   00C09C  24F3               	addwf	243,w,c
  9083   00C09E  6ED9               	movwf	fsr2l,c
  9084   00C0A0  0E01               	movlw	high _ackDiagnostics
  9085   00C0A2  20F4               	addwfc	prodh,w,c
  9086   00C0A4  6EDA               	movwf	fsr2h,c
  9087   00C0A6  6ADE               	clrf	postinc2,c
  9088   00C0A8  6ADD               	clrf	postdec2,c
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;../../VLCBlib_PIC/event_acknowledge.c: 101:     }
  9092   00C0AA  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9093                           
  9094                           ; BSR set to: 0
  9095   00C0AC  518D               	movf	ackPowerUp@i& (0+255),w,b
  9096   00C0AE  A4D8               	btfss	status,2,c
  9097   00C0B0  0012               	return	
  9098   00C0B2  D7F1               	goto	l22925
  9099   00C0B4                     __end_of_ackPowerUp:
  9100                           	callstack 0
  9101                           
  9102 ;; *************** function _consumer2QPowerUp *****************
  9103 ;; Defined at:
  9104 ;;		line 109 in file "../event_consumerDualActionQueue.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;		None
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9122 ;;Total ram usage:        0 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; Hardware stack levels required when called: 12
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_powerUp
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text13
  9133   00C2AA                     __ptext13:
  9134                           	callstack 0
  9135   00C2AA                     _consumer2QPowerUp:
  9136                           	callstack 17
  9137                           
  9138                           ;../event_consumerDualActionQueue.c: 110:     normalReadIndex = 0;
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;incstack = 0
  9142   00C2AA  0E00               	movlw	0
  9143   00C2AC  0100               	movlb	0	; () banked
  9144   00C2AE  6FCF               	movwf	_normalReadIndex& (0+255),b
  9145                           
  9146                           ;../event_consumerDualActionQueue.c: 111:     normalWriteIndex = 0;
  9147   00C2B0  0E00               	movlw	0
  9148   00C2B2  6FCE               	movwf	_normalWriteIndex& (0+255),b
  9149                           
  9150                           ;../event_consumerDualActionQueue.c: 112:     expeditedReadIndex = 0;
  9151   00C2B4  0E00               	movlw	0
  9152   00C2B6  6FCD               	movwf	_expeditedReadIndex& (0+255),b
  9153                           
  9154                           ;../event_consumerDualActionQueue.c: 113:     expeditedWriteIndex = 0;
  9155   00C2B8  0E00               	movlw	0
  9156   00C2BA  6FCC               	movwf	_expeditedWriteIndex& (0+255),b
  9157                           
  9158                           ;../event_consumerDualActionQueue.c: 115:     expedited = FALSE;
  9159   00C2BC  0E00               	movlw	0
  9160   00C2BE  6E47               	movwf	_expedited^0,c
  9161                           
  9162                           ; BSR set to: 0
  9163   00C2C0  0012               	return		;funcret
  9164   00C2C2                     __end_of_consumer2QPowerUp:
  9165                           	callstack 0
  9166                           
  9167 ;; *************** function _teachPowerUp *****************
  9168 ;; Defined at:
  9169 ;;		line 359 in file "../../VLCBlib_PIC/event_teach_large.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;		None
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;  i               1    9[BANK1 ] unsigned char 
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      void 
  9176 ;; Registers used:
  9177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9184 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9186 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9187 ;;Total ram usage:        1 bytes
  9188 ;; Hardware stack levels used: 1
  9189 ;; Hardware stack levels required when called: 17
  9190 ;; This function calls:
  9191 ;;		_rebuildHashtable
  9192 ;; This function is called by:
  9193 ;;		_powerUp
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text14
  9198   00BF4E                     __ptext14:
  9199                           	callstack 0
  9200   00BF4E                     _teachPowerUp:
  9201                           	callstack 12
  9202                           
  9203                           ;../../VLCBlib_PIC/event_teach_large.c: 360:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 362:     rebuildHashtable();
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;incstack = 0
  9207   00BF4E  EC40  F03E         	call	_rebuildHashtable	;wreg free
  9208                           
  9209                           ;../../VLCBlib_PIC/event_teach_large.c: 366:     for (i=0; i< 1; i++) {
  9210   00BF52  0E00               	movlw	0
  9211   00BF54  0101               	movlb	1	; () banked
  9212   00BF56  6FC1               	movwf	teachPowerUp@i& (0+255),b
  9213   00BF58                     l23967:
  9214                           
  9215                           ; BSR set to: 1
  9216                           ;../../VLCBlib_PIC/event_teach_large.c: 367:         teachDiagnostics[i].asInt = 0;
  9217   00BF58  51C1               	movf	teachPowerUp@i& (0+255),w,b
  9218   00BF5A  0D02               	mullw	2
  9219   00BF5C  0EB2               	movlw	low _teachDiagnostics
  9220   00BF5E  24F3               	addwf	243,w,c
  9221   00BF60  6ED9               	movwf	fsr2l,c
  9222   00BF62  0E01               	movlw	high _teachDiagnostics
  9223   00BF64  20F4               	addwfc	prodh,w,c
  9224   00BF66  6EDA               	movwf	fsr2h,c
  9225   00BF68  6ADE               	clrf	postinc2,c
  9226   00BF6A  6ADD               	clrf	postdec2,c
  9227                           
  9228                           ; BSR set to: 1
  9229                           ;../../VLCBlib_PIC/event_teach_large.c: 368:     }
  9230   00BF6C  2BC1               	incf	teachPowerUp@i& (0+255),f,b
  9231                           
  9232                           ; BSR set to: 1
  9233   00BF6E  51C1               	movf	teachPowerUp@i& (0+255),w,b
  9234   00BF70  B4D8               	btfsc	status,2,c
  9235   00BF72  D7F2               	goto	l23967
  9236                           
  9237                           ; BSR set to: 1
  9238                           ;../../VLCBlib_PIC/event_teach_large.c: 370:     mode_flags &= ~1;
  9239   00BF74  9176               	bcf	_mode_flags& (0+255),0,b
  9240                           
  9241                           ; BSR set to: 1
  9242   00BF76  0012               	return		;funcret
  9243   00BF78                     __end_of_teachPowerUp:
  9244                           	callstack 0
  9245                           
  9246 ;; *************** function _leds_powerUp *****************
  9247 ;; Defined at:
  9248 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;		None
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0, cstack
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9266 ;;Total ram usage:        0 bytes
  9267 ;; Hardware stack levels used: 1
  9268 ;; Hardware stack levels required when called: 13
  9269 ;; This function calls:
  9270 ;;		_tickGet
  9271 ;; This function is called by:
  9272 ;;		_powerUp
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text15
  9277   00BD1A                     __ptext15:
  9278                           	callstack 0
  9279   00BD1A                     _leds_powerUp:
  9280                           	callstack 16
  9281                           
  9282                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9283                           
  9284                           ; BSR set to: 1
  9285                           ;incstack = 0
  9286   00BD1A  0E00               	movlw	0
  9287   00BD1C  010F               	movlb	15	; () banked
  9288   00BD1E  6F5C               	movwf	92,b	;volatile
  9289   00BD20  CF5C FF5D          	movff	3932,3933	;volatile
  9290                           
  9291                           ; BSR set to: 15
  9292   00BD24  9E93               	bcf	147,7,c	;volatile
  9293   00BD26  9C93               	bcf	147,6,c	;volatile
  9294                           
  9295                           ; BSR set to: 15
  9296   00BD28  8492               	bsf	146,2,c	;volatile
  9297                           
  9298                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
  9299   00BD2A  0E00               	movlw	0
  9300   00BD2C  0100               	movlb	0	; () banked
  9301   00BD2E  6FBB               	movwf	_flashCounter& (0+255),b
  9302                           
  9303                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
  9304   00BD30  0E00               	movlw	0
  9305   00BD32  6FBC               	movwf	(_flashCounter+1)& (0+255),b
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
  9309   00BD34  ECD6  F059         	call	_tickGet	;wreg free
  9310   00BD38  C08D  F158         	movff	?_tickGet,_ledTimer
  9311   00BD3C  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
  9312   00BD40  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
  9313   00BD44  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
  9314   00BD48  0012               	return		;funcret
  9315   00BD4A                     __end_of_leds_powerUp:
  9316                           	callstack 0
  9317                           
  9318 ;; *************** function _initTimedResponse *****************
  9319 ;; Defined at:
  9320 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;		None
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;		None
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		None
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9338 ;;Total ram usage:        0 bytes
  9339 ;; Hardware stack levels used: 1
  9340 ;; Hardware stack levels required when called: 12
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		_powerUp
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           	psect	text16
  9349   00C3B6                     __ptext16:
  9350                           	callstack 0
  9351   00C3B6                     _initTimedResponse:
  9352                           	callstack 17
  9353                           
  9354                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9355                           
  9356                           ;incstack = 0
  9357   00C3B6  0100               	movlb	0	; () banked
  9358   00C3B8  69C5               	setf	_timedResponseType& (0+255),b
  9359                           
  9360                           ; BSR set to: 0
  9361   00C3BA  0012               	return		;funcret
  9362   00C3BC                     __end_of_initTimedResponse:
  9363                           	callstack 0
  9364                           
  9365 ;; *************** function _initTicker *****************
  9366 ;; Defined at:
  9367 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;  priority        1    wreg     unsigned char 
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;  priority        1   45[BANK0 ] unsigned char 
  9372 ;;  i               1   47[BANK0 ] unsigned char 
  9373 ;;  divider         1   46[BANK0 ] unsigned char 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      void 
  9376 ;; Registers used:
  9377 ;;		wreg, status,2, status,0
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9384 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;Total ram usage:        3 bytes
  9388 ;; Hardware stack levels used: 1
  9389 ;; Hardware stack levels required when called: 12
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_powerUp
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text17
  9398   00B8F8                     __ptext17:
  9399                           	callstack 0
  9400   00B8F8                     _initTicker:
  9401                           	callstack 17
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;incstack = 0
  9405                           ;initTicker@priority stored from wreg
  9406   00B8F8  0100               	movlb	0	; () banked
  9407   00B8FA  6F8D               	movwf	initTicker@priority& (0+255),b
  9408                           
  9409                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9410   00B8FC  0E00               	movlw	0
  9411   00B8FE  0100               	movlb	0	; () banked
  9412   00B900  6F8E               	movwf	initTicker@divider& (0+255),b
  9413                           
  9414                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9415   00B902  0E40               	movlw	64
  9416   00B904  6F8F               	movwf	initTicker@i& (0+255),b
  9417   00B906                     l23667:
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9421   00B906  2B8E               	incf	initTicker@divider& (0+255),f,b
  9422                           
  9423                           ; BSR set to: 0
  9424   00B908  90D8               	bcf	status,0,c
  9425   00B90A  338F               	rrcf	initTicker@i& (0+255),f,b
  9426                           
  9427                           ; BSR set to: 0
  9428   00B90C  518F               	movf	initTicker@i& (0+255),w,b
  9429   00B90E  A4D8               	btfss	status,2,c
  9430   00B910  D7FA               	goto	l23667
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9434   00B912  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9435                           
  9436                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9437   00B916  9CD5               	bcf	213,6,c	;volatile
  9438                           
  9439                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9440   00B918  9AD5               	bcf	213,5,c	;volatile
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9444   00B91A  0E00               	movlw	0
  9445   00B91C  6ED7               	movwf	215,c	;volatile
  9446                           
  9447                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9448   00B91E  0E00               	movlw	0
  9449   00B920  6ED6               	movwf	214,c	;volatile
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9453   00B922  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9454   00B924  D002               	bra	u25405
  9455   00B926  94F1               	bcf	241,2,c	;volatile
  9456   00B928  D001               	bra	u25406
  9457   00B92A                     u25405:
  9458   00B92A  84F1               	bsf	241,2,c	;volatile
  9459   00B92C                     u25406:
  9460                           
  9461                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9462   00B92C  94F2               	bcf	242,2,c	;volatile
  9463                           
  9464                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9465   00B92E  8AF2               	bsf	242,5,c	;volatile
  9466                           
  9467                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9468   00B930  8ED5               	bsf	213,7,c	;volatile
  9469                           
  9470                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9471   00B932  0E00               	movlw	0
  9472   00B934  0100               	movlb	0	; () banked
  9473   00B936  6FCA               	movwf	_timerExtension1& (0+255),b	;volatile
  9474                           
  9475                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9476   00B938  0E00               	movlw	0
  9477   00B93A  6FC9               	movwf	_timerExtension2& (0+255),b	;volatile
  9478                           
  9479                           ; BSR set to: 0
  9480   00B93C  0012               	return		;funcret
  9481   00B93E                     __end_of_initTicker:
  9482                           	callstack 0
  9483                           
  9484 ;; *************** function _poll *****************
  9485 ;; Defined at:
  9486 ;;		line 992 in file "../../VLCBlib_PIC/vlcb.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;		None
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  m               9   36[BANK3 ] struct Message
  9491 ;;  i               1   35[BANK3 ] unsigned char 
  9492 ;;  handled         1   34[BANK3 ] enum E12793
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  1    wreg      void 
  9495 ;; Registers used:
  9496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9503 ;;      Locals:         0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0
  9504 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  9505 ;;      Totals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  9506 ;;Total ram usage:       15 bytes
  9507 ;; Hardware stack levels used: 1
  9508 ;; Hardware stack levels required when called: 28
  9509 ;; This function calls:
  9510 ;;		NULL
  9511 ;;		_APP_postProcessMessage
  9512 ;;		_APP_preProcessMessage
  9513 ;;		___lmul
  9514 ;;		_ackEventProcessMessage
  9515 ;;		_bootProcessMessage
  9516 ;;		_canProcessMessage
  9517 ;;		_canReceiveMessage
  9518 ;;		_consumer2QProcessMessage
  9519 ;;		_flushFlashBlock
  9520 ;;		_leds_poll
  9521 ;;		_mnsPoll
  9522 ;;		_mnsProcessMessage
  9523 ;;		_nvProcessMessage
  9524 ;;		_pollTimedResponse
  9525 ;;		_producerProcessMessage
  9526 ;;		_showStatus
  9527 ;;		_teachProcessMessage
  9528 ;;		_tickGet
  9529 ;; This function is called by:
  9530 ;;		_main
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text18
  9535   0038A6                     __ptext18:
  9536                           	callstack 0
  9537   0038A6                     _poll:
  9538                           	callstack 2
  9539                           
  9540                           ;../../VLCBlib_PIC/vlcb.c: 993:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 994:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 995:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 998
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;incstack = 0
  9544   0038A6  ECD6  F059         	call	_tickGet	;wreg free
  9545   0038AA  0101               	movlb	1	; () banked
  9546   0038AC  5154               	movf	_timedResponseTime& (0+255),w,b
  9547   0038AE  0100               	movlb	0	; () banked
  9548   0038B0  5D8D               	subwf	?_tickGet& (0+255),w,b
  9549   0038B2  0103               	movlb	3	; () banked
  9550   0038B4  6FE5               	movwf	??_poll& (0+255),b
  9551   0038B6  0101               	movlb	1	; () banked
  9552   0038B8  5155               	movf	(_timedResponseTime+1)& (0+255),w,b
  9553   0038BA  0100               	movlb	0	; () banked
  9554   0038BC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9555   0038BE  0103               	movlb	3	; () banked
  9556   0038C0  6FE6               	movwf	(??_poll+1)& (0+255),b
  9557   0038C2  0101               	movlb	1	; () banked
  9558   0038C4  5156               	movf	(_timedResponseTime+2)& (0+255),w,b
  9559   0038C6  0100               	movlb	0	; () banked
  9560   0038C8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9561   0038CA  0103               	movlb	3	; () banked
  9562   0038CC  6FE7               	movwf	(??_poll+2)& (0+255),b
  9563   0038CE  0101               	movlb	1	; () banked
  9564   0038D0  5157               	movf	(_timedResponseTime+3)& (0+255),w,b
  9565   0038D2  0100               	movlb	0	; () banked
  9566   0038D4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9567   0038D6  0103               	movlb	3	; () banked
  9568   0038D8  6FE8               	movwf	(??_poll+3)& (0+255),b
  9569   0038DA  0101               	movlb	1	; () banked
  9570   0038DC  5174               	movf	_timedResponseDelay& (0+255),w,b
  9571   0038DE  0100               	movlb	0	; () banked
  9572   0038E0  6F91               	movwf	___lmul@multiplier& (0+255),b
  9573   0038E2  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9574   0038E4  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9575   0038E6  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9576   0038E8  0E3E               	movlw	62
  9577   0038EA  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9578   0038EC  0E00               	movlw	0
  9579   0038EE  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9580   0038F0  0E00               	movlw	0
  9581   0038F2  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9582   0038F4  0E00               	movlw	0
  9583   0038F6  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9584   0038F8  EC02  F05A         	call	___lmul	;wreg free
  9585   0038FC  0103               	movlb	3	; () banked
  9586   0038FE  51E5               	movf	??_poll& (0+255),w,b
  9587   003900  0100               	movlb	0	; () banked
  9588   003902  5D91               	subwf	?___lmul& (0+255),w,b
  9589   003904  0103               	movlb	3	; () banked
  9590   003906  51E6               	movf	(??_poll+1)& (0+255),w,b
  9591   003908  0100               	movlb	0	; () banked
  9592   00390A  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9593   00390C  0103               	movlb	3	; () banked
  9594   00390E  51E7               	movf	(??_poll+2)& (0+255),w,b
  9595   003910  0100               	movlb	0	; () banked
  9596   003912  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9597   003914  0103               	movlb	3	; () banked
  9598   003916  51E8               	movf	(??_poll+3)& (0+255),w,b
  9599   003918  0100               	movlb	0	; () banked
  9600   00391A  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9601   00391C  B0D8               	btfsc	status,0,c
  9602   00391E  D00C               	goto	l24461
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;../../VLCBlib_PIC/vlcb.c: 999:         pollTimedResponse();
  9606   003920  EC10  F054         	call	_pollTimedResponse	;wreg free
  9607                           
  9608                           ;../../VLCBlib_PIC/vlcb.c: 1000:         timedResponseTime.val = tickGet();
  9609   003924  ECD6  F059         	call	_tickGet	;wreg free
  9610   003928  C08D  F154         	movff	?_tickGet,_timedResponseTime
  9611   00392C  C08E  F155         	movff	?_tickGet+1,_timedResponseTime+1
  9612   003930  C08F  F156         	movff	?_tickGet+2,_timedResponseTime+2
  9613   003934  C090  F157         	movff	?_tickGet+3,_timedResponseTime+3
  9614   003938                     l24461:
  9615                           
  9616                           ;../../VLCBlib_PIC/vlcb.c: 1002:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9617   003938  ECD6  F059         	call	_tickGet	;wreg free
  9618   00393C  0101               	movlb	1	; () banked
  9619   00393E  5150               	movf	_flashFlushTime& (0+255),w,b
  9620   003940  0100               	movlb	0	; () banked
  9621   003942  5D8D               	subwf	?_tickGet& (0+255),w,b
  9622   003944  0103               	movlb	3	; () banked
  9623   003946  6FE5               	movwf	??_poll& (0+255),b
  9624   003948  0101               	movlb	1	; () banked
  9625   00394A  5151               	movf	(_flashFlushTime+1)& (0+255),w,b
  9626   00394C  0100               	movlb	0	; () banked
  9627   00394E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9628   003950  0103               	movlb	3	; () banked
  9629   003952  6FE6               	movwf	(??_poll+1)& (0+255),b
  9630   003954  0101               	movlb	1	; () banked
  9631   003956  5152               	movf	(_flashFlushTime+2)& (0+255),w,b
  9632   003958  0100               	movlb	0	; () banked
  9633   00395A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9634   00395C  0103               	movlb	3	; () banked
  9635   00395E  6FE7               	movwf	(??_poll+2)& (0+255),b
  9636   003960  0101               	movlb	1	; () banked
  9637   003962  5153               	movf	(_flashFlushTime+3)& (0+255),w,b
  9638   003964  0100               	movlb	0	; () banked
  9639   003966  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9640   003968  0103               	movlb	3	; () banked
  9641   00396A  6FE8               	movwf	(??_poll+3)& (0+255),b
  9642   00396C  51E8               	movf	(??_poll+3)& (0+255),w,b
  9643   00396E  11E7               	iorwf	(??_poll+2)& (0+255),w,b
  9644   003970  E106               	bnz	u26360
  9645   003972  0E25               	movlw	37
  9646   003974  5DE5               	subwf	??_poll& (0+255),w,b
  9647   003976  0EF4               	movlw	244
  9648   003978  59E6               	subwfb	(??_poll+1)& (0+255),w,b
  9649   00397A  A0D8               	btfss	status,0,c
  9650   00397C  D00C               	goto	l24467
  9651   00397E                     u26360:
  9652                           
  9653                           ; BSR set to: 3
  9654                           ;../../VLCBlib_PIC/vlcb.c: 1003:         flushFlashBlock();
  9655   00397E  EC8D  F052         	call	_flushFlashBlock	;wreg free
  9656                           
  9657                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flashFlushTime.val = tickGet();
  9658   003982  ECD6  F059         	call	_tickGet	;wreg free
  9659   003986  C08D  F150         	movff	?_tickGet,_flashFlushTime
  9660   00398A  C08E  F151         	movff	?_tickGet+1,_flashFlushTime+1
  9661   00398E  C08F  F152         	movff	?_tickGet+2,_flashFlushTime+2
  9662   003992  C090  F153         	movff	?_tickGet+3,_flashFlushTime+3
  9663   003996                     l24467:
  9664                           
  9665                           ;../../VLCBlib_PIC/vlcb.c: 1007:     for (i=0; i<9; i++) {
  9666   003996  0E00               	movlw	0
  9667   003998  0103               	movlb	3	; () banked
  9668   00399A  6FEA               	movwf	poll@i& (0+255),b
  9669   00399C                     l24473:
  9670                           
  9671                           ; BSR set to: 3
  9672                           ;../../VLCBlib_PIC/vlcb.c: 1008:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
  9673   00399C  51EA               	movf	poll@i& (0+255),w,b
  9674   00399E  0D02               	mullw	2
  9675   0039A0  0E75               	movlw	low _services
  9676   0039A2  24F3               	addwf	243,w,c
  9677   0039A4  6EF6               	movwf	tblptrl,c
  9678   0039A6  0EEE               	movlw	high _services
  9679   0039A8  20F4               	addwfc	244,w,c
  9680   0039AA  6EF7               	movwf	tblptrh,c
  9681   0039AC                     	if	1	;There are 3 active tblptr bytes
  9682   0039AC  6AF8               	clrf	tblptru,c
  9683   0039AE  0E00               	movlw	low (__mediumconst shr (0+16))
  9684   0039B0  22F8               	addwfc	tblptru,f,c
  9685   0039B2                     	endif
  9686   0039B2  0009               	tblrd		*+
  9687   0039B4  50F5               	movf	tablat,w,c
  9688   0039B6  0009               	tblrd		*+
  9689   0039B8  10F5               	iorwf	tablat,w,c
  9690   0039BA  B4D8               	btfsc	status,2,c
  9691   0039BC  D04B               	goto	u26399
  9692                           
  9693                           ; BSR set to: 3
  9694   0039BE  51EA               	movf	poll@i& (0+255),w,b
  9695   0039C0  0D02               	mullw	2
  9696   0039C2  0E75               	movlw	low _services
  9697   0039C4  24F3               	addwf	243,w,c
  9698   0039C6  6EF6               	movwf	tblptrl,c
  9699   0039C8  0EEE               	movlw	high _services
  9700   0039CA  20F4               	addwfc	244,w,c
  9701   0039CC  6EF7               	movwf	tblptrh,c
  9702   0039CE                     	if	1	;There are 3 active tblptr bytes
  9703   0039CE  6AF8               	clrf	tblptru,c
  9704   0039D0  0E00               	movlw	low (__mediumconst shr (0+16))
  9705   0039D2  22F8               	addwfc	tblptru,f,c
  9706   0039D4                     	endif
  9707   0039D4  0009               	tblrd		*+
  9708   0039D6  CFF5 F3E5          	movff	tablat,??_poll
  9709   0039DA  0009               	tblrd		*+
  9710   0039DC  CFF5 F3E6          	movff	tablat,??_poll+1
  9711   0039E0  0E08               	movlw	8
  9712   0039E2  27E5               	addwf	??_poll& (0+255),f,b
  9713   0039E4  0E00               	movlw	0
  9714   0039E6  23E6               	addwfc	(??_poll+1)& (0+255),f,b
  9715   0039E8  C3E5  FFF6         	movff	??_poll,tblptrl
  9716   0039EC  C3E6  FFF7         	movff	??_poll+1,tblptrh
  9717   0039F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9718   0039F0  6AF8               	clrf	tblptru,c
  9719   0039F2                     	endif
  9720   0039F2                     	if	0	;tblptru may be non-zero
  9721   0039F2                     	endif
  9722   0039F2  0009               	tblrd		*+
  9723   0039F4  50F5               	movf	tablat,w,c
  9724   0039F6  0009               	tblrd		*+
  9725   0039F8  10F5               	iorwf	tablat,w,c
  9726   0039FA  B4D8               	btfsc	status,2,c
  9727   0039FC  D02B               	goto	u26399
  9728                           
  9729                           ; BSR set to: 3
  9730                           ;../../VLCBlib_PIC/vlcb.c: 1009:             services[i]->poll();
  9731   0039FE  51EA               	movf	poll@i& (0+255),w,b
  9732   003A00  0D02               	mullw	2
  9733   003A02  0E75               	movlw	low _services
  9734   003A04  24F3               	addwf	243,w,c
  9735   003A06  6EF6               	movwf	tblptrl,c
  9736   003A08  0EEE               	movlw	high _services
  9737   003A0A  20F4               	addwfc	244,w,c
  9738   003A0C  6EF7               	movwf	tblptrh,c
  9739   003A0E                     	if	1	;There are 3 active tblptr bytes
  9740   003A0E  6AF8               	clrf	tblptru,c
  9741   003A10  0E00               	movlw	low (__mediumconst shr (0+16))
  9742   003A12  22F8               	addwfc	tblptru,f,c
  9743   003A14                     	endif
  9744   003A14  0009               	tblrd		*+
  9745   003A16  CFF5 F3E5          	movff	tablat,??_poll
  9746   003A1A  0009               	tblrd		*+
  9747   003A1C  CFF5 F3E6          	movff	tablat,??_poll+1
  9748   003A20  0E08               	movlw	8
  9749   003A22  27E5               	addwf	??_poll& (0+255),f,b
  9750   003A24  0E00               	movlw	0
  9751   003A26  23E6               	addwfc	(??_poll+1)& (0+255),f,b
  9752   003A28  C3E5  FFF6         	movff	??_poll,tblptrl
  9753   003A2C  C3E6  FFF7         	movff	??_poll+1,tblptrh
  9754   003A30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9755   003A30  6AF8               	clrf	tblptru,c
  9756   003A32                     	endif
  9757   003A32                     	if	0	;tblptru may be non-zero
  9758   003A32                     	endif
  9759   003A32  0009               	tblrd		*+
  9760   003A34  CFF5 F3E7          	movff	tablat,??_poll+2
  9761   003A38  0009               	tblrd		*+
  9762   003A3A  CFF5 F3E8          	movff	tablat,??_poll+3
  9763   003A3E  D801               	call	u26398
  9764   003A40  D009               	goto	u26399
  9765   003A42                     u26398:
  9766   003A42  0005               	push	
  9767   003A44  6EFA               	movwf	pclath,c
  9768   003A46  51E7               	movf	(??_poll+2)& (0+255),w,b
  9769   003A48  6EFD               	movwf	tosl,c
  9770   003A4A  51E8               	movf	(??_poll+3)& (0+255),w,b
  9771   003A4C  6EFE               	movwf	tosh,c
  9772   003A4E  6AFF               	clrf	tosu,c
  9773   003A50  50FA               	movf	pclath,w,c
  9774   003A52  0012               	return		;indir
  9775   003A54                     u26399:
  9776                           
  9777                           ;../../VLCBlib_PIC/vlcb.c: 1011:     }
  9778   003A54  0103               	movlb	3	; () banked
  9779   003A56  2BEA               	incf	poll@i& (0+255),f,b
  9780                           
  9781                           ; BSR set to: 3
  9782   003A58  0E08               	movlw	8
  9783   003A5A  65EA               	cpfsgt	poll@i& (0+255),b
  9784   003A5C  D79F               	goto	l24473
  9785                           
  9786                           ; BSR set to: 3
  9787                           ;../../VLCBlib_PIC/vlcb.c: 1013:     leds_poll();
  9788   003A5E  EC65  F02F         	call	_leds_poll	;wreg free
  9789                           
  9790                           ;../../VLCBlib_PIC/vlcb.c: 1016:     handled = NOT_PROCESSED;
  9791   003A62  0E00               	movlw	0
  9792   003A64  0103               	movlb	3	; () banked
  9793   003A66  6FE9               	movwf	poll@handled& (0+255),b
  9794                           
  9795                           ; BSR set to: 3
  9796                           ;../../VLCBlib_PIC/vlcb.c: 1017:     if (transport != ((void*)0)) {
  9797   003A68  0101               	movlb	1	; () banked
  9798   003A6A  5172               	movf	_transport& (0+255),w,b
  9799   003A6C  1173               	iorwf	(_transport+1)& (0+255),w,b
  9800   003A6E  B4D8               	btfsc	status,2,c
  9801   003A70  D0CA               	goto	l1980
  9802                           
  9803                           ; BSR set to: 1
  9804                           ;../../VLCBlib_PIC/vlcb.c: 1018:         if (transport->receiveMessage != ((void*)0)) {
  9805   003A72  0E02               	movlw	2
  9806   003A74  2572               	addwf	_transport& (0+255),w,b
  9807   003A76  0103               	movlb	3	; () banked
  9808   003A78  6FE5               	movwf	??_poll& (0+255),b
  9809   003A7A  0E00               	movlw	0
  9810   003A7C  0101               	movlb	1	; () banked
  9811   003A7E  2173               	addwfc	(_transport+1)& (0+255),w,b
  9812   003A80  0103               	movlb	3	; () banked
  9813   003A82  6FE6               	movwf	(??_poll+1)& (0+255),b
  9814   003A84  C3E5  FFF6         	movff	??_poll,tblptrl
  9815   003A88  C3E6  FFF7         	movff	??_poll+1,tblptrh
  9816   003A8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9817   003A8C  6AF8               	clrf	tblptru,c
  9818   003A8E                     	endif
  9819   003A8E                     	if	0	;tblptru may be non-zero
  9820   003A8E                     	endif
  9821   003A8E  0009               	tblrd		*+
  9822   003A90  50F5               	movf	tablat,w,c
  9823   003A92  0009               	tblrd		*+
  9824   003A94  10F5               	iorwf	tablat,w,c
  9825   003A96  B4D8               	btfsc	status,2,c
  9826   003A98  D0B6               	goto	l1980
  9827                           
  9828                           ; BSR set to: 3
  9829                           ;../../VLCBlib_PIC/vlcb.c: 1019:             if (transport->receiveMessage(&m)) {
  9830   003A9A  0EEB               	movlw	low poll@m
  9831   003A9C  0101               	movlb	1	; () banked
  9832   003A9E  6FC2               	movwf	canReceiveMessage@m& (0+255),b
  9833   003AA0  0E03               	movlw	high poll@m
  9834   003AA2  6FC3               	movwf	(canReceiveMessage@m+1)& (0+255),b
  9835   003AA4  0E02               	movlw	2
  9836   003AA6  2572               	addwf	_transport& (0+255),w,b
  9837   003AA8  0103               	movlb	3	; () banked
  9838   003AAA  6FE5               	movwf	??_poll& (0+255),b
  9839   003AAC  0E00               	movlw	0
  9840   003AAE  0101               	movlb	1	; () banked
  9841   003AB0  2173               	addwfc	(_transport+1)& (0+255),w,b
  9842   003AB2  0103               	movlb	3	; () banked
  9843   003AB4  6FE6               	movwf	(??_poll+1)& (0+255),b
  9844   003AB6  C3E5  FFF6         	movff	??_poll,tblptrl
  9845   003ABA  C3E6  FFF7         	movff	??_poll+1,tblptrh
  9846   003ABE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9847   003ABE  6AF8               	clrf	tblptru,c
  9848   003AC0                     	endif
  9849   003AC0                     	if	0	;tblptru may be non-zero
  9850   003AC0                     	endif
  9851   003AC0  0009               	tblrd		*+
  9852   003AC2  CFF5 F3E7          	movff	tablat,??_poll+2
  9853   003AC6  0009               	tblrd		*+
  9854   003AC8  CFF5 F3E8          	movff	tablat,??_poll+3
  9855   003ACC  D801               	call	u26438
  9856   003ACE  D009               	goto	u26439
  9857   003AD0                     u26438:
  9858   003AD0  0005               	push	
  9859   003AD2  6EFA               	movwf	pclath,c
  9860   003AD4  51E7               	movf	(??_poll+2)& (0+255),w,b
  9861   003AD6  6EFD               	movwf	tosl,c
  9862   003AD8  51E8               	movf	(??_poll+3)& (0+255),w,b
  9863   003ADA  6EFE               	movwf	tosh,c
  9864   003ADC  6AFF               	clrf	tosu,c
  9865   003ADE  50FA               	movf	pclath,w,c
  9866   003AE0  0012               	return		;indir
  9867   003AE2                     u26439:
  9868   003AE2  0900               	iorlw	0
  9869   003AE4  B4D8               	btfsc	status,2,c
  9870   003AE6  D08F               	goto	l1980
  9871                           
  9872                           ;../../VLCBlib_PIC/vlcb.c: 1020:                 if (m.len > 0) {
  9873   003AE8  0103               	movlb	3	; () banked
  9874   003AEA  51EB               	movf	poll@m& (0+255),w,b
  9875   003AEC  B4D8               	btfsc	status,2,c
  9876   003AEE  D08B               	goto	l1980
  9877                           
  9878                           ; BSR set to: 3
  9879                           ;../../VLCBlib_PIC/vlcb.c: 1021:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
  9880   003AF0  0E07               	movlw	7
  9881   003AF2  ECBC  F042         	call	_showStatus
  9882                           
  9883                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     handled = APP_preProcessMessage(&m)
      +                          ;
  9884   003AF6  0EEB               	movlw	low poll@m
  9885   003AF8  0100               	movlb	0	; () banked
  9886   003AFA  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
  9887   003AFC  0E03               	movlw	high poll@m
  9888   003AFE  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
  9889   003B00  ECEA  F061         	call	_APP_preProcessMessage	;wreg free
  9890   003B04  0103               	movlb	3	; () banked
  9891   003B06  6FE9               	movwf	poll@handled& (0+255),b
  9892                           
  9893                           ; BSR set to: 3
  9894                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     if (handled == NOT_PROCESSED) {
  9895   003B08  51E9               	movf	poll@handled& (0+255),w,b
  9896   003B0A  A4D8               	btfss	status,2,c
  9897   003B0C  D07C               	goto	l1980
  9898                           
  9899                           ; BSR set to: 3
  9900                           ;../../VLCBlib_PIC/vlcb.c: 1024:                         for (i=0; i<9; i++) {
  9901   003B0E  0E00               	movlw	0
  9902   003B10  6FEA               	movwf	poll@i& (0+255),b
  9903   003B12                     l24505:
  9904                           
  9905                           ; BSR set to: 3
  9906                           ;../../VLCBlib_PIC/vlcb.c: 1025:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
  9907   003B12  51EA               	movf	poll@i& (0+255),w,b
  9908   003B14  0D02               	mullw	2
  9909   003B16  0E75               	movlw	low _services
  9910   003B18  24F3               	addwf	243,w,c
  9911   003B1A  6EF6               	movwf	tblptrl,c
  9912   003B1C  0EEE               	movlw	high _services
  9913   003B1E  20F4               	addwfc	244,w,c
  9914   003B20  6EF7               	movwf	tblptrh,c
  9915   003B22                     	if	1	;There are 3 active tblptr bytes
  9916   003B22  6AF8               	clrf	tblptru,c
  9917   003B24  0E00               	movlw	low (__mediumconst shr (0+16))
  9918   003B26  22F8               	addwfc	tblptru,f,c
  9919   003B28                     	endif
  9920   003B28  0009               	tblrd		*+
  9921   003B2A  50F5               	movf	tablat,w,c
  9922   003B2C  0009               	tblrd		*+
  9923   003B2E  10F5               	iorwf	tablat,w,c
  9924   003B30  B4D8               	btfsc	status,2,c
  9925   003B32  D058               	goto	l24513
  9926                           
  9927                           ; BSR set to: 3
  9928   003B34  51EA               	movf	poll@i& (0+255),w,b
  9929   003B36  0D02               	mullw	2
  9930   003B38  0E75               	movlw	low _services
  9931   003B3A  24F3               	addwf	243,w,c
  9932   003B3C  6EF6               	movwf	tblptrl,c
  9933   003B3E  0EEE               	movlw	high _services
  9934   003B40  20F4               	addwfc	244,w,c
  9935   003B42  6EF7               	movwf	tblptrh,c
  9936   003B44                     	if	1	;There are 3 active tblptr bytes
  9937   003B44  6AF8               	clrf	tblptru,c
  9938   003B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9939   003B48  22F8               	addwfc	tblptru,f,c
  9940   003B4A                     	endif
  9941   003B4A  0009               	tblrd		*+
  9942   003B4C  CFF5 F3E5          	movff	tablat,??_poll
  9943   003B50  0009               	tblrd		*+
  9944   003B52  CFF5 F3E6          	movff	tablat,??_poll+1
  9945   003B56  0E06               	movlw	6
  9946   003B58  27E5               	addwf	??_poll& (0+255),f,b
  9947   003B5A  0E00               	movlw	0
  9948   003B5C  23E6               	addwfc	(??_poll+1)& (0+255),f,b
  9949   003B5E  C3E5  FFF6         	movff	??_poll,tblptrl
  9950   003B62  C3E6  FFF7         	movff	??_poll+1,tblptrh
  9951   003B66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9952   003B66  6AF8               	clrf	tblptru,c
  9953   003B68                     	endif
  9954   003B68                     	if	0	;tblptru may be non-zero
  9955   003B68                     	endif
  9956   003B68  0009               	tblrd		*+
  9957   003B6A  50F5               	movf	tablat,w,c
  9958   003B6C  0009               	tblrd		*+
  9959   003B6E  10F5               	iorwf	tablat,w,c
  9960   003B70  B4D8               	btfsc	status,2,c
  9961   003B72  D038               	goto	l24513
  9962                           
  9963                           ; BSR set to: 3
  9964                           ;../../VLCBlib_PIC/vlcb.c: 1026:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
  9965   003B74  0EEB               	movlw	low poll@m
  9966   003B76  0101               	movlb	1	; () banked
  9967   003B78  6FF7               	movwf	producerProcessMessage@m& (0+255),b
  9968   003B7A  0E03               	movlw	high poll@m
  9969   003B7C  6FF8               	movwf	(producerProcessMessage@m+1)& (0+255),b
  9970   003B7E  0103               	movlb	3	; () banked
  9971   003B80  51EA               	movf	poll@i& (0+255),w,b
  9972   003B82  0D02               	mullw	2
  9973   003B84  0E75               	movlw	low _services
  9974   003B86  24F3               	addwf	243,w,c
  9975   003B88  6EF6               	movwf	tblptrl,c
  9976   003B8A  0EEE               	movlw	high _services
  9977   003B8C  20F4               	addwfc	244,w,c
  9978   003B8E  6EF7               	movwf	tblptrh,c
  9979   003B90                     	if	1	;There are 3 active tblptr bytes
  9980   003B90  6AF8               	clrf	tblptru,c
  9981   003B92  0E00               	movlw	low (__mediumconst shr (0+16))
  9982   003B94  22F8               	addwfc	tblptru,f,c
  9983   003B96                     	endif
  9984   003B96  0009               	tblrd		*+
  9985   003B98  CFF5 F3E5          	movff	tablat,??_poll
  9986   003B9C  0009               	tblrd		*+
  9987   003B9E  CFF5 F3E6          	movff	tablat,??_poll+1
  9988   003BA2  0E06               	movlw	6
  9989   003BA4  27E5               	addwf	??_poll& (0+255),f,b
  9990   003BA6  0E00               	movlw	0
  9991   003BA8  23E6               	addwfc	(??_poll+1)& (0+255),f,b
  9992   003BAA  C3E5  FFF6         	movff	??_poll,tblptrl
  9993   003BAE  C3E6  FFF7         	movff	??_poll+1,tblptrh
  9994   003BB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9995   003BB2  6AF8               	clrf	tblptru,c
  9996   003BB4                     	endif
  9997   003BB4                     	if	0	;tblptru may be non-zero
  9998   003BB4                     	endif
  9999   003BB4  0009               	tblrd		*+
 10000   003BB6  CFF5 F3E7          	movff	tablat,??_poll+2
 10001   003BBA  0009               	tblrd		*+
 10002   003BBC  CFF5 F3E8          	movff	tablat,??_poll+3
 10003   003BC0  D801               	call	u26498
 10004   003BC2  D009               	goto	u26499
 10005   003BC4                     u26498:
 10006   003BC4  0005               	push	
 10007   003BC6  6EFA               	movwf	pclath,c
 10008   003BC8  51E7               	movf	(??_poll+2)& (0+255),w,b
 10009   003BCA  6EFD               	movwf	tosl,c
 10010   003BCC  51E8               	movf	(??_poll+3)& (0+255),w,b
 10011   003BCE  6EFE               	movwf	tosh,c
 10012   003BD0  6AFF               	clrf	tosu,c
 10013   003BD2  50FA               	movf	pclath,w,c
 10014   003BD4  0012               	return		;indir
 10015   003BD6                     u26499:
 10016   003BD6  06E8               	decf	wreg,f,c
 10017   003BD8  A4D8               	btfss	status,2,c
 10018   003BDA  D004               	goto	l24513
 10019                           
 10020                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                     handled = PROCESSED
      +                          ;
 10021   003BDC  0E01               	movlw	1
 10022   003BDE  0103               	movlb	3	; () banked
 10023   003BE0  6FE9               	movwf	poll@handled& (0+255),b
 10024                           
 10025                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     break;
 10026   003BE2  D005               	goto	u26510
 10027   003BE4                     l24513:
 10028                           
 10029                           ;../../VLCBlib_PIC/vlcb.c: 1031:                         }
 10030   003BE4  0103               	movlb	3	; () banked
 10031   003BE6  2BEA               	incf	poll@i& (0+255),f,b
 10032                           
 10033                           ; BSR set to: 3
 10034   003BE8  0E08               	movlw	8
 10035   003BEA  65EA               	cpfsgt	poll@i& (0+255),b
 10036   003BEC  D792               	goto	l24505
 10037   003BEE                     u26510:
 10038                           
 10039                           ; BSR set to: 3
 10040                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         if (handled == NOT_PROCESSED) {
 10041   003BEE  51E9               	movf	poll@handled& (0+255),w,b
 10042   003BF0  A4D8               	btfss	status,2,c
 10043   003BF2  D009               	goto	l1980
 10044                           
 10045                           ; BSR set to: 3
 10046                           ;../../VLCBlib_PIC/vlcb.c: 1033:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10047   003BF4  0EEB               	movlw	low poll@m
 10048   003BF6  0100               	movlb	0	; () banked
 10049   003BF8  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10050   003BFA  0E03               	movlw	high poll@m
 10051   003BFC  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10052   003BFE  ECEC  F061         	call	_APP_postProcessMessage	;wreg free
 10053   003C02  0103               	movlb	3	; () banked
 10054   003C04  6FE9               	movwf	poll@handled& (0+255),b
 10055   003C06                     l1980:
 10056                           
 10057                           ;../../VLCBlib_PIC/vlcb.c: 1040:     if (handled) {
 10058                           
 10059                           ; BSR set to: 3
 10060   003C06  0103               	movlb	3	; () banked
 10061   003C08  51E9               	movf	poll@handled& (0+255),w,b
 10062   003C0A  B4D8               	btfsc	status,2,c
 10063   003C0C  0012               	return	
 10064                           
 10065                           ; BSR set to: 3
 10066                           ;../../VLCBlib_PIC/vlcb.c: 1041:         showStatus(STATUS_MESSAGE_ACTED);
 10067   003C0E  0E08               	movlw	8
 10068   003C10  ECBC  F042         	call	_showStatus
 10069   003C14  0012               	return		;funcret
 10070   003C16                     __end_of_poll:
 10071                           	callstack 0
 10072                           
 10073 ;; *************** function _producerProcessMessage *****************
 10074 ;; Defined at:
 10075 ;;		line 123 in file "../../VLCBlib_PIC/event_producer_happening.c"
 10076 ;; Parameters:    Size  Location     Type
 10077 ;;  m               2   63[BANK1 ] PTR struct Message
 10078 ;;		 -> poll@m(9), 
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;  ev              2    0[BANK2 ] short 
 10081 ;;  index           1    3[BANK2 ] unsigned char 
 10082 ;;  h               1    2[BANK2 ] unsigned char 
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      enum E12743
 10085 ;; Registers used:
 10086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10092 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10093 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10094 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10095 ;;      Totals:         0       0       8       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10096 ;;Total ram usage:       12 bytes
 10097 ;; Hardware stack levels used: 1
 10098 ;; Hardware stack levels required when called: 16
 10099 ;; This function calls:
 10100 ;;		_APP_GetEventState
 10101 ;;		_findEvent
 10102 ;;		_getEv
 10103 ;;		_sendMessage3
 10104 ;;		_sendMessage4
 10105 ;; This function is called by:
 10106 ;;		_poll
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           
 10110                           	psect	text19
 10111   005C50                     __ptext19:
 10112                           	callstack 0
 10113   005C50                     _producerProcessMessage:
 10114                           	callstack 13
 10115                           
 10116                           ;../../VLCBlib_PIC/event_producer_happening.c: 124:     uint8_t index;;../../VLCBlib_PIC
      +                          /event_producer_happening.c: 125:     Happening h;;../../VLCBlib_PIC/event_producer_happ
      +                          ening.c: 126:     int16_t ev;;../../VLCBlib_PIC/event_producer_happening.c: 128:     swi
      +                          tch (m->opc) {
 10117                           
 10118                           ;incstack = 0
 10119   005C50  D125               	goto	l24315
 10120   005C52                     l24267:
 10121                           
 10122                           ; BSR set to: 1
 10123                           ;../../VLCBlib_PIC/event_producer_happening.c: 131:             if (m->len < 5) {
 10124   005C52  C1F7  FFD9         	movff	producerProcessMessage@m,fsr2l
 10125   005C56  C1F8  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 10126   005C5A  0E05               	movlw	5
 10127   005C5C  60DF               	cpfslt	indf2,c
 10128   005C5E  D00C               	goto	l24275
 10129                           
 10130                           ; BSR set to: 1
 10131                           ;../../VLCBlib_PIC/event_producer_happening.c: 132:                 sendMessage3(OPC_CMD
      +                          ERR, nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 10132   005C60  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10133   005C64  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10134   005C68  0E01               	movlw	1
 10135   005C6A  0100               	movlb	0	; () banked
 10136   005C6C  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10137   005C6E  0E6F               	movlw	111
 10138   005C70  ECED  F05E         	call	_sendMessage3
 10139   005C74                     l24271:
 10140                           
 10141                           ;../../VLCBlib_PIC/event_producer_happening.c: 133:                 return PROCESSED;
 10142   005C74  0E01               	movlw	1
 10143   005C76  0012               	return	
 10144   005C78                     l24275:
 10145                           
 10146                           ; BSR set to: 1
 10147                           ;../../VLCBlib_PIC/event_producer_happening.c: 135:             if (m->opc == OPC_AREQ) 
      +                          {
 10148   005C78  EE20 F001          	lfsr	2,1
 10149   005C7C  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10150   005C7E  26D9               	addwf	fsr2l,f,c
 10151   005C80  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10152   005C82  22DA               	addwfc	fsr2h,f,c
 10153   005C84  0E92               	movlw	146
 10154   005C86  18DE               	xorwf	postinc2,w,c
 10155   005C88  A4D8               	btfss	status,2,c
 10156   005C8A  D02B               	goto	l24279
 10157                           
 10158                           ; BSR set to: 1
 10159                           ;../../VLCBlib_PIC/event_producer_happening.c: 136:                 index = findEvent((u
      +                          int16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10160   005C8C  EE20 F003          	lfsr	2,3
 10161   005C90  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10162   005C92  26D9               	addwf	fsr2l,f,c
 10163   005C94  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10164   005C96  22DA               	addwfc	fsr2h,f,c
 10165   005C98  50DF               	movf	indf2,w,c
 10166   005C9A  6FF9               	movwf	??_producerProcessMessage& (0+255),b
 10167   005C9C  EE20 F002          	lfsr	2,2
 10168   005CA0  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10169   005CA2  26D9               	addwf	fsr2l,f,c
 10170   005CA4  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10171   005CA6  22DA               	addwfc	fsr2h,f,c
 10172   005CA8  50DF               	movf	indf2,w,c
 10173   005CAA  6FFA               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10174   005CAC  51F9               	movf	??_producerProcessMessage& (0+255),w,b
 10175   005CAE  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 10176   005CB0  C1FA  F1B9         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 10177   005CB4  EE20 F005          	lfsr	2,5
 10178   005CB8  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10179   005CBA  26D9               	addwf	fsr2l,f,c
 10180   005CBC  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10181   005CBE  22DA               	addwfc	fsr2h,f,c
 10182   005CC0  50DF               	movf	indf2,w,c
 10183   005CC2  6FFC               	movwf	(??_producerProcessMessage+3)& (0+255),b
 10184   005CC4  EE20 F004          	lfsr	2,4
 10185   005CC8  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10186   005CCA  26D9               	addwf	fsr2l,f,c
 10187   005CCC  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10188   005CCE  22DA               	addwfc	fsr2h,f,c
 10189   005CD0  50DF               	movf	indf2,w,c
 10190   005CD2  6FFD               	movwf	(??_producerProcessMessage+4)& (0+255),b
 10191   005CD4  51FC               	movf	(??_producerProcessMessage+3)& (0+255),w,b
 10192   005CD6  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 10193   005CD8  C1FD  F1BB         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 10194   005CDC  ECE9  F050         	call	_findEvent	;wreg free
 10195   005CE0  D01A               	goto	L1
 10196   005CE2                     l24279:
 10197                           
 10198                           ; BSR set to: 1
 10199                           ;../../VLCBlib_PIC/event_producer_happening.c: 138:                 index = findEvent(0,
      +                           (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10200   005CE2  0E00               	movlw	0
 10201   005CE4  6FB9               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 10202   005CE6  0E00               	movlw	0
 10203   005CE8  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 10204   005CEA  EE20 F005          	lfsr	2,5
 10205   005CEE  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10206   005CF0  26D9               	addwf	fsr2l,f,c
 10207   005CF2  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10208   005CF4  22DA               	addwfc	fsr2h,f,c
 10209   005CF6  50DF               	movf	indf2,w,c
 10210   005CF8  6FF9               	movwf	??_producerProcessMessage& (0+255),b
 10211   005CFA  EE20 F004          	lfsr	2,4
 10212   005CFE  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10213   005D00  26D9               	addwf	fsr2l,f,c
 10214   005D02  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10215   005D04  22DA               	addwfc	fsr2h,f,c
 10216   005D06  50DF               	movf	indf2,w,c
 10217   005D08  6FFA               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10218   005D0A  51F9               	movf	??_producerProcessMessage& (0+255),w,b
 10219   005D0C  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 10220   005D0E  C1FA  F1BB         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 10221   005D12  ECE9  F050         	call	_findEvent	;wreg free
 10222   005D16                     L1:
 10223   005D16  0102               	movlb	2	; () banked
 10224   005D18  6FFF               	movwf	producerProcessMessage@index& (0+255),b
 10225                           
 10226                           ; BSR set to: 2
 10227                           ;../../VLCBlib_PIC/event_producer_happening.c: 140:             if (index == 0xff) retur
      +                          n PROCESSED;
 10228   005D1A  29FF               	incf	producerProcessMessage@index& (0+255),w,b
 10229   005D1C  B4D8               	btfsc	status,2,c
 10230   005D1E  D7AA               	goto	l24271
 10231                           
 10232                           ; BSR set to: 2
 10233                           ;../../VLCBlib_PIC/event_producer_happening.c: 142:             ev = getEv(index, 0);
 10234   005D20  0E00               	movlw	0
 10235   005D22  0100               	movlb	0	; () banked
 10236   005D24  6F9D               	movwf	getEv@evNum& (0+255),b
 10237   005D26  0102               	movlb	2	; () banked
 10238   005D28  51FF               	movf	producerProcessMessage@index& (0+255),w,b
 10239   005D2A  ECB7  F03B         	call	_getEv
 10240   005D2E  C09D  F2FC         	movff	?_getEv,producerProcessMessage@ev
 10241   005D32  C09E  F2FD         	movff	?_getEv+1,producerProcessMessage@ev+1
 10242                           
 10243                           ;../../VLCBlib_PIC/event_producer_happening.c: 143:             if (ev <= 0) return PROC
      +                          ESSED;
 10244   005D36  0102               	movlb	2	; () banked
 10245   005D38  BFFD               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 10246   005D3A  D79C               	goto	l24271
 10247   005D3C  51FD               	movf	(producerProcessMessage@ev+1)& (0+255),w,b
 10248   005D3E  E103               	bnz	l3001
 10249   005D40  05FC               	decf	producerProcessMessage@ev& (0+255),w,b
 10250   005D42  A0D8               	btfss	status,0,c
 10251   005D44  D797               	goto	l24271
 10252   005D46                     l3001:
 10253                           
 10254                           ; BSR set to: 2
 10255                           ;../../VLCBlib_PIC/event_producer_happening.c: 145:             h = (uint8_t)ev;
 10256   005D46  C2FC  F2FE         	movff	producerProcessMessage@ev,producerProcessMessage@h
 10257                           
 10258                           ; BSR set to: 2
 10259                           ;../../VLCBlib_PIC/event_producer_happening.c: 153:             if (m->opc == OPC_AREQ) 
      +                          {
 10260   005D4A  0101               	movlb	1	; () banked
 10261   005D4C  EE20 F001          	lfsr	2,1
 10262   005D50  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10263   005D52  26D9               	addwf	fsr2l,f,c
 10264   005D54  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10265   005D56  22DA               	addwfc	fsr2h,f,c
 10266   005D58  0E92               	movlw	146
 10267   005D5A  18DE               	xorwf	postinc2,w,c
 10268   005D5C  A4D8               	btfss	status,2,c
 10269   005D5E  D05F               	goto	l24303
 10270                           
 10271                           ; BSR set to: 1
 10272                           ;../../VLCBlib_PIC/event_producer_happening.c: 154:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10273   005D60  0102               	movlb	2	; () banked
 10274   005D62  51FE               	movf	producerProcessMessage@h& (0+255),w,b
 10275   005D64  EC0B  F01E         	call	_APP_GetEventState
 10276   005D68  06E8               	decf	wreg,f,c
 10277   005D6A  A4D8               	btfss	status,2,c
 10278   005D6C  D02C               	goto	l24301
 10279                           
 10280                           ;../../VLCBlib_PIC/event_producer_happening.c: 155:                     sendMessage4(OPC
      +                          _ARON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10281   005D6E  0101               	movlb	1	; () banked
 10282   005D70  EE20 F002          	lfsr	2,2
 10283   005D74  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10284   005D76  26D9               	addwf	fsr2l,f,c
 10285   005D78  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10286   005D7A  22DA               	addwfc	fsr2h,f,c
 10287   005D7C  50DF               	movf	indf2,w,c
 10288   005D7E  0100               	movlb	0	; () banked
 10289   005D80  6FA5               	movwf	sendMessage4@data1& (0+255),b
 10290   005D82  0101               	movlb	1	; () banked
 10291   005D84  EE20 F003          	lfsr	2,3
 10292   005D88  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10293   005D8A  26D9               	addwf	fsr2l,f,c
 10294   005D8C  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10295   005D8E  22DA               	addwfc	fsr2h,f,c
 10296   005D90  50DF               	movf	indf2,w,c
 10297   005D92  0100               	movlb	0	; () banked
 10298   005D94  6FA6               	movwf	sendMessage4@data2& (0+255),b
 10299   005D96  0101               	movlb	1	; () banked
 10300   005D98  EE20 F004          	lfsr	2,4
 10301   005D9C  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10302   005D9E  26D9               	addwf	fsr2l,f,c
 10303   005DA0  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10304   005DA2  22DA               	addwfc	fsr2h,f,c
 10305   005DA4  50DF               	movf	indf2,w,c
 10306   005DA6  0100               	movlb	0	; () banked
 10307   005DA8  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10308   005DAA  0101               	movlb	1	; () banked
 10309   005DAC  EE20 F005          	lfsr	2,5
 10310   005DB0  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10311   005DB2  26D9               	addwf	fsr2l,f,c
 10312   005DB4  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10313   005DB6  22DA               	addwfc	fsr2h,f,c
 10314   005DB8  50DF               	movf	indf2,w,c
 10315   005DBA  0100               	movlb	0	; () banked
 10316   005DBC  6FA8               	movwf	sendMessage4@data4& (0+255),b
 10317   005DBE  0E93               	movlw	147
 10318   005DC0  EC64  F05F         	call	_sendMessage4
 10319                           
 10320                           ;../../VLCBlib_PIC/event_producer_happening.c: 156:                 } else {
 10321   005DC4  D757               	goto	l24271
 10322   005DC6                     l24301:
 10323                           
 10324                           ;../../VLCBlib_PIC/event_producer_happening.c: 157:                     sendMessage4(OPC
      +                          _AROF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10325   005DC6  0101               	movlb	1	; () banked
 10326   005DC8  EE20 F002          	lfsr	2,2
 10327   005DCC  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10328   005DCE  26D9               	addwf	fsr2l,f,c
 10329   005DD0  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10330   005DD2  22DA               	addwfc	fsr2h,f,c
 10331   005DD4  50DF               	movf	indf2,w,c
 10332   005DD6  0100               	movlb	0	; () banked
 10333   005DD8  6FA5               	movwf	sendMessage4@data1& (0+255),b
 10334   005DDA  0101               	movlb	1	; () banked
 10335   005DDC  EE20 F003          	lfsr	2,3
 10336   005DE0  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10337   005DE2  26D9               	addwf	fsr2l,f,c
 10338   005DE4  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10339   005DE6  22DA               	addwfc	fsr2h,f,c
 10340   005DE8  50DF               	movf	indf2,w,c
 10341   005DEA  0100               	movlb	0	; () banked
 10342   005DEC  6FA6               	movwf	sendMessage4@data2& (0+255),b
 10343   005DEE  0101               	movlb	1	; () banked
 10344   005DF0  EE20 F004          	lfsr	2,4
 10345   005DF4  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10346   005DF6  26D9               	addwf	fsr2l,f,c
 10347   005DF8  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10348   005DFA  22DA               	addwfc	fsr2h,f,c
 10349   005DFC  50DF               	movf	indf2,w,c
 10350   005DFE  0100               	movlb	0	; () banked
 10351   005E00  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10352   005E02  0101               	movlb	1	; () banked
 10353   005E04  EE20 F005          	lfsr	2,5
 10354   005E08  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10355   005E0A  26D9               	addwf	fsr2l,f,c
 10356   005E0C  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10357   005E0E  22DA               	addwfc	fsr2h,f,c
 10358   005E10  50DF               	movf	indf2,w,c
 10359   005E12  0100               	movlb	0	; () banked
 10360   005E14  6FA8               	movwf	sendMessage4@data4& (0+255),b
 10361   005E16  0E94               	movlw	148
 10362   005E18  EC64  F05F         	call	_sendMessage4
 10363   005E1C  D72B               	goto	l24271
 10364   005E1E                     l24303:
 10365                           
 10366                           ; BSR set to: 1
 10367                           ;../../VLCBlib_PIC/event_producer_happening.c: 160:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10368   005E1E  0102               	movlb	2	; () banked
 10369   005E20  51FE               	movf	producerProcessMessage@h& (0+255),w,b
 10370   005E22  EC0B  F01E         	call	_APP_GetEventState
 10371   005E26  06E8               	decf	wreg,f,c
 10372   005E28  A4D8               	btfss	status,2,c
 10373   005E2A  D01C               	goto	l24307
 10374                           
 10375                           ;../../VLCBlib_PIC/event_producer_happening.c: 161:                     sendMessage4(OPC
      +                          _ARSON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10376   005E2C  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 10377   005E30  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 10378   005E34  0101               	movlb	1	; () banked
 10379   005E36  EE20 F004          	lfsr	2,4
 10380   005E3A  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10381   005E3C  26D9               	addwf	fsr2l,f,c
 10382   005E3E  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10383   005E40  22DA               	addwfc	fsr2h,f,c
 10384   005E42  50DF               	movf	indf2,w,c
 10385   005E44  0100               	movlb	0	; () banked
 10386   005E46  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10387   005E48  0101               	movlb	1	; () banked
 10388   005E4A  EE20 F005          	lfsr	2,5
 10389   005E4E  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10390   005E50  26D9               	addwf	fsr2l,f,c
 10391   005E52  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10392   005E54  22DA               	addwfc	fsr2h,f,c
 10393   005E56  50DF               	movf	indf2,w,c
 10394   005E58  0100               	movlb	0	; () banked
 10395   005E5A  6FA8               	movwf	sendMessage4@data4& (0+255),b
 10396   005E5C  0E9D               	movlw	157
 10397   005E5E  EC64  F05F         	call	_sendMessage4
 10398                           
 10399                           ;../../VLCBlib_PIC/event_producer_happening.c: 162:                 } else {
 10400   005E62  D708               	goto	l24271
 10401   005E64                     l24307:
 10402                           
 10403                           ;../../VLCBlib_PIC/event_producer_happening.c: 163:                     sendMessage4(OPC
      +                          _ARSOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10404   005E64  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 10405   005E68  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 10406   005E6C  0101               	movlb	1	; () banked
 10407   005E6E  EE20 F004          	lfsr	2,4
 10408   005E72  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10409   005E74  26D9               	addwf	fsr2l,f,c
 10410   005E76  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10411   005E78  22DA               	addwfc	fsr2h,f,c
 10412   005E7A  50DF               	movf	indf2,w,c
 10413   005E7C  0100               	movlb	0	; () banked
 10414   005E7E  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10415   005E80  0101               	movlb	1	; () banked
 10416   005E82  EE20 F005          	lfsr	2,5
 10417   005E86  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10418   005E88  26D9               	addwf	fsr2l,f,c
 10419   005E8A  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10420   005E8C  22DA               	addwfc	fsr2h,f,c
 10421   005E8E  50DF               	movf	indf2,w,c
 10422   005E90  0100               	movlb	0	; () banked
 10423   005E92  6FA8               	movwf	sendMessage4@data4& (0+255),b
 10424   005E94  0E9E               	movlw	158
 10425   005E96  EC64  F05F         	call	_sendMessage4
 10426   005E9A  D6EC               	goto	l24271
 10427   005E9C                     l24315:
 10428   005E9C  0101               	movlb	1	; () banked
 10429   005E9E  EE20 F001          	lfsr	2,1
 10430   005EA2  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10431   005EA4  26D9               	addwf	fsr2l,f,c
 10432   005EA6  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10433   005EA8  22DA               	addwfc	fsr2h,f,c
 10434   005EAA  50DF               	movf	indf2,w,c
 10435   005EAC  6FF9               	movwf	??_producerProcessMessage& (0+255),b
 10436   005EAE  6BFA               	clrf	(??_producerProcessMessage+1)& (0+255),b
 10437                           
 10438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10439                           ; Switch size 1, requested type "simple"
 10440                           ; Number of cases is 1, Range of values is 0 to 0
 10441                           ; switch strategies available:
 10442                           ; Name         Instructions Cycles
 10443                           ; simple_byte            4     3 (average)
 10444                           ;	Chosen strategy is simple_byte
 10445   005EB0  51FA               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 10446   005EB2  0A00               	xorlw	0	; case 0
 10447   005EB4  A4D8               	btfss	status,2,c
 10448   005EB6  D007               	goto	l24317
 10449                           
 10450                           ; BSR set to: 1
 10451                           ; Switch size 1, requested type "simple"
 10452                           ; Number of cases is 2, Range of values is 146 to 154
 10453                           ; switch strategies available:
 10454                           ; Name         Instructions Cycles
 10455                           ; simple_byte            7     4 (average)
 10456                           ;	Chosen strategy is simple_byte
 10457   005EB8  51F9               	movf	??_producerProcessMessage& (0+255),w,b
 10458   005EBA  0A92               	xorlw	146	; case 146
 10459   005EBC  B4D8               	btfsc	status,2,c
 10460   005EBE  D6C9               	goto	l24267
 10461   005EC0  0A08               	xorlw	8	; case 154
 10462   005EC2  B4D8               	btfsc	status,2,c
 10463   005EC4  D6C6               	goto	l24267
 10464   005EC6                     l24317:
 10465                           
 10466                           ; BSR set to: 1
 10467                           ;../../VLCBlib_PIC/event_producer_happening.c: 170:     return NOT_PROCESSED;
 10468   005EC6  0E00               	movlw	0
 10469   005EC8  0012               	return		;funcret
 10470   005ECA                     __end_of_producerProcessMessage:
 10471                           	callstack 0
 10472                           
 10473 ;; *************** function _canProcessMessage *****************
 10474 ;; Defined at:
 10475 ;;		line 368 in file "../../VLCBlib_PIC/can18_ecan.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;  m               2   63[BANK1 ] PTR struct Message
 10478 ;;		 -> poll@m(9), 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;		None
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  1    wreg      enum E12960
 10483 ;; Registers used:
 10484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10490 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10492 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10493 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10494 ;;Total ram usage:        4 bytes
 10495 ;; Hardware stack levels used: 1
 10496 ;; Hardware stack levels required when called: 16
 10497 ;; This function calls:
 10498 ;;		_sendMessage5
 10499 ;; This function is called by:
 10500 ;;		_poll
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text20
 10505   009994                     __ptext20:
 10506                           	callstack 0
 10507   009994                     _canProcessMessage:
 10508                           	callstack 13
 10509                           
 10510                           ;../../VLCBlib_PIC/can18_ecan.c: 370:     if (m->len < 3) return NOT_PROCESSED;
 10511                           
 10512                           ;incstack = 0
 10513   009994  C1F7  FFD9         	movff	canProcessMessage@m,fsr2l
 10514   009998  C1F8  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10515   00999C  0E03               	movlw	3
 10516   00999E  60DF               	cpfslt	indf2,c
 10517   0099A0  D002               	goto	l23823
 10518   0099A2                     u25540:
 10519   0099A2  0E00               	movlw	0
 10520   0099A4  0012               	return	
 10521   0099A6                     l23823:
 10522                           
 10523                           ;../../VLCBlib_PIC/can18_ecan.c: 371:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10524   0099A6  0101               	movlb	1	; () banked
 10525   0099A8  EE20 F002          	lfsr	2,2
 10526   0099AC  51F7               	movf	canProcessMessage@m& (0+255),w,b
 10527   0099AE  26D9               	addwf	fsr2l,f,c
 10528   0099B0  51F8               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10529   0099B2  22DA               	addwfc	fsr2h,f,c
 10530   0099B4  50DE               	movf	postinc2,w,c
 10531   0099B6  0100               	movlb	0	; () banked
 10532   0099B8  19C0               	xorwf	(_nn+1)& (0+255),w,b
 10533   0099BA  A4D8               	btfss	status,2,c
 10534   0099BC  D7F2               	goto	u25540
 10535                           
 10536                           ; BSR set to: 0
 10537                           ;../../VLCBlib_PIC/can18_ecan.c: 372:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10538   0099BE  0101               	movlb	1	; () banked
 10539   0099C0  EE20 F003          	lfsr	2,3
 10540   0099C4  51F7               	movf	canProcessMessage@m& (0+255),w,b
 10541   0099C6  26D9               	addwf	fsr2l,f,c
 10542   0099C8  51F8               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10543   0099CA  22DA               	addwfc	fsr2h,f,c
 10544   0099CC  0100               	movlb	0	; () banked
 10545   0099CE  51BF               	movf	_nn& (0+255),w,b
 10546   0099D0  18DE               	xorwf	postinc2,w,c
 10547   0099D2  A4D8               	btfss	status,2,c
 10548   0099D4  D7E6               	goto	u25540
 10549   0099D6  D017               	goto	l23853
 10550   0099D8                     l23835:
 10551                           
 10552                           ;../../VLCBlib_PIC/can18_ecan.c: 378:             return PROCESSED;
 10553   0099D8  0E01               	movlw	1
 10554   0099DA  0012               	return	
 10555   0099DC                     l23839:
 10556                           
 10557                           ; BSR set to: 1
 10558                           ;../../VLCBlib_PIC/can18_ecan.c: 380:             if (m->len < 4) {
 10559   0099DC  C1F7  FFD9         	movff	canProcessMessage@m,fsr2l
 10560   0099E0  C1F8  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10561   0099E4  0E04               	movlw	4
 10562   0099E6  60DF               	cpfslt	indf2,c
 10563   0099E8  D7F7               	goto	l23835
 10564                           
 10565                           ; BSR set to: 1
 10566                           ;../../VLCBlib_PIC/can18_ecan.c: 382:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10567   0099EA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10568   0099EE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10569   0099F2  0E71               	movlw	113
 10570   0099F4  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10571   0099F6  0E01               	movlw	1
 10572   0099F8  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10573   0099FA  0E01               	movlw	1
 10574   0099FC  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10575   0099FE  0EAF               	movlw	175
 10576   009A00  EC35  F05F         	call	_sendMessage5
 10577   009A04  D7E9               	goto	l23835
 10578   009A06                     l23853:
 10579                           
 10580                           ; BSR set to: 0
 10581   009A06  0101               	movlb	1	; () banked
 10582   009A08  EE20 F001          	lfsr	2,1
 10583   009A0C  51F7               	movf	canProcessMessage@m& (0+255),w,b
 10584   009A0E  26D9               	addwf	fsr2l,f,c
 10585   009A10  51F8               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10586   009A12  22DA               	addwfc	fsr2h,f,c
 10587   009A14  50DF               	movf	indf2,w,c
 10588   009A16  6FF9               	movwf	??_canProcessMessage& (0+255),b
 10589   009A18  6BFA               	clrf	(??_canProcessMessage+1)& (0+255),b
 10590                           
 10591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10592                           ; Switch size 1, requested type "simple"
 10593                           ; Number of cases is 1, Range of values is 0 to 0
 10594                           ; switch strategies available:
 10595                           ; Name         Instructions Cycles
 10596                           ; simple_byte            4     3 (average)
 10597                           ;	Chosen strategy is simple_byte
 10598   009A1A  51FA               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10599   009A1C  0A00               	xorlw	0	; case 0
 10600   009A1E  A4D8               	btfss	status,2,c
 10601   009A20  D7C0               	goto	u25540
 10602                           
 10603                           ; BSR set to: 1
 10604                           ; Switch size 1, requested type "simple"
 10605                           ; Number of cases is 2, Range of values is 93 to 117
 10606                           ; switch strategies available:
 10607                           ; Name         Instructions Cycles
 10608                           ; simple_byte            7     4 (average)
 10609                           ;	Chosen strategy is simple_byte
 10610   009A22  51F9               	movf	??_canProcessMessage& (0+255),w,b
 10611   009A24  0A5D               	xorlw	93	; case 93
 10612   009A26  B4D8               	btfsc	status,2,c
 10613   009A28  D7D7               	goto	l23835
 10614   009A2A  0A28               	xorlw	40	; case 117
 10615   009A2C  B4D8               	btfsc	status,2,c
 10616   009A2E  D7D6               	goto	l23839
 10617   009A30  D7B8               	goto	u25540
 10618   009A32                     __end_of_canProcessMessage:
 10619                           	callstack 0
 10620                           
 10621 ;; *************** function _nvProcessMessage *****************
 10622 ;; Defined at:
 10623 ;;		line 239 in file "../../VLCBlib_PIC/nv.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;  m               2   63[BANK1 ] PTR struct Message
 10626 ;;		 -> poll@m(9), 
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;  valueOrError    2   67[BANK1 ] short 
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1    wreg      enum E12793
 10631 ;; Registers used:
 10632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10633 ;; Tracked objects:
 10634 ;;		On entry : 0/0
 10635 ;;		On exit  : 0/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10638 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10639 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10640 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10641 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10642 ;;Total ram usage:        6 bytes
 10643 ;; Hardware stack levels used: 1
 10644 ;; Hardware stack levels required when called: 27
 10645 ;; This function calls:
 10646 ;;		_findServiceIndex
 10647 ;;		_getNV
 10648 ;;		_sendMessage2
 10649 ;;		_sendMessage3
 10650 ;;		_sendMessage4
 10651 ;;		_sendMessage5
 10652 ;;		_setNV
 10653 ;;		_startTimedResponse
 10654 ;; This function is called by:
 10655 ;;		_poll
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           	psect	text21
 10660   004600                     __ptext21:
 10661                           	callstack 0
 10662   004600                     _nvProcessMessage:
 10663                           	callstack 2
 10664                           
 10665                           ;../../VLCBlib_PIC/nv.c: 240:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 242:    
      +                           if (m->len < 3) {
 10666                           
 10667                           ;incstack = 0
 10668   004600  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10669   004604  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10670   004608  0E03               	movlw	3
 10671   00460A  60DF               	cpfslt	indf2,c
 10672   00460C  D002               	goto	l23523
 10673   00460E                     u25280:
 10674                           
 10675                           ;../../VLCBlib_PIC/nv.c: 243:         return NOT_PROCESSED;
 10676   00460E  0E00               	movlw	0
 10677   004610  0012               	return	
 10678   004612                     l23523:
 10679                           
 10680                           ;../../VLCBlib_PIC/nv.c: 246:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 10681   004612  0101               	movlb	1	; () banked
 10682   004614  EE20 F002          	lfsr	2,2
 10683   004618  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10684   00461A  26D9               	addwf	fsr2l,f,c
 10685   00461C  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10686   00461E  22DA               	addwfc	fsr2h,f,c
 10687   004620  50DE               	movf	postinc2,w,c
 10688   004622  0100               	movlb	0	; () banked
 10689   004624  19C0               	xorwf	(_nn+1)& (0+255),w,b
 10690   004626  A4D8               	btfss	status,2,c
 10691   004628  D7F2               	goto	u25280
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 10695   00462A  0101               	movlb	1	; () banked
 10696   00462C  EE20 F003          	lfsr	2,3
 10697   004630  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10698   004632  26D9               	addwf	fsr2l,f,c
 10699   004634  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10700   004636  22DA               	addwfc	fsr2h,f,c
 10701   004638  0100               	movlb	0	; () banked
 10702   00463A  51BF               	movf	_nn& (0+255),w,b
 10703   00463C  18DE               	xorwf	postinc2,w,c
 10704   00463E  A4D8               	btfss	status,2,c
 10705   004640  D7E6               	goto	u25280
 10706   004642  D157               	goto	l23645
 10707   004644                     l23535:
 10708                           
 10709                           ; BSR set to: 1
 10710                           ;../../VLCBlib_PIC/nv.c: 251:             if (m->len < 4) {
 10711   004644  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10712   004648  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10713   00464C  0E04               	movlw	4
 10714   00464E  60DF               	cpfslt	indf2,c
 10715   004650  D01D               	goto	l23545
 10716                           
 10717                           ; BSR set to: 1
 10718                           ;../../VLCBlib_PIC/nv.c: 252:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 10719   004652  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10720   004656  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10721   00465A  0E01               	movlw	1
 10722   00465C  0100               	movlb	0	; () banked
 10723   00465E  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10724   004660  0E6F               	movlw	111
 10725   004662  ECED  F05E         	call	_sendMessage3
 10726                           
 10727                           ;../../VLCBlib_PIC/nv.c: 254:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10728   004666  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10729   00466A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10730   00466E  0E71               	movlw	113
 10731   004670  0101               	movlb	1	; () banked
 10732   004672  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10733   004674  0E01               	movlw	1
 10734   004676  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10735   004678  0E01               	movlw	1
 10736   00467A  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10737   00467C  0EAF               	movlw	175
 10738   00467E  EC35  F05F         	call	_sendMessage5
 10739   004682                     l23539:
 10740                           
 10741                           ;../../VLCBlib_PIC/nv.c: 257:                 nvDiagnostics[0x01].asUint++;
 10742   004682  0101               	movlb	1	; () banked
 10743   004684  4BAE               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 10744   004686  2BAF               	incf	(_nvDiagnostics+3)& (0+255),f,b
 10745   004688                     l23541:
 10746                           
 10747                           ;../../VLCBlib_PIC/nv.c: 259:                 return PROCESSED;
 10748   004688  0E01               	movlw	1
 10749   00468A  0012               	return	
 10750   00468C                     l23545:
 10751                           
 10752                           ; BSR set to: 1
 10753                           ;../../VLCBlib_PIC/nv.c: 261:             valueOrError = getNV(m->bytes[2]);
 10754   00468C  EE20 F004          	lfsr	2,4
 10755   004690  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10756   004692  26D9               	addwf	fsr2l,f,c
 10757   004694  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10758   004696  22DA               	addwfc	fsr2h,f,c
 10759   004698  50DF               	movf	indf2,w,c
 10760   00469A  EC21  F05D         	call	_getNV
 10761   00469E  C08D  F1FB         	movff	?_getNV,nvProcessMessage@valueOrError
 10762   0046A2  C08E  F1FC         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10763                           
 10764                           ;../../VLCBlib_PIC/nv.c: 262:             if (valueOrError < 0) {
 10765   0046A6  0101               	movlb	1	; () banked
 10766   0046A8  AFFC               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10767   0046AA  D01B               	goto	l23557
 10768                           
 10769                           ; BSR set to: 1
 10770                           ;../../VLCBlib_PIC/nv.c: 263:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10771   0046AC  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10772   0046B0  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10773   0046B4  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10774   0046B6  0800               	sublw	0
 10775   0046B8  0100               	movlb	0	; () banked
 10776   0046BA  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10777   0046BC  0E6F               	movlw	111
 10778   0046BE  ECED  F05E         	call	_sendMessage3
 10779                           
 10780                           ;../../VLCBlib_PIC/nv.c: 265:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10781   0046C2  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10782   0046C6  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10783   0046CA  0E71               	movlw	113
 10784   0046CC  0101               	movlb	1	; () banked
 10785   0046CE  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10786   0046D0  0E01               	movlw	1
 10787   0046D2  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10788   0046D4  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10789   0046D6  0800               	sublw	0
 10790   0046D8  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10791   0046DA  0EAF               	movlw	175
 10792   0046DC  EC35  F05F         	call	_sendMessage5
 10793   0046E0  D7D0               	goto	l23539
 10794   0046E2                     l23557:
 10795                           
 10796                           ; BSR set to: 1
 10797                           ;../../VLCBlib_PIC/nv.c: 273:             nvDiagnostics[0x00].asUint++;
 10798   0046E2  4BAC               	infsnz	_nvDiagnostics& (0+255),f,b
 10799   0046E4  2BAD               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10800                           
 10801                           ; BSR set to: 1
 10802                           ;../../VLCBlib_PIC/nv.c: 275:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10803   0046E6  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 10804   0046EA  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 10805   0046EE  EE20 F004          	lfsr	2,4
 10806   0046F2  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10807   0046F4  26D9               	addwf	fsr2l,f,c
 10808   0046F6  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10809   0046F8  22DA               	addwfc	fsr2h,f,c
 10810   0046FA  50DF               	movf	indf2,w,c
 10811   0046FC  0100               	movlb	0	; () banked
 10812   0046FE  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10813   004700  C1FB  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10814   004704  0E97               	movlw	151
 10815   004706  EC64  F05F         	call	_sendMessage4
 10816                           
 10817                           ;../../VLCBlib_PIC/nv.c: 277:             if (m->bytes[2] == 0) {
 10818   00470A  0101               	movlb	1	; () banked
 10819   00470C  EE20 F004          	lfsr	2,4
 10820   004710  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10821   004712  26D9               	addwf	fsr2l,f,c
 10822   004714  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10823   004716  22DA               	addwfc	fsr2h,f,c
 10824   004718  50DF               	movf	indf2,w,c
 10825   00471A  A4D8               	btfss	status,2,c
 10826   00471C  D7B5               	goto	l23541
 10827                           
 10828                           ; BSR set to: 1
 10829                           ;../../VLCBlib_PIC/nv.c: 279:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 10830   00471E  0E02               	movlw	2
 10831   004720  ECB4  F055         	call	_findServiceIndex
 10832   004724  0100               	movlb	0	; () banked
 10833   004726  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 10834   004728  0E84               	movlw	low _nvTRnvrdCallback
 10835   00472A  6F92               	movwf	startTimedResponse@callback& (0+255),b
 10836   00472C  0EB9               	movlw	high _nvTRnvrdCallback
 10837   00472E  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 10838   004730  0E06               	movlw	6
 10839   004732  ECE3  F05C         	call	_startTimedResponse
 10840   004736  D7A8               	goto	l23541
 10841   004738                     l23569:
 10842                           
 10843                           ; BSR set to: 1
 10844                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 10845   004738  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10846   00473C  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10847   004740  0E05               	movlw	5
 10848   004742  60DF               	cpfslt	indf2,c
 10849   004744  D00E               	goto	l23579
 10850                           
 10851                           ; BSR set to: 1
 10852                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10853   004746  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10854   00474A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10855   00474E  0E96               	movlw	150
 10856   004750  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10857   004752  0E01               	movlw	1
 10858   004754  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10859   004756  0E01               	movlw	1
 10860   004758  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10861   00475A  0EAF               	movlw	175
 10862   00475C  EC35  F05F         	call	_sendMessage5
 10863   004760  D790               	goto	l23539
 10864   004762                     l23579:
 10865                           
 10866                           ; BSR set to: 1
 10867                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10868   004762  EE20 F005          	lfsr	2,5
 10869   004766  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10870   004768  26D9               	addwf	fsr2l,f,c
 10871   00476A  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10872   00476C  22DA               	addwfc	fsr2h,f,c
 10873   00476E  50DF               	movf	indf2,w,c
 10874   004770  6FF2               	movwf	setNV@value& (0+255),b
 10875   004772  EE20 F004          	lfsr	2,4
 10876   004776  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10877   004778  26D9               	addwf	fsr2l,f,c
 10878   00477A  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10879   00477C  22DA               	addwfc	fsr2h,f,c
 10880   00477E  50DF               	movf	indf2,w,c
 10881   004780  EC4E  F054         	call	_setNV
 10882   004784  0101               	movlb	1	; () banked
 10883   004786  6FF9               	movwf	??_nvProcessMessage& (0+255),b
 10884   004788  51F9               	movf	??_nvProcessMessage& (0+255),w,b
 10885   00478A  6FFB               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10886   00478C  6BFC               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10887                           
 10888                           ; BSR set to: 1
 10889                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 10890   00478E  BFFC               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10891   004790  D00F               	goto	l23591
 10892   004792  51FC               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10893   004794  E103               	bnz	u25350
 10894   004796  05FB               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10895   004798  A0D8               	btfss	status,0,c
 10896   00479A  D00A               	goto	l23591
 10897   00479C                     u25350:
 10898                           
 10899                           ; BSR set to: 1
 10900                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10901   00479C  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10902   0047A0  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10903   0047A4  C1FB  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10904   0047A8  0E6F               	movlw	111
 10905   0047AA  ECED  F05E         	call	_sendMessage3
 10906   0047AE  D769               	goto	l23539
 10907   0047B0                     l23591:
 10908                           
 10909                           ; BSR set to: 1
 10910                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 10911   0047B0  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 10912   0047B4  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 10913   0047B8  0E59               	movlw	89
 10914   0047BA  EC05  F05F         	call	_sendMessage2
 10915                           
 10916                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 10917   0047BE  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10918   0047C2  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10919   0047C6  0E96               	movlw	150
 10920   0047C8  0101               	movlb	1	; () banked
 10921   0047CA  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10922   0047CC  0E01               	movlw	1
 10923   0047CE  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10924   0047D0  0E00               	movlw	0
 10925   0047D2  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10926   0047D4  0EAF               	movlw	175
 10927   0047D6  EC35  F05F         	call	_sendMessage5
 10928   0047DA  D756               	goto	l23541
 10929   0047DC                     l23597:
 10930                           
 10931                           ; BSR set to: 1
 10932                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 10933   0047DC  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10934   0047E0  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10935   0047E4  0E05               	movlw	5
 10936   0047E6  60DF               	cpfslt	indf2,c
 10937   0047E8  D00E               	goto	l23607
 10938                           
 10939                           ; BSR set to: 1
 10940                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10941   0047EA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10942   0047EE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10943   0047F2  0E8E               	movlw	142
 10944   0047F4  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10945   0047F6  0E01               	movlw	1
 10946   0047F8  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10947   0047FA  0E01               	movlw	1
 10948   0047FC  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10949   0047FE  0EAF               	movlw	175
 10950   004800  EC35  F05F         	call	_sendMessage5
 10951   004804  D73E               	goto	l23539
 10952   004806                     l23607:
 10953                           
 10954                           ; BSR set to: 1
 10955                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10956   004806  EE20 F005          	lfsr	2,5
 10957   00480A  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10958   00480C  26D9               	addwf	fsr2l,f,c
 10959   00480E  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10960   004810  22DA               	addwfc	fsr2h,f,c
 10961   004812  50DF               	movf	indf2,w,c
 10962   004814  6FF2               	movwf	setNV@value& (0+255),b
 10963   004816  EE20 F004          	lfsr	2,4
 10964   00481A  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10965   00481C  26D9               	addwf	fsr2l,f,c
 10966   00481E  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10967   004820  22DA               	addwfc	fsr2h,f,c
 10968   004822  50DF               	movf	indf2,w,c
 10969   004824  EC4E  F054         	call	_setNV
 10970   004828  0101               	movlb	1	; () banked
 10971   00482A  6FF9               	movwf	??_nvProcessMessage& (0+255),b
 10972   00482C  51F9               	movf	??_nvProcessMessage& (0+255),w,b
 10973   00482E  6FFB               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10974   004830  6BFC               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10975                           
 10976                           ; BSR set to: 1
 10977                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 10978   004832  BFFC               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10979   004834  D01D               	goto	l23619
 10980   004836  51FC               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10981   004838  E103               	bnz	u25370
 10982   00483A  05FB               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10983   00483C  A0D8               	btfss	status,0,c
 10984   00483E  D018               	goto	l23619
 10985   004840                     u25370:
 10986                           
 10987                           ; BSR set to: 1
 10988                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10989   004840  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10990   004844  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10991   004848  C1FB  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10992   00484C  0E6F               	movlw	111
 10993   00484E  ECED  F05E         	call	_sendMessage3
 10994                           
 10995                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 10996   004852  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10997   004856  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10998   00485A  0E8E               	movlw	142
 10999   00485C  0101               	movlb	1	; () banked
 11000   00485E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11001   004860  0E01               	movlw	1
 11002   004862  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11003   004864  C1FB  F1C4         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 11004   004868  0EAF               	movlw	175
 11005   00486A  EC35  F05F         	call	_sendMessage5
 11006   00486E  D709               	goto	l23539
 11007   004870                     l23619:
 11008                           
 11009                           ; BSR set to: 1
 11010                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 11011   004870  EE20 F004          	lfsr	2,4
 11012   004874  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 11013   004876  26D9               	addwf	fsr2l,f,c
 11014   004878  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11015   00487A  22DA               	addwfc	fsr2h,f,c
 11016   00487C  50DF               	movf	indf2,w,c
 11017   00487E  EC21  F05D         	call	_getNV
 11018   004882  C08D  F1FB         	movff	?_getNV,nvProcessMessage@valueOrError
 11019   004886  C08E  F1FC         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11020                           
 11021                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 11022   00488A  0101               	movlb	1	; () banked
 11023   00488C  AFFC               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11024   00488E  D01B               	goto	l23631
 11025                           
 11026                           ; BSR set to: 1
 11027                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11028   004890  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 11029   004894  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 11030   004898  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11031   00489A  0800               	sublw	0
 11032   00489C  0100               	movlb	0	; () banked
 11033   00489E  6FA7               	movwf	sendMessage3@data3& (0+255),b
 11034   0048A0  0E6F               	movlw	111
 11035   0048A2  ECED  F05E         	call	_sendMessage3
 11036                           
 11037                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11038   0048A6  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11039   0048AA  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11040   0048AE  0E8E               	movlw	142
 11041   0048B0  0101               	movlb	1	; () banked
 11042   0048B2  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11043   0048B4  0E01               	movlw	1
 11044   0048B6  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11045   0048B8  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11046   0048BA  0800               	sublw	0
 11047   0048BC  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11048   0048BE  0EAF               	movlw	175
 11049   0048C0  EC35  F05F         	call	_sendMessage5
 11050   0048C4  D6DE               	goto	l23539
 11051   0048C6                     l23631:
 11052                           
 11053                           ; BSR set to: 1
 11054                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11055   0048C6  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 11056   0048CA  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 11057   0048CE  EE20 F004          	lfsr	2,4
 11058   0048D2  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 11059   0048D4  26D9               	addwf	fsr2l,f,c
 11060   0048D6  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11061   0048D8  22DA               	addwfc	fsr2h,f,c
 11062   0048DA  50DF               	movf	indf2,w,c
 11063   0048DC  0100               	movlb	0	; () banked
 11064   0048DE  6FA7               	movwf	sendMessage4@data3& (0+255),b
 11065   0048E0  C1FB  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11066   0048E4  0E97               	movlw	151
 11067   0048E6  EC64  F05F         	call	_sendMessage4
 11068                           
 11069                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x00].asUint++;
 11070   0048EA  0101               	movlb	1	; () banked
 11071   0048EC  4BAC               	infsnz	_nvDiagnostics& (0+255),f,b
 11072   0048EE  2BAD               	incf	(_nvDiagnostics+1)& (0+255),f,b
 11073   0048F0  D6CB               	goto	l23541
 11074   0048F2                     l23645:
 11075                           
 11076                           ; BSR set to: 0
 11077   0048F2  0101               	movlb	1	; () banked
 11078   0048F4  EE20 F001          	lfsr	2,1
 11079   0048F8  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 11080   0048FA  26D9               	addwf	fsr2l,f,c
 11081   0048FC  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11082   0048FE  22DA               	addwfc	fsr2h,f,c
 11083   004900  50DF               	movf	indf2,w,c
 11084   004902  6FF9               	movwf	??_nvProcessMessage& (0+255),b
 11085   004904  6BFA               	clrf	(??_nvProcessMessage+1)& (0+255),b
 11086                           
 11087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11088                           ; Switch size 1, requested type "simple"
 11089                           ; Number of cases is 1, Range of values is 0 to 0
 11090                           ; switch strategies available:
 11091                           ; Name         Instructions Cycles
 11092                           ; simple_byte            4     3 (average)
 11093                           ;	Chosen strategy is simple_byte
 11094   004906  51FA               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 11095   004908  0A00               	xorlw	0	; case 0
 11096   00490A  A4D8               	btfss	status,2,c
 11097   00490C  D680               	goto	u25280
 11098                           
 11099                           ; BSR set to: 1
 11100                           ; Switch size 1, requested type "simple"
 11101                           ; Number of cases is 3, Range of values is 113 to 150
 11102                           ; switch strategies available:
 11103                           ; Name         Instructions Cycles
 11104                           ; simple_byte           10     6 (average)
 11105                           ;	Chosen strategy is simple_byte
 11106   00490E  51F9               	movf	??_nvProcessMessage& (0+255),w,b
 11107   004910  0A71               	xorlw	113	; case 113
 11108   004912  B4D8               	btfsc	status,2,c
 11109   004914  D697               	goto	l23535
 11110   004916  0AFF               	xorlw	255	; case 142
 11111   004918  B4D8               	btfsc	status,2,c
 11112   00491A  D760               	goto	l23597
 11113   00491C  0A18               	xorlw	24	; case 150
 11114   00491E  B4D8               	btfsc	status,2,c
 11115   004920  D70B               	goto	l23569
 11116   004922  D675               	goto	u25280
 11117   004924                     __end_of_nvProcessMessage:
 11118                           	callstack 0
 11119                           
 11120 ;; *************** function _mnsProcessMessage *****************
 11121 ;; Defined at:
 11122 ;;		line 346 in file "../../VLCBlib_PIC/mns.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  m               2   63[BANK1 ] PTR struct Message
 11125 ;;		 -> poll@m(9), 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;  d               2   66[BANK1 ] PTR struct DiagnosticVal
 11128 ;;		 -> producerDiagnostics(2), teachDiagnostics(2), canDiagnostics(32), nvDiagnostics(4), 
 11129 ;;		 -> mnsDiagnostics(12), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 11130 ;;  newMode         1   68[BANK1 ] unsigned char 
 11131 ;;  i               1   65[BANK1 ] unsigned char 
 11132 ;;  flags           1    0        unsigned char 
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      enum E12793
 11135 ;; Registers used:
 11136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11142 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11143 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11144 ;;      Temps:          0       0       0       0      30       0       0       0       0       0       0       0       
      +0       0       0       0
 11145 ;;      Totals:         0       0       6       0      30       0       0       0       0       0       0       0       
      +0       0       0       0
 11146 ;;Total ram usage:       36 bytes
 11147 ;; Hardware stack levels used: 1
 11148 ;; Hardware stack levels required when called: 27
 11149 ;; This function calls:
 11150 ;;		NULL
 11151 ;;		_ackGetDiagnostic
 11152 ;;		_canEsdData
 11153 ;;		_canGetDiagnostic
 11154 ;;		_consumer2QEsdData
 11155 ;;		_consumer2QGetDiagnostic
 11156 ;;		_factoryReset
 11157 ;;		_findServiceIndex
 11158 ;;		_getParameter
 11159 ;;		_getParameterFlags
 11160 ;;		_mnsGetDiagnostic
 11161 ;;		_nvGetDiagnostic
 11162 ;;		_nvGetESDdata
 11163 ;;		_producerEsdData
 11164 ;;		_producerGetDiagnostic
 11165 ;;		_rebuildHashtable
 11166 ;;		_sendMessage2
 11167 ;;		_sendMessage3
 11168 ;;		_sendMessage4
 11169 ;;		_sendMessage5
 11170 ;;		_sendMessage6
 11171 ;;		_sendMessage7
 11172 ;;		_setLEDsByMode
 11173 ;;		_startTimedResponse
 11174 ;;		_teachGetDiagnostic
 11175 ;;		_teachGetESDdata
 11176 ;;		_writeNVM
 11177 ;; This function is called by:
 11178 ;;		_poll
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           	psect	text22
 11183   0016CE                     __ptext22:
 11184                           	callstack 0
 11185   0016CE                     _mnsProcessMessage:
 11186                           	callstack 2
 11187                           
 11188                           ;../../VLCBlib_PIC/mns.c: 347:     uint8_t i;;../../VLCBlib_PIC/mns.c: 348:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 350:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 355: 
      +                              if (mode_state == MODE_SETUP) {
 11189                           
 11190                           ;incstack = 0
 11191   0016CE  0100               	movlb	0	; () banked
 11192   0016D0  51C8               	movf	_mode_state& (0+255),w,b
 11193   0016D2  B4D8               	btfsc	status,2,c
 11194   0016D4  D0BC               	goto	l23103
 11195   0016D6  D127               	goto	l23149
 11196   0016D8                     l23059:
 11197                           
 11198                           ; BSR set to: 3
 11199                           ;../../VLCBlib_PIC/mns.c: 358:                 if (m->len < 3) {
 11200   0016D8  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11201   0016DC  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11202   0016E0  0E03               	movlw	3
 11203   0016E2  60DF               	cpfslt	indf2,c
 11204   0016E4  D00F               	goto	l23063
 11205                           
 11206                           ; BSR set to: 3
 11207                           ;../../VLCBlib_PIC/mns.c: 360:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11208   0016E6  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11209   0016EA  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11210   0016EE  0E71               	movlw	113
 11211   0016F0  0101               	movlb	1	; () banked
 11212   0016F2  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11213   0016F4  0E01               	movlw	1
 11214   0016F6  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11215   0016F8  0E01               	movlw	1
 11216   0016FA  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11217   0016FC  0EAF               	movlw	175
 11218   0016FE  EC35  F05F         	call	_sendMessage5
 11219                           
 11220                           ;../../VLCBlib_PIC/mns.c: 362:                 } else {
 11221   001702  D03C               	goto	l23079
 11222   001704                     l23063:
 11223                           
 11224                           ; BSR set to: 3
 11225                           ;../../VLCBlib_PIC/mns.c: 363:                     nn.bytes.hi = m->bytes[0];
 11226   001704  0101               	movlb	1	; () banked
 11227   001706  EE20 F002          	lfsr	2,2
 11228   00170A  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11229   00170C  26D9               	addwf	fsr2l,f,c
 11230   00170E  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11231   001710  22DA               	addwfc	fsr2h,f,c
 11232   001712  50DF               	movf	indf2,w,c
 11233   001714  0100               	movlb	0	; () banked
 11234   001716  6FC0               	movwf	(_nn+1)& (0+255),b
 11235                           
 11236                           ;../../VLCBlib_PIC/mns.c: 364:                     nn.bytes.lo = m->bytes[1];
 11237   001718  0101               	movlb	1	; () banked
 11238   00171A  EE20 F003          	lfsr	2,3
 11239   00171E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11240   001720  26D9               	addwf	fsr2l,f,c
 11241   001722  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11242   001724  22DA               	addwfc	fsr2h,f,c
 11243   001726  50DF               	movf	indf2,w,c
 11244   001728  0100               	movlb	0	; () banked
 11245   00172A  6FBF               	movwf	_nn& (0+255),b
 11246                           
 11247                           ; BSR set to: 0
 11248                           ;../../VLCBlib_PIC/mns.c: 365:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.hi);
 11249   00172C  0EFC               	movlw	252
 11250   00172E  6FA4               	movwf	writeNVM@index& (0+255),b
 11251   001730  0E03               	movlw	3
 11252   001732  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11253   001734  0E00               	movlw	0
 11254   001736  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11255   001738  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 11256   00173C  0E00               	movlw	0
 11257   00173E  EC52  F05B         	call	_writeNVM
 11258                           
 11259                           ;../../VLCBlib_PIC/mns.c: 366:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.lo);
 11260   001742  0EFD               	movlw	253
 11261   001744  0100               	movlb	0	; () banked
 11262   001746  6FA4               	movwf	writeNVM@index& (0+255),b
 11263   001748  0E03               	movlw	3
 11264   00174A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11265   00174C  0E00               	movlw	0
 11266   00174E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11267   001750  C0BF  F0A7         	movff	_nn,writeNVM@value
 11268   001754  0E00               	movlw	0
 11269   001756  EC52  F05B         	call	_writeNVM
 11270                           
 11271                           ;../../VLCBlib_PIC/mns.c: 368:                     mode_state = MODE_NORMAL;
 11272   00175A  0E01               	movlw	1
 11273   00175C  0100               	movlb	0	; () banked
 11274   00175E  6FC8               	movwf	_mode_state& (0+255),b
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;../../VLCBlib_PIC/mns.c: 371:                     rebuildHashtable();
 11278   001760  EC40  F03E         	call	_rebuildHashtable	;wreg free
 11279                           
 11280                           ;../../VLCBlib_PIC/mns.c: 374:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 11281   001764  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 11282   001768  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 11283   00176C  0E52               	movlw	82
 11284   00176E  EC05  F05F         	call	_sendMessage2
 11285                           
 11286                           ;../../VLCBlib_PIC/mns.c: 376:                     mnsDiagnostics[0x04].asUint++;
 11287   001772  0101               	movlb	1	; () banked
 11288   001774  4B9F               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 11289   001776  2BA0               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 11290   001778                     l23077:
 11291                           
 11292                           ;../../VLCBlib_PIC/mns.c: 379:                     setLEDsByMode();
 11293   001778  EC91  F05F         	call	_setLEDsByMode	;wreg free
 11294   00177C                     l23079:
 11295                           
 11296                           ;../../VLCBlib_PIC/mns.c: 381:                 return PROCESSED;
 11297   00177C  0E01               	movlw	1
 11298   00177E  0012               	return	
 11299   001780                     l23083:
 11300                           
 11301                           ; BSR set to: 3
 11302                           ;../../VLCBlib_PIC/mns.c: 383:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 11303   001780  0EA5               	movlw	165
 11304   001782  0101               	movlb	1	; () banked
 11305   001784  6FC0               	movwf	sendMessage7@data1& (0+255),b
 11306   001786  0E61               	movlw	97
 11307   001788  6FC1               	movwf	sendMessage7@data2& (0+255),b
 11308   00178A  0E20               	movlw	32
 11309   00178C  6FC2               	movwf	sendMessage7@data3& (0+255),b
 11310   00178E  0EFF               	movlw	255
 11311   001790  6FC3               	movwf	sendMessage7@data4& (0+255),b
 11312   001792  0E14               	movlw	20
 11313   001794  6FC4               	movwf	sendMessage7@data5& (0+255),b
 11314   001796  0E7F               	movlw	127
 11315   001798  6FC5               	movwf	sendMessage7@data6& (0+255),b
 11316   00179A  0E04               	movlw	4
 11317   00179C  6FC6               	movwf	sendMessage7@data7& (0+255),b
 11318   00179E  0EEF               	movlw	239
 11319   0017A0  EC1D  F05F         	call	_sendMessage7
 11320   0017A4  D7EB               	goto	l23079
 11321   0017A6                     l23089:
 11322                           
 11323                           ; BSR set to: 3
 11324                           ;../../VLCBlib_PIC/mns.c: 388:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 11325   0017A6  0E48               	movlw	72
 11326   0017A8  6EF6               	movwf	tblptrl,c
 11327   0017AA                     	if	1	;There is more than 1 active tblptr byte
 11328   0017AA  0E08               	movlw	8
 11329   0017AC  6EF7               	movwf	tblptrh,c
 11330   0017AE                     	endif
 11331   0017AE                     	if	1	;There are 3 active tblptr bytes
 11332   0017AE  0E00               	movlw	0
 11333   0017B0  6EF8               	movwf	tblptru,c
 11334   0017B2                     	endif
 11335   0017B2  0008               	tblrd		*
 11336   0017B4  CFF5 F1C0          	movff	tablat,sendMessage7@data1
 11337   0017B8  0E49               	movlw	73
 11338   0017BA  6EF6               	movwf	tblptrl,c
 11339   0017BC  0E08               	movlw	8
 11340   0017BE  6EF7               	movwf	tblptrh,c
 11341   0017C0  0E00               	movlw	0
 11342   0017C2  6EF8               	movwf	tblptru,c
 11343   0017C4  0008               	tblrd		*
 11344   0017C6  CFF5 F1C1          	movff	tablat,sendMessage7@data2
 11345   0017CA  0E4A               	movlw	74
 11346   0017CC  6EF6               	movwf	tblptrl,c
 11347   0017CE  0E08               	movlw	8
 11348   0017D0  6EF7               	movwf	tblptrh,c
 11349   0017D2  0E00               	movlw	0
 11350   0017D4  6EF8               	movwf	tblptru,c
 11351   0017D6  0008               	tblrd		*
 11352   0017D8  CFF5 F1C2          	movff	tablat,sendMessage7@data3
 11353   0017DC  0E4B               	movlw	75
 11354   0017DE  6EF6               	movwf	tblptrl,c
 11355   0017E0  0E08               	movlw	8
 11356   0017E2  6EF7               	movwf	tblptrh,c
 11357   0017E4  0E00               	movlw	0
 11358   0017E6  6EF8               	movwf	tblptru,c
 11359   0017E8  0008               	tblrd		*
 11360   0017EA  CFF5 F1C3          	movff	tablat,sendMessage7@data4
 11361   0017EE  0E4C               	movlw	76
 11362   0017F0  6EF6               	movwf	tblptrl,c
 11363   0017F2  0E08               	movlw	8
 11364   0017F4  6EF7               	movwf	tblptrh,c
 11365   0017F6  0E00               	movlw	0
 11366   0017F8  6EF8               	movwf	tblptru,c
 11367   0017FA  0008               	tblrd		*
 11368   0017FC  CFF5 F1C4          	movff	tablat,sendMessage7@data5
 11369   001800  0E4D               	movlw	77
 11370   001802  6EF6               	movwf	tblptrl,c
 11371   001804  0E08               	movlw	8
 11372   001806  6EF7               	movwf	tblptrh,c
 11373   001808  0E00               	movlw	0
 11374   00180A  6EF8               	movwf	tblptru,c
 11375   00180C  0008               	tblrd		*
 11376   00180E  CFF5 F1C5          	movff	tablat,sendMessage7@data6
 11377   001812  0E4E               	movlw	78
 11378   001814  6EF6               	movwf	tblptrl,c
 11379   001816  0E08               	movlw	8
 11380   001818  6EF7               	movwf	tblptrh,c
 11381   00181A  0E00               	movlw	0
 11382   00181C  6EF8               	movwf	tblptru,c
 11383   00181E  0008               	tblrd		*
 11384   001820  CFF5 F1C6          	movff	tablat,sendMessage7@data7
 11385   001824  0EE2               	movlw	226
 11386   001826  EC1D  F05F         	call	_sendMessage7
 11387   00182A  D7A8               	goto	l23079
 11388   00182C                     l23095:
 11389                           
 11390                           ; BSR set to: 3
 11391                           ;../../VLCBlib_PIC/mns.c: 392:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 11392   00182C  0E00               	movlw	0
 11393   00182E  0101               	movlb	1	; () banked
 11394   001830  6FC0               	movwf	sendMessage5@data1& (0+255),b
 11395   001832  0E00               	movlw	0
 11396   001834  6FC1               	movwf	sendMessage5@data2& (0+255),b
 11397   001836  0EA5               	movlw	165
 11398   001838  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11399   00183A  0E20               	movlw	32
 11400   00183C  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11401   00183E  ECAA  F059         	call	_getParameterFlags	;wreg free
 11402   001842  0101               	movlb	1	; () banked
 11403   001844  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11404   001846  0EB6               	movlw	182
 11405   001848  EC35  F05F         	call	_sendMessage5
 11406   00184C  D797               	goto	l23079
 11407   00184E                     l23103:
 11408                           
 11409                           ; BSR set to: 0
 11410   00184E  0101               	movlb	1	; () banked
 11411   001850  EE20 F001          	lfsr	2,1
 11412   001854  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11413   001856  26D9               	addwf	fsr2l,f,c
 11414   001858  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11415   00185A  22DA               	addwfc	fsr2h,f,c
 11416   00185C  50DF               	movf	indf2,w,c
 11417   00185E  0103               	movlb	3	; () banked
 11418   001860  6FC7               	movwf	??_mnsProcessMessage& (0+255),b
 11419   001862  6BC8               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11420                           
 11421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11422                           ; Switch size 1, requested type "simple"
 11423                           ; Number of cases is 1, Range of values is 0 to 0
 11424                           ; switch strategies available:
 11425                           ; Name         Instructions Cycles
 11426                           ; simple_byte            4     3 (average)
 11427                           ;	Chosen strategy is simple_byte
 11428   001864  51C8               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11429   001866  0A00               	xorlw	0	; case 0
 11430   001868  A4D8               	btfss	status,2,c
 11431   00186A  D00D               	goto	l23105
 11432                           
 11433                           ; BSR set to: 3
 11434                           ; Switch size 1, requested type "simple"
 11435                           ; Number of cases is 4, Range of values is 13 to 66
 11436                           ; switch strategies available:
 11437                           ; Name         Instructions Cycles
 11438                           ; simple_byte           13     7 (average)
 11439                           ;	Chosen strategy is simple_byte
 11440   00186C  51C7               	movf	??_mnsProcessMessage& (0+255),w,b
 11441   00186E  0A0D               	xorlw	13	; case 13
 11442   001870  B4D8               	btfsc	status,2,c
 11443   001872  D7DC               	goto	l23095
 11444   001874  0A1D               	xorlw	29	; case 16
 11445   001876  B4D8               	btfsc	status,2,c
 11446   001878  D783               	goto	l23083
 11447   00187A  0A01               	xorlw	1	; case 17
 11448   00187C  B4D8               	btfsc	status,2,c
 11449   00187E  D793               	goto	l23089
 11450   001880  0A53               	xorlw	83	; case 66
 11451   001882  B4D8               	btfsc	status,2,c
 11452   001884  D729               	goto	l23059
 11453   001886                     l23105:
 11454                           
 11455                           ;../../VLCBlib_PIC/mns.c: 397:         return NOT_PROCESSED;
 11456   001886  0E00               	movlw	0
 11457   001888  0012               	return	
 11458   00188A                     l23109:
 11459                           
 11460                           ; BSR set to: 3
 11461                           ;../../VLCBlib_PIC/mns.c: 402:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11462   00188A  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11463   00188E  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11464   001892  0EA5               	movlw	165
 11465   001894  0101               	movlb	1	; () banked
 11466   001896  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11467   001898  0E20               	movlw	32
 11468   00189A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11469   00189C  ECAA  F059         	call	_getParameterFlags	;wreg free
 11470   0018A0  0101               	movlb	1	; () banked
 11471   0018A2  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11472   0018A4  0EB6               	movlw	182
 11473   0018A6  EC35  F05F         	call	_sendMessage5
 11474   0018AA  D768               	goto	l23079
 11475   0018AC                     l23115:
 11476                           
 11477                           ; BSR set to: 3
 11478                           ;../../VLCBlib_PIC/mns.c: 406:             if (m->len < 4) {
 11479   0018AC  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11480   0018B0  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11481   0018B4  0E04               	movlw	4
 11482   0018B6  60DF               	cpfslt	indf2,c
 11483   0018B8  D00F               	goto	l23123
 11484                           
 11485                           ; BSR set to: 3
 11486                           ;../../VLCBlib_PIC/mns.c: 407:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11487   0018BA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11488   0018BE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11489   0018C2  0E76               	movlw	118
 11490   0018C4  0101               	movlb	1	; () banked
 11491   0018C6  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11492   0018C8  0E01               	movlw	1
 11493   0018CA  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11494   0018CC  0E01               	movlw	1
 11495   0018CE  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11496   0018D0  0EAF               	movlw	175
 11497   0018D2  EC35  F05F         	call	_sendMessage5
 11498   0018D6  D752               	goto	l23079
 11499   0018D8                     l23123:
 11500                           
 11501                           ; BSR set to: 3
 11502                           ;../../VLCBlib_PIC/mns.c: 410:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11503   0018D8  0101               	movlb	1	; () banked
 11504   0018DA  EE20 F002          	lfsr	2,2
 11505   0018DE  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11506   0018E0  26D9               	addwf	fsr2l,f,c
 11507   0018E2  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11508   0018E4  22DA               	addwfc	fsr2h,f,c
 11509   0018E6  50DF               	movf	indf2,w,c
 11510   0018E8  A4D8               	btfss	status,2,c
 11511   0018EA  D033               	goto	l23151
 11512                           
 11513                           ; BSR set to: 1
 11514   0018EC  EE20 F003          	lfsr	2,3
 11515   0018F0  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11516   0018F2  26D9               	addwf	fsr2l,f,c
 11517   0018F4  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11518   0018F6  22DA               	addwfc	fsr2h,f,c
 11519   0018F8  50DF               	movf	indf2,w,c
 11520   0018FA  A4D8               	btfss	status,2,c
 11521   0018FC  D02A               	goto	l23151
 11522                           
 11523                           ; BSR set to: 1
 11524                           ;../../VLCBlib_PIC/mns.c: 411:                 newMode = m->bytes[2];
 11525   0018FE  EE20 F004          	lfsr	2,4
 11526   001902  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11527   001904  26D9               	addwf	fsr2l,f,c
 11528   001906  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11529   001908  22DA               	addwfc	fsr2h,f,c
 11530   00190A  50DF               	movf	indf2,w,c
 11531   00190C  6FFC               	movwf	mnsProcessMessage@newMode& (0+255),b
 11532                           
 11533                           ; BSR set to: 1
 11534                           ;../../VLCBlib_PIC/mns.c: 413:                 if (newMode == MODE_HEARTBEAT_ON) {
 11535   00190E  0E0C               	movlw	12
 11536   001910  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11537   001912  A4D8               	btfss	status,2,c
 11538   001914  D002               	goto	l23139
 11539                           
 11540                           ; BSR set to: 1
 11541                           ;../../VLCBlib_PIC/mns.c: 414:                     mode_flags |= 4;
 11542   001916  8576               	bsf	_mode_flags& (0+255),2,b
 11543   001918  D731               	goto	l23079
 11544   00191A                     l23139:
 11545                           
 11546                           ; BSR set to: 1
 11547   00191A  0E0D               	movlw	13
 11548   00191C  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11549   00191E  A4D8               	btfss	status,2,c
 11550   001920  D018               	goto	l23151
 11551                           
 11552                           ; BSR set to: 1
 11553                           ;../../VLCBlib_PIC/mns.c: 418:                     mode_flags &= ~4;
 11554   001922  9576               	bcf	_mode_flags& (0+255),2,b
 11555   001924  D72B               	goto	l23079
 11556   001926                     l23149:
 11557                           
 11558                           ; BSR set to: 0
 11559   001926  0101               	movlb	1	; () banked
 11560   001928  EE20 F001          	lfsr	2,1
 11561   00192C  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11562   00192E  26D9               	addwf	fsr2l,f,c
 11563   001930  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11564   001932  22DA               	addwfc	fsr2h,f,c
 11565   001934  50DF               	movf	indf2,w,c
 11566   001936  0103               	movlb	3	; () banked
 11567   001938  6FC7               	movwf	??_mnsProcessMessage& (0+255),b
 11568   00193A  6BC8               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11569                           
 11570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11571                           ; Switch size 1, requested type "simple"
 11572                           ; Number of cases is 1, Range of values is 0 to 0
 11573                           ; switch strategies available:
 11574                           ; Name         Instructions Cycles
 11575                           ; simple_byte            4     3 (average)
 11576                           ;	Chosen strategy is simple_byte
 11577   00193C  51C8               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11578   00193E  0A00               	xorlw	0	; case 0
 11579   001940  A4D8               	btfss	status,2,c
 11580   001942  D007               	goto	l23151
 11581                           
 11582                           ; BSR set to: 3
 11583                           ; Switch size 1, requested type "simple"
 11584                           ; Number of cases is 2, Range of values is 13 to 118
 11585                           ; switch strategies available:
 11586                           ; Name         Instructions Cycles
 11587                           ; simple_byte            7     4 (average)
 11588                           ;	Chosen strategy is simple_byte
 11589   001944  51C7               	movf	??_mnsProcessMessage& (0+255),w,b
 11590   001946  0A0D               	xorlw	13	; case 13
 11591   001948  B4D8               	btfsc	status,2,c
 11592   00194A  D79F               	goto	l23109
 11593   00194C  0A7B               	xorlw	123	; case 118
 11594   00194E  B4D8               	btfsc	status,2,c
 11595   001950  D7AD               	goto	l23115
 11596   001952                     l23151:
 11597                           
 11598                           ;../../VLCBlib_PIC/mns.c: 428:     if (m->len < 3) {
 11599   001952  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11600   001956  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11601   00195A  0E03               	movlw	3
 11602   00195C  60DF               	cpfslt	indf2,c
 11603   00195E  D001               	goto	l23157
 11604   001960  D792               	goto	l23105
 11605   001962                     l23157:
 11606                           
 11607                           ;../../VLCBlib_PIC/mns.c: 432:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11608   001962  0101               	movlb	1	; () banked
 11609   001964  EE20 F002          	lfsr	2,2
 11610   001968  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11611   00196A  26D9               	addwf	fsr2l,f,c
 11612   00196C  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11613   00196E  22DA               	addwfc	fsr2h,f,c
 11614   001970  50DE               	movf	postinc2,w,c
 11615   001972  0100               	movlb	0	; () banked
 11616   001974  19C0               	xorwf	(_nn+1)& (0+255),w,b
 11617   001976  A4D8               	btfss	status,2,c
 11618   001978  D786               	goto	l23105
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;../../VLCBlib_PIC/mns.c: 433:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11622   00197A  0101               	movlb	1	; () banked
 11623   00197C  EE20 F003          	lfsr	2,3
 11624   001980  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11625   001982  26D9               	addwf	fsr2l,f,c
 11626   001984  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11627   001986  22DA               	addwfc	fsr2h,f,c
 11628   001988  0100               	movlb	0	; () banked
 11629   00198A  51BF               	movf	_nn& (0+255),w,b
 11630   00198C  18DE               	xorwf	postinc2,w,c
 11631   00198E  A4D8               	btfss	status,2,c
 11632   001990  D77A               	goto	l23105
 11633   001992  EFDA  F010         	goto	l23371
 11634   001996                     l23169:
 11635                           
 11636                           ; BSR set to: 3
 11637                           ;../../VLCBlib_PIC/mns.c: 437:             if (m->len < 4) {
 11638   001996  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11639   00199A  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11640   00199E  0E04               	movlw	4
 11641   0019A0  60DF               	cpfslt	indf2,c
 11642   0019A2  D00F               	goto	l23177
 11643                           
 11644                           ; BSR set to: 3
 11645                           ;../../VLCBlib_PIC/mns.c: 439:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11646   0019A4  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11647   0019A8  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11648   0019AC  0E73               	movlw	115
 11649   0019AE  0101               	movlb	1	; () banked
 11650   0019B0  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11651   0019B2  0E01               	movlw	1
 11652   0019B4  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11653   0019B6  0E01               	movlw	1
 11654   0019B8  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11655   0019BA  0EAF               	movlw	175
 11656   0019BC  EC35  F05F         	call	_sendMessage5
 11657   0019C0  D6DD               	goto	l23079
 11658   0019C2                     l23177:
 11659                           
 11660                           ; BSR set to: 3
 11661                           ;../../VLCBlib_PIC/mns.c: 443:             if (m->bytes[2] > 20) {
 11662   0019C2  0101               	movlb	1	; () banked
 11663   0019C4  EE20 F004          	lfsr	2,4
 11664   0019C8  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11665   0019CA  26D9               	addwf	fsr2l,f,c
 11666   0019CC  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11667   0019CE  22DA               	addwfc	fsr2h,f,c
 11668   0019D0  0E14               	movlw	20
 11669   0019D2  64DF               	cpfsgt	indf2,c
 11670   0019D4  D019               	goto	l23185
 11671                           
 11672                           ; BSR set to: 1
 11673                           ;../../VLCBlib_PIC/mns.c: 444:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 11674   0019D6  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 11675   0019DA  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 11676   0019DE  0E09               	movlw	9
 11677   0019E0  0100               	movlb	0	; () banked
 11678   0019E2  6FA7               	movwf	sendMessage3@data3& (0+255),b
 11679   0019E4  0E6F               	movlw	111
 11680   0019E6  ECED  F05E         	call	_sendMessage3
 11681                           
 11682                           ;../../VLCBlib_PIC/mns.c: 446:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 11683   0019EA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11684   0019EE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11685   0019F2  0E73               	movlw	115
 11686   0019F4  0101               	movlb	1	; () banked
 11687   0019F6  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11688   0019F8  0E01               	movlw	1
 11689   0019FA  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11690   0019FC  0E09               	movlw	9
 11691   0019FE  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11692   001A00  0EAF               	movlw	175
 11693   001A02  EC35  F05F         	call	_sendMessage5
 11694   001A06  D6BA               	goto	l23079
 11695   001A08                     l23185:
 11696                           
 11697                           ; BSR set to: 1
 11698                           ;../../VLCBlib_PIC/mns.c: 450:             i = getParameter(m->bytes[2]);
 11699   001A08  EE20 F004          	lfsr	2,4
 11700   001A0C  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11701   001A0E  26D9               	addwf	fsr2l,f,c
 11702   001A10  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11703   001A12  22DA               	addwfc	fsr2h,f,c
 11704   001A14  50DF               	movf	indf2,w,c
 11705   001A16  EC2E  F043         	call	_getParameter
 11706   001A1A  0101               	movlb	1	; () banked
 11707   001A1C  6FF9               	movwf	mnsProcessMessage@i& (0+255),b
 11708                           
 11709                           ; BSR set to: 1
 11710                           ;../../VLCBlib_PIC/mns.c: 451:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 11711   001A1E  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 11712   001A22  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 11713   001A26  EE20 F004          	lfsr	2,4
 11714   001A2A  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11715   001A2C  26D9               	addwf	fsr2l,f,c
 11716   001A2E  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11717   001A30  22DA               	addwfc	fsr2h,f,c
 11718   001A32  50DF               	movf	indf2,w,c
 11719   001A34  0100               	movlb	0	; () banked
 11720   001A36  6FA7               	movwf	sendMessage4@data3& (0+255),b
 11721   001A38  C1F9  F0A8         	movff	mnsProcessMessage@i,sendMessage4@data4
 11722   001A3C  0E9B               	movlw	155
 11723   001A3E  EC64  F05F         	call	_sendMessage4
 11724                           
 11725                           ;../../VLCBlib_PIC/mns.c: 453:             if (m->bytes[2] == 0) {
 11726   001A42  0101               	movlb	1	; () banked
 11727   001A44  EE20 F004          	lfsr	2,4
 11728   001A48  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11729   001A4A  26D9               	addwf	fsr2l,f,c
 11730   001A4C  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11731   001A4E  22DA               	addwfc	fsr2h,f,c
 11732   001A50  50DF               	movf	indf2,w,c
 11733   001A52  A4D8               	btfss	status,2,c
 11734   001A54  D693               	goto	l23079
 11735                           
 11736                           ; BSR set to: 1
 11737                           ;../../VLCBlib_PIC/mns.c: 454:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 11738   001A56  0E01               	movlw	1
 11739   001A58  ECB4  F055         	call	_findServiceIndex
 11740   001A5C  0100               	movlb	0	; () banked
 11741   001A5E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11742   001A60  0E7A               	movlw	low _mnsTRrqnpnCallback
 11743   001A62  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11744   001A64  0EBD               	movlw	high _mnsTRrqnpnCallback
 11745   001A66  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11746   001A68  0E07               	movlw	7
 11747   001A6A  ECE3  F05C         	call	_startTimedResponse
 11748   001A6E  D686               	goto	l23079
 11749   001A70                     l1444:
 11750                           
 11751                           ; BSR set to: 3
 11752                           ;../../VLCBlib_PIC/mns.c: 459:             previousNN.word = nn.word;
 11753   001A70  C0BF  F170         	movff	_nn,_previousNN
 11754   001A74  C0C0  F171         	movff	_nn+1,_previousNN+1
 11755                           
 11756                           ; BSR set to: 3
 11757                           ;../../VLCBlib_PIC/mns.c: 460:             factoryReset();
 11758   001A78  EC49  F042         	call	_factoryReset	;wreg free
 11759                           
 11760                           ;../../VLCBlib_PIC/mns.c: 461:             if (previousNN.word != 0) {
 11761   001A7C  0101               	movlb	1	; () banked
 11762   001A7E  5170               	movf	_previousNN& (0+255),w,b
 11763   001A80  1171               	iorwf	(_previousNN+1)& (0+255),w,b
 11764   001A82  B4D8               	btfsc	status,2,c
 11765   001A84  D67B               	goto	l23079
 11766                           
 11767                           ; BSR set to: 1
 11768                           ;../../VLCBlib_PIC/mns.c: 462:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 11769   001A86  C171  F0A5         	movff	_previousNN+1,sendMessage2@data1
 11770   001A8A  C170  F0A6         	movff	_previousNN,sendMessage2@data2
 11771   001A8E  0E51               	movlw	81
 11772   001A90  EC05  F05F         	call	_sendMessage2
 11773   001A94  D673               	goto	l23079
 11774   001A96                     l23207:
 11775                           
 11776                           ; BSR set to: 3
 11777                           ;../../VLCBlib_PIC/mns.c: 467:             if (m->len < 5) {
 11778   001A96  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11779   001A9A  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11780   001A9E  0E05               	movlw	5
 11781   001AA0  60DF               	cpfslt	indf2,c
 11782   001AA2  D00F               	goto	l23215
 11783                           
 11784                           ; BSR set to: 3
 11785                           ;../../VLCBlib_PIC/mns.c: 468:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11786   001AA4  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11787   001AA8  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11788   001AAC  0E87               	movlw	135
 11789   001AAE  0101               	movlb	1	; () banked
 11790   001AB0  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11791   001AB2  0E01               	movlw	1
 11792   001AB4  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11793   001AB6  0E01               	movlw	1
 11794   001AB8  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11795   001ABA  0EAF               	movlw	175
 11796   001ABC  EC35  F05F         	call	_sendMessage5
 11797   001AC0  D65D               	goto	l23079
 11798   001AC2                     l23215:
 11799                           
 11800                           ; BSR set to: 3
 11801                           ;../../VLCBlib_PIC/mns.c: 471:             if (m->bytes[2] == 0) {
 11802   001AC2  0101               	movlb	1	; () banked
 11803   001AC4  EE20 F004          	lfsr	2,4
 11804   001AC8  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11805   001ACA  26D9               	addwf	fsr2l,f,c
 11806   001ACC  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11807   001ACE  22DA               	addwfc	fsr2h,f,c
 11808   001AD0  50DF               	movf	indf2,w,c
 11809   001AD2  A4D8               	btfss	status,2,c
 11810   001AD4  D00B               	goto	l23219
 11811                           
 11812                           ; BSR set to: 1
 11813                           ;../../VLCBlib_PIC/mns.c: 473:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 11814   001AD6  0E00               	movlw	0
 11815   001AD8  0100               	movlb	0	; () banked
 11816   001ADA  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11817   001ADC  0EAC               	movlw	low _mnsTRallDiagnosticsCallback
 11818   001ADE  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11819   001AE0  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 11820   001AE2  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11821   001AE4  0E04               	movlw	4
 11822   001AE6  ECE3  F05C         	call	_startTimedResponse
 11823                           
 11824                           ;../../VLCBlib_PIC/mns.c: 474:             } else {
 11825   001AEA  D648               	goto	l23079
 11826   001AEC                     l23219:
 11827                           
 11828                           ; BSR set to: 1
 11829                           ;../../VLCBlib_PIC/mns.c: 476:                 if (m->bytes[2] > 9) {
 11830   001AEC  EE20 F004          	lfsr	2,4
 11831   001AF0  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11832   001AF2  26D9               	addwf	fsr2l,f,c
 11833   001AF4  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11834   001AF6  22DA               	addwfc	fsr2h,f,c
 11835   001AF8  0E09               	movlw	9
 11836   001AFA  64DF               	cpfsgt	indf2,c
 11837   001AFC  D00E               	goto	l23227
 11838                           
 11839                           ; BSR set to: 1
 11840                           ;../../VLCBlib_PIC/mns.c: 477:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 11841   001AFE  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11842   001B02  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11843   001B06  0E87               	movlw	135
 11844   001B08  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11845   001B0A  0E01               	movlw	1
 11846   001B0C  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11847   001B0E  0EFC               	movlw	252
 11848   001B10  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11849   001B12  0EAF               	movlw	175
 11850   001B14  EC35  F05F         	call	_sendMessage5
 11851   001B18  D631               	goto	l23079
 11852   001B1A                     l23227:
 11853                           
 11854                           ; BSR set to: 1
 11855                           ;../../VLCBlib_PIC/mns.c: 480:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 11856   001B1A  EE20 F004          	lfsr	2,4
 11857   001B1E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11858   001B20  26D9               	addwf	fsr2l,f,c
 11859   001B22  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11860   001B24  22DA               	addwfc	fsr2h,f,c
 11861   001B26  50DF               	movf	indf2,w,c
 11862   001B28  0103               	movlb	3	; () banked
 11863   001B2A  6FC7               	movwf	??_mnsProcessMessage& (0+255),b
 11864   001B2C  6BC8               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11865   001B2E  90D8               	bcf	status,0,c
 11866   001B30  37C7               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11867   001B32  37C8               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11868   001B34  0EFE               	movlw	254
 11869   001B36  25C7               	addwf	??_mnsProcessMessage& (0+255),w,b
 11870   001B38  6FC9               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11871   001B3A  0EFF               	movlw	255
 11872   001B3C  21C8               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11873   001B3E  6FCA               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11874   001B40  0E75               	movlw	low _services
 11875   001B42  25C9               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11876   001B44  6EF6               	movwf	tblptrl,c
 11877   001B46  0EEE               	movlw	high _services
 11878   001B48  21CA               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11879   001B4A  6EF7               	movwf	tblptrh,c
 11880   001B4C                     	if	1	;There are 3 active tblptr bytes
 11881   001B4C  6AF8               	clrf	tblptru,c
 11882   001B4E  0E00               	movlw	low (__mediumconst shr (0+16))
 11883   001B50  22F8               	addwfc	tblptru,f,c
 11884   001B52                     	endif
 11885   001B52  0009               	tblrd		*+
 11886   001B54  CFF5 F3CB          	movff	tablat,??_mnsProcessMessage+4
 11887   001B58  0009               	tblrd		*+
 11888   001B5A  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+5
 11889   001B5E  0E10               	movlw	16
 11890   001B60  27CB               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11891   001B62  0E00               	movlw	0
 11892   001B64  23CC               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11893   001B66  C3CB  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11894   001B6A  C3CC  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11895   001B6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11896   001B6E  6AF8               	clrf	tblptru,c
 11897   001B70                     	endif
 11898   001B70                     	if	0	;tblptru may be non-zero
 11899   001B70                     	endif
 11900   001B70  0009               	tblrd		*+
 11901   001B72  50F5               	movf	tablat,w,c
 11902   001B74  0009               	tblrd		*+
 11903   001B76  10F5               	iorwf	tablat,w,c
 11904   001B78  A4D8               	btfss	status,2,c
 11905   001B7A  D00E               	goto	l23231
 11906                           
 11907                           ; BSR set to: 3
 11908                           ;../../VLCBlib_PIC/mns.c: 482:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11909   001B7C  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11910   001B80  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11911   001B84  0E87               	movlw	135
 11912   001B86  0101               	movlb	1	; () banked
 11913   001B88  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11914   001B8A  0E01               	movlw	1
 11915   001B8C  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11916   001B8E  0EFD               	movlw	253
 11917   001B90  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11918   001B92  0EAF               	movlw	175
 11919   001B94  EC35  F05F         	call	_sendMessage5
 11920   001B98                     l23231:
 11921                           
 11922                           ;../../VLCBlib_PIC/mns.c: 484:                 if (m->bytes[3] == 0) {
 11923   001B98  0101               	movlb	1	; () banked
 11924   001B9A  EE20 F005          	lfsr	2,5
 11925   001B9E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11926   001BA0  26D9               	addwf	fsr2l,f,c
 11927   001BA2  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11928   001BA4  22DA               	addwfc	fsr2h,f,c
 11929   001BA6  50DF               	movf	indf2,w,c
 11930   001BA8  A4D8               	btfss	status,2,c
 11931   001BAA  D011               	goto	l23241
 11932                           
 11933                           ; BSR set to: 1
 11934                           ;../../VLCBlib_PIC/mns.c: 486:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 11935   001BAC  EE20 F004          	lfsr	2,4
 11936   001BB0  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11937   001BB2  26D9               	addwf	fsr2l,f,c
 11938   001BB4  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11939   001BB6  22DA               	addwfc	fsr2h,f,c
 11940   001BB8  50DF               	movf	indf2,w,c
 11941   001BBA  0100               	movlb	0	; () banked
 11942   001BBC  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11943   001BBE  0EAC               	movlw	low _mnsTRallDiagnosticsCallback
 11944   001BC0  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11945   001BC2  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 11946   001BC4  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11947   001BC6  0E04               	movlw	4
 11948   001BC8  ECE3  F05C         	call	_startTimedResponse
 11949   001BCC  D5D7               	goto	l23079
 11950   001BCE                     l23241:
 11951                           
 11952                           ; BSR set to: 1
 11953                           ;../../VLCBlib_PIC/mns.c: 489:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 11954   001BCE  EE20 F004          	lfsr	2,4
 11955   001BD2  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11956   001BD4  26D9               	addwf	fsr2l,f,c
 11957   001BD6  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11958   001BD8  22DA               	addwfc	fsr2h,f,c
 11959   001BDA  50DF               	movf	indf2,w,c
 11960   001BDC  0103               	movlb	3	; () banked
 11961   001BDE  6FC7               	movwf	??_mnsProcessMessage& (0+255),b
 11962   001BE0  6BC8               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11963   001BE2  90D8               	bcf	status,0,c
 11964   001BE4  37C7               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11965   001BE6  37C8               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11966   001BE8  0EFE               	movlw	254
 11967   001BEA  25C7               	addwf	??_mnsProcessMessage& (0+255),w,b
 11968   001BEC  6FC9               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11969   001BEE  0EFF               	movlw	255
 11970   001BF0  21C8               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11971   001BF2  6FCA               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11972   001BF4  0E75               	movlw	low _services
 11973   001BF6  25C9               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11974   001BF8  6EF6               	movwf	tblptrl,c
 11975   001BFA  0EEE               	movlw	high _services
 11976   001BFC  21CA               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11977   001BFE  6EF7               	movwf	tblptrh,c
 11978   001C00                     	if	1	;There are 3 active tblptr bytes
 11979   001C00  6AF8               	clrf	tblptru,c
 11980   001C02  0E00               	movlw	low (__mediumconst shr (0+16))
 11981   001C04  22F8               	addwfc	tblptru,f,c
 11982   001C06                     	endif
 11983   001C06  0009               	tblrd		*+
 11984   001C08  CFF5 F3CB          	movff	tablat,??_mnsProcessMessage+4
 11985   001C0C  0009               	tblrd		*+
 11986   001C0E  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+5
 11987   001C12  0E10               	movlw	16
 11988   001C14  27CB               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11989   001C16  0E00               	movlw	0
 11990   001C18  23CC               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11991   001C1A  C3CB  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11992   001C1E  C3CC  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11993   001C22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11994   001C22  6AF8               	clrf	tblptru,c
 11995   001C24                     	endif
 11996   001C24                     	if	0	;tblptru may be non-zero
 11997   001C24                     	endif
 11998   001C24  0009               	tblrd		*+
 11999   001C26  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+6
 12000   001C2A  0009               	tblrd		*+
 12001   001C2C  CFF5 F3CE          	movff	tablat,??_mnsProcessMessage+7
 12002   001C30  D801               	call	u24948
 12003   001C32  D011               	goto	u24949
 12004   001C34                     u24948:
 12005   001C34  0005               	push	
 12006   001C36  6EFA               	movwf	pclath,c
 12007   001C38  51CD               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 12008   001C3A  6EFD               	movwf	tosl,c
 12009   001C3C  51CE               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 12010   001C3E  6EFE               	movwf	tosh,c
 12011   001C40  6AFF               	clrf	tosu,c
 12012   001C42  50FA               	movf	pclath,w,c
 12013   001C44  0101               	movlb	1	; () banked
 12014   001C46  EE20 F005          	lfsr	2,5
 12015   001C4A  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12016   001C4C  26D9               	addwf	fsr2l,f,c
 12017   001C4E  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12018   001C50  22DA               	addwfc	fsr2h,f,c
 12019   001C52  50DF               	movf	indf2,w,c
 12020   001C54  0012               	return		;indir
 12021   001C56                     u24949:
 12022   001C56  C08D  F1FA         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 12023   001C5A  C08E  F1FB         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 12024                           
 12025                           ;../../VLCBlib_PIC/mns.c: 490:                     if (d == ((void*)0)) {
 12026   001C5E  0101               	movlb	1	; () banked
 12027   001C60  51FA               	movf	mnsProcessMessage@d& (0+255),w,b
 12028   001C62  11FB               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 12029   001C64  A4D8               	btfss	status,2,c
 12030   001C66  D00E               	goto	l23247
 12031                           
 12032                           ; BSR set to: 1
 12033                           ;../../VLCBlib_PIC/mns.c: 492:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 12034   001C68  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12035   001C6C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12036   001C70  0E87               	movlw	135
 12037   001C72  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12038   001C74  0E01               	movlw	1
 12039   001C76  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12040   001C78  0EFD               	movlw	253
 12041   001C7A  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12042   001C7C  0EAF               	movlw	175
 12043   001C7E  EC35  F05F         	call	_sendMessage5
 12044                           
 12045                           ;../../VLCBlib_PIC/mns.c: 493:                     } else {
 12046   001C82  D57C               	goto	l23079
 12047   001C84                     l23247:
 12048                           
 12049                           ; BSR set to: 1
 12050                           ;../../VLCBlib_PIC/mns.c: 495:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 12051   001C84  C0C0  F1C0         	movff	_nn+1,sendMessage6@data1
 12052   001C88  C0BF  F1C1         	movff	_nn,sendMessage6@data2
 12053   001C8C  EE20 F004          	lfsr	2,4
 12054   001C90  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12055   001C92  26D9               	addwf	fsr2l,f,c
 12056   001C94  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12057   001C96  22DA               	addwfc	fsr2h,f,c
 12058   001C98  50DF               	movf	indf2,w,c
 12059   001C9A  6FC2               	movwf	sendMessage6@data3& (0+255),b
 12060   001C9C  EE20 F005          	lfsr	2,5
 12061   001CA0  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12062   001CA2  26D9               	addwf	fsr2l,f,c
 12063   001CA4  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12064   001CA6  22DA               	addwfc	fsr2h,f,c
 12065   001CA8  50DF               	movf	indf2,w,c
 12066   001CAA  6FC3               	movwf	sendMessage6@data4& (0+255),b
 12067   001CAC  EE20 F001          	lfsr	2,1
 12068   001CB0  51FA               	movf	mnsProcessMessage@d& (0+255),w,b
 12069   001CB2  26D9               	addwf	fsr2l,f,c
 12070   001CB4  51FB               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 12071   001CB6  22DA               	addwfc	fsr2h,f,c
 12072   001CB8  50DF               	movf	indf2,w,c
 12073   001CBA  6FC4               	movwf	sendMessage6@data5& (0+255),b
 12074   001CBC  C1FA  FFD9         	movff	mnsProcessMessage@d,fsr2l
 12075   001CC0  C1FB  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 12076   001CC4  50DF               	movf	indf2,w,c
 12077   001CC6  6FC5               	movwf	sendMessage6@data6& (0+255),b
 12078   001CC8  0EC7               	movlw	199
 12079   001CCA  ECD5  F05E         	call	_sendMessage6
 12080   001CCE  D556               	goto	l23079
 12081   001CD0                     l23253:
 12082                           
 12083                           ; BSR set to: 3
 12084                           ;../../VLCBlib_PIC/mns.c: 503:             if (m->len < 4) {
 12085   001CD0  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12086   001CD4  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12087   001CD8  0E04               	movlw	4
 12088   001CDA  60DF               	cpfslt	indf2,c
 12089   001CDC  D00F               	goto	l23261
 12090                           
 12091                           ; BSR set to: 3
 12092                           ;../../VLCBlib_PIC/mns.c: 504:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12093   001CDE  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12094   001CE2  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12095   001CE6  0E78               	movlw	120
 12096   001CE8  0101               	movlb	1	; () banked
 12097   001CEA  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12098   001CEC  0E01               	movlw	1
 12099   001CEE  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12100   001CF0  0E01               	movlw	1
 12101   001CF2  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12102   001CF4  0EAF               	movlw	175
 12103   001CF6  EC35  F05F         	call	_sendMessage5
 12104   001CFA  D540               	goto	l23079
 12105   001CFC                     l23261:
 12106                           
 12107                           ; BSR set to: 3
 12108                           ;../../VLCBlib_PIC/mns.c: 507:             if (m->bytes[2] == 0) {
 12109   001CFC  0101               	movlb	1	; () banked
 12110   001CFE  EE20 F004          	lfsr	2,4
 12111   001D02  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12112   001D04  26D9               	addwf	fsr2l,f,c
 12113   001D06  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12114   001D08  22DA               	addwfc	fsr2h,f,c
 12115   001D0A  50DF               	movf	indf2,w,c
 12116   001D0C  A4D8               	btfss	status,2,c
 12117   001D0E  D018               	goto	l23267
 12118                           
 12119                           ; BSR set to: 1
 12120                           ;../../VLCBlib_PIC/mns.c: 509:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 12121   001D10  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12122   001D14  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12123   001D18  0E00               	movlw	0
 12124   001D1A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12125   001D1C  0E00               	movlw	0
 12126   001D1E  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12127   001D20  0E09               	movlw	9
 12128   001D22  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12129   001D24  0EAC               	movlw	172
 12130   001D26  EC35  F05F         	call	_sendMessage5
 12131                           
 12132                           ;../../VLCBlib_PIC/mns.c: 511:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 12133   001D2A  0E01               	movlw	1
 12134   001D2C  0100               	movlb	0	; () banked
 12135   001D2E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12136   001D30  0E62               	movlw	low _mnsTRserviceDiscoveryCallback
 12137   001D32  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12138   001D34  0EA2               	movlw	high _mnsTRserviceDiscoveryCallback
 12139   001D36  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12140   001D38  0E03               	movlw	3
 12141   001D3A  ECE3  F05C         	call	_startTimedResponse
 12142                           
 12143                           ;../../VLCBlib_PIC/mns.c: 512:             } else if (m->bytes[2] > 9) {
 12144   001D3E  D51E               	goto	l23079
 12145   001D40                     l23267:
 12146                           
 12147                           ; BSR set to: 1
 12148   001D40  EE20 F004          	lfsr	2,4
 12149   001D44  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12150   001D46  26D9               	addwf	fsr2l,f,c
 12151   001D48  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12152   001D4A  22DA               	addwfc	fsr2h,f,c
 12153   001D4C  0E09               	movlw	9
 12154   001D4E  64DF               	cpfsgt	indf2,c
 12155   001D50  D00E               	goto	l23277
 12156                           
 12157                           ; BSR set to: 1
 12158                           ;../../VLCBlib_PIC/mns.c: 513:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 12159   001D52  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12160   001D56  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12161   001D5A  0E78               	movlw	120
 12162   001D5C  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12163   001D5E  0E01               	movlw	1
 12164   001D60  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12165   001D62  0EFC               	movlw	252
 12166   001D64  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12167   001D66  0EAF               	movlw	175
 12168   001D68  EC35  F05F         	call	_sendMessage5
 12169   001D6C  D507               	goto	l23079
 12170   001D6E                     l23277:
 12171                           
 12172                           ; BSR set to: 1
 12173                           ;../../VLCBlib_PIC/mns.c: 517:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 12174   001D6E  EE20 F004          	lfsr	2,4
 12175   001D72  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12176   001D74  26D9               	addwf	fsr2l,f,c
 12177   001D76  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12178   001D78  22DA               	addwfc	fsr2h,f,c
 12179   001D7A  50DF               	movf	indf2,w,c
 12180   001D7C  0103               	movlb	3	; () banked
 12181   001D7E  6FC7               	movwf	??_mnsProcessMessage& (0+255),b
 12182   001D80  6BC8               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12183   001D82  90D8               	bcf	status,0,c
 12184   001D84  37C7               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12185   001D86  37C8               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12186   001D88  0EFE               	movlw	254
 12187   001D8A  25C7               	addwf	??_mnsProcessMessage& (0+255),w,b
 12188   001D8C  6FC9               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12189   001D8E  0EFF               	movlw	255
 12190   001D90  21C8               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12191   001D92  6FCA               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12192   001D94  0E75               	movlw	low _services
 12193   001D96  25C9               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12194   001D98  6EF6               	movwf	tblptrl,c
 12195   001D9A  0EEE               	movlw	high _services
 12196   001D9C  21CA               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12197   001D9E  6EF7               	movwf	tblptrh,c
 12198   001DA0                     	if	1	;There are 3 active tblptr bytes
 12199   001DA0  6AF8               	clrf	tblptru,c
 12200   001DA2  0E00               	movlw	low (__mediumconst shr (0+16))
 12201   001DA4  22F8               	addwfc	tblptru,f,c
 12202   001DA6                     	endif
 12203   001DA6  0009               	tblrd		*+
 12204   001DA8  CFF5 F3CB          	movff	tablat,??_mnsProcessMessage+4
 12205   001DAC  0009               	tblrd		*+
 12206   001DAE  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+5
 12207   001DB2  0E0E               	movlw	14
 12208   001DB4  27CB               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12209   001DB6  0E00               	movlw	0
 12210   001DB8  23CC               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12211   001DBA  C3CB  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12212   001DBE  C3CC  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12213   001DC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12214   001DC2  6AF8               	clrf	tblptru,c
 12215   001DC4                     	endif
 12216   001DC4                     	if	0	;tblptru may be non-zero
 12217   001DC4                     	endif
 12218   001DC4  0009               	tblrd		*+
 12219   001DC6  50F5               	movf	tablat,w,c
 12220   001DC8  0009               	tblrd		*+
 12221   001DCA  10F5               	iorwf	tablat,w,c
 12222   001DCC  A4D8               	btfss	status,2,c
 12223   001DCE  D042               	goto	l23281
 12224                           
 12225                           ; BSR set to: 3
 12226                           ;../../VLCBlib_PIC/mns.c: 518:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 12227   001DD0  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 12228   001DD4  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 12229   001DD8  0101               	movlb	1	; () banked
 12230   001DDA  EE20 F004          	lfsr	2,4
 12231   001DDE  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12232   001DE0  26D9               	addwf	fsr2l,f,c
 12233   001DE2  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12234   001DE4  22DA               	addwfc	fsr2h,f,c
 12235   001DE6  50DF               	movf	indf2,w,c
 12236   001DE8  6FC2               	movwf	sendMessage7@data3& (0+255),b
 12237   001DEA  EE20 F004          	lfsr	2,4
 12238   001DEE  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12239   001DF0  26D9               	addwf	fsr2l,f,c
 12240   001DF2  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12241   001DF4  22DA               	addwfc	fsr2h,f,c
 12242   001DF6  50DF               	movf	indf2,w,c
 12243   001DF8  0103               	movlb	3	; () banked
 12244   001DFA  6FC7               	movwf	??_mnsProcessMessage& (0+255),b
 12245   001DFC  6BC8               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12246   001DFE  90D8               	bcf	status,0,c
 12247   001E00  37C7               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12248   001E02  37C8               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12249   001E04  0EFE               	movlw	254
 12250   001E06  25C7               	addwf	??_mnsProcessMessage& (0+255),w,b
 12251   001E08  6FC9               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12252   001E0A  0EFF               	movlw	255
 12253   001E0C  21C8               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12254   001E0E  6FCA               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12255   001E10  0E75               	movlw	low _services
 12256   001E12  25C9               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12257   001E14  6EF6               	movwf	tblptrl,c
 12258   001E16  0EEE               	movlw	high _services
 12259   001E18  21CA               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12260   001E1A  6EF7               	movwf	tblptrh,c
 12261   001E1C                     	if	1	;There are 3 active tblptr bytes
 12262   001E1C  6AF8               	clrf	tblptru,c
 12263   001E1E  0E00               	movlw	low (__mediumconst shr (0+16))
 12264   001E20  22F8               	addwfc	tblptru,f,c
 12265   001E22                     	endif
 12266   001E22  0009               	tblrd		*+
 12267   001E24  CFF5 F3CB          	movff	tablat,??_mnsProcessMessage+4
 12268   001E28  0009               	tblrd		*+
 12269   001E2A  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+5
 12270   001E2E  C3CB  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12271   001E32  C3CC  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12272   001E36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12273   001E36  6AF8               	clrf	tblptru,c
 12274   001E38                     	endif
 12275   001E38                     	if	0	;tblptru may be non-zero
 12276   001E38                     	endif
 12277   001E38  0008               	tblrd		*
 12278   001E3A  CFF5 F1C3          	movff	tablat,sendMessage7@data4
 12279   001E3E  0E00               	movlw	0
 12280   001E40  0101               	movlb	1	; () banked
 12281   001E42  6FC4               	movwf	sendMessage7@data5& (0+255),b
 12282   001E44  0E00               	movlw	0
 12283   001E46  6FC5               	movwf	sendMessage7@data6& (0+255),b
 12284   001E48  0E00               	movlw	0
 12285   001E4A  6FC6               	movwf	sendMessage7@data7& (0+255),b
 12286   001E4C  0EE7               	movlw	231
 12287   001E4E  EC1D  F05F         	call	_sendMessage7
 12288                           
 12289                           ;../../VLCBlib_PIC/mns.c: 519:                 } else {
 12290   001E52  D494               	goto	l23079
 12291   001E54                     l23281:
 12292                           
 12293                           ; BSR set to: 3
 12294                           ;../../VLCBlib_PIC/mns.c: 520:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 12295   001E54  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 12296   001E58  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 12297   001E5C  0101               	movlb	1	; () banked
 12298   001E5E  EE20 F004          	lfsr	2,4
 12299   001E62  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12300   001E64  26D9               	addwf	fsr2l,f,c
 12301   001E66  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12302   001E68  22DA               	addwfc	fsr2h,f,c
 12303   001E6A  50DF               	movf	indf2,w,c
 12304   001E6C  6FC2               	movwf	sendMessage7@data3& (0+255),b
 12305   001E6E  EE20 F004          	lfsr	2,4
 12306   001E72  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12307   001E74  26D9               	addwf	fsr2l,f,c
 12308   001E76  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12309   001E78  22DA               	addwfc	fsr2h,f,c
 12310   001E7A  50DF               	movf	indf2,w,c
 12311   001E7C  0103               	movlb	3	; () banked
 12312   001E7E  6FC7               	movwf	??_mnsProcessMessage& (0+255),b
 12313   001E80  6BC8               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12314   001E82  90D8               	bcf	status,0,c
 12315   001E84  37C7               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12316   001E86  37C8               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12317   001E88  0EFE               	movlw	254
 12318   001E8A  25C7               	addwf	??_mnsProcessMessage& (0+255),w,b
 12319   001E8C  6FC9               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12320   001E8E  0EFF               	movlw	255
 12321   001E90  21C8               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12322   001E92  6FCA               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12323   001E94  0E75               	movlw	low _services
 12324   001E96  25C9               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12325   001E98  6EF6               	movwf	tblptrl,c
 12326   001E9A  0EEE               	movlw	high _services
 12327   001E9C  21CA               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12328   001E9E  6EF7               	movwf	tblptrh,c
 12329   001EA0                     	if	1	;There are 3 active tblptr bytes
 12330   001EA0  6AF8               	clrf	tblptru,c
 12331   001EA2  0E00               	movlw	low (__mediumconst shr (0+16))
 12332   001EA4  22F8               	addwfc	tblptru,f,c
 12333   001EA6                     	endif
 12334   001EA6  0009               	tblrd		*+
 12335   001EA8  CFF5 F3CB          	movff	tablat,??_mnsProcessMessage+4
 12336   001EAC  0009               	tblrd		*+
 12337   001EAE  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+5
 12338   001EB2  C3CB  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12339   001EB6  C3CC  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12340   001EBA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12341   001EBA  6AF8               	clrf	tblptru,c
 12342   001EBC                     	endif
 12343   001EBC                     	if	0	;tblptru may be non-zero
 12344   001EBC                     	endif
 12345   001EBC  0008               	tblrd		*
 12346   001EBE  CFF5 F1C3          	movff	tablat,sendMessage7@data4
 12347   001EC2  0101               	movlb	1	; () banked
 12348   001EC4  EE20 F004          	lfsr	2,4
 12349   001EC8  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12350   001ECA  26D9               	addwf	fsr2l,f,c
 12351   001ECC  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12352   001ECE  22DA               	addwfc	fsr2h,f,c
 12353   001ED0  50DF               	movf	indf2,w,c
 12354   001ED2  0103               	movlb	3	; () banked
 12355   001ED4  6FCD               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 12356   001ED6  6BCE               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 12357   001ED8  90D8               	bcf	status,0,c
 12358   001EDA  37CD               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 12359   001EDC  37CE               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 12360   001EDE  0EFE               	movlw	254
 12361   001EE0  25CD               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 12362   001EE2  6FCF               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 12363   001EE4  0EFF               	movlw	255
 12364   001EE6  21CE               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 12365   001EE8  6FD0               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 12366   001EEA  0E75               	movlw	low _services
 12367   001EEC  25CF               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 12368   001EEE  6EF6               	movwf	tblptrl,c
 12369   001EF0  0EEE               	movlw	high _services
 12370   001EF2  21D0               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 12371   001EF4  6EF7               	movwf	tblptrh,c
 12372   001EF6                     	if	1	;There are 3 active tblptr bytes
 12373   001EF6  6AF8               	clrf	tblptru,c
 12374   001EF8  0E00               	movlw	low (__mediumconst shr (0+16))
 12375   001EFA  22F8               	addwfc	tblptru,f,c
 12376   001EFC                     	endif
 12377   001EFC  0009               	tblrd		*+
 12378   001EFE  CFF5 F3D1          	movff	tablat,??_mnsProcessMessage+10
 12379   001F02  0009               	tblrd		*+
 12380   001F04  CFF5 F3D2          	movff	tablat,??_mnsProcessMessage+11
 12381   001F08  0E0E               	movlw	14
 12382   001F0A  27D1               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 12383   001F0C  0E00               	movlw	0
 12384   001F0E  23D2               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 12385   001F10  C3D1  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 12386   001F14  C3D2  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 12387   001F18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12388   001F18  6AF8               	clrf	tblptru,c
 12389   001F1A                     	endif
 12390   001F1A                     	if	0	;tblptru may be non-zero
 12391   001F1A                     	endif
 12392   001F1A  0009               	tblrd		*+
 12393   001F1C  CFF5 F3D3          	movff	tablat,??_mnsProcessMessage+12
 12394   001F20  0009               	tblrd		*+
 12395   001F22  CFF5 F3D4          	movff	tablat,??_mnsProcessMessage+13
 12396   001F26  D801               	call	u25008
 12397   001F28  D00A               	goto	u25009
 12398   001F2A                     u25008:
 12399   001F2A  0005               	push	
 12400   001F2C  6EFA               	movwf	pclath,c
 12401   001F2E  51D3               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 12402   001F30  6EFD               	movwf	tosl,c
 12403   001F32  51D4               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 12404   001F34  6EFE               	movwf	tosh,c
 12405   001F36  6AFF               	clrf	tosu,c
 12406   001F38  50FA               	movf	pclath,w,c
 12407   001F3A  0E01               	movlw	1
 12408   001F3C  0012               	return		;indir
 12409   001F3E                     u25009:
 12410   001F3E  0101               	movlb	1	; () banked
 12411   001F40  6FC4               	movwf	sendMessage7@data5& (0+255),b
 12412   001F42  EE20 F004          	lfsr	2,4
 12413   001F46  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12414   001F48  26D9               	addwf	fsr2l,f,c
 12415   001F4A  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12416   001F4C  22DA               	addwfc	fsr2h,f,c
 12417   001F4E  50DF               	movf	indf2,w,c
 12418   001F50  0103               	movlb	3	; () banked
 12419   001F52  6FD5               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 12420   001F54  6BD6               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 12421   001F56  90D8               	bcf	status,0,c
 12422   001F58  37D5               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 12423   001F5A  37D6               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 12424   001F5C  0EFE               	movlw	254
 12425   001F5E  25D5               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12426   001F60  6FD7               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12427   001F62  0EFF               	movlw	255
 12428   001F64  21D6               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12429   001F66  6FD8               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12430   001F68  0E75               	movlw	low _services
 12431   001F6A  25D7               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12432   001F6C  6EF6               	movwf	tblptrl,c
 12433   001F6E  0EEE               	movlw	high _services
 12434   001F70  21D8               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12435   001F72  6EF7               	movwf	tblptrh,c
 12436   001F74                     	if	1	;There are 3 active tblptr bytes
 12437   001F74  6AF8               	clrf	tblptru,c
 12438   001F76  0E00               	movlw	low (__mediumconst shr (0+16))
 12439   001F78  22F8               	addwfc	tblptru,f,c
 12440   001F7A                     	endif
 12441   001F7A  0009               	tblrd		*+
 12442   001F7C  CFF5 F3D9          	movff	tablat,??_mnsProcessMessage+18
 12443   001F80  0009               	tblrd		*+
 12444   001F82  CFF5 F3DA          	movff	tablat,??_mnsProcessMessage+19
 12445   001F86  0E0E               	movlw	14
 12446   001F88  27D9               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12447   001F8A  0E00               	movlw	0
 12448   001F8C  23DA               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12449   001F8E  C3D9  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12450   001F92  C3DA  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12451   001F96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12452   001F96  6AF8               	clrf	tblptru,c
 12453   001F98                     	endif
 12454   001F98                     	if	0	;tblptru may be non-zero
 12455   001F98                     	endif
 12456   001F98  0009               	tblrd		*+
 12457   001F9A  CFF5 F3DB          	movff	tablat,??_mnsProcessMessage+20
 12458   001F9E  0009               	tblrd		*+
 12459   001FA0  CFF5 F3DC          	movff	tablat,??_mnsProcessMessage+21
 12460   001FA4  D801               	call	u25018
 12461   001FA6  D00A               	goto	u25019
 12462   001FA8                     u25018:
 12463   001FA8  0005               	push	
 12464   001FAA  6EFA               	movwf	pclath,c
 12465   001FAC  51DB               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12466   001FAE  6EFD               	movwf	tosl,c
 12467   001FB0  51DC               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12468   001FB2  6EFE               	movwf	tosh,c
 12469   001FB4  6AFF               	clrf	tosu,c
 12470   001FB6  50FA               	movf	pclath,w,c
 12471   001FB8  0E02               	movlw	2
 12472   001FBA  0012               	return		;indir
 12473   001FBC                     u25019:
 12474   001FBC  0101               	movlb	1	; () banked
 12475   001FBE  6FC5               	movwf	sendMessage7@data6& (0+255),b
 12476   001FC0  EE20 F004          	lfsr	2,4
 12477   001FC4  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12478   001FC6  26D9               	addwf	fsr2l,f,c
 12479   001FC8  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12480   001FCA  22DA               	addwfc	fsr2h,f,c
 12481   001FCC  50DF               	movf	indf2,w,c
 12482   001FCE  0103               	movlb	3	; () banked
 12483   001FD0  6FDD               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12484   001FD2  6BDE               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12485   001FD4  90D8               	bcf	status,0,c
 12486   001FD6  37DD               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12487   001FD8  37DE               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12488   001FDA  0EFE               	movlw	254
 12489   001FDC  25DD               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12490   001FDE  6FDF               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12491   001FE0  0EFF               	movlw	255
 12492   001FE2  21DE               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12493   001FE4  6FE0               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12494   001FE6  0E75               	movlw	low _services
 12495   001FE8  25DF               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12496   001FEA  6EF6               	movwf	tblptrl,c
 12497   001FEC  0EEE               	movlw	high _services
 12498   001FEE  21E0               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12499   001FF0  6EF7               	movwf	tblptrh,c
 12500   001FF2                     	if	1	;There are 3 active tblptr bytes
 12501   001FF2  6AF8               	clrf	tblptru,c
 12502   001FF4  0E00               	movlw	low (__mediumconst shr (0+16))
 12503   001FF6  22F8               	addwfc	tblptru,f,c
 12504   001FF8                     	endif
 12505   001FF8  0009               	tblrd		*+
 12506   001FFA  CFF5 F3E1          	movff	tablat,??_mnsProcessMessage+26
 12507   001FFE  0009               	tblrd		*+
 12508   002000  CFF5 F3E2          	movff	tablat,??_mnsProcessMessage+27
 12509   002004  0E0E               	movlw	14
 12510   002006  27E1               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12511   002008  0E00               	movlw	0
 12512   00200A  23E2               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12513   00200C  C3E1  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12514   002010  C3E2  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12515   002014                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12516   002014  6AF8               	clrf	tblptru,c
 12517   002016                     	endif
 12518   002016                     	if	0	;tblptru may be non-zero
 12519   002016                     	endif
 12520   002016  0009               	tblrd		*+
 12521   002018  CFF5 F3E3          	movff	tablat,??_mnsProcessMessage+28
 12522   00201C  0009               	tblrd		*+
 12523   00201E  CFF5 F3E4          	movff	tablat,??_mnsProcessMessage+29
 12524   002022  D801               	call	u25028
 12525   002024  D00A               	goto	u25029
 12526   002026                     u25028:
 12527   002026  0005               	push	
 12528   002028  6EFA               	movwf	pclath,c
 12529   00202A  51E3               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12530   00202C  6EFD               	movwf	tosl,c
 12531   00202E  51E4               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12532   002030  6EFE               	movwf	tosh,c
 12533   002032  6AFF               	clrf	tosu,c
 12534   002034  50FA               	movf	pclath,w,c
 12535   002036  0E03               	movlw	3
 12536   002038  0012               	return		;indir
 12537   00203A                     u25029:
 12538   00203A  0101               	movlb	1	; () banked
 12539   00203C  6FC6               	movwf	sendMessage7@data7& (0+255),b
 12540   00203E  0EE7               	movlw	231
 12541   002040  EC1D  F05F         	call	_sendMessage7
 12542   002044  EFBE  F00B         	goto	l23079
 12543   002048                     l23287:
 12544                           
 12545                           ; BSR set to: 3
 12546                           ;../../VLCBlib_PIC/mns.c: 530:             if (m->len < 4) {
 12547   002048  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12548   00204C  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12549   002050  0E04               	movlw	4
 12550   002052  60DF               	cpfslt	indf2,c
 12551   002054  D010               	goto	l23295
 12552                           
 12553                           ; BSR set to: 3
 12554                           ;../../VLCBlib_PIC/mns.c: 531:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12555   002056  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12556   00205A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12557   00205E  0E76               	movlw	118
 12558   002060  0101               	movlb	1	; () banked
 12559   002062  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12560   002064  0E01               	movlw	1
 12561   002066  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12562   002068  0E01               	movlw	1
 12563   00206A  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12564   00206C  0EAF               	movlw	175
 12565   00206E  EC35  F05F         	call	_sendMessage5
 12566   002072  EFBE  F00B         	goto	l23079
 12567   002076                     l23295:
 12568                           
 12569                           ; BSR set to: 3
 12570                           ;../../VLCBlib_PIC/mns.c: 534:             newMode = m->bytes[2];
 12571   002076  0101               	movlb	1	; () banked
 12572   002078  EE20 F004          	lfsr	2,4
 12573   00207C  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12574   00207E  26D9               	addwf	fsr2l,f,c
 12575   002080  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12576   002082  22DA               	addwfc	fsr2h,f,c
 12577   002084  50DF               	movf	indf2,w,c
 12578   002086  6FFC               	movwf	mnsProcessMessage@newMode& (0+255),b
 12579                           
 12580                           ; BSR set to: 1
 12581                           ;../../VLCBlib_PIC/mns.c: 535:             previousNN.word = nn.word;
 12582   002088  C0BF  F170         	movff	_nn,_previousNN
 12583   00208C  C0C0  F171         	movff	_nn+1,_previousNN+1
 12584                           
 12585                           ;../../VLCBlib_PIC/mns.c: 537:             switch (mode_state) {
 12586   002090  D05B               	goto	l23337
 12587   002092                     l23299:
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;../../VLCBlib_PIC/mns.c: 539:                     if (newMode == MODE_SETUP) {
 12591   002092  0101               	movlb	1	; () banked
 12592   002094  51FC               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12593   002096  A4D8               	btfss	status,2,c
 12594   002098  D060               	goto	l23339
 12595                           
 12596                           ; BSR set to: 1
 12597                           ;../../VLCBlib_PIC/mns.c: 540:                         mode_state = MODE_SETUP;
 12598   00209A  0E00               	movlw	0
 12599   00209C  0100               	movlb	0	; () banked
 12600   00209E  6FC8               	movwf	_mode_state& (0+255),b
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;../../VLCBlib_PIC/mns.c: 541:                         setupModePreviousMode = MODE_UNIN
      +                          ITIALISED;
 12604   0020A0  0101               	movlb	1	; () banked
 12605   0020A2  6975               	setf	_setupModePreviousMode& (0+255),b
 12606                           
 12607                           ; BSR set to: 1
 12608                           ;../../VLCBlib_PIC/mns.c: 542:                         sendMessage5(OPC_GRSP, previousNN
      +                          .bytes.hi, previousNN.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12609   0020A4  C171  F1C0         	movff	_previousNN+1,sendMessage5@data1
 12610   0020A8  C170  F1C1         	movff	_previousNN,sendMessage5@data2
 12611   0020AC  0E76               	movlw	118
 12612   0020AE  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12613   0020B0  0E01               	movlw	1
 12614   0020B2  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12615   0020B4  0E00               	movlw	0
 12616   0020B6  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12617   0020B8  0EAF               	movlw	175
 12618   0020BA  EC35  F05F         	call	_sendMessage5
 12619                           
 12620                           ;../../VLCBlib_PIC/mns.c: 544:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12621   0020BE  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 12622   0020C2  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 12623   0020C6  0E50               	movlw	80
 12624   0020C8  EC05  F05F         	call	_sendMessage2
 12625   0020CC  EFBC  F00B         	goto	l23077
 12626   0020D0                     l23315:
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;../../VLCBlib_PIC/mns.c: 553:                     if (newMode == MODE_SETUP) {
 12630   0020D0  0101               	movlb	1	; () banked
 12631   0020D2  51FC               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12632   0020D4  A4D8               	btfss	status,2,c
 12633   0020D6  D041               	goto	l23339
 12634                           
 12635                           ; BSR set to: 1
 12636                           ;../../VLCBlib_PIC/mns.c: 554:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12637   0020D8  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12638   0020DC  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12639   0020E0  0E76               	movlw	118
 12640   0020E2  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12641   0020E4  0E01               	movlw	1
 12642   0020E6  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12643   0020E8  0E00               	movlw	0
 12644   0020EA  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12645   0020EC  0EAF               	movlw	175
 12646   0020EE  EC35  F05F         	call	_sendMessage5
 12647                           
 12648                           ;../../VLCBlib_PIC/mns.c: 557:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12649   0020F2  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 12650   0020F6  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 12651   0020FA  0E50               	movlw	80
 12652   0020FC  EC05  F05F         	call	_sendMessage2
 12653                           
 12654                           ;../../VLCBlib_PIC/mns.c: 559:                         nn.bytes.lo = nn.bytes.hi = 0;
 12655   002100  0E00               	movlw	0
 12656   002102  0100               	movlb	0	; () banked
 12657   002104  6FC0               	movwf	(_nn+1)& (0+255),b
 12658   002106  C0C0  F0BF         	movff	_nn+1,_nn
 12659                           
 12660                           ; BSR set to: 0
 12661                           ;../../VLCBlib_PIC/mns.c: 560:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.hi);
 12662   00210A  0EFC               	movlw	252
 12663   00210C  6FA4               	movwf	writeNVM@index& (0+255),b
 12664   00210E  0E03               	movlw	3
 12665   002110  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12666   002112  0E00               	movlw	0
 12667   002114  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12668   002116  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 12669   00211A  0E00               	movlw	0
 12670   00211C  EC52  F05B         	call	_writeNVM
 12671                           
 12672                           ;../../VLCBlib_PIC/mns.c: 561:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.lo);
 12673   002120  0EFD               	movlw	253
 12674   002122  0100               	movlb	0	; () banked
 12675   002124  6FA4               	movwf	writeNVM@index& (0+255),b
 12676   002126  0E03               	movlw	3
 12677   002128  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12678   00212A  0E00               	movlw	0
 12679   00212C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12680   00212E  C0BF  F0A7         	movff	_nn,writeNVM@value
 12681   002132  0E00               	movlw	0
 12682   002134  EC52  F05B         	call	_writeNVM
 12683                           
 12684                           ;../../VLCBlib_PIC/mns.c: 563:                         mode_state = MODE_SETUP;
 12685   002138  0E00               	movlw	0
 12686   00213A  0100               	movlb	0	; () banked
 12687   00213C  6FC8               	movwf	_mode_state& (0+255),b
 12688                           
 12689                           ; BSR set to: 0
 12690                           ;../../VLCBlib_PIC/mns.c: 564:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 12691   00213E  0E01               	movlw	1
 12692   002140  0101               	movlb	1	; () banked
 12693   002142  6F75               	movwf	_setupModePreviousMode& (0+255),b
 12694   002144  EFBC  F00B         	goto	l23077
 12695   002148                     l23337:
 12696                           
 12697                           ; BSR set to: 1
 12698   002148  0100               	movlb	0	; () banked
 12699   00214A  51C8               	movf	_mode_state& (0+255),w,b
 12700                           
 12701                           ; Switch size 1, requested type "simple"
 12702                           ; Number of cases is 2, Range of values is 0 to 255
 12703                           ; switch strategies available:
 12704                           ; Name         Instructions Cycles
 12705                           ; simple_byte            7     4 (average)
 12706                           ;	Chosen strategy is simple_byte
 12707   00214C  0A00               	xorlw	0	; case 0
 12708   00214E  B4D8               	btfsc	status,2,c
 12709   002150  D004               	goto	l23339
 12710   002152  0AFF               	xorlw	255	; case 255
 12711   002154  B4D8               	btfsc	status,2,c
 12712   002156  D79D               	goto	l23299
 12713   002158  D7BB               	goto	l23315
 12714   00215A                     l23339:
 12715                           
 12716                           ;../../VLCBlib_PIC/mns.c: 573:             if (newMode == MODE_HEARTBEAT_ON) {
 12717   00215A  0E0C               	movlw	12
 12718   00215C  0101               	movlb	1	; () banked
 12719   00215E  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12720   002160  A4D8               	btfss	status,2,c
 12721   002162  D010               	goto	l23351
 12722                           
 12723                           ; BSR set to: 1
 12724                           ;../../VLCBlib_PIC/mns.c: 574:                 mode_flags |= 4;
 12725   002164  8576               	bsf	_mode_flags& (0+255),2,b
 12726                           
 12727                           ; BSR set to: 1
 12728                           ;../../VLCBlib_PIC/mns.c: 575:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12729   002166  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12730   00216A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12731   00216E  0E76               	movlw	118
 12732   002170  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12733   002172  0E01               	movlw	1
 12734   002174  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12735   002176  0E00               	movlw	0
 12736   002178  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12737   00217A  0EAF               	movlw	175
 12738   00217C  EC35  F05F         	call	_sendMessage5
 12739   002180  EFBE  F00B         	goto	l23079
 12740   002184                     l23351:
 12741                           
 12742                           ; BSR set to: 1
 12743   002184  0E0D               	movlw	13
 12744   002186  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12745   002188  A4D8               	btfss	status,2,c
 12746   00218A  EF43  F00C         	goto	l23105
 12747                           
 12748                           ; BSR set to: 1
 12749                           ;../../VLCBlib_PIC/mns.c: 578:                 mode_flags &= ~4;
 12750   00218E  9576               	bcf	_mode_flags& (0+255),2,b
 12751                           
 12752                           ; BSR set to: 1
 12753                           ;../../VLCBlib_PIC/mns.c: 579:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12754   002190  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12755   002194  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12756   002198  0E76               	movlw	118
 12757   00219A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12758   00219C  0E01               	movlw	1
 12759   00219E  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12760   0021A0  0E00               	movlw	0
 12761   0021A2  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12762   0021A4  0EAF               	movlw	175
 12763   0021A6  EC35  F05F         	call	_sendMessage5
 12764   0021AA  EFBE  F00B         	goto	l23079
 12765   0021AE                     l1476:
 12766                           
 12767                           ; BSR set to: 3
 12768   0021AE  00FF               	reset		;# 
 12769   0021B0  EFBE  F00B         	goto	l23079
 12770   0021B4                     l23371:
 12771                           
 12772                           ; BSR set to: 0
 12773   0021B4  0101               	movlb	1	; () banked
 12774   0021B6  EE20 F001          	lfsr	2,1
 12775   0021BA  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12776   0021BC  26D9               	addwf	fsr2l,f,c
 12777   0021BE  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12778   0021C0  22DA               	addwfc	fsr2h,f,c
 12779   0021C2  50DF               	movf	indf2,w,c
 12780   0021C4  0103               	movlb	3	; () banked
 12781   0021C6  6FC7               	movwf	??_mnsProcessMessage& (0+255),b
 12782   0021C8  6BC8               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12783                           
 12784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12785                           ; Switch size 1, requested type "simple"
 12786                           ; Number of cases is 1, Range of values is 0 to 0
 12787                           ; switch strategies available:
 12788                           ; Name         Instructions Cycles
 12789                           ; simple_byte            4     3 (average)
 12790                           ;	Chosen strategy is simple_byte
 12791   0021CA  51C8               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 12792   0021CC  0A00               	xorlw	0	; case 0
 12793   0021CE  A4D8               	btfss	status,2,c
 12794   0021D0  EF43  F00C         	goto	l23105
 12795                           
 12796                           ; BSR set to: 3
 12797                           ; Switch size 1, requested type "simple"
 12798                           ; Number of cases is 6, Range of values is 79 to 135
 12799                           ; switch strategies available:
 12800                           ; Name         Instructions Cycles
 12801                           ; simple_byte           19    10 (average)
 12802                           ;	Chosen strategy is simple_byte
 12803   0021D4  51C7               	movf	??_mnsProcessMessage& (0+255),w,b
 12804   0021D6  0A4F               	xorlw	79	; case 79
 12805   0021D8  B4D8               	btfsc	status,2,c
 12806   0021DA  D44A               	goto	l1444
 12807   0021DC  0A11               	xorlw	17	; case 94
 12808   0021DE  B4D8               	btfsc	status,2,c
 12809   0021E0  D7E6               	goto	l1476
 12810   0021E2  0A2D               	xorlw	45	; case 115
 12811   0021E4  B4D8               	btfsc	status,2,c
 12812   0021E6  EFCB  F00C         	goto	l23169
 12813   0021EA  0A05               	xorlw	5	; case 118
 12814   0021EC  B4D8               	btfsc	status,2,c
 12815   0021EE  D72C               	goto	l23287
 12816   0021F0  0A0E               	xorlw	14	; case 120
 12817   0021F2  B4D8               	btfsc	status,2,c
 12818   0021F4  D56D               	goto	l23253
 12819   0021F6  0AFF               	xorlw	255	; case 135
 12820   0021F8  B4D8               	btfsc	status,2,c
 12821   0021FA  D44D               	goto	l23207
 12822   0021FC  EF43  F00C         	goto	l23105
 12823   002200                     __end_of_mnsProcessMessage:
 12824                           	callstack 0
 12825                           
 12826 ;; *************** function _ackEventProcessMessage *****************
 12827 ;; Defined at:
 12828 ;;		line 108 in file "../../VLCBlib_PIC/event_acknowledge.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;  m               2   63[BANK1 ] PTR struct Message
 12831 ;;		 -> poll@m(9), 
 12832 ;; Auto vars:     Size  Location     Type
 12833 ;;  eventNN         2    5[BANK3 ] struct Word
 12834 ;;  eventEN         2    2[BANK3 ] struct Word
 12835 ;;  ev              2    0[BANK3 ] short 
 12836 ;;  eventIndex      1    4[BANK3 ] unsigned char 
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  1    wreg      enum E12793
 12839 ;; Registers used:
 12840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12846 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12847 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 12848 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12849 ;;      Totals:         0       0       4       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 12850 ;;Total ram usage:       11 bytes
 12851 ;; Hardware stack levels used: 1
 12852 ;; Hardware stack levels required when called: 18
 12853 ;; This function calls:
 12854 ;;		_ackEventCheckLen
 12855 ;;		_findEvent
 12856 ;;		_findService
 12857 ;;		_getEv
 12858 ;;		_sendMessage7
 12859 ;; This function is called by:
 12860 ;;		_poll
 12861 ;; This function uses a non-reentrant model
 12862 ;;
 12863                           
 12864                           	psect	text23
 12865   006574                     __ptext23:
 12866                           	callstack 0
 12867   006574                     _ackEventProcessMessage:
 12868                           	callstack 11
 12869                           
 12870                           ;../../VLCBlib_PIC/event_acknowledge.c: 109:     Word eventNN, eventEN;;../../VLCBlib_PI
      +                          C/event_acknowledge.c: 110:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.
      +                          c: 111:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 114:     if (m->opc == OP
      +                          C_MODE) {
 12871                           
 12872                           ;incstack = 0
 12873   006574  0101               	movlb	1	; () banked
 12874   006576  EE20 F001          	lfsr	2,1
 12875   00657A  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12876   00657C  26D9               	addwf	fsr2l,f,c
 12877   00657E  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12878   006580  22DA               	addwfc	fsr2h,f,c
 12879   006582  0E76               	movlw	118
 12880   006584  18DE               	xorwf	postinc2,w,c
 12881   006586  A4D8               	btfss	status,2,c
 12882   006588  D040               	goto	l1275
 12883                           
 12884                           ; BSR set to: 1
 12885                           ;../../VLCBlib_PIC/event_acknowledge.c: 115:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 12886   00658A  C1F7  F1C9         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 12887   00658E  C1F8  F1CA         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 12888   006592  0E04               	movlw	4
 12889   006594  6FCB               	movwf	ackEventCheckLen@needed& (0+255),b
 12890   006596  EC61  F061         	call	_ackEventCheckLen	;wreg free
 12891   00659A  06E8               	decf	wreg,f,c
 12892   00659C  A4D8               	btfss	status,2,c
 12893   00659E  D002               	goto	l22939
 12894   0065A0                     u24600:
 12895   0065A0  0E01               	movlw	1
 12896   0065A2  0012               	return	
 12897   0065A4                     l22939:
 12898                           
 12899                           ;../../VLCBlib_PIC/event_acknowledge.c: 116:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 12900   0065A4  0101               	movlb	1	; () banked
 12901   0065A6  EE20 F002          	lfsr	2,2
 12902   0065AA  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12903   0065AC  26D9               	addwf	fsr2l,f,c
 12904   0065AE  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12905   0065B0  22DA               	addwfc	fsr2h,f,c
 12906   0065B2  50DE               	movf	postinc2,w,c
 12907   0065B4  0100               	movlb	0	; () banked
 12908   0065B6  19C0               	xorwf	(_nn+1)& (0+255),w,b
 12909   0065B8  A4D8               	btfss	status,2,c
 12910   0065BA  D025               	goto	l22961
 12911                           
 12912                           ; BSR set to: 0
 12913   0065BC  0101               	movlb	1	; () banked
 12914   0065BE  EE20 F003          	lfsr	2,3
 12915   0065C2  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12916   0065C4  26D9               	addwf	fsr2l,f,c
 12917   0065C6  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12918   0065C8  22DA               	addwfc	fsr2h,f,c
 12919   0065CA  0100               	movlb	0	; () banked
 12920   0065CC  51BF               	movf	_nn& (0+255),w,b
 12921   0065CE  18DE               	xorwf	postinc2,w,c
 12922   0065D0  A4D8               	btfss	status,2,c
 12923   0065D2  D019               	goto	l22961
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;../../VLCBlib_PIC/event_acknowledge.c: 117:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 12927   0065D4  0101               	movlb	1	; () banked
 12928   0065D6  EE20 F004          	lfsr	2,4
 12929   0065DA  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12930   0065DC  26D9               	addwf	fsr2l,f,c
 12931   0065DE  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12932   0065E0  22DA               	addwfc	fsr2h,f,c
 12933   0065E2  0E0A               	movlw	10
 12934   0065E4  18DE               	xorwf	postinc2,w,c
 12935   0065E6  A4D8               	btfss	status,2,c
 12936   0065E8  D002               	goto	l22953
 12937                           
 12938                           ; BSR set to: 1
 12939                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:                 mode_flags |= 1;
 12940   0065EA  8176               	bsf	_mode_flags& (0+255),0,b
 12941   0065EC  D7D9               	goto	u24600
 12942   0065EE                     l22953:
 12943                           
 12944                           ; BSR set to: 1
 12945   0065EE  EE20 F004          	lfsr	2,4
 12946   0065F2  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12947   0065F4  26D9               	addwf	fsr2l,f,c
 12948   0065F6  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12949   0065F8  22DA               	addwfc	fsr2h,f,c
 12950   0065FA  0E0B               	movlw	11
 12951   0065FC  18DE               	xorwf	postinc2,w,c
 12952   0065FE  A4D8               	btfss	status,2,c
 12953   006600  D002               	goto	l22961
 12954                           
 12955                           ; BSR set to: 1
 12956                           ;../../VLCBlib_PIC/event_acknowledge.c: 123:                 mode_flags &= ~1;
 12957   006602  9176               	bcf	_mode_flags& (0+255),0,b
 12958   006604  D7CD               	goto	u24600
 12959   006606                     l22961:
 12960                           
 12961                           ;../../VLCBlib_PIC/event_acknowledge.c: 127:         return NOT_PROCESSED;
 12962   006606  0E00               	movlw	0
 12963   006608  0012               	return	
 12964   00660A                     l1275:
 12965                           
 12966                           ; BSR set to: 1
 12967                           ;../../VLCBlib_PIC/event_acknowledge.c: 132:     if (! (mode_flags & 2)) {
 12968   00660A  A376               	btfss	_mode_flags& (0+255),1,b
 12969   00660C  D7FC               	goto	l22961
 12970                           
 12971                           ; BSR set to: 1
 12972                           ;../../VLCBlib_PIC/event_acknowledge.c: 136:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 12973   00660E  0E06               	movlw	6
 12974   006610  EC01  F04E         	call	_findService
 12975   006614  0100               	movlb	0	; () banked
 12976   006616  518D               	movf	?_findService& (0+255),w,b
 12977   006618  118E               	iorwf	(?_findService+1)& (0+255),w,b
 12978   00661A  B4D8               	btfsc	status,2,c
 12979   00661C  D7F4               	goto	l22961
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;../../VLCBlib_PIC/event_acknowledge.c: 139:     if (m->len < 5) {
 12983   00661E  C1F7  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 12984   006622  C1F8  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 12985   006626  0E05               	movlw	5
 12986   006628  60DF               	cpfslt	indf2,c
 12987   00662A  D001               	goto	l22981
 12988   00662C  D7EC               	goto	l22961
 12989   00662E                     l22981:
 12990                           
 12991                           ; BSR set to: 0
 12992                           ;../../VLCBlib_PIC/event_acknowledge.c: 142:     eventNN.bytes.hi = m->bytes[0];
 12993   00662E  0101               	movlb	1	; () banked
 12994   006630  EE20 F002          	lfsr	2,2
 12995   006634  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12996   006636  26D9               	addwf	fsr2l,f,c
 12997   006638  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12998   00663A  22DA               	addwfc	fsr2h,f,c
 12999   00663C  50DF               	movf	indf2,w,c
 13000   00663E  0103               	movlb	3	; () banked
 13001   006640  6FCD               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 13002                           
 13003                           ;../../VLCBlib_PIC/event_acknowledge.c: 143:     eventNN.bytes.lo = m->bytes[1];
 13004   006642  0101               	movlb	1	; () banked
 13005   006644  EE20 F003          	lfsr	2,3
 13006   006648  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13007   00664A  26D9               	addwf	fsr2l,f,c
 13008   00664C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13009   00664E  22DA               	addwfc	fsr2h,f,c
 13010   006650  50DF               	movf	indf2,w,c
 13011   006652  0103               	movlb	3	; () banked
 13012   006654  6FCC               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 13013                           
 13014                           ;../../VLCBlib_PIC/event_acknowledge.c: 144:     eventEN.bytes.hi = m->bytes[2];
 13015   006656  0101               	movlb	1	; () banked
 13016   006658  EE20 F004          	lfsr	2,4
 13017   00665C  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13018   00665E  26D9               	addwf	fsr2l,f,c
 13019   006660  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13020   006662  22DA               	addwfc	fsr2h,f,c
 13021   006664  50DF               	movf	indf2,w,c
 13022   006666  0103               	movlb	3	; () banked
 13023   006668  6FCA               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 13024                           
 13025                           ;../../VLCBlib_PIC/event_acknowledge.c: 145:     eventEN.bytes.lo = m->bytes[3];
 13026   00666A  0101               	movlb	1	; () banked
 13027   00666C  EE20 F005          	lfsr	2,5
 13028   006670  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13029   006672  26D9               	addwf	fsr2l,f,c
 13030   006674  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13031   006676  22DA               	addwfc	fsr2h,f,c
 13032   006678  50DF               	movf	indf2,w,c
 13033   00667A  0103               	movlb	3	; () banked
 13034   00667C  6FC9               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13035                           
 13036                           ;../../VLCBlib_PIC/event_acknowledge.c: 147:     switch (m->opc) {
 13037   00667E  D018               	goto	l22993
 13038   006680                     l22983:
 13039                           
 13040                           ; BSR set to: 1
 13041                           ;../../VLCBlib_PIC/event_acknowledge.c: 151:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13042   006680  C3CC  F1B8         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13043   006684  C3CD  F1B9         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13044   006688  C3CC  F1BA         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13045   00668C  C3CD  F1BB         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13046   006690  ECE9  F050         	call	_findEvent	;wreg free
 13047   006694  D00A               	goto	L2
 13048   006696                     l22985:
 13049                           
 13050                           ; BSR set to: 1
 13051                           ;../../VLCBlib_PIC/event_acknowledge.c: 156:             eventIndex = findEvent(0, event
      +                          NN.word);
 13052   006696  0E00               	movlw	0
 13053   006698  6FB9               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13054   00669A  0E00               	movlw	0
 13055   00669C  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 13056   00669E  C3CC  F1BA         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13057   0066A2  C3CD  F1BB         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13058   0066A6  ECE9  F050         	call	_findEvent	;wreg free
 13059   0066AA                     L2:
 13060   0066AA  0103               	movlb	3	; () banked
 13061   0066AC  6FCB               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13062                           
 13063                           ;../../VLCBlib_PIC/event_acknowledge.c: 157:             break;
 13064   0066AE  D01C               	goto	l22995
 13065   0066B0                     l22993:
 13066                           
 13067                           ; BSR set to: 3
 13068   0066B0  0101               	movlb	1	; () banked
 13069   0066B2  EE20 F001          	lfsr	2,1
 13070   0066B6  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13071   0066B8  26D9               	addwf	fsr2l,f,c
 13072   0066BA  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13073   0066BC  22DA               	addwfc	fsr2h,f,c
 13074   0066BE  50DF               	movf	indf2,w,c
 13075   0066C0  6FF9               	movwf	??_ackEventProcessMessage& (0+255),b
 13076   0066C2  6BFA               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13077                           
 13078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13079                           ; Switch size 1, requested type "simple"
 13080                           ; Number of cases is 1, Range of values is 0 to 0
 13081                           ; switch strategies available:
 13082                           ; Name         Instructions Cycles
 13083                           ; simple_byte            4     3 (average)
 13084                           ;	Chosen strategy is simple_byte
 13085   0066C4  51FA               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13086   0066C6  0A00               	xorlw	0	; case 0
 13087   0066C8  A4D8               	btfss	status,2,c
 13088   0066CA  D79D               	goto	l22961
 13089                           
 13090                           ; BSR set to: 1
 13091                           ; Switch size 1, requested type "simple"
 13092                           ; Number of cases is 4, Range of values is 144 to 153
 13093                           ; switch strategies available:
 13094                           ; Name         Instructions Cycles
 13095                           ; simple_byte           13     7 (average)
 13096                           ;	Chosen strategy is simple_byte
 13097   0066CC  51F9               	movf	??_ackEventProcessMessage& (0+255),w,b
 13098   0066CE  0A90               	xorlw	144	; case 144
 13099   0066D0  B4D8               	btfsc	status,2,c
 13100   0066D2  D7D6               	goto	l22983
 13101   0066D4  0A01               	xorlw	1	; case 145
 13102   0066D6  B4D8               	btfsc	status,2,c
 13103   0066D8  D7D3               	goto	l22983
 13104   0066DA  0A09               	xorlw	9	; case 152
 13105   0066DC  B4D8               	btfsc	status,2,c
 13106   0066DE  D7DB               	goto	l22985
 13107   0066E0  0A01               	xorlw	1	; case 153
 13108   0066E2  B4D8               	btfsc	status,2,c
 13109   0066E4  D7D8               	goto	l22985
 13110   0066E6  D78F               	goto	l22961
 13111   0066E8                     l22995:
 13112                           
 13113                           ; BSR set to: 3
 13114                           ;../../VLCBlib_PIC/event_acknowledge.c: 161:     if (eventIndex != 0xff) {
 13115   0066E8  29CB               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13116   0066EA  B4D8               	btfsc	status,2,c
 13117   0066EC  D78C               	goto	l22961
 13118                           
 13119                           ; BSR set to: 3
 13120                           ;../../VLCBlib_PIC/event_acknowledge.c: 164:         ev = getEv(eventIndex, 1);
 13121   0066EE  0E01               	movlw	1
 13122   0066F0  0100               	movlb	0	; () banked
 13123   0066F2  6F9D               	movwf	getEv@evNum& (0+255),b
 13124   0066F4  0103               	movlb	3	; () banked
 13125   0066F6  51CB               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13126   0066F8  ECB7  F03B         	call	_getEv
 13127   0066FC  C09D  F3C7         	movff	?_getEv,ackEventProcessMessage@ev
 13128   006700  C09E  F3C8         	movff	?_getEv+1,ackEventProcessMessage@ev+1
 13129                           
 13130                           ;../../VLCBlib_PIC/event_acknowledge.c: 165:         if (ev >= 0) {
 13131   006704  0103               	movlb	3	; () banked
 13132   006706  BFC8               	btfsc	(ackEventProcessMessage@ev+1)& (0+255),7,b
 13133   006708  D77E               	goto	l22961
 13134                           
 13135                           ; BSR set to: 3
 13136                           ;../../VLCBlib_PIC/event_acknowledge.c: 167:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13137   00670A  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 13138   00670E  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 13139   006712  0101               	movlb	1	; () banked
 13140   006714  EE20 F001          	lfsr	2,1
 13141   006718  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13142   00671A  26D9               	addwf	fsr2l,f,c
 13143   00671C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13144   00671E  22DA               	addwfc	fsr2h,f,c
 13145   006720  50DF               	movf	indf2,w,c
 13146   006722  6FC2               	movwf	sendMessage7@data3& (0+255),b
 13147   006724  EE20 F002          	lfsr	2,2
 13148   006728  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13149   00672A  26D9               	addwf	fsr2l,f,c
 13150   00672C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13151   00672E  22DA               	addwfc	fsr2h,f,c
 13152   006730  50DF               	movf	indf2,w,c
 13153   006732  6FC3               	movwf	sendMessage7@data4& (0+255),b
 13154   006734  EE20 F003          	lfsr	2,3
 13155   006738  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13156   00673A  26D9               	addwf	fsr2l,f,c
 13157   00673C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13158   00673E  22DA               	addwfc	fsr2h,f,c
 13159   006740  50DF               	movf	indf2,w,c
 13160   006742  6FC4               	movwf	sendMessage7@data5& (0+255),b
 13161   006744  EE20 F004          	lfsr	2,4
 13162   006748  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13163   00674A  26D9               	addwf	fsr2l,f,c
 13164   00674C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13165   00674E  22DA               	addwfc	fsr2h,f,c
 13166   006750  50DF               	movf	indf2,w,c
 13167   006752  6FC5               	movwf	sendMessage7@data6& (0+255),b
 13168   006754  EE20 F005          	lfsr	2,5
 13169   006758  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13170   00675A  26D9               	addwf	fsr2l,f,c
 13171   00675C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13172   00675E  22DA               	addwfc	fsr2h,f,c
 13173   006760  50DF               	movf	indf2,w,c
 13174   006762  6FC6               	movwf	sendMessage7@data7& (0+255),b
 13175   006764  0EE6               	movlw	230
 13176   006766  EC1D  F05F         	call	_sendMessage7
 13177                           
 13178                           ;../../VLCBlib_PIC/event_acknowledge.c: 169:             ackDiagnostics[0x00].asInt++;
 13179   00676A  0101               	movlb	1	; () banked
 13180   00676C  4BB4               	infsnz	_ackDiagnostics& (0+255),f,b
 13181   00676E  2BB5               	incf	(_ackDiagnostics+1)& (0+255),f,b
 13182   006770  D74A               	goto	l22961
 13183   006772                     __end_of_ackEventProcessMessage:
 13184                           	callstack 0
 13185                           
 13186 ;; *************** function _bootProcessMessage *****************
 13187 ;; Defined at:
 13188 ;;		line 194 in file "../../VLCBlib_PIC/boot.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;  m               2   63[BANK1 ] PTR struct Message
 13191 ;;		 -> poll@m(9), 
 13192 ;; Auto vars:     Size  Location     Type
 13193 ;;		None
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  1    wreg      enum E12793
 13196 ;; Registers used:
 13197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13203 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13205 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13206 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13207 ;;Total ram usage:        4 bytes
 13208 ;; Hardware stack levels used: 1
 13209 ;; Hardware stack levels required when called: 18
 13210 ;; This function calls:
 13211 ;;		_writeNVM
 13212 ;; This function is called by:
 13213 ;;		_poll
 13214 ;; This function uses a non-reentrant model
 13215 ;;
 13216                           
 13217                           	psect	text24
 13218   009EF4                     __ptext24:
 13219                           	callstack 0
 13220   009EF4                     _bootProcessMessage:
 13221                           	callstack 11
 13222                           
 13223                           ;../../VLCBlib_PIC/boot.c: 196:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13224                           
 13225                           ;incstack = 0
 13226   009EF4  0101               	movlb	1	; () banked
 13227   009EF6  EE20 F002          	lfsr	2,2
 13228   009EFA  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13229   009EFC  26D9               	addwf	fsr2l,f,c
 13230   009EFE  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13231   009F00  22DA               	addwfc	fsr2h,f,c
 13232   009F02  50DE               	movf	postinc2,w,c
 13233   009F04  0100               	movlb	0	; () banked
 13234   009F06  19C0               	xorwf	(_nn+1)& (0+255),w,b
 13235   009F08  B4D8               	btfsc	status,2,c
 13236   009F0A  D002               	goto	l22889
 13237   009F0C                     u24550:
 13238   009F0C  0E00               	movlw	0
 13239   009F0E  0012               	return	
 13240   009F10                     l22889:
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;../../VLCBlib_PIC/boot.c: 197:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13244   009F10  0101               	movlb	1	; () banked
 13245   009F12  EE20 F003          	lfsr	2,3
 13246   009F16  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13247   009F18  26D9               	addwf	fsr2l,f,c
 13248   009F1A  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13249   009F1C  22DA               	addwfc	fsr2h,f,c
 13250   009F1E  0100               	movlb	0	; () banked
 13251   009F20  51BF               	movf	_nn& (0+255),w,b
 13252   009F22  18DE               	xorwf	postinc2,w,c
 13253   009F24  A4D8               	btfss	status,2,c
 13254   009F26  D7F2               	goto	u24550
 13255   009F28  D019               	goto	l22913
 13256   009F2A                     l22895:
 13257                           
 13258                           ; BSR set to: 1
 13259                           ;../../VLCBlib_PIC/boot.c: 202:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13260   009F2A  EE20 F004          	lfsr	2,4
 13261   009F2E  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13262   009F30  26D9               	addwf	fsr2l,f,c
 13263   009F32  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13264   009F34  22DA               	addwfc	fsr2h,f,c
 13265   009F36  0E0E               	movlw	14
 13266   009F38  18DE               	xorwf	postinc2,w,c
 13267   009F3A  A4D8               	btfss	status,2,c
 13268   009F3C  D7E7               	goto	u24550
 13269   009F3E                     l22901:
 13270                           
 13271                           ; BSR set to: 1
 13272                           ;../../VLCBlib_PIC/boot.c: 207:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13273   009F3E  0EFF               	movlw	255
 13274   009F40  0100               	movlb	0	; () banked
 13275   009F42  6FA4               	movwf	writeNVM@index& (0+255),b
 13276   009F44  0E03               	movlw	3
 13277   009F46  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13278   009F48  0E00               	movlw	0
 13279   009F4A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13280   009F4C  0EFF               	movlw	255
 13281   009F4E  6FA7               	movwf	writeNVM@value& (0+255),b
 13282   009F50  0E00               	movlw	0
 13283   009F52  EC52  F05B         	call	_writeNVM
 13284   009F56  00FF               	reset		;# 
 13285                           
 13286                           ;../../VLCBlib_PIC/boot.c: 209:             return PROCESSED;
 13287   009F58  0E01               	movlw	1
 13288   009F5A  0012               	return	
 13289   009F5C                     l22913:
 13290                           
 13291                           ; BSR set to: 0
 13292   009F5C  0101               	movlb	1	; () banked
 13293   009F5E  EE20 F001          	lfsr	2,1
 13294   009F62  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13295   009F64  26D9               	addwf	fsr2l,f,c
 13296   009F66  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13297   009F68  22DA               	addwfc	fsr2h,f,c
 13298   009F6A  50DF               	movf	indf2,w,c
 13299   009F6C  6FF9               	movwf	??_bootProcessMessage& (0+255),b
 13300   009F6E  6BFA               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13301                           
 13302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13303                           ; Switch size 1, requested type "simple"
 13304                           ; Number of cases is 1, Range of values is 0 to 0
 13305                           ; switch strategies available:
 13306                           ; Name         Instructions Cycles
 13307                           ; simple_byte            4     3 (average)
 13308                           ;	Chosen strategy is simple_byte
 13309   009F70  51FA               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13310   009F72  0A00               	xorlw	0	; case 0
 13311   009F74  A4D8               	btfss	status,2,c
 13312   009F76  D7CA               	goto	u24550
 13313                           
 13314                           ; BSR set to: 1
 13315                           ; Switch size 1, requested type "simple"
 13316                           ; Number of cases is 2, Range of values is 92 to 118
 13317                           ; switch strategies available:
 13318                           ; Name         Instructions Cycles
 13319                           ; simple_byte            7     4 (average)
 13320                           ;	Chosen strategy is simple_byte
 13321   009F78  51F9               	movf	??_bootProcessMessage& (0+255),w,b
 13322   009F7A  0A5C               	xorlw	92	; case 92
 13323   009F7C  B4D8               	btfsc	status,2,c
 13324   009F7E  D7DF               	goto	l22901
 13325   009F80  0A2A               	xorlw	42	; case 118
 13326   009F82  B4D8               	btfsc	status,2,c
 13327   009F84  D7D2               	goto	l22895
 13328   009F86  D7C2               	goto	u24550
 13329   009F88                     __end_of_bootProcessMessage:
 13330                           	callstack 0
 13331                           
 13332 ;; *************** function _consumer2QProcessMessage *****************
 13333 ;; Defined at:
 13334 ;;		line 137 in file "../event_consumerDualActionQueue.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;  m               2   63[BANK1 ] PTR struct Message
 13337 ;;		 -> poll@m(9), 
 13338 ;; Auto vars:     Size  Location     Type
 13339 ;;  nextSimultan    1    8[BANK3 ] unsigned char 
 13340 ;;  firstAction     1    7[BANK3 ] unsigned char 
 13341 ;;  nextAction      1    6[BANK3 ] unsigned char 
 13342 ;;  enn             2    3[BANK3 ] unsigned short 
 13343 ;;  action          1   13[BANK3 ] unsigned char 
 13344 ;;  e               1   12[BANK3 ] unsigned char 
 13345 ;;  ca              1   11[BANK3 ] unsigned char 
 13346 ;;  masked_actio    1   10[BANK3 ] unsigned char 
 13347 ;;  io              1    9[BANK3 ] unsigned char 
 13348 ;;  tableIndex      1    5[BANK3 ] unsigned char 
 13349 ;;  opc             1    2[BANK3 ] unsigned char 
 13350 ;;  change          1    1[BANK3 ] char 
 13351 ;;  end             1    0[BANK3 ] unsigned char 
 13352 ;;  start           1    0        unsigned char 
 13353 ;; Return value:  Size  Location     Type
 13354 ;;                  1    wreg      enum E12793
 13355 ;; Registers used:
 13356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13357 ;; Tracked objects:
 13358 ;;		On entry : 0/0
 13359 ;;		On exit  : 0/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13362 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13363 ;;      Locals:         0       0       0       0      14       0       0       0       0       0       0       0       
      +0       0       0       0
 13364 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13365 ;;      Totals:         0       0       5       0      14       0       0       0       0       0       0       0       
      +0       0       0       0
 13366 ;;Total ram usage:       19 bytes
 13367 ;; Hardware stack levels used: 1
 13368 ;; Hardware stack levels required when called: 16
 13369 ;; This function calls:
 13370 ;;		___awdiv
 13371 ;;		___awmod
 13372 ;;		_findEvent
 13373 ;;		_getEVs
 13374 ;;		_getNV
 13375 ;;		_pushTwoAction
 13376 ;;		_setExpeditedActions
 13377 ;;		_setNormalActions
 13378 ;; This function is called by:
 13379 ;;		_poll
 13380 ;; This function uses a non-reentrant model
 13381 ;;
 13382                           
 13383                           	psect	text25
 13384   00351C                     __ptext25:
 13385                           	callstack 0
 13386   00351C                     _consumer2QProcessMessage:
 13387                           	callstack 13
 13388                           
 13389                           ;../event_consumerDualActionQueue.c: 138:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 139:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 140:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 141:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 142:     uint8_t action;;../event_consumerDualActionQueue.c: 143:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 144:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 145:     uint8_t io;;../event_consumerDualActionQueue.c: 14
      +                          6:     uint16_t enn;
 13390                           
 13391                           ;incstack = 0
 13392   00351C  C1F7  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13393   003520  C1F8  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13394   003524  0E05               	movlw	5
 13395   003526  60DF               	cpfslt	indf2,c
 13396   003528  D002               	goto	l22709
 13397   00352A                     u24320:
 13398   00352A  0E00               	movlw	0
 13399   00352C  0012               	return	
 13400   00352E                     l22709:
 13401                           
 13402                           ;../event_consumerDualActionQueue.c: 150:     enn = ((uint16_t)m->bytes[0])*256+m->bytes
      +                          [1];
 13403   00352E  0101               	movlb	1	; () banked
 13404   003530  EE20 F003          	lfsr	2,3
 13405   003534  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13406   003536  26D9               	addwf	fsr2l,f,c
 13407   003538  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13408   00353A  22DA               	addwfc	fsr2h,f,c
 13409   00353C  50DF               	movf	indf2,w,c
 13410   00353E  6FF9               	movwf	??_consumer2QProcessMessage& (0+255),b
 13411   003540  EE20 F002          	lfsr	2,2
 13412   003544  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13413   003546  26D9               	addwf	fsr2l,f,c
 13414   003548  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13415   00354A  22DA               	addwfc	fsr2h,f,c
 13416   00354C  50DF               	movf	indf2,w,c
 13417   00354E  6FFA               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13418   003550  51F9               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13419   003552  0103               	movlb	3	; () banked
 13420   003554  6FCA               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13421   003556  C1FA  F3CB         	movff	??_consumer2QProcessMessage+1,consumer2QProcessMessage@enn+1
 13422                           
 13423                           ;../event_consumerDualActionQueue.c: 152:     switch (m->opc) {
 13424   00355A  D014               	goto	l22723
 13425   00355C                     l444:
 13426                           
 13427                           ; BSR set to: 1
 13428                           ;../event_consumerDualActionQueue.c: 159:             enn = 0;
 13429                           
 13430                           ; BSR set to: 1
 13431   00355C  0E00               	movlw	0
 13432   00355E  0103               	movlb	3	; () banked
 13433   003560  6FCB               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13434   003562  0E00               	movlw	0
 13435   003564  6FCA               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13436   003566                     l449:
 13437                           
 13438                           ;../event_consumerDualActionQueue.c: 168:             end = 20;
 13439   003566  0E14               	movlw	20
 13440   003568  0103               	movlb	3	; () banked
 13441   00356A  6FC7               	movwf	consumer2QProcessMessage@end& (0+255),b
 13442                           
 13443                           ;../event_consumerDualActionQueue.c: 169:             change = 1;
 13444   00356C  0E01               	movlw	1
 13445   00356E  6FC8               	movwf	consumer2QProcessMessage@change& (0+255),b
 13446                           
 13447                           ;../event_consumerDualActionQueue.c: 170:             break;
 13448   003570  D049               	goto	l22725
 13449   003572                     l453:
 13450                           
 13451                           ; BSR set to: 1
 13452                           ;../event_consumerDualActionQueue.c: 177:             enn = 0;
 13453                           
 13454                           ; BSR set to: 1
 13455   003572  0E00               	movlw	0
 13456   003574  0103               	movlb	3	; () banked
 13457   003576  6FCB               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13458   003578  0E00               	movlw	0
 13459   00357A  6FCA               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13460   00357C                     l458:
 13461                           
 13462                           ;../event_consumerDualActionQueue.c: 186:             end = 1 -1;
 13463   00357C  0E00               	movlw	0
 13464   00357E  0103               	movlb	3	; () banked
 13465   003580  6FC7               	movwf	consumer2QProcessMessage@end& (0+255),b
 13466                           
 13467                           ; BSR set to: 3
 13468                           ;../event_consumerDualActionQueue.c: 188:             break;
 13469   003582  D040               	goto	l22725
 13470   003584                     l22723:
 13471                           
 13472                           ; BSR set to: 3
 13473   003584  0101               	movlb	1	; () banked
 13474   003586  EE20 F001          	lfsr	2,1
 13475   00358A  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13476   00358C  26D9               	addwf	fsr2l,f,c
 13477   00358E  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13478   003590  22DA               	addwfc	fsr2h,f,c
 13479   003592  50DF               	movf	indf2,w,c
 13480   003594  6FF9               	movwf	??_consumer2QProcessMessage& (0+255),b
 13481   003596  6BFA               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13482                           
 13483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13484                           ; Switch size 1, requested type "simple"
 13485                           ; Number of cases is 1, Range of values is 0 to 0
 13486                           ; switch strategies available:
 13487                           ; Name         Instructions Cycles
 13488                           ; simple_byte            4     3 (average)
 13489                           ;	Chosen strategy is simple_byte
 13490   003598  51FA               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13491   00359A  0A00               	xorlw	0	; case 0
 13492   00359C  A4D8               	btfss	status,2,c
 13493   00359E  D7C5               	goto	u24320
 13494                           
 13495                           ; BSR set to: 1
 13496                           ; Switch size 1, requested type "simple"
 13497                           ; Number of cases is 16, Range of values is 144 to 249
 13498                           ; switch strategies available:
 13499                           ; Name         Instructions Cycles
 13500                           ; simple_byte           49    25 (average)
 13501                           ;	Chosen strategy is simple_byte
 13502   0035A0  51F9               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13503   0035A2  0A90               	xorlw	144	; case 144
 13504   0035A4  B4D8               	btfsc	status,2,c
 13505   0035A6  D7DF               	goto	l449
 13506   0035A8  0A01               	xorlw	1	; case 145
 13507   0035AA  B4D8               	btfsc	status,2,c
 13508   0035AC  D7E7               	goto	l458
 13509   0035AE  0A09               	xorlw	9	; case 152
 13510   0035B0  B4D8               	btfsc	status,2,c
 13511   0035B2  D7D4               	goto	l444
 13512   0035B4  0A01               	xorlw	1	; case 153
 13513   0035B6  B4D8               	btfsc	status,2,c
 13514   0035B8  D7DC               	goto	l453
 13515   0035BA  0A29               	xorlw	41	; case 176
 13516   0035BC  B4D8               	btfsc	status,2,c
 13517   0035BE  D7D3               	goto	l449
 13518   0035C0  0A01               	xorlw	1	; case 177
 13519   0035C2  B4D8               	btfsc	status,2,c
 13520   0035C4  D7DB               	goto	l458
 13521   0035C6  0A09               	xorlw	9	; case 184
 13522   0035C8  B4D8               	btfsc	status,2,c
 13523   0035CA  D7C8               	goto	l444
 13524   0035CC  0A01               	xorlw	1	; case 185
 13525   0035CE  B4D8               	btfsc	status,2,c
 13526   0035D0  D7D0               	goto	l453
 13527   0035D2  0A69               	xorlw	105	; case 208
 13528   0035D4  B4D8               	btfsc	status,2,c
 13529   0035D6  D7C7               	goto	l449
 13530   0035D8  0A01               	xorlw	1	; case 209
 13531   0035DA  B4D8               	btfsc	status,2,c
 13532   0035DC  D7CF               	goto	l458
 13533   0035DE  0A09               	xorlw	9	; case 216
 13534   0035E0  B4D8               	btfsc	status,2,c
 13535   0035E2  D7BC               	goto	l444
 13536   0035E4  0A01               	xorlw	1	; case 217
 13537   0035E6  B4D8               	btfsc	status,2,c
 13538   0035E8  D7C4               	goto	l453
 13539   0035EA  0A29               	xorlw	41	; case 240
 13540   0035EC  B4D8               	btfsc	status,2,c
 13541   0035EE  D7BB               	goto	l449
 13542   0035F0  0A01               	xorlw	1	; case 241
 13543   0035F2  B4D8               	btfsc	status,2,c
 13544   0035F4  D7C3               	goto	l458
 13545   0035F6  0A09               	xorlw	9	; case 248
 13546   0035F8  B4D8               	btfsc	status,2,c
 13547   0035FA  D7B0               	goto	l444
 13548   0035FC  0A01               	xorlw	1	; case 249
 13549   0035FE  B4D8               	btfsc	status,2,c
 13550   003600  D7B8               	goto	l453
 13551   003602  D793               	goto	u24320
 13552   003604                     l22725:
 13553                           
 13554                           ; BSR set to: 3
 13555                           ;../event_consumerDualActionQueue.c: 194:     tableIndex = findEvent(enn, ((uint16_t)m->
      +                          bytes[2])*256+m->bytes[3]);
 13556   003604  C3CA  F1B8         	movff	consumer2QProcessMessage@enn,findEvent@nodeNumber
 13557   003608  C3CB  F1B9         	movff	consumer2QProcessMessage@enn+1,findEvent@nodeNumber+1
 13558   00360C  0101               	movlb	1	; () banked
 13559   00360E  EE20 F005          	lfsr	2,5
 13560   003612  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13561   003614  26D9               	addwf	fsr2l,f,c
 13562   003616  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13563   003618  22DA               	addwfc	fsr2h,f,c
 13564   00361A  50DF               	movf	indf2,w,c
 13565   00361C  6FF9               	movwf	??_consumer2QProcessMessage& (0+255),b
 13566   00361E  EE20 F004          	lfsr	2,4
 13567   003622  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13568   003624  26D9               	addwf	fsr2l,f,c
 13569   003626  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13570   003628  22DA               	addwfc	fsr2h,f,c
 13571   00362A  50DF               	movf	indf2,w,c
 13572   00362C  6FFA               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13573   00362E  51F9               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13574   003630  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 13575   003632  C1FA  F1BB         	movff	??_consumer2QProcessMessage+1,findEvent@eventNumber+1
 13576   003636  ECE9  F050         	call	_findEvent	;wreg free
 13577   00363A  0103               	movlb	3	; () banked
 13578   00363C  6FCC               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13579                           
 13580                           ; BSR set to: 3
 13581                           ;../event_consumerDualActionQueue.c: 195:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13582   00363E  29CC               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13583   003640  B4D8               	btfsc	status,2,c
 13584   003642  D773               	goto	u24320
 13585                           
 13586                           ; BSR set to: 3
 13587   003644  51CC               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13588   003646  EC5F  F040         	call	_getEVs
 13589                           
 13590                           ;../event_consumerDualActionQueue.c: 203:     opc=m->opc;
 13591   00364A  0101               	movlb	1	; () banked
 13592   00364C  EE20 F001          	lfsr	2,1
 13593   003650  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13594   003652  26D9               	addwf	fsr2l,f,c
 13595   003654  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13596   003656  22DA               	addwfc	fsr2h,f,c
 13597   003658  50DF               	movf	indf2,w,c
 13598   00365A  0103               	movlb	3	; () banked
 13599   00365C  6FC9               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13600                           
 13601                           ; BSR set to: 3
 13602                           ;../event_consumerDualActionQueue.c: 205:     if ( ! (opc&0b00000001)) {
 13603   00365E  B1C9               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13604   003660  D07F               	goto	l461
 13605                           
 13606                           ; BSR set to: 3
 13607                           ;../event_consumerDualActionQueue.c: 209:         for (e=1; e<20 ;e++) {
 13608   003662  0E01               	movlw	1
 13609   003664  6FD3               	movwf	consumer2QProcessMessage@e& (0+255),b
 13610   003666                     l22745:
 13611                           
 13612                           ; BSR set to: 3
 13613                           ;../event_consumerDualActionQueue.c: 210:             action = evs[e];
 13614   003666  0E40               	movlw	low _evs
 13615   003668  25D3               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13616   00366A  6ED9               	movwf	fsr2l,c
 13617   00366C  6ADA               	clrf	fsr2h,c
 13618   00366E  0E02               	movlw	high _evs
 13619   003670  22DA               	addwfc	fsr2h,f,c
 13620   003672  50DF               	movf	indf2,w,c
 13621   003674  6FD4               	movwf	consumer2QProcessMessage@action& (0+255),b
 13622                           
 13623                           ; BSR set to: 3
 13624                           ;../event_consumerDualActionQueue.c: 211:             if (action != 0) {
 13625   003676  51D4               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13626   003678  B4D8               	btfsc	status,2,c
 13627   00367A  D06C               	goto	l465
 13628                           
 13629                           ; BSR set to: 3
 13630                           ;../event_consumerDualActionQueue.c: 213:                 masked_action = action&0x7F;
 13631   00367C  51D4               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13632   00367E  0B7F               	andlw	127
 13633   003680  6FD1               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13634                           
 13635                           ;../event_consumerDualActionQueue.c: 214:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 13636   003682  0E59               	movlw	89
 13637   003684  61D1               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13638   003686  D066               	goto	l465
 13639                           
 13640                           ; BSR set to: 3
 13641                           ;../event_consumerDualActionQueue.c: 216:                     if ((masked_action) == 7) 
      +                          {
 13642   003688  0E07               	movlw	7
 13643   00368A  19D1               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13644   00368C  B4D8               	btfsc	status,2,c
 13645   00368E  D106               	goto	u24540
 13646                           
 13647                           ; BSR set to: 3
 13648                           ;../event_consumerDualActionQueue.c: 219:                     if ((masked_action) < 8) {
 13649   003690  0E08               	movlw	8
 13650   003692  61D1               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13651   003694  D004               	goto	l22759
 13652                           
 13653                           ; BSR set to: 3
 13654                           ;../event_consumerDualActionQueue.c: 220:                         pushTwoAction(action);
 13655   003696  51D4               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13656   003698  ECF2  F058         	call	_pushTwoAction
 13657                           
 13658                           ;../event_consumerDualActionQueue.c: 221:                     } else {
 13659   00369C  D05B               	goto	l465
 13660   00369E                     l22759:
 13661                           
 13662                           ; BSR set to: 3
 13663                           ;../event_consumerDualActionQueue.c: 222:                         io = (((masked_action)
      +                          -8)/5);
 13664   00369E  0EF8               	movlw	248
 13665   0036A0  25D1               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13666   0036A2  0100               	movlb	0	; () banked
 13667   0036A4  6F97               	movwf	___awdiv@dividend& (0+255),b
 13668   0036A6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13669   0036A8  0EFF               	movlw	255
 13670   0036AA  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13671   0036AC  0E00               	movlw	0
 13672   0036AE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13673   0036B0  0E05               	movlw	5
 13674   0036B2  6F99               	movwf	___awdiv@divisor& (0+255),b
 13675   0036B4  EC4A  F052         	call	___awdiv	;wreg free
 13676   0036B8  0100               	movlb	0	; () banked
 13677   0036BA  5197               	movf	?___awdiv& (0+255),w,b
 13678   0036BC  0103               	movlb	3	; () banked
 13679   0036BE  6FD0               	movwf	consumer2QProcessMessage@io& (0+255),b
 13680                           
 13681                           ;../event_consumerDualActionQueue.c: 223:                         ca = (((masked_action)
      +                          -8)%5);
 13682   0036C0  0EF8               	movlw	248
 13683   0036C2  25D1               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13684   0036C4  0100               	movlb	0	; () banked
 13685   0036C6  6F8D               	movwf	___awmod@dividend& (0+255),b
 13686   0036C8  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13687   0036CA  0EFF               	movlw	255
 13688   0036CC  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13689   0036CE  0E00               	movlw	0
 13690   0036D0  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13691   0036D2  0E05               	movlw	5
 13692   0036D4  6F8F               	movwf	___awmod@divisor& (0+255),b
 13693   0036D6  EC26  F056         	call	___awmod	;wreg free
 13694   0036DA  0100               	movlb	0	; () banked
 13695   0036DC  518D               	movf	?___awmod& (0+255),w,b
 13696   0036DE  0103               	movlb	3	; () banked
 13697   0036E0  6FD2               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13698                           
 13699                           ;../event_consumerDualActionQueue.c: 224:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13700   0036E2  D020               	goto	l22781
 13701   0036E4                     l22761:
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;../event_consumerDualActionQueue.c: 229:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13705   0036E4  0103               	movlb	3	; () banked
 13706   0036E6  51D0               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13707   0036E8  0D07               	mullw	7
 13708   0036EA  50F3               	movf	243,w,c
 13709   0036EC  0F11               	addlw	17
 13710   0036EE  EC21  F05D         	call	_getNV
 13711   0036F2  0100               	movlb	0	; () banked
 13712   0036F4  BF8D               	btfsc	?_getNV& (0+255),7,b
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;../event_consumerDualActionQueue.c: 230:                                     setExpedit
      +                          edActions();
 13716   0036F6  ECE1  F061         	call	_setExpeditedActions	;wreg free
 13717   0036FA                     l22765:
 13718                           
 13719                           ;../event_consumerDualActionQueue.c: 235:                                 if (ca == 0) {
 13720   0036FA  0103               	movlb	3	; () banked
 13721   0036FC  51D2               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13722   0036FE  B4D8               	btfsc	status,2,c
 13723                           
 13724                           ; BSR set to: 3
 13725                           ;../event_consumerDualActionQueue.c: 237:                                     action++;
 13726   003700  2BD4               	incf	consumer2QProcessMessage@action& (0+255),f,b
 13727                           
 13728                           ; BSR set to: 3
 13729                           ;../event_consumerDualActionQueue.c: 239:                                 if (ca == 4) {
 13730   003702  0E04               	movlw	4
 13731   003704  19D2               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13732   003706  A4D8               	btfss	status,2,c
 13733   003708  D002               	goto	l22773
 13734                           
 13735                           ; BSR set to: 3
 13736                           ;../event_consumerDualActionQueue.c: 241:                                     action-=2;
 13737   00370A  0E02               	movlw	2
 13738   00370C  5FD4               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 13739   00370E                     l22773:
 13740                           
 13741                           ; BSR set to: 3
 13742                           ;../event_consumerDualActionQueue.c: 243:                                 pushTwoAction(
      +                          action);
 13743   00370E  51D4               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13744   003710  ECF2  F058         	call	_pushTwoAction
 13745                           
 13746                           ;../event_consumerDualActionQueue.c: 244:                                 setNormalActio
      +                          ns();
 13747   003714  ECDE  F061         	call	_setNormalActions	;wreg free
 13748                           
 13749                           ;../event_consumerDualActionQueue.c: 245:                                 break;
 13750   003718  D01D               	goto	l465
 13751   00371A                     l22777:
 13752                           
 13753                           ; BSR set to: 0
 13754                           ;../event_consumerDualActionQueue.c: 247:                                 pushTwoAction(
      +                          action);
 13755   00371A  0103               	movlb	3	; () banked
 13756   00371C  51D4               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13757   00371E  ECF2  F058         	call	_pushTwoAction
 13758                           
 13759                           ;../event_consumerDualActionQueue.c: 248:                                 break;
 13760   003722  D018               	goto	l465
 13761   003724                     l22781:
 13762                           
 13763                           ; BSR set to: 3
 13764   003724  51D0               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13765   003726  0D07               	mullw	7
 13766   003728  50F3               	movf	243,w,c
 13767   00372A  0F10               	addlw	16
 13768   00372C  EC21  F05D         	call	_getNV
 13769                           
 13770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13771                           ; Switch size 1, requested type "simple"
 13772                           ; Number of cases is 1, Range of values is 0 to 0
 13773                           ; switch strategies available:
 13774                           ; Name         Instructions Cycles
 13775                           ; simple_byte            4     3 (average)
 13776                           ;	Chosen strategy is simple_byte
 13777   003730  0100               	movlb	0	; () banked
 13778   003732  518E               	movf	(?_getNV+1)& (0+255),w,b
 13779   003734  0A00               	xorlw	0	; case 0
 13780   003736  A4D8               	btfss	status,2,c
 13781   003738  D00D               	goto	l465
 13782                           
 13783                           ; BSR set to: 0
 13784                           ; Switch size 1, requested type "simple"
 13785                           ; Number of cases is 4, Range of values is 1 to 4
 13786                           ; switch strategies available:
 13787                           ; Name         Instructions Cycles
 13788                           ; simple_byte           13     7 (average)
 13789                           ;	Chosen strategy is simple_byte
 13790   00373A  518D               	movf	?_getNV& (0+255),w,b
 13791   00373C  0A01               	xorlw	1	; case 1
 13792   00373E  B4D8               	btfsc	status,2,c
 13793   003740  D7D1               	goto	l22761
 13794   003742  0A03               	xorlw	3	; case 2
 13795   003744  B4D8               	btfsc	status,2,c
 13796   003746  D7D9               	goto	l22765
 13797   003748  0A01               	xorlw	1	; case 3
 13798   00374A  B4D8               	btfsc	status,2,c
 13799   00374C  D7D6               	goto	l22765
 13800   00374E  0A07               	xorlw	7	; case 4
 13801   003750  B4D8               	btfsc	status,2,c
 13802   003752  D7E3               	goto	l22777
 13803   003754                     l465:
 13804                           
 13805                           ;../event_consumerDualActionQueue.c: 256:         }
 13806                           
 13807                           ; BSR set to: 0
 13808   003754  0103               	movlb	3	; () banked
 13809   003756  2BD3               	incf	consumer2QProcessMessage@e& (0+255),f,b
 13810                           
 13811                           ; BSR set to: 3
 13812   003758  0E13               	movlw	19
 13813   00375A  65D3               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13814   00375C  D784               	goto	l22745
 13815   00375E  D09E               	goto	u24540
 13816   003760                     l461:
 13817                           
 13818                           ; BSR set to: 3
 13819                           ;../event_consumerDualActionQueue.c: 260:         uint8_t nextAction = evs[20 -1];
 13820   003760  C253  F3CD         	movff	_evs+19,consumer2QProcessMessage@nextAction
 13821                           
 13822                           ; BSR set to: 3
 13823                           ;../event_consumerDualActionQueue.c: 262:         for (e=20 -1; e>=1 ;e--) {
 13824   003764  0E13               	movlw	19
 13825   003766  6FD3               	movwf	consumer2QProcessMessage@e& (0+255),b
 13826   003768                     l22791:
 13827                           
 13828                           ; BSR set to: 3
 13829                           ;../event_consumerDualActionQueue.c: 263:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 264:             uint8_t firstAction = 0;
 13830   003768  0E00               	movlw	0
 13831   00376A  6FCE               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 13832                           
 13833                           ; BSR set to: 3
 13834                           ;../event_consumerDualActionQueue.c: 265:             action = nextAction;
 13835   00376C  C3CD  F3D4         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 13836                           
 13837                           ; BSR set to: 3
 13838                           ;../event_consumerDualActionQueue.c: 269:             if (e > 1) {
 13839   003770  0E01               	movlw	1
 13840   003772  65D3               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13841   003774  D00A               	goto	l22801
 13842                           
 13843                           ; BSR set to: 3
 13844                           ;../event_consumerDualActionQueue.c: 270:                 nextAction = evs[e-1];
 13845   003776  0E3F               	movlw	low (_evs+65535)
 13846   003778  25D3               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13847   00377A  6ED9               	movwf	fsr2l,c
 13848   00377C  6ADA               	clrf	fsr2h,c
 13849   00377E  0E02               	movlw	high (_evs+65535)
 13850   003780  22DA               	addwfc	fsr2h,f,c
 13851   003782  50DF               	movf	indf2,w,c
 13852   003784  6FCD               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 13853                           
 13854                           ; BSR set to: 3
 13855                           ;../event_consumerDualActionQueue.c: 271:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 13856   003786  51CD               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 13857   003788  D001               	goto	L3
 13858   00378A                     l22801:
 13859                           
 13860                           ; BSR set to: 3
 13861                           ;../event_consumerDualActionQueue.c: 273:                 nextSimultaneous = firstAction
      +                           & 0x80;
 13862   00378A  51CE               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13863   00378C                     L3:
 13864   00378C  0B80               	andlw	128
 13865   00378E  6FCF               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 13866                           
 13867                           ; BSR set to: 3
 13868                           ;../event_consumerDualActionQueue.c: 275:             if (action != 0) {
 13869   003790  51D4               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13870   003792  B4D8               	btfsc	status,2,c
 13871   003794  D07E               	goto	l486
 13872                           
 13873                           ; BSR set to: 3
 13874                           ;../event_consumerDualActionQueue.c: 277:                 if (firstAction == 0) {
 13875   003796  51CE               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13876   003798  B4D8               	btfsc	status,2,c
 13877                           
 13878                           ; BSR set to: 3
 13879                           ;../event_consumerDualActionQueue.c: 278:                     firstAction = action;
 13880   00379A  C3D4  F3CE         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 13881                           
 13882                           ; BSR set to: 3
 13883                           ;../event_consumerDualActionQueue.c: 280:                 action &= 0x7F;
 13884   00379E  9FD4               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 13885                           
 13886                           ; BSR set to: 3
 13887                           ;../event_consumerDualActionQueue.c: 281:                 if (action <= (8 + 5 * 16)) {
 13888   0037A0  0E59               	movlw	89
 13889   0037A2  61D4               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13890   0037A4  D076               	goto	l486
 13891                           
 13892                           ; BSR set to: 3
 13893                           ;../event_consumerDualActionQueue.c: 283:                     if ((action) == 7) {
 13894   0037A6  0E07               	movlw	7
 13895   0037A8  19D4               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 13896   0037AA  B4D8               	btfsc	status,2,c
 13897   0037AC  D077               	goto	u24540
 13898                           
 13899                           ; BSR set to: 3
 13900                           ;../event_consumerDualActionQueue.c: 286:                     if ((action < 8) && (actio
      +                          n != 1)) {
 13901   0037AE  0E08               	movlw	8
 13902   0037B0  61D4               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13903   0037B2  D009               	goto	l22825
 13904                           
 13905                           ; BSR set to: 3
 13906   0037B4  05D4               	decf	consumer2QProcessMessage@action& (0+255),w,b
 13907   0037B6  B4D8               	btfsc	status,2,c
 13908   0037B8  D006               	goto	l22825
 13909                           
 13910                           ; BSR set to: 3
 13911                           ;../event_consumerDualActionQueue.c: 287:                         action |= nextSimultan
      +                          eous;
 13912   0037BA  51CF               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 13913   0037BC  13D4               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 13914                           
 13915                           ; BSR set to: 3
 13916                           ;../event_consumerDualActionQueue.c: 288:                         pushTwoAction(action);
 13917   0037BE  51D4               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13918   0037C0  ECF2  F058         	call	_pushTwoAction
 13919                           
 13920                           ;../event_consumerDualActionQueue.c: 289:                     } else {
 13921   0037C4  D066               	goto	l486
 13922   0037C6                     l22825:
 13923                           
 13924                           ; BSR set to: 3
 13925                           ;../event_consumerDualActionQueue.c: 290:                         io = (((action)-8)/5);
 13926   0037C6  0EF8               	movlw	248
 13927   0037C8  25D4               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 13928   0037CA  0100               	movlb	0	; () banked
 13929   0037CC  6F97               	movwf	___awdiv@dividend& (0+255),b
 13930   0037CE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13931   0037D0  0EFF               	movlw	255
 13932   0037D2  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13933   0037D4  0E00               	movlw	0
 13934   0037D6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13935   0037D8  0E05               	movlw	5
 13936   0037DA  6F99               	movwf	___awdiv@divisor& (0+255),b
 13937   0037DC  EC4A  F052         	call	___awdiv	;wreg free
 13938   0037E0  0100               	movlb	0	; () banked
 13939   0037E2  5197               	movf	?___awdiv& (0+255),w,b
 13940   0037E4  0103               	movlb	3	; () banked
 13941   0037E6  6FD0               	movwf	consumer2QProcessMessage@io& (0+255),b
 13942                           
 13943                           ;../event_consumerDualActionQueue.c: 291:                         ca = (((action)-8)%5);
 13944   0037E8  0EF8               	movlw	248
 13945   0037EA  25D4               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 13946   0037EC  0100               	movlb	0	; () banked
 13947   0037EE  6F8D               	movwf	___awmod@dividend& (0+255),b
 13948   0037F0  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13949   0037F2  0EFF               	movlw	255
 13950   0037F4  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13951   0037F6  0E00               	movlw	0
 13952   0037F8  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13953   0037FA  0E05               	movlw	5
 13954   0037FC  6F8F               	movwf	___awmod@divisor& (0+255),b
 13955   0037FE  EC26  F056         	call	___awmod	;wreg free
 13956   003802  0100               	movlb	0	; () banked
 13957   003804  518D               	movf	?___awmod& (0+255),w,b
 13958   003806  0103               	movlb	3	; () banked
 13959   003808  6FD2               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13960                           
 13961                           ;../event_consumerDualActionQueue.c: 292:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13962   00380A  D02B               	goto	l22853
 13963   00380C                     l22827:
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;../event_consumerDualActionQueue.c: 297:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13967   00380C  0103               	movlb	3	; () banked
 13968   00380E  51D0               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13969   003810  0D07               	mullw	7
 13970   003812  50F3               	movf	243,w,c
 13971   003814  0F11               	addlw	17
 13972   003816  EC21  F05D         	call	_getNV
 13973   00381A  0100               	movlb	0	; () banked
 13974   00381C  BF8D               	btfsc	?_getNV& (0+255),7,b
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;../event_consumerDualActionQueue.c: 298:                                     setExpedit
      +                          edActions();
 13978   00381E  ECE1  F061         	call	_setExpeditedActions	;wreg free
 13979                           
 13980                           ;../event_consumerDualActionQueue.c: 300:                                 if (ca == 3) {
 13981   003822  0E03               	movlw	3
 13982   003824  0103               	movlb	3	; () banked
 13983   003826  19D2               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13984   003828  B4D8               	btfsc	status,2,c
 13985                           
 13986                           ; BSR set to: 3
 13987                           ;../event_consumerDualActionQueue.c: 302:                                     action--;
 13988   00382A  07D4               	decf	consumer2QProcessMessage@action& (0+255),f,b
 13989   00382C                     l22835:
 13990                           
 13991                           ;../event_consumerDualActionQueue.c: 307:                                 if (ca == 0) {
 13992   00382C  0103               	movlb	3	; () banked
 13993   00382E  51D2               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13994   003830  A4D8               	btfss	status,2,c
 13995   003832  D002               	goto	l496
 13996                           
 13997                           ; BSR set to: 3
 13998                           ;../event_consumerDualActionQueue.c: 309:                                     action += 
      +                          2;
 13999   003834  0E02               	movlw	2
 14000   003836  27D4               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 14001   003838                     l496:
 14002                           
 14003                           ; BSR set to: 3
 14004                           ;../event_consumerDualActionQueue.c: 311:                                 if (ca == 4) {
 14005   003838  0E04               	movlw	4
 14006   00383A  19D2               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14007   00383C  A4D8               	btfss	status,2,c
 14008   00383E  D002               	goto	l497
 14009                           
 14010                           ; BSR set to: 3
 14011                           ;../event_consumerDualActionQueue.c: 313:                                     action -= 
      +                          3;
 14012   003840  0E03               	movlw	3
 14013   003842  5FD4               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14014   003844                     l497:
 14015                           
 14016                           ; BSR set to: 3
 14017                           ;../event_consumerDualActionQueue.c: 315:                                 action |= next
      +                          Simultaneous;
 14018   003844  51CF               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14019   003846  13D4               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14020                           
 14021                           ; BSR set to: 3
 14022                           ;../event_consumerDualActionQueue.c: 316:                                 pushTwoAction(
      +                          action);
 14023   003848  51D4               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14024   00384A  ECF2  F058         	call	_pushTwoAction
 14025   00384E                     l22843:
 14026                           
 14027                           ;../event_consumerDualActionQueue.c: 317:                                 setNormalActio
      +                          ns();
 14028   00384E  ECDE  F061         	call	_setNormalActions	;wreg free
 14029                           
 14030                           ;../event_consumerDualActionQueue.c: 318:                                 break;
 14031   003852  D01F               	goto	l486
 14032   003854                     l22845:
 14033                           
 14034                           ; BSR set to: 0
 14035                           ;../event_consumerDualActionQueue.c: 320:                                 action |= next
      +                          Simultaneous;
 14036   003854  0103               	movlb	3	; () banked
 14037   003856  51CF               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14038   003858  13D4               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14039                           
 14040                           ; BSR set to: 3
 14041                           ;../event_consumerDualActionQueue.c: 321:                                 pushTwoAction(
      +                          action);
 14042   00385A  51D4               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14043   00385C  ECF2  F058         	call	_pushTwoAction
 14044   003860  D7F6               	goto	l22843
 14045   003862                     l22853:
 14046                           
 14047                           ; BSR set to: 3
 14048   003862  51D0               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14049   003864  0D07               	mullw	7
 14050   003866  50F3               	movf	243,w,c
 14051   003868  0F10               	addlw	16
 14052   00386A  EC21  F05D         	call	_getNV
 14053                           
 14054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14055                           ; Switch size 1, requested type "simple"
 14056                           ; Number of cases is 1, Range of values is 0 to 0
 14057                           ; switch strategies available:
 14058                           ; Name         Instructions Cycles
 14059                           ; simple_byte            4     3 (average)
 14060                           ;	Chosen strategy is simple_byte
 14061   00386E  0100               	movlb	0	; () banked
 14062   003870  518E               	movf	(?_getNV+1)& (0+255),w,b
 14063   003872  0A00               	xorlw	0	; case 0
 14064   003874  A4D8               	btfss	status,2,c
 14065   003876  D00D               	goto	l486
 14066                           
 14067                           ; BSR set to: 0
 14068                           ; Switch size 1, requested type "simple"
 14069                           ; Number of cases is 4, Range of values is 1 to 4
 14070                           ; switch strategies available:
 14071                           ; Name         Instructions Cycles
 14072                           ; simple_byte           13     7 (average)
 14073                           ;	Chosen strategy is simple_byte
 14074   003878  518D               	movf	?_getNV& (0+255),w,b
 14075   00387A  0A01               	xorlw	1	; case 1
 14076   00387C  B4D8               	btfsc	status,2,c
 14077   00387E  D7C6               	goto	l22827
 14078   003880  0A03               	xorlw	3	; case 2
 14079   003882  B4D8               	btfsc	status,2,c
 14080   003884  D7D3               	goto	l22835
 14081   003886  0A01               	xorlw	1	; case 3
 14082   003888  B4D8               	btfsc	status,2,c
 14083   00388A  D7D0               	goto	l22835
 14084   00388C  0A07               	xorlw	7	; case 4
 14085   00388E  B4D8               	btfsc	status,2,c
 14086   003890  D7E1               	goto	l22845
 14087   003892                     l486:
 14088                           
 14089                           ;../event_consumerDualActionQueue.c: 331:         }
 14090                           
 14091                           ; BSR set to: 0
 14092   003892  0103               	movlb	3	; () banked
 14093   003894  07D3               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14094                           
 14095                           ; BSR set to: 3
 14096   003896  51D3               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14097   003898  A4D8               	btfss	status,2,c
 14098   00389A  D766               	goto	l22791
 14099   00389C                     u24540:
 14100                           
 14101                           ; BSR set to: 3
 14102                           ;../event_consumerDualActionQueue.c: 334:     consumer2QDiagnostics[0].asUint++;
 14103   00389C  0101               	movlb	1	; () banked
 14104   00389E  4BB6               	infsnz	_consumer2QDiagnostics& (0+255),f,b
 14105   0038A0  2BB7               	incf	(_consumer2QDiagnostics+1)& (0+255),f,b
 14106                           
 14107                           ; BSR set to: 1
 14108                           ;../event_consumerDualActionQueue.c: 336:     return PROCESSED;
 14109   0038A2  0E01               	movlw	1
 14110   0038A4  0012               	return		;funcret
 14111   0038A6                     __end_of_consumer2QProcessMessage:
 14112                           	callstack 0
 14113                           
 14114 ;; *************** function _teachProcessMessage *****************
 14115 ;; Defined at:
 14116 ;;		line 380 in file "../../VLCBlib_PIC/event_teach_large.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;  m               2   63[BANK1 ] PTR struct Message
 14119 ;;		 -> poll@m(9), 
 14120 ;; Auto vars:     Size  Location     Type
 14121 ;;		None
 14122 ;; Return value:  Size  Location     Type
 14123 ;;                  1    wreg      enum E12793
 14124 ;; Registers used:
 14125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14126 ;; Tracked objects:
 14127 ;;		On entry : 0/0
 14128 ;;		On exit  : 0/0
 14129 ;;		Unchanged: 0/0
 14130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14131 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14133 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14134 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14135 ;;Total ram usage:        8 bytes
 14136 ;; Hardware stack levels used: 1
 14137 ;; Hardware stack levels required when called: 24
 14138 ;; This function calls:
 14139 ;;		_doEvlrn
 14140 ;;		_doEvuln
 14141 ;;		_doNenrd
 14142 ;;		_doNerd
 14143 ;;		_doNnclr
 14144 ;;		_doNnevn
 14145 ;;		_doReqev
 14146 ;;		_doReval
 14147 ;;		_doRqevn
 14148 ;;		_sendMessage3
 14149 ;;		_sendMessage5
 14150 ;;		_teachCheckLen
 14151 ;; This function is called by:
 14152 ;;		_poll
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text26
 14157   002200                     __ptext26:
 14158                           	callstack 0
 14159   002200                     _teachProcessMessage:
 14160                           	callstack 5
 14161                           
 14162                           ;../../VLCBlib_PIC/event_teach_large.c: 381:     switch(m->opc) {
 14163                           
 14164                           ;incstack = 0
 14165   002200  D2EB               	goto	l24243
 14166   002202                     l23977:
 14167                           
 14168                           ; BSR set to: 1
 14169                           ;../../VLCBlib_PIC/event_teach_large.c: 384:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14170   002202  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14171   002206  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14172   00220A  0E03               	movlw	3
 14173   00220C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14174   00220E  0E00               	movlw	0
 14175   002210  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14176   002212  EC62  F058         	call	_teachCheckLen	;wreg free
 14177   002216  06E8               	decf	wreg,f,c
 14178   002218  A4D8               	btfss	status,2,c
 14179   00221A  D002               	goto	l23983
 14180   00221C                     u25690:
 14181   00221C  0E01               	movlw	1
 14182   00221E  0012               	return	
 14183   002220                     l23983:
 14184                           
 14185                           ;../../VLCBlib_PIC/event_teach_large.c: 385:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14186   002220  0101               	movlb	1	; () banked
 14187   002222  EE20 F002          	lfsr	2,2
 14188   002226  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14189   002228  26D9               	addwf	fsr2l,f,c
 14190   00222A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14191   00222C  22DA               	addwfc	fsr2h,f,c
 14192   00222E  50DE               	movf	postinc2,w,c
 14193   002230  0100               	movlb	0	; () banked
 14194   002232  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14195   002234  A4D8               	btfss	status,2,c
 14196   002236  D00F               	goto	l23989
 14197                           
 14198                           ; BSR set to: 0
 14199   002238  0101               	movlb	1	; () banked
 14200   00223A  EE20 F003          	lfsr	2,3
 14201   00223E  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14202   002240  26D9               	addwf	fsr2l,f,c
 14203   002242  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14204   002244  22DA               	addwfc	fsr2h,f,c
 14205   002246  0100               	movlb	0	; () banked
 14206   002248  51BF               	movf	_nn& (0+255),w,b
 14207   00224A  18DE               	xorwf	postinc2,w,c
 14208   00224C  A4D8               	btfss	status,2,c
 14209   00224E  D003               	goto	l23989
 14210   002250                     u25710:
 14211                           
 14212                           ;../../VLCBlib_PIC/event_teach_large.c: 386:                 mode_flags |= 1;
 14213   002250  0101               	movlb	1	; () banked
 14214   002252  8176               	bsf	_mode_flags& (0+255),0,b
 14215                           
 14216                           ;../../VLCBlib_PIC/event_teach_large.c: 387:             } else {
 14217   002254  D7E3               	goto	u25690
 14218   002256                     l23989:
 14219                           
 14220                           ;../../VLCBlib_PIC/event_teach_large.c: 388:                 mode_flags &= ~1;
 14221   002256  0101               	movlb	1	; () banked
 14222   002258  9176               	bcf	_mode_flags& (0+255),0,b
 14223   00225A  D7E0               	goto	u25690
 14224   00225C                     l23995:
 14225                           
 14226                           ; BSR set to: 1
 14227                           ;../../VLCBlib_PIC/event_teach_large.c: 393:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14228   00225C  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14229   002260  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14230   002264  0E04               	movlw	4
 14231   002266  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14232   002268  0E00               	movlw	0
 14233   00226A  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14234   00226C  EC62  F058         	call	_teachCheckLen	;wreg free
 14235   002270  06E8               	decf	wreg,f,c
 14236   002272  B4D8               	btfsc	status,2,c
 14237   002274  D7D3               	goto	u25690
 14238                           
 14239                           ;../../VLCBlib_PIC/event_teach_large.c: 394:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14240   002276  0101               	movlb	1	; () banked
 14241   002278  EE20 F002          	lfsr	2,2
 14242   00227C  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14243   00227E  26D9               	addwf	fsr2l,f,c
 14244   002280  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14245   002282  22DA               	addwfc	fsr2h,f,c
 14246   002284  50DE               	movf	postinc2,w,c
 14247   002286  0100               	movlb	0	; () banked
 14248   002288  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14249   00228A  A4D8               	btfss	status,2,c
 14250   00228C  D022               	goto	l24023
 14251                           
 14252                           ; BSR set to: 0
 14253   00228E  0101               	movlb	1	; () banked
 14254   002290  EE20 F003          	lfsr	2,3
 14255   002294  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14256   002296  26D9               	addwf	fsr2l,f,c
 14257   002298  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14258   00229A  22DA               	addwfc	fsr2h,f,c
 14259   00229C  0100               	movlb	0	; () banked
 14260   00229E  51BF               	movf	_nn& (0+255),w,b
 14261   0022A0  18DE               	xorwf	postinc2,w,c
 14262   0022A2  A4D8               	btfss	status,2,c
 14263   0022A4  D016               	goto	l24023
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;../../VLCBlib_PIC/event_teach_large.c: 395:                 if (m->bytes[2] == MODE_LEA
      +                          RN_ON) {
 14267   0022A6  0101               	movlb	1	; () banked
 14268   0022A8  EE20 F004          	lfsr	2,4
 14269   0022AC  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14270   0022AE  26D9               	addwf	fsr2l,f,c
 14271   0022B0  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14272   0022B2  22DA               	addwfc	fsr2h,f,c
 14273   0022B4  0E08               	movlw	8
 14274   0022B6  18DE               	xorwf	postinc2,w,c
 14275   0022B8  B4D8               	btfsc	status,2,c
 14276   0022BA  D7CA               	goto	u25710
 14277                           
 14278                           ; BSR set to: 1
 14279   0022BC  EE20 F004          	lfsr	2,4
 14280   0022C0  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14281   0022C2  26D9               	addwf	fsr2l,f,c
 14282   0022C4  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14283   0022C6  22DA               	addwfc	fsr2h,f,c
 14284   0022C8  0E09               	movlw	9
 14285   0022CA  18DE               	xorwf	postinc2,w,c
 14286   0022CC  B4D8               	btfsc	status,2,c
 14287   0022CE  D7C3               	goto	l23989
 14288   0022D0  D002               	goto	l24025
 14289   0022D2                     l24023:
 14290                           
 14291                           ; BSR set to: 0
 14292                           ;../../VLCBlib_PIC/event_teach_large.c: 406:                 mode_flags &= ~1;
 14293   0022D2  0101               	movlb	1	; () banked
 14294   0022D4  9176               	bcf	_mode_flags& (0+255),0,b
 14295   0022D6                     l24025:
 14296                           
 14297                           ;../../VLCBlib_PIC/event_teach_large.c: 408:             return NOT_PROCESSED;
 14298   0022D6  0E00               	movlw	0
 14299   0022D8  0012               	return	
 14300   0022DA                     l24029:
 14301                           
 14302                           ; BSR set to: 1
 14303                           ;../../VLCBlib_PIC/event_teach_large.c: 412:             if (teachCheckLen(m, 7, 1) == P
      +                          ROCESSED) {
 14304   0022DA  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14305   0022DE  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14306   0022E2  0E07               	movlw	7
 14307   0022E4  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14308   0022E6  0E01               	movlw	1
 14309   0022E8  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14310   0022EA  EC62  F058         	call	_teachCheckLen	;wreg free
 14311   0022EE  06E8               	decf	wreg,f,c
 14312   0022F0  A4D8               	btfss	status,2,c
 14313   0022F2  D00B               	goto	l2680
 14314                           
 14315                           ;../../VLCBlib_PIC/event_teach_large.c: 413:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 14316   0022F4  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 14317   0022F8  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 14318   0022FC  0E01               	movlw	1
 14319   0022FE  0100               	movlb	0	; () banked
 14320   002300  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14321   002302  0E6F               	movlw	111
 14322   002304  ECED  F05E         	call	_sendMessage3
 14323   002308  D789               	goto	u25690
 14324   00230A                     l2680:
 14325                           
 14326                           ;../../VLCBlib_PIC/event_teach_large.c: 417:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14327   00230A  0101               	movlb	1	; () banked
 14328   00230C  A176               	btfss	_mode_flags& (0+255),0,b
 14329   00230E  D786               	goto	u25690
 14330                           
 14331                           ; BSR set to: 1
 14332                           ;../../VLCBlib_PIC/event_teach_large.c: 419:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5
      +                          ]);
 14333   002310  EE20 F003          	lfsr	2,3
 14334   002314  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14335   002316  26D9               	addwf	fsr2l,f,c
 14336   002318  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14337   00231A  22DA               	addwfc	fsr2h,f,c
 14338   00231C  50DF               	movf	indf2,w,c
 14339   00231E  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14340   002320  EE20 F002          	lfsr	2,2
 14341   002324  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14342   002326  26D9               	addwf	fsr2l,f,c
 14343   002328  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14344   00232A  22DA               	addwfc	fsr2h,f,c
 14345   00232C  50DF               	movf	indf2,w,c
 14346   00232E  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14347   002330  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14348   002332  6FEC               	movwf	doEvlrn@nodeNumber& (0+255),b
 14349   002334  C1FA  F1ED         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14350   002338  EE20 F005          	lfsr	2,5
 14351   00233C  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14352   00233E  26D9               	addwf	fsr2l,f,c
 14353   002340  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14354   002342  22DA               	addwfc	fsr2h,f,c
 14355   002344  50DF               	movf	indf2,w,c
 14356   002346  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14357   002348  EE20 F004          	lfsr	2,4
 14358   00234C  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14359   00234E  26D9               	addwf	fsr2l,f,c
 14360   002350  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14361   002352  22DA               	addwfc	fsr2h,f,c
 14362   002354  50DF               	movf	indf2,w,c
 14363   002356  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14364   002358  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14365   00235A  6FEE               	movwf	doEvlrn@eventNumber& (0+255),b
 14366   00235C  C1FD  F1EF         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14367   002360  EE20 F006          	lfsr	2,6
 14368   002364  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14369   002366  26D9               	addwf	fsr2l,f,c
 14370   002368  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14371   00236A  22DA               	addwfc	fsr2h,f,c
 14372   00236C  50DF               	movf	indf2,w,c
 14373   00236E  6FF0               	movwf	doEvlrn@evNum& (0+255),b
 14374   002370  EE20 F007          	lfsr	2,7
 14375   002374  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14376   002376  26D9               	addwf	fsr2l,f,c
 14377   002378  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14378   00237A  22DA               	addwfc	fsr2h,f,c
 14379   00237C  50DF               	movf	indf2,w,c
 14380   00237E  6FF1               	movwf	doEvlrn@evVal& (0+255),b
 14381   002380  EC2C  F048         	call	_doEvlrn	;wreg free
 14382   002384  D74B               	goto	u25690
 14383   002386                     l24047:
 14384                           
 14385                           ; BSR set to: 1
 14386                           ;../../VLCBlib_PIC/event_teach_large.c: 422:             if (teachCheckLen(m, 5, 1) == P
      +                          ROCESSED) return PROCESSED;
 14387   002386  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14388   00238A  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14389   00238E  0E05               	movlw	5
 14390   002390  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14391   002392  0E01               	movlw	1
 14392   002394  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14393   002396  EC62  F058         	call	_teachCheckLen	;wreg free
 14394   00239A  06E8               	decf	wreg,f,c
 14395   00239C  B4D8               	btfsc	status,2,c
 14396   00239E  D73E               	goto	u25690
 14397                           
 14398                           ;../../VLCBlib_PIC/event_teach_large.c: 423:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14399   0023A0  0101               	movlb	1	; () banked
 14400   0023A2  A176               	btfss	_mode_flags& (0+255),0,b
 14401   0023A4  D73B               	goto	u25690
 14402                           
 14403                           ; BSR set to: 1
 14404                           ;../../VLCBlib_PIC/event_teach_large.c: 425:             doEvuln((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14405   0023A6  EE20 F003          	lfsr	2,3
 14406   0023AA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14407   0023AC  26D9               	addwf	fsr2l,f,c
 14408   0023AE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14409   0023B0  22DA               	addwfc	fsr2h,f,c
 14410   0023B2  50DF               	movf	indf2,w,c
 14411   0023B4  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14412   0023B6  EE20 F002          	lfsr	2,2
 14413   0023BA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14414   0023BC  26D9               	addwf	fsr2l,f,c
 14415   0023BE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14416   0023C0  22DA               	addwfc	fsr2h,f,c
 14417   0023C2  50DF               	movf	indf2,w,c
 14418   0023C4  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14419   0023C6  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14420   0023C8  6FCC               	movwf	doEvuln@nodeNumber& (0+255),b
 14421   0023CA  C1FA  F1CD         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14422   0023CE  EE20 F005          	lfsr	2,5
 14423   0023D2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14424   0023D4  26D9               	addwf	fsr2l,f,c
 14425   0023D6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14426   0023D8  22DA               	addwfc	fsr2h,f,c
 14427   0023DA  50DF               	movf	indf2,w,c
 14428   0023DC  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14429   0023DE  EE20 F004          	lfsr	2,4
 14430   0023E2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14431   0023E4  26D9               	addwf	fsr2l,f,c
 14432   0023E6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14433   0023E8  22DA               	addwfc	fsr2h,f,c
 14434   0023EA  50DF               	movf	indf2,w,c
 14435   0023EC  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14436   0023EE  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14437   0023F0  6FCE               	movwf	doEvuln@eventNumber& (0+255),b
 14438   0023F2  C1FD  F1CF         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14439   0023F6  EC8C  F054         	call	_doEvuln	;wreg free
 14440   0023FA  D710               	goto	u25690
 14441   0023FC                     l24063:
 14442                           
 14443                           ; BSR set to: 1
 14444                           ;../../VLCBlib_PIC/event_teach_large.c: 428:             if (teachCheckLen(m, 6, 1) == P
      +                          ROCESSED) return PROCESSED;
 14445   0023FC  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14446   002400  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14447   002404  0E06               	movlw	6
 14448   002406  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14449   002408  0E01               	movlw	1
 14450   00240A  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14451   00240C  EC62  F058         	call	_teachCheckLen	;wreg free
 14452   002410  06E8               	decf	wreg,f,c
 14453   002412  B4D8               	btfsc	status,2,c
 14454   002414  D703               	goto	u25690
 14455                           
 14456                           ;../../VLCBlib_PIC/event_teach_large.c: 429:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14457   002416  0101               	movlb	1	; () banked
 14458   002418  A176               	btfss	_mode_flags& (0+255),0,b
 14459   00241A  D700               	goto	u25690
 14460                           
 14461                           ; BSR set to: 1
 14462                           ;../../VLCBlib_PIC/event_teach_large.c: 431:             doReqev((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14463   00241C  EE20 F003          	lfsr	2,3
 14464   002420  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14465   002422  26D9               	addwf	fsr2l,f,c
 14466   002424  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14467   002426  22DA               	addwfc	fsr2h,f,c
 14468   002428  50DF               	movf	indf2,w,c
 14469   00242A  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14470   00242C  EE20 F002          	lfsr	2,2
 14471   002430  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14472   002432  26D9               	addwf	fsr2l,f,c
 14473   002434  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14474   002436  22DA               	addwfc	fsr2h,f,c
 14475   002438  50DF               	movf	indf2,w,c
 14476   00243A  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14477   00243C  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14478   00243E  6FC6               	movwf	doReqev@nodeNumber& (0+255),b
 14479   002440  C1FA  F1C7         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14480   002444  EE20 F005          	lfsr	2,5
 14481   002448  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14482   00244A  26D9               	addwf	fsr2l,f,c
 14483   00244C  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14484   00244E  22DA               	addwfc	fsr2h,f,c
 14485   002450  50DF               	movf	indf2,w,c
 14486   002452  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14487   002454  EE20 F004          	lfsr	2,4
 14488   002458  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14489   00245A  26D9               	addwf	fsr2l,f,c
 14490   00245C  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14491   00245E  22DA               	addwfc	fsr2h,f,c
 14492   002460  50DF               	movf	indf2,w,c
 14493   002462  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14494   002464  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14495   002466  6FC8               	movwf	doReqev@eventNumber& (0+255),b
 14496   002468  C1FD  F1C9         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14497   00246C  EE20 F006          	lfsr	2,6
 14498   002470  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14499   002472  26D9               	addwf	fsr2l,f,c
 14500   002474  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14501   002476  22DA               	addwfc	fsr2h,f,c
 14502   002478  50DF               	movf	indf2,w,c
 14503   00247A  6FCA               	movwf	doReqev@evNum& (0+255),b
 14504   00247C  EC0C  F03D         	call	_doReqev	;wreg free
 14505   002480  D6CD               	goto	u25690
 14506   002482                     l24079:
 14507                           
 14508                           ; BSR set to: 1
 14509                           ;../../VLCBlib_PIC/event_teach_large.c: 435:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14510   002482  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14511   002486  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14512   00248A  0E03               	movlw	3
 14513   00248C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14514   00248E  0E00               	movlw	0
 14515   002490  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14516   002492  EC62  F058         	call	_teachCheckLen	;wreg free
 14517   002496  06E8               	decf	wreg,f,c
 14518   002498  B4D8               	btfsc	status,2,c
 14519   00249A  D6C0               	goto	u25690
 14520                           
 14521                           ;../../VLCBlib_PIC/event_teach_large.c: 436:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14522   00249C  0101               	movlb	1	; () banked
 14523   00249E  EE20 F002          	lfsr	2,2
 14524   0024A2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14525   0024A4  26D9               	addwf	fsr2l,f,c
 14526   0024A6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14527   0024A8  22DA               	addwfc	fsr2h,f,c
 14528   0024AA  50DE               	movf	postinc2,w,c
 14529   0024AC  0100               	movlb	0	; () banked
 14530   0024AE  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14531   0024B0  A4D8               	btfss	status,2,c
 14532   0024B2  D6B4               	goto	u25690
 14533                           
 14534                           ; BSR set to: 0
 14535   0024B4  0101               	movlb	1	; () banked
 14536   0024B6  EE20 F003          	lfsr	2,3
 14537   0024BA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14538   0024BC  26D9               	addwf	fsr2l,f,c
 14539   0024BE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14540   0024C0  22DA               	addwfc	fsr2h,f,c
 14541   0024C2  0100               	movlb	0	; () banked
 14542   0024C4  51BF               	movf	_nn& (0+255),w,b
 14543   0024C6  18DE               	xorwf	postinc2,w,c
 14544   0024C8  A4D8               	btfss	status,2,c
 14545   0024CA  D6A8               	goto	u25690
 14546   0024CC  D6C4               	goto	l23989
 14547   0024CE                     l24099:
 14548                           
 14549                           ; BSR set to: 1
 14550                           ;../../VLCBlib_PIC/event_teach_large.c: 441:             if (teachCheckLen(m, 3, 1) == P
      +                          ROCESSED) return PROCESSED;
 14551   0024CE  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14552   0024D2  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14553   0024D6  0E03               	movlw	3
 14554   0024D8  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14555   0024DA  0E01               	movlw	1
 14556   0024DC  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14557   0024DE  EC62  F058         	call	_teachCheckLen	;wreg free
 14558   0024E2  06E8               	decf	wreg,f,c
 14559   0024E4  B4D8               	btfsc	status,2,c
 14560   0024E6  D69A               	goto	u25690
 14561                           
 14562                           ;../../VLCBlib_PIC/event_teach_large.c: 442:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14563   0024E8  0101               	movlb	1	; () banked
 14564   0024EA  EE20 F002          	lfsr	2,2
 14565   0024EE  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14566   0024F0  26D9               	addwf	fsr2l,f,c
 14567   0024F2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14568   0024F4  22DA               	addwfc	fsr2h,f,c
 14569   0024F6  50DE               	movf	postinc2,w,c
 14570   0024F8  0100               	movlb	0	; () banked
 14571   0024FA  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14572   0024FC  A4D8               	btfss	status,2,c
 14573   0024FE  D68E               	goto	u25690
 14574                           
 14575                           ; BSR set to: 0
 14576   002500  0101               	movlb	1	; () banked
 14577   002502  EE20 F003          	lfsr	2,3
 14578   002506  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14579   002508  26D9               	addwf	fsr2l,f,c
 14580   00250A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14581   00250C  22DA               	addwfc	fsr2h,f,c
 14582   00250E  0100               	movlb	0	; () banked
 14583   002510  51BF               	movf	_nn& (0+255),w,b
 14584   002512  18DE               	xorwf	postinc2,w,c
 14585   002514  A4D8               	btfss	status,2,c
 14586   002516  D682               	goto	u25690
 14587                           
 14588                           ; BSR set to: 0
 14589                           ;../../VLCBlib_PIC/event_teach_large.c: 444:             if (! (mode_flags & 1)) {
 14590   002518  0101               	movlb	1	; () banked
 14591   00251A  B176               	btfsc	_mode_flags& (0+255),0,b
 14592   00251C  D019               	goto	l24119
 14593                           
 14594                           ; BSR set to: 1
 14595                           ;../../VLCBlib_PIC/event_teach_large.c: 445:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14596   00251E  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 14597   002522  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 14598   002526  0E02               	movlw	2
 14599   002528  0100               	movlb	0	; () banked
 14600   00252A  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14601   00252C  0E6F               	movlw	111
 14602   00252E  ECED  F05E         	call	_sendMessage3
 14603                           
 14604                           ;../../VLCBlib_PIC/event_teach_large.c: 447:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 14605   002532  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 14606   002536  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 14607   00253A  0E55               	movlw	85
 14608   00253C  0101               	movlb	1	; () banked
 14609   00253E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 14610   002540  0E04               	movlw	4
 14611   002542  6FC3               	movwf	sendMessage5@data4& (0+255),b
 14612   002544  0E02               	movlw	2
 14613   002546  6FC4               	movwf	sendMessage5@data5& (0+255),b
 14614   002548  0EAF               	movlw	175
 14615   00254A  EC35  F05F         	call	_sendMessage5
 14616   00254E  D666               	goto	u25690
 14617   002550                     l24119:
 14618                           
 14619                           ; BSR set to: 1
 14620                           ;../../VLCBlib_PIC/event_teach_large.c: 452:             doNnclr();
 14621   002550  ECA5  F05E         	call	_doNnclr	;wreg free
 14622                           
 14623                           ;../../VLCBlib_PIC/event_teach_large.c: 453:             break;
 14624   002554  D6C0               	goto	l24025
 14625   002556                     l24121:
 14626                           
 14627                           ; BSR set to: 1
 14628                           ;../../VLCBlib_PIC/event_teach_large.c: 455:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14629   002556  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14630   00255A  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14631   00255E  0E03               	movlw	3
 14632   002560  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14633   002562  0E00               	movlw	0
 14634   002564  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14635   002566  EC62  F058         	call	_teachCheckLen	;wreg free
 14636   00256A  06E8               	decf	wreg,f,c
 14637   00256C  B4D8               	btfsc	status,2,c
 14638   00256E  D656               	goto	u25690
 14639                           
 14640                           ;../../VLCBlib_PIC/event_teach_large.c: 456:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14641   002570  0101               	movlb	1	; () banked
 14642   002572  EE20 F002          	lfsr	2,2
 14643   002576  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14644   002578  26D9               	addwf	fsr2l,f,c
 14645   00257A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14646   00257C  22DA               	addwfc	fsr2h,f,c
 14647   00257E  50DE               	movf	postinc2,w,c
 14648   002580  0100               	movlb	0	; () banked
 14649   002582  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14650   002584  A4D8               	btfss	status,2,c
 14651   002586  D64A               	goto	u25690
 14652                           
 14653                           ; BSR set to: 0
 14654   002588  0101               	movlb	1	; () banked
 14655   00258A  EE20 F003          	lfsr	2,3
 14656   00258E  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14657   002590  26D9               	addwf	fsr2l,f,c
 14658   002592  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14659   002594  22DA               	addwfc	fsr2h,f,c
 14660   002596  0100               	movlb	0	; () banked
 14661   002598  51BF               	movf	_nn& (0+255),w,b
 14662   00259A  18DE               	xorwf	postinc2,w,c
 14663   00259C  A4D8               	btfss	status,2,c
 14664   00259E  D63E               	goto	u25690
 14665                           
 14666                           ; BSR set to: 0
 14667                           ;../../VLCBlib_PIC/event_teach_large.c: 458:             doNerd();
 14668   0025A0  EC21  F061         	call	_doNerd	;wreg free
 14669   0025A4  D63B               	goto	u25690
 14670   0025A6                     l24141:
 14671                           
 14672                           ; BSR set to: 1
 14673                           ;../../VLCBlib_PIC/event_teach_large.c: 461:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14674   0025A6  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14675   0025AA  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14676   0025AE  0E03               	movlw	3
 14677   0025B0  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14678   0025B2  0E00               	movlw	0
 14679   0025B4  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14680   0025B6  EC62  F058         	call	_teachCheckLen	;wreg free
 14681   0025BA  06E8               	decf	wreg,f,c
 14682   0025BC  B4D8               	btfsc	status,2,c
 14683   0025BE  D62E               	goto	u25690
 14684                           
 14685                           ;../../VLCBlib_PIC/event_teach_large.c: 462:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14686   0025C0  0101               	movlb	1	; () banked
 14687   0025C2  EE20 F002          	lfsr	2,2
 14688   0025C6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14689   0025C8  26D9               	addwf	fsr2l,f,c
 14690   0025CA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14691   0025CC  22DA               	addwfc	fsr2h,f,c
 14692   0025CE  50DE               	movf	postinc2,w,c
 14693   0025D0  0100               	movlb	0	; () banked
 14694   0025D2  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14695   0025D4  A4D8               	btfss	status,2,c
 14696   0025D6  D622               	goto	u25690
 14697                           
 14698                           ; BSR set to: 0
 14699   0025D8  0101               	movlb	1	; () banked
 14700   0025DA  EE20 F003          	lfsr	2,3
 14701   0025DE  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14702   0025E0  26D9               	addwf	fsr2l,f,c
 14703   0025E2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14704   0025E4  22DA               	addwfc	fsr2h,f,c
 14705   0025E6  0100               	movlb	0	; () banked
 14706   0025E8  51BF               	movf	_nn& (0+255),w,b
 14707   0025EA  18DE               	xorwf	postinc2,w,c
 14708   0025EC  A4D8               	btfss	status,2,c
 14709   0025EE  D616               	goto	u25690
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;../../VLCBlib_PIC/event_teach_large.c: 464:             doNnevn();
 14713   0025F0  ECCD  F056         	call	_doNnevn	;wreg free
 14714   0025F4  D613               	goto	u25690
 14715   0025F6                     l24161:
 14716                           
 14717                           ; BSR set to: 1
 14718                           ;../../VLCBlib_PIC/event_teach_large.c: 467:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14719   0025F6  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14720   0025FA  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14721   0025FE  0E03               	movlw	3
 14722   002600  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14723   002602  0E00               	movlw	0
 14724   002604  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14725   002606  EC62  F058         	call	_teachCheckLen	;wreg free
 14726   00260A  06E8               	decf	wreg,f,c
 14727   00260C  B4D8               	btfsc	status,2,c
 14728   00260E  D606               	goto	u25690
 14729                           
 14730                           ;../../VLCBlib_PIC/event_teach_large.c: 468:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14731   002610  0101               	movlb	1	; () banked
 14732   002612  EE20 F002          	lfsr	2,2
 14733   002616  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14734   002618  26D9               	addwf	fsr2l,f,c
 14735   00261A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14736   00261C  22DA               	addwfc	fsr2h,f,c
 14737   00261E  50DE               	movf	postinc2,w,c
 14738   002620  0100               	movlb	0	; () banked
 14739   002622  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14740   002624  A4D8               	btfss	status,2,c
 14741   002626  D5FA               	goto	u25690
 14742                           
 14743                           ; BSR set to: 0
 14744   002628  0101               	movlb	1	; () banked
 14745   00262A  EE20 F003          	lfsr	2,3
 14746   00262E  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14747   002630  26D9               	addwf	fsr2l,f,c
 14748   002632  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14749   002634  22DA               	addwfc	fsr2h,f,c
 14750   002636  0100               	movlb	0	; () banked
 14751   002638  51BF               	movf	_nn& (0+255),w,b
 14752   00263A  18DE               	xorwf	postinc2,w,c
 14753   00263C  A4D8               	btfss	status,2,c
 14754   00263E  D5EE               	goto	u25690
 14755                           
 14756                           ; BSR set to: 0
 14757                           ;../../VLCBlib_PIC/event_teach_large.c: 470:             doRqevn();
 14758   002640  EC98  F05D         	call	_doRqevn	;wreg free
 14759   002644  D5EB               	goto	u25690
 14760   002646                     l24181:
 14761                           
 14762                           ; BSR set to: 1
 14763                           ;../../VLCBlib_PIC/event_teach_large.c: 473:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14764   002646  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14765   00264A  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14766   00264E  0E04               	movlw	4
 14767   002650  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14768   002652  0E00               	movlw	0
 14769   002654  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14770   002656  EC62  F058         	call	_teachCheckLen	;wreg free
 14771   00265A  06E8               	decf	wreg,f,c
 14772   00265C  B4D8               	btfsc	status,2,c
 14773   00265E  D5DE               	goto	u25690
 14774                           
 14775                           ;../../VLCBlib_PIC/event_teach_large.c: 474:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14776   002660  0101               	movlb	1	; () banked
 14777   002662  EE20 F002          	lfsr	2,2
 14778   002666  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14779   002668  26D9               	addwf	fsr2l,f,c
 14780   00266A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14781   00266C  22DA               	addwfc	fsr2h,f,c
 14782   00266E  50DE               	movf	postinc2,w,c
 14783   002670  0100               	movlb	0	; () banked
 14784   002672  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14785   002674  A4D8               	btfss	status,2,c
 14786   002676  D5D2               	goto	u25690
 14787                           
 14788                           ; BSR set to: 0
 14789   002678  0101               	movlb	1	; () banked
 14790   00267A  EE20 F003          	lfsr	2,3
 14791   00267E  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14792   002680  26D9               	addwf	fsr2l,f,c
 14793   002682  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14794   002684  22DA               	addwfc	fsr2h,f,c
 14795   002686  0100               	movlb	0	; () banked
 14796   002688  51BF               	movf	_nn& (0+255),w,b
 14797   00268A  18DE               	xorwf	postinc2,w,c
 14798   00268C  A4D8               	btfss	status,2,c
 14799   00268E  D5C6               	goto	u25690
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;../../VLCBlib_PIC/event_teach_large.c: 476:             doNenrd(m->bytes[2]);
 14803   002690  0101               	movlb	1	; () banked
 14804   002692  EE20 F004          	lfsr	2,4
 14805   002696  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14806   002698  26D9               	addwf	fsr2l,f,c
 14807   00269A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14808   00269C  22DA               	addwfc	fsr2h,f,c
 14809   00269E  50DF               	movf	indf2,w,c
 14810   0026A0  EC5F  F056         	call	_doNenrd
 14811   0026A4  D5BB               	goto	u25690
 14812   0026A6                     l24201:
 14813                           
 14814                           ; BSR set to: 1
 14815                           ;../../VLCBlib_PIC/event_teach_large.c: 479:             if (teachCheckLen(m, 5, 0) == P
      +                          ROCESSED) return PROCESSED;
 14816   0026A6  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14817   0026AA  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14818   0026AE  0E05               	movlw	5
 14819   0026B0  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14820   0026B2  0E00               	movlw	0
 14821   0026B4  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14822   0026B6  EC62  F058         	call	_teachCheckLen	;wreg free
 14823   0026BA  06E8               	decf	wreg,f,c
 14824   0026BC  B4D8               	btfsc	status,2,c
 14825   0026BE  D5AE               	goto	u25690
 14826                           
 14827                           ;../../VLCBlib_PIC/event_teach_large.c: 480:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14828   0026C0  0101               	movlb	1	; () banked
 14829   0026C2  EE20 F002          	lfsr	2,2
 14830   0026C6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14831   0026C8  26D9               	addwf	fsr2l,f,c
 14832   0026CA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14833   0026CC  22DA               	addwfc	fsr2h,f,c
 14834   0026CE  50DE               	movf	postinc2,w,c
 14835   0026D0  0100               	movlb	0	; () banked
 14836   0026D2  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14837   0026D4  A4D8               	btfss	status,2,c
 14838   0026D6  D5A2               	goto	u25690
 14839                           
 14840                           ; BSR set to: 0
 14841   0026D8  0101               	movlb	1	; () banked
 14842   0026DA  EE20 F003          	lfsr	2,3
 14843   0026DE  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14844   0026E0  26D9               	addwf	fsr2l,f,c
 14845   0026E2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14846   0026E4  22DA               	addwfc	fsr2h,f,c
 14847   0026E6  0100               	movlb	0	; () banked
 14848   0026E8  51BF               	movf	_nn& (0+255),w,b
 14849   0026EA  18DE               	xorwf	postinc2,w,c
 14850   0026EC  A4D8               	btfss	status,2,c
 14851   0026EE  D596               	goto	u25690
 14852                           
 14853                           ; BSR set to: 0
 14854                           ;../../VLCBlib_PIC/event_teach_large.c: 482:             doReval(m->bytes[2], m->bytes[3
      +                          ]);
 14855   0026F0  0101               	movlb	1	; () banked
 14856   0026F2  EE20 F005          	lfsr	2,5
 14857   0026F6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14858   0026F8  26D9               	addwf	fsr2l,f,c
 14859   0026FA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14860   0026FC  22DA               	addwfc	fsr2h,f,c
 14861   0026FE  50DF               	movf	indf2,w,c
 14862   002700  6FC5               	movwf	doReval@evNum& (0+255),b
 14863   002702  EE20 F004          	lfsr	2,4
 14864   002706  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14865   002708  26D9               	addwf	fsr2l,f,c
 14866   00270A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14867   00270C  22DA               	addwfc	fsr2h,f,c
 14868   00270E  50DF               	movf	indf2,w,c
 14869   002710  EC52  F049         	call	_doReval
 14870   002714  D583               	goto	u25690
 14871   002716                     l24221:
 14872                           
 14873                           ; BSR set to: 1
 14874                           ;../../VLCBlib_PIC/event_teach_large.c: 485:             if (teachCheckLen(m, 8, 1) == P
      +                          ROCESSED) return PROCESSED;
 14875   002716  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14876   00271A  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14877   00271E  0E08               	movlw	8
 14878   002720  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14879   002722  0E01               	movlw	1
 14880   002724  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14881   002726  EC62  F058         	call	_teachCheckLen	;wreg free
 14882   00272A  06E8               	decf	wreg,f,c
 14883   00272C  B4D8               	btfsc	status,2,c
 14884   00272E  D576               	goto	u25690
 14885                           
 14886                           ;../../VLCBlib_PIC/event_teach_large.c: 486:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14887   002730  0101               	movlb	1	; () banked
 14888   002732  EE20 F002          	lfsr	2,2
 14889   002736  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14890   002738  26D9               	addwf	fsr2l,f,c
 14891   00273A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14892   00273C  22DA               	addwfc	fsr2h,f,c
 14893   00273E  50DE               	movf	postinc2,w,c
 14894   002740  0100               	movlb	0	; () banked
 14895   002742  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14896   002744  A4D8               	btfss	status,2,c
 14897   002746  D56A               	goto	u25690
 14898                           
 14899                           ; BSR set to: 0
 14900   002748  0101               	movlb	1	; () banked
 14901   00274A  EE20 F003          	lfsr	2,3
 14902   00274E  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14903   002750  26D9               	addwf	fsr2l,f,c
 14904   002752  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14905   002754  22DA               	addwfc	fsr2h,f,c
 14906   002756  0100               	movlb	0	; () banked
 14907   002758  51BF               	movf	_nn& (0+255),w,b
 14908   00275A  18DE               	xorwf	postinc2,w,c
 14909   00275C  A4D8               	btfss	status,2,c
 14910   00275E  D55E               	goto	u25690
 14911                           
 14912                           ; BSR set to: 0
 14913                           ;../../VLCBlib_PIC/event_teach_large.c: 488:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6
      +                          ]);
 14914   002760  0101               	movlb	1	; () banked
 14915   002762  EE20 F003          	lfsr	2,3
 14916   002766  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14917   002768  26D9               	addwf	fsr2l,f,c
 14918   00276A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14919   00276C  22DA               	addwfc	fsr2h,f,c
 14920   00276E  50DF               	movf	indf2,w,c
 14921   002770  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14922   002772  EE20 F002          	lfsr	2,2
 14923   002776  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14924   002778  26D9               	addwf	fsr2l,f,c
 14925   00277A  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14926   00277C  22DA               	addwfc	fsr2h,f,c
 14927   00277E  50DF               	movf	indf2,w,c
 14928   002780  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14929   002782  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14930   002784  6FEC               	movwf	doEvlrn@nodeNumber& (0+255),b
 14931   002786  C1FA  F1ED         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14932   00278A  EE20 F005          	lfsr	2,5
 14933   00278E  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14934   002790  26D9               	addwf	fsr2l,f,c
 14935   002792  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14936   002794  22DA               	addwfc	fsr2h,f,c
 14937   002796  50DF               	movf	indf2,w,c
 14938   002798  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14939   00279A  EE20 F004          	lfsr	2,4
 14940   00279E  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14941   0027A0  26D9               	addwf	fsr2l,f,c
 14942   0027A2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14943   0027A4  22DA               	addwfc	fsr2h,f,c
 14944   0027A6  50DF               	movf	indf2,w,c
 14945   0027A8  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14946   0027AA  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14947   0027AC  6FEE               	movwf	doEvlrn@eventNumber& (0+255),b
 14948   0027AE  C1FD  F1EF         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14949   0027B2  EE20 F007          	lfsr	2,7
 14950   0027B6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14951   0027B8  26D9               	addwf	fsr2l,f,c
 14952   0027BA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14953   0027BC  22DA               	addwfc	fsr2h,f,c
 14954   0027BE  50DF               	movf	indf2,w,c
 14955   0027C0  6FF0               	movwf	doEvlrn@evNum& (0+255),b
 14956   0027C2  EE20 F008          	lfsr	2,8
 14957   0027C6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14958   0027C8  26D9               	addwf	fsr2l,f,c
 14959   0027CA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14960   0027CC  22DA               	addwfc	fsr2h,f,c
 14961   0027CE  50DF               	movf	indf2,w,c
 14962   0027D0  6FF1               	movwf	doEvlrn@evVal& (0+255),b
 14963   0027D2  EC2C  F048         	call	_doEvlrn	;wreg free
 14964   0027D6  D522               	goto	u25690
 14965   0027D8                     l24243:
 14966   0027D8  0101               	movlb	1	; () banked
 14967   0027DA  EE20 F001          	lfsr	2,1
 14968   0027DE  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14969   0027E0  26D9               	addwf	fsr2l,f,c
 14970   0027E2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14971   0027E4  22DA               	addwfc	fsr2h,f,c
 14972   0027E6  50DF               	movf	indf2,w,c
 14973   0027E8  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14974   0027EA  6BFA               	clrf	(??_teachProcessMessage+1)& (0+255),b
 14975                           
 14976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14977                           ; Switch size 1, requested type "simple"
 14978                           ; Number of cases is 1, Range of values is 0 to 0
 14979                           ; switch strategies available:
 14980                           ; Name         Instructions Cycles
 14981                           ; simple_byte            4     3 (average)
 14982                           ;	Chosen strategy is simple_byte
 14983   0027EC  51FA               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 14984   0027EE  0A00               	xorlw	0	; case 0
 14985   0027F0  A4D8               	btfss	status,2,c
 14986   0027F2  D571               	goto	l24025
 14987                           
 14988                           ; BSR set to: 1
 14989                           ; Switch size 1, requested type "simple"
 14990                           ; Number of cases is 13, Range of values is 83 to 245
 14991                           ; switch strategies available:
 14992                           ; Name         Instructions Cycles
 14993                           ; simple_byte           40    21 (average)
 14994                           ;	Chosen strategy is simple_byte
 14995   0027F4  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14996   0027F6  0A53               	xorlw	83	; case 83
 14997   0027F8  B4D8               	btfsc	status,2,c
 14998   0027FA  D503               	goto	l23977
 14999   0027FC  0A07               	xorlw	7	; case 84
 15000   0027FE  B4D8               	btfsc	status,2,c
 15001   002800  D640               	goto	l24079
 15002   002802  0A01               	xorlw	1	; case 85
 15003   002804  B4D8               	btfsc	status,2,c
 15004   002806  D663               	goto	l24099
 15005   002808  0A03               	xorlw	3	; case 86
 15006   00280A  B4D8               	btfsc	status,2,c
 15007   00280C  D6CC               	goto	l24141
 15008   00280E  0A01               	xorlw	1	; case 87
 15009   002810  B4D8               	btfsc	status,2,c
 15010   002812  D6A1               	goto	l24121
 15011   002814  0A0F               	xorlw	15	; case 88
 15012   002816  B4D8               	btfsc	status,2,c
 15013   002818  D6EE               	goto	l24161
 15014   00281A  0A2A               	xorlw	42	; case 114
 15015   00281C  B4D8               	btfsc	status,2,c
 15016   00281E  D713               	goto	l24181
 15017   002820  0A04               	xorlw	4	; case 118
 15018   002822  B4D8               	btfsc	status,2,c
 15019   002824  D51B               	goto	l23995
 15020   002826  0AE3               	xorlw	227	; case 149
 15021   002828  B4D8               	btfsc	status,2,c
 15022   00282A  D5AD               	goto	l24047
 15023   00282C  0A09               	xorlw	9	; case 156
 15024   00282E  B4D8               	btfsc	status,2,c
 15025   002830  D73A               	goto	l24201
 15026   002832  0A2E               	xorlw	46	; case 178
 15027   002834  B4D8               	btfsc	status,2,c
 15028   002836  D5E2               	goto	l24063
 15029   002838  0A60               	xorlw	96	; case 210
 15030   00283A  B4D8               	btfsc	status,2,c
 15031   00283C  D54E               	goto	l24029
 15032   00283E  0A27               	xorlw	39	; case 245
 15033   002840  B4D8               	btfsc	status,2,c
 15034   002842  D769               	goto	l24221
 15035   002844  D548               	goto	l24025
 15036   002846                     __end_of_teachProcessMessage:
 15037                           	callstack 0
 15038                           
 15039 ;; *************** function _teachCheckLen *****************
 15040 ;; Defined at:
 15041 ;;		line 503 in file "../../VLCBlib_PIC/event_teach_large.c"
 15042 ;; Parameters:    Size  Location     Type
 15043 ;;  m               2   17[BANK1 ] PTR struct Message
 15044 ;;		 -> poll@m(9), 
 15045 ;;  needed          1   19[BANK1 ] unsigned char 
 15046 ;;  learn           1   20[BANK1 ] unsigned char 
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;		None
 15049 ;; Return value:  Size  Location     Type
 15050 ;;                  1    wreg      enum E12793
 15051 ;; Registers used:
 15052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15058 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15060 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15061 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15062 ;;Total ram usage:        5 bytes
 15063 ;; Hardware stack levels used: 1
 15064 ;; Hardware stack levels required when called: 17
 15065 ;; This function calls:
 15066 ;;		_checkLen
 15067 ;;		_sendMessage5
 15068 ;; This function is called by:
 15069 ;;		_teachProcessMessage
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           
 15073                           	psect	text27
 15074   00B0C4                     __ptext27:
 15075                           	callstack 0
 15076   00B0C4                     _teachCheckLen:
 15077                           	callstack 11
 15078                           
 15079                           ;../../VLCBlib_PIC/event_teach_large.c: 504:     if (learn) {
 15080                           
 15081                           ;incstack = 0
 15082   00B0C4  0101               	movlb	1	; () banked
 15083   00B0C6  51CC               	movf	teachCheckLen@learn& (0+255),w,b
 15084   00B0C8  B4D8               	btfsc	status,2,c
 15085   00B0CA  D021               	goto	l22145
 15086                           
 15087                           ; BSR set to: 1
 15088                           ;../../VLCBlib_PIC/event_teach_large.c: 506:         if (m->len < needed) {
 15089   00B0CC  C1C9  FFD9         	movff	teachCheckLen@m,fsr2l
 15090   00B0D0  C1CA  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15091   00B0D4  51CB               	movf	teachCheckLen@needed& (0+255),w,b
 15092   00B0D6  5CDE               	subwf	postinc2,w,c
 15093   00B0D8  B0D8               	btfsc	status,0,c
 15094   00B0DA  D017               	goto	l22141
 15095                           
 15096                           ; BSR set to: 1
 15097                           ;../../VLCBlib_PIC/event_teach_large.c: 508:             if (mode_flags & 1) {
 15098   00B0DC  A176               	btfss	_mode_flags& (0+255),0,b
 15099   00B0DE  D013               	goto	l22137
 15100                           
 15101                           ; BSR set to: 1
 15102                           ;../../VLCBlib_PIC/event_teach_large.c: 511:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15103   00B0E0  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15104   00B0E4  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15105   00B0E8  EE20 F001          	lfsr	2,1
 15106   00B0EC  51C9               	movf	teachCheckLen@m& (0+255),w,b
 15107   00B0EE  26D9               	addwf	fsr2l,f,c
 15108   00B0F0  51CA               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15109   00B0F2  22DA               	addwfc	fsr2h,f,c
 15110   00B0F4  50DF               	movf	indf2,w,c
 15111   00B0F6  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15112   00B0F8  0E04               	movlw	4
 15113   00B0FA  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15114   00B0FC  0E01               	movlw	1
 15115   00B0FE  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15116   00B100  0EAF               	movlw	175
 15117   00B102  EC35  F05F         	call	_sendMessage5
 15118   00B106                     l22137:
 15119                           
 15120                           ;../../VLCBlib_PIC/event_teach_large.c: 514:             return PROCESSED;
 15121   00B106  0E01               	movlw	1
 15122   00B108  0012               	return	
 15123   00B10A                     l22141:
 15124                           
 15125                           ; BSR set to: 1
 15126                           ;../../VLCBlib_PIC/event_teach_large.c: 516:         return NOT_PROCESSED;
 15127   00B10A  0E00               	movlw	0
 15128   00B10C  0012               	return	
 15129   00B10E                     l22145:
 15130                           
 15131                           ; BSR set to: 1
 15132                           ;../../VLCBlib_PIC/event_teach_large.c: 518:     return checkLen(m, needed, SERVICE_ID_O
      +                          LD_TEACH);
 15133   00B10E  C1C9  F1C5         	movff	teachCheckLen@m,checkLen@m
 15134   00B112  C1CA  F1C6         	movff	teachCheckLen@m+1,checkLen@m+1
 15135   00B116  C1CB  F1C7         	movff	teachCheckLen@needed,checkLen@needed
 15136   00B11A  0E04               	movlw	4
 15137   00B11C  6FC8               	movwf	checkLen@service& (0+255),b
 15138   00B11E  EC53  F053         	call	_checkLen	;wreg free
 15139   00B122  0012               	return		;funcret
 15140   00B124                     __end_of_teachCheckLen:
 15141                           	callstack 0
 15142                           
 15143 ;; *************** function _doRqevn *****************
 15144 ;; Defined at:
 15145 ;;		line 648 in file "../../VLCBlib_PIC/event_teach_large.c"
 15146 ;; Parameters:    Size  Location     Type
 15147 ;;		None
 15148 ;; Auto vars:     Size  Location     Type
 15149 ;;  i               1    9[BANK1 ] unsigned char 
 15150 ;;  count           1    8[BANK1 ] unsigned char 
 15151 ;; Return value:  Size  Location     Type
 15152 ;;                  1    wreg      void 
 15153 ;; Registers used:
 15154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15155 ;; Tracked objects:
 15156 ;;		On entry : 0/0
 15157 ;;		On exit  : 0/0
 15158 ;;		Unchanged: 0/0
 15159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15161 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15163 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15164 ;;Total ram usage:        2 bytes
 15165 ;; Hardware stack levels used: 1
 15166 ;; Hardware stack levels required when called: 16
 15167 ;; This function calls:
 15168 ;;		_sendMessage3
 15169 ;;		_validStart
 15170 ;; This function is called by:
 15171 ;;		_teachProcessMessage
 15172 ;; This function uses a non-reentrant model
 15173 ;;
 15174                           
 15175                           	psect	text28
 15176   00BB30                     __ptext28:
 15177                           	callstack 0
 15178   00BB30                     _doRqevn:
 15179                           	callstack 12
 15180                           
 15181                           ;../../VLCBlib_PIC/event_teach_large.c: 650:     uint8_t count = 0;
 15182                           
 15183                           ;incstack = 0
 15184   00BB30  0E00               	movlw	0
 15185   00BB32  0101               	movlb	1	; () banked
 15186   00BB34  6FC0               	movwf	doRqevn@count& (0+255),b
 15187                           
 15188                           ;../../VLCBlib_PIC/event_teach_large.c: 651:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 652:     for (i=0; i<255; i++) {
 15189   00BB36  0E00               	movlw	0
 15190   00BB38  6FC1               	movwf	doRqevn@i& (0+255),b
 15191   00BB3A                     l22249:
 15192                           
 15193                           ; BSR set to: 1
 15194                           ;../../VLCBlib_PIC/event_teach_large.c: 653:         if (validStart(i)) {
 15195   00BB3A  51C1               	movf	doRqevn@i& (0+255),w,b
 15196   00BB3C  EC2B  F05B         	call	_validStart
 15197   00BB40  0900               	iorlw	0
 15198   00BB42  B4D8               	btfsc	status,2,c
 15199   00BB44  D002               	goto	l2778
 15200                           
 15201                           ;../../VLCBlib_PIC/event_teach_large.c: 654:             count++;
 15202   00BB46  0101               	movlb	1	; () banked
 15203   00BB48  2BC0               	incf	doRqevn@count& (0+255),f,b
 15204   00BB4A                     l2778:
 15205                           
 15206                           ;../../VLCBlib_PIC/event_teach_large.c: 656:     }
 15207   00BB4A  0101               	movlb	1	; () banked
 15208   00BB4C  2BC1               	incf	doRqevn@i& (0+255),f,b
 15209                           
 15210                           ; BSR set to: 1
 15211   00BB4E  29C1               	incf	doRqevn@i& (0+255),w,b
 15212   00BB50  A4D8               	btfss	status,2,c
 15213   00BB52  D7F3               	goto	l22249
 15214                           
 15215                           ; BSR set to: 1
 15216                           ;../../VLCBlib_PIC/event_teach_large.c: 657:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15217   00BB54  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15218   00BB58  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15219   00BB5C  C1C0  F0A7         	movff	doRqevn@count,sendMessage3@data3
 15220   00BB60  0E74               	movlw	116
 15221   00BB62  ECED  F05E         	call	_sendMessage3
 15222   00BB66  0012               	return		;funcret
 15223   00BB68                     __end_of_doRqevn:
 15224                           	callstack 0
 15225                           
 15226 ;; *************** function _doReval *****************
 15227 ;; Defined at:
 15228 ;;		line 718 in file "../../VLCBlib_PIC/event_teach_large.c"
 15229 ;; Parameters:    Size  Location     Type
 15230 ;;  enNum           1    wreg     unsigned char 
 15231 ;;  evNum           1   13[BANK1 ] unsigned char 
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;  enNum           1   16[BANK1 ] unsigned char 
 15234 ;;  evVal           2   17[BANK1 ] int 
 15235 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15236 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15237 ;; Return value:  Size  Location     Type
 15238 ;;                  1    wreg      void 
 15239 ;; Registers used:
 15240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15241 ;; Tracked objects:
 15242 ;;		On entry : 0/0
 15243 ;;		On exit  : 0/0
 15244 ;;		Unchanged: 0/0
 15245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15246 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15247 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15248 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15249 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15250 ;;Total ram usage:        7 bytes
 15251 ;; Hardware stack levels used: 1
 15252 ;; Hardware stack levels required when called: 16
 15253 ;; This function calls:
 15254 ;;		_evtIdxToTableIndex
 15255 ;;		_getEv
 15256 ;;		_numEv
 15257 ;;		_sendMessage3
 15258 ;;		_sendMessage5
 15259 ;;		_validStart
 15260 ;; This function is called by:
 15261 ;;		_teachProcessMessage
 15262 ;; This function uses a non-reentrant model
 15263 ;;
 15264                           
 15265                           	psect	text29
 15266   0092A4                     __ptext29:
 15267                           	callstack 0
 15268   0092A4                     _doReval:
 15269                           	callstack 12
 15270                           
 15271                           ;incstack = 0
 15272                           ;doReval@enNum stored from wreg
 15273   0092A4  0101               	movlb	1	; () banked
 15274   0092A6  6FC8               	movwf	doReval@enNum& (0+255),b
 15275                           
 15276                           ;../../VLCBlib_PIC/event_teach_large.c: 721:     uint8_t evIndex;;../../VLCBlib_PIC/even
      +                          t_teach_large.c: 722:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15277   0092A8  0101               	movlb	1	; () banked
 15278   0092AA  51C8               	movf	doReval@enNum& (0+255),w,b
 15279   0092AC  ECC4  F061         	call	_evtIdxToTableIndex
 15280   0092B0  0101               	movlb	1	; () banked
 15281   0092B2  6FCB               	movwf	doReval@tableIndex& (0+255),b
 15282                           
 15283                           ; BSR set to: 1
 15284                           ;../../VLCBlib_PIC/event_teach_large.c: 724:     if (evNum > 20) {
 15285   0092B4  0E14               	movlw	20
 15286   0092B6  65C5               	cpfsgt	doReval@evNum& (0+255),b
 15287   0092B8  D00B               	goto	l22277
 15288                           
 15289                           ; BSR set to: 1
 15290                           ;../../VLCBlib_PIC/event_teach_large.c: 725:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15291   0092BA  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15292   0092BE  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15293   0092C2  0E06               	movlw	6
 15294   0092C4  0100               	movlb	0	; () banked
 15295   0092C6  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15296   0092C8  0E6F               	movlw	111
 15297   0092CA  ECED  F05E         	call	_sendMessage3
 15298   0092CE  0012               	return	
 15299   0092D0                     l22277:
 15300                           
 15301                           ; BSR set to: 1
 15302                           ;../../VLCBlib_PIC/event_teach_large.c: 729:     evIndex = evNum-1U;
 15303   0092D0  05C5               	decf	doReval@evNum& (0+255),w,b
 15304   0092D2  6FC7               	movwf	doReval@evIndex& (0+255),b
 15305                           
 15306                           ;../../VLCBlib_PIC/event_teach_large.c: 732:     if (tableIndex < 255) {
 15307   0092D4  29CB               	incf	doReval@tableIndex& (0+255),w,b
 15308   0092D6  B4D8               	btfsc	status,2,c
 15309   0092D8  D039               	goto	l22297
 15310                           
 15311                           ; BSR set to: 1
 15312                           ;../../VLCBlib_PIC/event_teach_large.c: 733:         if (validStart(tableIndex)) {
 15313   0092DA  51CB               	movf	doReval@tableIndex& (0+255),w,b
 15314   0092DC  EC2B  F05B         	call	_validStart
 15315   0092E0  0900               	iorlw	0
 15316   0092E2  B4D8               	btfsc	status,2,c
 15317   0092E4  D033               	goto	l22297
 15318                           
 15319                           ;../../VLCBlib_PIC/event_teach_large.c: 734:             int evVal;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 735:             if (evNum == 0) {
 15320   0092E6  0101               	movlb	1	; () banked
 15321   0092E8  51C5               	movf	doReval@evNum& (0+255),w,b
 15322   0092EA  A4D8               	btfss	status,2,c
 15323   0092EC  D009               	goto	l22285
 15324                           
 15325                           ; BSR set to: 1
 15326                           ;../../VLCBlib_PIC/event_teach_large.c: 736:                 evVal = numEv(tableIndex);
 15327   0092EE  51CB               	movf	doReval@tableIndex& (0+255),w,b
 15328   0092F0  ECEA  F044         	call	_numEv
 15329   0092F4  0101               	movlb	1	; () banked
 15330   0092F6  6FC6               	movwf	??_doReval& (0+255),b
 15331   0092F8  51C6               	movf	??_doReval& (0+255),w,b
 15332   0092FA  6FC9               	movwf	doReval@evVal& (0+255),b
 15333   0092FC  6BCA               	clrf	(doReval@evVal+1)& (0+255),b
 15334                           
 15335                           ;../../VLCBlib_PIC/event_teach_large.c: 737:             } else {
 15336   0092FE  D009               	goto	l22287
 15337   009300                     l22285:
 15338                           
 15339                           ; BSR set to: 1
 15340                           ;../../VLCBlib_PIC/event_teach_large.c: 738:                 evVal = getEv(tableIndex, e
      +                          vIndex);
 15341   009300  C1C7  F09D         	movff	doReval@evIndex,getEv@evNum
 15342   009304  51CB               	movf	doReval@tableIndex& (0+255),w,b
 15343   009306  ECB7  F03B         	call	_getEv
 15344   00930A  C09D  F1C9         	movff	?_getEv,doReval@evVal
 15345   00930E  C09E  F1CA         	movff	?_getEv+1,doReval@evVal+1
 15346   009312                     l22287:
 15347                           
 15348                           ;../../VLCBlib_PIC/event_teach_large.c: 740:             if (evVal >= 0) {
 15349   009312  0101               	movlb	1	; () banked
 15350   009314  BFCA               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15351   009316  D00E               	goto	l22293
 15352                           
 15353                           ; BSR set to: 1
 15354                           ;../../VLCBlib_PIC/event_teach_large.c: 741:                 sendMessage5(OPC_NEVAL, nn.
      +                          bytes.hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15355   009318  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15356   00931C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15357   009320  C1C8  F1C2         	movff	doReval@enNum,sendMessage5@data3
 15358   009324  C1C5  F1C3         	movff	doReval@evNum,sendMessage5@data4
 15359   009328  C1C9  F1C4         	movff	doReval@evVal,sendMessage5@data5
 15360   00932C  0EB5               	movlw	181
 15361   00932E  EC35  F05F         	call	_sendMessage5
 15362   009332  0012               	return	
 15363   009334                     l22293:
 15364                           
 15365                           ; BSR set to: 1
 15366                           ;../../VLCBlib_PIC/event_teach_large.c: 745:             sendMessage3(OPC_CMDERR, nn.byt
      +                          es.hi, nn.bytes.lo, (uint8_t)(-evVal));
 15367   009334  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15368   009338  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15369   00933C  51C9               	movf	doReval@evVal& (0+255),w,b
 15370   00933E  0800               	sublw	0
 15371   009340  0100               	movlb	0	; () banked
 15372   009342  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15373   009344  0E6F               	movlw	111
 15374   009346  ECED  F05E         	call	_sendMessage3
 15375   00934A  0012               	return	
 15376   00934C                     l22297:
 15377                           
 15378                           ;../../VLCBlib_PIC/event_teach_large.c: 749:     sendMessage3(OPC_CMDERR, nn.bytes.hi, n
      +                          n.bytes.lo, CMDERR_INVALID_EVENT);
 15379   00934C  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15380   009350  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15381   009354  0E07               	movlw	7
 15382   009356  0100               	movlb	0	; () banked
 15383   009358  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15384   00935A  0E6F               	movlw	111
 15385   00935C  ECED  F05E         	call	_sendMessage3
 15386   009360  0012               	return		;funcret
 15387   009362                     __end_of_doReval:
 15388                           	callstack 0
 15389                           
 15390 ;; *************** function _doReqev *****************
 15391 ;; Defined at:
 15392 ;;		line 780 in file "../../VLCBlib_PIC/event_teach_large.c"
 15393 ;; Parameters:    Size  Location     Type
 15394 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15395 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15396 ;;  evNum           1   18[BANK1 ] unsigned char 
 15397 ;; Auto vars:     Size  Location     Type
 15398 ;;  evVal           2   19[BANK1 ] short 
 15399 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15400 ;; Return value:  Size  Location     Type
 15401 ;;                  1    wreg      void 
 15402 ;; Registers used:
 15403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15404 ;; Tracked objects:
 15405 ;;		On entry : 0/0
 15406 ;;		On exit  : 0/0
 15407 ;;		Unchanged: 0/0
 15408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15409 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15410 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15412 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15413 ;;Total ram usage:        8 bytes
 15414 ;; Hardware stack levels used: 1
 15415 ;; Hardware stack levels required when called: 16
 15416 ;; This function calls:
 15417 ;;		_findEvent
 15418 ;;		_findServiceIndex
 15419 ;;		_getEv
 15420 ;;		_numEv
 15421 ;;		_sendMessage3
 15422 ;;		_sendMessage5
 15423 ;;		_sendMessage6
 15424 ;;		_startTimedResponse
 15425 ;; This function is called by:
 15426 ;;		_teachProcessMessage
 15427 ;; This function uses a non-reentrant model
 15428 ;;
 15429                           
 15430                           	psect	text30
 15431   007A18                     __ptext30:
 15432                           	callstack 0
 15433   007A18                     _doReqev:
 15434                           	callstack 12
 15435                           
 15436                           ;../../VLCBlib_PIC/event_teach_large.c: 781:     int16_t evVal;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 783:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15437                           
 15438                           ;incstack = 0
 15439   007A18  C1C6  F1B8         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15440   007A1C  C1C7  F1B9         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15441   007A20  C1C8  F1BA         	movff	doReqev@eventNumber,findEvent@eventNumber
 15442   007A24  C1C9  F1BB         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15443   007A28  ECE9  F050         	call	_findEvent	;wreg free
 15444   007A2C  0101               	movlb	1	; () banked
 15445   007A2E  6FCD               	movwf	doReqev@tableIndex& (0+255),b
 15446                           
 15447                           ; BSR set to: 1
 15448                           ;../../VLCBlib_PIC/event_teach_large.c: 784:     if (tableIndex == 0xff) {
 15449   007A30  29CD               	incf	doReqev@tableIndex& (0+255),w,b
 15450   007A32  A4D8               	btfss	status,2,c
 15451   007A34  D019               	goto	l22191
 15452                           
 15453                           ; BSR set to: 1
 15454                           ;../../VLCBlib_PIC/event_teach_large.c: 785:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INVALID_EVENT);
 15455   007A36  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15456   007A3A  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15457   007A3E  0E07               	movlw	7
 15458   007A40  0100               	movlb	0	; () banked
 15459   007A42  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15460   007A44  0E6F               	movlw	111
 15461   007A46  ECED  F05E         	call	_sendMessage3
 15462                           
 15463                           ;../../VLCBlib_PIC/event_teach_large.c: 787:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15464   007A4A  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15465   007A4E  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15466   007A52  0EB2               	movlw	178
 15467   007A54  0101               	movlb	1	; () banked
 15468   007A56  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15469   007A58  0E04               	movlw	4
 15470   007A5A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15471   007A5C  0E07               	movlw	7
 15472   007A5E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15473   007A60  0EAF               	movlw	175
 15474   007A62  EC35  F05F         	call	_sendMessage5
 15475   007A66  0012               	return	
 15476   007A68                     l22191:
 15477                           
 15478                           ; BSR set to: 1
 15479                           ;../../VLCBlib_PIC/event_teach_large.c: 791:     if (evNum > 20) {
 15480   007A68  0E14               	movlw	20
 15481   007A6A  65CA               	cpfsgt	doReqev@evNum& (0+255),b
 15482   007A6C  D019               	goto	l22197
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;../../VLCBlib_PIC/event_teach_large.c: 792:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15486   007A6E  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15487   007A72  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15488   007A76  0E06               	movlw	6
 15489   007A78  0100               	movlb	0	; () banked
 15490   007A7A  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15491   007A7C  0E6F               	movlw	111
 15492   007A7E  ECED  F05E         	call	_sendMessage3
 15493                           
 15494                           ;../../VLCBlib_PIC/event_teach_large.c: 794:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15495   007A82  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15496   007A86  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15497   007A8A  0EB2               	movlw	178
 15498   007A8C  0101               	movlb	1	; () banked
 15499   007A8E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15500   007A90  0E04               	movlw	4
 15501   007A92  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15502   007A94  0E06               	movlw	6
 15503   007A96  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15504   007A98  0EAF               	movlw	175
 15505   007A9A  EC35  F05F         	call	_sendMessage5
 15506   007A9E  0012               	return	
 15507   007AA0                     l22197:
 15508                           
 15509                           ; BSR set to: 1
 15510                           ;../../VLCBlib_PIC/event_teach_large.c: 798:     if (evNum == 0) {
 15511   007AA0  51CA               	movf	doReqev@evNum& (0+255),w,b
 15512   007AA2  A4D8               	btfss	status,2,c
 15513   007AA4  D020               	goto	l22207
 15514                           
 15515                           ; BSR set to: 1
 15516                           ;../../VLCBlib_PIC/event_teach_large.c: 800:         sendMessage6(OPC_EVANS, nodeNumber>
      +                          >8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15517   007AA6  51C7               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15518   007AA8  6FC0               	movwf	sendMessage6@data1& (0+255),b
 15519   007AAA  C1C6  F1C1         	movff	doReqev@nodeNumber,sendMessage6@data2
 15520   007AAE  51C9               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15521   007AB0  6FC2               	movwf	sendMessage6@data3& (0+255),b
 15522   007AB2  C1C8  F1C3         	movff	doReqev@eventNumber,sendMessage6@data4
 15523   007AB6  0E00               	movlw	0
 15524   007AB8  6FC4               	movwf	sendMessage6@data5& (0+255),b
 15525   007ABA  51CD               	movf	doReqev@tableIndex& (0+255),w,b
 15526   007ABC  ECEA  F044         	call	_numEv
 15527   007AC0  0101               	movlb	1	; () banked
 15528   007AC2  6FC5               	movwf	sendMessage6@data6& (0+255),b
 15529   007AC4  0ED3               	movlw	211
 15530   007AC6  ECD5  F05E         	call	_sendMessage6
 15531                           
 15532                           ;../../VLCBlib_PIC/event_teach_large.c: 803:         startTimedResponse(tableIndex, find
      +                          ServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15533   007ACA  0E04               	movlw	4
 15534   007ACC  ECB4  F055         	call	_findServiceIndex
 15535   007AD0  0100               	movlb	0	; () banked
 15536   007AD2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15537   007AD4  0E32               	movlw	low _reqevCallback
 15538   007AD6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15539   007AD8  0E9D               	movlw	high _reqevCallback
 15540   007ADA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15541   007ADC  0101               	movlb	1	; () banked
 15542   007ADE  51CD               	movf	doReqev@tableIndex& (0+255),w,b
 15543   007AE0  ECE3  F05C         	call	_startTimedResponse
 15544   007AE4  0012               	return	
 15545   007AE6                     l22207:
 15546                           
 15547                           ; BSR set to: 1
 15548                           ;../../VLCBlib_PIC/event_teach_large.c: 810:         evVal = getEv(tableIndex, evNum-1);
 15549   007AE6  05CA               	decf	doReqev@evNum& (0+255),w,b
 15550   007AE8  0100               	movlb	0	; () banked
 15551   007AEA  6F9D               	movwf	getEv@evNum& (0+255),b
 15552   007AEC  0101               	movlb	1	; () banked
 15553   007AEE  51CD               	movf	doReqev@tableIndex& (0+255),w,b
 15554   007AF0  ECB7  F03B         	call	_getEv
 15555   007AF4  C09D  F1CB         	movff	?_getEv,doReqev@evVal
 15556   007AF8  C09E  F1CC         	movff	?_getEv+1,doReqev@evVal+1
 15557                           
 15558                           ;../../VLCBlib_PIC/event_teach_large.c: 812:     if (evVal < 0) {
 15559   007AFC  0101               	movlb	1	; () banked
 15560   007AFE  AFCC               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15561   007B00  D01B               	goto	l22215
 15562                           
 15563                           ; BSR set to: 1
 15564                           ;../../VLCBlib_PIC/event_teach_large.c: 814:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, (uint8_t)(-evVal));
 15565   007B02  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15566   007B06  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15567   007B0A  51CB               	movf	doReqev@evVal& (0+255),w,b
 15568   007B0C  0800               	sublw	0
 15569   007B0E  0100               	movlb	0	; () banked
 15570   007B10  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15571   007B12  0E6F               	movlw	111
 15572   007B14  ECED  F05E         	call	_sendMessage3
 15573                           
 15574                           ;../../VLCBlib_PIC/event_teach_large.c: 816:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15575   007B18  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15576   007B1C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15577   007B20  0EB2               	movlw	178
 15578   007B22  0101               	movlb	1	; () banked
 15579   007B24  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15580   007B26  0E04               	movlw	4
 15581   007B28  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15582   007B2A  51CB               	movf	doReqev@evVal& (0+255),w,b
 15583   007B2C  0800               	sublw	0
 15584   007B2E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15585   007B30  0EAF               	movlw	175
 15586   007B32  EC35  F05F         	call	_sendMessage5
 15587   007B36  0012               	return	
 15588   007B38                     l22215:
 15589                           
 15590                           ; BSR set to: 1
 15591                           ;../../VLCBlib_PIC/event_teach_large.c: 821:     sendMessage6(OPC_EVANS, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 15592   007B38  51C7               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15593   007B3A  6FC0               	movwf	sendMessage6@data1& (0+255),b
 15594   007B3C  C1C6  F1C1         	movff	doReqev@nodeNumber,sendMessage6@data2
 15595   007B40  51C9               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15596   007B42  6FC2               	movwf	sendMessage6@data3& (0+255),b
 15597   007B44  C1C8  F1C3         	movff	doReqev@eventNumber,sendMessage6@data4
 15598   007B48  C1CA  F1C4         	movff	doReqev@evNum,sendMessage6@data5
 15599   007B4C  C1CB  F1C5         	movff	doReqev@evVal,sendMessage6@data6
 15600   007B50  0ED3               	movlw	211
 15601   007B52  ECD5  F05E         	call	_sendMessage6
 15602   007B56  0012               	return		;funcret
 15603   007B58                     __end_of_doReqev:
 15604                           	callstack 0
 15605                           
 15606 ;; *************** function _doNnevn *****************
 15607 ;; Defined at:
 15608 ;;		line 573 in file "../../VLCBlib_PIC/event_teach_large.c"
 15609 ;; Parameters:    Size  Location     Type
 15610 ;;		None
 15611 ;; Auto vars:     Size  Location     Type
 15612 ;;  f               1   12[BANK1 ] struct .
 15613 ;;  i               1   14[BANK1 ] unsigned char 
 15614 ;;  count           1   13[BANK1 ] unsigned char 
 15615 ;; Return value:  Size  Location     Type
 15616 ;;                  1    wreg      void 
 15617 ;; Registers used:
 15618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15619 ;; Tracked objects:
 15620 ;;		On entry : 0/0
 15621 ;;		On exit  : 0/0
 15622 ;;		Unchanged: 0/0
 15623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15625 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15626 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15627 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15628 ;;Total ram usage:        7 bytes
 15629 ;; Hardware stack levels used: 1
 15630 ;; Hardware stack levels required when called: 16
 15631 ;; This function calls:
 15632 ;;		_readNVM
 15633 ;;		_sendMessage3
 15634 ;; This function is called by:
 15635 ;;		_teachProcessMessage
 15636 ;; This function uses a non-reentrant model
 15637 ;;
 15638                           
 15639                           	psect	text31
 15640   00AD9A                     __ptext31:
 15641                           	callstack 0
 15642   00AD9A                     _doNnevn:
 15643                           	callstack 12
 15644                           
 15645                           ;../../VLCBlib_PIC/event_teach_large.c: 575:     uint8_t count = 0;
 15646                           
 15647                           ;incstack = 0
 15648   00AD9A  0E00               	movlw	0
 15649   00AD9C  0101               	movlb	1	; () banked
 15650   00AD9E  6FC5               	movwf	doNnevn@count& (0+255),b
 15651                           
 15652                           ;../../VLCBlib_PIC/event_teach_large.c: 576:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 577:     for (i=0; i<255; i++) {
 15653   00ADA0  0E00               	movlw	0
 15654   00ADA2  6FC6               	movwf	doNnevn@i& (0+255),b
 15655   00ADA4                     l22233:
 15656                           
 15657                           ; BSR set to: 1
 15658                           ;../../VLCBlib_PIC/event_teach_large.c: 578:         EventTableFlags f;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 579:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*i+0);
 15659   00ADA4  51C6               	movf	doNnevn@i& (0+255),w,b
 15660   00ADA6  6FC0               	movwf	??_doNnevn& (0+255),b
 15661   00ADA8  6BC1               	clrf	(??_doNnevn+1)& (0+255),b
 15662   00ADAA  3BC0               	swapf	??_doNnevn& (0+255),f,b
 15663   00ADAC  3BC1               	swapf	(??_doNnevn+1)& (0+255),f,b
 15664   00ADAE  0EF0               	movlw	240
 15665   00ADB0  17C1               	andwf	(??_doNnevn+1)& (0+255),f,b
 15666   00ADB2  51C0               	movf	??_doNnevn& (0+255),w,b
 15667   00ADB4  0B0F               	andlw	15
 15668   00ADB6  13C1               	iorwf	(??_doNnevn+1)& (0+255),f,b
 15669   00ADB8  0EF0               	movlw	240
 15670   00ADBA  17C0               	andwf	??_doNnevn& (0+255),f,b
 15671   00ADBC  0E80               	movlw	128
 15672   00ADBE  25C0               	addwf	??_doNnevn& (0+255),w,b
 15673   00ADC0  6FC2               	movwf	(??_doNnevn+2)& (0+255),b
 15674   00ADC2  0EEF               	movlw	239
 15675   00ADC4  21C1               	addwfc	(??_doNnevn+1)& (0+255),w,b
 15676   00ADC6  6FC3               	movwf	(??_doNnevn+3)& (0+255),b
 15677   00ADC8  C1C2  F091         	movff	??_doNnevn+2,readNVM@index
 15678   00ADCC  C1C3  F092         	movff	??_doNnevn+3,readNVM@index+1
 15679   00ADD0  0100               	movlb	0	; () banked
 15680   00ADD2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 15681   00ADD4  0E01               	movlw	1
 15682   00ADD6  ECC2  F058         	call	_readNVM
 15683   00ADDA  0100               	movlb	0	; () banked
 15684   00ADDC  5191               	movf	?_readNVM& (0+255),w,b
 15685   00ADDE  0101               	movlb	1	; () banked
 15686   00ADE0  6FC4               	movwf	doNnevn@f& (0+255),b
 15687                           
 15688                           ; BSR set to: 1
 15689                           ;../../VLCBlib_PIC/event_teach_large.c: 580:         if (f.freeEntry) {
 15690   00ADE2  BFC4               	btfsc	doNnevn@f& (0+255),7,b
 15691                           
 15692                           ; BSR set to: 1
 15693                           ;../../VLCBlib_PIC/event_teach_large.c: 581:             count++;
 15694   00ADE4  2BC5               	incf	doNnevn@count& (0+255),f,b
 15695                           
 15696                           ; BSR set to: 1
 15697                           ;../../VLCBlib_PIC/event_teach_large.c: 583:     }
 15698                           
 15699                           ;../../VLCBlib_PIC/event_teach_large.c: 582:         }
 15700   00ADE6  2BC6               	incf	doNnevn@i& (0+255),f,b
 15701                           
 15702                           ; BSR set to: 1
 15703   00ADE8  29C6               	incf	doNnevn@i& (0+255),w,b
 15704   00ADEA  A4D8               	btfss	status,2,c
 15705   00ADEC  D7DB               	goto	l22233
 15706                           
 15707                           ; BSR set to: 1
 15708                           ;../../VLCBlib_PIC/event_teach_large.c: 584:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15709   00ADEE  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15710   00ADF2  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15711   00ADF6  C1C5  F0A7         	movff	doNnevn@count,sendMessage3@data3
 15712   00ADFA  0E70               	movlw	112
 15713   00ADFC  ECED  F05E         	call	_sendMessage3
 15714   00AE00  0012               	return		;funcret
 15715   00AE02                     __end_of_doNnevn:
 15716                           	callstack 0
 15717                           
 15718 ;; *************** function _doNnclr *****************
 15719 ;; Defined at:
 15720 ;;		line 663 in file "../../VLCBlib_PIC/event_teach_large.c"
 15721 ;; Parameters:    Size  Location     Type
 15722 ;;		None
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;		None
 15725 ;; Return value:  Size  Location     Type
 15726 ;;                  1    wreg      void 
 15727 ;; Registers used:
 15728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15729 ;; Tracked objects:
 15730 ;;		On entry : 0/0
 15731 ;;		On exit  : 0/0
 15732 ;;		Unchanged: 0/0
 15733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15738 ;;Total ram usage:        0 bytes
 15739 ;; Hardware stack levels used: 1
 15740 ;; Hardware stack levels required when called: 19
 15741 ;; This function calls:
 15742 ;;		_clearAllEvents
 15743 ;;		_sendMessage2
 15744 ;;		_sendMessage5
 15745 ;; This function is called by:
 15746 ;;		_teachProcessMessage
 15747 ;; This function uses a non-reentrant model
 15748 ;;
 15749                           
 15750                           	psect	text32
 15751   00BD4A                     __ptext32:
 15752                           	callstack 0
 15753   00BD4A                     _doNnclr:
 15754                           	callstack 9
 15755                           
 15756                           ;../../VLCBlib_PIC/event_teach_large.c: 664:     clearAllEvents();
 15757                           
 15758                           ;incstack = 0
 15759   00BD4A  EC85  F05A         	call	_clearAllEvents	;wreg free
 15760                           
 15761                           ;../../VLCBlib_PIC/event_teach_large.c: 665:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 15762   00BD4E  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 15763   00BD52  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 15764   00BD56  0E59               	movlw	89
 15765   00BD58  EC05  F05F         	call	_sendMessage2
 15766                           
 15767                           ;../../VLCBlib_PIC/event_teach_large.c: 667:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 15768   00BD5C  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15769   00BD60  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15770   00BD64  0EB2               	movlw	178
 15771   00BD66  0101               	movlb	1	; () banked
 15772   00BD68  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15773   00BD6A  0E04               	movlw	4
 15774   00BD6C  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15775   00BD6E  0E00               	movlw	0
 15776   00BD70  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15777   00BD72  0EAF               	movlw	175
 15778   00BD74  EC35  F05F         	call	_sendMessage5
 15779   00BD78  0012               	return		;funcret
 15780   00BD7A                     __end_of_doNnclr:
 15781                           	callstack 0
 15782                           
 15783 ;; *************** function _doNerd *****************
 15784 ;; Defined at:
 15785 ;;		line 592 in file "../../VLCBlib_PIC/event_teach_large.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;		None
 15788 ;; Auto vars:     Size  Location     Type
 15789 ;;		None
 15790 ;; Return value:  Size  Location     Type
 15791 ;;                  1    wreg      void 
 15792 ;; Registers used:
 15793 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15794 ;; Tracked objects:
 15795 ;;		On entry : 0/0
 15796 ;;		On exit  : 0/0
 15797 ;;		Unchanged: 0/0
 15798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15803 ;;Total ram usage:        0 bytes
 15804 ;; Hardware stack levels used: 1
 15805 ;; Hardware stack levels required when called: 13
 15806 ;; This function calls:
 15807 ;;		_findServiceIndex
 15808 ;;		_startTimedResponse
 15809 ;; This function is called by:
 15810 ;;		_teachProcessMessage
 15811 ;; This function uses a non-reentrant model
 15812 ;;
 15813                           
 15814                           	psect	text33
 15815   00C242                     __ptext33:
 15816                           	callstack 0
 15817   00C242                     _doNerd:
 15818                           	callstack 15
 15819                           
 15820                           ;../../VLCBlib_PIC/event_teach_large.c: 593:     startTimedResponse(2, findServiceIndex(
      +                          SERVICE_ID_OLD_TEACH), nerdCallback);
 15821                           
 15822                           ;incstack = 0
 15823   00C242  0E04               	movlw	4
 15824   00C244  ECB4  F055         	call	_findServiceIndex
 15825   00C248  0100               	movlb	0	; () banked
 15826   00C24A  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15827   00C24C  0ED0               	movlw	low _nerdCallback
 15828   00C24E  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15829   00C250  0EAE               	movlw	high _nerdCallback
 15830   00C252  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15831   00C254  0E02               	movlw	2
 15832   00C256  ECE3  F05C         	call	_startTimedResponse
 15833   00C25A  0012               	return		;funcret
 15834   00C25C                     __end_of_doNerd:
 15835                           	callstack 0
 15836                           
 15837 ;; *************** function _doNenrd *****************
 15838 ;; Defined at:
 15839 ;;		line 624 in file "../../VLCBlib_PIC/event_teach_large.c"
 15840 ;; Parameters:    Size  Location     Type
 15841 ;;  index           1    wreg     unsigned char 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;  index           1   13[BANK1 ] unsigned char 
 15844 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15845 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15846 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 15847 ;; Return value:  Size  Location     Type
 15848 ;;                  1    wreg      void 
 15849 ;; Registers used:
 15850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15851 ;; Tracked objects:
 15852 ;;		On entry : 0/0
 15853 ;;		On exit  : 0/0
 15854 ;;		Unchanged: 0/0
 15855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15857 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15859 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15860 ;;Total ram usage:        6 bytes
 15861 ;; Hardware stack levels used: 1
 15862 ;; Hardware stack levels required when called: 16
 15863 ;; This function calls:
 15864 ;;		_evtIdxToTableIndex
 15865 ;;		_getEN
 15866 ;;		_getNN
 15867 ;;		_sendMessage3
 15868 ;;		_sendMessage5
 15869 ;;		_validStart
 15870 ;; This function is called by:
 15871 ;;		_teachProcessMessage
 15872 ;; This function uses a non-reentrant model
 15873 ;;
 15874                           
 15875                           	psect	text34
 15876   00ACBE                     __ptext34:
 15877                           	callstack 0
 15878   00ACBE                     _doNenrd:
 15879                           	callstack 12
 15880                           
 15881                           ;incstack = 0
 15882                           ;doNenrd@index stored from wreg
 15883   00ACBE  0101               	movlb	1	; () banked
 15884   00ACC0  6FC5               	movwf	doNenrd@index& (0+255),b
 15885                           
 15886                           ;../../VLCBlib_PIC/event_teach_large.c: 625:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 626:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 628:     tableIndex = evtIdxToTableIndex(index);
 15887   00ACC2  0101               	movlb	1	; () banked
 15888   00ACC4  51C5               	movf	doNenrd@index& (0+255),w,b
 15889   00ACC6  ECC4  F061         	call	_evtIdxToTableIndex
 15890   00ACCA  0101               	movlb	1	; () banked
 15891   00ACCC  6FCA               	movwf	doNenrd@tableIndex& (0+255),b
 15892                           
 15893                           ; BSR set to: 1
 15894                           ;../../VLCBlib_PIC/event_teach_large.c: 630:     if ( ! validStart(tableIndex)) {
 15895   00ACCE  51CA               	movf	doNenrd@tableIndex& (0+255),w,b
 15896   00ACD0  EC2B  F05B         	call	_validStart
 15897   00ACD4  0900               	iorlw	0
 15898   00ACD6  A4D8               	btfss	status,2,c
 15899   00ACD8  D00B               	goto	l22265
 15900                           
 15901                           ;../../VLCBlib_PIC/event_teach_large.c: 631:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EN_IDX);
 15902   00ACDA  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15903   00ACDE  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15904   00ACE2  0E08               	movlw	8
 15905   00ACE4  0100               	movlb	0	; () banked
 15906   00ACE6  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15907   00ACE8  0E6F               	movlw	111
 15908   00ACEA  ECED  F05E         	call	_sendMessage3
 15909   00ACEE  0012               	return	
 15910   00ACF0                     l22265:
 15911                           
 15912                           ;../../VLCBlib_PIC/event_teach_large.c: 637:     nodeNumber = getNN(tableIndex);
 15913   00ACF0  0101               	movlb	1	; () banked
 15914   00ACF2  51CA               	movf	doNenrd@tableIndex& (0+255),w,b
 15915   00ACF4  ECF1  F048         	call	_getNN
 15916   00ACF8  C097  F1C6         	movff	?_getNN,doNenrd@nodeNumber
 15917   00ACFC  C098  F1C7         	movff	?_getNN+1,doNenrd@nodeNumber+1
 15918                           
 15919                           ;../../VLCBlib_PIC/event_teach_large.c: 638:     eventNumber = getEN(tableIndex);
 15920   00AD00  0101               	movlb	1	; () banked
 15921   00AD02  51CA               	movf	doNenrd@tableIndex& (0+255),w,b
 15922   00AD04  ECC9  F054         	call	_getEN
 15923   00AD08  C097  F1C8         	movff	?_getEN,doNenrd@eventNumber
 15924   00AD0C  C098  F1C9         	movff	?_getEN+1,doNenrd@eventNumber+1
 15925                           
 15926                           ;../../VLCBlib_PIC/event_teach_large.c: 639:     sendMessage5(OPC_ENRSP, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 15927   00AD10  0101               	movlb	1	; () banked
 15928   00AD12  51C7               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 15929   00AD14  6FC0               	movwf	sendMessage5@data1& (0+255),b
 15930   00AD16  C1C6  F1C1         	movff	doNenrd@nodeNumber,sendMessage5@data2
 15931   00AD1A  51C9               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 15932   00AD1C  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15933   00AD1E  C1C8  F1C3         	movff	doNenrd@eventNumber,sendMessage5@data4
 15934   00AD22  C1C5  F1C4         	movff	doNenrd@index,sendMessage5@data5
 15935   00AD26  0EF2               	movlw	242
 15936   00AD28  EC35  F05F         	call	_sendMessage5
 15937   00AD2C  0012               	return		;funcret
 15938   00AD2E                     __end_of_doNenrd:
 15939                           	callstack 0
 15940                           
 15941 ;; *************** function _evtIdxToTableIndex *****************
 15942 ;; Defined at:
 15943 ;;		line 1262 in file "../../VLCBlib_PIC/event_teach_large.c"
 15944 ;; Parameters:    Size  Location     Type
 15945 ;;  evtIdx          1    wreg     unsigned char 
 15946 ;; Auto vars:     Size  Location     Type
 15947 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 15948 ;; Return value:  Size  Location     Type
 15949 ;;                  1    wreg      unsigned char 
 15950 ;; Registers used:
 15951 ;;		wreg, status,2, status,0
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15960 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15961 ;;Total ram usage:        1 bytes
 15962 ;; Hardware stack levels used: 1
 15963 ;; Hardware stack levels required when called: 12
 15964 ;; This function calls:
 15965 ;;		Nothing
 15966 ;; This function is called by:
 15967 ;;		_doNenrd
 15968 ;;		_doReval
 15969 ;; This function uses a non-reentrant model
 15970 ;;
 15971                           
 15972                           	psect	text35
 15973   00C388                     __ptext35:
 15974                           	callstack 0
 15975   00C388                     _evtIdxToTableIndex:
 15976                           	callstack 15
 15977                           
 15978                           ;incstack = 0
 15979                           ;evtIdxToTableIndex@evtIdx stored from wreg
 15980   00C388  0100               	movlb	0	; () banked
 15981   00C38A  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 15982                           
 15983                           ;../../VLCBlib_PIC/event_teach_large.c: 1263:     return evtIdx - 1;
 15984   00C38C  0100               	movlb	0	; () banked
 15985   00C38E  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 15986                           
 15987                           ; BSR set to: 0
 15988   00C390  0012               	return		;funcret
 15989   00C392                     __end_of_evtIdxToTableIndex:
 15990                           	callstack 0
 15991                           
 15992 ;; *************** function _doEvuln *****************
 15993 ;; Defined at:
 15994 ;;		line 757 in file "../../VLCBlib_PIC/event_teach_large.c"
 15995 ;; Parameters:    Size  Location     Type
 15996 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 15997 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;  result          1   24[BANK1 ] unsigned char 
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  1    wreg      void 
 16002 ;; Registers used:
 16003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16009 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16010 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16012 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16013 ;;Total ram usage:        5 bytes
 16014 ;; Hardware stack levels used: 1
 16015 ;; Hardware stack levels required when called: 20
 16016 ;; This function calls:
 16017 ;;		_removeEvent
 16018 ;;		_sendMessage2
 16019 ;;		_sendMessage3
 16020 ;;		_sendMessage5
 16021 ;; This function is called by:
 16022 ;;		_teachProcessMessage
 16023 ;; This function uses a non-reentrant model
 16024 ;;
 16025                           
 16026                           	psect	text36
 16027   00A918                     __ptext36:
 16028                           	callstack 0
 16029   00A918                     _doEvuln:
 16030                           	callstack 8
 16031                           
 16032                           ;../../VLCBlib_PIC/event_teach_large.c: 758:     uint8_t result;;../../VLCBlib_PIC/event
      +                          _teach_large.c: 759:     result = removeEvent(nodeNumber, eventNumber);
 16033                           
 16034                           ; BSR set to: 0
 16035                           ;incstack = 0
 16036   00A918  C1CC  F1C7         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16037   00A91C  C1CD  F1C8         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16038   00A920  C1CE  F1C9         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16039   00A924  C1CF  F1CA         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16040   00A928  ECBC  F05F         	call	_removeEvent	;wreg free
 16041   00A92C  0101               	movlb	1	; () banked
 16042   00A92E  6FD0               	movwf	doEvuln@result& (0+255),b
 16043                           
 16044                           ; BSR set to: 1
 16045                           ;../../VLCBlib_PIC/event_teach_large.c: 760:     if (result) {
 16046   00A930  51D0               	movf	doEvuln@result& (0+255),w,b
 16047   00A932  B4D8               	btfsc	status,2,c
 16048   00A934  D018               	goto	l22181
 16049                           
 16050                           ; BSR set to: 1
 16051                           ;../../VLCBlib_PIC/event_teach_large.c: 761:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, result);
 16052   00A936  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 16053   00A93A  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 16054   00A93E  C1D0  F0A7         	movff	doEvuln@result,sendMessage3@data3
 16055   00A942  0E6F               	movlw	111
 16056   00A944  ECED  F05E         	call	_sendMessage3
 16057                           
 16058                           ;../../VLCBlib_PIC/event_teach_large.c: 763:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16059   00A948  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16060   00A94C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16061   00A950  0E95               	movlw	149
 16062   00A952  0101               	movlb	1	; () banked
 16063   00A954  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16064   00A956  0E04               	movlw	4
 16065   00A958  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16066   00A95A  C1D0  F1C4         	movff	doEvuln@result,sendMessage5@data5
 16067   00A95E  0EAF               	movlw	175
 16068   00A960  EC35  F05F         	call	_sendMessage5
 16069   00A964  0012               	return	
 16070   00A966                     l22181:
 16071                           
 16072                           ; BSR set to: 1
 16073                           ;../../VLCBlib_PIC/event_teach_large.c: 768:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16074   00A966  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 16075   00A96A  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 16076   00A96E  0E59               	movlw	89
 16077   00A970  EC05  F05F         	call	_sendMessage2
 16078                           
 16079                           ;../../VLCBlib_PIC/event_teach_large.c: 770:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16080   00A974  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16081   00A978  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16082   00A97C  0EB2               	movlw	178
 16083   00A97E  0101               	movlb	1	; () banked
 16084   00A980  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16085   00A982  0E04               	movlw	4
 16086   00A984  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16087   00A986  0E00               	movlw	0
 16088   00A988  6FC4               	movwf	sendMessage5@data5& (0+255),b
 16089   00A98A  0EAF               	movlw	175
 16090   00A98C  EC35  F05F         	call	_sendMessage5
 16091   00A990  0012               	return		;funcret
 16092   00A992                     __end_of_doEvuln:
 16093                           	callstack 0
 16094                           
 16095 ;; *************** function _removeEvent *****************
 16096 ;; Defined at:
 16097 ;;		line 858 in file "../../VLCBlib_PIC/event_teach_large.c"
 16098 ;; Parameters:    Size  Location     Type
 16099 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16100 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16103 ;; Return value:  Size  Location     Type
 16104 ;;                  1    wreg      unsigned char 
 16105 ;; Registers used:
 16106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16107 ;; Tracked objects:
 16108 ;;		On entry : 0/0
 16109 ;;		On exit  : 0/0
 16110 ;;		Unchanged: 0/0
 16111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16112 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16113 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16115 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16116 ;;Total ram usage:        5 bytes
 16117 ;; Hardware stack levels used: 1
 16118 ;; Hardware stack levels required when called: 19
 16119 ;; This function calls:
 16120 ;;		_findEvent
 16121 ;;		_removeTableEntry
 16122 ;; This function is called by:
 16123 ;;		_doEvuln
 16124 ;; This function uses a non-reentrant model
 16125 ;;
 16126                           
 16127                           	psect	text37
 16128   00BF78                     __ptext37:
 16129                           	callstack 0
 16130   00BF78                     _removeEvent:
 16131                           	callstack 8
 16132                           
 16133                           ;../../VLCBlib_PIC/event_teach_large.c: 860:     uint8_t tableIndex = findEvent(nodeNumb
      +                          er, eventNumber);
 16134                           
 16135                           ;incstack = 0
 16136   00BF78  C1C7  F1B8         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16137   00BF7C  C1C8  F1B9         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16138   00BF80  C1C9  F1BA         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16139   00BF84  C1CA  F1BB         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16140   00BF88  ECE9  F050         	call	_findEvent	;wreg free
 16141   00BF8C  0101               	movlb	1	; () banked
 16142   00BF8E  6FCB               	movwf	removeEvent@tableIndex& (0+255),b
 16143                           
 16144                           ; BSR set to: 1
 16145                           ;../../VLCBlib_PIC/event_teach_large.c: 861:     if (tableIndex == 0xff) return CMDERR_I
      +                          NVALID_EVENT;
 16146   00BF90  29CB               	incf	removeEvent@tableIndex& (0+255),w,b
 16147   00BF92  A4D8               	btfss	status,2,c
 16148   00BF94  D002               	goto	l20909
 16149                           
 16150                           ; BSR set to: 1
 16151   00BF96  0E07               	movlw	7
 16152   00BF98  0012               	return	
 16153   00BF9A                     l20909:
 16154                           
 16155                           ; BSR set to: 1
 16156                           ;../../VLCBlib_PIC/event_teach_large.c: 863:     return removeTableEntry(tableIndex);
 16157   00BF9A  51CB               	movf	removeEvent@tableIndex& (0+255),w,b
 16158   00BF9C  EC62  F03C         	call	_removeTableEntry
 16159   00BFA0  0012               	return		;funcret
 16160   00BFA2                     __end_of_removeEvent:
 16161                           	callstack 0
 16162                           
 16163 ;; *************** function _doEvlrn *****************
 16164 ;; Defined at:
 16165 ;;		line 680 in file "../../VLCBlib_PIC/event_teach_large.c"
 16166 ;; Parameters:    Size  Location     Type
 16167 ;;  nodeNumber      2   52[BANK1 ] unsigned short 
 16168 ;;  eventNumber     2   54[BANK1 ] unsigned short 
 16169 ;;  evNum           1   56[BANK1 ] unsigned char 
 16170 ;;  evVal           1   57[BANK1 ] unsigned char 
 16171 ;; Auto vars:     Size  Location     Type
 16172 ;;  error           1   58[BANK1 ] unsigned char 
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  1    wreg      void 
 16175 ;; Registers used:
 16176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16182 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16183 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16185 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16186 ;;Total ram usage:        7 bytes
 16187 ;; Hardware stack levels used: 1
 16188 ;; Hardware stack levels required when called: 23
 16189 ;; This function calls:
 16190 ;;		_APP_addEvent
 16191 ;;		_sendMessage2
 16192 ;;		_sendMessage3
 16193 ;;		_sendMessage5
 16194 ;; This function is called by:
 16195 ;;		_teachProcessMessage
 16196 ;; This function uses a non-reentrant model
 16197 ;;
 16198                           
 16199                           	psect	text38
 16200   009058                     __ptext38:
 16201                           	callstack 0
 16202   009058                     _doEvlrn:
 16203                           	callstack 5
 16204                           
 16205                           ;../../VLCBlib_PIC/event_teach_large.c: 681:     uint8_t error;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 682:     evNum--;
 16206                           
 16207                           ;incstack = 0
 16208   009058  0101               	movlb	1	; () banked
 16209   00905A  07F0               	decf	doEvlrn@evNum& (0+255),f,b
 16210                           
 16211                           ; BSR set to: 1
 16212                           ;../../VLCBlib_PIC/event_teach_large.c: 683:     if (evNum >= 20) {
 16213   00905C  0E13               	movlw	19
 16214   00905E  65F0               	cpfsgt	doEvlrn@evNum& (0+255),b
 16215   009060  D019               	goto	l22157
 16216                           
 16217                           ; BSR set to: 1
 16218                           ;../../VLCBlib_PIC/event_teach_large.c: 684:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 16219   009062  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 16220   009066  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 16221   00906A  0E06               	movlw	6
 16222   00906C  0100               	movlb	0	; () banked
 16223   00906E  6FA7               	movwf	sendMessage3@data3& (0+255),b
 16224   009070  0E6F               	movlw	111
 16225   009072  ECED  F05E         	call	_sendMessage3
 16226                           
 16227                           ;../../VLCBlib_PIC/event_teach_large.c: 686:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16228   009076  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16229   00907A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16230   00907E  0ED2               	movlw	210
 16231   009080  0101               	movlb	1	; () banked
 16232   009082  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16233   009084  0E04               	movlw	4
 16234   009086  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16235   009088  0E06               	movlw	6
 16236   00908A  6FC4               	movwf	sendMessage5@data5& (0+255),b
 16237   00908C  0EAF               	movlw	175
 16238   00908E  EC35  F05F         	call	_sendMessage5
 16239   009092  0012               	return	
 16240   009094                     l22157:
 16241                           
 16242                           ; BSR set to: 1
 16243                           ;../../VLCBlib_PIC/event_teach_large.c: 693:     error = APP_addEvent(nodeNumber, eventN
      +                          umber, evNum, evVal, FALSE);
 16244   009094  C1EC  F1E4         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16245   009098  C1ED  F1E5         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16246   00909C  C1EE  F1E6         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16247   0090A0  C1EF  F1E7         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16248   0090A4  C1F0  F1E8         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16249   0090A8  C1F1  F1E9         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16250   0090AC  0E00               	movlw	0
 16251   0090AE  6FEA               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16252   0090B0  EC97  F056         	call	_APP_addEvent	;wreg free
 16253   0090B4  0101               	movlb	1	; () banked
 16254   0090B6  6FF2               	movwf	doEvlrn@error& (0+255),b
 16255                           
 16256                           ; BSR set to: 1
 16257                           ;../../VLCBlib_PIC/event_teach_large.c: 694:     if (error) {
 16258   0090B8  51F2               	movf	doEvlrn@error& (0+255),w,b
 16259   0090BA  B4D8               	btfsc	status,2,c
 16260   0090BC  D018               	goto	l22165
 16261                           
 16262                           ; BSR set to: 1
 16263                           ;../../VLCBlib_PIC/event_teach_large.c: 696:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, error);
 16264   0090BE  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 16265   0090C2  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 16266   0090C6  C1F2  F0A7         	movff	doEvlrn@error,sendMessage3@data3
 16267   0090CA  0E6F               	movlw	111
 16268   0090CC  ECED  F05E         	call	_sendMessage3
 16269                           
 16270                           ;../../VLCBlib_PIC/event_teach_large.c: 698:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16271   0090D0  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16272   0090D4  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16273   0090D8  0ED2               	movlw	210
 16274   0090DA  0101               	movlb	1	; () banked
 16275   0090DC  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16276   0090DE  0E04               	movlw	4
 16277   0090E0  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16278   0090E2  C1F2  F1C4         	movff	doEvlrn@error,sendMessage5@data5
 16279   0090E6  0EAF               	movlw	175
 16280   0090E8  EC35  F05F         	call	_sendMessage5
 16281   0090EC  0012               	return	
 16282   0090EE                     l22165:
 16283                           
 16284                           ; BSR set to: 1
 16285                           ;../../VLCBlib_PIC/event_teach_large.c: 703:     teachDiagnostics[0x00].asUint++;
 16286   0090EE  4BB2               	infsnz	_teachDiagnostics& (0+255),f,b
 16287   0090F0  2BB3               	incf	(_teachDiagnostics+1)& (0+255),f,b
 16288                           
 16289                           ; BSR set to: 1
 16290                           ;../../VLCBlib_PIC/event_teach_large.c: 705:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16291   0090F2  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 16292   0090F6  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 16293   0090FA  0E59               	movlw	89
 16294   0090FC  EC05  F05F         	call	_sendMessage2
 16295                           
 16296                           ;../../VLCBlib_PIC/event_teach_large.c: 707:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16297   009100  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16298   009104  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16299   009108  0EB2               	movlw	178
 16300   00910A  0101               	movlb	1	; () banked
 16301   00910C  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16302   00910E  0E04               	movlw	4
 16303   009110  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16304   009112  0E00               	movlw	0
 16305   009114  6FC4               	movwf	sendMessage5@data5& (0+255),b
 16306   009116  0EAF               	movlw	175
 16307   009118  EC35  F05F         	call	_sendMessage5
 16308   00911C  0012               	return		;funcret
 16309   00911E                     __end_of_doEvlrn:
 16310                           	callstack 0
 16311                           
 16312 ;; *************** function _APP_addEvent *****************
 16313 ;; Defined at:
 16314 ;;		line 195 in file "../universalEvents.c"
 16315 ;; Parameters:    Size  Location     Type
 16316 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16317 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16318 ;;  evNum           1   48[BANK1 ] unsigned char 
 16319 ;;  evVal           1   49[BANK1 ] unsigned char 
 16320 ;;  forceOwnNN      1   50[BANK1 ] enum E12761
 16321 ;; Auto vars:     Size  Location     Type
 16322 ;;  tableIndex      1   51[BANK1 ] unsigned char 
 16323 ;; Return value:  Size  Location     Type
 16324 ;;                  1    wreg      unsigned char 
 16325 ;; Registers used:
 16326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16327 ;; Tracked objects:
 16328 ;;		On entry : 0/0
 16329 ;;		On exit  : 0/0
 16330 ;;		Unchanged: 0/0
 16331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16332 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16333 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16335 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16336 ;;Total ram usage:        8 bytes
 16337 ;; Hardware stack levels used: 1
 16338 ;; Hardware stack levels required when called: 22
 16339 ;; This function calls:
 16340 ;;		_addEvent
 16341 ;;		_checkRemoveTableEntry
 16342 ;;		_rebuildHashtable
 16343 ;;		_writeEv
 16344 ;; This function is called by:
 16345 ;;		_doEvlrn
 16346 ;; This function uses a non-reentrant model
 16347 ;;
 16348                           
 16349                           	psect	text39
 16350   00AD2E                     __ptext39:
 16351                           	callstack 0
 16352   00AD2E                     _APP_addEvent:
 16353                           	callstack 5
 16354                           
 16355                           ;../universalEvents.c: 197:     if ((evNum == 0) && (evVal != 0))
 16356                           
 16357                           ;incstack = 0
 16358   00AD2E  0101               	movlb	1	; () banked
 16359   00AD30  51E8               	movf	APP_addEvent@evNum& (0+255),w,b
 16360   00AD32  A4D8               	btfss	status,2,c
 16361   00AD34  D021               	goto	l648
 16362                           
 16363                           ; BSR set to: 1
 16364   00AD36  51E9               	movf	APP_addEvent@evVal& (0+255),w,b
 16365   00AD38  B4D8               	btfsc	status,2,c
 16366   00AD3A  D01E               	goto	l648
 16367                           
 16368                           ; BSR set to: 1
 16369                           ;../universalEvents.c: 198:     {;../universalEvents.c: 200:         if ((evVal >= 1) &&
      +                           (evVal <= (7+16*4))) {
 16370   00AD3C  51E9               	movf	APP_addEvent@evVal& (0+255),w,b
 16371   00AD3E  B4D8               	btfsc	status,2,c
 16372   00AD40  D01B               	goto	l648
 16373                           
 16374                           ; BSR set to: 1
 16375   00AD42  0E48               	movlw	72
 16376   00AD44  61E9               	cpfslt	APP_addEvent@evVal& (0+255),b
 16377   00AD46  D018               	goto	l648
 16378                           
 16379                           ; BSR set to: 1
 16380                           ;../universalEvents.c: 201:             uint8_t tableIndex = happening2Event[evVal-1];
 16381   00AD48  0EFF               	movlw	low (_happening2Event+65535)
 16382   00AD4A  25E9               	addwf	APP_addEvent@evVal& (0+255),w,b
 16383   00AD4C  6ED9               	movwf	fsr2l,c
 16384   00AD4E  6ADA               	clrf	fsr2h,c
 16385   00AD50  0E02               	movlw	high (_happening2Event+65535)
 16386   00AD52  22DA               	addwfc	fsr2h,f,c
 16387   00AD54  50DF               	movf	indf2,w,c
 16388   00AD56  6FEB               	movwf	APP_addEvent@tableIndex& (0+255),b
 16389                           
 16390                           ; BSR set to: 1
 16391                           ;../universalEvents.c: 202:             if (tableIndex != 0xff) {
 16392   00AD58  29EB               	incf	APP_addEvent@tableIndex& (0+255),w,b
 16393   00AD5A  B4D8               	btfsc	status,2,c
 16394   00AD5C  D00D               	goto	l648
 16395                           
 16396                           ; BSR set to: 1
 16397                           ;../universalEvents.c: 205:                 writeEv(tableIndex, 0, 0);
 16398   00AD5E  0E00               	movlw	0
 16399   00AD60  6FC9               	movwf	writeEv@evNum& (0+255),b
 16400   00AD62  0E00               	movlw	0
 16401   00AD64  6FCA               	movwf	writeEv@evVal& (0+255),b
 16402   00AD66  51EB               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16403   00AD68  ECC4  F018         	call	_writeEv
 16404                           
 16405                           ;../universalEvents.c: 206:                 checkRemoveTableEntry(tableIndex);
 16406   00AD6C  0101               	movlb	1	; () banked
 16407   00AD6E  51EB               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16408   00AD70  EC58  F05C         	call	_checkRemoveTableEntry
 16409                           
 16410                           ;../universalEvents.c: 208:                 rebuildHashtable();
 16411   00AD74  EC40  F03E         	call	_rebuildHashtable	;wreg free
 16412   00AD78                     l648:
 16413                           
 16414                           ;../universalEvents.c: 213:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16415   00AD78  C1E4  F1D5         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16416   00AD7C  C1E5  F1D6         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16417   00AD80  C1E6  F1D7         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16418   00AD84  C1E7  F1D8         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16419   00AD88  C1E8  F1D9         	movff	APP_addEvent@evNum,addEvent@evNum
 16420   00AD8C  C1E9  F1DA         	movff	APP_addEvent@evVal,addEvent@evVal
 16421   00AD90  C1EA  F1DB         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16422   00AD94  ECB8  F031         	call	_addEvent	;wreg free
 16423   00AD98  0012               	return		;funcret
 16424   00AD9A                     __end_of_APP_addEvent:
 16425                           	callstack 0
 16426                           
 16427 ;; *************** function _pollTimedResponse *****************
 16428 ;; Defined at:
 16429 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16430 ;; Parameters:    Size  Location     Type
 16431 ;;		None
 16432 ;; Auto vars:     Size  Location     Type
 16433 ;;  result          1   42[BANK1 ] enum E12922
 16434 ;; Return value:  Size  Location     Type
 16435 ;;                  1    wreg      void 
 16436 ;; Registers used:
 16437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16438 ;; Tracked objects:
 16439 ;;		On entry : 0/0
 16440 ;;		On exit  : 0/0
 16441 ;;		Unchanged: 0/0
 16442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16444 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16445 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16446 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16447 ;;Total ram usage:        3 bytes
 16448 ;; Hardware stack levels used: 1
 16449 ;; Hardware stack levels required when called: 19
 16450 ;; This function calls:
 16451 ;;		NULL
 16452 ;;		_mnsTRallDiagnosticsCallback
 16453 ;;		_mnsTRrqnpnCallback
 16454 ;;		_mnsTRserviceDiscoveryCallback
 16455 ;;		_nerdCallback
 16456 ;;		_nvTRnvrdCallback
 16457 ;;		_reqevCallback
 16458 ;;		_sodTRCallback
 16459 ;; This function is called by:
 16460 ;;		_poll
 16461 ;; This function uses a non-reentrant model
 16462 ;;
 16463                           
 16464                           	psect	text40
 16465   00A820                     __ptext40:
 16466                           	callstack 0
 16467   00A820                     _pollTimedResponse:
 16468                           	callstack 10
 16469                           
 16470                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16471                           
 16472                           ;incstack = 0
 16473   00A820  0100               	movlb	0	; () banked
 16474   00A822  29C5               	incf	_timedResponseType& (0+255),w,b
 16475   00A824  B4D8               	btfsc	status,2,c
 16476   00A826  0012               	return	
 16477                           
 16478                           ; BSR set to: 0
 16479                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16480   00A828  503F               	movf	_timedResponseCallback^0,w,c
 16481   00A82A  1040               	iorwf	(_timedResponseCallback+1)^0,w,c
 16482   00A82C  A4D8               	btfss	status,2,c
 16483   00A82E  D003               	goto	l23693
 16484   00A830                     u25420:
 16485                           
 16486                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16487   00A830  0100               	movlb	0	; () banked
 16488   00A832  69C5               	setf	_timedResponseType& (0+255),b
 16489                           
 16490                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16491   00A834  0012               	return	
 16492   00A836                     l23693:
 16493                           
 16494                           ; BSR set to: 0
 16495                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16496   00A836  D801               	call	u25438
 16497   00A838  D00E               	goto	u25439
 16498   00A83A                     u25438:
 16499   00A83A  0005               	push	
 16500   00A83C  6EFA               	movwf	pclath,c
 16501   00A83E  503F               	movf	_timedResponseCallback^0,w,c
 16502   00A840  6EFD               	movwf	tosl,c
 16503   00A842  5040               	movf	(_timedResponseCallback+1)^0,w,c
 16504   00A844  6EFE               	movwf	tosh,c
 16505   00A846  6AFF               	clrf	tosu,c
 16506   00A848  50FA               	movf	pclath,w,c
 16507   00A84A  C0C6  F1D1         	movff	_timedResponseServiceIndex,reqevCallback@serviceIndex
 16508   00A84E  C043  F1D2         	movff	_timedResponseStep,reqevCallback@step
 16509   00A852  51C5               	movf	_timedResponseType& (0+255),w,b
 16510   00A854  0012               	return		;indir
 16511   00A856                     u25439:
 16512   00A856  0101               	movlb	1	; () banked
 16513   00A858  6FE2               	movwf	pollTimedResponse@result& (0+255),b
 16514                           
 16515                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16516   00A85A  D00E               	goto	l23709
 16517   00A85C                     l23695:
 16518                           
 16519                           ; BSR set to: 1
 16520                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16521   00A85C  5044               	movf	_timedResponseAllServicesFlag^0,w,c
 16522   00A85E  B4D8               	btfsc	status,2,c
 16523   00A860  D7E7               	goto	u25420
 16524                           
 16525                           ; BSR set to: 1
 16526                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16527   00A862  0100               	movlb	0	; () banked
 16528   00A864  2BC6               	incf	_timedResponseServiceIndex& (0+255),f,b
 16529                           
 16530                           ; BSR set to: 0
 16531                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16532   00A866  0E08               	movlw	8
 16533   00A868  65C6               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16534   00A86A  D001               	goto	l23703
 16535   00A86C  D7E1               	goto	u25420
 16536   00A86E                     l23703:
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16540   00A86E  0E00               	movlw	0
 16541   00A870  6E43               	movwf	_timedResponseStep^0,c
 16542   00A872  0012               	return	
 16543   00A874                     l23705:
 16544                           
 16545                           ; BSR set to: 1
 16546                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16547   00A874  2A43               	incf	_timedResponseStep^0,f,c
 16548                           
 16549                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16550   00A876  0012               	return	
 16551   00A878                     l23709:
 16552                           
 16553                           ; BSR set to: 1
 16554   00A878  51E2               	movf	pollTimedResponse@result& (0+255),w,b
 16555   00A87A  6FE0               	movwf	??_pollTimedResponse& (0+255),b
 16556   00A87C  6BE1               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16557                           
 16558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16559                           ; Switch size 1, requested type "simple"
 16560                           ; Number of cases is 1, Range of values is 0 to 0
 16561                           ; switch strategies available:
 16562                           ; Name         Instructions Cycles
 16563                           ; simple_byte            4     3 (average)
 16564                           ;	Chosen strategy is simple_byte
 16565   00A87E  51E1               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16566   00A880  0A00               	xorlw	0	; case 0
 16567   00A882  A4D8               	btfss	status,2,c
 16568   00A884  0012               	return	
 16569                           
 16570                           ; BSR set to: 1
 16571                           ; Switch size 1, requested type "simple"
 16572                           ; Number of cases is 3, Range of values is 0 to 2
 16573                           ; switch strategies available:
 16574                           ; Name         Instructions Cycles
 16575                           ; simple_byte           10     6 (average)
 16576                           ;	Chosen strategy is simple_byte
 16577   00A886  51E0               	movf	??_pollTimedResponse& (0+255),w,b
 16578   00A888  0A00               	xorlw	0	; case 0
 16579   00A88A  B4D8               	btfsc	status,2,c
 16580   00A88C  D7E7               	goto	l23695
 16581   00A88E  0A01               	xorlw	1	; case 1
 16582   00A890  B4D8               	btfsc	status,2,c
 16583   00A892  0012               	return	
 16584   00A894  0A03               	xorlw	3	; case 2
 16585   00A896  A4D8               	btfss	status,2,c
 16586   00A898  0012               	return	
 16587   00A89A  D7EC               	goto	l23705
 16588   00A89C                     __end_of_pollTimedResponse:
 16589                           	callstack 0
 16590                           
 16591 ;; *************** function _reqevCallback *****************
 16592 ;; Defined at:
 16593 ;;		line 831 in file "../../VLCBlib_PIC/event_teach_large.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;  tableIndex      1    wreg     unsigned char 
 16596 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16597 ;;  step            1   26[BANK1 ] unsigned char 
 16598 ;; Auto vars:     Size  Location     Type
 16599 ;;  tableIndex      1   39[BANK1 ] unsigned char 
 16600 ;;  eventNumber     2   37[BANK1 ] struct Word
 16601 ;;  nodeNumber      2   35[BANK1 ] struct Word
 16602 ;;  ev              2   33[BANK1 ] short 
 16603 ;;  nEv             1   32[BANK1 ] unsigned char 
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  1    wreg      enum E12929
 16606 ;; Registers used:
 16607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16608 ;; Tracked objects:
 16609 ;;		On entry : 0/0
 16610 ;;		On exit  : 0/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16613 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16614 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16615 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16616 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16617 ;;Total ram usage:       15 bytes
 16618 ;; Hardware stack levels used: 1
 16619 ;; Hardware stack levels required when called: 16
 16620 ;; This function calls:
 16621 ;;		_getEN
 16622 ;;		_getEv
 16623 ;;		_getNN
 16624 ;;		_numEv
 16625 ;;		_sendMessage6
 16626 ;; This function is called by:
 16627 ;;		_doReqev
 16628 ;;		_pollTimedResponse
 16629 ;; This function uses a non-reentrant model
 16630 ;;
 16631                           
 16632                           	psect	text41
 16633   009D32                     __ptext41:
 16634                           	callstack 0
 16635   009D32                     _reqevCallback:
 16636                           	callstack 12
 16637                           
 16638                           ;incstack = 0
 16639                           ;reqevCallback@tableIndex stored from wreg
 16640   009D32  0101               	movlb	1	; () banked
 16641   009D34  6FDF               	movwf	reqevCallback@tableIndex& (0+255),b
 16642                           
 16643                           ;../../VLCBlib_PIC/event_teach_large.c: 832:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 834:     uint8_t nEv = numEv(tableIndex);
 16644   009D36  0101               	movlb	1	; () banked
 16645   009D38  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 16646   009D3A  ECEA  F044         	call	_numEv
 16647   009D3E  0101               	movlb	1	; () banked
 16648   009D40  6FD8               	movwf	reqevCallback@nEv& (0+255),b
 16649                           
 16650                           ; BSR set to: 1
 16651                           ;../../VLCBlib_PIC/event_teach_large.c: 835:     int16_t ev;;../../VLCBlib_PIC/event_tea
      +                          ch_large.c: 837:     if (step+1 > nEv) {
 16652   009D42  51D2               	movf	reqevCallback@step& (0+255),w,b
 16653   009D44  6FD3               	movwf	??_reqevCallback& (0+255),b
 16654   009D46  6BD4               	clrf	(??_reqevCallback+1)& (0+255),b
 16655   009D48  0E01               	movlw	1
 16656   009D4A  27D3               	addwf	??_reqevCallback& (0+255),f,b
 16657   009D4C  0E00               	movlw	0
 16658   009D4E  23D4               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 16659   009D50  51D8               	movf	reqevCallback@nEv& (0+255),w,b
 16660   009D52  6FD5               	movwf	(??_reqevCallback+2)& (0+255),b
 16661   009D54  6BD6               	clrf	(??_reqevCallback+3)& (0+255),b
 16662   009D56  51D3               	movf	??_reqevCallback& (0+255),w,b
 16663   009D58  5DD5               	subwf	(??_reqevCallback+2)& (0+255),w,b
 16664   009D5A  51D6               	movf	(??_reqevCallback+3)& (0+255),w,b
 16665   009D5C  0A80               	xorlw	128
 16666   009D5E  6FD7               	movwf	(??_reqevCallback+4)& (0+255),b
 16667   009D60  51D4               	movf	(??_reqevCallback+1)& (0+255),w,b
 16668   009D62  0A80               	xorlw	128
 16669   009D64  59D7               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 16670   009D66  B0D8               	btfsc	status,0,c
 16671   009D68  D002               	goto	l22341
 16672                           
 16673                           ; BSR set to: 1
 16674                           ;../../VLCBlib_PIC/event_teach_large.c: 838:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 16675   009D6A  0E00               	movlw	0
 16676   009D6C  0012               	return	
 16677   009D6E                     l22341:
 16678                           
 16679                           ; BSR set to: 1
 16680                           ;../../VLCBlib_PIC/event_teach_large.c: 841:     nodeNumber.word = getNN(tableIndex);
 16681   009D6E  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 16682   009D70  ECF1  F048         	call	_getNN
 16683   009D74  C097  F1DB         	movff	?_getNN,reqevCallback@nodeNumber
 16684   009D78  C098  F1DC         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 16685                           
 16686                           ;../../VLCBlib_PIC/event_teach_large.c: 842:     eventNumber.word = getEN(tableIndex);
 16687   009D7C  0101               	movlb	1	; () banked
 16688   009D7E  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 16689   009D80  ECC9  F054         	call	_getEN
 16690   009D84  C097  F1DD         	movff	?_getEN,reqevCallback@eventNumber
 16691   009D88  C098  F1DE         	movff	?_getEN+1,reqevCallback@eventNumber+1
 16692                           
 16693                           ;../../VLCBlib_PIC/event_teach_large.c: 843:     ev = getEv(tableIndex, step);
 16694   009D8C  C1D2  F09D         	movff	reqevCallback@step,getEv@evNum
 16695   009D90  0101               	movlb	1	; () banked
 16696   009D92  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 16697   009D94  ECB7  F03B         	call	_getEv
 16698   009D98  C09D  F1D9         	movff	?_getEv,reqevCallback@ev
 16699   009D9C  C09E  F1DA         	movff	?_getEv+1,reqevCallback@ev+1
 16700                           
 16701                           ;../../VLCBlib_PIC/event_teach_large.c: 844:     if (ev >= 0) {
 16702   009DA0  0101               	movlb	1	; () banked
 16703   009DA2  BFDA               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 16704   009DA4  D00F               	goto	l22347
 16705                           
 16706                           ; BSR set to: 1
 16707                           ;../../VLCBlib_PIC/event_teach_large.c: 845:         sendMessage6(OPC_EVANS, nodeNumber.
      +                          bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint
      +                          8_t)ev);
 16708   009DA6  C1DC  F1C0         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 16709   009DAA  C1DB  F1C1         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 16710   009DAE  C1DE  F1C2         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 16711   009DB2  C1DD  F1C3         	movff	reqevCallback@eventNumber,sendMessage6@data4
 16712   009DB6  29D2               	incf	reqevCallback@step& (0+255),w,b
 16713   009DB8  6FC4               	movwf	sendMessage6@data5& (0+255),b
 16714   009DBA  C1D9  F1C5         	movff	reqevCallback@ev,sendMessage6@data6
 16715   009DBE  0ED3               	movlw	211
 16716   009DC0  ECD5  F05E         	call	_sendMessage6
 16717   009DC4                     l22347:
 16718                           
 16719                           ;../../VLCBlib_PIC/event_teach_large.c: 847:     return TIMED_RESPONSE_RESULT_NEXT;
 16720   009DC4  0E02               	movlw	2
 16721   009DC6  0012               	return		;funcret
 16722   009DC8                     __end_of_reqevCallback:
 16723                           	callstack 0
 16724                           
 16725 ;; *************** function _nerdCallback *****************
 16726 ;; Defined at:
 16727 ;;		line 603 in file "../../VLCBlib_PIC/event_teach_large.c"
 16728 ;; Parameters:    Size  Location     Type
 16729 ;;  type            1    wreg     unsigned char 
 16730 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16731 ;;  step            1   26[BANK1 ] unsigned char 
 16732 ;; Auto vars:     Size  Location     Type
 16733 ;;  type            1    0[COMRAM] unsigned char 
 16734 ;;  eventNumber     2   29[BANK1 ] struct Word
 16735 ;;  nodeNumber      2   27[BANK1 ] struct Word
 16736 ;; Return value:  Size  Location     Type
 16737 ;;                  1    wreg      enum E12929
 16738 ;; Registers used:
 16739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16740 ;; Tracked objects:
 16741 ;;		On entry : 0/0
 16742 ;;		On exit  : 0/0
 16743 ;;		Unchanged: 0/0
 16744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16745 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16746 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16748 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16749 ;;Total ram usage:        6 bytes
 16750 ;; Hardware stack levels used: 1
 16751 ;; Hardware stack levels required when called: 16
 16752 ;; This function calls:
 16753 ;;		_getEN
 16754 ;;		_getNN
 16755 ;;		_sendMessage7
 16756 ;;		_tableIndexToEvtIdx
 16757 ;;		_validStart
 16758 ;; This function is called by:
 16759 ;;		_doNerd
 16760 ;;		_pollTimedResponse
 16761 ;; This function uses a non-reentrant model
 16762 ;;
 16763                           
 16764                           	psect	text42
 16765   00AED0                     __ptext42:
 16766                           	callstack 0
 16767   00AED0                     _nerdCallback:
 16768                           	callstack 12
 16769                           
 16770                           ;../../VLCBlib_PIC/event_teach_large.c: 604:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 606:     if (step >= 255) {
 16771                           
 16772                           ;incstack = 0
 16773   00AED0  0101               	movlb	1	; () banked
 16774   00AED2  29D2               	incf	nerdCallback@step& (0+255),w,b
 16775   00AED4  A4D8               	btfss	status,2,c
 16776   00AED6  D002               	goto	l22323
 16777                           
 16778                           ; BSR set to: 1
 16779                           ;../../VLCBlib_PIC/event_teach_large.c: 607:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 16780   00AED8  0E00               	movlw	0
 16781   00AEDA  0012               	return	
 16782   00AEDC                     l22323:
 16783                           
 16784                           ; BSR set to: 1
 16785                           ;../../VLCBlib_PIC/event_teach_large.c: 610:     if (validStart(step)) {
 16786   00AEDC  51D2               	movf	nerdCallback@step& (0+255),w,b
 16787   00AEDE  EC2B  F05B         	call	_validStart
 16788   00AEE2  0900               	iorlw	0
 16789   00AEE4  B4D8               	btfsc	status,2,c
 16790   00AEE6  D025               	goto	l22329
 16791                           
 16792                           ;../../VLCBlib_PIC/event_teach_large.c: 611:         nodeNumber.word = getNN(step);
 16793   00AEE8  0101               	movlb	1	; () banked
 16794   00AEEA  51D2               	movf	nerdCallback@step& (0+255),w,b
 16795   00AEEC  ECF1  F048         	call	_getNN
 16796   00AEF0  C097  F1D3         	movff	?_getNN,nerdCallback@nodeNumber
 16797   00AEF4  C098  F1D4         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 16798                           
 16799                           ;../../VLCBlib_PIC/event_teach_large.c: 612:         eventNumber.word = getEN(step);
 16800   00AEF8  0101               	movlb	1	; () banked
 16801   00AEFA  51D2               	movf	nerdCallback@step& (0+255),w,b
 16802   00AEFC  ECC9  F054         	call	_getEN
 16803   00AF00  C097  F1D5         	movff	?_getEN,nerdCallback@eventNumber
 16804   00AF04  C098  F1D6         	movff	?_getEN+1,nerdCallback@eventNumber+1
 16805                           
 16806                           ;../../VLCBlib_PIC/event_teach_large.c: 613:         sendMessage7(OPC_ENRSP, nn.bytes.hi
      +                          , nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumb
      +                          er.bytes.lo, tableIndexToEvtIdx(step));
 16807   00AF08  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 16808   00AF0C  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 16809   00AF10  C1D4  F1C2         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 16810   00AF14  C1D3  F1C3         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 16811   00AF18  C1D6  F1C4         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 16812   00AF1C  C1D5  F1C5         	movff	nerdCallback@eventNumber,sendMessage7@data6
 16813   00AF20  0101               	movlb	1	; () banked
 16814   00AF22  51D2               	movf	nerdCallback@step& (0+255),w,b
 16815   00AF24  ECC9  F061         	call	_tableIndexToEvtIdx
 16816   00AF28  0101               	movlb	1	; () banked
 16817   00AF2A  6FC6               	movwf	sendMessage7@data7& (0+255),b
 16818   00AF2C  0EF2               	movlw	242
 16819   00AF2E  EC1D  F05F         	call	_sendMessage7
 16820   00AF32                     l22329:
 16821                           
 16822                           ;../../VLCBlib_PIC/event_teach_large.c: 615:     return TIMED_RESPONSE_RESULT_NEXT;
 16823   00AF32  0E02               	movlw	2
 16824   00AF34  0012               	return		;funcret
 16825   00AF36                     __end_of_nerdCallback:
 16826                           	callstack 0
 16827                           
 16828 ;; *************** function _nvTRnvrdCallback *****************
 16829 ;; Defined at:
 16830 ;;		line 370 in file "../../VLCBlib_PIC/nv.c"
 16831 ;; Parameters:    Size  Location     Type
 16832 ;;  type            1    wreg     unsigned char 
 16833 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16834 ;;  step            1   26[BANK1 ] unsigned char 
 16835 ;; Auto vars:     Size  Location     Type
 16836 ;;  type            1    0[COMRAM] unsigned char 
 16837 ;;  valueOrError    2   27[BANK1 ] short 
 16838 ;; Return value:  Size  Location     Type
 16839 ;;                  1    wreg      enum E12946
 16840 ;; Registers used:
 16841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16842 ;; Tracked objects:
 16843 ;;		On entry : 0/0
 16844 ;;		On exit  : 0/0
 16845 ;;		Unchanged: 0/0
 16846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16847 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16848 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16850 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16851 ;;Total ram usage:        4 bytes
 16852 ;; Hardware stack levels used: 1
 16853 ;; Hardware stack levels required when called: 16
 16854 ;; This function calls:
 16855 ;;		_getNV
 16856 ;;		_sendMessage4
 16857 ;; This function is called by:
 16858 ;;		_nvProcessMessage
 16859 ;;		_pollTimedResponse
 16860 ;; This function uses a non-reentrant model
 16861 ;;
 16862                           
 16863                           	psect	text43
 16864   00B984                     __ptext43:
 16865                           	callstack 0
 16866   00B984                     _nvTRnvrdCallback:
 16867                           	callstack 12
 16868                           
 16869                           ;../../VLCBlib_PIC/nv.c: 371:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 372:    
      +                           if (step > (15+7*16)) {
 16870                           
 16871                           ;incstack = 0
 16872   00B984  0E7F               	movlw	127
 16873   00B986  0101               	movlb	1	; () banked
 16874   00B988  65D2               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 16875   00B98A  D002               	goto	l21735
 16876   00B98C                     u22910:
 16877                           
 16878                           ; BSR set to: 1
 16879                           ;../../VLCBlib_PIC/nv.c: 373:         return TIMED_RESPONSE_RESULT_FINISHED;
 16880   00B98C  0E00               	movlw	0
 16881   00B98E  0012               	return	
 16882   00B990                     l21735:
 16883                           
 16884                           ; BSR set to: 1
 16885                           ;../../VLCBlib_PIC/nv.c: 375:     valueOrError = getNV(step+1);
 16886   00B990  29D2               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16887   00B992  EC21  F05D         	call	_getNV
 16888   00B996  C08D  F1D3         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 16889   00B99A  C08E  F1D4         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 16890                           
 16891                           ;../../VLCBlib_PIC/nv.c: 376:     if (valueOrError < 0) {
 16892   00B99E  0101               	movlb	1	; () banked
 16893   00B9A0  BFD4               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 16894   00B9A2  D7F4               	goto	u22910
 16895                           
 16896                           ; BSR set to: 1
 16897                           ;../../VLCBlib_PIC/nv.c: 379:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 16898   00B9A4  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 16899   00B9A8  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 16900   00B9AC  29D2               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16901   00B9AE  0100               	movlb	0	; () banked
 16902   00B9B0  6FA7               	movwf	sendMessage4@data3& (0+255),b
 16903   00B9B2  C1D3  F0A8         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 16904   00B9B6  0E97               	movlw	151
 16905   00B9B8  EC64  F05F         	call	_sendMessage4
 16906                           
 16907                           ;../../VLCBlib_PIC/nv.c: 381:     nvDiagnostics[0x00].asUint++;
 16908   00B9BC  0101               	movlb	1	; () banked
 16909   00B9BE  4BAC               	infsnz	_nvDiagnostics& (0+255),f,b
 16910   00B9C0  2BAD               	incf	(_nvDiagnostics+1)& (0+255),f,b
 16911                           
 16912                           ; BSR set to: 1
 16913                           ;../../VLCBlib_PIC/nv.c: 383:     return TIMED_RESPONSE_RESULT_NEXT;
 16914   00B9C2  0E02               	movlw	2
 16915                           
 16916                           ; BSR set to: 1
 16917   00B9C4  0012               	return		;funcret
 16918   00B9C6                     __end_of_nvTRnvrdCallback:
 16919                           	callstack 0
 16920                           
 16921 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 16922 ;; Defined at:
 16923 ;;		line 876 in file "../../VLCBlib_PIC/mns.c"
 16924 ;; Parameters:    Size  Location     Type
 16925 ;;  type            1    wreg     unsigned char 
 16926 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16927 ;;  step            1   26[BANK1 ] unsigned char 
 16928 ;; Auto vars:     Size  Location     Type
 16929 ;;  type            1    0[COMRAM] unsigned char 
 16930 ;; Return value:  Size  Location     Type
 16931 ;;                  1    wreg      enum E12929
 16932 ;; Registers used:
 16933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16934 ;; Tracked objects:
 16935 ;;		On entry : 0/0
 16936 ;;		On exit  : 0/0
 16937 ;;		Unchanged: 0/0
 16938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16939 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16941 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16942 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16943 ;;Total ram usage:        6 bytes
 16944 ;; Hardware stack levels used: 1
 16945 ;; Hardware stack levels required when called: 16
 16946 ;; This function calls:
 16947 ;;		_sendMessage5
 16948 ;; This function is called by:
 16949 ;;		_mnsProcessMessage
 16950 ;;		_pollTimedResponse
 16951 ;; This function uses a non-reentrant model
 16952 ;;
 16953                           
 16954                           	psect	text44
 16955   00A262                     __ptext44:
 16956                           	callstack 0
 16957   00A262                     _mnsTRserviceDiscoveryCallback:
 16958                           	callstack 12
 16959                           
 16960                           ;../../VLCBlib_PIC/mns.c: 877:     if (step >= 9) {
 16961                           
 16962                           ; BSR set to: 1
 16963                           ;incstack = 0
 16964   00A262  0E08               	movlw	8
 16965   00A264  0101               	movlb	1	; () banked
 16966   00A266  65D2               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 16967   00A268  D002               	goto	l21655
 16968                           
 16969                           ; BSR set to: 1
 16970                           ;../../VLCBlib_PIC/mns.c: 878:         return TIMED_RESPONSE_RESULT_FINISHED;
 16971   00A26A  0E00               	movlw	0
 16972   00A26C  0012               	return	
 16973   00A26E                     l21655:
 16974                           
 16975                           ; BSR set to: 1
 16976                           ;../../VLCBlib_PIC/mns.c: 881:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 16977   00A26E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16978   00A272  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16979   00A276  29D2               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16980   00A278  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16981   00A27A  51D2               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16982   00A27C  0D02               	mullw	2
 16983   00A27E  0E75               	movlw	low _services
 16984   00A280  24F3               	addwf	243,w,c
 16985   00A282  6EF6               	movwf	tblptrl,c
 16986   00A284  0EEE               	movlw	high _services
 16987   00A286  20F4               	addwfc	244,w,c
 16988   00A288  6EF7               	movwf	tblptrh,c
 16989   00A28A                     	if	1	;There are 3 active tblptr bytes
 16990   00A28A  6AF8               	clrf	tblptru,c
 16991   00A28C  0E00               	movlw	low (__mediumconst shr (0+16))
 16992   00A28E  22F8               	addwfc	tblptru,f,c
 16993   00A290                     	endif
 16994   00A290  0009               	tblrd		*+
 16995   00A292  CFF5 F1D3          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 16996   00A296  0009               	tblrd		*+
 16997   00A298  CFF5 F1D4          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 16998   00A29C  C1D3  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 16999   00A2A0  C1D4  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 17000   00A2A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17001   00A2A4  6AF8               	clrf	tblptru,c
 17002   00A2A6                     	endif
 17003   00A2A6                     	if	0	;tblptru may be non-zero
 17004   00A2A6                     	endif
 17005   00A2A6  0008               	tblrd		*
 17006   00A2A8  CFF5 F1C3          	movff	tablat,sendMessage5@data4
 17007   00A2AC  51D2               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17008   00A2AE  0D02               	mullw	2
 17009   00A2B0  0E75               	movlw	low _services
 17010   00A2B2  24F3               	addwf	243,w,c
 17011   00A2B4  6EF6               	movwf	tblptrl,c
 17012   00A2B6  0EEE               	movlw	high _services
 17013   00A2B8  20F4               	addwfc	244,w,c
 17014   00A2BA  6EF7               	movwf	tblptrh,c
 17015   00A2BC                     	if	1	;There are 3 active tblptr bytes
 17016   00A2BC  6AF8               	clrf	tblptru,c
 17017   00A2BE  0E00               	movlw	low (__mediumconst shr (0+16))
 17018   00A2C0  22F8               	addwfc	tblptru,f,c
 17019   00A2C2                     	endif
 17020   00A2C2  0009               	tblrd		*+
 17021   00A2C4  CFF5 F1D5          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 17022   00A2C8  0009               	tblrd		*+
 17023   00A2CA  CFF5 F1D6          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 17024   00A2CE  0E01               	movlw	1
 17025   00A2D0  27D5               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 17026   00A2D2  0E00               	movlw	0
 17027   00A2D4  23D6               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 17028   00A2D6  C1D5  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 17029   00A2DA  C1D6  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 17030   00A2DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17031   00A2DE  6AF8               	clrf	tblptru,c
 17032   00A2E0                     	endif
 17033   00A2E0                     	if	0	;tblptru may be non-zero
 17034   00A2E0                     	endif
 17035   00A2E0  0008               	tblrd		*
 17036   00A2E2  CFF5 F1C4          	movff	tablat,sendMessage5@data5
 17037   00A2E6  0EAC               	movlw	172
 17038   00A2E8  EC35  F05F         	call	_sendMessage5
 17039                           
 17040                           ;../../VLCBlib_PIC/mns.c: 883:     return TIMED_RESPONSE_RESULT_NEXT;
 17041   00A2EC  0E02               	movlw	2
 17042   00A2EE  0012               	return		;funcret
 17043   00A2F0                     __end_of_mnsTRserviceDiscoveryCallback:
 17044                           	callstack 0
 17045                           
 17046 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 17047 ;; Defined at:
 17048 ;;		line 895 in file "../../VLCBlib_PIC/mns.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  type            1    wreg     unsigned char 
 17051 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 17052 ;;  step            1   26[BANK1 ] unsigned char 
 17053 ;; Auto vars:     Size  Location     Type
 17054 ;;  type            1    0[COMRAM] unsigned char 
 17055 ;;  d               2   31[BANK1 ] PTR struct DiagnosticVal
 17056 ;;		 -> producerDiagnostics(2), teachDiagnostics(2), canDiagnostics(32), nvDiagnostics(4), 
 17057 ;;		 -> mnsDiagnostics(12), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 17058 ;; Return value:  Size  Location     Type
 17059 ;;                  1    wreg      enum E12929
 17060 ;; Registers used:
 17061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17062 ;; Tracked objects:
 17063 ;;		On entry : 0/0
 17064 ;;		On exit  : 0/0
 17065 ;;		Unchanged: 0/0
 17066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17067 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17068 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17069 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17070 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17071 ;;Total ram usage:        8 bytes
 17072 ;; Hardware stack levels used: 1
 17073 ;; Hardware stack levels required when called: 16
 17074 ;; This function calls:
 17075 ;;		NULL
 17076 ;;		_ackGetDiagnostic
 17077 ;;		_canGetDiagnostic
 17078 ;;		_consumer2QGetDiagnostic
 17079 ;;		_mnsGetDiagnostic
 17080 ;;		_nvGetDiagnostic
 17081 ;;		_producerGetDiagnostic
 17082 ;;		_sendMessage6
 17083 ;;		_teachGetDiagnostic
 17084 ;; This function is called by:
 17085 ;;		_mnsProcessMessage
 17086 ;;		_pollTimedResponse
 17087 ;; This function uses a non-reentrant model
 17088 ;;
 17089                           
 17090                           	psect	text45
 17091   0083AC                     __ptext45:
 17092                           	callstack 0
 17093   0083AC                     _mnsTRallDiagnosticsCallback:
 17094                           	callstack 12
 17095                           
 17096                           ;../../VLCBlib_PIC/mns.c: 896:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 17097                           
 17098                           ;incstack = 0
 17099   0083AC  0101               	movlb	1	; () banked
 17100   0083AE  51D1               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17101   0083B0  0D02               	mullw	2
 17102   0083B2  0E75               	movlw	low _services
 17103   0083B4  24F3               	addwf	243,w,c
 17104   0083B6  6EF6               	movwf	tblptrl,c
 17105   0083B8  0EEE               	movlw	high _services
 17106   0083BA  20F4               	addwfc	244,w,c
 17107   0083BC  6EF7               	movwf	tblptrh,c
 17108   0083BE                     	if	1	;There are 3 active tblptr bytes
 17109   0083BE  6AF8               	clrf	tblptru,c
 17110   0083C0  0E00               	movlw	low (__mediumconst shr (0+16))
 17111   0083C2  22F8               	addwfc	tblptru,f,c
 17112   0083C4                     	endif
 17113   0083C4  0009               	tblrd		*+
 17114   0083C6  CFF5 F1D3          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17115   0083CA  0009               	tblrd		*+
 17116   0083CC  CFF5 F1D4          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17117   0083D0  0E10               	movlw	16
 17118   0083D2  27D3               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17119   0083D4  0E00               	movlw	0
 17120   0083D6  23D4               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17121   0083D8  C1D3  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17122   0083DC  C1D4  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17123   0083E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17124   0083E0  6AF8               	clrf	tblptru,c
 17125   0083E2                     	endif
 17126   0083E2                     	if	0	;tblptru may be non-zero
 17127   0083E2                     	endif
 17128   0083E2  0009               	tblrd		*+
 17129   0083E4  50F5               	movf	tablat,w,c
 17130   0083E6  0009               	tblrd		*+
 17131   0083E8  10F5               	iorwf	tablat,w,c
 17132   0083EA  A4D8               	btfss	status,2,c
 17133   0083EC  D002               	goto	l21667
 17134   0083EE                     u22850:
 17135                           
 17136                           ; BSR set to: 1
 17137                           ;../../VLCBlib_PIC/mns.c: 897:         return TIMED_RESPONSE_RESULT_FINISHED;
 17138   0083EE  0E00               	movlw	0
 17139   0083F0  0012               	return	
 17140   0083F2                     l21667:
 17141                           
 17142                           ; BSR set to: 1
 17143                           ;../../VLCBlib_PIC/mns.c: 899:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step+1);
 17144   0083F2  51D1               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17145   0083F4  0D02               	mullw	2
 17146   0083F6  0E75               	movlw	low _services
 17147   0083F8  24F3               	addwf	243,w,c
 17148   0083FA  6EF6               	movwf	tblptrl,c
 17149   0083FC  0EEE               	movlw	high _services
 17150   0083FE  20F4               	addwfc	244,w,c
 17151   008400  6EF7               	movwf	tblptrh,c
 17152   008402                     	if	1	;There are 3 active tblptr bytes
 17153   008402  6AF8               	clrf	tblptru,c
 17154   008404  0E00               	movlw	low (__mediumconst shr (0+16))
 17155   008406  22F8               	addwfc	tblptru,f,c
 17156   008408                     	endif
 17157   008408  0009               	tblrd		*+
 17158   00840A  CFF5 F1D3          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17159   00840E  0009               	tblrd		*+
 17160   008410  CFF5 F1D4          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17161   008414  0E10               	movlw	16
 17162   008416  27D3               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17163   008418  0E00               	movlw	0
 17164   00841A  23D4               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17165   00841C  C1D3  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17166   008420  C1D4  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17167   008424                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17168   008424  6AF8               	clrf	tblptru,c
 17169   008426                     	endif
 17170   008426                     	if	0	;tblptru may be non-zero
 17171   008426                     	endif
 17172   008426  0009               	tblrd		*+
 17173   008428  CFF5 F1D5          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 17174   00842C  0009               	tblrd		*+
 17175   00842E  CFF5 F1D6          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 17176   008432  D801               	call	u22868
 17177   008434  D00A               	goto	u22869
 17178   008436                     u22868:
 17179   008436  0005               	push	
 17180   008438  6EFA               	movwf	pclath,c
 17181   00843A  51D5               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 17182   00843C  6EFD               	movwf	tosl,c
 17183   00843E  51D6               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 17184   008440  6EFE               	movwf	tosh,c
 17185   008442  6AFF               	clrf	tosu,c
 17186   008444  50FA               	movf	pclath,w,c
 17187   008446  29D2               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17188   008448  0012               	return		;indir
 17189   00844A                     u22869:
 17190   00844A  C08D  F1D7         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 17191   00844E  C08E  F1D8         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 17192                           
 17193                           ;../../VLCBlib_PIC/mns.c: 900:     if (d == ((void*)0)) {
 17194   008452  0101               	movlb	1	; () banked
 17195   008454  51D7               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17196   008456  11D8               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17197   008458  B4D8               	btfsc	status,2,c
 17198   00845A  D7C9               	goto	u22850
 17199                           
 17200                           ; BSR set to: 1
 17201                           ;../../VLCBlib_PIC/mns.c: 905:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step+1, d->asBytes.hi, d->asBytes.lo);
 17202   00845C  C0C0  F1C0         	movff	_nn+1,sendMessage6@data1
 17203   008460  C0BF  F1C1         	movff	_nn,sendMessage6@data2
 17204   008464  29D1               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17205   008466  6FC2               	movwf	sendMessage6@data3& (0+255),b
 17206   008468  29D2               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17207   00846A  6FC3               	movwf	sendMessage6@data4& (0+255),b
 17208   00846C  EE20 F001          	lfsr	2,1
 17209   008470  51D7               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17210   008472  26D9               	addwf	fsr2l,f,c
 17211   008474  51D8               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17212   008476  22DA               	addwfc	fsr2h,f,c
 17213   008478  50DF               	movf	indf2,w,c
 17214   00847A  6FC4               	movwf	sendMessage6@data5& (0+255),b
 17215   00847C  C1D7  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 17216   008480  C1D8  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 17217   008484  50DF               	movf	indf2,w,c
 17218   008486  6FC5               	movwf	sendMessage6@data6& (0+255),b
 17219   008488  0EC7               	movlw	199
 17220   00848A  ECD5  F05E         	call	_sendMessage6
 17221                           
 17222                           ;../../VLCBlib_PIC/mns.c: 906:     return TIMED_RESPONSE_RESULT_NEXT;
 17223   00848E  0E02               	movlw	2
 17224   008490  0012               	return		;funcret
 17225   008492                     __end_of_mnsTRallDiagnosticsCallback:
 17226                           	callstack 0
 17227                           
 17228 ;; *************** function _mnsTRrqnpnCallback *****************
 17229 ;; Defined at:
 17230 ;;		line 918 in file "../../VLCBlib_PIC/mns.c"
 17231 ;; Parameters:    Size  Location     Type
 17232 ;;  type            1    wreg     unsigned char 
 17233 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 17234 ;;  step            1   26[BANK1 ] unsigned char 
 17235 ;; Auto vars:     Size  Location     Type
 17236 ;;  type            1    0[COMRAM] unsigned char 
 17237 ;; Return value:  Size  Location     Type
 17238 ;;                  1    wreg      enum E12929
 17239 ;; Registers used:
 17240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17241 ;; Tracked objects:
 17242 ;;		On entry : 0/0
 17243 ;;		On exit  : 0/0
 17244 ;;		Unchanged: 0/0
 17245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17246 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17249 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17250 ;;Total ram usage:        2 bytes
 17251 ;; Hardware stack levels used: 1
 17252 ;; Hardware stack levels required when called: 16
 17253 ;; This function calls:
 17254 ;;		_getParameter
 17255 ;;		_sendMessage4
 17256 ;; This function is called by:
 17257 ;;		_mnsProcessMessage
 17258 ;;		_pollTimedResponse
 17259 ;; This function uses a non-reentrant model
 17260 ;;
 17261                           
 17262                           	psect	text46
 17263   00BD7A                     __ptext46:
 17264                           	callstack 0
 17265   00BD7A                     _mnsTRrqnpnCallback:
 17266                           	callstack 12
 17267                           
 17268                           ;../../VLCBlib_PIC/mns.c: 919:     if (step >= 20) {
 17269                           
 17270                           ;incstack = 0
 17271   00BD7A  0E13               	movlw	19
 17272   00BD7C  0101               	movlb	1	; () banked
 17273   00BD7E  65D2               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 17274   00BD80  D002               	goto	l21687
 17275                           
 17276                           ; BSR set to: 1
 17277                           ;../../VLCBlib_PIC/mns.c: 920:         return TIMED_RESPONSE_RESULT_FINISHED;
 17278   00BD82  0E00               	movlw	0
 17279   00BD84  0012               	return	
 17280   00BD86                     l21687:
 17281                           
 17282                           ; BSR set to: 1
 17283                           ;../../VLCBlib_PIC/mns.c: 922:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17284   00BD86  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 17285   00BD8A  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 17286   00BD8E  29D2               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17287   00BD90  0100               	movlb	0	; () banked
 17288   00BD92  6FA7               	movwf	sendMessage4@data3& (0+255),b
 17289   00BD94  0101               	movlb	1	; () banked
 17290   00BD96  29D2               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17291   00BD98  EC2E  F043         	call	_getParameter
 17292   00BD9C  0100               	movlb	0	; () banked
 17293   00BD9E  6FA8               	movwf	sendMessage4@data4& (0+255),b
 17294   00BDA0  0E9B               	movlw	155
 17295   00BDA2  EC64  F05F         	call	_sendMessage4
 17296                           
 17297                           ;../../VLCBlib_PIC/mns.c: 923:     return TIMED_RESPONSE_RESULT_NEXT;
 17298   00BDA6  0E02               	movlw	2
 17299   00BDA8  0012               	return		;funcret
 17300   00BDAA                     __end_of_mnsTRrqnpnCallback:
 17301                           	callstack 0
 17302                           
 17303 ;; *************** function _sodTRCallback *****************
 17304 ;; Defined at:
 17305 ;;		line 403 in file "../universalEvents.c"
 17306 ;; Parameters:    Size  Location     Type
 17307 ;;  type            1    wreg     unsigned char 
 17308 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 17309 ;;  step            1   26[BANK1 ] unsigned char 
 17310 ;; Auto vars:     Size  Location     Type
 17311 ;;  type            1    0[COMRAM] unsigned char 
 17312 ;;  io              1   37[BANK1 ] unsigned char 
 17313 ;;  flags           1   36[BANK1 ] unsigned char 
 17314 ;;  event_invert    1   35[BANK1 ] enum E12761
 17315 ;;  value           1   34[BANK1 ] enum E12781
 17316 ;;  disable_off     1   33[BANK1 ] enum E12761
 17317 ;;  happeningInd    1   32[BANK1 ] unsigned char 
 17318 ;;  send_off_ok     1   29[BANK1 ] enum E12761
 17319 ;;  send_on_ok      1   28[BANK1 ] enum E12761
 17320 ;;  disable_SOD_    1   27[BANK1 ] enum E12761
 17321 ;; Return value:  Size  Location     Type
 17322 ;;                  1    wreg      enum E13013
 17323 ;; Registers used:
 17324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17325 ;; Tracked objects:
 17326 ;;		On entry : 0/0
 17327 ;;		On exit  : 0/0
 17328 ;;		Unchanged: 0/0
 17329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17330 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17331 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17333 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17334 ;;Total ram usage:       13 bytes
 17335 ;; Hardware stack levels used: 1
 17336 ;; Hardware stack levels required when called: 18
 17337 ;; This function calls:
 17338 ;;		_APP_GetEventState
 17339 ;;		___awdiv
 17340 ;;		_getNV
 17341 ;;		_sendInvertedProducedEvent
 17342 ;; This function is called by:
 17343 ;;		_doSOD
 17344 ;;		_pollTimedResponse
 17345 ;; This function uses a non-reentrant model
 17346 ;;
 17347                           
 17348                           	psect	text47
 17349   0081C2                     __ptext47:
 17350                           	callstack 0
 17351   0081C2                     _sodTRCallback:
 17352                           	callstack 10
 17353                           
 17354                           ;../universalEvents.c: 404:     uint8_t io;;../universalEvents.c: 405:     uint8_t happe
      +                          ningIndex;;../universalEvents.c: 406:     Boolean disable_off;;../universalEvents.c: 407
      +                          :  Boolean send_on_ok;;../universalEvents.c: 408:  Boolean send_off_ok;;../universalEven
      +                          ts.c: 409:  Boolean event_inverted;;../universalEvents.c: 410:     Boolean disable_SOD_r
      +                          esponse;;../universalEvents.c: 411:     uint8_t flags;;../universalEvents.c: 412:     Ev
      +                          entState value;;../universalEvents.c: 415:     io = step/4;
 17355                           
 17356                           ;incstack = 0
 17357   0081C2  C1D2  F097         	movff	sodTRCallback@step,___awdiv@dividend
 17358   0081C6  0100               	movlb	0	; () banked
 17359   0081C8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17360   0081CA  0E00               	movlw	0
 17361   0081CC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17362   0081CE  0E04               	movlw	4
 17363   0081D0  6F99               	movwf	___awdiv@divisor& (0+255),b
 17364   0081D2  EC4A  F052         	call	___awdiv	;wreg free
 17365   0081D6  0100               	movlb	0	; () banked
 17366   0081D8  5197               	movf	?___awdiv& (0+255),w,b
 17367   0081DA  0101               	movlb	1	; () banked
 17368   0081DC  6FDD               	movwf	sodTRCallback@io& (0+255),b
 17369                           
 17370                           ; BSR set to: 1
 17371                           ;../universalEvents.c: 416:     if (io >= 16) {
 17372   0081DE  0E0F               	movlw	15
 17373   0081E0  65DD               	cpfsgt	sodTRCallback@io& (0+255),b
 17374   0081E2  D002               	goto	l21215
 17375                           
 17376                           ; BSR set to: 1
 17377                           ;../universalEvents.c: 417:         return TIMED_RESPONSE_RESULT_FINISHED;
 17378   0081E4  0E00               	movlw	0
 17379   0081E6  0012               	return	
 17380   0081E8                     l21215:
 17381                           
 17382                           ; BSR set to: 1
 17383                           ;../universalEvents.c: 419:     happeningIndex = step%4;
 17384   0081E8  51D2               	movf	sodTRCallback@step& (0+255),w,b
 17385   0081EA  0B03               	andlw	3
 17386   0081EC  6FD8               	movwf	sodTRCallback@happeningIndex& (0+255),b
 17387                           
 17388                           ; BSR set to: 1
 17389                           ;../universalEvents.c: 420:     flags = (uint8_t)getNV((16 + 7*(io) + 1));;
 17390   0081EE  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17391   0081F0  0D07               	mullw	7
 17392   0081F2  50F3               	movf	243,w,c
 17393   0081F4  0F11               	addlw	17
 17394   0081F6  EC21  F05D         	call	_getNV
 17395   0081FA  0100               	movlb	0	; () banked
 17396   0081FC  518D               	movf	?_getNV& (0+255),w,b
 17397   0081FE  0101               	movlb	1	; () banked
 17398   008200  6FDC               	movwf	sodTRCallback@flags& (0+255),b
 17399                           
 17400                           ; BSR set to: 1
 17401                           ;../universalEvents.c: 421:     disable_SOD_response = flags & 0x20;
 17402   008202  51DC               	movf	sodTRCallback@flags& (0+255),w,b
 17403   008204  0B20               	andlw	32
 17404   008206  6FD3               	movwf	sodTRCallback@disable_SOD_response& (0+255),b
 17405                           
 17406                           ; BSR set to: 1
 17407                           ;../universalEvents.c: 423:     event_inverted = flags & 0x40;
 17408   008208  51DC               	movf	sodTRCallback@flags& (0+255),w,b
 17409   00820A  0B40               	andlw	64
 17410   00820C  6FDB               	movwf	sodTRCallback@event_inverted& (0+255),b
 17411                           
 17412                           ; BSR set to: 1
 17413                           ;../universalEvents.c: 424:     disable_off = flags & 0x08;
 17414   00820E  51DC               	movf	sodTRCallback@flags& (0+255),w,b
 17415   008210  0B08               	andlw	8
 17416   008212  6FD9               	movwf	sodTRCallback@disable_off& (0+255),b
 17417                           
 17418                           ; BSR set to: 1
 17419                           ;../universalEvents.c: 425:     send_on_ok = !( disable_off && event_inverted );
 17420   008214  0E01               	movlw	1
 17421   008216  6FD6               	movwf	_sodTRCallback$1415& (0+255),b
 17422                           
 17423                           ; BSR set to: 1
 17424   008218  51D9               	movf	sodTRCallback@disable_off& (0+255),w,b
 17425   00821A  B4D8               	btfsc	status,2,c
 17426   00821C  D005               	goto	l21233
 17427                           
 17428                           ; BSR set to: 1
 17429   00821E  51DB               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17430   008220  B4D8               	btfsc	status,2,c
 17431   008222  D002               	goto	l21233
 17432                           
 17433                           ; BSR set to: 1
 17434   008224  0E00               	movlw	0
 17435   008226  6FD6               	movwf	_sodTRCallback$1415& (0+255),b
 17436   008228                     l21233:
 17437                           
 17438                           ; BSR set to: 1
 17439   008228  C1D6  F1D4         	movff	_sodTRCallback$1415,sodTRCallback@send_on_ok
 17440                           
 17441                           ;../universalEvents.c: 426:     send_off_ok = !( disable_off && !event_inverted);
 17442   00822C  0E01               	movlw	1
 17443   00822E  6FD7               	movwf	_sodTRCallback$1416& (0+255),b
 17444   008230  51D9               	movf	sodTRCallback@disable_off& (0+255),w,b
 17445   008232  B4D8               	btfsc	status,2,c
 17446   008234  D005               	goto	l21239
 17447                           
 17448                           ; BSR set to: 1
 17449   008236  51DB               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17450   008238  A4D8               	btfss	status,2,c
 17451   00823A  D002               	goto	l21239
 17452                           
 17453                           ; BSR set to: 1
 17454   00823C  0E00               	movlw	0
 17455   00823E  6FD7               	movwf	_sodTRCallback$1416& (0+255),b
 17456   008240                     l21239:
 17457                           
 17458                           ; BSR set to: 1
 17459   008240  C1D7  F1D5         	movff	_sodTRCallback$1416,sodTRCallback@send_off_ok
 17460                           
 17461                           ; BSR set to: 1
 17462                           ;../universalEvents.c: 428:     value = APP_GetEventState((8 + 4*(io))+happeningIndex);
 17463   008244  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17464   008246  0D04               	mullw	4
 17465   008248  50F3               	movf	243,w,c
 17466   00824A  25D8               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17467   00824C  0F08               	addlw	8
 17468   00824E  EC0B  F01E         	call	_APP_GetEventState
 17469   008252  0101               	movlb	1	; () banked
 17470   008254  6FDA               	movwf	sodTRCallback@value& (0+255),b
 17471                           
 17472                           ;../universalEvents.c: 430:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17473   008256  D00C               	goto	l21253
 17474   008258                     l21243:
 17475                           
 17476                           ; BSR set to: 0
 17477                           ;../universalEvents.c: 436:             if (disable_SOD_response) {
 17478   008258  0101               	movlb	1	; () banked
 17479   00825A  51D3               	movf	sodTRCallback@disable_SOD_response& (0+255),w,b
 17480   00825C  B4D8               	btfsc	status,2,c
 17481   00825E  D01C               	goto	l21255
 17482   008260                     u22040:
 17483                           
 17484                           ;../universalEvents.c: 437:                 return TIMED_RESPONSE_RESULT_NEXT;
 17485   008260  0E02               	movlw	2
 17486   008262  0012               	return	
 17487   008264                     l21249:
 17488                           
 17489                           ; BSR set to: 0
 17490                           ;../universalEvents.c: 448:             send_on_ok = TRUE;
 17491   008264  0E01               	movlw	1
 17492   008266  0101               	movlb	1	; () banked
 17493   008268  6FD4               	movwf	sodTRCallback@send_on_ok& (0+255),b
 17494                           
 17495                           ;../universalEvents.c: 449:             send_off_ok = TRUE;
 17496   00826A  0E01               	movlw	1
 17497   00826C  6FD5               	movwf	sodTRCallback@send_off_ok& (0+255),b
 17498                           
 17499                           ;../universalEvents.c: 450:             break;
 17500   00826E  D014               	goto	l21255
 17501   008270                     l21253:
 17502                           
 17503                           ; BSR set to: 1
 17504   008270  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17505   008272  0D07               	mullw	7
 17506   008274  50F3               	movf	243,w,c
 17507   008276  0F10               	addlw	16
 17508   008278  EC21  F05D         	call	_getNV
 17509   00827C  0100               	movlb	0	; () banked
 17510   00827E  518D               	movf	?_getNV& (0+255),w,b
 17511                           
 17512                           ; Switch size 1, requested type "simple"
 17513                           ; Number of cases is 4, Range of values is 0 to 4
 17514                           ; switch strategies available:
 17515                           ; Name         Instructions Cycles
 17516                           ; simple_byte           13     7 (average)
 17517                           ;	Chosen strategy is simple_byte
 17518   008280  0A00               	xorlw	0	; case 0
 17519   008282  B4D8               	btfsc	status,2,c
 17520   008284  D7E9               	goto	l21243
 17521   008286  0A02               	xorlw	2	; case 2
 17522   008288  B4D8               	btfsc	status,2,c
 17523   00828A  D7EC               	goto	l21249
 17524   00828C  0A01               	xorlw	1	; case 3
 17525   00828E  B4D8               	btfsc	status,2,c
 17526   008290  D7E9               	goto	l21249
 17527   008292  0A07               	xorlw	7	; case 4
 17528   008294  B4D8               	btfsc	status,2,c
 17529   008296  D7E6               	goto	l21249
 17530   008298                     l21255:
 17531                           
 17532                           ;../universalEvents.c: 453:     if (value != EVENT_UNKNOWN) {
 17533   008298  0101               	movlb	1	; () banked
 17534   00829A  29DA               	incf	sodTRCallback@value& (0+255),w,b
 17535   00829C  B4D8               	btfsc	status,2,c
 17536   00829E  D7E0               	goto	u22040
 17537                           
 17538                           ; BSR set to: 1
 17539                           ;../universalEvents.c: 454:         sendInvertedProducedEvent((8 + 4*(io))+happeningInde
      +                          x, value, event_inverted, send_on_ok, send_off_ok);
 17540   0082A0  C1DA  F1C9         	movff	sodTRCallback@value,sendInvertedProducedEvent@state
 17541   0082A4  C1DB  F1CA         	movff	sodTRCallback@event_inverted,sendInvertedProducedEvent@invert
 17542   0082A8  C1D4  F1CB         	movff	sodTRCallback@send_on_ok,sendInvertedProducedEvent@can_send_on
 17543   0082AC  C1D5  F1CC         	movff	sodTRCallback@send_off_ok,sendInvertedProducedEvent@can_send_off
 17544   0082B0  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17545   0082B2  0D04               	mullw	4
 17546   0082B4  50F3               	movf	243,w,c
 17547   0082B6  25D8               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17548   0082B8  0F08               	addlw	8
 17549   0082BA  ECE9  F05B         	call	_sendInvertedProducedEvent
 17550   0082BE  D7D0               	goto	u22040
 17551   0082C0                     __end_of_sodTRCallback:
 17552                           	callstack 0
 17553                           
 17554 ;; *************** function _APP_GetEventState *****************
 17555 ;; Defined at:
 17556 ;;		line 424 in file "../main.c"
 17557 ;; Parameters:    Size  Location     Type
 17558 ;;  h               1    wreg     unsigned char 
 17559 ;; Auto vars:     Size  Location     Type
 17560 ;;  h               1    2[BANK1 ] unsigned char 
 17561 ;;  happeningInd    1    3[BANK1 ] unsigned char 
 17562 ;;  disable_off     1    1[BANK1 ] enum E12710
 17563 ;;  flags           1    0[BANK1 ] unsigned char 
 17564 ;; Return value:  Size  Location     Type
 17565 ;;                  1    wreg      enum E12730
 17566 ;; Registers used:
 17567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17568 ;; Tracked objects:
 17569 ;;		On entry : 0/0
 17570 ;;		On exit  : 0/0
 17571 ;;		Unchanged: 0/0
 17572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17574 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17575 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17576 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17577 ;;Total ram usage:       11 bytes
 17578 ;; Hardware stack levels used: 1
 17579 ;; Hardware stack levels required when called: 14
 17580 ;; This function calls:
 17581 ;;		___awdiv
 17582 ;;		_getNV
 17583 ;;		_readNVM
 17584 ;; This function is called by:
 17585 ;;		_sodTRCallback
 17586 ;;		_producerProcessMessage
 17587 ;; This function uses a non-reentrant model
 17588 ;;
 17589                           
 17590                           	psect	text48
 17591   003C16                     __ptext48:
 17592                           	callstack 0
 17593   003C16                     _APP_GetEventState:
 17594                           	callstack 14
 17595                           
 17596                           ;incstack = 0
 17597                           ;APP_GetEventState@h stored from wreg
 17598   003C16  0101               	movlb	1	; () banked
 17599   003C18  6FBA               	movwf	APP_GetEventState@h& (0+255),b
 17600                           
 17601                           ;../main.c: 425:     uint8_t flags;;../main.c: 426:     uint8_t happeningIndex;;../main.
      +                          c: 427:     Boolean disable_off;;../main.c: 429:     io = (((h)-8)/4);
 17602   003C1A  0EF8               	movlw	248
 17603   003C1C  0101               	movlb	1	; () banked
 17604   003C1E  25BA               	addwf	APP_GetEventState@h& (0+255),w,b
 17605   003C20  0100               	movlb	0	; () banked
 17606   003C22  6F97               	movwf	___awdiv@dividend& (0+255),b
 17607   003C24  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17608   003C26  0EFF               	movlw	255
 17609   003C28  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 17610   003C2A  0E00               	movlw	0
 17611   003C2C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17612   003C2E  0E04               	movlw	4
 17613   003C30  6F99               	movwf	___awdiv@divisor& (0+255),b
 17614   003C32  EC4A  F052         	call	___awdiv	;wreg free
 17615   003C36  0100               	movlb	0	; () banked
 17616   003C38  5197               	movf	?___awdiv& (0+255),w,b
 17617   003C3A  6FD1               	movwf	_io& (0+255),b
 17618                           
 17619                           ; BSR set to: 0
 17620                           ;../main.c: 430:     if (io >= 16) {
 17621   003C3C  0E0F               	movlw	15
 17622   003C3E  65D1               	cpfsgt	_io& (0+255),b
 17623   003C40  D002               	goto	l20039
 17624   003C42                     u20240:
 17625                           
 17626                           ;../main.c: 431:         return EVENT_UNKNOWN;
 17627   003C42  0EFF               	movlw	255
 17628   003C44  0012               	return	
 17629   003C46                     l20039:
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;../main.c: 433:     happeningIndex = (((h)-8)%4);
 17633   003C46  0101               	movlb	1	; () banked
 17634   003C48  51BA               	movf	APP_GetEventState@h& (0+255),w,b
 17635   003C4A  0FF8               	addlw	248
 17636   003C4C  0B03               	andlw	3
 17637   003C4E  6FBB               	movwf	APP_GetEventState@happeningIndex& (0+255),b
 17638                           
 17639                           ; BSR set to: 1
 17640                           ;../main.c: 434:     flags = (uint8_t)getNV((16 + 7*(io) + 1));
 17641   003C50  0100               	movlb	0	; () banked
 17642   003C52  51D1               	movf	_io& (0+255),w,b
 17643   003C54  0D07               	mullw	7
 17644   003C56  50F3               	movf	243,w,c
 17645   003C58  0F11               	addlw	17
 17646   003C5A  EC21  F05D         	call	_getNV
 17647   003C5E  0100               	movlb	0	; () banked
 17648   003C60  518D               	movf	?_getNV& (0+255),w,b
 17649   003C62  0101               	movlb	1	; () banked
 17650   003C64  6FB8               	movwf	APP_GetEventState@flags& (0+255),b
 17651                           
 17652                           ; BSR set to: 1
 17653                           ;../main.c: 435:     disable_off = flags & 0x08;
 17654   003C66  51B8               	movf	APP_GetEventState@flags& (0+255),w,b
 17655   003C68  0B08               	andlw	8
 17656   003C6A  6FB9               	movwf	APP_GetEventState@disable_off& (0+255),b
 17657                           
 17658                           ;../main.c: 437:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17659   003C6C  D16B               	goto	l20117
 17660   003C6E                     l20045:
 17661                           
 17662                           ; BSR set to: 1
 17663                           ;../main.c: 442:                     return outputState[io]?EVENT_ON:EVENT_OFF;
 17664   003C6E  0EE4               	movlw	low _outputState
 17665   003C70  0100               	movlb	0	; () banked
 17666   003C72  25D1               	addwf	_io& (0+255),w,b
 17667   003C74  6ED9               	movwf	fsr2l,c
 17668   003C76  6ADA               	clrf	fsr2h,c
 17669   003C78  0E02               	movlw	high _outputState
 17670   003C7A  22DA               	addwfc	fsr2h,f,c
 17671   003C7C  50DF               	movf	indf2,w,c
 17672   003C7E  B4D8               	btfsc	status,2,c
 17673   003C80  D002               	goto	u20250
 17674   003C82  0E01               	movlw	1
 17675   003C84  0012               	return	
 17676   003C86                     u20250:
 17677   003C86  0E00               	movlw	0
 17678   003C88  0012               	return	
 17679   003C8A                     l20049:
 17680                           
 17681                           ; BSR set to: 1
 17682                           ;../main.c: 445:                     if (disable_off) {
 17683   003C8A  51B9               	movf	APP_GetEventState@disable_off& (0+255),w,b
 17684   003C8C  B4D8               	btfsc	status,2,c
 17685   003C8E  D7D9               	goto	u20240
 17686                           
 17687                           ; BSR set to: 1
 17688                           ;../main.c: 446:                         return (outputState[io]==0)?EVENT_ON:EVENT_OFF;
 17689   003C90  0EE4               	movlw	low _outputState
 17690   003C92  0100               	movlb	0	; () banked
 17691   003C94  25D1               	addwf	_io& (0+255),w,b
 17692   003C96  6ED9               	movwf	fsr2l,c
 17693   003C98  6ADA               	clrf	fsr2h,c
 17694   003C9A  0E02               	movlw	high _outputState
 17695   003C9C  22DA               	addwfc	fsr2h,f,c
 17696   003C9E  50DF               	movf	indf2,w,c
 17697   003CA0  A4D8               	btfss	status,2,c
 17698   003CA2  D002               	goto	u20280
 17699   003CA4  0E01               	movlw	1
 17700   003CA6  0012               	return	
 17701   003CA8                     u20280:
 17702   003CA8  0E00               	movlw	0
 17703   003CAA  0012               	return	
 17704   003CAC                     l20057:
 17705                           
 17706                           ; BSR set to: 0
 17707   003CAC  0101               	movlb	1	; () banked
 17708   003CAE  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17709                           
 17710                           ; Switch size 1, requested type "simple"
 17711                           ; Number of cases is 2, Range of values is 0 to 1
 17712                           ; switch strategies available:
 17713                           ; Name         Instructions Cycles
 17714                           ; simple_byte            7     4 (average)
 17715                           ;	Chosen strategy is simple_byte
 17716   003CB0  0A00               	xorlw	0	; case 0
 17717   003CB2  B4D8               	btfsc	status,2,c
 17718   003CB4  D7DC               	goto	l20045
 17719   003CB6  0A01               	xorlw	1	; case 1
 17720   003CB8  B4D8               	btfsc	status,2,c
 17721   003CBA  D7E7               	goto	l20049
 17722   003CBC  D7C2               	goto	u20240
 17723   003CBE                     l20059:
 17724                           
 17725                           ; BSR set to: 1
 17726                           ;../main.c: 457:                     return (readNVM(EEPROM_NVM_TYPE, ((eeprom_address_t
      +                          )((0x3FF -8))-25)+io)!=2)?EVENT_ON:EVENT_OFF;
 17727   003CBE  0EDE               	movlw	222
 17728   003CC0  0100               	movlb	0	; () banked
 17729   003CC2  25D1               	addwf	_io& (0+255),w,b
 17730   003CC4  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17731   003CC6  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17732   003CC8  0E03               	movlw	3
 17733   003CCA  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 17734   003CCC  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 17735   003CD0  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 17736   003CD4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17737   003CD6  0E00               	movlw	0
 17738   003CD8  ECC2  F058         	call	_readNVM
 17739   003CDC  0E02               	movlw	2
 17740   003CDE  0100               	movlb	0	; () banked
 17741   003CE0  1991               	xorwf	?_readNVM& (0+255),w,b
 17742   003CE2  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
 17743   003CE4  B4D8               	btfsc	status,2,c
 17744   003CE6  D002               	goto	u20300
 17745   003CE8  0E01               	movlw	1
 17746   003CEA  0012               	return	
 17747   003CEC                     u20300:
 17748   003CEC  0E00               	movlw	0
 17749   003CEE  0012               	return	
 17750   003CF0                     l20065:
 17751                           
 17752                           ; BSR set to: 0
 17753   003CF0  0101               	movlb	1	; () banked
 17754   003CF2  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17755                           
 17756                           ; Switch size 1, requested type "simple"
 17757                           ; Number of cases is 1, Range of values is 0 to 0
 17758                           ; switch strategies available:
 17759                           ; Name         Instructions Cycles
 17760                           ; simple_byte            4     3 (average)
 17761                           ;	Chosen strategy is simple_byte
 17762   003CF4  0A00               	xorlw	0	; case 0
 17763   003CF6  B4D8               	btfsc	status,2,c
 17764   003CF8  D7E2               	goto	l20059
 17765   003CFA  D7A3               	goto	u20240
 17766   003CFC                     l20067:
 17767                           
 17768                           ; BSR set to: 1
 17769                           ;../main.c: 464:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 2)))?EVENT_ON:EVENT_OFF;
 17770   003CFC  0100               	movlb	0	; () banked
 17771   003CFE  51D1               	movf	_io& (0+255),w,b
 17772   003D00  0D07               	mullw	7
 17773   003D02  50F3               	movf	243,w,c
 17774   003D04  0F12               	addlw	18
 17775   003D06  EC21  F05D         	call	_getNV
 17776   003D0A  0100               	movlb	0	; () banked
 17777   003D0C  51D1               	movf	_io& (0+255),w,b
 17778   003D0E  0FA9               	addlw	low _currentPos
 17779   003D10  6ED9               	movwf	fsr2l,c
 17780   003D12  6ADA               	clrf	fsr2h,c
 17781   003D14  50DE               	movf	postinc2,w,c
 17782   003D16  198D               	xorwf	?_getNV& (0+255),w,b
 17783   003D18  A4D8               	btfss	status,2,c
 17784   003D1A  D002               	goto	u20320
 17785   003D1C  0E01               	movlw	1
 17786   003D1E  0012               	return	
 17787   003D20                     u20320:
 17788   003D20  0E00               	movlw	0
 17789   003D22  0012               	return	
 17790   003D24                     l20071:
 17791                           
 17792                           ; BSR set to: 1
 17793                           ;../main.c: 466:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 3)))?EVENT_ON:EVENT_OFF;
 17794   003D24  0100               	movlb	0	; () banked
 17795   003D26  51D1               	movf	_io& (0+255),w,b
 17796   003D28  0D07               	mullw	7
 17797   003D2A  50F3               	movf	243,w,c
 17798   003D2C  0F13               	addlw	19
 17799   003D2E  EC21  F05D         	call	_getNV
 17800   003D32  0100               	movlb	0	; () banked
 17801   003D34  51D1               	movf	_io& (0+255),w,b
 17802   003D36  0FA9               	addlw	low _currentPos
 17803   003D38  6ED9               	movwf	fsr2l,c
 17804   003D3A  6ADA               	clrf	fsr2h,c
 17805   003D3C  50DE               	movf	postinc2,w,c
 17806   003D3E  198D               	xorwf	?_getNV& (0+255),w,b
 17807   003D40  A4D8               	btfss	status,2,c
 17808   003D42  D002               	goto	u20340
 17809   003D44  0E01               	movlw	1
 17810   003D46  0012               	return	
 17811   003D48                     u20340:
 17812   003D48  0E00               	movlw	0
 17813   003D4A  0012               	return	
 17814   003D4C                     l20075:
 17815                           
 17816                           ; BSR set to: 1
 17817                           ;../main.c: 469:                     return (currentPos[io] >= ((uint8_t)getNV((16 + 7*(
      +                          io) + 3)))/2 +
 17818   003D4C  0100               	movlb	0	; () banked
 17819   003D4E  51D1               	movf	_io& (0+255),w,b
 17820   003D50  0D07               	mullw	7
 17821   003D52  50F3               	movf	243,w,c
 17822   003D54  0F13               	addlw	19
 17823   003D56  EC21  F05D         	call	_getNV
 17824   003D5A  0100               	movlb	0	; () banked
 17825   003D5C  518D               	movf	?_getNV& (0+255),w,b
 17826   003D5E  6F97               	movwf	___awdiv@dividend& (0+255),b
 17827   003D60  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17828   003D62  0E00               	movlw	0
 17829   003D64  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17830   003D66  0E02               	movlw	2
 17831   003D68  6F99               	movwf	___awdiv@divisor& (0+255),b
 17832   003D6A  EC4A  F052         	call	___awdiv	;wreg free
 17833   003D6E  C097  F09F         	movff	?___awdiv,??_APP_GetEventState
 17834   003D72  C098  F0A0         	movff	?___awdiv+1,??_APP_GetEventState+1
 17835   003D76  0100               	movlb	0	; () banked
 17836   003D78  51D1               	movf	_io& (0+255),w,b
 17837   003D7A  0D07               	mullw	7
 17838   003D7C  50F3               	movf	243,w,c
 17839   003D7E  0F12               	addlw	18
 17840   003D80  EC21  F05D         	call	_getNV
 17841   003D84  0100               	movlb	0	; () banked
 17842   003D86  518D               	movf	?_getNV& (0+255),w,b
 17843   003D88  6F97               	movwf	___awdiv@dividend& (0+255),b
 17844   003D8A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17845   003D8C  0E00               	movlw	0
 17846   003D8E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17847   003D90  0E02               	movlw	2
 17848   003D92  6F99               	movwf	___awdiv@divisor& (0+255),b
 17849   003D94  EC4A  F052         	call	___awdiv	;wreg free
 17850   003D98  0100               	movlb	0	; () banked
 17851   003D9A  5197               	movf	?___awdiv& (0+255),w,b
 17852   003D9C  259F               	addwf	??_APP_GetEventState& (0+255),w,b
 17853   003D9E  6FA1               	movwf	(??_APP_GetEventState+2)& (0+255),b
 17854   003DA0  5198               	movf	(?___awdiv+1)& (0+255),w,b
 17855   003DA2  21A0               	addwfc	(??_APP_GetEventState+1)& (0+255),w,b
 17856   003DA4  6FA2               	movwf	(??_APP_GetEventState+3)& (0+255),b
 17857   003DA6  51D1               	movf	_io& (0+255),w,b
 17858   003DA8  0FA9               	addlw	low _currentPos
 17859   003DAA  6ED9               	movwf	fsr2l,c
 17860   003DAC  6ADA               	clrf	fsr2h,c
 17861   003DAE  50DF               	movf	indf2,w,c
 17862   003DB0  6FA3               	movwf	(??_APP_GetEventState+4)& (0+255),b
 17863   003DB2  6BA4               	clrf	(??_APP_GetEventState+5)& (0+255),b
 17864   003DB4  51A1               	movf	(??_APP_GetEventState+2)& (0+255),w,b
 17865   003DB6  5DA3               	subwf	(??_APP_GetEventState+4)& (0+255),w,b
 17866   003DB8  51A4               	movf	(??_APP_GetEventState+5)& (0+255),w,b
 17867   003DBA  0A80               	xorlw	128
 17868   003DBC  6FA5               	movwf	(??_APP_GetEventState+6)& (0+255),b
 17869   003DBE  51A2               	movf	(??_APP_GetEventState+3)& (0+255),w,b
 17870   003DC0  0A80               	xorlw	128
 17871   003DC2  59A5               	subwfb	(??_APP_GetEventState+6)& (0+255),w,b
 17872   003DC4  A0D8               	btfss	status,0,c
 17873   003DC6  D002               	goto	u20360
 17874   003DC8  0E01               	movlw	1
 17875   003DCA  0012               	return	
 17876   003DCC                     u20360:
 17877   003DCC  0E00               	movlw	0
 17878   003DCE  0012               	return	
 17879   003DD0                     l20081:
 17880                           
 17881                           ; BSR set to: 0
 17882   003DD0  0101               	movlb	1	; () banked
 17883   003DD2  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17884                           
 17885                           ; Switch size 1, requested type "simple"
 17886                           ; Number of cases is 3, Range of values is 0 to 2
 17887                           ; switch strategies available:
 17888                           ; Name         Instructions Cycles
 17889                           ; simple_byte           10     6 (average)
 17890                           ;	Chosen strategy is simple_byte
 17891   003DD4  0A00               	xorlw	0	; case 0
 17892   003DD6  B4D8               	btfsc	status,2,c
 17893   003DD8  D791               	goto	l20067
 17894   003DDA  0A01               	xorlw	1	; case 1
 17895   003DDC  B4D8               	btfsc	status,2,c
 17896   003DDE  D7B6               	goto	l20075
 17897   003DE0  0A03               	xorlw	3	; case 2
 17898   003DE2  B4D8               	btfsc	status,2,c
 17899   003DE4  D79F               	goto	l20071
 17900   003DE6  D72D               	goto	u20240
 17901   003DE8                     l20083:
 17902                           
 17903                           ; BSR set to: 1
 17904                           ;../main.c: 477:                     return ((uint8_t)readNVM(EEPROM_NVM_TYPE, ((eeprom_
      +                          address_t)((0x3FF -8))-25)+io))?EVENT_ON:EVENT_OFF;
 17905   003DE8  0EDE               	movlw	222
 17906   003DEA  0100               	movlb	0	; () banked
 17907   003DEC  25D1               	addwf	_io& (0+255),w,b
 17908   003DEE  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17909   003DF0  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17910   003DF2  0E03               	movlw	3
 17911   003DF4  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 17912   003DF6  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 17913   003DFA  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 17914   003DFE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17915   003E00  0E00               	movlw	0
 17916   003E02  ECC2  F058         	call	_readNVM
 17917   003E06  0100               	movlb	0	; () banked
 17918   003E08  6791               	tstfsz	?_readNVM& (0+255),b
 17919   003E0A  0E01               	movlw	1
 17920   003E0C  0012               	return	
 17921   003E0E                     l20089:
 17922                           
 17923                           ; BSR set to: 0
 17924   003E0E  0101               	movlb	1	; () banked
 17925   003E10  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17926                           
 17927                           ; Switch size 1, requested type "simple"
 17928                           ; Number of cases is 1, Range of values is 0 to 0
 17929                           ; switch strategies available:
 17930                           ; Name         Instructions Cycles
 17931                           ; simple_byte            4     3 (average)
 17932                           ;	Chosen strategy is simple_byte
 17933   003E12  0A00               	xorlw	0	; case 0
 17934   003E14  B4D8               	btfsc	status,2,c
 17935   003E16  D7E8               	goto	l20083
 17936   003E18  D714               	goto	u20240
 17937   003E1A                     l20091:
 17938                           
 17939                           ; BSR set to: 1
 17940                           ;../main.c: 485:                     return (currentPos[io] == getNV((16 + 7*(io) + 3)))
      +                          ?EVENT_ON:EVENT_OFF;
 17941   003E1A  0100               	movlb	0	; () banked
 17942   003E1C  51D1               	movf	_io& (0+255),w,b
 17943   003E1E  0D07               	mullw	7
 17944   003E20  50F3               	movf	243,w,c
 17945   003E22  0F13               	addlw	19
 17946   003E24  EC21  F05D         	call	_getNV
 17947   003E28  0100               	movlb	0	; () banked
 17948   003E2A  51D1               	movf	_io& (0+255),w,b
 17949   003E2C  0FA9               	addlw	low _currentPos
 17950   003E2E  6ED9               	movwf	fsr2l,c
 17951   003E30  6ADA               	clrf	fsr2h,c
 17952   003E32  50DF               	movf	indf2,w,c
 17953   003E34  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17954   003E36  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17955   003E38  518D               	movf	?_getNV& (0+255),w,b
 17956   003E3A  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 17957   003E3C  E106               	bnz	u20400
 17958   003E3E  518E               	movf	(?_getNV+1)& (0+255),w,b
 17959   003E40  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 17960   003E42  A4D8               	btfss	status,2,c
 17961   003E44  D002               	goto	u20400
 17962   003E46  0E01               	movlw	1
 17963   003E48  0012               	return	
 17964   003E4A                     u20400:
 17965   003E4A  0E00               	movlw	0
 17966   003E4C  0012               	return	
 17967   003E4E                     l20095:
 17968                           
 17969                           ; BSR set to: 1
 17970                           ;../main.c: 487:                     return (currentPos[io] == getNV((16 + 7*(io) + 4)))
      +                          ?EVENT_ON:EVENT_OFF;
 17971   003E4E  0100               	movlb	0	; () banked
 17972   003E50  51D1               	movf	_io& (0+255),w,b
 17973   003E52  0D07               	mullw	7
 17974   003E54  50F3               	movf	243,w,c
 17975   003E56  0F14               	addlw	20
 17976   003E58  EC21  F05D         	call	_getNV
 17977   003E5C  0100               	movlb	0	; () banked
 17978   003E5E  51D1               	movf	_io& (0+255),w,b
 17979   003E60  0FA9               	addlw	low _currentPos
 17980   003E62  6ED9               	movwf	fsr2l,c
 17981   003E64  6ADA               	clrf	fsr2h,c
 17982   003E66  50DF               	movf	indf2,w,c
 17983   003E68  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17984   003E6A  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17985   003E6C  518D               	movf	?_getNV& (0+255),w,b
 17986   003E6E  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 17987   003E70  E106               	bnz	u20420
 17988   003E72  518E               	movf	(?_getNV+1)& (0+255),w,b
 17989   003E74  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 17990   003E76  A4D8               	btfss	status,2,c
 17991   003E78  D002               	goto	u20420
 17992   003E7A  0E01               	movlw	1
 17993   003E7C  0012               	return	
 17994   003E7E                     u20420:
 17995   003E7E  0E00               	movlw	0
 17996   003E80  0012               	return	
 17997   003E82                     l20099:
 17998                           
 17999                           ; BSR set to: 1
 18000                           ;../main.c: 490:                     if (getNV((16 + 7*(io) + 2)) > 2) {
 18001   003E82  0100               	movlb	0	; () banked
 18002   003E84  51D1               	movf	_io& (0+255),w,b
 18003   003E86  0D07               	mullw	7
 18004   003E88  50F3               	movf	243,w,c
 18005   003E8A  0F12               	addlw	18
 18006   003E8C  EC21  F05D         	call	_getNV
 18007   003E90  0100               	movlb	0	; () banked
 18008   003E92  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18009   003E94  D6D6               	goto	u20240
 18010   003E96  518E               	movf	(?_getNV+1)& (0+255),w,b
 18011   003E98  E104               	bnz	u20440
 18012   003E9A  0E03               	movlw	3
 18013   003E9C  5D8D               	subwf	?_getNV& (0+255),w,b
 18014   003E9E  A0D8               	btfss	status,0,c
 18015   003EA0  D6D0               	goto	u20240
 18016   003EA2                     u20440:
 18017                           
 18018                           ; BSR set to: 0
 18019                           ;../main.c: 491:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          5)))?EVENT_ON:EVENT_OFF;
 18020   003EA2  51D1               	movf	_io& (0+255),w,b
 18021   003EA4  0D07               	mullw	7
 18022   003EA6  50F3               	movf	243,w,c
 18023   003EA8  0F15               	addlw	21
 18024   003EAA  EC21  F05D         	call	_getNV
 18025   003EAE  0100               	movlb	0	; () banked
 18026   003EB0  51D1               	movf	_io& (0+255),w,b
 18027   003EB2  0FA9               	addlw	low _currentPos
 18028   003EB4  6ED9               	movwf	fsr2l,c
 18029   003EB6  6ADA               	clrf	fsr2h,c
 18030   003EB8  50DF               	movf	indf2,w,c
 18031   003EBA  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18032   003EBC  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18033   003EBE  518D               	movf	?_getNV& (0+255),w,b
 18034   003EC0  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18035   003EC2  E106               	bnz	u20450
 18036   003EC4  518E               	movf	(?_getNV+1)& (0+255),w,b
 18037   003EC6  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18038   003EC8  A4D8               	btfss	status,2,c
 18039   003ECA  D002               	goto	u20450
 18040   003ECC  0E01               	movlw	1
 18041   003ECE  0012               	return	
 18042   003ED0                     u20450:
 18043   003ED0  0E00               	movlw	0
 18044   003ED2  0012               	return	
 18045   003ED4                     l20105:
 18046                           
 18047                           ; BSR set to: 1
 18048                           ;../main.c: 495:                     if (getNV((16 + 7*(io) + 2)) > 3) {
 18049   003ED4  0100               	movlb	0	; () banked
 18050   003ED6  51D1               	movf	_io& (0+255),w,b
 18051   003ED8  0D07               	mullw	7
 18052   003EDA  50F3               	movf	243,w,c
 18053   003EDC  0F12               	addlw	18
 18054   003EDE  EC21  F05D         	call	_getNV
 18055   003EE2  0100               	movlb	0	; () banked
 18056   003EE4  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18057   003EE6  D6AD               	goto	u20240
 18058   003EE8  518E               	movf	(?_getNV+1)& (0+255),w,b
 18059   003EEA  E104               	bnz	u20470
 18060   003EEC  0E04               	movlw	4
 18061   003EEE  5D8D               	subwf	?_getNV& (0+255),w,b
 18062   003EF0  A0D8               	btfss	status,0,c
 18063   003EF2  D6A7               	goto	u20240
 18064   003EF4                     u20470:
 18065                           
 18066                           ; BSR set to: 0
 18067                           ;../main.c: 496:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          6)))?EVENT_ON:EVENT_OFF;
 18068   003EF4  51D1               	movf	_io& (0+255),w,b
 18069   003EF6  0D07               	mullw	7
 18070   003EF8  50F3               	movf	243,w,c
 18071   003EFA  0F16               	addlw	22
 18072   003EFC  EC21  F05D         	call	_getNV
 18073   003F00  0100               	movlb	0	; () banked
 18074   003F02  51D1               	movf	_io& (0+255),w,b
 18075   003F04  0FA9               	addlw	low _currentPos
 18076   003F06  6ED9               	movwf	fsr2l,c
 18077   003F08  6ADA               	clrf	fsr2h,c
 18078   003F0A  50DF               	movf	indf2,w,c
 18079   003F0C  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18080   003F0E  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18081   003F10  518D               	movf	?_getNV& (0+255),w,b
 18082   003F12  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18083   003F14  E106               	bnz	u20480
 18084   003F16  518E               	movf	(?_getNV+1)& (0+255),w,b
 18085   003F18  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18086   003F1A  A4D8               	btfss	status,2,c
 18087   003F1C  D002               	goto	u20480
 18088   003F1E  0E01               	movlw	1
 18089   003F20  0012               	return	
 18090   003F22                     u20480:
 18091   003F22  0E00               	movlw	0
 18092   003F24  0012               	return	
 18093   003F26                     l20113:
 18094                           
 18095                           ; BSR set to: 0
 18096   003F26  0101               	movlb	1	; () banked
 18097   003F28  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18098                           
 18099                           ; Switch size 1, requested type "simple"
 18100                           ; Number of cases is 4, Range of values is 0 to 3
 18101                           ; switch strategies available:
 18102                           ; Name         Instructions Cycles
 18103                           ; simple_byte           13     7 (average)
 18104                           ;	Chosen strategy is simple_byte
 18105   003F2A  0A00               	xorlw	0	; case 0
 18106   003F2C  B4D8               	btfsc	status,2,c
 18107   003F2E  D775               	goto	l20091
 18108   003F30  0A01               	xorlw	1	; case 1
 18109   003F32  B4D8               	btfsc	status,2,c
 18110   003F34  D78C               	goto	l20095
 18111   003F36  0A03               	xorlw	3	; case 2
 18112   003F38  B4D8               	btfsc	status,2,c
 18113   003F3A  D7A3               	goto	l20099
 18114   003F3C  0A01               	xorlw	1	; case 3
 18115   003F3E  B4D8               	btfsc	status,2,c
 18116   003F40  D7C9               	goto	l20105
 18117   003F42  D67F               	goto	u20240
 18118   003F44                     l20117:
 18119                           
 18120                           ; BSR set to: 1
 18121   003F44  0100               	movlb	0	; () banked
 18122   003F46  51D1               	movf	_io& (0+255),w,b
 18123   003F48  0D07               	mullw	7
 18124   003F4A  50F3               	movf	243,w,c
 18125   003F4C  0F10               	addlw	16
 18126   003F4E  EC21  F05D         	call	_getNV
 18127   003F52  0100               	movlb	0	; () banked
 18128   003F54  518D               	movf	?_getNV& (0+255),w,b
 18129                           
 18130                           ; Switch size 1, requested type "simple"
 18131                           ; Number of cases is 5, Range of values is 0 to 4
 18132                           ; switch strategies available:
 18133                           ; Name         Instructions Cycles
 18134                           ; simple_byte           16     9 (average)
 18135                           ;	Chosen strategy is simple_byte
 18136   003F56  0A00               	xorlw	0	; case 0
 18137   003F58  B4D8               	btfsc	status,2,c
 18138   003F5A  D6A8               	goto	l20057
 18139   003F5C  0A01               	xorlw	1	; case 1
 18140   003F5E  B4D8               	btfsc	status,2,c
 18141   003F60  D6C7               	goto	l20065
 18142   003F62  0A03               	xorlw	3	; case 2
 18143   003F64  B4D8               	btfsc	status,2,c
 18144   003F66  D734               	goto	l20081
 18145   003F68  0A01               	xorlw	1	; case 3
 18146   003F6A  B4D8               	btfsc	status,2,c
 18147   003F6C  D750               	goto	l20089
 18148   003F6E  0A07               	xorlw	7	; case 4
 18149   003F70  B4D8               	btfsc	status,2,c
 18150   003F72  D7D9               	goto	l20113
 18151   003F74  D666               	goto	u20240
 18152   003F76                     __end_of_APP_GetEventState:
 18153                           	callstack 0
 18154                           
 18155 ;; *************** function _numEv *****************
 18156 ;; Defined at:
 18157 ;;		line 1153 in file "../../VLCBlib_PIC/event_teach_large.c"
 18158 ;; Parameters:    Size  Location     Type
 18159 ;;  tableIndex      1    wreg     unsigned char 
 18160 ;; Auto vars:     Size  Location     Type
 18161 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 18162 ;;  f               1   66[BANK0 ] struct .
 18163 ;;  num             1   65[BANK0 ] unsigned char 
 18164 ;; Return value:  Size  Location     Type
 18165 ;;                  1    wreg      unsigned char 
 18166 ;; Registers used:
 18167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18168 ;; Tracked objects:
 18169 ;;		On entry : 0/0
 18170 ;;		On exit  : 0/0
 18171 ;;		Unchanged: 0/0
 18172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18174 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18176 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18177 ;;Total ram usage:        7 bytes
 18178 ;; Hardware stack levels used: 1
 18179 ;; Hardware stack levels required when called: 15
 18180 ;; This function calls:
 18181 ;;		_readNVM
 18182 ;;		_validStart
 18183 ;; This function is called by:
 18184 ;;		_doReval
 18185 ;;		_doReqev
 18186 ;;		_reqevCallback
 18187 ;; This function uses a non-reentrant model
 18188 ;;
 18189                           
 18190                           	psect	text49
 18191   0089D4                     __ptext49:
 18192                           	callstack 0
 18193   0089D4                     _numEv:
 18194                           	callstack 12
 18195                           
 18196                           ;incstack = 0
 18197                           ;numEv@tableIndex stored from wreg
 18198   0089D4  0100               	movlb	0	; () banked
 18199   0089D6  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18200                           
 18201                           ;../../VLCBlib_PIC/event_teach_large.c: 1154:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1155:     uint8_t num=0;
 18202   0089D8  0E00               	movlw	0
 18203   0089DA  0100               	movlb	0	; () banked
 18204   0089DC  6FA1               	movwf	numEv@num& (0+255),b
 18205                           
 18206                           ; BSR set to: 0
 18207                           ;../../VLCBlib_PIC/event_teach_large.c: 1156:     if ( ! validStart(tableIndex)) {
 18208   0089DE  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18209   0089E0  EC2B  F05B         	call	_validStart
 18210   0089E4  0900               	iorlw	0
 18211   0089E6  A4D8               	btfss	status,2,c
 18212   0089E8  D002               	goto	l20879
 18213   0089EA                     u21630:
 18214                           
 18215                           ;../../VLCBlib_PIC/event_teach_large.c: 1158:         return 0;
 18216   0089EA  0E00               	movlw	0
 18217   0089EC  0012               	return	
 18218   0089EE                     l20879:
 18219                           
 18220                           ;../../VLCBlib_PIC/event_teach_large.c: 1160:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 18221   0089EE  0100               	movlb	0	; () banked
 18222   0089F0  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18223   0089F2  6F9D               	movwf	??_numEv& (0+255),b
 18224   0089F4  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18225   0089F6  3B9D               	swapf	??_numEv& (0+255),f,b
 18226   0089F8  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18227   0089FA  0EF0               	movlw	240
 18228   0089FC  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18229   0089FE  519D               	movf	??_numEv& (0+255),w,b
 18230   008A00  0B0F               	andlw	15
 18231   008A02  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18232   008A04  0EF0               	movlw	240
 18233   008A06  179D               	andwf	??_numEv& (0+255),f,b
 18234   008A08  0E80               	movlw	128
 18235   008A0A  259D               	addwf	??_numEv& (0+255),w,b
 18236   008A0C  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18237   008A0E  0EEF               	movlw	239
 18238   008A10  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18239   008A12  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18240   008A14  C09F  F091         	movff	??_numEv+2,readNVM@index
 18241   008A18  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18242   008A1C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18243   008A1E  0E01               	movlw	1
 18244   008A20  ECC2  F058         	call	_readNVM
 18245   008A24  0100               	movlb	0	; () banked
 18246   008A26  5191               	movf	?_readNVM& (0+255),w,b
 18247   008A28  6FA2               	movwf	numEv@f& (0+255),b
 18248                           
 18249                           ;../../VLCBlib_PIC/event_teach_large.c: 1161:     while (f.continued) {
 18250   008A2A  D039               	goto	l20893
 18251   008A2C                     l20881:
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 18255   008A2C  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18256   008A2E  0D10               	mullw	16
 18257   008A30  CFF3 F09D          	movff	prodl,??_numEv
 18258   008A34  CFF4 F09E          	movff	prodh,??_numEv+1
 18259   008A38  0E81               	movlw	129
 18260   008A3A  259D               	addwf	??_numEv& (0+255),w,b
 18261   008A3C  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18262   008A3E  0EEF               	movlw	239
 18263   008A40  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18264   008A42  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18265   008A44  C09F  F091         	movff	??_numEv+2,readNVM@index
 18266   008A48  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18267   008A4C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18268   008A4E  0E01               	movlw	1
 18269   008A50  ECC2  F058         	call	_readNVM
 18270   008A54  0100               	movlb	0	; () banked
 18271   008A56  5191               	movf	?_readNVM& (0+255),w,b
 18272   008A58  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18273                           
 18274                           ; BSR set to: 0
 18275                           ;../../VLCBlib_PIC/event_teach_large.c: 1163:         if (tableIndex == 0xff) {
 18276   008A5A  29A3               	incf	numEv@tableIndex& (0+255),w,b
 18277   008A5C  B4D8               	btfsc	status,2,c
 18278   008A5E  D7C5               	goto	u21630
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;../../VLCBlib_PIC/event_teach_large.c: 1166:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 18282   008A60  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18283   008A62  6F9D               	movwf	??_numEv& (0+255),b
 18284   008A64  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18285   008A66  3B9D               	swapf	??_numEv& (0+255),f,b
 18286   008A68  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18287   008A6A  0EF0               	movlw	240
 18288   008A6C  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18289   008A6E  519D               	movf	??_numEv& (0+255),w,b
 18290   008A70  0B0F               	andlw	15
 18291   008A72  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18292   008A74  0EF0               	movlw	240
 18293   008A76  179D               	andwf	??_numEv& (0+255),f,b
 18294   008A78  0E80               	movlw	128
 18295   008A7A  259D               	addwf	??_numEv& (0+255),w,b
 18296   008A7C  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18297   008A7E  0EEF               	movlw	239
 18298   008A80  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18299   008A82  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18300   008A84  C09F  F091         	movff	??_numEv+2,readNVM@index
 18301   008A88  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18302   008A8C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18303   008A8E  0E01               	movlw	1
 18304   008A90  ECC2  F058         	call	_readNVM
 18305   008A94  0100               	movlb	0	; () banked
 18306   008A96  5191               	movf	?_readNVM& (0+255),w,b
 18307   008A98  6FA2               	movwf	numEv@f& (0+255),b
 18308                           
 18309                           ; BSR set to: 0
 18310                           ;../../VLCBlib_PIC/event_teach_large.c: 1167:         num += 10;
 18311   008A9A  0E0A               	movlw	10
 18312   008A9C  27A1               	addwf	numEv@num& (0+255),f,b
 18313   008A9E                     l20893:
 18314                           
 18315                           ; BSR set to: 0
 18316                           ;../../VLCBlib_PIC/event_teach_large.c: 1161:     while (f.continued) {
 18317   008A9E  B9A2               	btfsc	numEv@f& (0+255),4,b
 18318   008AA0  D7C5               	goto	l20881
 18319                           
 18320                           ; BSR set to: 0
 18321                           ;../../VLCBlib_PIC/event_teach_large.c: 1169:     num += f.eVsUsed;
 18322   008AA2  51A2               	movf	numEv@f& (0+255),w,b
 18323   008AA4  0B0F               	andlw	15
 18324   008AA6  27A1               	addwf	numEv@num& (0+255),f,b
 18325                           
 18326                           ; BSR set to: 0
 18327                           ;../../VLCBlib_PIC/event_teach_large.c: 1170:     return num;
 18328   008AA8  51A1               	movf	numEv@num& (0+255),w,b
 18329   008AAA  0012               	return		;funcret
 18330   008AAC                     __end_of_numEv:
 18331                           	callstack 0
 18332                           
 18333 ;; *************** function _tableIndexToEvtIdx *****************
 18334 ;; Defined at:
 18335 ;;		line 1272 in file "../../VLCBlib_PIC/event_teach_large.c"
 18336 ;; Parameters:    Size  Location     Type
 18337 ;;  tableIndex      1    wreg     unsigned char 
 18338 ;; Auto vars:     Size  Location     Type
 18339 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 18340 ;; Return value:  Size  Location     Type
 18341 ;;                  1    wreg      unsigned char 
 18342 ;; Registers used:
 18343 ;;		wreg, status,2, status,0
 18344 ;; Tracked objects:
 18345 ;;		On entry : 0/0
 18346 ;;		On exit  : 0/0
 18347 ;;		Unchanged: 0/0
 18348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18352 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18353 ;;Total ram usage:        1 bytes
 18354 ;; Hardware stack levels used: 1
 18355 ;; Hardware stack levels required when called: 12
 18356 ;; This function calls:
 18357 ;;		Nothing
 18358 ;; This function is called by:
 18359 ;;		_nerdCallback
 18360 ;; This function uses a non-reentrant model
 18361 ;;
 18362                           
 18363                           	psect	text50
 18364   00C392                     __ptext50:
 18365                           	callstack 0
 18366   00C392                     _tableIndexToEvtIdx:
 18367                           	callstack 15
 18368                           
 18369                           ;incstack = 0
 18370                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 18371   00C392  0100               	movlb	0	; () banked
 18372   00C394  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 18373                           
 18374                           ;../../VLCBlib_PIC/event_teach_large.c: 1273:     return tableIndex + 1;
 18375   00C396  0100               	movlb	0	; () banked
 18376   00C398  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 18377                           
 18378                           ; BSR set to: 0
 18379   00C39A  0012               	return		;funcret
 18380   00C39C                     __end_of_tableIndexToEvtIdx:
 18381                           	callstack 0
 18382                           
 18383 ;; *************** function _setNV *****************
 18384 ;; Defined at:
 18385 ;;		line 217 in file "../../VLCBlib_PIC/nv.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;  index           1    wreg     unsigned char 
 18388 ;;  value           1   58[BANK1 ] unsigned char 
 18389 ;; Auto vars:     Size  Location     Type
 18390 ;;  index           1   62[BANK1 ] unsigned char 
 18391 ;;  oldValue        1   61[BANK1 ] unsigned char 
 18392 ;; Return value:  Size  Location     Type
 18393 ;;                  1    wreg      unsigned char 
 18394 ;; Registers used:
 18395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18396 ;; Tracked objects:
 18397 ;;		On entry : 0/0
 18398 ;;		On exit  : 0/0
 18399 ;;		Unchanged: 0/0
 18400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18401 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18402 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18403 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18404 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18405 ;;Total ram usage:        5 bytes
 18406 ;; Hardware stack levels used: 1
 18407 ;; Hardware stack levels required when called: 26
 18408 ;; This function calls:
 18409 ;;		_APP_nvValidate
 18410 ;;		_APP_nvValueChanged
 18411 ;;		_writeNVM
 18412 ;; This function is called by:
 18413 ;;		_nvProcessMessage
 18414 ;; This function uses a non-reentrant model
 18415 ;;
 18416                           
 18417                           	psect	text51
 18418   00A89C                     __ptext51:
 18419                           	callstack 0
 18420   00A89C                     _setNV:
 18421                           	callstack 2
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;incstack = 0
 18425                           ;setNV@index stored from wreg
 18426   00A89C  0101               	movlb	1	; () banked
 18427   00A89E  6FF6               	movwf	setNV@index& (0+255),b
 18428                           
 18429                           ;../../VLCBlib_PIC/nv.c: 218:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 220:     if 
      +                          (index > (15+7*16)) return CMDERR_INV_NV_IDX;
 18430   00A8A0  0E7F               	movlw	127
 18431   00A8A2  0101               	movlb	1	; () banked
 18432   00A8A4  65F6               	cpfsgt	setNV@index& (0+255),b
 18433   00A8A6  D002               	goto	l21699
 18434                           
 18435                           ; BSR set to: 1
 18436   00A8A8  0E0A               	movlw	10
 18437   00A8AA  0012               	return	
 18438   00A8AC                     l21699:
 18439                           
 18440                           ; BSR set to: 1
 18441                           ;../../VLCBlib_PIC/nv.c: 221:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 18442   00A8AC  C1F2  F09F         	movff	setNV@value,APP_nvValidate@value
 18443   00A8B0  51F6               	movf	setNV@index& (0+255),w,b
 18444   00A8B2  EC7B  F055         	call	_APP_nvValidate
 18445   00A8B6  0900               	iorlw	0
 18446   00A8B8  A4D8               	btfss	status,2,c
 18447   00A8BA  D002               	goto	l21705
 18448   00A8BC  0E0C               	movlw	12
 18449   00A8BE  0012               	return	
 18450   00A8C0                     l21705:
 18451                           
 18452                           ;../../VLCBlib_PIC/nv.c: 223:     oldValue = nvCache[index];
 18453   00A8C0  0E00               	movlw	low _nvCache
 18454   00A8C2  0101               	movlb	1	; () banked
 18455   00A8C4  25F6               	addwf	setNV@index& (0+255),w,b
 18456   00A8C6  6ED9               	movwf	fsr2l,c
 18457   00A8C8  6ADA               	clrf	fsr2h,c
 18458   00A8CA  0E04               	movlw	high _nvCache
 18459   00A8CC  22DA               	addwfc	fsr2h,f,c
 18460   00A8CE  50DF               	movf	indf2,w,c
 18461   00A8D0  6FF5               	movwf	setNV@oldValue& (0+255),b
 18462                           
 18463                           ;../../VLCBlib_PIC/nv.c: 224:     nvCache[index] = value;
 18464   00A8D2  0E00               	movlw	low _nvCache
 18465   00A8D4  25F6               	addwf	setNV@index& (0+255),w,b
 18466   00A8D6  6ED9               	movwf	fsr2l,c
 18467   00A8D8  6ADA               	clrf	fsr2h,c
 18468   00A8DA  0E04               	movlw	high _nvCache
 18469   00A8DC  22DA               	addwfc	fsr2h,f,c
 18470   00A8DE  C1F2  FFDF         	movff	setNV@value,indf2
 18471                           
 18472                           ; BSR set to: 1
 18473                           ;../../VLCBlib_PIC/nv.c: 225:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 18474   00A8E2  0E80               	movlw	128
 18475   00A8E4  25F6               	addwf	setNV@index& (0+255),w,b
 18476   00A8E6  6FF3               	movwf	??_setNV& (0+255),b
 18477   00A8E8  6BF4               	clrf	(??_setNV+1)& (0+255),b
 18478   00A8EA  0EFF               	movlw	255
 18479   00A8EC  23F4               	addwfc	(??_setNV+1)& (0+255),f,b
 18480   00A8EE  C1F3  F0A4         	movff	??_setNV,writeNVM@index
 18481   00A8F2  C1F4  F0A5         	movff	??_setNV+1,writeNVM@index+1
 18482   00A8F6  0100               	movlb	0	; () banked
 18483   00A8F8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 18484   00A8FA  C1F2  F0A7         	movff	setNV@value,writeNVM@value
 18485   00A8FE  0E01               	movlw	1
 18486   00A900  EC52  F05B         	call	_writeNVM
 18487                           
 18488                           ;../../VLCBlib_PIC/nv.c: 230:     APP_nvValueChanged(index, value, oldValue);
 18489   00A904  C1F2  F1EB         	movff	setNV@value,APP_nvValueChanged@value
 18490   00A908  C1F5  F1EC         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 18491   00A90C  0101               	movlb	1	; () banked
 18492   00A90E  51F6               	movf	setNV@index& (0+255),w,b
 18493   00A910  EC7D  F016         	call	_APP_nvValueChanged
 18494                           
 18495                           ;../../VLCBlib_PIC/nv.c: 231:     return 0;
 18496   00A914  0E00               	movlw	0
 18497   00A916  0012               	return		;funcret
 18498   00A918                     __end_of_setNV:
 18499                           	callstack 0
 18500                           
 18501 ;; *************** function _APP_nvValueChanged *****************
 18502 ;; Defined at:
 18503 ;;		line 104 in file "../universalNv.c"
 18504 ;; Parameters:    Size  Location     Type
 18505 ;;  index           1    wreg     unsigned char 
 18506 ;;  value           1   51[BANK1 ] unsigned char 
 18507 ;;  oldValue        1   52[BANK1 ] unsigned char 
 18508 ;; Auto vars:     Size  Location     Type
 18509 ;;  index           1   56[BANK1 ] unsigned char 
 18510 ;;  io              1   57[BANK1 ] unsigned char 
 18511 ;;  nv              1    0        unsigned char 
 18512 ;; Return value:  Size  Location     Type
 18513 ;;                  1    wreg      void 
 18514 ;; Registers used:
 18515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18516 ;; Tracked objects:
 18517 ;;		On entry : 0/0
 18518 ;;		On exit  : 0/0
 18519 ;;		Unchanged: 0/0
 18520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18521 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18522 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18523 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18524 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18525 ;;Total ram usage:        7 bytes
 18526 ;; Hardware stack levels used: 1
 18527 ;; Hardware stack levels required when called: 25
 18528 ;; This function calls:
 18529 ;;		___awdiv
 18530 ;;		___awmod
 18531 ;;		_getNV
 18532 ;;		_setBounceState
 18533 ;;		_setMultiState
 18534 ;;		_setServoPosition
 18535 ;;		_setServoState
 18536 ;;		_setTimedResponseDelay
 18537 ;;		_setType
 18538 ;;		_startBounceOutput
 18539 ;;		_startMultiOutput
 18540 ;;		_startServoOutput
 18541 ;; This function is called by:
 18542 ;;		_setNV
 18543 ;; This function uses a non-reentrant model
 18544 ;;
 18545                           
 18546                           	psect	text52
 18547   002CFA                     __ptext52:
 18548                           	callstack 0
 18549   002CFA                     _APP_nvValueChanged:
 18550                           	callstack 2
 18551                           
 18552                           ;incstack = 0
 18553                           ;APP_nvValueChanged@index stored from wreg
 18554   002CFA  0101               	movlb	1	; () banked
 18555   002CFC  6FF0               	movwf	APP_nvValueChanged@index& (0+255),b
 18556                           
 18557                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 18558   002CFE  0EF0               	movlw	240
 18559   002D00  0101               	movlb	1	; () banked
 18560   002D02  25F0               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18561   002D04  0100               	movlb	0	; () banked
 18562   002D06  6F8D               	movwf	___awmod@dividend& (0+255),b
 18563   002D08  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18564   002D0A  0EFF               	movlw	255
 18565   002D0C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18566   002D0E  0E00               	movlw	0
 18567   002D10  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18568   002D12  0E07               	movlw	7
 18569   002D14  6F8F               	movwf	___awmod@divisor& (0+255),b
 18570   002D16  EC26  F056         	call	___awmod	;wreg free
 18571   002D1A  0100               	movlb	0	; () banked
 18572   002D1C  518D               	movf	?___awmod& (0+255),w,b
 18573   002D1E  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 18574   002D20  A4D8               	btfss	status,2,c
 18575   002D22  D01B               	goto	l20309
 18576                           
 18577                           ; BSR set to: 0
 18578                           ;../universalNv.c: 110:         io = index-16;
 18579   002D24  0101               	movlb	1	; () banked
 18580   002D26  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18581   002D28  0FF0               	addlw	240
 18582   002D2A  6FF1               	movwf	APP_nvValueChanged@io& (0+255),b
 18583                           
 18584                           ; BSR set to: 1
 18585                           ;../universalNv.c: 111:         io /= 7;
 18586   002D2C  C1F1  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 18587   002D30  0100               	movlb	0	; () banked
 18588   002D32  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18589   002D34  0E00               	movlw	0
 18590   002D36  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18591   002D38  0E07               	movlw	7
 18592   002D3A  6F99               	movwf	___awdiv@divisor& (0+255),b
 18593   002D3C  EC4A  F052         	call	___awdiv	;wreg free
 18594   002D40  0100               	movlb	0	; () banked
 18595   002D42  5197               	movf	?___awdiv& (0+255),w,b
 18596   002D44  0101               	movlb	1	; () banked
 18597   002D46  6FF1               	movwf	APP_nvValueChanged@io& (0+255),b
 18598                           
 18599                           ; BSR set to: 1
 18600                           ;../universalNv.c: 112:         if (oldValue != value) {
 18601   002D48  51EB               	movf	APP_nvValueChanged@value& (0+255),w,b
 18602   002D4A  19EC               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 18603   002D4C  B4D8               	btfsc	status,2,c
 18604   002D4E  D005               	goto	l20309
 18605                           
 18606                           ; BSR set to: 1
 18607                           ;../universalNv.c: 113:             setType(io, value);
 18608   002D50  C1EB  F1E8         	movff	APP_nvValueChanged@value,setType@type
 18609   002D54  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18610   002D56  EC92  F058         	call	_setType
 18611   002D5A                     l20309:
 18612                           
 18613                           ;../universalNv.c: 116:     if (index == 5) {
 18614   002D5A  0E05               	movlw	5
 18615   002D5C  0101               	movlb	1	; () banked
 18616   002D5E  19F0               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18617   002D60  A4D8               	btfss	status,2,c
 18618   002D62  D003               	goto	l20313
 18619                           
 18620                           ; BSR set to: 1
 18621                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 18622   002D64  51EB               	movf	APP_nvValueChanged@value& (0+255),w,b
 18623   002D66  ECCE  F061         	call	_setTimedResponseDelay
 18624   002D6A                     l20313:
 18625                           
 18626                           ;../universalNv.c: 121:     if (index == 4) {
 18627   002D6A  0E04               	movlw	4
 18628   002D6C  0101               	movlb	1	; () banked
 18629   002D6E  19F0               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18630   002D70  B4D8               	btfsc	status,2,c
 18631                           
 18632                           ; BSR set to: 1
 18633                           ;../universalNv.c: 122:         WPUB = value;
 18634   002D72  C1EB  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 18635                           
 18636                           ; BSR set to: 1
 18637                           ;../universalNv.c: 215:     if (index >= 16) {
 18638   002D76  0E0F               	movlw	15
 18639   002D78  65F0               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 18640   002D7A  0012               	return	
 18641                           
 18642                           ; BSR set to: 1
 18643                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 18644   002D7C  0EF0               	movlw	240
 18645   002D7E  25F0               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18646   002D80  0100               	movlb	0	; () banked
 18647   002D82  6F97               	movwf	___awdiv@dividend& (0+255),b
 18648   002D84  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18649   002D86  0EFF               	movlw	255
 18650   002D88  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 18651   002D8A  0E00               	movlw	0
 18652   002D8C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18653   002D8E  0E07               	movlw	7
 18654   002D90  6F99               	movwf	___awdiv@divisor& (0+255),b
 18655   002D92  EC4A  F052         	call	___awdiv	;wreg free
 18656   002D96  0100               	movlb	0	; () banked
 18657   002D98  5197               	movf	?___awdiv& (0+255),w,b
 18658   002D9A  0101               	movlb	1	; () banked
 18659   002D9C  6FF1               	movwf	APP_nvValueChanged@io& (0+255),b
 18660   002D9E  0EF0               	movlw	240
 18661   002DA0  25F0               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18662   002DA2  0100               	movlb	0	; () banked
 18663   002DA4  6F8D               	movwf	___awmod@dividend& (0+255),b
 18664   002DA6  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18665   002DA8  0EFF               	movlw	255
 18666   002DAA  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18667   002DAC  0E00               	movlw	0
 18668   002DAE  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18669   002DB0  0E07               	movlw	7
 18670   002DB2  6F8F               	movwf	___awmod@divisor& (0+255),b
 18671   002DB4  EC26  F056         	call	___awmod	;wreg free
 18672                           
 18673                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 18674   002DB8  D1CF               	goto	l20391
 18675   002DBA                     l20321:
 18676                           
 18677                           ; BSR set to: 0
 18678                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 18679   002DBA  0101               	movlb	1	; () banked
 18680   002DBC  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18681   002DBE  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18682   002DC0  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18683   002DC2  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18684   002DC4  0D07               	mullw	7
 18685   002DC6  0E12               	movlw	18
 18686   002DC8  26F3               	addwf	243,f,c
 18687   002DCA  0E00               	movlw	0
 18688   002DCC  22F4               	addwfc	244,f,c
 18689   002DCE  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18690   002DD0  18F3               	xorwf	243,w,c
 18691   002DD2  E113               	bnz	l20327
 18692   002DD4  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18693   002DD6  18F4               	xorwf	244,w,c
 18694   002DD8  A4D8               	btfss	status,2,c
 18695   002DDA  D00F               	goto	l20327
 18696                           
 18697                           ; BSR set to: 1
 18698                           ;../universalNv.c: 233:                     setServoState(io, 2);
 18699   002DDC  0E02               	movlw	2
 18700   002DDE  0100               	movlb	0	; () banked
 18701   002DE0  6F91               	movwf	setServoState@action& (0+255),b
 18702   002DE2  0101               	movlb	1	; () banked
 18703   002DE4  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18704   002DE6  ECB1  F049         	call	_setServoState
 18705                           
 18706                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 18707   002DEA  0E02               	movlw	2
 18708   002DEC  0100               	movlb	0	; () banked
 18709   002DEE  6F91               	movwf	startServoOutput@action& (0+255),b
 18710   002DF0  0101               	movlb	1	; () banked
 18711   002DF2  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18712   002DF4  EC8F  F048         	call	_startServoOutput
 18713                           
 18714                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 18715   002DF8  0012               	return	
 18716   002DFA                     l20327:
 18717                           
 18718                           ; BSR set to: 1
 18719   002DFA  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18720   002DFC  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18721   002DFE  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18722   002E00  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18723   002E02  0D07               	mullw	7
 18724   002E04  0E13               	movlw	19
 18725   002E06  26F3               	addwf	243,f,c
 18726   002E08  0E00               	movlw	0
 18727   002E0A  22F4               	addwfc	244,f,c
 18728   002E0C  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18729   002E0E  18F3               	xorwf	243,w,c
 18730   002E10  E113               	bnz	l20333
 18731   002E12  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18732   002E14  18F4               	xorwf	244,w,c
 18733   002E16  A4D8               	btfss	status,2,c
 18734   002E18  D00F               	goto	l20333
 18735                           
 18736                           ; BSR set to: 1
 18737                           ;../universalNv.c: 236:                     setServoState(io, 1);
 18738   002E1A  0E01               	movlw	1
 18739   002E1C  0100               	movlb	0	; () banked
 18740   002E1E  6F91               	movwf	setServoState@action& (0+255),b
 18741   002E20  0101               	movlb	1	; () banked
 18742   002E22  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18743   002E24  ECB1  F049         	call	_setServoState
 18744                           
 18745                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 18746   002E28  0E01               	movlw	1
 18747   002E2A  0100               	movlb	0	; () banked
 18748   002E2C  6F91               	movwf	startServoOutput@action& (0+255),b
 18749   002E2E  0101               	movlb	1	; () banked
 18750   002E30  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18751   002E32  EC8F  F048         	call	_startServoOutput
 18752                           
 18753                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 18754   002E36  0012               	return	
 18755   002E38                     l20333:
 18756                           
 18757                           ; BSR set to: 1
 18758   002E38  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18759   002E3A  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18760   002E3C  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18761   002E3E  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18762   002E40  0D07               	mullw	7
 18763   002E42  0E11               	movlw	17
 18764   002E44  26F3               	addwf	243,f,c
 18765   002E46  0E00               	movlw	0
 18766   002E48  22F4               	addwfc	244,f,c
 18767   002E4A  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18768   002E4C  18F3               	xorwf	243,w,c
 18769   002E4E  E103               	bnz	u21011
 18770   002E50  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18771   002E52  18F4               	xorwf	244,w,c
 18772   002E54  A4D8               	btfss	status,2,c
 18773   002E56                     u21011:
 18774   002E56  0012               	return	
 18775                           
 18776                           ; BSR set to: 1
 18777                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 18778   002E58  AFEB               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18779   002E5A  0012               	return	
 18780                           
 18781                           ; BSR set to: 1
 18782   002E5C  BFEC               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18783   002E5E  0012               	return	
 18784                           
 18785                           ; BSR set to: 1
 18786                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 18787   002E60  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18788   002E62  0D07               	mullw	7
 18789   002E64  50F3               	movf	243,w,c
 18790   002E66  0F12               	addlw	18
 18791   002E68  EC21  F05D         	call	_getNV
 18792   002E6C  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18793   002E70  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18794   002E74  0E00               	movlw	0
 18795   002E76  0100               	movlb	0	; () banked
 18796   002E78  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18797   002E7A  0E02               	movlw	2
 18798   002E7C  6F99               	movwf	___awdiv@divisor& (0+255),b
 18799   002E7E  EC4A  F052         	call	___awdiv	;wreg free
 18800   002E82  C097  F1ED         	movff	?___awdiv,??_APP_nvValueChanged
 18801   002E86  C098  F1EE         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18802   002E8A  0101               	movlb	1	; () banked
 18803   002E8C  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18804   002E8E  0D07               	mullw	7
 18805   002E90  50F3               	movf	243,w,c
 18806   002E92  0F13               	addlw	19
 18807   002E94  EC21  F05D         	call	_getNV
 18808   002E98  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18809   002E9C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18810   002EA0  0E00               	movlw	0
 18811   002EA2  0100               	movlb	0	; () banked
 18812   002EA4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18813   002EA6  0E02               	movlw	2
 18814   002EA8  6F99               	movwf	___awdiv@divisor& (0+255),b
 18815   002EAA  EC4A  F052         	call	___awdiv	;wreg free
 18816   002EAE  0100               	movlb	0	; () banked
 18817   002EB0  5197               	movf	?___awdiv& (0+255),w,b
 18818   002EB2  0101               	movlb	1	; () banked
 18819   002EB4  25ED               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18820   002EB6  0100               	movlb	0	; () banked
 18821   002EB8  6F9F               	movwf	setServoPosition@pos& (0+255),b
 18822   002EBA  0101               	movlb	1	; () banked
 18823   002EBC  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18824   002EBE  EC5A  F060         	call	_setServoPosition
 18825                           
 18826                           ; BSR set to: 1
 18827                           
 18828                           ;../universalNv.c: 245:                 }
 18829   002EC2  0012               	return	
 18830   002EC4                     l20341:
 18831                           
 18832                           ; BSR set to: 0
 18833                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 18834   002EC4  0101               	movlb	1	; () banked
 18835   002EC6  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18836   002EC8  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18837   002ECA  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18838   002ECC  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18839   002ECE  0D07               	mullw	7
 18840   002ED0  0E13               	movlw	19
 18841   002ED2  26F3               	addwf	243,f,c
 18842   002ED4  0E00               	movlw	0
 18843   002ED6  22F4               	addwfc	244,f,c
 18844   002ED8  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18845   002EDA  18F3               	xorwf	243,w,c
 18846   002EDC  E113               	bnz	l20345
 18847   002EDE  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18848   002EE0  18F4               	xorwf	244,w,c
 18849   002EE2  A4D8               	btfss	status,2,c
 18850   002EE4  D00F               	goto	l20345
 18851                           
 18852                           ; BSR set to: 1
 18853                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 18854   002EE6  0E02               	movlw	2
 18855   002EE8  0100               	movlb	0	; () banked
 18856   002EEA  6F91               	movwf	setBounceState@action& (0+255),b
 18857   002EEC  0101               	movlb	1	; () banked
 18858   002EEE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18859   002EF0  EC0F  F04A         	call	_setBounceState
 18860                           
 18861                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 18862   002EF4  0E02               	movlw	2
 18863   002EF6  0100               	movlb	0	; () banked
 18864   002EF8  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18865   002EFA  0101               	movlb	1	; () banked
 18866   002EFC  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18867   002EFE  EC9B  F057         	call	_startBounceOutput
 18868                           
 18869                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 18870   002F02  0012               	return	
 18871   002F04                     l20345:
 18872                           
 18873                           ; BSR set to: 1
 18874   002F04  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18875   002F06  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18876   002F08  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18877   002F0A  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18878   002F0C  0D07               	mullw	7
 18879   002F0E  0E12               	movlw	18
 18880   002F10  26F3               	addwf	243,f,c
 18881   002F12  0E00               	movlw	0
 18882   002F14  22F4               	addwfc	244,f,c
 18883   002F16  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18884   002F18  18F3               	xorwf	243,w,c
 18885   002F1A  E113               	bnz	l20349
 18886   002F1C  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18887   002F1E  18F4               	xorwf	244,w,c
 18888   002F20  A4D8               	btfss	status,2,c
 18889   002F22  D00F               	goto	l20349
 18890                           
 18891                           ; BSR set to: 1
 18892                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 18893   002F24  0E01               	movlw	1
 18894   002F26  0100               	movlb	0	; () banked
 18895   002F28  6F91               	movwf	setBounceState@action& (0+255),b
 18896   002F2A  0101               	movlb	1	; () banked
 18897   002F2C  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18898   002F2E  EC0F  F04A         	call	_setBounceState
 18899                           
 18900                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 18901   002F32  0E01               	movlw	1
 18902   002F34  0100               	movlb	0	; () banked
 18903   002F36  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18904   002F38  0101               	movlb	1	; () banked
 18905   002F3A  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18906   002F3C  EC9B  F057         	call	_startBounceOutput
 18907                           
 18908                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 18909   002F40  0012               	return	
 18910   002F42                     l20349:
 18911                           
 18912                           ; BSR set to: 1
 18913   002F42  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18914   002F44  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18915   002F46  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18916   002F48  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18917   002F4A  0D07               	mullw	7
 18918   002F4C  0E11               	movlw	17
 18919   002F4E  26F3               	addwf	243,f,c
 18920   002F50  0E00               	movlw	0
 18921   002F52  22F4               	addwfc	244,f,c
 18922   002F54  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18923   002F56  18F3               	xorwf	243,w,c
 18924   002F58  E103               	bnz	u21061
 18925   002F5A  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18926   002F5C  18F4               	xorwf	244,w,c
 18927   002F5E  A4D8               	btfss	status,2,c
 18928   002F60                     u21061:
 18929   002F60  0012               	return	
 18930                           
 18931                           ; BSR set to: 1
 18932                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 18933   002F62  AFEB               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18934   002F64  0012               	return	
 18935                           
 18936                           ; BSR set to: 1
 18937   002F66  BFEC               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18938   002F68  0012               	return	
 18939                           
 18940                           ; BSR set to: 1
 18941                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 18942   002F6A  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18943   002F6C  0D07               	mullw	7
 18944   002F6E  50F3               	movf	243,w,c
 18945   002F70  0F12               	addlw	18
 18946   002F72  EC21  F05D         	call	_getNV
 18947   002F76  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18948   002F7A  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18949   002F7E  0E00               	movlw	0
 18950   002F80  0100               	movlb	0	; () banked
 18951   002F82  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18952   002F84  0E02               	movlw	2
 18953   002F86  6F99               	movwf	___awdiv@divisor& (0+255),b
 18954   002F88  EC4A  F052         	call	___awdiv	;wreg free
 18955   002F8C  C097  F1ED         	movff	?___awdiv,??_APP_nvValueChanged
 18956   002F90  C098  F1EE         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18957   002F94  0101               	movlb	1	; () banked
 18958   002F96  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18959   002F98  0D07               	mullw	7
 18960   002F9A  50F3               	movf	243,w,c
 18961   002F9C  0F13               	addlw	19
 18962   002F9E  EC21  F05D         	call	_getNV
 18963   002FA2  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18964   002FA6  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18965   002FAA  0E00               	movlw	0
 18966   002FAC  0100               	movlb	0	; () banked
 18967   002FAE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18968   002FB0  0E02               	movlw	2
 18969   002FB2  6F99               	movwf	___awdiv@divisor& (0+255),b
 18970   002FB4  EC4A  F052         	call	___awdiv	;wreg free
 18971   002FB8  0100               	movlb	0	; () banked
 18972   002FBA  5197               	movf	?___awdiv& (0+255),w,b
 18973   002FBC  0101               	movlb	1	; () banked
 18974   002FBE  25ED               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18975   002FC0  6FEF               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 18976   002FC2  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18977   002FC4  0FA9               	addlw	low _currentPos
 18978   002FC6  6ED9               	movwf	fsr2l,c
 18979   002FC8  6ADA               	clrf	fsr2h,c
 18980   002FCA  C1EF  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 18981   002FCE  0012               	return	
 18982   002FD0                     l20357:
 18983                           
 18984                           ; BSR set to: 0
 18985                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 18986   002FD0  0101               	movlb	1	; () banked
 18987   002FD2  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18988   002FD4  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18989   002FD6  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18990   002FD8  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18991   002FDA  0D07               	mullw	7
 18992   002FDC  0E13               	movlw	19
 18993   002FDE  26F3               	addwf	243,f,c
 18994   002FE0  0E00               	movlw	0
 18995   002FE2  22F4               	addwfc	244,f,c
 18996   002FE4  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18997   002FE6  18F3               	xorwf	243,w,c
 18998   002FE8  E113               	bnz	l20363
 18999   002FEA  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19000   002FEC  18F4               	xorwf	244,w,c
 19001   002FEE  A4D8               	btfss	status,2,c
 19002   002FF0  D00F               	goto	l20363
 19003                           
 19004                           ; BSR set to: 1
 19005                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 19006   002FF2  0E00               	movlw	0
 19007   002FF4  0100               	movlb	0	; () banked
 19008   002FF6  6F91               	movwf	setMultiState@action& (0+255),b
 19009   002FF8  0101               	movlb	1	; () banked
 19010   002FFA  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19011   002FFC  EC9E  F043         	call	_setMultiState
 19012                           
 19013                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 19014   003000  0E00               	movlw	0
 19015   003002  0100               	movlb	0	; () banked
 19016   003004  6F91               	movwf	startMultiOutput@action& (0+255),b
 19017   003006  0101               	movlb	1	; () banked
 19018   003008  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19019   00300A  EC19  F04D         	call	_startMultiOutput
 19020                           
 19021                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 19022   00300E  0012               	return	
 19023   003010                     l20363:
 19024                           
 19025                           ; BSR set to: 1
 19026   003010  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 19027   003012  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 19028   003014  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19029   003016  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19030   003018  0D07               	mullw	7
 19031   00301A  0E14               	movlw	20
 19032   00301C  26F3               	addwf	243,f,c
 19033   00301E  0E00               	movlw	0
 19034   003020  22F4               	addwfc	244,f,c
 19035   003022  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19036   003024  18F3               	xorwf	243,w,c
 19037   003026  E113               	bnz	l20369
 19038   003028  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19039   00302A  18F4               	xorwf	244,w,c
 19040   00302C  A4D8               	btfss	status,2,c
 19041   00302E  D00F               	goto	l20369
 19042                           
 19043                           ; BSR set to: 1
 19044                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 19045   003030  0E01               	movlw	1
 19046   003032  0100               	movlb	0	; () banked
 19047   003034  6F91               	movwf	setMultiState@action& (0+255),b
 19048   003036  0101               	movlb	1	; () banked
 19049   003038  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19050   00303A  EC9E  F043         	call	_setMultiState
 19051                           
 19052                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 19053   00303E  0E01               	movlw	1
 19054   003040  0100               	movlb	0	; () banked
 19055   003042  6F91               	movwf	startMultiOutput@action& (0+255),b
 19056   003044  0101               	movlb	1	; () banked
 19057   003046  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19058   003048  EC19  F04D         	call	_startMultiOutput
 19059                           
 19060                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 19061   00304C  0012               	return	
 19062   00304E                     l20369:
 19063                           
 19064                           ; BSR set to: 1
 19065   00304E  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 19066   003050  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 19067   003052  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19068   003054  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19069   003056  0D07               	mullw	7
 19070   003058  0E15               	movlw	21
 19071   00305A  26F3               	addwf	243,f,c
 19072   00305C  0E00               	movlw	0
 19073   00305E  22F4               	addwfc	244,f,c
 19074   003060  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19075   003062  18F3               	xorwf	243,w,c
 19076   003064  E113               	bnz	l20375
 19077   003066  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19078   003068  18F4               	xorwf	244,w,c
 19079   00306A  A4D8               	btfss	status,2,c
 19080   00306C  D00F               	goto	l20375
 19081                           
 19082                           ; BSR set to: 1
 19083                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 19084   00306E  0E02               	movlw	2
 19085   003070  0100               	movlb	0	; () banked
 19086   003072  6F91               	movwf	setMultiState@action& (0+255),b
 19087   003074  0101               	movlb	1	; () banked
 19088   003076  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19089   003078  EC9E  F043         	call	_setMultiState
 19090                           
 19091                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 19092   00307C  0E02               	movlw	2
 19093   00307E  0100               	movlb	0	; () banked
 19094   003080  6F91               	movwf	startMultiOutput@action& (0+255),b
 19095   003082  0101               	movlb	1	; () banked
 19096   003084  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19097   003086  EC19  F04D         	call	_startMultiOutput
 19098                           
 19099                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 19100   00308A  0012               	return	
 19101   00308C                     l20375:
 19102                           
 19103                           ; BSR set to: 1
 19104   00308C  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 19105   00308E  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 19106   003090  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19107   003092  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19108   003094  0D07               	mullw	7
 19109   003096  0E16               	movlw	22
 19110   003098  26F3               	addwf	243,f,c
 19111   00309A  0E00               	movlw	0
 19112   00309C  22F4               	addwfc	244,f,c
 19113   00309E  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19114   0030A0  18F3               	xorwf	243,w,c
 19115   0030A2  E113               	bnz	l20381
 19116   0030A4  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19117   0030A6  18F4               	xorwf	244,w,c
 19118   0030A8  A4D8               	btfss	status,2,c
 19119   0030AA  D00F               	goto	l20381
 19120                           
 19121                           ; BSR set to: 1
 19122                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 19123   0030AC  0E03               	movlw	3
 19124   0030AE  0100               	movlb	0	; () banked
 19125   0030B0  6F91               	movwf	setMultiState@action& (0+255),b
 19126   0030B2  0101               	movlb	1	; () banked
 19127   0030B4  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19128   0030B6  EC9E  F043         	call	_setMultiState
 19129                           
 19130                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 19131   0030BA  0E03               	movlw	3
 19132   0030BC  0100               	movlb	0	; () banked
 19133   0030BE  6F91               	movwf	startMultiOutput@action& (0+255),b
 19134   0030C0  0101               	movlb	1	; () banked
 19135   0030C2  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19136   0030C4  EC19  F04D         	call	_startMultiOutput
 19137                           
 19138                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 19139   0030C8  0012               	return	
 19140   0030CA                     l20381:
 19141                           
 19142                           ; BSR set to: 1
 19143   0030CA  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 19144   0030CC  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 19145   0030CE  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19146   0030D0  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19147   0030D2  0D07               	mullw	7
 19148   0030D4  0E11               	movlw	17
 19149   0030D6  26F3               	addwf	243,f,c
 19150   0030D8  0E00               	movlw	0
 19151   0030DA  22F4               	addwfc	244,f,c
 19152   0030DC  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19153   0030DE  18F3               	xorwf	243,w,c
 19154   0030E0  E152               	bnz	l808
 19155   0030E2  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19156   0030E4  18F4               	xorwf	244,w,c
 19157   0030E6  A4D8               	btfss	status,2,c
 19158   0030E8  0012               	return	
 19159                           
 19160                           ; BSR set to: 1
 19161                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 19162   0030EA  AFEB               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19163   0030EC  0012               	return	
 19164                           
 19165                           ; BSR set to: 1
 19166   0030EE  BFEC               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19167   0030F0  0012               	return	
 19168                           
 19169                           ; BSR set to: 1
 19170                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 19171   0030F2  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19172   0030F4  0D07               	mullw	7
 19173   0030F6  50F3               	movf	243,w,c
 19174   0030F8  0F12               	addlw	18
 19175   0030FA  EC21  F05D         	call	_getNV
 19176   0030FE  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19177   003102  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19178   003106  0E00               	movlw	0
 19179   003108  0100               	movlb	0	; () banked
 19180   00310A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19181   00310C  0E02               	movlw	2
 19182   00310E  6F99               	movwf	___awdiv@divisor& (0+255),b
 19183   003110  EC4A  F052         	call	___awdiv	;wreg free
 19184   003114  C097  F1ED         	movff	?___awdiv,??_APP_nvValueChanged
 19185   003118  C098  F1EE         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19186   00311C  0101               	movlb	1	; () banked
 19187   00311E  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19188   003120  0D07               	mullw	7
 19189   003122  50F3               	movf	243,w,c
 19190   003124  0F13               	addlw	19
 19191   003126  EC21  F05D         	call	_getNV
 19192   00312A  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19193   00312E  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19194   003132  0E00               	movlw	0
 19195   003134  0100               	movlb	0	; () banked
 19196   003136  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19197   003138  0E02               	movlw	2
 19198   00313A  6F99               	movwf	___awdiv@divisor& (0+255),b
 19199   00313C  EC4A  F052         	call	___awdiv	;wreg free
 19200   003140  0100               	movlb	0	; () banked
 19201   003142  5197               	movf	?___awdiv& (0+255),w,b
 19202   003144  0101               	movlb	1	; () banked
 19203   003146  25ED               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19204   003148  6FEF               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19205   00314A  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19206   00314C  0FA9               	addlw	low _currentPos
 19207   00314E  6ED9               	movwf	fsr2l,c
 19208   003150  6ADA               	clrf	fsr2h,c
 19209   003152  C1EF  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19210   003156  0012               	return	
 19211   003158                     l20391:
 19212   003158  0101               	movlb	1	; () banked
 19213   00315A  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19214   00315C  0D07               	mullw	7
 19215   00315E  50F3               	movf	243,w,c
 19216   003160  0F10               	addlw	16
 19217   003162  EC21  F05D         	call	_getNV
 19218                           
 19219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19220                           ; Switch size 1, requested type "simple"
 19221                           ; Number of cases is 1, Range of values is 0 to 0
 19222                           ; switch strategies available:
 19223                           ; Name         Instructions Cycles
 19224                           ; simple_byte            4     3 (average)
 19225                           ;	Chosen strategy is simple_byte
 19226   003166  0100               	movlb	0	; () banked
 19227   003168  518E               	movf	(?_getNV+1)& (0+255),w,b
 19228   00316A  0A00               	xorlw	0	; case 0
 19229   00316C  A4D8               	btfss	status,2,c
 19230   00316E  0012               	return	
 19231                           
 19232                           ; BSR set to: 0
 19233                           ; Switch size 1, requested type "simple"
 19234                           ; Number of cases is 3, Range of values is 2 to 4
 19235                           ; switch strategies available:
 19236                           ; Name         Instructions Cycles
 19237                           ; simple_byte           10     6 (average)
 19238                           ;	Chosen strategy is simple_byte
 19239   003170  518D               	movf	?_getNV& (0+255),w,b
 19240   003172  0A02               	xorlw	2	; case 2
 19241   003174  B4D8               	btfsc	status,2,c
 19242   003176  D621               	goto	l20321
 19243   003178  0A01               	xorlw	1	; case 3
 19244   00317A  B4D8               	btfsc	status,2,c
 19245   00317C  D6A3               	goto	l20341
 19246   00317E  0A07               	xorlw	7	; case 4
 19247   003180  A4D8               	btfss	status,2,c
 19248   003182  0012               	return	
 19249   003184  D725               	goto	l20357
 19250   003186                     l808:
 19251   003186  0012               	return		;funcret
 19252   003188                     __end_of_APP_nvValueChanged:
 19253                           	callstack 0
 19254                           
 19255 ;; *************** function _setTimedResponseDelay *****************
 19256 ;; Defined at:
 19257 ;;		line 900 in file "../../VLCBlib_PIC/vlcb.c"
 19258 ;; Parameters:    Size  Location     Type
 19259 ;;  delay           1    wreg     unsigned char 
 19260 ;; Auto vars:     Size  Location     Type
 19261 ;;  delay           1   45[BANK0 ] unsigned char 
 19262 ;; Return value:  Size  Location     Type
 19263 ;;                  1    wreg      void 
 19264 ;; Registers used:
 19265 ;;		wreg
 19266 ;; Tracked objects:
 19267 ;;		On entry : 0/0
 19268 ;;		On exit  : 0/0
 19269 ;;		Unchanged: 0/0
 19270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19275 ;;Total ram usage:        1 bytes
 19276 ;; Hardware stack levels used: 1
 19277 ;; Hardware stack levels required when called: 12
 19278 ;; This function calls:
 19279 ;;		Nothing
 19280 ;; This function is called by:
 19281 ;;		_setup
 19282 ;;		_APP_nvValueChanged
 19283 ;; This function uses a non-reentrant model
 19284 ;;
 19285                           
 19286                           	psect	text53
 19287   00C39C                     __ptext53:
 19288                           	callstack 0
 19289   00C39C                     _setTimedResponseDelay:
 19290                           	callstack 17
 19291                           
 19292                           ;incstack = 0
 19293                           ;setTimedResponseDelay@delay stored from wreg
 19294   00C39C  0100               	movlb	0	; () banked
 19295   00C39E  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 19296                           
 19297                           ;../../VLCBlib_PIC/vlcb.c: 901:     timedResponseDelay = delay;
 19298   00C3A0  C08D  F174         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 19299   00C3A4  0012               	return		;funcret
 19300   00C3A6                     __end_of_setTimedResponseDelay:
 19301                           	callstack 0
 19302                           
 19303 ;; *************** function _setServoPosition *****************
 19304 ;; Defined at:
 19305 ;;		line 683 in file "../servo.c"
 19306 ;; Parameters:    Size  Location     Type
 19307 ;;  io              1    wreg     unsigned char 
 19308 ;;  pos             1   63[BANK0 ] unsigned char 
 19309 ;; Auto vars:     Size  Location     Type
 19310 ;;  io              1   64[BANK0 ] unsigned char 
 19311 ;; Return value:  Size  Location     Type
 19312 ;;                  1    wreg      void 
 19313 ;; Registers used:
 19314 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19315 ;; Tracked objects:
 19316 ;;		On entry : 0/0
 19317 ;;		On exit  : 0/0
 19318 ;;		Unchanged: 0/0
 19319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19320 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19323 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19324 ;;Total ram usage:        2 bytes
 19325 ;; Hardware stack levels used: 1
 19326 ;; Hardware stack levels required when called: 12
 19327 ;; This function calls:
 19328 ;;		Nothing
 19329 ;; This function is called by:
 19330 ;;		_APP_nvValueChanged
 19331 ;;		_setOutputPosition
 19332 ;; This function uses a non-reentrant model
 19333 ;;
 19334                           
 19335                           	psect	text54
 19336   00C0B4                     __ptext54:
 19337                           	callstack 0
 19338   00C0B4                     _setServoPosition:
 19339                           	callstack 15
 19340                           
 19341                           ;incstack = 0
 19342                           ;setServoPosition@io stored from wreg
 19343   00C0B4  0100               	movlb	0	; () banked
 19344   00C0B6  6FA0               	movwf	setServoPosition@io& (0+255),b
 19345                           
 19346                           ;../servo.c: 684:     targetPos[io] = pos;
 19347   00C0B8  0E40               	movlw	low _targetPos
 19348   00C0BA  0100               	movlb	0	; () banked
 19349   00C0BC  25A0               	addwf	setServoPosition@io& (0+255),w,b
 19350   00C0BE  6ED9               	movwf	fsr2l,c
 19351   00C0C0  6ADA               	clrf	fsr2h,c
 19352   00C0C2  0E01               	movlw	high _targetPos
 19353   00C0C4  22DA               	addwfc	fsr2h,f,c
 19354   00C0C6  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19355                           
 19356                           ;../servo.c: 685:     currentPos[io] = pos;
 19357   00C0CA  51A0               	movf	setServoPosition@io& (0+255),w,b
 19358   00C0CC  0FA9               	addlw	low _currentPos
 19359   00C0CE  6ED9               	movwf	fsr2l,c
 19360   00C0D0  6ADA               	clrf	fsr2h,c
 19361   00C0D2  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19362                           
 19363                           ; BSR set to: 0
 19364   00C0D6  0012               	return		;funcret
 19365   00C0D8                     __end_of_setServoPosition:
 19366                           	callstack 0
 19367                           
 19368 ;; *************** function _APP_nvValidate *****************
 19369 ;; Defined at:
 19370 ;;		line 299 in file "../universalNv.c"
 19371 ;; Parameters:    Size  Location     Type
 19372 ;;  index           1    wreg     unsigned char 
 19373 ;;  value           1   63[BANK0 ] unsigned char 
 19374 ;; Auto vars:     Size  Location     Type
 19375 ;;  index           1   64[BANK0 ] unsigned char 
 19376 ;;  io              1    0        unsigned char 
 19377 ;; Return value:  Size  Location     Type
 19378 ;;                  1    wreg      enum E12923
 19379 ;; Registers used:
 19380 ;;		wreg, status,2, status,0, cstack
 19381 ;; Tracked objects:
 19382 ;;		On entry : 0/0
 19383 ;;		On exit  : 0/0
 19384 ;;		Unchanged: 0/0
 19385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19386 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19389 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19390 ;;Total ram usage:        2 bytes
 19391 ;; Hardware stack levels used: 1
 19392 ;; Hardware stack levels required when called: 13
 19393 ;; This function calls:
 19394 ;;		___awdiv
 19395 ;;		___awmod
 19396 ;; This function is called by:
 19397 ;;		_setNV
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           	psect	text55
 19402   00AAF6                     __ptext55:
 19403                           	callstack 0
 19404   00AAF6                     _APP_nvValidate:
 19405                           	callstack 14
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;incstack = 0
 19409                           ;APP_nvValidate@index stored from wreg
 19410   00AAF6  0100               	movlb	0	; () banked
 19411   00AAF8  6FA0               	movwf	APP_nvValidate@index& (0+255),b
 19412                           
 19413                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 19414   00AAFA  0E0F               	movlw	15
 19415   00AAFC  0100               	movlb	0	; () banked
 19416   00AAFE  65A0               	cpfsgt	APP_nvValidate@index& (0+255),b
 19417   00AB00  D031               	goto	l814
 19418                           
 19419                           ; BSR set to: 0
 19420   00AB02  0EF0               	movlw	240
 19421   00AB04  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19422   00AB06  6F8D               	movwf	___awmod@dividend& (0+255),b
 19423   00AB08  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19424   00AB0A  0EFF               	movlw	255
 19425   00AB0C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19426   00AB0E  0E00               	movlw	0
 19427   00AB10  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19428   00AB12  0E07               	movlw	7
 19429   00AB14  6F8F               	movwf	___awmod@divisor& (0+255),b
 19430   00AB16  EC26  F056         	call	___awmod	;wreg free
 19431   00AB1A  0100               	movlb	0	; () banked
 19432   00AB1C  518D               	movf	?___awmod& (0+255),w,b
 19433   00AB1E  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19434   00AB20  A4D8               	btfss	status,2,c
 19435   00AB22  D020               	goto	l814
 19436                           
 19437                           ; BSR set to: 0
 19438   00AB24  0EF0               	movlw	240
 19439   00AB26  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19440   00AB28  6F97               	movwf	___awdiv@dividend& (0+255),b
 19441   00AB2A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19442   00AB2C  0EFF               	movlw	255
 19443   00AB2E  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19444   00AB30  0E00               	movlw	0
 19445   00AB32  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19446   00AB34  0E07               	movlw	7
 19447   00AB36  6F99               	movwf	___awdiv@divisor& (0+255),b
 19448   00AB38  EC4A  F052         	call	___awdiv	;wreg free
 19449                           
 19450                           ;../universalNv.c: 308:         switch (value) {
 19451   00AB3C  D002               	goto	l20411
 19452   00AB3E                     l20405:
 19453                           
 19454                           ; BSR set to: 0
 19455                           ;../universalNv.c: 331:                 return INVALID;
 19456   00AB3E  0E00               	movlw	0
 19457   00AB40  0012               	return	
 19458   00AB42                     l20411:
 19459   00AB42  0100               	movlb	0	; () banked
 19460   00AB44  519F               	movf	APP_nvValidate@value& (0+255),w,b
 19461                           
 19462                           ; Switch size 1, requested type "simple"
 19463                           ; Number of cases is 5, Range of values is 0 to 4
 19464                           ; switch strategies available:
 19465                           ; Name         Instructions Cycles
 19466                           ; simple_byte           16     9 (average)
 19467                           ;	Chosen strategy is simple_byte
 19468   00AB46  0A00               	xorlw	0	; case 0
 19469   00AB48  B4D8               	btfsc	status,2,c
 19470   00AB4A  D00C               	goto	l814
 19471   00AB4C  0A01               	xorlw	1	; case 1
 19472   00AB4E  B4D8               	btfsc	status,2,c
 19473   00AB50  D009               	goto	l814
 19474   00AB52  0A03               	xorlw	3	; case 2
 19475   00AB54  B4D8               	btfsc	status,2,c
 19476   00AB56  D006               	goto	l814
 19477   00AB58  0A01               	xorlw	1	; case 3
 19478   00AB5A  B4D8               	btfsc	status,2,c
 19479   00AB5C  D003               	goto	l814
 19480   00AB5E  0A07               	xorlw	7	; case 4
 19481   00AB60  A4D8               	btfss	status,2,c
 19482   00AB62  D7ED               	goto	l20405
 19483   00AB64                     l814:
 19484                           
 19485                           ; BSR set to: 0
 19486                           ;../universalNv.c: 334:     return VALID;
 19487                           
 19488                           ; BSR set to: 0
 19489   00AB64  0E01               	movlw	1
 19490                           
 19491                           ; BSR set to: 0
 19492   00AB66  0012               	return		;funcret
 19493   00AB68                     __end_of_APP_nvValidate:
 19494                           	callstack 0
 19495                           
 19496 ;; *************** function _producerEsdData *****************
 19497 ;; Defined at:
 19498 ;;		line 193 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19499 ;; Parameters:    Size  Location     Type
 19500 ;;  index           1    wreg     unsigned char 
 19501 ;; Auto vars:     Size  Location     Type
 19502 ;;  index           1   45[BANK0 ] unsigned char 
 19503 ;; Return value:  Size  Location     Type
 19504 ;;                  1    wreg      unsigned char 
 19505 ;; Registers used:
 19506 ;;		wreg, status,2, status,0
 19507 ;; Tracked objects:
 19508 ;;		On entry : 0/0
 19509 ;;		On exit  : 0/0
 19510 ;;		Unchanged: 0/0
 19511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19515 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19516 ;;Total ram usage:        1 bytes
 19517 ;; Hardware stack levels used: 1
 19518 ;; Hardware stack levels required when called: 12
 19519 ;; This function calls:
 19520 ;;		Nothing
 19521 ;; This function is called by:
 19522 ;;		_mnsProcessMessage
 19523 ;; This function uses a non-reentrant model
 19524 ;;
 19525                           
 19526                           	psect	text56
 19527   00C166                     __ptext56:
 19528                           	callstack 0
 19529   00C166                     _producerEsdData:
 19530                           	callstack 16
 19531                           
 19532                           ; BSR set to: 0
 19533                           ;incstack = 0
 19534                           ;producerEsdData@index stored from wreg
 19535   00C166  0100               	movlb	0	; () banked
 19536   00C168  6F8D               	movwf	producerEsdData@index& (0+255),b
 19537                           
 19538                           ;../../VLCBlib_PIC/event_producer_happening.c: 194:     switch (index){
 19539   00C16A  D004               	goto	l22367
 19540   00C16C                     l22353:
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;../../VLCBlib_PIC/event_producer_happening.c: 196:             return PRODUCER_EV_HAPPE
      +                          NING;
 19544   00C16C  0E01               	movlw	1
 19545   00C16E  0012               	return	
 19546   00C170                     l22361:
 19547                           
 19548                           ; BSR set to: 0
 19549                           ;../../VLCBlib_PIC/event_producer_happening.c: 200:             return 0;
 19550   00C170  0E00               	movlw	0
 19551   00C172  0012               	return	
 19552   00C174                     l22367:
 19553   00C174  0100               	movlb	0	; () banked
 19554   00C176  518D               	movf	producerEsdData@index& (0+255),w,b
 19555                           
 19556                           ; Switch size 1, requested type "simple"
 19557                           ; Number of cases is 2, Range of values is 0 to 1
 19558                           ; switch strategies available:
 19559                           ; Name         Instructions Cycles
 19560                           ; simple_byte            7     4 (average)
 19561                           ;	Chosen strategy is simple_byte
 19562   00C178  0A00               	xorlw	0	; case 0
 19563   00C17A  B4D8               	btfsc	status,2,c
 19564   00C17C  D7F7               	goto	l22353
 19565   00C17E  0A01               	xorlw	1	; case 1
 19566   00C180  B4D8               	btfsc	status,2,c
 19567   00C182  D7F4               	goto	l22353
 19568   00C184  D7F5               	goto	l22361
 19569   00C186                     __end_of_producerEsdData:
 19570                           	callstack 0
 19571                           
 19572 ;; *************** function _canEsdData *****************
 19573 ;; Defined at:
 19574 ;;		line 417 in file "../../VLCBlib_PIC/can18_ecan.c"
 19575 ;; Parameters:    Size  Location     Type
 19576 ;;  id              1    wreg     unsigned char 
 19577 ;; Auto vars:     Size  Location     Type
 19578 ;;  id              1   45[BANK0 ] unsigned char 
 19579 ;; Return value:  Size  Location     Type
 19580 ;;                  1    wreg      unsigned char 
 19581 ;; Registers used:
 19582 ;;		wreg, status,2, status,0
 19583 ;; Tracked objects:
 19584 ;;		On entry : 0/0
 19585 ;;		On exit  : 0/0
 19586 ;;		Unchanged: 0/0
 19587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19591 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19592 ;;Total ram usage:        1 bytes
 19593 ;; Hardware stack levels used: 1
 19594 ;; Hardware stack levels required when called: 12
 19595 ;; This function calls:
 19596 ;;		Nothing
 19597 ;; This function is called by:
 19598 ;;		_mnsProcessMessage
 19599 ;; This function uses a non-reentrant model
 19600 ;;
 19601                           
 19602                           	psect	text57
 19603   00C25C                     __ptext57:
 19604                           	callstack 0
 19605   00C25C                     _canEsdData:
 19606                           	callstack 16
 19607                           
 19608                           ; BSR set to: 0
 19609                           ;incstack = 0
 19610                           ;canEsdData@id stored from wreg
 19611   00C25C  0100               	movlb	0	; () banked
 19612   00C25E  6F8D               	movwf	canEsdData@id& (0+255),b
 19613                           
 19614                           ;../../VLCBlib_PIC/can18_ecan.c: 418:     switch(id) {
 19615   00C260  D004               	goto	l21971
 19616   00C262                     l21961:
 19617                           
 19618                           ; BSR set to: 0
 19619                           ;../../VLCBlib_PIC/can18_ecan.c: 420:             return CAN_HW_PIC_ECAN;
 19620   00C262  0E01               	movlw	1
 19621   00C264  0012               	return	
 19622   00C266                     l21965:
 19623                           
 19624                           ; BSR set to: 0
 19625                           ;../../VLCBlib_PIC/can18_ecan.c: 422:             return 0;
 19626   00C266  0E00               	movlw	0
 19627   00C268  0012               	return	
 19628   00C26A                     l21971:
 19629   00C26A  0100               	movlb	0	; () banked
 19630   00C26C  518D               	movf	canEsdData@id& (0+255),w,b
 19631                           
 19632                           ; Switch size 1, requested type "simple"
 19633                           ; Number of cases is 1, Range of values is 0 to 0
 19634                           ; switch strategies available:
 19635                           ; Name         Instructions Cycles
 19636                           ; simple_byte            4     3 (average)
 19637                           ;	Chosen strategy is simple_byte
 19638   00C26E  0A00               	xorlw	0	; case 0
 19639   00C270  B4D8               	btfsc	status,2,c
 19640   00C272  D7F7               	goto	l21961
 19641   00C274  D7F8               	goto	l21965
 19642   00C276                     __end_of_canEsdData:
 19643                           	callstack 0
 19644                           
 19645 ;; *************** function _nvGetESDdata *****************
 19646 ;; Defined at:
 19647 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 19648 ;; Parameters:    Size  Location     Type
 19649 ;;  id              1    wreg     unsigned char 
 19650 ;; Auto vars:     Size  Location     Type
 19651 ;;  id              1   45[BANK0 ] unsigned char 
 19652 ;; Return value:  Size  Location     Type
 19653 ;;                  1    wreg      unsigned char 
 19654 ;; Registers used:
 19655 ;;		wreg, status,2, status,0
 19656 ;; Tracked objects:
 19657 ;;		On entry : 0/0
 19658 ;;		On exit  : 0/0
 19659 ;;		Unchanged: 0/0
 19660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19664 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19665 ;;Total ram usage:        1 bytes
 19666 ;; Hardware stack levels used: 1
 19667 ;; Hardware stack levels required when called: 12
 19668 ;; This function calls:
 19669 ;;		Nothing
 19670 ;; This function is called by:
 19671 ;;		_mnsProcessMessage
 19672 ;; This function uses a non-reentrant model
 19673 ;;
 19674                           
 19675                           	psect	text58
 19676   00C276                     __ptext58:
 19677                           	callstack 0
 19678   00C276                     _nvGetESDdata:
 19679                           	callstack 16
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;incstack = 0
 19683                           ;nvGetESDdata@id stored from wreg
 19684   00C276  0100               	movlb	0	; () banked
 19685   00C278  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 19686                           
 19687                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 19688   00C27A  D004               	goto	l21727
 19689   00C27C                     l21717:
 19690                           
 19691                           ; BSR set to: 0
 19692   00C27C  0E7F               	movlw	127
 19693   00C27E  0012               	return	
 19694   00C280                     l21721:
 19695                           
 19696                           ; BSR set to: 0
 19697   00C280  0E00               	movlw	0
 19698   00C282  0012               	return	
 19699   00C284                     l21727:
 19700   00C284  0100               	movlb	0	; () banked
 19701   00C286  518D               	movf	nvGetESDdata@id& (0+255),w,b
 19702                           
 19703                           ; Switch size 1, requested type "simple"
 19704                           ; Number of cases is 1, Range of values is 1 to 1
 19705                           ; switch strategies available:
 19706                           ; Name         Instructions Cycles
 19707                           ; simple_byte            4     3 (average)
 19708                           ;	Chosen strategy is simple_byte
 19709   00C288  0A01               	xorlw	1	; case 1
 19710   00C28A  B4D8               	btfsc	status,2,c
 19711   00C28C  D7F7               	goto	l21717
 19712   00C28E  D7F8               	goto	l21721
 19713   00C290                     __end_of_nvGetESDdata:
 19714                           	callstack 0
 19715                           
 19716 ;; *************** function _consumer2QEsdData *****************
 19717 ;; Defined at:
 19718 ;;		line 359 in file "../event_consumerDualActionQueue.c"
 19719 ;; Parameters:    Size  Location     Type
 19720 ;;  index           1    wreg     unsigned char 
 19721 ;; Auto vars:     Size  Location     Type
 19722 ;;  index           1   45[BANK0 ] unsigned char 
 19723 ;; Return value:  Size  Location     Type
 19724 ;;                  1    wreg      unsigned char 
 19725 ;; Registers used:
 19726 ;;		wreg, status,2, status,0
 19727 ;; Tracked objects:
 19728 ;;		On entry : 0/0
 19729 ;;		On exit  : 0/0
 19730 ;;		Unchanged: 0/0
 19731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19736 ;;Total ram usage:        1 bytes
 19737 ;; Hardware stack levels used: 1
 19738 ;; Hardware stack levels required when called: 12
 19739 ;; This function calls:
 19740 ;;		Nothing
 19741 ;; This function is called by:
 19742 ;;		_mnsProcessMessage
 19743 ;; This function uses a non-reentrant model
 19744 ;;
 19745                           
 19746                           	psect	text59
 19747   00C186                     __ptext59:
 19748                           	callstack 0
 19749   00C186                     _consumer2QEsdData:
 19750                           	callstack 16
 19751                           
 19752                           ; BSR set to: 0
 19753                           ;incstack = 0
 19754                           ;consumer2QEsdData@index stored from wreg
 19755   00C186  0100               	movlb	0	; () banked
 19756   00C188  6F8D               	movwf	consumer2QEsdData@index& (0+255),b
 19757                           
 19758                           ;../event_consumerDualActionQueue.c: 360:     switch (index){
 19759   00C18A  D004               	goto	l21051
 19760   00C18C                     l21037:
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;../event_consumerDualActionQueue.c: 362:             return CONSUMER_EV_ACTIONS;
 19764   00C18C  0E01               	movlw	1
 19765   00C18E  0012               	return	
 19766   00C190                     l21045:
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;../event_consumerDualActionQueue.c: 366:             return 0;
 19770   00C190  0E00               	movlw	0
 19771   00C192  0012               	return	
 19772   00C194                     l21051:
 19773   00C194  0100               	movlb	0	; () banked
 19774   00C196  518D               	movf	consumer2QEsdData@index& (0+255),w,b
 19775                           
 19776                           ; Switch size 1, requested type "simple"
 19777                           ; Number of cases is 2, Range of values is 0 to 1
 19778                           ; switch strategies available:
 19779                           ; Name         Instructions Cycles
 19780                           ; simple_byte            7     4 (average)
 19781                           ;	Chosen strategy is simple_byte
 19782   00C198  0A00               	xorlw	0	; case 0
 19783   00C19A  B4D8               	btfsc	status,2,c
 19784   00C19C  D7F7               	goto	l21037
 19785   00C19E  0A01               	xorlw	1	; case 1
 19786   00C1A0  B4D8               	btfsc	status,2,c
 19787   00C1A2  D7F4               	goto	l21037
 19788   00C1A4  D7F5               	goto	l21045
 19789   00C1A6                     __end_of_consumer2QEsdData:
 19790                           	callstack 0
 19791                           
 19792 ;; *************** function _teachGetESDdata *****************
 19793 ;; Defined at:
 19794 ;;		line 527 in file "../../VLCBlib_PIC/event_teach_large.c"
 19795 ;; Parameters:    Size  Location     Type
 19796 ;;  id              1    wreg     unsigned char 
 19797 ;; Auto vars:     Size  Location     Type
 19798 ;;  id              1   45[BANK0 ] unsigned char 
 19799 ;; Return value:  Size  Location     Type
 19800 ;;                  1    wreg      unsigned char 
 19801 ;; Registers used:
 19802 ;;		wreg, status,2, status,0
 19803 ;; Tracked objects:
 19804 ;;		On entry : 0/0
 19805 ;;		On exit  : 0/0
 19806 ;;		Unchanged: 0/0
 19807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19809 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19811 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19812 ;;Total ram usage:        1 bytes
 19813 ;; Hardware stack levels used: 1
 19814 ;; Hardware stack levels required when called: 12
 19815 ;; This function calls:
 19816 ;;		Nothing
 19817 ;; This function is called by:
 19818 ;;		_mnsProcessMessage
 19819 ;; This function uses a non-reentrant model
 19820 ;;
 19821                           
 19822                           	psect	text60
 19823   00C0D8                     __ptext60:
 19824                           	callstack 0
 19825   00C0D8                     _teachGetESDdata:
 19826                           	callstack 16
 19827                           
 19828                           ; BSR set to: 0
 19829                           ;incstack = 0
 19830                           ;teachGetESDdata@id stored from wreg
 19831   00C0D8  0100               	movlb	0	; () banked
 19832   00C0DA  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 19833                           
 19834                           ;../../VLCBlib_PIC/event_teach_large.c: 528:     switch (id) {
 19835   00C0DC  D006               	goto	l22315
 19836   00C0DE                     l22301:
 19837                           
 19838                           ; BSR set to: 0
 19839   00C0DE  0EFF               	movlw	255
 19840   00C0E0  0012               	return	
 19841   00C0E2                     l22305:
 19842                           
 19843                           ; BSR set to: 0
 19844   00C0E2  0E14               	movlw	20
 19845   00C0E4  0012               	return	
 19846   00C0E6                     l22309:
 19847                           
 19848                           ; BSR set to: 0
 19849   00C0E6  0E00               	movlw	0
 19850   00C0E8  0012               	return	
 19851   00C0EA                     l22315:
 19852   00C0EA  0100               	movlb	0	; () banked
 19853   00C0EC  518D               	movf	teachGetESDdata@id& (0+255),w,b
 19854                           
 19855                           ; Switch size 1, requested type "simple"
 19856                           ; Number of cases is 2, Range of values is 1 to 2
 19857                           ; switch strategies available:
 19858                           ; Name         Instructions Cycles
 19859                           ; simple_byte            7     4 (average)
 19860                           ;	Chosen strategy is simple_byte
 19861   00C0EE  0A01               	xorlw	1	; case 1
 19862   00C0F0  B4D8               	btfsc	status,2,c
 19863   00C0F2  D7F5               	goto	l22301
 19864   00C0F4  0A03               	xorlw	3	; case 2
 19865   00C0F6  B4D8               	btfsc	status,2,c
 19866   00C0F8  D7F4               	goto	l22305
 19867   00C0FA  D7F5               	goto	l22309
 19868   00C0FC                     __end_of_teachGetESDdata:
 19869                           	callstack 0
 19870                           
 19871 ;; *************** function _producerGetDiagnostic *****************
 19872 ;; Defined at:
 19873 ;;		line 179 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19874 ;; Parameters:    Size  Location     Type
 19875 ;;  index           1    wreg     unsigned char 
 19876 ;; Auto vars:     Size  Location     Type
 19877 ;;  index           1   49[BANK0 ] unsigned char 
 19878 ;; Return value:  Size  Location     Type
 19879 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19880 ;; Registers used:
 19881 ;;		wreg, status,2, status,0
 19882 ;; Tracked objects:
 19883 ;;		On entry : 0/0
 19884 ;;		On exit  : 0/0
 19885 ;;		Unchanged: 0/0
 19886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19889 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19890 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19891 ;;Total ram usage:        5 bytes
 19892 ;; Hardware stack levels used: 1
 19893 ;; Hardware stack levels required when called: 12
 19894 ;; This function calls:
 19895 ;;		Nothing
 19896 ;; This function is called by:
 19897 ;;		_mnsTRallDiagnosticsCallback
 19898 ;;		_mnsProcessMessage
 19899 ;; This function uses a non-reentrant model
 19900 ;;
 19901                           
 19902                           	psect	text61
 19903   00BBA0                     __ptext61:
 19904                           	callstack 0
 19905   00BBA0                     _producerGetDiagnostic:
 19906                           	callstack 15
 19907                           
 19908                           ; BSR set to: 0
 19909                           ;incstack = 0
 19910                           ;producerGetDiagnostic@index stored from wreg
 19911   00BBA0  0100               	movlb	0	; () banked
 19912   00BBA2  6F91               	movwf	producerGetDiagnostic@index& (0+255),b
 19913                           
 19914                           ;../../VLCBlib_PIC/event_producer_happening.c: 180:     if ((index<1) || (index>1)) {
 19915   00BBA4  0100               	movlb	0	; () banked
 19916   00BBA6  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19917   00BBA8  B4D8               	btfsc	status,2,c
 19918   00BBAA  D003               	goto	u21680
 19919                           
 19920                           ; BSR set to: 0
 19921   00BBAC  0E01               	movlw	1
 19922   00BBAE  6591               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 19923   00BBB0  D005               	goto	l20921
 19924   00BBB2                     u21680:
 19925                           
 19926                           ; BSR set to: 0
 19927                           ;../../VLCBlib_PIC/event_producer_happening.c: 181:         return ((void*)0);
 19928   00BBB2  0E00               	movlw	0
 19929   00BBB4  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19930   00BBB6  0E00               	movlw	0
 19931   00BBB8  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19932   00BBBA  0012               	return	
 19933   00BBBC                     l20921:
 19934                           
 19935                           ; BSR set to: 0
 19936                           ;../../VLCBlib_PIC/event_producer_happening.c: 183:     return &(producerDiagnostics[ind
      +                          ex-1]);
 19937   00BBBC  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19938   00BBBE  6F8F               	movwf	??_producerGetDiagnostic& (0+255),b
 19939   00BBC0  6B90               	clrf	(??_producerGetDiagnostic+1)& (0+255),b
 19940   00BBC2  90D8               	bcf	status,0,c
 19941   00BBC4  378F               	rlcf	??_producerGetDiagnostic& (0+255),f,b
 19942   00BBC6  3790               	rlcf	(??_producerGetDiagnostic+1)& (0+255),f,b
 19943   00BBC8  0EAE               	movlw	low (_producerDiagnostics+65534)
 19944   00BBCA  258F               	addwf	??_producerGetDiagnostic& (0+255),w,b
 19945   00BBCC  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19946   00BBCE  0E01               	movlw	high (_producerDiagnostics+65534)
 19947   00BBD0  2190               	addwfc	(??_producerGetDiagnostic+1)& (0+255),w,b
 19948   00BBD2  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19949                           
 19950                           ; BSR set to: 0
 19951   00BBD4  0012               	return		;funcret
 19952   00BBD6                     __end_of_producerGetDiagnostic:
 19953                           	callstack 0
 19954                           
 19955 ;; *************** function _canGetDiagnostic *****************
 19956 ;; Defined at:
 19957 ;;		line 433 in file "../../VLCBlib_PIC/can18_ecan.c"
 19958 ;; Parameters:    Size  Location     Type
 19959 ;;  index           1    wreg     unsigned char 
 19960 ;; Auto vars:     Size  Location     Type
 19961 ;;  index           1   49[BANK0 ] unsigned char 
 19962 ;; Return value:  Size  Location     Type
 19963 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19964 ;; Registers used:
 19965 ;;		wreg, status,2, status,0
 19966 ;; Tracked objects:
 19967 ;;		On entry : 0/0
 19968 ;;		On exit  : 0/0
 19969 ;;		Unchanged: 0/0
 19970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19971 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19973 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19974 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19975 ;;Total ram usage:        5 bytes
 19976 ;; Hardware stack levels used: 1
 19977 ;; Hardware stack levels required when called: 12
 19978 ;; This function calls:
 19979 ;;		Nothing
 19980 ;; This function is called by:
 19981 ;;		_mnsTRallDiagnosticsCallback
 19982 ;;		_mnsProcessMessage
 19983 ;; This function uses a non-reentrant model
 19984 ;;
 19985                           
 19986                           	psect	text62
 19987   00BBD6                     __ptext62:
 19988                           	callstack 0
 19989   00BBD6                     _canGetDiagnostic:
 19990                           	callstack 15
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;incstack = 0
 19994                           ;canGetDiagnostic@index stored from wreg
 19995   00BBD6  0100               	movlb	0	; () banked
 19996   00BBD8  6F91               	movwf	canGetDiagnostic@index& (0+255),b
 19997                           
 19998                           ;../../VLCBlib_PIC/can18_ecan.c: 434:     if ((index<1) || (index>16)) {
 19999   00BBDA  0100               	movlb	0	; () banked
 20000   00BBDC  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 20001   00BBDE  B4D8               	btfsc	status,2,c
 20002   00BBE0  D003               	goto	u21580
 20003                           
 20004                           ; BSR set to: 0
 20005   00BBE2  0E10               	movlw	16
 20006   00BBE4  6591               	cpfsgt	canGetDiagnostic@index& (0+255),b
 20007   00BBE6  D005               	goto	l20825
 20008   00BBE8                     u21580:
 20009                           
 20010                           ; BSR set to: 0
 20011                           ;../../VLCBlib_PIC/can18_ecan.c: 435:         return ((void*)0);
 20012   00BBE8  0E00               	movlw	0
 20013   00BBEA  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 20014   00BBEC  0E00               	movlw	0
 20015   00BBEE  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20016   00BBF0  0012               	return	
 20017   00BBF2                     l20825:
 20018                           
 20019                           ; BSR set to: 0
 20020                           ;../../VLCBlib_PIC/can18_ecan.c: 437:     return &(canDiagnostics[index-1]);
 20021   00BBF2  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 20022   00BBF4  6F8F               	movwf	??_canGetDiagnostic& (0+255),b
 20023   00BBF6  6B90               	clrf	(??_canGetDiagnostic+1)& (0+255),b
 20024   00BBF8  90D8               	bcf	status,0,c
 20025   00BBFA  378F               	rlcf	??_canGetDiagnostic& (0+255),f,b
 20026   00BBFC  3790               	rlcf	(??_canGetDiagnostic+1)& (0+255),f,b
 20027   00BBFE  0E75               	movlw	low (_canDiagnostics+65534)
 20028   00BC00  258F               	addwf	??_canGetDiagnostic& (0+255),w,b
 20029   00BC02  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 20030   00BC04  0E01               	movlw	high (_canDiagnostics+65534)
 20031   00BC06  2190               	addwfc	(??_canGetDiagnostic+1)& (0+255),w,b
 20032   00BC08  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20033                           
 20034                           ; BSR set to: 0
 20035   00BC0A  0012               	return		;funcret
 20036   00BC0C                     __end_of_canGetDiagnostic:
 20037                           	callstack 0
 20038                           
 20039 ;; *************** function _nvGetDiagnostic *****************
 20040 ;; Defined at:
 20041 ;;		line 149 in file "../../VLCBlib_PIC/nv.c"
 20042 ;; Parameters:    Size  Location     Type
 20043 ;;  index           1    wreg     unsigned char 
 20044 ;; Auto vars:     Size  Location     Type
 20045 ;;  index           1   49[BANK0 ] unsigned char 
 20046 ;; Return value:  Size  Location     Type
 20047 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20048 ;; Registers used:
 20049 ;;		wreg, status,2, status,0
 20050 ;; Tracked objects:
 20051 ;;		On entry : 0/0
 20052 ;;		On exit  : 0/0
 20053 ;;		Unchanged: 0/0
 20054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20057 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20058 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20059 ;;Total ram usage:        5 bytes
 20060 ;; Hardware stack levels used: 1
 20061 ;; Hardware stack levels required when called: 12
 20062 ;; This function calls:
 20063 ;;		Nothing
 20064 ;; This function is called by:
 20065 ;;		_mnsTRallDiagnosticsCallback
 20066 ;;		_mnsProcessMessage
 20067 ;; This function uses a non-reentrant model
 20068 ;;
 20069                           
 20070                           	psect	text63
 20071   00BC0C                     __ptext63:
 20072                           	callstack 0
 20073   00BC0C                     _nvGetDiagnostic:
 20074                           	callstack 15
 20075                           
 20076                           ; BSR set to: 0
 20077                           ;incstack = 0
 20078                           ;nvGetDiagnostic@index stored from wreg
 20079   00BC0C  0100               	movlb	0	; () banked
 20080   00BC0E  6F91               	movwf	nvGetDiagnostic@index& (0+255),b
 20081                           
 20082                           ;../../VLCBlib_PIC/nv.c: 150:     if ((index<1) || (index>2)) {
 20083   00BC10  0100               	movlb	0	; () banked
 20084   00BC12  5191               	movf	nvGetDiagnostic@index& (0+255),w,b
 20085   00BC14  B4D8               	btfsc	status,2,c
 20086   00BC16  D003               	goto	u21510
 20087                           
 20088                           ; BSR set to: 0
 20089   00BC18  0E02               	movlw	2
 20090   00BC1A  6591               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 20091   00BC1C  D005               	goto	l20737
 20092   00BC1E                     u21510:
 20093                           
 20094                           ; BSR set to: 0
 20095                           ;../../VLCBlib_PIC/nv.c: 151:         return ((void*)0);
 20096   00BC1E  0E00               	movlw	0
 20097   00BC20  6F8D               	movwf	?_nvGetDiagnostic& (0+255),b
 20098   00BC22  0E00               	movlw	0
 20099   00BC24  6F8E               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20100   00BC26  0012               	return	
 20101   00BC28                     l20737:
 20102                           
 20103                           ; BSR set to: 0
 20104                           ;../../VLCBlib_PIC/nv.c: 153:     return &(nvDiagnostics[index-1]);
 20105   00BC28  5191               	movf	nvGetDiagnostic@index& (0+255),w,b
 20106   00BC2A  6F8F               	movwf	??_nvGetDiagnostic& (0+255),b
 20107   00BC2C  6B90               	clrf	(??_nvGetDiagnostic+1)& (0+255),b
 20108   00BC2E  90D8               	bcf	status,0,c
 20109   00BC30  378F               	rlcf	??_nvGetDiagnostic& (0+255),f,b
 20110   00BC32  3790               	rlcf	(??_nvGetDiagnostic+1)& (0+255),f,b
 20111   00BC34  0EAA               	movlw	low (_nvDiagnostics+65534)
 20112   00BC36  258F               	addwf	??_nvGetDiagnostic& (0+255),w,b
 20113   00BC38  6F8D               	movwf	?_nvGetDiagnostic& (0+255),b
 20114   00BC3A  0E01               	movlw	high (_nvDiagnostics+65534)
 20115   00BC3C  2190               	addwfc	(??_nvGetDiagnostic+1)& (0+255),w,b
 20116   00BC3E  6F8E               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20117                           
 20118                           ; BSR set to: 0
 20119   00BC40  0012               	return		;funcret
 20120   00BC42                     __end_of_nvGetDiagnostic:
 20121                           	callstack 0
 20122                           
 20123 ;; *************** function _mnsGetDiagnostic *****************
 20124 ;; Defined at:
 20125 ;;		line 783 in file "../../VLCBlib_PIC/mns.c"
 20126 ;; Parameters:    Size  Location     Type
 20127 ;;  index           1    wreg     unsigned char 
 20128 ;; Auto vars:     Size  Location     Type
 20129 ;;  index           1   49[BANK0 ] unsigned char 
 20130 ;; Return value:  Size  Location     Type
 20131 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20132 ;; Registers used:
 20133 ;;		wreg, status,2, status,0
 20134 ;; Tracked objects:
 20135 ;;		On entry : 0/0
 20136 ;;		On exit  : 0/0
 20137 ;;		Unchanged: 0/0
 20138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20141 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20142 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20143 ;;Total ram usage:        5 bytes
 20144 ;; Hardware stack levels used: 1
 20145 ;; Hardware stack levels required when called: 12
 20146 ;; This function calls:
 20147 ;;		Nothing
 20148 ;; This function is called by:
 20149 ;;		_mnsTRallDiagnosticsCallback
 20150 ;;		_mnsProcessMessage
 20151 ;; This function uses a non-reentrant model
 20152 ;;
 20153                           
 20154                           	psect	text64
 20155   00BC42                     __ptext64:
 20156                           	callstack 0
 20157   00BC42                     _mnsGetDiagnostic:
 20158                           	callstack 15
 20159                           
 20160                           ; BSR set to: 0
 20161                           ;incstack = 0
 20162                           ;mnsGetDiagnostic@index stored from wreg
 20163   00BC42  0100               	movlb	0	; () banked
 20164   00BC44  6F91               	movwf	mnsGetDiagnostic@index& (0+255),b
 20165                           
 20166                           ;../../VLCBlib_PIC/mns.c: 784:     if ((index<1) || (index>6)) {
 20167   00BC46  0100               	movlb	0	; () banked
 20168   00BC48  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20169   00BC4A  B4D8               	btfsc	status,2,c
 20170   00BC4C  D003               	goto	u21440
 20171                           
 20172                           ; BSR set to: 0
 20173   00BC4E  0E06               	movlw	6
 20174   00BC50  6591               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 20175   00BC52  D005               	goto	l20673
 20176   00BC54                     u21440:
 20177                           
 20178                           ; BSR set to: 0
 20179                           ;../../VLCBlib_PIC/mns.c: 785:         return ((void*)0);
 20180   00BC54  0E00               	movlw	0
 20181   00BC56  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 20182   00BC58  0E00               	movlw	0
 20183   00BC5A  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20184   00BC5C  0012               	return	
 20185   00BC5E                     l20673:
 20186                           
 20187                           ; BSR set to: 0
 20188                           ;../../VLCBlib_PIC/mns.c: 787:     return &(mnsDiagnostics[index-1]);
 20189   00BC5E  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20190   00BC60  6F8F               	movwf	??_mnsGetDiagnostic& (0+255),b
 20191   00BC62  6B90               	clrf	(??_mnsGetDiagnostic+1)& (0+255),b
 20192   00BC64  90D8               	bcf	status,0,c
 20193   00BC66  378F               	rlcf	??_mnsGetDiagnostic& (0+255),f,b
 20194   00BC68  3790               	rlcf	(??_mnsGetDiagnostic+1)& (0+255),f,b
 20195   00BC6A  0E95               	movlw	low (_mnsDiagnostics+65534)
 20196   00BC6C  258F               	addwf	??_mnsGetDiagnostic& (0+255),w,b
 20197   00BC6E  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 20198   00BC70  0E01               	movlw	high (_mnsDiagnostics+65534)
 20199   00BC72  2190               	addwfc	(??_mnsGetDiagnostic+1)& (0+255),w,b
 20200   00BC74  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20201                           
 20202                           ; BSR set to: 0
 20203   00BC76  0012               	return		;funcret
 20204   00BC78                     __end_of_mnsGetDiagnostic:
 20205                           	callstack 0
 20206                           
 20207 ;; *************** function _ackGetDiagnostic *****************
 20208 ;; Defined at:
 20209 ;;		line 192 in file "../../VLCBlib_PIC/event_acknowledge.c"
 20210 ;; Parameters:    Size  Location     Type
 20211 ;;  index           1    wreg     unsigned char 
 20212 ;; Auto vars:     Size  Location     Type
 20213 ;;  index           1   49[BANK0 ] unsigned char 
 20214 ;; Return value:  Size  Location     Type
 20215 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20216 ;; Registers used:
 20217 ;;		wreg, status,2, status,0
 20218 ;; Tracked objects:
 20219 ;;		On entry : 0/0
 20220 ;;		On exit  : 0/0
 20221 ;;		Unchanged: 0/0
 20222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20225 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20226 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20227 ;;Total ram usage:        5 bytes
 20228 ;; Hardware stack levels used: 1
 20229 ;; Hardware stack levels required when called: 12
 20230 ;; This function calls:
 20231 ;;		Nothing
 20232 ;; This function is called by:
 20233 ;;		_mnsTRallDiagnosticsCallback
 20234 ;;		_mnsProcessMessage
 20235 ;; This function uses a non-reentrant model
 20236 ;;
 20237                           
 20238                           	psect	text65
 20239   00BC78                     __ptext65:
 20240                           	callstack 0
 20241   00BC78                     _ackGetDiagnostic:
 20242                           	callstack 15
 20243                           
 20244                           ; BSR set to: 0
 20245                           ;incstack = 0
 20246                           ;ackGetDiagnostic@index stored from wreg
 20247   00BC78  0100               	movlb	0	; () banked
 20248   00BC7A  6F91               	movwf	ackGetDiagnostic@index& (0+255),b
 20249                           
 20250                           ;../../VLCBlib_PIC/event_acknowledge.c: 193:     if ((index<1) || (index>1)) {
 20251   00BC7C  0100               	movlb	0	; () banked
 20252   00BC7E  5191               	movf	ackGetDiagnostic@index& (0+255),w,b
 20253   00BC80  B4D8               	btfsc	status,2,c
 20254   00BC82  D003               	goto	u21410
 20255                           
 20256                           ; BSR set to: 0
 20257   00BC84  0E01               	movlw	1
 20258   00BC86  6591               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 20259   00BC88  D005               	goto	l20551
 20260   00BC8A                     u21410:
 20261                           
 20262                           ; BSR set to: 0
 20263                           ;../../VLCBlib_PIC/event_acknowledge.c: 194:         return ((void*)0);
 20264   00BC8A  0E00               	movlw	0
 20265   00BC8C  6F8D               	movwf	?_ackGetDiagnostic& (0+255),b
 20266   00BC8E  0E00               	movlw	0
 20267   00BC90  6F8E               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20268   00BC92  0012               	return	
 20269   00BC94                     l20551:
 20270                           
 20271                           ; BSR set to: 0
 20272                           ;../../VLCBlib_PIC/event_acknowledge.c: 196:     return &(ackDiagnostics[index-1]);
 20273   00BC94  5191               	movf	ackGetDiagnostic@index& (0+255),w,b
 20274   00BC96  6F8F               	movwf	??_ackGetDiagnostic& (0+255),b
 20275   00BC98  6B90               	clrf	(??_ackGetDiagnostic+1)& (0+255),b
 20276   00BC9A  90D8               	bcf	status,0,c
 20277   00BC9C  378F               	rlcf	??_ackGetDiagnostic& (0+255),f,b
 20278   00BC9E  3790               	rlcf	(??_ackGetDiagnostic+1)& (0+255),f,b
 20279   00BCA0  0EB2               	movlw	low (_ackDiagnostics+65534)
 20280   00BCA2  258F               	addwf	??_ackGetDiagnostic& (0+255),w,b
 20281   00BCA4  6F8D               	movwf	?_ackGetDiagnostic& (0+255),b
 20282   00BCA6  0E01               	movlw	high (_ackDiagnostics+65534)
 20283   00BCA8  2190               	addwfc	(??_ackGetDiagnostic+1)& (0+255),w,b
 20284   00BCAA  6F8E               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20285                           
 20286                           ; BSR set to: 0
 20287   00BCAC  0012               	return		;funcret
 20288   00BCAE                     __end_of_ackGetDiagnostic:
 20289                           	callstack 0
 20290                           
 20291 ;; *************** function _consumer2QGetDiagnostic *****************
 20292 ;; Defined at:
 20293 ;;		line 345 in file "../event_consumerDualActionQueue.c"
 20294 ;; Parameters:    Size  Location     Type
 20295 ;;  index           1    wreg     unsigned char 
 20296 ;; Auto vars:     Size  Location     Type
 20297 ;;  index           1   49[BANK0 ] unsigned char 
 20298 ;; Return value:  Size  Location     Type
 20299 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20300 ;; Registers used:
 20301 ;;		wreg, status,2, status,0
 20302 ;; Tracked objects:
 20303 ;;		On entry : 0/0
 20304 ;;		On exit  : 0/0
 20305 ;;		Unchanged: 0/0
 20306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20309 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20310 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20311 ;;Total ram usage:        5 bytes
 20312 ;; Hardware stack levels used: 1
 20313 ;; Hardware stack levels required when called: 12
 20314 ;; This function calls:
 20315 ;;		Nothing
 20316 ;; This function is called by:
 20317 ;;		_mnsTRallDiagnosticsCallback
 20318 ;;		_mnsProcessMessage
 20319 ;; This function uses a non-reentrant model
 20320 ;;
 20321                           
 20322                           	psect	text66
 20323   00BCAE                     __ptext66:
 20324                           	callstack 0
 20325   00BCAE                     _consumer2QGetDiagnostic:
 20326                           	callstack 15
 20327                           
 20328                           ; BSR set to: 0
 20329                           ;incstack = 0
 20330                           ;consumer2QGetDiagnostic@index stored from wreg
 20331   00BCAE  0100               	movlb	0	; () banked
 20332   00BCB0  6F91               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 20333                           
 20334                           ;../event_consumerDualActionQueue.c: 346:     if ((index<1) || (index>1)) {
 20335   00BCB2  0100               	movlb	0	; () banked
 20336   00BCB4  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20337   00BCB6  B4D8               	btfsc	status,2,c
 20338   00BCB8  D003               	goto	u20740
 20339                           
 20340                           ; BSR set to: 0
 20341   00BCBA  0E01               	movlw	1
 20342   00BCBC  6591               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 20343   00BCBE  D005               	goto	l20195
 20344   00BCC0                     u20740:
 20345                           
 20346                           ; BSR set to: 0
 20347                           ;../event_consumerDualActionQueue.c: 347:         return ((void*)0);
 20348   00BCC0  0E00               	movlw	0
 20349   00BCC2  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20350   00BCC4  0E00               	movlw	0
 20351   00BCC6  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20352   00BCC8  0012               	return	
 20353   00BCCA                     l20195:
 20354                           
 20355                           ; BSR set to: 0
 20356                           ;../event_consumerDualActionQueue.c: 349:     return &(consumer2QDiagnostics[index-1]);
 20357   00BCCA  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20358   00BCCC  6F8F               	movwf	??_consumer2QGetDiagnostic& (0+255),b
 20359   00BCCE  6B90               	clrf	(??_consumer2QGetDiagnostic+1)& (0+255),b
 20360   00BCD0  90D8               	bcf	status,0,c
 20361   00BCD2  378F               	rlcf	??_consumer2QGetDiagnostic& (0+255),f,b
 20362   00BCD4  3790               	rlcf	(??_consumer2QGetDiagnostic+1)& (0+255),f,b
 20363   00BCD6  0EB4               	movlw	low (_consumer2QDiagnostics+65534)
 20364   00BCD8  258F               	addwf	??_consumer2QGetDiagnostic& (0+255),w,b
 20365   00BCDA  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20366   00BCDC  0E01               	movlw	high (_consumer2QDiagnostics+65534)
 20367   00BCDE  2190               	addwfc	(??_consumer2QGetDiagnostic+1)& (0+255),w,b
 20368   00BCE0  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20369                           
 20370                           ; BSR set to: 0
 20371   00BCE2  0012               	return		;funcret
 20372   00BCE4                     __end_of_consumer2QGetDiagnostic:
 20373                           	callstack 0
 20374                           
 20375 ;; *************** function _teachGetDiagnostic *****************
 20376 ;; Defined at:
 20377 ;;		line 542 in file "../../VLCBlib_PIC/event_teach_large.c"
 20378 ;; Parameters:    Size  Location     Type
 20379 ;;  index           1    wreg     unsigned char 
 20380 ;; Auto vars:     Size  Location     Type
 20381 ;;  index           1   49[BANK0 ] unsigned char 
 20382 ;; Return value:  Size  Location     Type
 20383 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20384 ;; Registers used:
 20385 ;;		wreg, status,2, status,0
 20386 ;; Tracked objects:
 20387 ;;		On entry : 0/0
 20388 ;;		On exit  : 0/0
 20389 ;;		Unchanged: 0/0
 20390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20393 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20394 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20395 ;;Total ram usage:        5 bytes
 20396 ;; Hardware stack levels used: 1
 20397 ;; Hardware stack levels required when called: 12
 20398 ;; This function calls:
 20399 ;;		Nothing
 20400 ;; This function is called by:
 20401 ;;		_mnsTRallDiagnosticsCallback
 20402 ;;		_mnsProcessMessage
 20403 ;; This function uses a non-reentrant model
 20404 ;;
 20405                           
 20406                           	psect	text67
 20407   00BCE4                     __ptext67:
 20408                           	callstack 0
 20409   00BCE4                     _teachGetDiagnostic:
 20410                           	callstack 15
 20411                           
 20412                           ; BSR set to: 0
 20413                           ;incstack = 0
 20414                           ;teachGetDiagnostic@index stored from wreg
 20415   00BCE4  0100               	movlb	0	; () banked
 20416   00BCE6  6F91               	movwf	teachGetDiagnostic@index& (0+255),b
 20417                           
 20418                           ;../../VLCBlib_PIC/event_teach_large.c: 543:     if ((index<1) || (index>1)) {
 20419   00BCE8  0100               	movlb	0	; () banked
 20420   00BCEA  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 20421   00BCEC  B4D8               	btfsc	status,2,c
 20422   00BCEE  D003               	goto	u21620
 20423                           
 20424                           ; BSR set to: 0
 20425   00BCF0  0E01               	movlw	1
 20426   00BCF2  6591               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 20427   00BCF4  D005               	goto	l20859
 20428   00BCF6                     u21620:
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;../../VLCBlib_PIC/event_teach_large.c: 544:         return ((void*)0);
 20432   00BCF6  0E00               	movlw	0
 20433   00BCF8  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 20434   00BCFA  0E00               	movlw	0
 20435   00BCFC  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20436   00BCFE  0012               	return	
 20437   00BD00                     l20859:
 20438                           
 20439                           ; BSR set to: 0
 20440                           ;../../VLCBlib_PIC/event_teach_large.c: 546:     return &(teachDiagnostics[index-1]);
 20441   00BD00  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 20442   00BD02  6F8F               	movwf	??_teachGetDiagnostic& (0+255),b
 20443   00BD04  6B90               	clrf	(??_teachGetDiagnostic+1)& (0+255),b
 20444   00BD06  90D8               	bcf	status,0,c
 20445   00BD08  378F               	rlcf	??_teachGetDiagnostic& (0+255),f,b
 20446   00BD0A  3790               	rlcf	(??_teachGetDiagnostic+1)& (0+255),f,b
 20447   00BD0C  0EB0               	movlw	low (_teachDiagnostics+65534)
 20448   00BD0E  258F               	addwf	??_teachGetDiagnostic& (0+255),w,b
 20449   00BD10  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 20450   00BD12  0E01               	movlw	high (_teachDiagnostics+65534)
 20451   00BD14  2190               	addwfc	(??_teachGetDiagnostic+1)& (0+255),w,b
 20452   00BD16  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20453                           
 20454                           ; BSR set to: 0
 20455   00BD18  0012               	return		;funcret
 20456   00BD1A                     __end_of_teachGetDiagnostic:
 20457                           	callstack 0
 20458                           
 20459 ;; *************** function _sendMessage6 *****************
 20460 ;; Defined at:
 20461 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 20462 ;; Parameters:    Size  Location     Type
 20463 ;;  opc             1    wreg     enum E12392
 20464 ;;  data1           1    8[BANK1 ] unsigned char 
 20465 ;;  data2           1    9[BANK1 ] unsigned char 
 20466 ;;  data3           1   10[BANK1 ] unsigned char 
 20467 ;;  data4           1   11[BANK1 ] unsigned char 
 20468 ;;  data5           1   12[BANK1 ] unsigned char 
 20469 ;;  data6           1   13[BANK1 ] unsigned char 
 20470 ;; Auto vars:     Size  Location     Type
 20471 ;;  opc             1   69[BANK0 ] enum E12392
 20472 ;; Return value:  Size  Location     Type
 20473 ;;                  1    wreg      void 
 20474 ;; Registers used:
 20475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20476 ;; Tracked objects:
 20477 ;;		On entry : 0/0
 20478 ;;		On exit  : 0/0
 20479 ;;		Unchanged: 0/0
 20480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20481 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20484 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20485 ;;Total ram usage:        7 bytes
 20486 ;; Hardware stack levels used: 1
 20487 ;; Hardware stack levels required when called: 15
 20488 ;; This function calls:
 20489 ;;		_sendMessage
 20490 ;; This function is called by:
 20491 ;;		_mnsProcessMessage
 20492 ;;		_mnsTRallDiagnosticsCallback
 20493 ;;		_doReqev
 20494 ;;		_reqevCallback
 20495 ;; This function uses a non-reentrant model
 20496 ;;
 20497                           
 20498                           	psect	text68
 20499   00BDAA                     __ptext68:
 20500                           	callstack 0
 20501   00BDAA                     _sendMessage6:
 20502                           	callstack 12
 20503                           
 20504                           ; BSR set to: 0
 20505                           ;incstack = 0
 20506                           ;sendMessage6@opc stored from wreg
 20507   00BDAA  0100               	movlb	0	; () banked
 20508   00BDAC  6FA5               	movwf	sendMessage6@opc& (0+255),b
 20509                           
 20510                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 20511   00BDAE  0E07               	movlw	7
 20512   00BDB0  0101               	movlb	1	; () banked
 20513   00BDB2  6FB8               	movwf	sendMessage@len& (0+255),b
 20514   00BDB4  C1C0  F1B9         	movff	sendMessage6@data1,sendMessage@data1
 20515   00BDB8  C1C1  F1BA         	movff	sendMessage6@data2,sendMessage@data2
 20516   00BDBC  C1C2  F1BB         	movff	sendMessage6@data3,sendMessage@data3
 20517   00BDC0  C1C3  F1BC         	movff	sendMessage6@data4,sendMessage@data4
 20518   00BDC4  C1C4  F1BD         	movff	sendMessage6@data5,sendMessage@data5
 20519   00BDC8  C1C5  F1BE         	movff	sendMessage6@data6,sendMessage@data6
 20520   00BDCC  0E00               	movlw	0
 20521   00BDCE  6FBF               	movwf	sendMessage@data7& (0+255),b
 20522   00BDD0  0100               	movlb	0	; () banked
 20523   00BDD2  51A5               	movf	sendMessage6@opc& (0+255),w,b
 20524   00BDD4  ECD1  F053         	call	_sendMessage
 20525   00BDD8  0012               	return		;funcret
 20526   00BDDA                     __end_of_sendMessage6:
 20527                           	callstack 0
 20528                           
 20529 ;; *************** function _sendMessage3 *****************
 20530 ;; Defined at:
 20531 ;;		line 1154 in file "../../VLCBlib_PIC/vlcb.c"
 20532 ;; Parameters:    Size  Location     Type
 20533 ;;  opc             1    wreg     enum E12392
 20534 ;;  data1           1   69[BANK0 ] unsigned char 
 20535 ;;  data2           1   70[BANK0 ] unsigned char 
 20536 ;;  data3           1   71[BANK0 ] unsigned char 
 20537 ;; Auto vars:     Size  Location     Type
 20538 ;;  opc             1   72[BANK0 ] enum E12392
 20539 ;; Return value:  Size  Location     Type
 20540 ;;                  1    wreg      void 
 20541 ;; Registers used:
 20542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20543 ;; Tracked objects:
 20544 ;;		On entry : 0/0
 20545 ;;		On exit  : 0/0
 20546 ;;		Unchanged: 0/0
 20547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20548 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20552 ;;Total ram usage:        4 bytes
 20553 ;; Hardware stack levels used: 1
 20554 ;; Hardware stack levels required when called: 15
 20555 ;; This function calls:
 20556 ;;		_sendMessage
 20557 ;; This function is called by:
 20558 ;;		_mnsProcessMessage
 20559 ;;		_nvProcessMessage
 20560 ;;		_teachProcessMessage
 20561 ;;		_doNnevn
 20562 ;;		_doNenrd
 20563 ;;		_doRqevn
 20564 ;;		_doEvlrn
 20565 ;;		_doReval
 20566 ;;		_doEvuln
 20567 ;;		_doReqev
 20568 ;;		_producerProcessMessage
 20569 ;; This function uses a non-reentrant model
 20570 ;;
 20571                           
 20572                           	psect	text69
 20573   00BDDA                     __ptext69:
 20574                           	callstack 0
 20575   00BDDA                     _sendMessage3:
 20576                           	callstack 13
 20577                           
 20578                           ;incstack = 0
 20579                           ;sendMessage3@opc stored from wreg
 20580   00BDDA  0100               	movlb	0	; () banked
 20581   00BDDC  6FA8               	movwf	sendMessage3@opc& (0+255),b
 20582                           
 20583                           ;../../VLCBlib_PIC/vlcb.c: 1155:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 20584   00BDDE  0E04               	movlw	4
 20585   00BDE0  0101               	movlb	1	; () banked
 20586   00BDE2  6FB8               	movwf	sendMessage@len& (0+255),b
 20587   00BDE4  C0A5  F1B9         	movff	sendMessage3@data1,sendMessage@data1
 20588   00BDE8  C0A6  F1BA         	movff	sendMessage3@data2,sendMessage@data2
 20589   00BDEC  C0A7  F1BB         	movff	sendMessage3@data3,sendMessage@data3
 20590   00BDF0  0E00               	movlw	0
 20591   00BDF2  6FBC               	movwf	sendMessage@data4& (0+255),b
 20592   00BDF4  0E00               	movlw	0
 20593   00BDF6  6FBD               	movwf	sendMessage@data5& (0+255),b
 20594   00BDF8  0E00               	movlw	0
 20595   00BDFA  6FBE               	movwf	sendMessage@data6& (0+255),b
 20596   00BDFC  0E00               	movlw	0
 20597   00BDFE  6FBF               	movwf	sendMessage@data7& (0+255),b
 20598   00BE00  0100               	movlb	0	; () banked
 20599   00BE02  51A8               	movf	sendMessage3@opc& (0+255),w,b
 20600   00BE04  ECD1  F053         	call	_sendMessage
 20601   00BE08  0012               	return		;funcret
 20602   00BE0A                     __end_of_sendMessage3:
 20603                           	callstack 0
 20604                           
 20605 ;; *************** function _getParameter *****************
 20606 ;; Defined at:
 20607 ;;		line 813 in file "../../VLCBlib_PIC/mns.c"
 20608 ;; Parameters:    Size  Location     Type
 20609 ;;  idx             1    wreg     unsigned char 
 20610 ;; Auto vars:     Size  Location     Type
 20611 ;;  idx             1   50[BANK0 ] unsigned char 
 20612 ;;  i               1    0        unsigned char 
 20613 ;; Return value:  Size  Location     Type
 20614 ;;                  1    wreg      unsigned char 
 20615 ;; Registers used:
 20616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20617 ;; Tracked objects:
 20618 ;;		On entry : 0/0
 20619 ;;		On exit  : 0/0
 20620 ;;		Unchanged: 0/0
 20621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20625 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20626 ;;Total ram usage:        1 bytes
 20627 ;; Hardware stack levels used: 1
 20628 ;; Hardware stack levels required when called: 14
 20629 ;; This function calls:
 20630 ;;		_getParameterFlags
 20631 ;;		_have
 20632 ;; This function is called by:
 20633 ;;		_mnsProcessMessage
 20634 ;;		_mnsTRrqnpnCallback
 20635 ;; This function uses a non-reentrant model
 20636 ;;
 20637                           
 20638                           	psect	text70
 20639   00865C                     __ptext70:
 20640                           	callstack 0
 20641   00865C                     _getParameter:
 20642                           	callstack 13
 20643                           
 20644                           ;incstack = 0
 20645                           ;getParameter@idx stored from wreg
 20646   00865C  0100               	movlb	0	; () banked
 20647   00865E  6F92               	movwf	getParameter@idx& (0+255),b
 20648                           
 20649                           ;../../VLCBlib_PIC/mns.c: 814:     uint8_t i;;../../VLCBlib_PIC/mns.c: 815:     switch(i
      +                          dx) {
 20650   008660  D031               	goto	l20661
 20651   008662                     l20573:
 20652                           
 20653                           ; BSR set to: 0
 20654                           ;../../VLCBlib_PIC/mns.c: 817:         return 20;
 20655   008662  0E14               	movlw	20
 20656   008664  0012               	return	
 20657   008666                     l20577:
 20658                           
 20659                           ; BSR set to: 0
 20660                           ;../../VLCBlib_PIC/mns.c: 819:         return MANU_MERG;
 20661   008666  0EA5               	movlw	165
 20662   008668  0012               	return	
 20663   00866A                     l20581:
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;../../VLCBlib_PIC/mns.c: 821:         return 'a';
 20667   00866A  0E61               	movlw	97
 20668   00866C  0012               	return	
 20669   00866E                     l20585:
 20670                           
 20671                           ; BSR set to: 0
 20672                           ;../../VLCBlib_PIC/mns.c: 823:         return MTYP_CANMIO;
 20673   00866E  0E20               	movlw	32
 20674   008670  0012               	return	
 20675   008672                     l20589:
 20676                           
 20677                           ; BSR set to: 0
 20678                           ;../../VLCBlib_PIC/mns.c: 825:         return 255;
 20679   008672  0EFF               	movlw	255
 20680   008674  0012               	return	
 20681   008676                     l20597:
 20682                           
 20683                           ; BSR set to: 0
 20684                           ;../../VLCBlib_PIC/mns.c: 829:         return (15+7*16);
 20685   008676  0E7F               	movlw	127
 20686   008678  0012               	return	
 20687   00867A                     l20601:
 20688                           
 20689                           ; BSR set to: 0
 20690                           ;../../VLCBlib_PIC/mns.c: 831:         return 4;
 20691   00867A  0E04               	movlw	4
 20692   00867C  0012               	return	
 20693   00867E                     l20605:
 20694                           
 20695                           ; BSR set to: 0
 20696                           ;../../VLCBlib_PIC/mns.c: 833:         return getParameterFlags();
 20697   00867E  ECAA  F059         	call	_getParameterFlags	;wreg free
 20698   008682  0012               	return	
 20699   008684                     l20609:
 20700                           
 20701                           ; BSR set to: 0
 20702                           ;../../VLCBlib_PIC/mns.c: 835:         return P18F26K80;
 20703   008684  0E0F               	movlw	15
 20704   008686  0012               	return	
 20705   008688                     l20613:
 20706                           
 20707                           ; BSR set to: 0
 20708                           ;../../VLCBlib_PIC/mns.c: 837:         if (have(SERVICE_ID_CAN)) {
 20709   008688  0E03               	movlw	3
 20710   00868A  ECED  F055         	call	_have
 20711   00868E  0900               	iorlw	0
 20712   008690  B4D8               	btfsc	status,2,c
 20713   008692  D002               	goto	l20619
 20714   008694                     u21420:
 20715                           
 20716                           ;../../VLCBlib_PIC/mns.c: 838:             return PB_CAN;
 20717   008694  0E01               	movlw	1
 20718   008696  0012               	return	
 20719   008698                     l20619:
 20720                           
 20721                           ;../../VLCBlib_PIC/mns.c: 840:         return 0;
 20722   008698  0E00               	movlw	0
 20723   00869A  0012               	return	
 20724   00869C                     l20627:
 20725                           
 20726                           ; BSR set to: 0
 20727                           ;../../VLCBlib_PIC/mns.c: 844:         return 0x08;
 20728   00869C  0E08               	movlw	8
 20729   00869E  0012               	return	
 20730   0086A0                     l20639:
 20731                           
 20732                           ; BSR set to: 0
 20733                           ;../../VLCBlib_PIC/mns.c: 856:         return *(const uint8_t*)0x3FFFFE;
 20734   0086A0  0EFE               	movlw	254
 20735   0086A2  6EF6               	movwf	tblptrl,c
 20736   0086A4                     	if	1	;There is more than 1 active tblptr byte
 20737   0086A4  0EFF               	movlw	255
 20738   0086A6  6EF7               	movwf	tblptrh,c
 20739   0086A8                     	endif
 20740   0086A8                     	if	1	;There are 3 active tblptr bytes
 20741   0086A8  0E3F               	movlw	63
 20742   0086AA  6EF8               	movwf	tblptru,c
 20743   0086AC                     	endif
 20744   0086AC  0008               	tblrd		*
 20745   0086AE  50F5               	movf	tablat,w,c
 20746   0086B0  0012               	return	
 20747   0086B2                     l20643:
 20748                           
 20749                           ; BSR set to: 0
 20750                           ;../../VLCBlib_PIC/mns.c: 858:         return *(const uint8_t*)0x3FFFFF;
 20751   0086B2  0EFF               	movlw	255
 20752   0086B4  6EF6               	movwf	tblptrl,c
 20753   0086B6                     	if	1	;There is more than 1 active tblptr byte
 20754   0086B6  0EFF               	movlw	255
 20755   0086B8  6EF7               	movwf	tblptrh,c
 20756   0086BA                     	endif
 20757   0086BA                     	if	1	;There are 3 active tblptr bytes
 20758   0086BA  0E3F               	movlw	63
 20759   0086BC  6EF8               	movwf	tblptru,c
 20760   0086BE                     	endif
 20761   0086BE  0008               	tblrd		*
 20762   0086C0  50F5               	movf	tablat,w,c
 20763   0086C2  0012               	return	
 20764   0086C4                     l20661:
 20765   0086C4  0100               	movlb	0	; () banked
 20766   0086C6  5192               	movf	getParameter@idx& (0+255),w,b
 20767                           
 20768                           ; Switch size 1, requested type "simple"
 20769                           ; Number of cases is 19, Range of values is 0 to 20
 20770                           ; switch strategies available:
 20771                           ; Name         Instructions Cycles
 20772                           ; simple_byte           58    30 (average)
 20773                           ;	Chosen strategy is simple_byte
 20774   0086C8  0A00               	xorlw	0	; case 0
 20775   0086CA  B4D8               	btfsc	status,2,c
 20776   0086CC  D7CA               	goto	l20573
 20777   0086CE  0A01               	xorlw	1	; case 1
 20778   0086D0  B4D8               	btfsc	status,2,c
 20779   0086D2  D7C9               	goto	l20577
 20780   0086D4  0A03               	xorlw	3	; case 2
 20781   0086D6  B4D8               	btfsc	status,2,c
 20782   0086D8  D7C8               	goto	l20581
 20783   0086DA  0A01               	xorlw	1	; case 3
 20784   0086DC  B4D8               	btfsc	status,2,c
 20785   0086DE  D7C7               	goto	l20585
 20786   0086E0  0A07               	xorlw	7	; case 4
 20787   0086E2  B4D8               	btfsc	status,2,c
 20788   0086E4  D7C6               	goto	l20589
 20789   0086E6  0A01               	xorlw	1	; case 5
 20790   0086E8  B4D8               	btfsc	status,2,c
 20791   0086EA  D7BB               	goto	l20573
 20792   0086EC  0A03               	xorlw	3	; case 6
 20793   0086EE  B4D8               	btfsc	status,2,c
 20794   0086F0  D7C2               	goto	l20597
 20795   0086F2  0A01               	xorlw	1	; case 7
 20796   0086F4  B4D8               	btfsc	status,2,c
 20797   0086F6  D7C1               	goto	l20601
 20798   0086F8  0A0F               	xorlw	15	; case 8
 20799   0086FA  B4D8               	btfsc	status,2,c
 20800   0086FC  D7C0               	goto	l20605
 20801   0086FE  0A01               	xorlw	1	; case 9
 20802   008700  B4D8               	btfsc	status,2,c
 20803   008702  D7C0               	goto	l20609
 20804   008704  0A03               	xorlw	3	; case 10
 20805   008706  B4D8               	btfsc	status,2,c
 20806   008708  D7BF               	goto	l20613
 20807   00870A  0A01               	xorlw	1	; case 11
 20808   00870C  B4D8               	btfsc	status,2,c
 20809   00870E  D7C4               	goto	l20619
 20810   008710  0A07               	xorlw	7	; case 12
 20811   008712  B4D8               	btfsc	status,2,c
 20812   008714  D7C3               	goto	l20627
 20813   008716  0A01               	xorlw	1	; case 13
 20814   008718  B4D8               	btfsc	status,2,c
 20815   00871A  D7BE               	goto	l20619
 20816   00871C  0A03               	xorlw	3	; case 14
 20817   00871E  B4D8               	btfsc	status,2,c
 20818   008720  D7BB               	goto	l20619
 20819   008722  0A1F               	xorlw	31	; case 17
 20820   008724  B4D8               	btfsc	status,2,c
 20821   008726  D7BC               	goto	l20639
 20822   008728  0A03               	xorlw	3	; case 18
 20823   00872A  B4D8               	btfsc	status,2,c
 20824   00872C  D7C2               	goto	l20643
 20825   00872E  0A01               	xorlw	1	; case 19
 20826   008730  B4D8               	btfsc	status,2,c
 20827   008732  D7B0               	goto	u21420
 20828   008734  0A07               	xorlw	7	; case 20
 20829   008736  B4D8               	btfsc	status,2,c
 20830   008738  D7AD               	goto	u21420
 20831   00873A  D7AE               	goto	l20619
 20832   00873C                     __end_of_getParameter:
 20833                           	callstack 0
 20834                           
 20835 ;; *************** function _getParameterFlags *****************
 20836 ;; Defined at:
 20837 ;;		line 597 in file "../../VLCBlib_PIC/mns.c"
 20838 ;; Parameters:    Size  Location     Type
 20839 ;;		None
 20840 ;; Auto vars:     Size  Location     Type
 20841 ;;  flags           1   49[BANK0 ] unsigned char 
 20842 ;; Return value:  Size  Location     Type
 20843 ;;                  1    wreg      unsigned char 
 20844 ;; Registers used:
 20845 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20846 ;; Tracked objects:
 20847 ;;		On entry : 0/0
 20848 ;;		On exit  : 0/0
 20849 ;;		Unchanged: 0/0
 20850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20854 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20855 ;;Total ram usage:        1 bytes
 20856 ;; Hardware stack levels used: 1
 20857 ;; Hardware stack levels required when called: 13
 20858 ;; This function calls:
 20859 ;;		_have
 20860 ;; This function is called by:
 20861 ;;		_mnsProcessMessage
 20862 ;;		_getParameter
 20863 ;; This function uses a non-reentrant model
 20864 ;;
 20865                           
 20866                           	psect	text71
 20867   00B354                     __ptext71:
 20868                           	callstack 0
 20869   00B354                     _getParameterFlags:
 20870                           	callstack 13
 20871                           
 20872                           ;../../VLCBlib_PIC/mns.c: 598:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 599:     flag
      +                          s = 0;
 20873                           
 20874                           ;incstack = 0
 20875   00B354  0E00               	movlw	0
 20876   00B356  0100               	movlb	0	; () banked
 20877   00B358  6F91               	movwf	getParameterFlags@flags& (0+255),b
 20878                           
 20879                           ; BSR set to: 0
 20880                           ;../../VLCBlib_PIC/mns.c: 600:     if (have(SERVICE_ID_CONSUMER)) {
 20881   00B35A  0E06               	movlw	6
 20882   00B35C  ECED  F055         	call	_have
 20883   00B360  0900               	iorlw	0
 20884   00B362  B4D8               	btfsc	status,2,c
 20885   00B364  D002               	goto	l19853
 20886                           
 20887                           ;../../VLCBlib_PIC/mns.c: 601:         flags |= 1;
 20888   00B366  0100               	movlb	0	; () banked
 20889   00B368  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 20890   00B36A                     l19853:
 20891                           
 20892                           ;../../VLCBlib_PIC/mns.c: 603:     if (have(SERVICE_ID_PRODUCER)) {
 20893   00B36A  0E05               	movlw	5
 20894   00B36C  ECED  F055         	call	_have
 20895   00B370  0900               	iorlw	0
 20896   00B372  B4D8               	btfsc	status,2,c
 20897   00B374  D002               	goto	l19857
 20898                           
 20899                           ;../../VLCBlib_PIC/mns.c: 604:         flags |= 2;
 20900   00B376  0100               	movlb	0	; () banked
 20901   00B378  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 20902   00B37A                     l19857:
 20903                           
 20904                           ;../../VLCBlib_PIC/mns.c: 606:     if (flags == (2 | 1)) flags |= 16;
 20905   00B37A  0E03               	movlw	3
 20906   00B37C  0100               	movlb	0	; () banked
 20907   00B37E  1991               	xorwf	getParameterFlags@flags& (0+255),w,b
 20908   00B380  B4D8               	btfsc	status,2,c
 20909                           
 20910                           ; BSR set to: 0
 20911   00B382  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 20912                           
 20913                           ; BSR set to: 0
 20914                           ;../../VLCBlib_PIC/mns.c: 607:     if (have(SERVICE_ID_BOOT)) {
 20915   00B384  0E0A               	movlw	10
 20916   00B386  ECED  F055         	call	_have
 20917   00B38A  0900               	iorlw	0
 20918   00B38C  B4D8               	btfsc	status,2,c
 20919   00B38E  D002               	goto	l19865
 20920                           
 20921                           ;../../VLCBlib_PIC/mns.c: 608:         flags |= 8;
 20922   00B390  0100               	movlb	0	; () banked
 20923   00B392  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 20924   00B394                     l19865:
 20925                           
 20926                           ;../../VLCBlib_PIC/mns.c: 610:     if (mode_flags & 1) {
 20927   00B394  0101               	movlb	1	; () banked
 20928   00B396  A176               	btfss	_mode_flags& (0+255),0,b
 20929   00B398  D002               	goto	l19869
 20930                           
 20931                           ; BSR set to: 1
 20932                           ;../../VLCBlib_PIC/mns.c: 611:         flags |= 32;
 20933   00B39A  0100               	movlb	0	; () banked
 20934   00B39C  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 20935   00B39E                     l19869:
 20936                           
 20937                           ;../../VLCBlib_PIC/mns.c: 613:     if (mode_state == MODE_NORMAL) {
 20938   00B39E  0100               	movlb	0	; () banked
 20939   00B3A0  05C8               	decf	_mode_state& (0+255),w,b
 20940   00B3A2  B4D8               	btfsc	status,2,c
 20941                           
 20942                           ; BSR set to: 0
 20943                           ;../../VLCBlib_PIC/mns.c: 614:         flags |= 4;
 20944   00B3A4  8591               	bsf	getParameterFlags@flags& (0+255),2,b
 20945                           
 20946                           ; BSR set to: 0
 20947                           ;../../VLCBlib_PIC/mns.c: 617:     flags |= 64;
 20948                           
 20949                           ;../../VLCBlib_PIC/mns.c: 615:     }
 20950   00B3A6  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 20951                           
 20952                           ; BSR set to: 0
 20953                           ;../../VLCBlib_PIC/mns.c: 619:     return flags;
 20954   00B3A8  5191               	movf	getParameterFlags@flags& (0+255),w,b
 20955                           
 20956                           ; BSR set to: 0
 20957   00B3AA  0012               	return		;funcret
 20958   00B3AC                     __end_of_getParameterFlags:
 20959                           	callstack 0
 20960                           
 20961 ;; *************** function _mnsPoll *****************
 20962 ;; Defined at:
 20963 ;;		line 638 in file "../../VLCBlib_PIC/mns.c"
 20964 ;; Parameters:    Size  Location     Type
 20965 ;;		None
 20966 ;; Auto vars:     Size  Location     Type
 20967 ;;		None
 20968 ;; Return value:  Size  Location     Type
 20969 ;;                  1    wreg      void 
 20970 ;; Registers used:
 20971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20972 ;; Tracked objects:
 20973 ;;		On entry : 0/0
 20974 ;;		On exit  : 0/0
 20975 ;;		Unchanged: 0/0
 20976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20979 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20980 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20981 ;;Total ram usage:        4 bytes
 20982 ;; Hardware stack levels used: 1
 20983 ;; Hardware stack levels required when called: 18
 20984 ;; This function calls:
 20985 ;;		_sendMessage2
 20986 ;;		_sendMessage5
 20987 ;;		_setLEDsByMode
 20988 ;;		_tickGet
 20989 ;;		_writeNVM
 20990 ;; This function is called by:
 20991 ;;		_poll
 20992 ;; This function uses a non-reentrant model
 20993 ;;
 20994                           
 20995                           	psect	text72
 20996   0042D0                     __ptext72:
 20997                           	callstack 0
 20998   0042D0                     _mnsPoll:
 20999                           	callstack 11
 21000                           
 21001                           ;../../VLCBlib_PIC/mns.c: 641:     if (mode_state == MODE_NORMAL) {
 21002                           
 21003                           ; BSR set to: 0
 21004                           ;incstack = 0
 21005   0042D0  0100               	movlb	0	; () banked
 21006   0042D2  05C8               	decf	_mode_state& (0+255),w,b
 21007   0042D4  A4D8               	btfss	status,2,c
 21008   0042D6  D03F               	goto	l23411
 21009                           
 21010                           ; BSR set to: 0
 21011                           ;../../VLCBlib_PIC/mns.c: 642:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 21012   0042D8  ECD6  F059         	call	_tickGet	;wreg free
 21013   0042DC  0101               	movlb	1	; () banked
 21014   0042DE  5160               	movf	_heartbeatTimer& (0+255),w,b
 21015   0042E0  0100               	movlb	0	; () banked
 21016   0042E2  5D8D               	subwf	?_tickGet& (0+255),w,b
 21017   0042E4  0101               	movlb	1	; () banked
 21018   0042E6  6FC5               	movwf	??_mnsPoll& (0+255),b
 21019   0042E8  5161               	movf	(_heartbeatTimer+1)& (0+255),w,b
 21020   0042EA  0100               	movlb	0	; () banked
 21021   0042EC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21022   0042EE  0101               	movlb	1	; () banked
 21023   0042F0  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21024   0042F2  5162               	movf	(_heartbeatTimer+2)& (0+255),w,b
 21025   0042F4  0100               	movlb	0	; () banked
 21026   0042F6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21027   0042F8  0101               	movlb	1	; () banked
 21028   0042FA  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21029   0042FC  5163               	movf	(_heartbeatTimer+3)& (0+255),w,b
 21030   0042FE  0100               	movlb	0	; () banked
 21031   004300  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21032   004302  0101               	movlb	1	; () banked
 21033   004304  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21034   004306  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21035   004308  E108               	bnz	u25090
 21036   00430A  0EB5               	movlw	181
 21037   00430C  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21038   00430E  0EC4               	movlw	196
 21039   004310  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21040   004312  0E04               	movlw	4
 21041   004314  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21042   004316  A0D8               	btfss	status,0,c
 21043   004318  D01E               	goto	l23411
 21044   00431A                     u25090:
 21045                           
 21046                           ; BSR set to: 1
 21047                           ;../../VLCBlib_PIC/mns.c: 643:             if (mode_flags & 4) {
 21048   00431A  A576               	btfss	_mode_flags& (0+255),2,b
 21049   00431C  D00E               	goto	l23405
 21050                           
 21051                           ; BSR set to: 1
 21052                           ;../../VLCBlib_PIC/mns.c: 644:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x00].asBytes.lo,0);
 21053   00431E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 21054   004322  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 21055   004326  C045  F1C2         	movff	_heartbeatSequence,sendMessage5@data3
 21056   00432A  C197  F1C3         	movff	_mnsDiagnostics,sendMessage5@data4
 21057   00432E  0E00               	movlw	0
 21058   004330  6FC4               	movwf	sendMessage5@data5& (0+255),b
 21059   004332  0EAB               	movlw	171
 21060   004334  EC35  F05F         	call	_sendMessage5
 21061   004338  2A45               	incf	_heartbeatSequence^0,f,c
 21062   00433A                     l23405:
 21063                           
 21064                           ;../../VLCBlib_PIC/mns.c: 646:             heartbeatTimer.val = tickGet();
 21065   00433A  ECD6  F059         	call	_tickGet	;wreg free
 21066   00433E  C08D  F160         	movff	?_tickGet,_heartbeatTimer
 21067   004342  C08E  F161         	movff	?_tickGet+1,_heartbeatTimer+1
 21068   004346  C08F  F162         	movff	?_tickGet+2,_heartbeatTimer+2
 21069   00434A  C090  F163         	movff	?_tickGet+3,_heartbeatTimer+3
 21070                           
 21071                           ;../../VLCBlib_PIC/mns.c: 647:             if (mnsDiagnostics[0x00].asBytes.lo > 0) {
 21072   00434E  0101               	movlb	1	; () banked
 21073   004350  5197               	movf	_mnsDiagnostics& (0+255),w,b
 21074   004352  A4D8               	btfss	status,2,c
 21075                           
 21076                           ; BSR set to: 1
 21077                           ;../../VLCBlib_PIC/mns.c: 648:                 mnsDiagnostics[0x00].asBytes.lo--;
 21078   004354  0797               	decf	_mnsDiagnostics& (0+255),f,b
 21079   004356                     l23411:
 21080                           
 21081                           ;../../VLCBlib_PIC/mns.c: 655:     if (mode_flags != last_mode_flags) {
 21082   004356  5046               	movf	_last_mode_flags^0,w,c
 21083   004358  0101               	movlb	1	; () banked
 21084   00435A  1976               	xorwf	_mode_flags& (0+255),w,b
 21085   00435C  B4D8               	btfsc	status,2,c
 21086   00435E  D00E               	goto	l23417
 21087                           
 21088                           ; BSR set to: 1
 21089                           ;../../VLCBlib_PIC/mns.c: 656:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 21090   004360  0EF9               	movlw	249
 21091   004362  0100               	movlb	0	; () banked
 21092   004364  6FA4               	movwf	writeNVM@index& (0+255),b
 21093   004366  0E03               	movlw	3
 21094   004368  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21095   00436A  0E00               	movlw	0
 21096   00436C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21097   00436E  C176  F0A7         	movff	_mode_flags,writeNVM@value
 21098   004372  0E00               	movlw	0
 21099   004374  EC52  F05B         	call	_writeNVM
 21100                           
 21101                           ;../../VLCBlib_PIC/mns.c: 657:         last_mode_flags = mode_flags;
 21102   004378  C176  F046         	movff	_mode_flags,_last_mode_flags
 21103   00437C                     l23417:
 21104                           
 21105                           ;../../VLCBlib_PIC/mns.c: 659:     if (mode_state != last_mode_state) {
 21106   00437C  0100               	movlb	0	; () banked
 21107   00437E  51C7               	movf	_last_mode_state& (0+255),w,b
 21108   004380  19C8               	xorwf	_mode_state& (0+255),w,b
 21109   004382  B4D8               	btfsc	status,2,c
 21110   004384  D00D               	goto	l23423
 21111                           
 21112                           ; BSR set to: 0
 21113                           ;../../VLCBlib_PIC/mns.c: 660:         writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 21114   004386  0EFB               	movlw	251
 21115   004388  6FA4               	movwf	writeNVM@index& (0+255),b
 21116   00438A  0E03               	movlw	3
 21117   00438C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21118   00438E  0E00               	movlw	0
 21119   004390  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21120   004392  C0C8  F0A7         	movff	_mode_state,writeNVM@value
 21121   004396  0E00               	movlw	0
 21122   004398  EC52  F05B         	call	_writeNVM
 21123                           
 21124                           ;../../VLCBlib_PIC/mns.c: 661:         last_mode_state = mode_state;
 21125   00439C  C0C8  F0C7         	movff	_mode_state,_last_mode_state
 21126   0043A0                     l23423:
 21127                           
 21128                           ;../../VLCBlib_PIC/mns.c: 665:     if ((tickGet() - uptimeTimer.val) > 62500) {
 21129   0043A0  ECD6  F059         	call	_tickGet	;wreg free
 21130   0043A4  0101               	movlb	1	; () banked
 21131   0043A6  515C               	movf	_uptimeTimer& (0+255),w,b
 21132   0043A8  0100               	movlb	0	; () banked
 21133   0043AA  5D8D               	subwf	?_tickGet& (0+255),w,b
 21134   0043AC  0101               	movlb	1	; () banked
 21135   0043AE  6FC5               	movwf	??_mnsPoll& (0+255),b
 21136   0043B0  515D               	movf	(_uptimeTimer+1)& (0+255),w,b
 21137   0043B2  0100               	movlb	0	; () banked
 21138   0043B4  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21139   0043B6  0101               	movlb	1	; () banked
 21140   0043B8  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21141   0043BA  515E               	movf	(_uptimeTimer+2)& (0+255),w,b
 21142   0043BC  0100               	movlb	0	; () banked
 21143   0043BE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21144   0043C0  0101               	movlb	1	; () banked
 21145   0043C2  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21146   0043C4  515F               	movf	(_uptimeTimer+3)& (0+255),w,b
 21147   0043C6  0100               	movlb	0	; () banked
 21148   0043C8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21149   0043CA  0101               	movlb	1	; () banked
 21150   0043CC  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21151   0043CE  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21152   0043D0  11C7               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21153   0043D2  E106               	bnz	u25140
 21154   0043D4  0E25               	movlw	37
 21155   0043D6  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21156   0043D8  0EF4               	movlw	244
 21157   0043DA  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21158   0043DC  A0D8               	btfss	status,0,c
 21159   0043DE  D107               	goto	l23489
 21160   0043E0                     u25140:
 21161                           
 21162                           ; BSR set to: 1
 21163                           ;../../VLCBlib_PIC/mns.c: 666:         uptimeTimer.val = tickGet();
 21164   0043E0  ECD6  F059         	call	_tickGet	;wreg free
 21165   0043E4  C08D  F15C         	movff	?_tickGet,_uptimeTimer
 21166   0043E8  C08E  F15D         	movff	?_tickGet+1,_uptimeTimer+1
 21167   0043EC  C08F  F15E         	movff	?_tickGet+2,_uptimeTimer+2
 21168   0043F0  C090  F15F         	movff	?_tickGet+3,_uptimeTimer+3
 21169                           
 21170                           ;../../VLCBlib_PIC/mns.c: 667:         mnsDiagnostics[0x02].asUint++;
 21171   0043F4  0101               	movlb	1	; () banked
 21172   0043F6  4B9B               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 21173   0043F8  2B9C               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 21174                           
 21175                           ; BSR set to: 1
 21176                           ;../../VLCBlib_PIC/mns.c: 668:         if (mnsDiagnostics[0x02].asUint == 0) {
 21177   0043FA  519B               	movf	(_mnsDiagnostics+4)& (0+255),w,b
 21178   0043FC  119C               	iorwf	(_mnsDiagnostics+5)& (0+255),w,b
 21179   0043FE  A4D8               	btfss	status,2,c
 21180   004400  D0F6               	goto	l23489
 21181                           
 21182                           ; BSR set to: 1
 21183                           ;../../VLCBlib_PIC/mns.c: 669:             mnsDiagnostics[0x01].asUint++;
 21184   004402  4B99               	infsnz	(_mnsDiagnostics+2)& (0+255),f,b
 21185   004404  2B9A               	incf	(_mnsDiagnostics+3)& (0+255),f,b
 21186   004406  D0F3               	goto	l23489
 21187   004408                     l1503:
 21188                           
 21189                           ; BSR set to: 0
 21190                           ;../../VLCBlib_PIC/mns.c: 678:             if ((!(PORTAbits.RA2)) == 0) {
 21191   004408  A480               	btfss	128,2,c	;volatile
 21192   00440A  D00B               	goto	l23435
 21193   00440C                     u25160:
 21194                           
 21195                           ;../../VLCBlib_PIC/mns.c: 680:                 pbTimer.val = tickGet();
 21196   00440C  ECD6  F059         	call	_tickGet	;wreg free
 21197   004410  C08D  F033         	movff	?_tickGet,_pbTimer
 21198   004414  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21199   004418  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21200   00441C  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21201                           
 21202                           ;../../VLCBlib_PIC/mns.c: 681:             } else {
 21203   004420  0012               	return	
 21204   004422                     l23435:
 21205                           
 21206                           ; BSR set to: 0
 21207                           ;../../VLCBlib_PIC/mns.c: 683:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21208   004422  ECD6  F059         	call	_tickGet	;wreg free
 21209   004426  5033               	movf	_pbTimer^0,w,c
 21210   004428  0100               	movlb	0	; () banked
 21211   00442A  5D8D               	subwf	?_tickGet& (0+255),w,b
 21212   00442C  0101               	movlb	1	; () banked
 21213   00442E  6FC5               	movwf	??_mnsPoll& (0+255),b
 21214   004430  5034               	movf	(_pbTimer+1)^0,w,c
 21215   004432  0100               	movlb	0	; () banked
 21216   004434  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21217   004436  0101               	movlb	1	; () banked
 21218   004438  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21219   00443A  5035               	movf	(_pbTimer+2)^0,w,c
 21220   00443C  0100               	movlb	0	; () banked
 21221   00443E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21222   004440  0101               	movlb	1	; () banked
 21223   004442  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21224   004444  5036               	movf	(_pbTimer+3)^0,w,c
 21225   004446  0100               	movlb	0	; () banked
 21226   004448  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21227   00444A  0101               	movlb	1	; () banked
 21228   00444C  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21229   00444E  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21230   004450  E108               	bnz	u25170
 21231   004452  0E91               	movlw	145
 21232   004454  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21233   004456  0ED0               	movlw	208
 21234   004458  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21235   00445A  0E03               	movlw	3
 21236   00445C  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21237   00445E  A0D8               	btfss	status,0,c
 21238   004460  0012               	return	
 21239   004462                     u25170:
 21240                           
 21241                           ; BSR set to: 1
 21242                           ;../../VLCBlib_PIC/mns.c: 685:                     mode_state = MODE_SETUP;
 21243   004462  0E00               	movlw	0
 21244   004464  0100               	movlb	0	; () banked
 21245   004466  6FC8               	movwf	_mode_state& (0+255),b
 21246                           
 21247                           ; BSR set to: 0
 21248                           ;../../VLCBlib_PIC/mns.c: 686:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 21249   004468  0101               	movlb	1	; () banked
 21250   00446A  6975               	setf	_setupModePreviousMode& (0+255),b
 21251                           
 21252                           ; BSR set to: 1
 21253                           ;../../VLCBlib_PIC/mns.c: 687:                     pbTimer.val = tickGet();
 21254   00446C  ECD6  F059         	call	_tickGet	;wreg free
 21255   004470  C08D  F033         	movff	?_tickGet,_pbTimer
 21256   004474  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21257   004478  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21258   00447C  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21259                           
 21260                           ;../../VLCBlib_PIC/mns.c: 689:                     sendMessage2(OPC_RQNN, nn.bytes.hi, n
      +                          n.bytes.lo);
 21261   004480  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 21262   004484  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 21263   004488  0E50               	movlw	80
 21264   00448A  EC05  F05F         	call	_sendMessage2
 21265                           
 21266                           ;../../VLCBlib_PIC/mns.c: 690:                     setLEDsByMode();
 21267   00448E  EC91  F05F         	call	_setLEDsByMode	;wreg free
 21268   004492  0012               	return	
 21269   004494                     l1508:
 21270                           
 21271                           ; BSR set to: 0
 21272                           ;../../VLCBlib_PIC/mns.c: 708:             if ((!(PORTAbits.RA2)) == 0) {
 21273   004494  A480               	btfss	128,2,c	;volatile
 21274   004496  0012               	return	
 21275                           
 21276                           ; BSR set to: 0
 21277                           ;../../VLCBlib_PIC/mns.c: 711:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21278   004498  ECD6  F059         	call	_tickGet	;wreg free
 21279   00449C  5033               	movf	_pbTimer^0,w,c
 21280   00449E  0100               	movlb	0	; () banked
 21281   0044A0  5D8D               	subwf	?_tickGet& (0+255),w,b
 21282   0044A2  0101               	movlb	1	; () banked
 21283   0044A4  6FC5               	movwf	??_mnsPoll& (0+255),b
 21284   0044A6  5034               	movf	(_pbTimer+1)^0,w,c
 21285   0044A8  0100               	movlb	0	; () banked
 21286   0044AA  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21287   0044AC  0101               	movlb	1	; () banked
 21288   0044AE  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21289   0044B0  5035               	movf	(_pbTimer+2)^0,w,c
 21290   0044B2  0100               	movlb	0	; () banked
 21291   0044B4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21292   0044B6  0101               	movlb	1	; () banked
 21293   0044B8  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21294   0044BA  5036               	movf	(_pbTimer+3)^0,w,c
 21295   0044BC  0100               	movlb	0	; () banked
 21296   0044BE  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21297   0044C0  0101               	movlb	1	; () banked
 21298   0044C2  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21299   0044C4  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21300   0044C6  E108               	bnz	u25190
 21301   0044C8  0E91               	movlw	145
 21302   0044CA  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21303   0044CC  0ED0               	movlw	208
 21304   0044CE  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21305   0044D0  0E03               	movlw	3
 21306   0044D2  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21307   0044D4  A0D8               	btfss	status,0,c
 21308   0044D6  D017               	goto	l23461
 21309   0044D8                     u25190:
 21310                           
 21311                           ; BSR set to: 1
 21312                           ;../../VLCBlib_PIC/mns.c: 714:                     mode_state = setupModePreviousMode;
 21313   0044D8  C175  F0C8         	movff	_setupModePreviousMode,_mode_state
 21314                           
 21315                           ; BSR set to: 1
 21316                           ;../../VLCBlib_PIC/mns.c: 715:                     if (mode_state == MODE_NORMAL) {
 21317   0044DC  0100               	movlb	0	; () banked
 21318   0044DE  05C8               	decf	_mode_state& (0+255),w,b
 21319   0044E0  A4D8               	btfss	status,2,c
 21320   0044E2  D00E               	goto	l23459
 21321                           
 21322                           ; BSR set to: 0
 21323                           ;../../VLCBlib_PIC/mns.c: 716:                         nn.word = previousNN.word;
 21324   0044E4  C170  F0BF         	movff	_previousNN,_nn
 21325   0044E8  C171  F0C0         	movff	_previousNN+1,_nn+1
 21326                           
 21327                           ; BSR set to: 0
 21328                           ;../../VLCBlib_PIC/mns.c: 717:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 21329   0044EC  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 21330   0044F0  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 21331   0044F4  0E52               	movlw	82
 21332   0044F6  EC05  F05F         	call	_sendMessage2
 21333                           
 21334                           ;../../VLCBlib_PIC/mns.c: 719:                         mnsDiagnostics[0x04].asUint++;
 21335   0044FA  0101               	movlb	1	; () banked
 21336   0044FC  4B9F               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 21337   0044FE  2BA0               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 21338   004500                     l23459:
 21339                           
 21340                           ;../../VLCBlib_PIC/mns.c: 722:                     setLEDsByMode();
 21341   004500  EC91  F05F         	call	_setLEDsByMode	;wreg free
 21342                           
 21343                           ;../../VLCBlib_PIC/mns.c: 723:                 } else if ((tickGet() - pbTimer.val) > 62
      +                          500) {
 21344   004504  D783               	goto	u25160
 21345   004506                     l23461:
 21346                           
 21347                           ; BSR set to: 1
 21348   004506  ECD6  F059         	call	_tickGet	;wreg free
 21349   00450A  5033               	movf	_pbTimer^0,w,c
 21350   00450C  0100               	movlb	0	; () banked
 21351   00450E  5D8D               	subwf	?_tickGet& (0+255),w,b
 21352   004510  0101               	movlb	1	; () banked
 21353   004512  6FC5               	movwf	??_mnsPoll& (0+255),b
 21354   004514  5034               	movf	(_pbTimer+1)^0,w,c
 21355   004516  0100               	movlb	0	; () banked
 21356   004518  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21357   00451A  0101               	movlb	1	; () banked
 21358   00451C  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21359   00451E  5035               	movf	(_pbTimer+2)^0,w,c
 21360   004520  0100               	movlb	0	; () banked
 21361   004522  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21362   004524  0101               	movlb	1	; () banked
 21363   004526  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21364   004528  5036               	movf	(_pbTimer+3)^0,w,c
 21365   00452A  0100               	movlb	0	; () banked
 21366   00452C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21367   00452E  0101               	movlb	1	; () banked
 21368   004530  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21369   004532  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21370   004534  11C7               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21371   004536  E106               	bnz	u25210
 21372   004538  0E25               	movlw	37
 21373   00453A  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21374   00453C  0EF4               	movlw	244
 21375   00453E  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21376   004540  A0D8               	btfss	status,0,c
 21377   004542  D764               	goto	u25160
 21378   004544                     u25210:
 21379                           
 21380                           ; BSR set to: 1
 21381                           ;../../VLCBlib_PIC/mns.c: 725:                     if (nn.word != 0) {
 21382   004544  0100               	movlb	0	; () banked
 21383   004546  51BF               	movf	_nn& (0+255),w,b
 21384   004548  11C0               	iorwf	(_nn+1)& (0+255),w,b
 21385   00454A  B4D8               	btfsc	status,2,c
 21386   00454C  D007               	goto	l23467
 21387                           
 21388                           ; BSR set to: 0
 21389                           ;../../VLCBlib_PIC/mns.c: 726:                         sendMessage2(OPC_NNREL, nn.bytes.
      +                          hi, nn.bytes.lo);
 21390   00454E  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 21391   004552  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 21392   004556  0E51               	movlw	81
 21393   004558  EC05  F05F         	call	_sendMessage2
 21394   00455C                     l23467:
 21395                           
 21396                           ;../../VLCBlib_PIC/mns.c: 728:                     nn.word = 0;
 21397   00455C  0E00               	movlw	0
 21398   00455E  0100               	movlb	0	; () banked
 21399   004560  6FC0               	movwf	(_nn+1)& (0+255),b
 21400   004562  0E00               	movlw	0
 21401   004564  6FBF               	movwf	_nn& (0+255),b
 21402                           
 21403                           ; BSR set to: 0
 21404                           ;../../VLCBlib_PIC/mns.c: 729:                     mode_state = MODE_UNINITIALISED;
 21405   004566  69C8               	setf	_mode_state& (0+255),b
 21406   004568  D7CB               	goto	l23459
 21407   00456A                     l1515:
 21408                           
 21409                           ; BSR set to: 0
 21410                           ;../../VLCBlib_PIC/mns.c: 737:             if ((!(PORTAbits.RA2)) == 0) {
 21411   00456A  A480               	btfss	128,2,c	;volatile
 21412   00456C  0012               	return	
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;../../VLCBlib_PIC/mns.c: 739:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21416   00456E  ECD6  F059         	call	_tickGet	;wreg free
 21417   004572  5033               	movf	_pbTimer^0,w,c
 21418   004574  0100               	movlb	0	; () banked
 21419   004576  5D8D               	subwf	?_tickGet& (0+255),w,b
 21420   004578  0101               	movlb	1	; () banked
 21421   00457A  6FC5               	movwf	??_mnsPoll& (0+255),b
 21422   00457C  5034               	movf	(_pbTimer+1)^0,w,c
 21423   00457E  0100               	movlb	0	; () banked
 21424   004580  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21425   004582  0101               	movlb	1	; () banked
 21426   004584  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21427   004586  5035               	movf	(_pbTimer+2)^0,w,c
 21428   004588  0100               	movlb	0	; () banked
 21429   00458A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21430   00458C  0101               	movlb	1	; () banked
 21431   00458E  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21432   004590  5036               	movf	(_pbTimer+3)^0,w,c
 21433   004592  0100               	movlb	0	; () banked
 21434   004594  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21435   004596  0101               	movlb	1	; () banked
 21436   004598  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21437   00459A  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21438   00459C  E108               	bnz	u25240
 21439   00459E  0E91               	movlw	145
 21440   0045A0  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21441   0045A2  0ED0               	movlw	208
 21442   0045A4  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21443   0045A6  0E03               	movlw	3
 21444   0045A8  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21445   0045AA  A0D8               	btfss	status,0,c
 21446   0045AC  D72F               	goto	u25160
 21447   0045AE                     u25240:
 21448                           
 21449                           ; BSR set to: 1
 21450                           ;../../VLCBlib_PIC/mns.c: 742:                     previousNN.word = nn.word;
 21451   0045AE  C0BF  F170         	movff	_nn,_previousNN
 21452   0045B2  C0C0  F171         	movff	_nn+1,_previousNN+1
 21453                           
 21454                           ; BSR set to: 1
 21455                           ;../../VLCBlib_PIC/mns.c: 743:                     nn.bytes.lo = nn.bytes.hi = 0;
 21456   0045B6  0E00               	movlw	0
 21457   0045B8  0100               	movlb	0	; () banked
 21458   0045BA  6FC0               	movwf	(_nn+1)& (0+255),b
 21459   0045BC  C0C0  F0BF         	movff	_nn+1,_nn
 21460                           
 21461                           ;../../VLCBlib_PIC/mns.c: 745:                     mode_state = MODE_SETUP;
 21462   0045C0  0E00               	movlw	0
 21463   0045C2  6FC8               	movwf	_mode_state& (0+255),b
 21464                           
 21465                           ;../../VLCBlib_PIC/mns.c: 746:                     setupModePreviousMode = MODE_NORMAL;
 21466   0045C4  0E01               	movlw	1
 21467   0045C6  0101               	movlb	1	; () banked
 21468   0045C8  6F75               	movwf	_setupModePreviousMode& (0+255),b
 21469                           
 21470                           ; BSR set to: 1
 21471                           ;../../VLCBlib_PIC/mns.c: 747:                     pbTimer.val = tickGet();
 21472   0045CA  ECD6  F059         	call	_tickGet	;wreg free
 21473   0045CE  C08D  F033         	movff	?_tickGet,_pbTimer
 21474   0045D2  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21475   0045D6  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21476   0045DA  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21477                           
 21478                           ;../../VLCBlib_PIC/mns.c: 749:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 21479   0045DE  C171  F0A5         	movff	_previousNN+1,sendMessage2@data1
 21480   0045E2  C170  F0A6         	movff	_previousNN,sendMessage2@data2
 21481   0045E6  0E50               	movlw	80
 21482   0045E8  EC05  F05F         	call	_sendMessage2
 21483   0045EC  D789               	goto	l23459
 21484   0045EE                     l23489:
 21485                           
 21486                           ; BSR set to: 1
 21487   0045EE  0100               	movlb	0	; () banked
 21488   0045F0  51C8               	movf	_mode_state& (0+255),w,b
 21489                           
 21490                           ; Switch size 1, requested type "simple"
 21491                           ; Number of cases is 2, Range of values is 0 to 255
 21492                           ; switch strategies available:
 21493                           ; Name         Instructions Cycles
 21494                           ; simple_byte            7     4 (average)
 21495                           ;	Chosen strategy is simple_byte
 21496   0045F2  0A00               	xorlw	0	; case 0
 21497   0045F4  B4D8               	btfsc	status,2,c
 21498   0045F6  D74E               	goto	l1508
 21499   0045F8  0AFF               	xorlw	255	; case 255
 21500   0045FA  B4D8               	btfsc	status,2,c
 21501   0045FC  D705               	goto	l1503
 21502   0045FE  D7B5               	goto	l1515
 21503   004600                     __end_of_mnsPoll:
 21504                           	callstack 0
 21505                           
 21506 ;; *************** function _setLEDsByMode *****************
 21507 ;; Defined at:
 21508 ;;		line 794 in file "../../VLCBlib_PIC/mns.c"
 21509 ;; Parameters:    Size  Location     Type
 21510 ;;		None
 21511 ;; Auto vars:     Size  Location     Type
 21512 ;;		None
 21513 ;; Return value:  Size  Location     Type
 21514 ;;                  1    wreg      void 
 21515 ;; Registers used:
 21516 ;;		wreg, status,2, status,0, cstack
 21517 ;; Tracked objects:
 21518 ;;		On entry : 0/0
 21519 ;;		On exit  : 0/0
 21520 ;;		Unchanged: 0/0
 21521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21526 ;;Total ram usage:        0 bytes
 21527 ;; Hardware stack levels used: 1
 21528 ;; Hardware stack levels required when called: 13
 21529 ;; This function calls:
 21530 ;;		_showStatus
 21531 ;; This function is called by:
 21532 ;;		_mnsPowerUp
 21533 ;;		_mnsProcessMessage
 21534 ;;		_mnsPoll
 21535 ;; This function uses a non-reentrant model
 21536 ;;
 21537                           
 21538                           	psect	text73
 21539   00BF22                     __ptext73:
 21540                           	callstack 0
 21541   00BF22                     _setLEDsByMode:
 21542                           	callstack 15
 21543                           
 21544                           ;../../VLCBlib_PIC/mns.c: 795:        switch (mode_state) {
 21545                           
 21546                           ;incstack = 0
 21547   00BF22  D00C               	goto	l21627
 21548   00BF24                     l21619:
 21549                           
 21550                           ; BSR set to: 0
 21551                           ;../../VLCBlib_PIC/mns.c: 797:             showStatus(STATUS_UNINITIALISED);
 21552   00BF24  0E01               	movlw	1
 21553   00BF26  ECBC  F042         	call	_showStatus
 21554                           
 21555                           ;../../VLCBlib_PIC/mns.c: 798:             break;
 21556   00BF2A  0012               	return	
 21557   00BF2C                     l21621:
 21558                           
 21559                           ; BSR set to: 0
 21560                           ;../../VLCBlib_PIC/mns.c: 800:             showStatus(STATUS_SETUP);
 21561   00BF2C  0E02               	movlw	2
 21562   00BF2E  ECBC  F042         	call	_showStatus
 21563                           
 21564                           ;../../VLCBlib_PIC/mns.c: 801:             break;
 21565   00BF32  0012               	return	
 21566   00BF34                     l21623:
 21567                           
 21568                           ; BSR set to: 0
 21569                           ;../../VLCBlib_PIC/mns.c: 803:             showStatus(STATUS_NORMAL);
 21570   00BF34  0E03               	movlw	3
 21571   00BF36  ECBC  F042         	call	_showStatus
 21572                           
 21573                           ;../../VLCBlib_PIC/mns.c: 804:             break;
 21574   00BF3A  0012               	return	
 21575   00BF3C                     l21627:
 21576   00BF3C  0100               	movlb	0	; () banked
 21577   00BF3E  51C8               	movf	_mode_state& (0+255),w,b
 21578                           
 21579                           ; Switch size 1, requested type "simple"
 21580                           ; Number of cases is 2, Range of values is 0 to 255
 21581                           ; switch strategies available:
 21582                           ; Name         Instructions Cycles
 21583                           ; simple_byte            7     4 (average)
 21584                           ;	Chosen strategy is simple_byte
 21585   00BF40  0A00               	xorlw	0	; case 0
 21586   00BF42  B4D8               	btfsc	status,2,c
 21587   00BF44  D7F3               	goto	l21621
 21588   00BF46  0AFF               	xorlw	255	; case 255
 21589   00BF48  B4D8               	btfsc	status,2,c
 21590   00BF4A  D7EC               	goto	l21619
 21591   00BF4C  D7F3               	goto	l21623
 21592   00BF4E                     __end_of_setLEDsByMode:
 21593                           	callstack 0
 21594                           
 21595 ;; *************** function _sendMessage2 *****************
 21596 ;; Defined at:
 21597 ;;		line 1143 in file "../../VLCBlib_PIC/vlcb.c"
 21598 ;; Parameters:    Size  Location     Type
 21599 ;;  opc             1    wreg     enum E12392
 21600 ;;  data1           1   69[BANK0 ] unsigned char 
 21601 ;;  data2           1   70[BANK0 ] unsigned char 
 21602 ;; Auto vars:     Size  Location     Type
 21603 ;;  opc             1   71[BANK0 ] enum E12392
 21604 ;; Return value:  Size  Location     Type
 21605 ;;                  1    wreg      void 
 21606 ;; Registers used:
 21607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21608 ;; Tracked objects:
 21609 ;;		On entry : 0/0
 21610 ;;		On exit  : 0/0
 21611 ;;		Unchanged: 0/0
 21612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21616 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21617 ;;Total ram usage:        3 bytes
 21618 ;; Hardware stack levels used: 1
 21619 ;; Hardware stack levels required when called: 15
 21620 ;; This function calls:
 21621 ;;		_sendMessage
 21622 ;; This function is called by:
 21623 ;;		_mnsProcessMessage
 21624 ;;		_mnsPoll
 21625 ;;		_nvProcessMessage
 21626 ;;		_doNnclr
 21627 ;;		_doEvlrn
 21628 ;;		_doEvuln
 21629 ;; This function uses a non-reentrant model
 21630 ;;
 21631                           
 21632                           	psect	text74
 21633   00BE0A                     __ptext74:
 21634                           	callstack 0
 21635   00BE0A                     _sendMessage2:
 21636                           	callstack 12
 21637                           
 21638                           ;incstack = 0
 21639                           ;sendMessage2@opc stored from wreg
 21640   00BE0A  0100               	movlb	0	; () banked
 21641   00BE0C  6FA7               	movwf	sendMessage2@opc& (0+255),b
 21642                           
 21643                           ;../../VLCBlib_PIC/vlcb.c: 1144:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 21644   00BE0E  0E03               	movlw	3
 21645   00BE10  0101               	movlb	1	; () banked
 21646   00BE12  6FB8               	movwf	sendMessage@len& (0+255),b
 21647   00BE14  C0A5  F1B9         	movff	sendMessage2@data1,sendMessage@data1
 21648   00BE18  C0A6  F1BA         	movff	sendMessage2@data2,sendMessage@data2
 21649   00BE1C  0E00               	movlw	0
 21650   00BE1E  6FBB               	movwf	sendMessage@data3& (0+255),b
 21651   00BE20  0E00               	movlw	0
 21652   00BE22  6FBC               	movwf	sendMessage@data4& (0+255),b
 21653   00BE24  0E00               	movlw	0
 21654   00BE26  6FBD               	movwf	sendMessage@data5& (0+255),b
 21655   00BE28  0E00               	movlw	0
 21656   00BE2A  6FBE               	movwf	sendMessage@data6& (0+255),b
 21657   00BE2C  0E00               	movlw	0
 21658   00BE2E  6FBF               	movwf	sendMessage@data7& (0+255),b
 21659   00BE30  0100               	movlb	0	; () banked
 21660   00BE32  51A7               	movf	sendMessage2@opc& (0+255),w,b
 21661   00BE34  ECD1  F053         	call	_sendMessage
 21662   00BE38  0012               	return		;funcret
 21663   00BE3A                     __end_of_sendMessage2:
 21664                           	callstack 0
 21665                           
 21666 ;; *************** function _setNormalActions *****************
 21667 ;; Defined at:
 21668 ;;		line 502 in file "../event_consumerDualActionQueue.c"
 21669 ;; Parameters:    Size  Location     Type
 21670 ;;		None
 21671 ;; Auto vars:     Size  Location     Type
 21672 ;;		None
 21673 ;; Return value:  Size  Location     Type
 21674 ;;                  1    wreg      void 
 21675 ;; Registers used:
 21676 ;;		wreg, status,2
 21677 ;; Tracked objects:
 21678 ;;		On entry : 0/0
 21679 ;;		On exit  : 0/0
 21680 ;;		Unchanged: 0/0
 21681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21686 ;;Total ram usage:        0 bytes
 21687 ;; Hardware stack levels used: 1
 21688 ;; Hardware stack levels required when called: 12
 21689 ;; This function calls:
 21690 ;;		Nothing
 21691 ;; This function is called by:
 21692 ;;		_consumer2QProcessMessage
 21693 ;; This function uses a non-reentrant model
 21694 ;;
 21695                           
 21696                           	psect	text75
 21697   00C3BC                     __ptext75:
 21698                           	callstack 0
 21699   00C3BC                     _setNormalActions:
 21700                           	callstack 16
 21701                           
 21702                           ;../event_consumerDualActionQueue.c: 503:     expedited = FALSE;
 21703                           
 21704                           ;incstack = 0
 21705   00C3BC  0E00               	movlw	0
 21706   00C3BE  6E47               	movwf	_expedited^0,c
 21707   00C3C0  0012               	return		;funcret
 21708   00C3C2                     __end_of_setNormalActions:
 21709                           	callstack 0
 21710                           
 21711 ;; *************** function _setExpeditedActions *****************
 21712 ;; Defined at:
 21713 ;;		line 495 in file "../event_consumerDualActionQueue.c"
 21714 ;; Parameters:    Size  Location     Type
 21715 ;;		None
 21716 ;; Auto vars:     Size  Location     Type
 21717 ;;		None
 21718 ;; Return value:  Size  Location     Type
 21719 ;;                  1    wreg      void 
 21720 ;; Registers used:
 21721 ;;		wreg, status,2
 21722 ;; Tracked objects:
 21723 ;;		On entry : 0/0
 21724 ;;		On exit  : 0/0
 21725 ;;		Unchanged: 0/0
 21726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21731 ;;Total ram usage:        0 bytes
 21732 ;; Hardware stack levels used: 1
 21733 ;; Hardware stack levels required when called: 12
 21734 ;; This function calls:
 21735 ;;		Nothing
 21736 ;; This function is called by:
 21737 ;;		_consumer2QProcessMessage
 21738 ;; This function uses a non-reentrant model
 21739 ;;
 21740                           
 21741                           	psect	text76
 21742   00C3C2                     __ptext76:
 21743                           	callstack 0
 21744   00C3C2                     _setExpeditedActions:
 21745                           	callstack 16
 21746                           
 21747                           ;../event_consumerDualActionQueue.c: 496:     expedited = TRUE;
 21748                           
 21749                           ;incstack = 0
 21750   00C3C2  0E01               	movlw	1
 21751   00C3C4  6E47               	movwf	_expedited^0,c
 21752   00C3C6  0012               	return		;funcret
 21753   00C3C8                     __end_of_setExpeditedActions:
 21754                           	callstack 0
 21755                           
 21756 ;; *************** function _pushTwoAction *****************
 21757 ;; Defined at:
 21758 ;;		line 376 in file "../event_consumerDualActionQueue.c"
 21759 ;; Parameters:    Size  Location     Type
 21760 ;;  a               1    wreg     unsigned char 
 21761 ;; Auto vars:     Size  Location     Type
 21762 ;;  a               1   45[BANK0 ] unsigned char 
 21763 ;; Return value:  Size  Location     Type
 21764 ;;                  1    wreg      enum E12760
 21765 ;; Registers used:
 21766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21767 ;; Tracked objects:
 21768 ;;		On entry : 0/0
 21769 ;;		On exit  : 0/0
 21770 ;;		Unchanged: 0/0
 21771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21775 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21776 ;;Total ram usage:        1 bytes
 21777 ;; Hardware stack levels used: 1
 21778 ;; Hardware stack levels required when called: 12
 21779 ;; This function calls:
 21780 ;;		Nothing
 21781 ;; This function is called by:
 21782 ;;		_consumer2QProcessMessage
 21783 ;; This function uses a non-reentrant model
 21784 ;;
 21785                           
 21786                           	psect	text77
 21787   00B1E4                     __ptext77:
 21788                           	callstack 0
 21789   00B1E4                     _pushTwoAction:
 21790                           	callstack 16
 21791                           
 21792                           ;incstack = 0
 21793                           ;pushTwoAction@a stored from wreg
 21794   00B1E4  0100               	movlb	0	; () banked
 21795   00B1E6  6F8D               	movwf	pushTwoAction@a& (0+255),b
 21796                           
 21797                           ;../event_consumerDualActionQueue.c: 377:     if (expedited) {
 21798   00B1E8  5047               	movf	_expedited^0,w,c
 21799   00B1EA  B4D8               	btfsc	status,2,c
 21800   00B1EC  D015               	goto	l21017
 21801                           
 21802                           ;../event_consumerDualActionQueue.c: 378:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 21803   00B1EE  0100               	movlb	0	; () banked
 21804   00B1F0  29CC               	incf	_expeditedWriteIndex& (0+255),w,b
 21805   00B1F2  0B07               	andlw	7
 21806   00B1F4  19CD               	xorwf	_expeditedReadIndex& (0+255),w,b
 21807   00B1F6  B4D8               	btfsc	status,2,c
 21808   00B1F8  0012               	return	
 21809                           
 21810                           ; BSR set to: 0
 21811                           ;../event_consumerDualActionQueue.c: 380:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 21812   00B1FA  0EF4               	movlw	low _expeditedQueueBuf
 21813   00B1FC  25CC               	addwf	_expeditedWriteIndex& (0+255),w,b
 21814   00B1FE  6ED9               	movwf	fsr2l,c
 21815   00B200  6ADA               	clrf	fsr2h,c
 21816   00B202  0E02               	movlw	high _expeditedQueueBuf
 21817   00B204  22DA               	addwfc	fsr2h,f,c
 21818   00B206  C08D  FFDF         	movff	pushTwoAction@a,indf2
 21819                           
 21820                           ; BSR set to: 0
 21821   00B20A  2BCC               	incf	_expeditedWriteIndex& (0+255),f,b
 21822                           
 21823                           ; BSR set to: 0
 21824                           ;../event_consumerDualActionQueue.c: 381:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 21825   00B20C  0E07               	movlw	7
 21826   00B20E  65CC               	cpfsgt	_expeditedWriteIndex& (0+255),b
 21827   00B210  0012               	return	
 21828                           
 21829                           ; BSR set to: 0
 21830   00B212  0E00               	movlw	0
 21831   00B214  6FCC               	movwf	_expeditedWriteIndex& (0+255),b
 21832   00B216  0012               	return	
 21833   00B218                     l21017:
 21834                           
 21835                           ;../event_consumerDualActionQueue.c: 384:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 21836   00B218  0100               	movlb	0	; () banked
 21837   00B21A  29CE               	incf	_normalWriteIndex& (0+255),w,b
 21838   00B21C  0B3F               	andlw	63
 21839   00B21E  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 21840   00B220  B4D8               	btfsc	status,2,c
 21841   00B222  0012               	return	
 21842                           
 21843                           ; BSR set to: 0
 21844                           ;../event_consumerDualActionQueue.c: 386:     normalQueueBuf[normalWriteIndex++] = a;
 21845   00B224  0E87               	movlw	low _normalQueueBuf
 21846   00B226  25CE               	addwf	_normalWriteIndex& (0+255),w,b
 21847   00B228  6ED9               	movwf	fsr2l,c
 21848   00B22A  6ADA               	clrf	fsr2h,c
 21849   00B22C  0E03               	movlw	high _normalQueueBuf
 21850   00B22E  22DA               	addwfc	fsr2h,f,c
 21851   00B230  C08D  FFDF         	movff	pushTwoAction@a,indf2
 21852                           
 21853                           ; BSR set to: 0
 21854   00B234  2BCE               	incf	_normalWriteIndex& (0+255),f,b
 21855                           
 21856                           ; BSR set to: 0
 21857                           ;../event_consumerDualActionQueue.c: 387:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 21858   00B236  0E3F               	movlw	63
 21859   00B238  65CE               	cpfsgt	_normalWriteIndex& (0+255),b
 21860   00B23A  0012               	return	
 21861                           
 21862                           ; BSR set to: 0
 21863   00B23C  0E00               	movlw	0
 21864   00B23E  6FCE               	movwf	_normalWriteIndex& (0+255),b
 21865                           
 21866                           ; BSR set to: 0
 21867   00B240  0012               	return		;funcret
 21868   00B242                     __end_of_pushTwoAction:
 21869                           	callstack 0
 21870                           
 21871 ;; *************** function _canReceiveMessage *****************
 21872 ;; Defined at:
 21873 ;;		line 534 in file "../../VLCBlib_PIC/can18_ecan.c"
 21874 ;; Parameters:    Size  Location     Type
 21875 ;;  m               2   10[BANK1 ] PTR struct Message
 21876 ;;		 -> poll@m(9), 
 21877 ;; Auto vars:     Size  Location     Type
 21878 ;;  p               2   16[BANK1 ] PTR unsigned char 
 21879 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 21880 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 21881 ;;		 -> NULL(0), 
 21882 ;;  mp              2   14[BANK1 ] PTR struct Message
 21883 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21884 ;;  messageAvail    1   13[BANK1 ] enum E13071
 21885 ;;  incomingCanI    1    0        unsigned char 
 21886 ;; Return value:  Size  Location     Type
 21887 ;;                  1    wreg      enum E13071
 21888 ;; Registers used:
 21889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21890 ;; Tracked objects:
 21891 ;;		On entry : 0/0
 21892 ;;		On exit  : 0/0
 21893 ;;		Unchanged: 0/0
 21894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21895 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21896 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21897 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21898 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21899 ;;Total ram usage:        8 bytes
 21900 ;; Hardware stack levels used: 1
 21901 ;; Hardware stack levels required when called: 20
 21902 ;; This function calls:
 21903 ;;		_getBufferPointer
 21904 ;;		_handleSelfEnumeration
 21905 ;;		_memcpy
 21906 ;;		_pop
 21907 ;;		_processEnumeration
 21908 ;; This function is called by:
 21909 ;;		_poll
 21910 ;; This function uses a non-reentrant model
 21911 ;;
 21912                           
 21913                           	psect	text78
 21914   006944                     __ptext78:
 21915                           	callstack 0
 21916   006944                     _canReceiveMessage:
 21917                           	callstack 9
 21918                           
 21919                           ;../../VLCBlib_PIC/can18_ecan.c: 535:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          536:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 537:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 538:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 540:     PIE5bits.FIFOWMIE = 0;
 21920                           
 21921                           ; BSR set to: 0
 21922                           ;incstack = 0
 21923   006944  9076               	bcf	118,0,c	;volatile
 21924                           
 21925                           ;../../VLCBlib_PIC/can18_ecan.c: 541:     processEnumeration();
 21926   006946  EC0A  F03B         	call	_processEnumeration	;wreg free
 21927                           
 21928                           ;../../VLCBlib_PIC/can18_ecan.c: 544:     mp = pop(&rxQueue);
 21929   00694A  0E4D               	movlw	low _rxQueue
 21930   00694C  0100               	movlb	0	; () banked
 21931   00694E  6F8D               	movwf	pop@q& (0+255),b
 21932   006950  EC67  F04D         	call	_pop	;wreg free
 21933   006954  C08D  F1C6         	movff	?_pop,canReceiveMessage@mp
 21934   006958  C08E  F1C7         	movff	?_pop+1,canReceiveMessage@mp+1
 21935                           
 21936                           ;../../VLCBlib_PIC/can18_ecan.c: 545:     if (mp != ((void*)0)) {
 21937   00695C  0101               	movlb	1	; () banked
 21938   00695E  51C6               	movf	canReceiveMessage@mp& (0+255),w,b
 21939   006960  11C7               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 21940   006962  B4D8               	btfsc	status,2,c
 21941   006964  D012               	goto	l2457
 21942                           
 21943                           ; BSR set to: 1
 21944                           ;../../VLCBlib_PIC/can18_ecan.c: 546:         memcpy(m, mp, sizeof(Message));
 21945   006966  C1C2  F08D         	movff	canReceiveMessage@m,memcpy@d1
 21946   00696A  C1C3  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 21947   00696E  C1C6  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 21948   006972  C1C7  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 21949   006976  0E00               	movlw	0
 21950   006978  0100               	movlb	0	; () banked
 21951   00697A  6F92               	movwf	(memcpy@n+1)& (0+255),b
 21952   00697C  0E09               	movlw	9
 21953   00697E  6F91               	movwf	memcpy@n& (0+255),b
 21954   006980  EC9F  F05C         	call	_memcpy	;wreg free
 21955                           
 21956                           ;../../VLCBlib_PIC/can18_ecan.c: 547:         PIE5bits.FIFOWMIE = 1;
 21957   006984  8076               	bsf	118,0,c	;volatile
 21958                           
 21959                           ;../../VLCBlib_PIC/can18_ecan.c: 548:         return RECEIVED;
 21960   006986  0E01               	movlw	1
 21961   006988  0012               	return	
 21962   00698A                     l2457:
 21963                           
 21964                           ; BSR set to: 1
 21965                           ;../../VLCBlib_PIC/can18_ecan.c: 550:         if (COMSTATbits.NOT_FIFOEMPTY) {
 21966   00698A  AE71               	btfss	113,7,c	;volatile
 21967   00698C  D00D               	goto	u25630
 21968                           
 21969                           ; BSR set to: 1
 21970                           ;../../VLCBlib_PIC/can18_ecan.c: 551:             p = getBufferPointer(CANCON & 0x07);
 21971   00698E  506F               	movf	111,w,c	;volatile
 21972   006990  0B07               	andlw	7
 21973   006992  ECE4  F04E         	call	_getBufferPointer
 21974   006996  C08D  F1C8         	movff	?_getBufferPointer,canReceiveMessage@p
 21975   00699A  C08E  F1C9         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 21976                           
 21977                           ;../../VLCBlib_PIC/can18_ecan.c: 552:             if (p == ((void*)0)) {
 21978   00699E  0101               	movlb	1	; () banked
 21979   0069A0  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21980   0069A2  11C9               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 21981   0069A4  A4D8               	btfss	status,2,c
 21982   0069A6  D003               	goto	l2461
 21983   0069A8                     u25630:
 21984                           
 21985                           ; BSR set to: 1
 21986                           ;../../VLCBlib_PIC/can18_ecan.c: 554:                 PIE5bits.FIFOWMIE = 1;
 21987   0069A8  8076               	bsf	118,0,c	;volatile
 21988   0069AA                     l23903:
 21989                           
 21990                           ; BSR set to: 1
 21991                           ;../../VLCBlib_PIC/can18_ecan.c: 555:                 return NOT_RECEIVED;
 21992   0069AA  0E00               	movlw	0
 21993   0069AC  0012               	return	
 21994   0069AE                     l2461:
 21995                           
 21996                           ; BSR set to: 1
 21997                           ;../../VLCBlib_PIC/can18_ecan.c: 557:             PIR5bits.RXBnIF = 0;
 21998   0069AE  9277               	bcf	119,1,c	;volatile
 21999                           
 22000                           ; BSR set to: 1
 22001                           ;../../VLCBlib_PIC/can18_ecan.c: 559:             if (p[2] & 0x08) return NOT_RECEIVED;
 22002   0069B0  EE20 F002          	lfsr	2,2
 22003   0069B4  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22004   0069B6  26D9               	addwf	fsr2l,f,c
 22005   0069B8  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22006   0069BA  22DA               	addwfc	fsr2h,f,c
 22007   0069BC  B6DF               	btfsc	indf2,3,c
 22008   0069BE  D7F5               	goto	l23903
 22009                           
 22010                           ; BSR set to: 1
 22011                           ;../../VLCBlib_PIC/can18_ecan.c: 561:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 22012   0069C0  C1C8  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 22013   0069C4  C1C9  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 22014   0069C8  ECDC  F03F         	call	_handleSelfEnumeration	;wreg free
 22015   0069CC  06E8               	decf	wreg,f,c
 22016   0069CE  A4D8               	btfss	status,2,c
 22017   0069D0  D08F               	goto	l23941
 22018                           
 22019                           ;../../VLCBlib_PIC/can18_ecan.c: 564:                 canDiagnostics[0x08].asUint++;
 22020   0069D2  0101               	movlb	1	; () banked
 22021   0069D4  4B87               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 22022   0069D6  2B88               	incf	(_canDiagnostics+17)& (0+255),f,b
 22023                           
 22024                           ; BSR set to: 1
 22025                           ;../../VLCBlib_PIC/can18_ecan.c: 569:                     m->opc = p[6];
 22026   0069D8  EE20 F006          	lfsr	2,6
 22027   0069DC  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22028   0069DE  26D9               	addwf	fsr2l,f,c
 22029   0069E0  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22030   0069E2  22DA               	addwfc	fsr2h,f,c
 22031   0069E4  EE10 F001          	lfsr	1,1
 22032   0069E8  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22033   0069EA  26E1               	addwf	fsr1l,f,c
 22034   0069EC  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22035   0069EE  22E2               	addwfc	fsr1h,f,c
 22036   0069F0  CFDF FFE7          	movff	indf2,indf1
 22037                           
 22038                           ; BSR set to: 1
 22039                           ;../../VLCBlib_PIC/can18_ecan.c: 570:                     m->len = p[5] & 0xF;
 22040   0069F4  EE20 F005          	lfsr	2,5
 22041   0069F8  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22042   0069FA  26D9               	addwf	fsr2l,f,c
 22043   0069FC  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22044   0069FE  22DA               	addwfc	fsr2h,f,c
 22045   006A00  50DF               	movf	indf2,w,c
 22046   006A02  0B0F               	andlw	15
 22047   006A04  C1C2  FFD9         	movff	canReceiveMessage@m,fsr2l
 22048   006A08  C1C3  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22049   006A0C  6EDF               	movwf	indf2,c
 22050                           
 22051                           ; BSR set to: 1
 22052                           ;../../VLCBlib_PIC/can18_ecan.c: 571:                     if (m->len > 8) {
 22053   006A0E  C1C2  FFD9         	movff	canReceiveMessage@m,fsr2l
 22054   006A12  C1C3  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22055   006A16  0E08               	movlw	8
 22056   006A18  64DF               	cpfsgt	indf2,c
 22057   006A1A  D006               	goto	l23925
 22058                           
 22059                           ; BSR set to: 1
 22060                           ;../../VLCBlib_PIC/can18_ecan.c: 572:                         m->len = 8;
 22061   006A1C  C1C2  FFD9         	movff	canReceiveMessage@m,fsr2l
 22062   006A20  C1C3  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22063   006A24  0E08               	movlw	8
 22064   006A26  6EDF               	movwf	indf2,c
 22065   006A28                     l23925:
 22066                           
 22067                           ; BSR set to: 1
 22068                           ;../../VLCBlib_PIC/can18_ecan.c: 574:                     m->bytes[0] = p[7];
 22069   006A28  EE20 F007          	lfsr	2,7
 22070   006A2C  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22071   006A2E  26D9               	addwf	fsr2l,f,c
 22072   006A30  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22073   006A32  22DA               	addwfc	fsr2h,f,c
 22074   006A34  EE10 F002          	lfsr	1,2
 22075   006A38  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22076   006A3A  26E1               	addwf	fsr1l,f,c
 22077   006A3C  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22078   006A3E  22E2               	addwfc	fsr1h,f,c
 22079   006A40  CFDF FFE7          	movff	indf2,indf1
 22080                           
 22081                           ; BSR set to: 1
 22082                           ;../../VLCBlib_PIC/can18_ecan.c: 575:                     m->bytes[1] = p[8];
 22083   006A44  EE20 F008          	lfsr	2,8
 22084   006A48  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22085   006A4A  26D9               	addwf	fsr2l,f,c
 22086   006A4C  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22087   006A4E  22DA               	addwfc	fsr2h,f,c
 22088   006A50  EE10 F003          	lfsr	1,3
 22089   006A54  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22090   006A56  26E1               	addwf	fsr1l,f,c
 22091   006A58  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22092   006A5A  22E2               	addwfc	fsr1h,f,c
 22093   006A5C  CFDF FFE7          	movff	indf2,indf1
 22094                           
 22095                           ; BSR set to: 1
 22096                           ;../../VLCBlib_PIC/can18_ecan.c: 576:                     m->bytes[2] = p[9];
 22097   006A60  EE20 F009          	lfsr	2,9
 22098   006A64  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22099   006A66  26D9               	addwf	fsr2l,f,c
 22100   006A68  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22101   006A6A  22DA               	addwfc	fsr2h,f,c
 22102   006A6C  EE10 F004          	lfsr	1,4
 22103   006A70  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22104   006A72  26E1               	addwf	fsr1l,f,c
 22105   006A74  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22106   006A76  22E2               	addwfc	fsr1h,f,c
 22107   006A78  CFDF FFE7          	movff	indf2,indf1
 22108                           
 22109                           ; BSR set to: 1
 22110                           ;../../VLCBlib_PIC/can18_ecan.c: 577:                     m->bytes[3] = p[10];
 22111   006A7C  EE20 F00A          	lfsr	2,10
 22112   006A80  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22113   006A82  26D9               	addwf	fsr2l,f,c
 22114   006A84  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22115   006A86  22DA               	addwfc	fsr2h,f,c
 22116   006A88  EE10 F005          	lfsr	1,5
 22117   006A8C  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22118   006A8E  26E1               	addwf	fsr1l,f,c
 22119   006A90  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22120   006A92  22E2               	addwfc	fsr1h,f,c
 22121   006A94  CFDF FFE7          	movff	indf2,indf1
 22122                           
 22123                           ; BSR set to: 1
 22124                           ;../../VLCBlib_PIC/can18_ecan.c: 578:                     m->bytes[4] = p[11];
 22125   006A98  EE20 F00B          	lfsr	2,11
 22126   006A9C  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22127   006A9E  26D9               	addwf	fsr2l,f,c
 22128   006AA0  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22129   006AA2  22DA               	addwfc	fsr2h,f,c
 22130   006AA4  EE10 F006          	lfsr	1,6
 22131   006AA8  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22132   006AAA  26E1               	addwf	fsr1l,f,c
 22133   006AAC  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22134   006AAE  22E2               	addwfc	fsr1h,f,c
 22135   006AB0  CFDF FFE7          	movff	indf2,indf1
 22136                           
 22137                           ; BSR set to: 1
 22138                           ;../../VLCBlib_PIC/can18_ecan.c: 579:                     m->bytes[5] = p[12];
 22139   006AB4  EE20 F00C          	lfsr	2,12
 22140   006AB8  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22141   006ABA  26D9               	addwf	fsr2l,f,c
 22142   006ABC  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22143   006ABE  22DA               	addwfc	fsr2h,f,c
 22144   006AC0  EE10 F007          	lfsr	1,7
 22145   006AC4  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22146   006AC6  26E1               	addwf	fsr1l,f,c
 22147   006AC8  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22148   006ACA  22E2               	addwfc	fsr1h,f,c
 22149   006ACC  CFDF FFE7          	movff	indf2,indf1
 22150                           
 22151                           ; BSR set to: 1
 22152                           ;../../VLCBlib_PIC/can18_ecan.c: 580:                     m->bytes[6] = p[13];
 22153   006AD0  EE20 F00D          	lfsr	2,13
 22154   006AD4  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22155   006AD6  26D9               	addwf	fsr2l,f,c
 22156   006AD8  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22157   006ADA  22DA               	addwfc	fsr2h,f,c
 22158   006ADC  EE10 F008          	lfsr	1,8
 22159   006AE0  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22160   006AE2  26E1               	addwf	fsr1l,f,c
 22161   006AE4  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22162   006AE6  22E2               	addwfc	fsr1h,f,c
 22163   006AE8  CFDF FFE7          	movff	indf2,indf1
 22164                           
 22165                           ; BSR set to: 1
 22166                           ;../../VLCBlib_PIC/can18_ecan.c: 581:                     messageAvailable = RECEIVED;
 22167   006AEC  0E01               	movlw	1
 22168   006AEE  6FC5               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 22169   006AF0                     l23941:
 22170                           
 22171                           ;../../VLCBlib_PIC/can18_ecan.c: 584:             if (PIR5bits.IRXIF) {
 22172   006AF0  BE77               	btfsc	119,7,c	;volatile
 22173                           
 22174                           ;../../VLCBlib_PIC/can18_ecan.c: 585:                 PIR5bits.IRXIF = 0;
 22175   006AF2  9E77               	bcf	119,7,c	;volatile
 22176                           
 22177                           ;../../VLCBlib_PIC/can18_ecan.c: 588:             p[0] &= 0x7f;
 22178   006AF4  C1C8  FFD9         	movff	canReceiveMessage@p,fsr2l
 22179   006AF8  C1C9  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 22180   006AFC  0E7F               	movlw	127
 22181   006AFE  16DF               	andwf	indf2,f,c
 22182                           
 22183                           ;../../VLCBlib_PIC/can18_ecan.c: 589:             PIE5bits.FIFOWMIE = 1;
 22184   006B00  8076               	bsf	118,0,c	;volatile
 22185                           
 22186                           ;../../VLCBlib_PIC/can18_ecan.c: 590:             return messageAvailable;
 22187   006B02  0101               	movlb	1	; () banked
 22188   006B04  51C5               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 22189   006B06  0012               	return	
 22190   006B08                     __end_of_canReceiveMessage:
 22191                           	callstack 0
 22192                           
 22193 ;; *************** function _processEnumeration *****************
 22194 ;; Defined at:
 22195 ;;		line 835 in file "../../VLCBlib_PIC/can18_ecan.c"
 22196 ;; Parameters:    Size  Location     Type
 22197 ;;		None
 22198 ;; Auto vars:     Size  Location     Type
 22199 ;;  i               1    9[BANK1 ] unsigned char 
 22200 ;;  newCanId        1    8[BANK1 ] unsigned char 
 22201 ;;  enumResult      1    7[BANK1 ] unsigned char 
 22202 ;; Return value:  Size  Location     Type
 22203 ;;                  1    wreg      void 
 22204 ;; Registers used:
 22205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22206 ;; Tracked objects:
 22207 ;;		On entry : 0/0
 22208 ;;		On exit  : 0/0
 22209 ;;		Unchanged: 0/0
 22210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22212 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22213 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22214 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22215 ;;Total ram usage:        7 bytes
 22216 ;; Hardware stack levels used: 1
 22217 ;; Hardware stack levels required when called: 19
 22218 ;; This function calls:
 22219 ;;		_setNewCanId
 22220 ;;		_tickGet
 22221 ;;		_updateModuleErrorStatus
 22222 ;; This function is called by:
 22223 ;;		_canReceiveMessage
 22224 ;; This function uses a non-reentrant model
 22225 ;;
 22226                           
 22227                           	psect	text79
 22228   007614                     __ptext79:
 22229                           	callstack 0
 22230   007614                     _processEnumeration:
 22231                           	callstack 9
 22232                           
 22233                           ;../../VLCBlib_PIC/can18_ecan.c: 836:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 838:     switch (enumerationState) {
 22234                           
 22235                           ;incstack = 0
 22236   007614  D09B               	goto	l22037
 22237   007616                     l21975:
 22238                           
 22239                           ; BSR set to: 1
 22240                           ;../../VLCBlib_PIC/can18_ecan.c: 840:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 22241   007616  ECD6  F059         	call	_tickGet	;wreg free
 22242   00761A  502B               	movf	_enumerationStartTime^0,w,c
 22243   00761C  0100               	movlb	0	; () banked
 22244   00761E  5D8D               	subwf	?_tickGet& (0+255),w,b
 22245   007620  0101               	movlb	1	; () banked
 22246   007622  6FBB               	movwf	??_processEnumeration& (0+255),b
 22247   007624  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22248   007626  0100               	movlb	0	; () banked
 22249   007628  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22250   00762A  0101               	movlb	1	; () banked
 22251   00762C  6FBC               	movwf	(??_processEnumeration+1)& (0+255),b
 22252   00762E  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22253   007630  0100               	movlb	0	; () banked
 22254   007632  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22255   007634  0101               	movlb	1	; () banked
 22256   007636  6FBD               	movwf	(??_processEnumeration+2)& (0+255),b
 22257   007638  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22258   00763A  0100               	movlb	0	; () banked
 22259   00763C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22260   00763E  0101               	movlb	1	; () banked
 22261   007640  6FBE               	movwf	(??_processEnumeration+3)& (0+255),b
 22262   007642  51BE               	movf	(??_processEnumeration+3)& (0+255),w,b
 22263   007644  11BD               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22264   007646  E106               	bnz	u23230
 22265   007648  0ED5               	movlw	213
 22266   00764A  5DBB               	subwf	??_processEnumeration& (0+255),w,b
 22267   00764C  0E30               	movlw	48
 22268   00764E  59BC               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22269   007650  A0D8               	btfss	status,0,c
 22270   007652  0012               	return	
 22271   007654                     u23230:
 22272                           
 22273                           ; BSR set to: 1
 22274                           ;../../VLCBlib_PIC/can18_ecan.c: 842:                 for (i=1; i< (0x7F/8)+1; i++) {
 22275   007654  0E01               	movlw	1
 22276   007656  6FC1               	movwf	processEnumeration@i& (0+255),b
 22277   007658                     l21983:
 22278                           
 22279                           ; BSR set to: 1
 22280                           ;../../VLCBlib_PIC/can18_ecan.c: 843:                     enumerationResults[i] = 0;
 22281   007658  0E54               	movlw	low _enumerationResults
 22282   00765A  25C1               	addwf	processEnumeration@i& (0+255),w,b
 22283   00765C  6ED9               	movwf	fsr2l,c
 22284   00765E  6ADA               	clrf	fsr2h,c
 22285   007660  0E02               	movlw	high _enumerationResults
 22286   007662  22DA               	addwfc	fsr2h,f,c
 22287   007664  6ADF               	clrf	indf2,c
 22288                           
 22289                           ; BSR set to: 1
 22290                           ;../../VLCBlib_PIC/can18_ecan.c: 844:                 }
 22291   007666  2BC1               	incf	processEnumeration@i& (0+255),f,b
 22292                           
 22293                           ; BSR set to: 1
 22294   007668  0E0F               	movlw	15
 22295   00766A  65C1               	cpfsgt	processEnumeration@i& (0+255),b
 22296   00766C  D7F5               	goto	l21983
 22297                           
 22298                           ; BSR set to: 1
 22299                           ;../../VLCBlib_PIC/can18_ecan.c: 845:                 enumerationResults[0] = 1;
 22300   00766E  0E01               	movlw	1
 22301   007670  0102               	movlb	2	; () banked
 22302   007672  6F54               	movwf	_enumerationResults& (0+255),b
 22303                           
 22304                           ;../../VLCBlib_PIC/can18_ecan.c: 847:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 22305   007674  0E02               	movlw	2
 22306   007676  0100               	movlb	0	; () banked
 22307   007678  6FC1               	movwf	_enumerationState& (0+255),b
 22308                           
 22309                           ; BSR set to: 0
 22310                           ;../../VLCBlib_PIC/can18_ecan.c: 848:                 enumerationStartTime.val = tickGet
      +                          ();
 22311   00767A  ECD6  F059         	call	_tickGet	;wreg free
 22312   00767E  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22313   007682  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22314   007686  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22315   00768A  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22316                           
 22317                           ;../../VLCBlib_PIC/can18_ecan.c: 850:                 canDiagnostics[0x0C].asUint++;
 22318   00768E  0101               	movlb	1	; () banked
 22319   007690  4B8F               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 22320   007692  2B90               	incf	(_canDiagnostics+25)& (0+255),f,b
 22321                           
 22322                           ; BSR set to: 1
 22323                           ;../../VLCBlib_PIC/can18_ecan.c: 852:                 TXB1CONbits.TXREQ = 1;
 22324   007694  010F               	movlb	15	; () banked
 22325   007696  8710               	bsf	16,3,b	;volatile
 22326   007698  0012               	return	
 22327   00769A                     l21997:
 22328                           
 22329                           ; BSR set to: 1
 22330                           ;../../VLCBlib_PIC/can18_ecan.c: 856:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 22331   00769A  ECD6  F059         	call	_tickGet	;wreg free
 22332   00769E  502B               	movf	_enumerationStartTime^0,w,c
 22333   0076A0  0100               	movlb	0	; () banked
 22334   0076A2  5D8D               	subwf	?_tickGet& (0+255),w,b
 22335   0076A4  0101               	movlb	1	; () banked
 22336   0076A6  6FBB               	movwf	??_processEnumeration& (0+255),b
 22337   0076A8  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22338   0076AA  0100               	movlb	0	; () banked
 22339   0076AC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22340   0076AE  0101               	movlb	1	; () banked
 22341   0076B0  6FBC               	movwf	(??_processEnumeration+1)& (0+255),b
 22342   0076B2  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22343   0076B4  0100               	movlb	0	; () banked
 22344   0076B6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22345   0076B8  0101               	movlb	1	; () banked
 22346   0076BA  6FBD               	movwf	(??_processEnumeration+2)& (0+255),b
 22347   0076BC  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22348   0076BE  0100               	movlb	0	; () banked
 22349   0076C0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22350   0076C2  0101               	movlb	1	; () banked
 22351   0076C4  6FBE               	movwf	(??_processEnumeration+3)& (0+255),b
 22352   0076C6  51BE               	movf	(??_processEnumeration+3)& (0+255),w,b
 22353   0076C8  11BD               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22354   0076CA  E106               	bnz	u23250
 22355   0076CC  0E6B               	movlw	107
 22356   0076CE  5DBB               	subwf	??_processEnumeration& (0+255),w,b
 22357   0076D0  0E18               	movlw	24
 22358   0076D2  59BC               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22359   0076D4  A0D8               	btfss	status,0,c
 22360   0076D6  0012               	return	
 22361   0076D8                     u23250:
 22362                           
 22363                           ; BSR set to: 1
 22364                           ;../../VLCBlib_PIC/can18_ecan.c: 860:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 22365   0076D8  0E00               	movlw	0
 22366   0076DA  6FC1               	movwf	processEnumeration@i& (0+255),b
 22367   0076DC  D001               	goto	l22003
 22368   0076DE                     l22001:
 22369                           
 22370                           ; BSR set to: 1
 22371                           ;../../VLCBlib_PIC/can18_ecan.c: 862:                 }
 22372   0076DE  2BC1               	incf	processEnumeration@i& (0+255),f,b
 22373   0076E0                     l22003:
 22374                           
 22375                           ; BSR set to: 1
 22376   0076E0  0E54               	movlw	low _enumerationResults
 22377   0076E2  25C1               	addwf	processEnumeration@i& (0+255),w,b
 22378   0076E4  6ED9               	movwf	fsr2l,c
 22379   0076E6  6ADA               	clrf	fsr2h,c
 22380   0076E8  0E02               	movlw	high _enumerationResults
 22381   0076EA  22DA               	addwfc	fsr2h,f,c
 22382   0076EC  28DE               	incf	postinc2,w,c
 22383   0076EE  A4D8               	btfss	status,2,c
 22384   0076F0  D003               	goto	u23270
 22385                           
 22386                           ; BSR set to: 1
 22387   0076F2  0E0F               	movlw	15
 22388   0076F4  65C1               	cpfsgt	processEnumeration@i& (0+255),b
 22389   0076F6  D7F3               	goto	l22001
 22390   0076F8                     u23270:
 22391                           
 22392                           ; BSR set to: 1
 22393                           ;../../VLCBlib_PIC/can18_ecan.c: 863:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 22394   0076F8  0E54               	movlw	low _enumerationResults
 22395   0076FA  25C1               	addwf	processEnumeration@i& (0+255),w,b
 22396   0076FC  6ED9               	movwf	fsr2l,c
 22397   0076FE  6ADA               	clrf	fsr2h,c
 22398   007700  0E02               	movlw	high _enumerationResults
 22399   007702  22DA               	addwfc	fsr2h,f,c
 22400   007704  50DF               	movf	indf2,w,c
 22401   007706  6FBF               	movwf	processEnumeration@enumResult& (0+255),b
 22402   007708  29BF               	incf	processEnumeration@enumResult& (0+255),w,b
 22403   00770A  B4D8               	btfsc	status,2,c
 22404   00770C  D017               	goto	l22025
 22405                           
 22406                           ; BSR set to: 1
 22407                           ;../../VLCBlib_PIC/can18_ecan.c: 864:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 22408   00770E  51C1               	movf	processEnumeration@i& (0+255),w,b
 22409   007710  0D08               	mullw	8
 22410   007712  CFF3 F1C0          	movff	prodl,processEnumeration@newCanId
 22411   007716  D003               	goto	l22015
 22412   007718                     l22011:
 22413                           
 22414                           ; BSR set to: 1
 22415                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                         enumResult >>= 1;
 22416   007718  90D8               	bcf	status,0,c
 22417   00771A  33BF               	rrcf	processEnumeration@enumResult& (0+255),f,b
 22418                           
 22419                           ; BSR set to: 1
 22420                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                     }
 22421   00771C  2BC0               	incf	processEnumeration@newCanId& (0+255),f,b
 22422   00771E                     l22015:
 22423                           
 22424                           ; BSR set to: 1
 22425   00771E  B1BF               	btfsc	processEnumeration@enumResult& (0+255),0,b
 22426   007720  D7FB               	goto	l22011
 22427                           
 22428                           ; BSR set to: 1
 22429                           ;../../VLCBlib_PIC/can18_ecan.c: 867:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 22430   007722  51C0               	movf	processEnumeration@newCanId& (0+255),w,b
 22431   007724  B4D8               	btfsc	status,2,c
 22432   007726  D00A               	goto	l22025
 22433                           
 22434                           ; BSR set to: 1
 22435   007728  0E64               	movlw	100
 22436   00772A  61C0               	cpfslt	processEnumeration@newCanId& (0+255),b
 22437   00772C  D007               	goto	l22025
 22438                           
 22439                           ; BSR set to: 1
 22440                           ;../../VLCBlib_PIC/can18_ecan.c: 868:                         canId = newCanId;
 22441   00772E  C1C0  F0C3         	movff	processEnumeration@newCanId,_canId
 22442                           
 22443                           ; BSR set to: 1
 22444                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                         setNewCanId(canId);
 22445   007732  0100               	movlb	0	; () banked
 22446   007734  51C3               	movf	_canId& (0+255),w,b
 22447   007736  ECCE  F057         	call	_setNewCanId
 22448                           
 22449                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     } else {
 22450   00773A  D004               	goto	l22033
 22451   00773C                     l22025:
 22452                           
 22453                           ; BSR set to: 1
 22454                           ;../../VLCBlib_PIC/can18_ecan.c: 872:                         canDiagnostics[0x0F].asUin
      +                          t++;
 22455   00773C  4B95               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 22456   00773E  2B96               	incf	(_canDiagnostics+31)& (0+255),f,b
 22457                           
 22458                           ; BSR set to: 1
 22459                           ;../../VLCBlib_PIC/can18_ecan.c: 873:                         updateModuleErrorStatus();
 22460   007740  ECB2  F061         	call	_updateModuleErrorStatus	;wreg free
 22461   007744                     l22033:
 22462                           
 22463                           ;../../VLCBlib_PIC/can18_ecan.c: 885:                 enumerationState = NO_ENUMERATION;
 22464   007744  0E00               	movlw	0
 22465   007746  0100               	movlb	0	; () banked
 22466   007748  6FC1               	movwf	_enumerationState& (0+255),b
 22467   00774A  0012               	return	
 22468   00774C                     l22037:
 22469   00774C  0100               	movlb	0	; () banked
 22470   00774E  51C1               	movf	_enumerationState& (0+255),w,b
 22471   007750  0101               	movlb	1	; () banked
 22472   007752  6FBB               	movwf	??_processEnumeration& (0+255),b
 22473   007754  6BBC               	clrf	(??_processEnumeration+1)& (0+255),b
 22474                           
 22475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22476                           ; Switch size 1, requested type "simple"
 22477                           ; Number of cases is 1, Range of values is 0 to 0
 22478                           ; switch strategies available:
 22479                           ; Name         Instructions Cycles
 22480                           ; simple_byte            4     3 (average)
 22481                           ;	Chosen strategy is simple_byte
 22482   007756  51BC               	movf	(??_processEnumeration+1)& (0+255),w,b
 22483   007758  0A00               	xorlw	0	; case 0
 22484   00775A  A4D8               	btfss	status,2,c
 22485   00775C  0012               	return	
 22486                           
 22487                           ; BSR set to: 1
 22488                           ; Switch size 1, requested type "simple"
 22489                           ; Number of cases is 2, Range of values is 1 to 2
 22490                           ; switch strategies available:
 22491                           ; Name         Instructions Cycles
 22492                           ; simple_byte            7     4 (average)
 22493                           ;	Chosen strategy is simple_byte
 22494   00775E  51BB               	movf	??_processEnumeration& (0+255),w,b
 22495   007760  0A01               	xorlw	1	; case 1
 22496   007762  B4D8               	btfsc	status,2,c
 22497   007764  D758               	goto	l21975
 22498   007766  0A03               	xorlw	3	; case 2
 22499   007768  A4D8               	btfss	status,2,c
 22500   00776A  0012               	return	
 22501   00776C  D796               	goto	l21997
 22502   00776E                     __end_of_processEnumeration:
 22503                           	callstack 0
 22504                           
 22505 ;; *************** function _setNewCanId *****************
 22506 ;; Defined at:
 22507 ;;		line 898 in file "../../VLCBlib_PIC/can18_ecan.c"
 22508 ;; Parameters:    Size  Location     Type
 22509 ;;  newCanId        1    wreg     unsigned char 
 22510 ;; Auto vars:     Size  Location     Type
 22511 ;;  newCanId        1    2[BANK1 ] unsigned char 
 22512 ;; Return value:  Size  Location     Type
 22513 ;;                  1    wreg      enum E13091
 22514 ;; Registers used:
 22515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22516 ;; Tracked objects:
 22517 ;;		On entry : 0/0
 22518 ;;		On exit  : 0/0
 22519 ;;		Unchanged: 0/0
 22520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22522 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22524 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22525 ;;Total ram usage:        1 bytes
 22526 ;; Hardware stack levels used: 1
 22527 ;; Hardware stack levels required when called: 18
 22528 ;; This function calls:
 22529 ;;		_writeNVM
 22530 ;; This function is called by:
 22531 ;;		_processEnumeration
 22532 ;; This function uses a non-reentrant model
 22533 ;;
 22534                           
 22535                           	psect	text80
 22536   00AF9C                     __ptext80:
 22537                           	callstack 0
 22538   00AF9C                     _setNewCanId:
 22539                           	callstack 9
 22540                           
 22541                           ;incstack = 0
 22542                           ;setNewCanId@newCanId stored from wreg
 22543   00AF9C  0101               	movlb	1	; () banked
 22544   00AF9E  6FBA               	movwf	setNewCanId@newCanId& (0+255),b
 22545                           
 22546                           ;../../VLCBlib_PIC/can18_ecan.c: 899:     if ((newCanId >= 1) && (newCanId <= 99)) {
 22547   00AFA0  0101               	movlb	1	; () banked
 22548   00AFA2  51BA               	movf	setNewCanId@newCanId& (0+255),w,b
 22549   00AFA4  B4D8               	btfsc	status,2,c
 22550   00AFA6  0012               	return	
 22551                           
 22552                           ; BSR set to: 1
 22553   00AFA8  0E64               	movlw	100
 22554   00AFAA  61BA               	cpfslt	setNewCanId@newCanId& (0+255),b
 22555   00AFAC  0012               	return	
 22556                           
 22557                           ; BSR set to: 1
 22558                           ;../../VLCBlib_PIC/can18_ecan.c: 900:         canId = newCanId;
 22559   00AFAE  C1BA  F0C3         	movff	setNewCanId@newCanId,_canId
 22560                           
 22561                           ; BSR set to: 1
 22562                           ;../../VLCBlib_PIC/can18_ecan.c: 903:         TXB1SIDH &= 0b11110000;
 22563   00AFB2  0EF0               	movlw	240
 22564   00AFB4  010F               	movlb	15	; () banked
 22565   00AFB6  1711               	andwf	17,f,b	;volatile
 22566                           
 22567                           ;../../VLCBlib_PIC/can18_ecan.c: 904:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 22568   00AFB8  0101               	movlb	1	; () banked
 22569   00AFBA  39BA               	swapf	setNewCanId@newCanId& (0+255),w,b
 22570   00AFBC  46E8               	rlncf	wreg,f,c
 22571   00AFBE  0B1F               	andlw	31
 22572   00AFC0  0B0F               	andlw	15
 22573   00AFC2  010F               	movlb	15	; () banked
 22574   00AFC4  1311               	iorwf	17,f,b	;volatile
 22575                           
 22576                           ; BSR set to: 15
 22577                           ;../../VLCBlib_PIC/can18_ecan.c: 905:         TXB1SIDL = TXB0SIDL;
 22578   00AFC6  CF22 FF12          	movff	3874,3858	;volatile
 22579                           
 22580                           ;../../VLCBlib_PIC/can18_ecan.c: 907:         TXB2SIDH &= 0b11110000;
 22581   00AFCA  0EF0               	movlw	240
 22582   00AFCC  1701               	andwf	1,f,b	;volatile
 22583                           
 22584                           ;../../VLCBlib_PIC/can18_ecan.c: 908:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 22585   00AFCE  0101               	movlb	1	; () banked
 22586   00AFD0  39BA               	swapf	setNewCanId@newCanId& (0+255),w,b
 22587   00AFD2  46E8               	rlncf	wreg,f,c
 22588   00AFD4  0B1F               	andlw	31
 22589   00AFD6  0B0F               	andlw	15
 22590   00AFD8  010F               	movlb	15	; () banked
 22591   00AFDA  1301               	iorwf	1,f,b	;volatile
 22592                           
 22593                           ; BSR set to: 15
 22594                           ;../../VLCBlib_PIC/can18_ecan.c: 909:         TXB2SIDL = TXB0SIDL;
 22595   00AFDC  CF22 FF02          	movff	3874,3842	;volatile
 22596                           
 22597                           ; BSR set to: 15
 22598                           ;../../VLCBlib_PIC/can18_ecan.c: 911:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 22599   00AFE0  0EFE               	movlw	254
 22600   00AFE2  0100               	movlb	0	; () banked
 22601   00AFE4  6FA4               	movwf	writeNVM@index& (0+255),b
 22602   00AFE6  0E03               	movlw	3
 22603   00AFE8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 22604   00AFEA  0E00               	movlw	0
 22605   00AFEC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 22606   00AFEE  C1BA  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 22607   00AFF2  0E00               	movlw	0
 22608   00AFF4  EC52  F05B         	call	_writeNVM
 22609                           
 22610                           ;../../VLCBlib_PIC/can18_ecan.c: 913:         canDiagnostics[0x0E].asUint++;
 22611   00AFF8  0101               	movlb	1	; () banked
 22612   00AFFA  4B93               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 22613   00AFFC  2B94               	incf	(_canDiagnostics+29)& (0+255),f,b
 22614                           
 22615                           ; BSR set to: 1
 22616   00AFFE  0012               	return		;funcret
 22617   00B000                     __end_of_setNewCanId:
 22618                           	callstack 0
 22619                           
 22620 ;; *************** function _pop *****************
 22621 ;; Defined at:
 22622 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 22623 ;; Parameters:    Size  Location     Type
 22624 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 22625 ;;		 -> txQueue(5), rxQueue(5), 
 22626 ;; Auto vars:     Size  Location     Type
 22627 ;;  ret             2   52[BANK0 ] PTR struct Message
 22628 ;;		 -> txBuffers(72), rxBuffers(288), 
 22629 ;; Return value:  Size  Location     Type
 22630 ;;                  2   45[BANK0 ] PTR struct Message
 22631 ;; Registers used:
 22632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22633 ;; Tracked objects:
 22634 ;;		On entry : 0/0
 22635 ;;		On exit  : 0/0
 22636 ;;		Unchanged: 0/0
 22637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22639 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22640 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22641 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22642 ;;Total ram usage:        9 bytes
 22643 ;; Hardware stack levels used: 1
 22644 ;; Hardware stack levels required when called: 12
 22645 ;; This function calls:
 22646 ;;		Nothing
 22647 ;; This function is called by:
 22648 ;;		_canReceiveMessage
 22649 ;; This function uses a non-reentrant model
 22650 ;;
 22651                           
 22652                           	psect	text81
 22653   009ACE                     __ptext81:
 22654                           	callstack 0
 22655   009ACE                     _pop:
 22656                           	callstack 16
 22657                           
 22658                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 22659                           
 22660                           ; BSR set to: 1
 22661                           ;incstack = 0
 22662   009ACE  0100               	movlb	0	; () banked
 22663   009AD0  518D               	movf	pop@q& (0+255),w,b
 22664   009AD2  6ED9               	movwf	fsr2l,c
 22665   009AD4  6ADA               	clrf	fsr2h,c
 22666   009AD6  0E02               	movlw	2
 22667   009AD8  26D9               	addwf	fsr2l,f,c
 22668   009ADA  518D               	movf	pop@q& (0+255),w,b
 22669   009ADC  6EE1               	movwf	fsr1l,c
 22670   009ADE  6AE2               	clrf	fsr1h,c
 22671   009AE0  0E03               	movlw	3
 22672   009AE2  26E1               	addwf	fsr1l,f,c
 22673   009AE4  50DE               	movf	postinc2,w,c
 22674   009AE6  18E6               	xorwf	postinc1,w,c
 22675   009AE8  A4D8               	btfss	status,2,c
 22676   009AEA  D005               	goto	l21867
 22677                           
 22678                           ; BSR set to: 0
 22679                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 22680   009AEC  0E00               	movlw	0
 22681   009AEE  6F8D               	movwf	?_pop& (0+255),b
 22682   009AF0  0E00               	movlw	0
 22683   009AF2  6F8E               	movwf	(?_pop+1)& (0+255),b
 22684   009AF4  0012               	return	
 22685   009AF6                     l21867:
 22686                           
 22687                           ; BSR set to: 0
 22688                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 22689   009AF6  518D               	movf	pop@q& (0+255),w,b
 22690   009AF8  6ED9               	movwf	fsr2l,c
 22691   009AFA  6ADA               	clrf	fsr2h,c
 22692   009AFC  0E02               	movlw	2
 22693   009AFE  26D9               	addwf	fsr2l,f,c
 22694   009B00  50DF               	movf	indf2,w,c
 22695   009B02  6F8F               	movwf	??_pop& (0+255),b
 22696   009B04  518F               	movf	??_pop& (0+255),w,b
 22697   009B06  0D09               	mullw	9
 22698   009B08  CFF3 F090          	movff	prodl,??_pop+1
 22699   009B0C  CFF4 F091          	movff	prodh,??_pop+2
 22700   009B10  518D               	movf	pop@q& (0+255),w,b
 22701   009B12  6ED9               	movwf	fsr2l,c
 22702   009B14  6ADA               	clrf	fsr2h,c
 22703   009B16  CFDE F092          	movff	postinc2,??_pop+3
 22704   009B1A  CFDD F093          	movff	postdec2,??_pop+4
 22705   009B1E  5190               	movf	(??_pop+1)& (0+255),w,b
 22706   009B20  2592               	addwf	(??_pop+3)& (0+255),w,b
 22707   009B22  6F94               	movwf	pop@ret& (0+255),b
 22708   009B24  5191               	movf	(??_pop+2)& (0+255),w,b
 22709   009B26  2193               	addwfc	(??_pop+4)& (0+255),w,b
 22710   009B28  6F95               	movwf	(pop@ret+1)& (0+255),b
 22711                           
 22712                           ; BSR set to: 0
 22713   009B2A  518D               	movf	pop@q& (0+255),w,b
 22714   009B2C  6ED9               	movwf	fsr2l,c
 22715   009B2E  6ADA               	clrf	fsr2h,c
 22716   009B30  0E02               	movlw	2
 22717   009B32  26D9               	addwf	fsr2l,f,c
 22718   009B34  2ADF               	incf	indf2,f,c
 22719                           
 22720                           ; BSR set to: 0
 22721                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 22722   009B36  518D               	movf	pop@q& (0+255),w,b
 22723   009B38  6ED9               	movwf	fsr2l,c
 22724   009B3A  6ADA               	clrf	fsr2h,c
 22725   009B3C  0E04               	movlw	4
 22726   009B3E  26D9               	addwf	fsr2l,f,c
 22727   009B40  518D               	movf	pop@q& (0+255),w,b
 22728   009B42  6EE1               	movwf	fsr1l,c
 22729   009B44  6AE2               	clrf	fsr1h,c
 22730   009B46  0E02               	movlw	2
 22731   009B48  26E1               	addwf	fsr1l,f,c
 22732   009B4A  50DE               	movf	postinc2,w,c
 22733   009B4C  5CE6               	subwf	postinc1,w,c
 22734   009B4E  A0D8               	btfss	status,0,c
 22735   009B50  D006               	goto	l21875
 22736                           
 22737                           ; BSR set to: 0
 22738   009B52  518D               	movf	pop@q& (0+255),w,b
 22739   009B54  6ED9               	movwf	fsr2l,c
 22740   009B56  6ADA               	clrf	fsr2h,c
 22741   009B58  0E02               	movlw	2
 22742   009B5A  26D9               	addwf	fsr2l,f,c
 22743   009B5C  6ADF               	clrf	indf2,c
 22744   009B5E                     l21875:
 22745                           
 22746                           ; BSR set to: 0
 22747                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 22748   009B5E  C094  F08D         	movff	pop@ret,?_pop
 22749   009B62  C095  F08E         	movff	pop@ret+1,?_pop+1
 22750                           
 22751                           ; BSR set to: 0
 22752   009B66  0012               	return		;funcret
 22753   009B68                     __end_of_pop:
 22754                           	callstack 0
 22755                           
 22756 ;; *************** function _memcpy *****************
 22757 ;; Defined at:
 22758 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 22759 ;; Parameters:    Size  Location     Type
 22760 ;;  d1              2   45[BANK0 ] PTR void 
 22761 ;;		 -> poll@m(9), 
 22762 ;;  s1              2   47[BANK0 ] PTR const void 
 22763 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22764 ;;  n               2   49[BANK0 ] unsigned int 
 22765 ;; Auto vars:     Size  Location     Type
 22766 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 22767 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22768 ;;  d               2   52[BANK0 ] PTR unsigned char 
 22769 ;;		 -> poll@m(9), 
 22770 ;;  tmp             1   51[BANK0 ] unsigned char 
 22771 ;; Return value:  Size  Location     Type
 22772 ;;                  2   45[BANK0 ] PTR void 
 22773 ;; Registers used:
 22774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22775 ;; Tracked objects:
 22776 ;;		On entry : 0/0
 22777 ;;		On exit  : 0/0
 22778 ;;		Unchanged: 0/0
 22779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22781 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22783 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22784 ;;Total ram usage:       11 bytes
 22785 ;; Hardware stack levels used: 1
 22786 ;; Hardware stack levels required when called: 12
 22787 ;; This function calls:
 22788 ;;		Nothing
 22789 ;; This function is called by:
 22790 ;;		_canReceiveMessage
 22791 ;; This function uses a non-reentrant model
 22792 ;;
 22793                           
 22794                           	psect	text82
 22795   00B93E                     __ptext82:
 22796                           	callstack 0
 22797   00B93E                     _memcpy:
 22798                           	callstack 16
 22799                           
 22800                           ; BSR set to: 0
 22801                           ;incstack = 0
 22802   00B93E  C08F  F096         	movff	memcpy@s1,memcpy@s
 22803   00B942  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 22804   00B946  C08D  F094         	movff	memcpy@d1,memcpy@d
 22805   00B94A  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 22806   00B94E  D010               	goto	l22053
 22807   00B950                     l22045:
 22808                           
 22809                           ; BSR set to: 0
 22810   00B950  C096  FFD9         	movff	memcpy@s,fsr2l
 22811   00B954  C097  FFDA         	movff	memcpy@s+1,fsr2h
 22812   00B958  50DF               	movf	indf2,w,c
 22813   00B95A  6F93               	movwf	memcpy@tmp& (0+255),b
 22814                           
 22815                           ; BSR set to: 0
 22816   00B95C  4B96               	infsnz	memcpy@s& (0+255),f,b
 22817   00B95E  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 22818                           
 22819                           ; BSR set to: 0
 22820   00B960  C094  FFD9         	movff	memcpy@d,fsr2l
 22821   00B964  C095  FFDA         	movff	memcpy@d+1,fsr2h
 22822   00B968  C093  FFDF         	movff	memcpy@tmp,indf2
 22823                           
 22824                           ; BSR set to: 0
 22825   00B96C  4B94               	infsnz	memcpy@d& (0+255),f,b
 22826   00B96E  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 22827   00B970                     l22053:
 22828   00B970  0100               	movlb	0	; () banked
 22829   00B972  0791               	decf	memcpy@n& (0+255),f,b
 22830   00B974  A0D8               	btfss	status,0,c
 22831   00B976  0792               	decf	(memcpy@n+1)& (0+255),f,b
 22832   00B978  2991               	incf	memcpy@n& (0+255),w,b
 22833   00B97A  E1EA               	bnz	l22045
 22834   00B97C  2992               	incf	(memcpy@n+1)& (0+255),w,b
 22835   00B97E  B4D8               	btfsc	status,2,c
 22836   00B980  0012               	return	
 22837   00B982  D7E6               	goto	l22045
 22838   00B984                     __end_of_memcpy:
 22839                           	callstack 0
 22840                           
 22841 ;; *************** function _handleSelfEnumeration *****************
 22842 ;; Defined at:
 22843 ;;		line 751 in file "../../VLCBlib_PIC/can18_ecan.c"
 22844 ;; Parameters:    Size  Location     Type
 22845 ;;  p               2   55[BANK0 ] PTR unsigned char 
 22846 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22847 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22848 ;;		 -> NULL(0), 
 22849 ;; Auto vars:     Size  Location     Type
 22850 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 22851 ;; Return value:  Size  Location     Type
 22852 ;;                  1    wreg      enum E13071
 22853 ;; Registers used:
 22854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22855 ;; Tracked objects:
 22856 ;;		On entry : 0/0
 22857 ;;		On exit  : 0/0
 22858 ;;		Unchanged: 0/0
 22859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22861 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22862 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22863 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22864 ;;Total ram usage:        7 bytes
 22865 ;; Hardware stack levels used: 1
 22866 ;; Hardware stack levels required when called: 13
 22867 ;; This function calls:
 22868 ;;		_tickGet
 22869 ;; This function is called by:
 22870 ;;		_canReceiveMessage
 22871 ;; This function uses a non-reentrant model
 22872 ;;
 22873                           
 22874                           	psect	text83
 22875   007FB8                     __ptext83:
 22876                           	callstack 0
 22877   007FB8                     _handleSelfEnumeration:
 22878                           	callstack 15
 22879                           
 22880                           ;../../VLCBlib_PIC/can18_ecan.c: 752:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 756:     if (p[5] & 0x40 ) {
 22881                           
 22882                           ; BSR set to: 0
 22883                           ;incstack = 0
 22884   007FB8  0100               	movlb	0	; () banked
 22885   007FBA  EE20 F005          	lfsr	2,5
 22886   007FBE  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22887   007FC0  26D9               	addwf	fsr2l,f,c
 22888   007FC2  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22889   007FC4  22DA               	addwfc	fsr2h,f,c
 22890   007FC6  ACDF               	btfss	indf2,6,c
 22891   007FC8  D00E               	goto	l22107
 22892                           
 22893                           ; BSR set to: 0
 22894                           ;../../VLCBlib_PIC/can18_ecan.c: 758:         TXB2CONbits.TXREQ = 1;
 22895   007FCA  010F               	movlb	15	; () banked
 22896   007FCC  8700               	bsf	0,3,b	;volatile
 22897                           
 22898                           ; BSR set to: 15
 22899                           ;../../VLCBlib_PIC/can18_ecan.c: 759:         enumerationStartTime.val = tickGet();
 22900   007FCE  ECD6  F059         	call	_tickGet	;wreg free
 22901   007FD2  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22902   007FD6  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22903   007FDA  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22904   007FDE  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22905                           
 22906                           ;../../VLCBlib_PIC/can18_ecan.c: 760:         return NOT_RECEIVED;
 22907   007FE2  0E00               	movlw	0
 22908   007FE4  0012               	return	
 22909   007FE6                     l22107:
 22910                           
 22911                           ; BSR set to: 0
 22912                           ;../../VLCBlib_PIC/can18_ecan.c: 762:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 22913   007FE6  EE20 F002          	lfsr	2,2
 22914   007FEA  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22915   007FEC  26D9               	addwf	fsr2l,f,c
 22916   007FEE  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22917   007FF0  22DA               	addwfc	fsr2h,f,c
 22918   007FF2  50DF               	movf	indf2,w,c
 22919   007FF4  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22920   007FF6  0E05               	movlw	5
 22921   007FF8  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22922   007FFA                     u23345:
 22923   007FFA  90D8               	bcf	status,0,c
 22924   007FFC  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 22925   007FFE  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 22926   008000  D7FC               	goto	u23345
 22927   008002  EE20 F001          	lfsr	2,1
 22928   008006  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22929   008008  26D9               	addwf	fsr2l,f,c
 22930   00800A  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22931   00800C  22DA               	addwfc	fsr2h,f,c
 22932   00800E  50DF               	movf	indf2,w,c
 22933   008010  0D08               	mullw	8
 22934   008012  50F3               	movf	243,w,c
 22935   008014  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 22936   008016  0B7F               	andlw	127
 22937   008018  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 22938                           
 22939                           ; BSR set to: 0
 22940                           ;../../VLCBlib_PIC/can18_ecan.c: 764:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 22941   00801A  0E02               	movlw	2
 22942   00801C  19C1               	xorwf	_enumerationState& (0+255),w,b
 22943   00801E  B4D8               	btfsc	status,2,c
 22944   008020  D00C               	goto	u23360
 22945                           
 22946                           ; BSR set to: 0
 22947   008022  EE20 F005          	lfsr	2,5
 22948   008026  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22949   008028  26D9               	addwf	fsr2l,f,c
 22950   00802A  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22951   00802C  22DA               	addwfc	fsr2h,f,c
 22952   00802E  50DF               	movf	indf2,w,c
 22953   008030  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22954   008032  0E0F               	movlw	15
 22955   008034  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22956   008036  A4D8               	btfss	status,2,c
 22957   008038  D01B               	goto	l22115
 22958   00803A                     u23360:
 22959                           
 22960                           ; BSR set to: 0
 22961                           ;../../VLCBlib_PIC/can18_ecan.c: 765:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 22962   00803A  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 22963   00803E  0E07               	movlw	7
 22964   008040  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22965   008042  0E01               	movlw	1
 22966   008044  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22967   008046  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 22968   008048  D002               	goto	u23374
 22969   00804A                     u23375:
 22970   00804A  90D8               	bcf	status,0,c
 22971   00804C  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 22972   00804E                     u23374:
 22973   00804E  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 22974   008050  D7FC               	goto	u23375
 22975   008052  0100               	movlb	0	; () banked
 22976   008054  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22977   008056  46E8               	rlncf	wreg,f,c
 22978   008058  0B1F               	andlw	31
 22979   00805A  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 22980   00805C  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 22981   00805E  0E54               	movlw	low _enumerationResults
 22982   008060  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 22983   008062  6ED9               	movwf	fsr2l,c
 22984   008064  0E02               	movlw	high _enumerationResults
 22985   008066  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 22986   008068  6EDA               	movwf	fsr2h,c
 22987   00806A  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 22988   00806C  12DF               	iorwf	indf2,f,c
 22989                           
 22990                           ;../../VLCBlib_PIC/can18_ecan.c: 766:     } else {
 22991   00806E  D016               	goto	l22125
 22992   008070                     l22115:
 22993                           
 22994                           ; BSR set to: 0
 22995                           ;../../VLCBlib_PIC/can18_ecan.c: 767:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 22996   008070  51C1               	movf	_enumerationState& (0+255),w,b
 22997   008072  A4D8               	btfss	status,2,c
 22998   008074  D013               	goto	l22125
 22999                           
 23000                           ; BSR set to: 0
 23001   008076  51C3               	movf	_canId& (0+255),w,b
 23002   008078  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23003   00807A  A4D8               	btfss	status,2,c
 23004   00807C  D00F               	goto	l22125
 23005                           
 23006                           ; BSR set to: 0
 23007                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 23008   00807E  0E01               	movlw	1
 23009   008080  6FC1               	movwf	_enumerationState& (0+255),b
 23010                           
 23011                           ; BSR set to: 0
 23012                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             canDiagnostics[0x0D].asUint++;
 23013   008082  0101               	movlb	1	; () banked
 23014   008084  4B91               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 23015   008086  2B92               	incf	(_canDiagnostics+27)& (0+255),f,b
 23016                           
 23017                           ; BSR set to: 1
 23018                           ;../../VLCBlib_PIC/can18_ecan.c: 772:             enumerationStartTime.val = tickGet();
 23019   008088  ECD6  F059         	call	_tickGet	;wreg free
 23020   00808C  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 23021   008090  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 23022   008094  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 23023   008098  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 23024   00809C                     l22125:
 23025                           
 23026                           ;../../VLCBlib_PIC/can18_ecan.c: 776:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 23027   00809C  0100               	movlb	0	; () banked
 23028   00809E  EE20 F005          	lfsr	2,5
 23029   0080A2  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23030   0080A4  26D9               	addwf	fsr2l,f,c
 23031   0080A6  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23032   0080A8  22DA               	addwfc	fsr2h,f,c
 23033   0080AA  50DF               	movf	indf2,w,c
 23034   0080AC  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23035   0080AE  0E0F               	movlw	15
 23036   0080B0  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23037   0080B2  B4D8               	btfsc	status,2,c
 23038   0080B4  D002               	goto	u23400
 23039   0080B6  0E01               	movlw	1
 23040   0080B8  0012               	return	
 23041   0080BA                     u23400:
 23042   0080BA  0E00               	movlw	0
 23043   0080BC  0012               	return		;funcret
 23044   0080BE                     __end_of_handleSelfEnumeration:
 23045                           	callstack 0
 23046                           
 23047 ;; *************** function _getBufferPointer *****************
 23048 ;; Defined at:
 23049 ;;		line 602 in file "../../VLCBlib_PIC/can18_ecan.c"
 23050 ;; Parameters:    Size  Location     Type
 23051 ;;  b               1    wreg     unsigned char 
 23052 ;; Auto vars:     Size  Location     Type
 23053 ;;  b               1   47[BANK0 ] unsigned char 
 23054 ;; Return value:  Size  Location     Type
 23055 ;;                  2   45[BANK0 ] PTR unsigned char 
 23056 ;; Registers used:
 23057 ;;		wreg, status,2, status,0
 23058 ;; Tracked objects:
 23059 ;;		On entry : 0/0
 23060 ;;		On exit  : 0/0
 23061 ;;		Unchanged: 0/0
 23062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23066 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23067 ;;Total ram usage:        3 bytes
 23068 ;; Hardware stack levels used: 1
 23069 ;; Hardware stack levels required when called: 12
 23070 ;; This function calls:
 23071 ;;		Nothing
 23072 ;; This function is called by:
 23073 ;;		_canReceiveMessage
 23074 ;; This function uses a non-reentrant model
 23075 ;;
 23076                           
 23077                           	psect	text84
 23078   009DC8                     __ptext84:
 23079                           	callstack 0
 23080   009DC8                     _getBufferPointer:
 23081                           	callstack 16
 23082                           
 23083                           ;incstack = 0
 23084                           ;getBufferPointer@b stored from wreg
 23085   009DC8  0100               	movlb	0	; () banked
 23086   009DCA  6F8F               	movwf	getBufferPointer@b& (0+255),b
 23087                           
 23088                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     switch (b) {
 23089   009DCC  D02D               	goto	l22095
 23090   009DCE                     l22057:
 23091                           
 23092                           ; BSR set to: 0
 23093                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & RXB0CON;
 23094   009DCE  0E60               	movlw	96
 23095   009DD0  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23096   009DD2  0E0F               	movlw	15
 23097   009DD4  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23098   009DD6  0012               	return	
 23099   009DD8                     l22061:
 23100                           
 23101                           ; BSR set to: 0
 23102                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return (uint8_t*) & RXB1CON;
 23103   009DD8  0E30               	movlw	48
 23104   009DDA  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23105   009DDC  0E0F               	movlw	15
 23106   009DDE  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23107   009DE0  0012               	return	
 23108   009DE2                     l22065:
 23109                           
 23110                           ; BSR set to: 0
 23111                           ;../../VLCBlib_PIC/can18_ecan.c: 609:             return (uint8_t*) & B0CON;
 23112   009DE2  0E80               	movlw	128
 23113   009DE4  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23114   009DE6  0E0E               	movlw	14
 23115   009DE8  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23116   009DEA  0012               	return	
 23117   009DEC                     l22069:
 23118                           
 23119                           ; BSR set to: 0
 23120                           ;../../VLCBlib_PIC/can18_ecan.c: 611:             return (uint8_t*) & B1CON;
 23121   009DEC  0E90               	movlw	144
 23122   009DEE  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23123   009DF0  0E0E               	movlw	14
 23124   009DF2  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23125   009DF4  0012               	return	
 23126   009DF6                     l22073:
 23127                           
 23128                           ; BSR set to: 0
 23129                           ;../../VLCBlib_PIC/can18_ecan.c: 613:             return (uint8_t*) & B2CON;
 23130   009DF6  0EA0               	movlw	160
 23131   009DF8  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23132   009DFA  0E0E               	movlw	14
 23133   009DFC  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23134   009DFE  0012               	return	
 23135   009E00                     l22077:
 23136                           
 23137                           ; BSR set to: 0
 23138                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             return (uint8_t*) & B3CON;
 23139   009E00  0EB0               	movlw	176
 23140   009E02  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23141   009E04  0E0E               	movlw	14
 23142   009E06  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23143   009E08  0012               	return	
 23144   009E0A                     l22081:
 23145                           
 23146                           ; BSR set to: 0
 23147                           ;../../VLCBlib_PIC/can18_ecan.c: 617:             return (uint8_t*) & B4CON;
 23148   009E0A  0EC0               	movlw	192
 23149   009E0C  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23150   009E0E  0E0E               	movlw	14
 23151   009E10  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23152   009E12  0012               	return	
 23153   009E14                     l22085:
 23154                           
 23155                           ; BSR set to: 0
 23156                           ;../../VLCBlib_PIC/can18_ecan.c: 619:             return (uint8_t*) & B5CON;
 23157   009E14  0ED0               	movlw	208
 23158   009E16  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23159   009E18  0E0E               	movlw	14
 23160   009E1A  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23161   009E1C  0012               	return	
 23162   009E1E                     l22089:
 23163                           
 23164                           ; BSR set to: 0
 23165                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             return ((void*)0);
 23166   009E1E  0E00               	movlw	0
 23167   009E20  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23168   009E22  0E00               	movlw	0
 23169   009E24  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23170   009E26  0012               	return	
 23171   009E28                     l22095:
 23172   009E28  0100               	movlb	0	; () banked
 23173   009E2A  518F               	movf	getBufferPointer@b& (0+255),w,b
 23174                           
 23175                           ; Switch size 1, requested type "simple"
 23176                           ; Number of cases is 8, Range of values is 0 to 7
 23177                           ; switch strategies available:
 23178                           ; Name         Instructions Cycles
 23179                           ; simple_byte           25    13 (average)
 23180                           ;	Chosen strategy is simple_byte
 23181   009E2C  0A00               	xorlw	0	; case 0
 23182   009E2E  B4D8               	btfsc	status,2,c
 23183   009E30  D7CE               	goto	l22057
 23184   009E32  0A01               	xorlw	1	; case 1
 23185   009E34  B4D8               	btfsc	status,2,c
 23186   009E36  D7D0               	goto	l22061
 23187   009E38  0A03               	xorlw	3	; case 2
 23188   009E3A  B4D8               	btfsc	status,2,c
 23189   009E3C  D7D2               	goto	l22065
 23190   009E3E  0A01               	xorlw	1	; case 3
 23191   009E40  B4D8               	btfsc	status,2,c
 23192   009E42  D7D4               	goto	l22069
 23193   009E44  0A07               	xorlw	7	; case 4
 23194   009E46  B4D8               	btfsc	status,2,c
 23195   009E48  D7D6               	goto	l22073
 23196   009E4A  0A01               	xorlw	1	; case 5
 23197   009E4C  B4D8               	btfsc	status,2,c
 23198   009E4E  D7D8               	goto	l22077
 23199   009E50  0A03               	xorlw	3	; case 6
 23200   009E52  B4D8               	btfsc	status,2,c
 23201   009E54  D7DA               	goto	l22081
 23202   009E56  0A01               	xorlw	1	; case 7
 23203   009E58  B4D8               	btfsc	status,2,c
 23204   009E5A  D7DC               	goto	l22085
 23205   009E5C  D7E0               	goto	l22089
 23206   009E5E                     __end_of_getBufferPointer:
 23207                           	callstack 0
 23208                           
 23209 ;; *************** function _sendMessage7 *****************
 23210 ;; Defined at:
 23211 ;;		line 1208 in file "../../VLCBlib_PIC/vlcb.c"
 23212 ;; Parameters:    Size  Location     Type
 23213 ;;  opc             1    wreg     enum E12392
 23214 ;;  data1           1    8[BANK1 ] unsigned char 
 23215 ;;  data2           1    9[BANK1 ] unsigned char 
 23216 ;;  data3           1   10[BANK1 ] unsigned char 
 23217 ;;  data4           1   11[BANK1 ] unsigned char 
 23218 ;;  data5           1   12[BANK1 ] unsigned char 
 23219 ;;  data6           1   13[BANK1 ] unsigned char 
 23220 ;;  data7           1   14[BANK1 ] unsigned char 
 23221 ;; Auto vars:     Size  Location     Type
 23222 ;;  opc             1   69[BANK0 ] enum E12392
 23223 ;; Return value:  Size  Location     Type
 23224 ;;                  1    wreg      void 
 23225 ;; Registers used:
 23226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23227 ;; Tracked objects:
 23228 ;;		On entry : 0/0
 23229 ;;		On exit  : 0/0
 23230 ;;		Unchanged: 0/0
 23231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23232 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23235 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23236 ;;Total ram usage:        8 bytes
 23237 ;; Hardware stack levels used: 1
 23238 ;; Hardware stack levels required when called: 15
 23239 ;; This function calls:
 23240 ;;		_sendMessage
 23241 ;; This function is called by:
 23242 ;;		_ackEventProcessMessage
 23243 ;;		_mnsProcessMessage
 23244 ;;		_nerdCallback
 23245 ;; This function uses a non-reentrant model
 23246 ;;
 23247                           
 23248                           	psect	text85
 23249   00BE3A                     __ptext85:
 23250                           	callstack 0
 23251   00BE3A                     _sendMessage7:
 23252                           	callstack 12
 23253                           
 23254                           ; BSR set to: 0
 23255                           ;incstack = 0
 23256                           ;sendMessage7@opc stored from wreg
 23257   00BE3A  0100               	movlb	0	; () banked
 23258   00BE3C  6FA5               	movwf	sendMessage7@opc& (0+255),b
 23259                           
 23260                           ;../../VLCBlib_PIC/vlcb.c: 1209:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 23261   00BE3E  0E08               	movlw	8
 23262   00BE40  0101               	movlb	1	; () banked
 23263   00BE42  6FB8               	movwf	sendMessage@len& (0+255),b
 23264   00BE44  C1C0  F1B9         	movff	sendMessage7@data1,sendMessage@data1
 23265   00BE48  C1C1  F1BA         	movff	sendMessage7@data2,sendMessage@data2
 23266   00BE4C  C1C2  F1BB         	movff	sendMessage7@data3,sendMessage@data3
 23267   00BE50  C1C3  F1BC         	movff	sendMessage7@data4,sendMessage@data4
 23268   00BE54  C1C4  F1BD         	movff	sendMessage7@data5,sendMessage@data5
 23269   00BE58  C1C5  F1BE         	movff	sendMessage7@data6,sendMessage@data6
 23270   00BE5C  C1C6  F1BF         	movff	sendMessage7@data7,sendMessage@data7
 23271   00BE60  0100               	movlb	0	; () banked
 23272   00BE62  51A5               	movf	sendMessage7@opc& (0+255),w,b
 23273   00BE64  ECD1  F053         	call	_sendMessage
 23274   00BE68  0012               	return		;funcret
 23275   00BE6A                     __end_of_sendMessage7:
 23276                           	callstack 0
 23277                           
 23278 ;; *************** function _findService *****************
 23279 ;; Defined at:
 23280 ;;		line 807 in file "../../VLCBlib_PIC/vlcb.c"
 23281 ;; Parameters:    Size  Location     Type
 23282 ;;  id              1    wreg     unsigned char 
 23283 ;; Auto vars:     Size  Location     Type
 23284 ;;  id              1   49[BANK0 ] unsigned char 
 23285 ;;  i               1   50[BANK0 ] unsigned char 
 23286 ;; Return value:  Size  Location     Type
 23287 ;;                  2   45[BANK0 ] PTR const struct Service
 23288 ;; Registers used:
 23289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23290 ;; Tracked objects:
 23291 ;;		On entry : 0/0
 23292 ;;		On exit  : 0/0
 23293 ;;		Unchanged: 0/0
 23294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23295 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23296 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23297 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23298 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23299 ;;Total ram usage:        6 bytes
 23300 ;; Hardware stack levels used: 1
 23301 ;; Hardware stack levels required when called: 12
 23302 ;; This function calls:
 23303 ;;		Nothing
 23304 ;; This function is called by:
 23305 ;;		_ackEventProcessMessage
 23306 ;; This function uses a non-reentrant model
 23307 ;;
 23308                           
 23309                           	psect	text86
 23310   009C02                     __ptext86:
 23311                           	callstack 0
 23312   009C02                     _findService:
 23313                           	callstack 16
 23314                           
 23315                           ;incstack = 0
 23316                           ;findService@id stored from wreg
 23317   009C02  0100               	movlb	0	; () banked
 23318   009C04  6F91               	movwf	findService@id& (0+255),b
 23319                           
 23320                           ;../../VLCBlib_PIC/vlcb.c: 808:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 809:     for (i
      +                          =0; i<9; i++) {
 23321   009C06  0E00               	movlw	0
 23322   009C08  0100               	movlb	0	; () banked
 23323   009C0A  6F92               	movwf	findService@i& (0+255),b
 23324   009C0C                     l21601:
 23325                           
 23326                           ; BSR set to: 0
 23327                           ;../../VLCBlib_PIC/vlcb.c: 810:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 23328   009C0C  5192               	movf	findService@i& (0+255),w,b
 23329   009C0E  0D02               	mullw	2
 23330   009C10  0E75               	movlw	low _services
 23331   009C12  24F3               	addwf	243,w,c
 23332   009C14  6EF6               	movwf	tblptrl,c
 23333   009C16  0EEE               	movlw	high _services
 23334   009C18  20F4               	addwfc	244,w,c
 23335   009C1A  6EF7               	movwf	tblptrh,c
 23336   009C1C                     	if	1	;There are 3 active tblptr bytes
 23337   009C1C  6AF8               	clrf	tblptru,c
 23338   009C1E  0E00               	movlw	low (__mediumconst shr (0+16))
 23339   009C20  22F8               	addwfc	tblptru,f,c
 23340   009C22                     	endif
 23341   009C22  0009               	tblrd		*+
 23342   009C24  50F5               	movf	tablat,w,c
 23343   009C26  0009               	tblrd		*+
 23344   009C28  10F5               	iorwf	tablat,w,c
 23345   009C2A  B4D8               	btfsc	status,2,c
 23346   009C2C  D02D               	goto	l21609
 23347                           
 23348                           ; BSR set to: 0
 23349   009C2E  5192               	movf	findService@i& (0+255),w,b
 23350   009C30  0D02               	mullw	2
 23351   009C32  0E75               	movlw	low _services
 23352   009C34  24F3               	addwf	243,w,c
 23353   009C36  6EF6               	movwf	tblptrl,c
 23354   009C38  0EEE               	movlw	high _services
 23355   009C3A  20F4               	addwfc	244,w,c
 23356   009C3C  6EF7               	movwf	tblptrh,c
 23357   009C3E                     	if	1	;There are 3 active tblptr bytes
 23358   009C3E  6AF8               	clrf	tblptru,c
 23359   009C40  0E00               	movlw	low (__mediumconst shr (0+16))
 23360   009C42  22F8               	addwfc	tblptru,f,c
 23361   009C44                     	endif
 23362   009C44  0009               	tblrd		*+
 23363   009C46  CFF5 F08F          	movff	tablat,??_findService
 23364   009C4A  0009               	tblrd		*+
 23365   009C4C  CFF5 F090          	movff	tablat,??_findService+1
 23366   009C50  C08F  FFF6         	movff	??_findService,tblptrl
 23367   009C54  C090  FFF7         	movff	??_findService+1,tblptrh
 23368   009C58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23369   009C58  6AF8               	clrf	tblptru,c
 23370   009C5A                     	endif
 23371   009C5A                     	if	0	;tblptru may be non-zero
 23372   009C5A                     	endif
 23373   009C5A  0008               	tblrd		*
 23374   009C5C  50F5               	movf	tablat,w,c
 23375   009C5E  1991               	xorwf	findService@id& (0+255),w,b
 23376   009C60  A4D8               	btfss	status,2,c
 23377   009C62  D012               	goto	l21609
 23378                           
 23379                           ; BSR set to: 0
 23380                           ;../../VLCBlib_PIC/vlcb.c: 811:             return services[i];
 23381   009C64  5192               	movf	findService@i& (0+255),w,b
 23382   009C66  0D02               	mullw	2
 23383   009C68  0E75               	movlw	low _services
 23384   009C6A  24F3               	addwf	243,w,c
 23385   009C6C  6EF6               	movwf	tblptrl,c
 23386   009C6E  0EEE               	movlw	high _services
 23387   009C70  20F4               	addwfc	244,w,c
 23388   009C72  6EF7               	movwf	tblptrh,c
 23389   009C74                     	if	1	;There are 3 active tblptr bytes
 23390   009C74  6AF8               	clrf	tblptru,c
 23391   009C76  0E00               	movlw	low (__mediumconst shr (0+16))
 23392   009C78  22F8               	addwfc	tblptru,f,c
 23393   009C7A                     	endif
 23394   009C7A  0009               	tblrd		*+
 23395   009C7C  CFF5 F08D          	movff	tablat,?_findService
 23396   009C80  000A               	tblrd		*-
 23397   009C82  CFF5 F08E          	movff	tablat,?_findService+1
 23398   009C86  0012               	return	
 23399   009C88                     l21609:
 23400                           
 23401                           ; BSR set to: 0
 23402                           ;../../VLCBlib_PIC/vlcb.c: 813:     }
 23403   009C88  2B92               	incf	findService@i& (0+255),f,b
 23404                           
 23405                           ; BSR set to: 0
 23406   009C8A  0E08               	movlw	8
 23407   009C8C  6592               	cpfsgt	findService@i& (0+255),b
 23408   009C8E  D7BE               	goto	l21601
 23409                           
 23410                           ; BSR set to: 0
 23411                           ;../../VLCBlib_PIC/vlcb.c: 814:     return ((void*)0);
 23412   009C90  0E00               	movlw	0
 23413   009C92  6F8D               	movwf	?_findService& (0+255),b
 23414   009C94  0E00               	movlw	0
 23415   009C96  6F8E               	movwf	(?_findService+1)& (0+255),b
 23416                           
 23417                           ; BSR set to: 0
 23418   009C98  0012               	return		;funcret
 23419   009C9A                     __end_of_findService:
 23420                           	callstack 0
 23421                           
 23422 ;; *************** function _ackEventCheckLen *****************
 23423 ;; Defined at:
 23424 ;;		line 182 in file "../../VLCBlib_PIC/event_acknowledge.c"
 23425 ;; Parameters:    Size  Location     Type
 23426 ;;  m               2   17[BANK1 ] PTR struct Message
 23427 ;;		 -> poll@m(9), 
 23428 ;;  needed          1   19[BANK1 ] unsigned char 
 23429 ;; Auto vars:     Size  Location     Type
 23430 ;;		None
 23431 ;; Return value:  Size  Location     Type
 23432 ;;                  1    wreg      enum E12793
 23433 ;; Registers used:
 23434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23435 ;; Tracked objects:
 23436 ;;		On entry : 0/0
 23437 ;;		On exit  : 0/0
 23438 ;;		Unchanged: 0/0
 23439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23440 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23443 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23444 ;;Total ram usage:        3 bytes
 23445 ;; Hardware stack levels used: 1
 23446 ;; Hardware stack levels required when called: 17
 23447 ;; This function calls:
 23448 ;;		_checkLen
 23449 ;; This function is called by:
 23450 ;;		_ackEventProcessMessage
 23451 ;; This function uses a non-reentrant model
 23452 ;;
 23453                           
 23454                           	psect	text87
 23455   00C2C2                     __ptext87:
 23456                           	callstack 0
 23457   00C2C2                     _ackEventCheckLen:
 23458                           	callstack 11
 23459                           
 23460                           ;../../VLCBlib_PIC/event_acknowledge.c: 183:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 23461                           
 23462                           ; BSR set to: 0
 23463                           ;incstack = 0
 23464   00C2C2  C1C9  F1C5         	movff	ackEventCheckLen@m,checkLen@m
 23465   00C2C6  C1CA  F1C6         	movff	ackEventCheckLen@m+1,checkLen@m+1
 23466   00C2CA  C1CB  F1C7         	movff	ackEventCheckLen@needed,checkLen@needed
 23467   00C2CE  0E09               	movlw	9
 23468   00C2D0  0101               	movlb	1	; () banked
 23469   00C2D2  6FC8               	movwf	checkLen@service& (0+255),b
 23470   00C2D4  EC53  F053         	call	_checkLen	;wreg free
 23471   00C2D8  0012               	return		;funcret
 23472   00C2DA                     __end_of_ackEventCheckLen:
 23473                           	callstack 0
 23474                           
 23475 ;; *************** function _checkLen *****************
 23476 ;; Defined at:
 23477 ;;		line 1094 in file "../../VLCBlib_PIC/vlcb.c"
 23478 ;; Parameters:    Size  Location     Type
 23479 ;;  m               2   13[BANK1 ] PTR struct Message
 23480 ;;		 -> poll@m(9), 
 23481 ;;  needed          1   15[BANK1 ] unsigned char 
 23482 ;;  service         1   16[BANK1 ] unsigned char 
 23483 ;; Auto vars:     Size  Location     Type
 23484 ;;		None
 23485 ;; Return value:  Size  Location     Type
 23486 ;;                  1    wreg      enum E12793
 23487 ;; Registers used:
 23488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23489 ;; Tracked objects:
 23490 ;;		On entry : 0/0
 23491 ;;		On exit  : 0/0
 23492 ;;		Unchanged: 0/0
 23493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23494 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23496 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23497 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23498 ;;Total ram usage:        5 bytes
 23499 ;; Hardware stack levels used: 1
 23500 ;; Hardware stack levels required when called: 16
 23501 ;; This function calls:
 23502 ;;		_sendMessage5
 23503 ;; This function is called by:
 23504 ;;		_ackEventCheckLen
 23505 ;;		_teachCheckLen
 23506 ;; This function uses a non-reentrant model
 23507 ;;
 23508                           
 23509                           	psect	text88
 23510   00A6A6                     __ptext88:
 23511                           	callstack 0
 23512   00A6A6                     _checkLen:
 23513                           	callstack 11
 23514                           
 23515                           ;../../VLCBlib_PIC/vlcb.c: 1095:     if (m->len < needed) {
 23516                           
 23517                           ;incstack = 0
 23518   00A6A6  C1C5  FFD9         	movff	checkLen@m,fsr2l
 23519   00A6AA  C1C6  FFDA         	movff	checkLen@m+1,fsr2h
 23520   00A6AE  0101               	movlb	1	; () banked
 23521   00A6B0  51C7               	movf	checkLen@needed& (0+255),w,b
 23522   00A6B2  5CDE               	subwf	postinc2,w,c
 23523   00A6B4  B0D8               	btfsc	status,0,c
 23524   00A6B6  D034               	goto	l20539
 23525                           
 23526                           ; BSR set to: 1
 23527                           ;../../VLCBlib_PIC/vlcb.c: 1097:         if (m->len > 2) {
 23528   00A6B8  C1C5  FFD9         	movff	checkLen@m,fsr2l
 23529   00A6BC  C1C6  FFDA         	movff	checkLen@m+1,fsr2h
 23530   00A6C0  0E02               	movlw	2
 23531   00A6C2  64DF               	cpfsgt	indf2,c
 23532   00A6C4  D02B               	goto	l20535
 23533                           
 23534                           ; BSR set to: 1
 23535                           ;../../VLCBlib_PIC/vlcb.c: 1098:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 23536   00A6C6  EE20 F002          	lfsr	2,2
 23537   00A6CA  51C5               	movf	checkLen@m& (0+255),w,b
 23538   00A6CC  26D9               	addwf	fsr2l,f,c
 23539   00A6CE  51C6               	movf	(checkLen@m+1)& (0+255),w,b
 23540   00A6D0  22DA               	addwfc	fsr2h,f,c
 23541   00A6D2  50DE               	movf	postinc2,w,c
 23542   00A6D4  0100               	movlb	0	; () banked
 23543   00A6D6  19C0               	xorwf	(_nn+1)& (0+255),w,b
 23544   00A6D8  A4D8               	btfss	status,2,c
 23545   00A6DA  D020               	goto	l20535
 23546                           
 23547                           ; BSR set to: 0
 23548   00A6DC  0101               	movlb	1	; () banked
 23549   00A6DE  EE20 F003          	lfsr	2,3
 23550   00A6E2  51C5               	movf	checkLen@m& (0+255),w,b
 23551   00A6E4  26D9               	addwf	fsr2l,f,c
 23552   00A6E6  51C6               	movf	(checkLen@m+1)& (0+255),w,b
 23553   00A6E8  22DA               	addwfc	fsr2h,f,c
 23554   00A6EA  0100               	movlb	0	; () banked
 23555   00A6EC  51BF               	movf	_nn& (0+255),w,b
 23556   00A6EE  18DE               	xorwf	postinc2,w,c
 23557   00A6F0  A4D8               	btfss	status,2,c
 23558   00A6F2  D014               	goto	l20535
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;../../VLCBlib_PIC/vlcb.c: 1099:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 23562   00A6F4  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 23563   00A6F8  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 23564   00A6FC  0101               	movlb	1	; () banked
 23565   00A6FE  EE20 F001          	lfsr	2,1
 23566   00A702  51C5               	movf	checkLen@m& (0+255),w,b
 23567   00A704  26D9               	addwf	fsr2l,f,c
 23568   00A706  51C6               	movf	(checkLen@m+1)& (0+255),w,b
 23569   00A708  22DA               	addwfc	fsr2h,f,c
 23570   00A70A  50DF               	movf	indf2,w,c
 23571   00A70C  6FC2               	movwf	sendMessage5@data3& (0+255),b
 23572   00A70E  C1C8  F1C3         	movff	checkLen@service,sendMessage5@data4
 23573   00A712  0E01               	movlw	1
 23574   00A714  6FC4               	movwf	sendMessage5@data5& (0+255),b
 23575   00A716  0EAF               	movlw	175
 23576   00A718  EC35  F05F         	call	_sendMessage5
 23577   00A71C                     l20535:
 23578                           
 23579                           ;../../VLCBlib_PIC/vlcb.c: 1103:         return PROCESSED;
 23580   00A71C  0E01               	movlw	1
 23581   00A71E  0012               	return	
 23582   00A720                     l20539:
 23583                           
 23584                           ; BSR set to: 1
 23585                           ;../../VLCBlib_PIC/vlcb.c: 1105:     return NOT_PROCESSED;
 23586   00A720  0E00               	movlw	0
 23587   00A722  0012               	return		;funcret
 23588   00A724                     __end_of_checkLen:
 23589                           	callstack 0
 23590                           
 23591 ;; *************** function _sendMessage5 *****************
 23592 ;; Defined at:
 23593 ;;		line 1179 in file "../../VLCBlib_PIC/vlcb.c"
 23594 ;; Parameters:    Size  Location     Type
 23595 ;;  opc             1    wreg     enum E12392
 23596 ;;  data1           1    8[BANK1 ] unsigned char 
 23597 ;;  data2           1    9[BANK1 ] unsigned char 
 23598 ;;  data3           1   10[BANK1 ] unsigned char 
 23599 ;;  data4           1   11[BANK1 ] unsigned char 
 23600 ;;  data5           1   12[BANK1 ] unsigned char 
 23601 ;; Auto vars:     Size  Location     Type
 23602 ;;  opc             1   69[BANK0 ] enum E12392
 23603 ;; Return value:  Size  Location     Type
 23604 ;;                  1    wreg      void 
 23605 ;; Registers used:
 23606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23607 ;; Tracked objects:
 23608 ;;		On entry : 0/0
 23609 ;;		On exit  : 0/0
 23610 ;;		Unchanged: 0/0
 23611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23612 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23615 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23616 ;;Total ram usage:        6 bytes
 23617 ;; Hardware stack levels used: 1
 23618 ;; Hardware stack levels required when called: 15
 23619 ;; This function calls:
 23620 ;;		_sendMessage
 23621 ;; This function is called by:
 23622 ;;		_mnsProcessMessage
 23623 ;;		_mnsPoll
 23624 ;;		_mnsTRserviceDiscoveryCallback
 23625 ;;		_nvProcessMessage
 23626 ;;		_checkLen
 23627 ;;		_canProcessMessage
 23628 ;;		_teachProcessMessage
 23629 ;;		_teachCheckLen
 23630 ;;		_doNenrd
 23631 ;;		_doNnclr
 23632 ;;		_doEvlrn
 23633 ;;		_doReval
 23634 ;;		_doEvuln
 23635 ;;		_doReqev
 23636 ;; This function uses a non-reentrant model
 23637 ;;
 23638                           
 23639                           	psect	text89
 23640   00BE6A                     __ptext89:
 23641                           	callstack 0
 23642   00BE6A                     _sendMessage5:
 23643                           	callstack 12
 23644                           
 23645                           ;incstack = 0
 23646                           ;sendMessage5@opc stored from wreg
 23647   00BE6A  0100               	movlb	0	; () banked
 23648   00BE6C  6FA5               	movwf	sendMessage5@opc& (0+255),b
 23649                           
 23650                           ;../../VLCBlib_PIC/vlcb.c: 1180:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 23651   00BE6E  0E06               	movlw	6
 23652   00BE70  0101               	movlb	1	; () banked
 23653   00BE72  6FB8               	movwf	sendMessage@len& (0+255),b
 23654   00BE74  C1C0  F1B9         	movff	sendMessage5@data1,sendMessage@data1
 23655   00BE78  C1C1  F1BA         	movff	sendMessage5@data2,sendMessage@data2
 23656   00BE7C  C1C2  F1BB         	movff	sendMessage5@data3,sendMessage@data3
 23657   00BE80  C1C3  F1BC         	movff	sendMessage5@data4,sendMessage@data4
 23658   00BE84  C1C4  F1BD         	movff	sendMessage5@data5,sendMessage@data5
 23659   00BE88  0E00               	movlw	0
 23660   00BE8A  6FBE               	movwf	sendMessage@data6& (0+255),b
 23661   00BE8C  0E00               	movlw	0
 23662   00BE8E  6FBF               	movwf	sendMessage@data7& (0+255),b
 23663   00BE90  0100               	movlb	0	; () banked
 23664   00BE92  51A5               	movf	sendMessage5@opc& (0+255),w,b
 23665   00BE94  ECD1  F053         	call	_sendMessage
 23666   00BE98  0012               	return		;funcret
 23667   00BE9A                     __end_of_sendMessage5:
 23668                           	callstack 0
 23669                           
 23670 ;; *************** function _APP_preProcessMessage *****************
 23671 ;; Defined at:
 23672 ;;		line 410 in file "../main.c"
 23673 ;; Parameters:    Size  Location     Type
 23674 ;;  m               2   45[BANK0 ] PTR struct Message
 23675 ;;		 -> poll@m(9), 
 23676 ;; Auto vars:     Size  Location     Type
 23677 ;;		None
 23678 ;; Return value:  Size  Location     Type
 23679 ;;                  1    wreg      enum E12743
 23680 ;; Registers used:
 23681 ;;		wreg
 23682 ;; Tracked objects:
 23683 ;;		On entry : 0/0
 23684 ;;		On exit  : 0/0
 23685 ;;		Unchanged: 0/0
 23686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23690 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23691 ;;Total ram usage:        2 bytes
 23692 ;; Hardware stack levels used: 1
 23693 ;; Hardware stack levels required when called: 12
 23694 ;; This function calls:
 23695 ;;		Nothing
 23696 ;; This function is called by:
 23697 ;;		_poll
 23698 ;; This function uses a non-reentrant model
 23699 ;;
 23700                           
 23701                           	psect	text90
 23702   00C3D4                     __ptext90:
 23703                           	callstack 0
 23704   00C3D4                     _APP_preProcessMessage:
 23705                           	callstack 17
 23706                           
 23707                           ;../main.c: 411:     return NOT_PROCESSED;
 23708                           
 23709                           ;incstack = 0
 23710   00C3D4  0E00               	movlw	0
 23711   00C3D6  0012               	return		;funcret
 23712   00C3D8                     __end_of_APP_preProcessMessage:
 23713                           	callstack 0
 23714                           
 23715 ;; *************** function _APP_postProcessMessage *****************
 23716 ;; Defined at:
 23717 ;;		line 417 in file "../main.c"
 23718 ;; Parameters:    Size  Location     Type
 23719 ;;  m               2   45[BANK0 ] PTR struct Message
 23720 ;;		 -> poll@m(9), 
 23721 ;; Auto vars:     Size  Location     Type
 23722 ;;		None
 23723 ;; Return value:  Size  Location     Type
 23724 ;;                  1    wreg      enum E12743
 23725 ;; Registers used:
 23726 ;;		wreg
 23727 ;; Tracked objects:
 23728 ;;		On entry : 0/0
 23729 ;;		On exit  : 0/0
 23730 ;;		Unchanged: 0/0
 23731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23735 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23736 ;;Total ram usage:        2 bytes
 23737 ;; Hardware stack levels used: 1
 23738 ;; Hardware stack levels required when called: 12
 23739 ;; This function calls:
 23740 ;;		Nothing
 23741 ;; This function is called by:
 23742 ;;		_poll
 23743 ;; This function uses a non-reentrant model
 23744 ;;
 23745                           
 23746                           	psect	text91
 23747   00C3D8                     __ptext91:
 23748                           	callstack 0
 23749   00C3D8                     _APP_postProcessMessage:
 23750                           	callstack 17
 23751                           
 23752                           ;../main.c: 418:     return NOT_PROCESSED;
 23753                           
 23754                           ;incstack = 0
 23755   00C3D8  0E00               	movlw	0
 23756   00C3DA  0012               	return		;funcret
 23757   00C3DC                     __end_of_APP_postProcessMessage:
 23758                           	callstack 0
 23759                           
 23760 ;; *************** function _loop *****************
 23761 ;; Defined at:
 23762 ;;		line 350 in file "../main.c"
 23763 ;; Parameters:    Size  Location     Type
 23764 ;;		None
 23765 ;; Auto vars:     Size  Location     Type
 23766 ;;		None
 23767 ;; Return value:  Size  Location     Type
 23768 ;;                  1    wreg      void 
 23769 ;; Registers used:
 23770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23771 ;; Tracked objects:
 23772 ;;		On entry : 0/0
 23773 ;;		On exit  : 0/0
 23774 ;;		Unchanged: 0/0
 23775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23778 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23779 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23780 ;;Total ram usage:        8 bytes
 23781 ;; Hardware stack levels used: 1
 23782 ;; Hardware stack levels required when called: 21
 23783 ;; This function calls:
 23784 ;;		___lmul
 23785 ;;		_getNV
 23786 ;;		_inputScan
 23787 ;;		_processActions
 23788 ;;		_processOutputs
 23789 ;;		_sendProducedEvent
 23790 ;;		_startServos
 23791 ;;		_tickGet
 23792 ;; This function is called by:
 23793 ;;		_main
 23794 ;; This function uses a non-reentrant model
 23795 ;;
 23796                           
 23797                           	psect	text92
 23798   006B08                     __ptext92:
 23799                           	callstack 0
 23800   006B08                     _loop:
 23801                           	callstack 9
 23802                           
 23803                           ;../main.c: 352:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 23804                           
 23805                           ;incstack = 0
 23806   006B08  0100               	movlb	0	; () banked
 23807   006B0A  51D2               	movf	_started& (0+255),w,b
 23808   006B0C  A4D8               	btfss	status,2,c
 23809   006B0E  D054               	goto	l24379
 23810                           
 23811                           ; BSR set to: 0
 23812   006B10  ECD6  F059         	call	_tickGet	;wreg free
 23813   006B14  503B               	movf	_startTime^0,w,c
 23814   006B16  0100               	movlb	0	; () banked
 23815   006B18  5D8D               	subwf	?_tickGet& (0+255),w,b
 23816   006B1A  0101               	movlb	1	; () banked
 23817   006B1C  6FE5               	movwf	??_loop& (0+255),b
 23818   006B1E  503C               	movf	(_startTime+1)^0,w,c
 23819   006B20  0100               	movlb	0	; () banked
 23820   006B22  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23821   006B24  0101               	movlb	1	; () banked
 23822   006B26  6FE6               	movwf	(??_loop+1)& (0+255),b
 23823   006B28  503D               	movf	(_startTime+2)^0,w,c
 23824   006B2A  0100               	movlb	0	; () banked
 23825   006B2C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23826   006B2E  0101               	movlb	1	; () banked
 23827   006B30  6FE7               	movwf	(??_loop+2)& (0+255),b
 23828   006B32  503E               	movf	(_startTime+3)^0,w,c
 23829   006B34  0100               	movlb	0	; () banked
 23830   006B36  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23831   006B38  0101               	movlb	1	; () banked
 23832   006B3A  6FE8               	movwf	(??_loop+3)& (0+255),b
 23833   006B3C  0E01               	movlw	1
 23834   006B3E  EC21  F05D         	call	_getNV
 23835   006B42  0100               	movlb	0	; () banked
 23836   006B44  C08D  F091         	movff	?_getNV,___lmul@multiplier
 23837   006B48  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 23838   006B4C  0E00               	movlw	0
 23839   006B4E  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23840   006B50  0EFF               	movlw	-1
 23841   006B52  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 23842   006B54  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 23843   006B56  0E6A               	movlw	106
 23844   006B58  6F95               	movwf	___lmul@multiplicand& (0+255),b
 23845   006B5A  0E18               	movlw	24
 23846   006B5C  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23847   006B5E  0E00               	movlw	0
 23848   006B60  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23849   006B62  0E00               	movlw	0
 23850   006B64  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23851   006B66  EC02  F05A         	call	___lmul	;wreg free
 23852   006B6A  0E48               	movlw	72
 23853   006B6C  0100               	movlb	0	; () banked
 23854   006B6E  2591               	addwf	?___lmul& (0+255),w,b
 23855   006B70  0101               	movlb	1	; () banked
 23856   006B72  6FE9               	movwf	(??_loop+4)& (0+255),b
 23857   006B74  0EE8               	movlw	232
 23858   006B76  0100               	movlb	0	; () banked
 23859   006B78  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 23860   006B7A  0101               	movlb	1	; () banked
 23861   006B7C  6FEA               	movwf	(??_loop+5)& (0+255),b
 23862   006B7E  0E01               	movlw	1
 23863   006B80  0100               	movlb	0	; () banked
 23864   006B82  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 23865   006B84  0101               	movlb	1	; () banked
 23866   006B86  6FEB               	movwf	(??_loop+6)& (0+255),b
 23867   006B88  0E00               	movlw	0
 23868   006B8A  0100               	movlb	0	; () banked
 23869   006B8C  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 23870   006B8E  0101               	movlb	1	; () banked
 23871   006B90  6FEC               	movwf	(??_loop+7)& (0+255),b
 23872   006B92  51E5               	movf	??_loop& (0+255),w,b
 23873   006B94  5DE9               	subwf	(??_loop+4)& (0+255),w,b
 23874   006B96  51E6               	movf	(??_loop+1)& (0+255),w,b
 23875   006B98  59EA               	subwfb	(??_loop+5)& (0+255),w,b
 23876   006B9A  51E7               	movf	(??_loop+2)& (0+255),w,b
 23877   006B9C  59EB               	subwfb	(??_loop+6)& (0+255),w,b
 23878   006B9E  51E8               	movf	(??_loop+3)& (0+255),w,b
 23879   006BA0  59EC               	subwfb	(??_loop+7)& (0+255),w,b
 23880   006BA2  B0D8               	btfsc	status,0,c
 23881   006BA4  D009               	goto	l24379
 23882                           
 23883                           ; BSR set to: 1
 23884                           ;../main.c: 353:         started = TRUE;
 23885   006BA6  0E01               	movlw	1
 23886   006BA8  0100               	movlb	0	; () banked
 23887   006BAA  6FD2               	movwf	_started& (0+255),b
 23888                           
 23889                           ; BSR set to: 0
 23890                           ;../main.c: 354:         sendProducedEvent(1, EVENT_ON);
 23891   006BAC  0E01               	movlw	1
 23892   006BAE  0101               	movlb	1	; () banked
 23893   006BB0  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 23894   006BB2  0E01               	movlw	1
 23895   006BB4  EC76  F04B         	call	_sendProducedEvent
 23896   006BB8                     l24379:
 23897                           
 23898                           ;../main.c: 358:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 23899   006BB8  ECD6  F059         	call	_tickGet	;wreg free
 23900   006BBC  0101               	movlb	1	; () banked
 23901   006BBE  516C               	movf	_lastServoStartTime& (0+255),w,b
 23902   006BC0  0100               	movlb	0	; () banked
 23903   006BC2  5D8D               	subwf	?_tickGet& (0+255),w,b
 23904   006BC4  0101               	movlb	1	; () banked
 23905   006BC6  6FE5               	movwf	??_loop& (0+255),b
 23906   006BC8  516D               	movf	(_lastServoStartTime+1)& (0+255),w,b
 23907   006BCA  0100               	movlb	0	; () banked
 23908   006BCC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23909   006BCE  0101               	movlb	1	; () banked
 23910   006BD0  6FE6               	movwf	(??_loop+1)& (0+255),b
 23911   006BD2  516E               	movf	(_lastServoStartTime+2)& (0+255),w,b
 23912   006BD4  0100               	movlb	0	; () banked
 23913   006BD6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23914   006BD8  0101               	movlb	1	; () banked
 23915   006BDA  6FE7               	movwf	(??_loop+2)& (0+255),b
 23916   006BDC  516F               	movf	(_lastServoStartTime+3)& (0+255),w,b
 23917   006BDE  0100               	movlb	0	; () banked
 23918   006BE0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23919   006BE2  0101               	movlb	1	; () banked
 23920   006BE4  6FE8               	movwf	(??_loop+3)& (0+255),b
 23921   006BE6  51E8               	movf	(??_loop+3)& (0+255),w,b
 23922   006BE8  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23923   006BEA  11E6               	iorwf	(??_loop+1)& (0+255),w,b
 23924   006BEC  E104               	bnz	u26190
 23925   006BEE  0E9C               	movlw	156
 23926   006BF0  5DE5               	subwf	??_loop& (0+255),w,b
 23927   006BF2  A0D8               	btfss	status,0,c
 23928   006BF4  D00C               	goto	l24385
 23929   006BF6                     u26190:
 23930                           
 23931                           ; BSR set to: 1
 23932                           ;../main.c: 359:         startServos();
 23933   006BF6  EC77  F04C         	call	_startServos	;wreg free
 23934                           
 23935                           ;../main.c: 360:         lastServoStartTime.val = tickGet();
 23936   006BFA  ECD6  F059         	call	_tickGet	;wreg free
 23937   006BFE  C08D  F16C         	movff	?_tickGet,_lastServoStartTime
 23938   006C02  C08E  F16D         	movff	?_tickGet+1,_lastServoStartTime+1
 23939   006C06  C08F  F16E         	movff	?_tickGet+2,_lastServoStartTime+2
 23940   006C0A  C090  F16F         	movff	?_tickGet+3,_lastServoStartTime+3
 23941   006C0E                     l24385:
 23942                           
 23943                           ;../main.c: 363:     if (started) {
 23944   006C0E  0100               	movlb	0	; () banked
 23945   006C10  51D2               	movf	_started& (0+255),w,b
 23946   006C12  B4D8               	btfsc	status,2,c
 23947   006C14  0012               	return	
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;../main.c: 364:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 23951   006C16  ECD6  F059         	call	_tickGet	;wreg free
 23952   006C1A  0101               	movlb	1	; () banked
 23953   006C1C  5168               	movf	_lastInputScanTime& (0+255),w,b
 23954   006C1E  0100               	movlb	0	; () banked
 23955   006C20  5D8D               	subwf	?_tickGet& (0+255),w,b
 23956   006C22  0101               	movlb	1	; () banked
 23957   006C24  6FE5               	movwf	??_loop& (0+255),b
 23958   006C26  5169               	movf	(_lastInputScanTime+1)& (0+255),w,b
 23959   006C28  0100               	movlb	0	; () banked
 23960   006C2A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23961   006C2C  0101               	movlb	1	; () banked
 23962   006C2E  6FE6               	movwf	(??_loop+1)& (0+255),b
 23963   006C30  516A               	movf	(_lastInputScanTime+2)& (0+255),w,b
 23964   006C32  0100               	movlb	0	; () banked
 23965   006C34  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23966   006C36  0101               	movlb	1	; () banked
 23967   006C38  6FE7               	movwf	(??_loop+2)& (0+255),b
 23968   006C3A  516B               	movf	(_lastInputScanTime+3)& (0+255),w,b
 23969   006C3C  0100               	movlb	0	; () banked
 23970   006C3E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23971   006C40  0101               	movlb	1	; () banked
 23972   006C42  6FE8               	movwf	(??_loop+3)& (0+255),b
 23973   006C44  51E8               	movf	(??_loop+3)& (0+255),w,b
 23974   006C46  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23975   006C48  E106               	bnz	u26210
 23976   006C4A  0E37               	movlw	55
 23977   006C4C  5DE5               	subwf	??_loop& (0+255),w,b
 23978   006C4E  0E01               	movlw	1
 23979   006C50  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 23980   006C52  A0D8               	btfss	status,0,c
 23981   006C54  D00C               	goto	l24393
 23982   006C56                     u26210:
 23983                           
 23984                           ; BSR set to: 1
 23985                           ;../main.c: 365:             inputScan();
 23986   006C56  EC92  F024         	call	_inputScan	;wreg free
 23987                           
 23988                           ;../main.c: 366:             lastInputScanTime.val = tickGet();
 23989   006C5A  ECD6  F059         	call	_tickGet	;wreg free
 23990   006C5E  C08D  F168         	movff	?_tickGet,_lastInputScanTime
 23991   006C62  C08E  F169         	movff	?_tickGet+1,_lastInputScanTime+1
 23992   006C66  C08F  F16A         	movff	?_tickGet+2,_lastInputScanTime+2
 23993   006C6A  C090  F16B         	movff	?_tickGet+3,_lastInputScanTime+3
 23994   006C6E                     l24393:
 23995                           
 23996                           ;../main.c: 368:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 23997   006C6E  ECD6  F059         	call	_tickGet	;wreg free
 23998   006C72  0101               	movlb	1	; () banked
 23999   006C74  5164               	movf	_lastActionPollTime& (0+255),w,b
 24000   006C76  0100               	movlb	0	; () banked
 24001   006C78  5D8D               	subwf	?_tickGet& (0+255),w,b
 24002   006C7A  0101               	movlb	1	; () banked
 24003   006C7C  6FE5               	movwf	??_loop& (0+255),b
 24004   006C7E  5165               	movf	(_lastActionPollTime+1)& (0+255),w,b
 24005   006C80  0100               	movlb	0	; () banked
 24006   006C82  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24007   006C84  0101               	movlb	1	; () banked
 24008   006C86  6FE6               	movwf	(??_loop+1)& (0+255),b
 24009   006C88  5166               	movf	(_lastActionPollTime+2)& (0+255),w,b
 24010   006C8A  0100               	movlb	0	; () banked
 24011   006C8C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24012   006C8E  0101               	movlb	1	; () banked
 24013   006C90  6FE7               	movwf	(??_loop+2)& (0+255),b
 24014   006C92  5167               	movf	(_lastActionPollTime+3)& (0+255),w,b
 24015   006C94  0100               	movlb	0	; () banked
 24016   006C96  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24017   006C98  0101               	movlb	1	; () banked
 24018   006C9A  6FE8               	movwf	(??_loop+3)& (0+255),b
 24019   006C9C  51E8               	movf	(??_loop+3)& (0+255),w,b
 24020   006C9E  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 24021   006CA0  E106               	bnz	u26220
 24022   006CA2  0E39               	movlw	57
 24023   006CA4  5DE5               	subwf	??_loop& (0+255),w,b
 24024   006CA6  0E18               	movlw	24
 24025   006CA8  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 24026   006CAA  A0D8               	btfss	status,0,c
 24027   006CAC  0012               	return	
 24028   006CAE                     u26220:
 24029                           
 24030                           ; BSR set to: 1
 24031                           ;../main.c: 369:             processActions();
 24032   006CAE  EC9C  F030         	call	_processActions	;wreg free
 24033                           
 24034                           ;../main.c: 370:             processOutputs();
 24035   006CB2  ECB9  F033         	call	_processOutputs	;wreg free
 24036                           
 24037                           ;../main.c: 371:             lastActionPollTime.val = tickGet();
 24038   006CB6  ECD6  F059         	call	_tickGet	;wreg free
 24039   006CBA  C08D  F164         	movff	?_tickGet,_lastActionPollTime
 24040   006CBE  C08E  F165         	movff	?_tickGet+1,_lastActionPollTime+1
 24041   006CC2  C08F  F166         	movff	?_tickGet+2,_lastActionPollTime+2
 24042   006CC6  C090  F167         	movff	?_tickGet+3,_lastActionPollTime+3
 24043   006CCA  0012               	return		;funcret
 24044   006CCC                     __end_of_loop:
 24045                           	callstack 0
 24046                           
 24047 ;; *************** function _startServos *****************
 24048 ;; Defined at:
 24049 ;;		line 182 in file "../servo.c"
 24050 ;; Parameters:    Size  Location     Type
 24051 ;;		None
 24052 ;; Auto vars:     Size  Location     Type
 24053 ;;  type            1   29[BANK1 ] unsigned char 
 24054 ;; Return value:  Size  Location     Type
 24055 ;;                  1    wreg      void 
 24056 ;; Registers used:
 24057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24058 ;; Tracked objects:
 24059 ;;		On entry : 0/0
 24060 ;;		On exit  : 0/0
 24061 ;;		Unchanged: 0/0
 24062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24064 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24066 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24067 ;;Total ram usage:        1 bytes
 24068 ;; Hardware stack levels used: 1
 24069 ;; Hardware stack levels required when called: 19
 24070 ;; This function calls:
 24071 ;;		_getNV
 24072 ;;		_pollServos
 24073 ;;		_setupTimer1
 24074 ;;		_setupTimer3
 24075 ;; This function is called by:
 24076 ;;		_loop
 24077 ;; This function uses a non-reentrant model
 24078 ;;
 24079                           
 24080                           	psect	text93
 24081   0098EE                     __ptext93:
 24082                           	callstack 0
 24083   0098EE                     _startServos:
 24084                           	callstack 10
 24085                           
 24086                           ;../servo.c: 183:     uint8_t type;;../servo.c: 186:     servoInBlock++;
 24087                           
 24088                           ;incstack = 0
 24089   0098EE  0100               	movlb	0	; () banked
 24090   0098F0  2BCB               	incf	_servoInBlock& (0+255),f,b
 24091                           
 24092                           ; BSR set to: 0
 24093                           ;../servo.c: 187:     if (servoInBlock >= 8) {
 24094   0098F2  0E07               	movlw	7
 24095   0098F4  65CB               	cpfsgt	_servoInBlock& (0+255),b
 24096   0098F6  D004               	goto	l22451
 24097                           
 24098                           ; BSR set to: 0
 24099                           ;../servo.c: 188:         servoInBlock = 0;
 24100   0098F8  0E00               	movlw	0
 24101   0098FA  6FCB               	movwf	_servoInBlock& (0+255),b
 24102                           
 24103                           ; BSR set to: 0
 24104                           ;../servo.c: 189:         pollServos();
 24105   0098FC  EC28  F004         	call	_pollServos	;wreg free
 24106   009900                     l22451:
 24107                           
 24108                           ;../servo.c: 191:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 24109   009900  0100               	movlb	0	; () banked
 24110   009902  51CB               	movf	_servoInBlock& (0+255),w,b
 24111   009904  0D07               	mullw	7
 24112   009906  50F3               	movf	243,w,c
 24113   009908  0F10               	addlw	16
 24114   00990A  EC21  F05D         	call	_getNV
 24115   00990E  0100               	movlb	0	; () banked
 24116   009910  518D               	movf	?_getNV& (0+255),w,b
 24117   009912  0101               	movlb	1	; () banked
 24118   009914  6FD5               	movwf	startServos@type& (0+255),b
 24119                           
 24120                           ; BSR set to: 1
 24121                           ;../servo.c: 192:     if ((type == 2) || (type == 3) || (type == 4)) {
 24122   009916  0E02               	movlw	2
 24123   009918  19D5               	xorwf	startServos@type& (0+255),w,b
 24124   00991A  B4D8               	btfsc	status,2,c
 24125   00991C  D008               	goto	u23770
 24126                           
 24127                           ; BSR set to: 1
 24128   00991E  0E03               	movlw	3
 24129   009920  19D5               	xorwf	startServos@type& (0+255),w,b
 24130   009922  B4D8               	btfsc	status,2,c
 24131   009924  D004               	goto	u23770
 24132                           
 24133                           ; BSR set to: 1
 24134   009926  0E04               	movlw	4
 24135   009928  19D5               	xorwf	startServos@type& (0+255),w,b
 24136   00992A  A4D8               	btfss	status,2,c
 24137   00992C  D00D               	goto	l22463
 24138   00992E                     u23770:
 24139                           
 24140                           ; BSR set to: 1
 24141                           ;../servo.c: 193:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 24142   00992E  0E30               	movlw	low _servoState
 24143   009930  0100               	movlb	0	; () banked
 24144   009932  25CB               	addwf	_servoInBlock& (0+255),w,b
 24145   009934  6ED9               	movwf	fsr2l,c
 24146   009936  6ADA               	clrf	fsr2h,c
 24147   009938  0E01               	movlw	high _servoState
 24148   00993A  22DA               	addwfc	fsr2h,f,c
 24149   00993C  50DF               	movf	indf2,w,c
 24150   00993E  B4D8               	btfsc	status,2,c
 24151   009940  D003               	goto	l22463
 24152                           
 24153                           ; BSR set to: 0
 24154   009942  51CB               	movf	_servoInBlock& (0+255),w,b
 24155   009944  EC57  F050         	call	_setupTimer1
 24156   009948                     l22463:
 24157                           
 24158                           ;../servo.c: 195:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 24159   009948  0100               	movlb	0	; () banked
 24160   00994A  51CB               	movf	_servoInBlock& (0+255),w,b
 24161   00994C  0D07               	mullw	7
 24162   00994E  50F3               	movf	243,w,c
 24163   009950  0F48               	addlw	72
 24164   009952  EC21  F05D         	call	_getNV
 24165   009956  0100               	movlb	0	; () banked
 24166   009958  518D               	movf	?_getNV& (0+255),w,b
 24167   00995A  0101               	movlb	1	; () banked
 24168   00995C  6FD5               	movwf	startServos@type& (0+255),b
 24169                           
 24170                           ; BSR set to: 1
 24171                           ;../servo.c: 196:     if ((type == 2) || (type == 3) || (type == 4)) {
 24172   00995E  0E02               	movlw	2
 24173   009960  19D5               	xorwf	startServos@type& (0+255),w,b
 24174   009962  B4D8               	btfsc	status,2,c
 24175   009964  D008               	goto	u23810
 24176                           
 24177                           ; BSR set to: 1
 24178   009966  0E03               	movlw	3
 24179   009968  19D5               	xorwf	startServos@type& (0+255),w,b
 24180   00996A  B4D8               	btfsc	status,2,c
 24181   00996C  D004               	goto	u23810
 24182                           
 24183                           ; BSR set to: 1
 24184   00996E  0E04               	movlw	4
 24185   009970  19D5               	xorwf	startServos@type& (0+255),w,b
 24186   009972  A4D8               	btfss	status,2,c
 24187   009974  0012               	return	
 24188   009976                     u23810:
 24189                           
 24190                           ; BSR set to: 1
 24191                           ;../servo.c: 197:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 24192   009976  0E38               	movlw	low (_servoState+8)
 24193   009978  0100               	movlb	0	; () banked
 24194   00997A  25CB               	addwf	_servoInBlock& (0+255),w,b
 24195   00997C  6ED9               	movwf	fsr2l,c
 24196   00997E  6ADA               	clrf	fsr2h,c
 24197   009980  0E01               	movlw	high (_servoState+8)
 24198   009982  22DA               	addwfc	fsr2h,f,c
 24199   009984  50DF               	movf	indf2,w,c
 24200   009986  B4D8               	btfsc	status,2,c
 24201   009988  0012               	return	
 24202                           
 24203                           ; BSR set to: 0
 24204   00998A  51CB               	movf	_servoInBlock& (0+255),w,b
 24205   00998C  0F08               	addlw	8
 24206   00998E  EC0E  F050         	call	_setupTimer3
 24207   009992  0012               	return		;funcret
 24208   009994                     __end_of_startServos:
 24209                           	callstack 0
 24210                           
 24211 ;; *************** function _setupTimer3 *****************
 24212 ;; Defined at:
 24213 ;;		line 217 in file "../servo.c"
 24214 ;; Parameters:    Size  Location     Type
 24215 ;;  io              1    wreg     unsigned char 
 24216 ;; Auto vars:     Size  Location     Type
 24217 ;;  io              1   60[BANK0 ] unsigned char 
 24218 ;;  ticks           2   58[BANK0 ] unsigned short 
 24219 ;; Return value:  Size  Location     Type
 24220 ;;                  1    wreg      void 
 24221 ;; Registers used:
 24222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24223 ;; Tracked objects:
 24224 ;;		On entry : 0/0
 24225 ;;		On exit  : 0/0
 24226 ;;		Unchanged: 0/0
 24227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24229 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24230 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24231 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24232 ;;Total ram usage:        8 bytes
 24233 ;; Hardware stack levels used: 1
 24234 ;; Hardware stack levels required when called: 13
 24235 ;; This function calls:
 24236 ;;		_getNV
 24237 ;;		_setOutputPin
 24238 ;; This function is called by:
 24239 ;;		_startServos
 24240 ;; This function uses a non-reentrant model
 24241 ;;
 24242                           
 24243                           	psect	text94
 24244   00A01C                     __ptext94:
 24245                           	callstack 0
 24246   00A01C                     _setupTimer3:
 24247                           	callstack 15
 24248                           
 24249                           ;incstack = 0
 24250                           ;setupTimer3@io stored from wreg
 24251   00A01C  0100               	movlb	0	; () banked
 24252   00A01E  6F9C               	movwf	setupTimer3@io& (0+255),b
 24253                           
 24254                           ;../servo.c: 218:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24255   00A020  0100               	movlb	0	; () banked
 24256   00A022  519C               	movf	setupTimer3@io& (0+255),w,b
 24257   00A024  0D07               	mullw	7
 24258   00A026  50F3               	movf	243,w,c
 24259   00A028  0F11               	addlw	17
 24260   00A02A  EC21  F05D         	call	_getNV
 24261   00A02E  0100               	movlb	0	; () banked
 24262   00A030  BF8D               	btfsc	?_getNV& (0+255),7,b
 24263   00A032  D011               	goto	l21579
 24264                           
 24265                           ; BSR set to: 0
 24266   00A034  519C               	movf	setupTimer3@io& (0+255),w,b
 24267   00A036  0FA9               	addlw	low _currentPos
 24268   00A038  6ED9               	movwf	fsr2l,c
 24269   00A03A  6ADA               	clrf	fsr2h,c
 24270   00A03C  50DF               	movf	indf2,w,c
 24271   00A03E  6F95               	movwf	??_setupTimer3& (0+255),b
 24272   00A040  5195               	movf	??_setupTimer3& (0+255),w,b
 24273   00A042  0D13               	mullw	19
 24274   00A044  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24275   00A048  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24276   00A04C  0E10               	movlw	16
 24277   00A04E  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24278   00A050  6F98               	movwf	_setupTimer3$1926& (0+255),b
 24279   00A052  0E0E               	movlw	14
 24280   00A054  D010               	goto	L4
 24281   00A056                     l21579:
 24282                           
 24283                           ; BSR set to: 0
 24284   00A056  519C               	movf	setupTimer3@io& (0+255),w,b
 24285   00A058  0FA9               	addlw	low _currentPos
 24286   00A05A  6ED9               	movwf	fsr2l,c
 24287   00A05C  6ADA               	clrf	fsr2h,c
 24288   00A05E  50DF               	movf	indf2,w,c
 24289   00A060  6F95               	movwf	??_setupTimer3& (0+255),b
 24290   00A062  5195               	movf	??_setupTimer3& (0+255),w,b
 24291   00A064  0D24               	mullw	36
 24292   00A066  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24293   00A06A  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24294   00A06E  0E78               	movlw	120
 24295   00A070  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24296   00A072  6F98               	movwf	_setupTimer3$1926& (0+255),b
 24297   00A074  0E05               	movlw	5
 24298   00A076                     L4:
 24299   00A076  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 24300   00A078  6F99               	movwf	(_setupTimer3$1926+1)& (0+255),b
 24301                           
 24302                           ; BSR set to: 0
 24303   00A07A  1D98               	comf	_setupTimer3$1926& (0+255),w,b
 24304   00A07C  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 24305   00A07E  1D99               	comf	(_setupTimer3$1926+1)& (0+255),w,b
 24306   00A080  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 24307                           
 24308                           ; BSR set to: 0
 24309                           ;../servo.c: 221:     TMR3H = ticks >> 8;
 24310   00A082  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 24311   00A084  6EB3               	movwf	179,c	;volatile
 24312                           
 24313                           ; BSR set to: 0
 24314                           ;../servo.c: 222:     TMR3L = ticks & 0xFF;
 24315   00A086  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 24316                           
 24317                           ; BSR set to: 0
 24318                           ;../servo.c: 225:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 24319   00A08A  519C               	movf	setupTimer3@io& (0+255),w,b
 24320   00A08C  0D07               	mullw	7
 24321   00A08E  50F3               	movf	243,w,c
 24322   00A090  0F11               	addlw	17
 24323   00A092  EC21  F05D         	call	_getNV
 24324   00A096  0100               	movlb	0	; () banked
 24325   00A098  BB8D               	btfsc	?_getNV& (0+255),5,b
 24326   00A09A  D002               	goto	u22750
 24327   00A09C  0E01               	movlw	1
 24328   00A09E  D001               	goto	u22760
 24329   00A0A0                     u22750:
 24330   00A0A0  0E00               	movlw	0
 24331   00A0A2                     u22760:
 24332   00A0A2  6F91               	movwf	setOutputPin@state& (0+255),b
 24333   00A0A4  519C               	movf	setupTimer3@io& (0+255),w,b
 24334   00A0A6  EC66  F036         	call	_setOutputPin
 24335                           
 24336                           ;../servo.c: 226:     T3CONbits.TMR3ON = 1;
 24337   00A0AA  80B1               	bsf	177,0,c	;volatile
 24338   00A0AC  0012               	return		;funcret
 24339   00A0AE                     __end_of_setupTimer3:
 24340                           	callstack 0
 24341                           
 24342 ;; *************** function _setupTimer1 *****************
 24343 ;; Defined at:
 24344 ;;		line 206 in file "../servo.c"
 24345 ;; Parameters:    Size  Location     Type
 24346 ;;  io              1    wreg     unsigned char 
 24347 ;; Auto vars:     Size  Location     Type
 24348 ;;  io              1   60[BANK0 ] unsigned char 
 24349 ;;  ticks           2   58[BANK0 ] unsigned short 
 24350 ;; Return value:  Size  Location     Type
 24351 ;;                  1    wreg      void 
 24352 ;; Registers used:
 24353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24354 ;; Tracked objects:
 24355 ;;		On entry : 0/0
 24356 ;;		On exit  : 0/0
 24357 ;;		Unchanged: 0/0
 24358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24360 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24361 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24362 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24363 ;;Total ram usage:        8 bytes
 24364 ;; Hardware stack levels used: 1
 24365 ;; Hardware stack levels required when called: 13
 24366 ;; This function calls:
 24367 ;;		_getNV
 24368 ;;		_setOutputPin
 24369 ;; This function is called by:
 24370 ;;		_startServos
 24371 ;; This function uses a non-reentrant model
 24372 ;;
 24373                           
 24374                           	psect	text95
 24375   00A0AE                     __ptext95:
 24376                           	callstack 0
 24377   00A0AE                     _setupTimer1:
 24378                           	callstack 15
 24379                           
 24380                           ;incstack = 0
 24381                           ;setupTimer1@io stored from wreg
 24382   00A0AE  0100               	movlb	0	; () banked
 24383   00A0B0  6F9C               	movwf	setupTimer1@io& (0+255),b
 24384                           
 24385                           ;../servo.c: 207:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24386   00A0B2  0100               	movlb	0	; () banked
 24387   00A0B4  519C               	movf	setupTimer1@io& (0+255),w,b
 24388   00A0B6  0D07               	mullw	7
 24389   00A0B8  50F3               	movf	243,w,c
 24390   00A0BA  0F11               	addlw	17
 24391   00A0BC  EC21  F05D         	call	_getNV
 24392   00A0C0  0100               	movlb	0	; () banked
 24393   00A0C2  BF8D               	btfsc	?_getNV& (0+255),7,b
 24394   00A0C4  D011               	goto	l21563
 24395                           
 24396                           ; BSR set to: 0
 24397   00A0C6  519C               	movf	setupTimer1@io& (0+255),w,b
 24398   00A0C8  0FA9               	addlw	low _currentPos
 24399   00A0CA  6ED9               	movwf	fsr2l,c
 24400   00A0CC  6ADA               	clrf	fsr2h,c
 24401   00A0CE  50DF               	movf	indf2,w,c
 24402   00A0D0  6F95               	movwf	??_setupTimer1& (0+255),b
 24403   00A0D2  5195               	movf	??_setupTimer1& (0+255),w,b
 24404   00A0D4  0D13               	mullw	19
 24405   00A0D6  CFF3 F096          	movff	prodl,??_setupTimer1+1
 24406   00A0DA  CFF4 F097          	movff	prodh,??_setupTimer1+2
 24407   00A0DE  0E10               	movlw	16
 24408   00A0E0  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 24409   00A0E2  6F98               	movwf	_setupTimer1$1922& (0+255),b
 24410   00A0E4  0E0E               	movlw	14
 24411   00A0E6  D010               	goto	L5
 24412   00A0E8                     l21563:
 24413                           
 24414                           ; BSR set to: 0
 24415   00A0E8  519C               	movf	setupTimer1@io& (0+255),w,b
 24416   00A0EA  0FA9               	addlw	low _currentPos
 24417   00A0EC  6ED9               	movwf	fsr2l,c
 24418   00A0EE  6ADA               	clrf	fsr2h,c
 24419   00A0F0  50DF               	movf	indf2,w,c
 24420   00A0F2  6F95               	movwf	??_setupTimer1& (0+255),b
 24421   00A0F4  5195               	movf	??_setupTimer1& (0+255),w,b
 24422   00A0F6  0D24               	mullw	36
 24423   00A0F8  CFF3 F096          	movff	prodl,??_setupTimer1+1
 24424   00A0FC  CFF4 F097          	movff	prodh,??_setupTimer1+2
 24425   00A100  0E78               	movlw	120
 24426   00A102  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 24427   00A104  6F98               	movwf	_setupTimer1$1922& (0+255),b
 24428   00A106  0E05               	movlw	5
 24429   00A108                     L5:
 24430   00A108  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 24431   00A10A  6F99               	movwf	(_setupTimer1$1922+1)& (0+255),b
 24432                           
 24433                           ; BSR set to: 0
 24434   00A10C  1D98               	comf	_setupTimer1$1922& (0+255),w,b
 24435   00A10E  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 24436   00A110  1D99               	comf	(_setupTimer1$1922+1)& (0+255),w,b
 24437   00A112  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 24438                           
 24439                           ; BSR set to: 0
 24440                           ;../servo.c: 210:     TMR1H = ticks >> 8;
 24441   00A114  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 24442   00A116  6ECF               	movwf	207,c	;volatile
 24443                           
 24444                           ; BSR set to: 0
 24445                           ;../servo.c: 211:     TMR1L = ticks & 0xFF;
 24446   00A118  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 24447                           
 24448                           ; BSR set to: 0
 24449                           ;../servo.c: 214:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 24450   00A11C  519C               	movf	setupTimer1@io& (0+255),w,b
 24451   00A11E  0D07               	mullw	7
 24452   00A120  50F3               	movf	243,w,c
 24453   00A122  0F11               	addlw	17
 24454   00A124  EC21  F05D         	call	_getNV
 24455   00A128  0100               	movlb	0	; () banked
 24456   00A12A  BB8D               	btfsc	?_getNV& (0+255),5,b
 24457   00A12C  D002               	goto	u22720
 24458   00A12E  0E01               	movlw	1
 24459   00A130  D001               	goto	u22730
 24460   00A132                     u22720:
 24461   00A132  0E00               	movlw	0
 24462   00A134                     u22730:
 24463   00A134  6F91               	movwf	setOutputPin@state& (0+255),b
 24464   00A136  519C               	movf	setupTimer1@io& (0+255),w,b
 24465   00A138  EC66  F036         	call	_setOutputPin
 24466                           
 24467                           ;../servo.c: 215:     T1CONbits.TMR1ON = 1;
 24468   00A13C  80CD               	bsf	205,0,c	;volatile
 24469   00A13E  0012               	return		;funcret
 24470   00A140                     __end_of_setupTimer1:
 24471                           	callstack 0
 24472                           
 24473 ;; *************** function _pollServos *****************
 24474 ;; Defined at:
 24475 ;;		line 284 in file "../servo.c"
 24476 ;; Parameters:    Size  Location     Type
 24477 ;;		None
 24478 ;; Auto vars:     Size  Location     Type
 24479 ;;  io              1   28[BANK1 ] unsigned char 
 24480 ;;  midway          1   27[BANK1 ] unsigned char 
 24481 ;;  beforeMidway    1   26[BANK1 ] enum E12710
 24482 ;;  target          1   25[BANK1 ] unsigned char 
 24483 ;; Return value:  Size  Location     Type
 24484 ;;                  1    wreg      void 
 24485 ;; Registers used:
 24486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24487 ;; Tracked objects:
 24488 ;;		On entry : 0/0
 24489 ;;		On exit  : 0/0
 24490 ;;		Unchanged: 0/0
 24491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24493 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24494 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24495 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24496 ;;Total ram usage:       12 bytes
 24497 ;; Hardware stack levels used: 1
 24498 ;; Hardware stack levels required when called: 18
 24499 ;; This function calls:
 24500 ;;		___awdiv
 24501 ;;		_bounceDown
 24502 ;;		_bounceUp
 24503 ;;		_getNV
 24504 ;;		_initBounce
 24505 ;;		_sendProducedEvent
 24506 ;;		_tickGet
 24507 ;;		_writeNVM
 24508 ;; This function is called by:
 24509 ;;		_startServos
 24510 ;; This function uses a non-reentrant model
 24511 ;;
 24512                           
 24513                           	psect	text96
 24514   000850                     __ptext96:
 24515                           	callstack 0
 24516   000850                     _pollServos:
 24517                           	callstack 10
 24518                           
 24519                           ;../servo.c: 285:     uint8_t midway;;../servo.c: 286:     Boolean beforeMidway;;../serv
      +                          o.c: 287:     uint8_t io;;../servo.c: 288:     uint8_t target;;../servo.c: 290:     for 
      +                          (io=0; io<16; io++) {
 24520                           
 24521                           ;incstack = 0
 24522   000850  0E00               	movlw	0
 24523   000852  0101               	movlb	1	; () banked
 24524   000854  6FD4               	movwf	pollServos@io& (0+255),b
 24525   000856  EFF0  F00A         	goto	l21513
 24526   00085A                     l21285:
 24527                           
 24528                           ; BSR set to: 0
 24529                           ;../servo.c: 293:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 24530   00085A  0101               	movlb	1	; () banked
 24531   00085C  51D4               	movf	pollServos@io& (0+255),w,b
 24532   00085E  0D07               	mullw	7
 24533   000860  50F3               	movf	243,w,c
 24534   000862  0F12               	addlw	18
 24535   000864  EC21  F05D         	call	_getNV
 24536   000868  0100               	movlb	0	; () banked
 24537   00086A  518D               	movf	?_getNV& (0+255),w,b
 24538   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 24539   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 24540   000870  0E00               	movlw	0
 24541   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 24542   000874  0E02               	movlw	2
 24543   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 24544   000878  EC4A  F052         	call	___awdiv	;wreg free
 24545   00087C  C097  F1C9         	movff	?___awdiv,??_pollServos
 24546   000880  C098  F1CA         	movff	?___awdiv+1,??_pollServos+1
 24547   000884  0101               	movlb	1	; () banked
 24548   000886  51D4               	movf	pollServos@io& (0+255),w,b
 24549   000888  0D07               	mullw	7
 24550   00088A  50F3               	movf	243,w,c
 24551   00088C  0F13               	addlw	19
 24552   00088E  EC21  F05D         	call	_getNV
 24553   000892  0100               	movlb	0	; () banked
 24554   000894  518D               	movf	?_getNV& (0+255),w,b
 24555   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 24556   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 24557   00089A  0E00               	movlw	0
 24558   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 24559   00089E  0E02               	movlw	2
 24560   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 24561   0008A2  EC4A  F052         	call	___awdiv	;wreg free
 24562   0008A6  0100               	movlb	0	; () banked
 24563   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 24564   0008AA  0101               	movlb	1	; () banked
 24565   0008AC  25C9               	addwf	??_pollServos& (0+255),w,b
 24566   0008AE  6FD3               	movwf	pollServos@midway& (0+255),b
 24567                           
 24568                           ; BSR set to: 1
 24569                           ;../servo.c: 295:                 beforeMidway=FALSE;
 24570   0008B0  0E00               	movlw	0
 24571   0008B2  6FD2               	movwf	pollServos@beforeMidway& (0+255),b
 24572                           
 24573                           ;../servo.c: 296:                 switch (servoState[io]) {
 24574   0008B4  D239               	goto	l21373
 24575   0008B6                     l21289:
 24576                           
 24577                           ; BSR set to: 1
 24578                           ;../servo.c: 298:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 24579   0008B6  51D4               	movf	pollServos@io& (0+255),w,b
 24580   0008B8  0D07               	mullw	7
 24581   0008BA  50F3               	movf	243,w,c
 24582   0008BC  0F12               	addlw	18
 24583   0008BE  EC21  F05D         	call	_getNV
 24584   0008C2  0101               	movlb	1	; () banked
 24585   0008C4  51D4               	movf	pollServos@io& (0+255),w,b
 24586   0008C6  0FA9               	addlw	low _currentPos
 24587   0008C8  6ED9               	movwf	fsr2l,c
 24588   0008CA  6ADA               	clrf	fsr2h,c
 24589   0008CC  50DF               	movf	indf2,w,c
 24590   0008CE  6FC9               	movwf	??_pollServos& (0+255),b
 24591   0008D0  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24592   0008D2  0100               	movlb	0	; () banked
 24593   0008D4  518D               	movf	?_getNV& (0+255),w,b
 24594   0008D6  0101               	movlb	1	; () banked
 24595   0008D8  19C9               	xorwf	??_pollServos& (0+255),w,b
 24596   0008DA  E118               	bnz	l21293
 24597   0008DC  0100               	movlb	0	; () banked
 24598   0008DE  518E               	movf	(?_getNV+1)& (0+255),w,b
 24599   0008E0  0101               	movlb	1	; () banked
 24600   0008E2  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 24601   0008E4  A4D8               	btfss	status,2,c
 24602   0008E6  D012               	goto	l21293
 24603                           
 24604                           ; BSR set to: 1
 24605                           ;../servo.c: 299:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24606   0008E8  51D4               	movf	pollServos@io& (0+255),w,b
 24607   0008EA  0D07               	mullw	7
 24608   0008EC  50F3               	movf	243,w,c
 24609   0008EE  0F11               	addlw	17
 24610   0008F0  EC21  F05D         	call	_getNV
 24611   0008F4  0100               	movlb	0	; () banked
 24612   0008F6  518D               	movf	?_getNV& (0+255),w,b
 24613   0008F8  0B40               	andlw	64
 24614   0008FA  0101               	movlb	1	; () banked
 24615   0008FC  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24616   0008FE  51D4               	movf	pollServos@io& (0+255),w,b
 24617   000900  0D04               	mullw	4
 24618   000902  50F3               	movf	243,w,c
 24619   000904  0F08               	addlw	8
 24620   000906  EC76  F04B         	call	_sendProducedEvent
 24621                           
 24622                           ;../servo.c: 300:                         } else {
 24623   00090A  D011               	goto	l21295
 24624   00090C                     l21293:
 24625                           
 24626                           ; BSR set to: 1
 24627                           ;../servo.c: 301:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24628   00090C  51D4               	movf	pollServos@io& (0+255),w,b
 24629   00090E  0D07               	mullw	7
 24630   000910  50F3               	movf	243,w,c
 24631   000912  0F11               	addlw	17
 24632   000914  EC21  F05D         	call	_getNV
 24633   000918  0100               	movlb	0	; () banked
 24634   00091A  518D               	movf	?_getNV& (0+255),w,b
 24635   00091C  0B40               	andlw	64
 24636   00091E  0101               	movlb	1	; () banked
 24637   000920  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24638   000922  51D4               	movf	pollServos@io& (0+255),w,b
 24639   000924  0D04               	mullw	4
 24640   000926  50F3               	movf	243,w,c
 24641   000928  0F0A               	addlw	10
 24642   00092A  EC76  F04B         	call	_sendProducedEvent
 24643   00092E                     l21295:
 24644                           
 24645                           ;../servo.c: 303:                         servoState[io] = SS_MOVING;
 24646   00092E  0E30               	movlw	low _servoState
 24647   000930  0101               	movlb	1	; () banked
 24648   000932  25D4               	addwf	pollServos@io& (0+255),w,b
 24649   000934  6ED9               	movwf	fsr2l,c
 24650   000936  6ADA               	clrf	fsr2h,c
 24651   000938  0E01               	movlw	high _servoState
 24652   00093A  22DA               	addwfc	fsr2h,f,c
 24653   00093C  0E02               	movlw	2
 24654   00093E  6EDF               	movwf	indf2,c
 24655   000940                     l21297:
 24656                           
 24657                           ; BSR set to: 1
 24658                           ;../servo.c: 306:                         if (targetPos[io] > currentPos[io]) {
 24659   000940  0E40               	movlw	low _targetPos
 24660   000942  25D4               	addwf	pollServos@io& (0+255),w,b
 24661   000944  6ED9               	movwf	fsr2l,c
 24662   000946  6ADA               	clrf	fsr2h,c
 24663   000948  0E01               	movlw	high _targetPos
 24664   00094A  22DA               	addwfc	fsr2h,f,c
 24665   00094C  51D4               	movf	pollServos@io& (0+255),w,b
 24666   00094E  0FA9               	addlw	low _currentPos
 24667   000950  6EE1               	movwf	fsr1l,c
 24668   000952  6AE2               	clrf	fsr1h,c
 24669   000954  50DE               	movf	postinc2,w,c
 24670   000956  5CE6               	subwf	postinc1,w,c
 24671   000958  B0D8               	btfsc	status,0,c
 24672   00095A  D0AA               	goto	l21327
 24673                           
 24674                           ; BSR set to: 1
 24675                           ;../servo.c: 307:                             if (currentPos[io] < midway) {
 24676   00095C  51D4               	movf	pollServos@io& (0+255),w,b
 24677   00095E  0FA9               	addlw	low _currentPos
 24678   000960  6ED9               	movwf	fsr2l,c
 24679   000962  6ADA               	clrf	fsr2h,c
 24680   000964  51D3               	movf	pollServos@midway& (0+255),w,b
 24681   000966  5CDE               	subwf	postinc2,w,c
 24682   000968  B0D8               	btfsc	status,0,c
 24683   00096A  D002               	goto	l21303
 24684                           
 24685                           ; BSR set to: 1
 24686                           ;../servo.c: 308:                                 beforeMidway = TRUE;
 24687   00096C  0E01               	movlw	1
 24688   00096E  6FD2               	movwf	pollServos@beforeMidway& (0+255),b
 24689   000970                     l21303:
 24690                           
 24691                           ; BSR set to: 1
 24692                           ;../servo.c: 311:                             if (stepsPerPollSpeed[io]) {
 24693   000970  0E20               	movlw	low _stepsPerPollSpeed
 24694   000972  25D4               	addwf	pollServos@io& (0+255),w,b
 24695   000974  6ED9               	movwf	fsr2l,c
 24696   000976  6ADA               	clrf	fsr2h,c
 24697   000978  0E01               	movlw	high _stepsPerPollSpeed
 24698   00097A  22DA               	addwfc	fsr2h,f,c
 24699   00097C  50DF               	movf	indf2,w,c
 24700   00097E  B4D8               	btfsc	status,2,c
 24701   000980  D03A               	goto	l21311
 24702                           
 24703                           ; BSR set to: 1
 24704                           ;../servo.c: 312:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 24705   000982  51D4               	movf	pollServos@io& (0+255),w,b
 24706   000984  0FA9               	addlw	low _currentPos
 24707   000986  6ED9               	movwf	fsr2l,c
 24708   000988  6ADA               	clrf	fsr2h,c
 24709   00098A  50DF               	movf	indf2,w,c
 24710   00098C  6FC9               	movwf	??_pollServos& (0+255),b
 24711   00098E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24712   000990  51D4               	movf	pollServos@io& (0+255),w,b
 24713   000992  0FA9               	addlw	low _currentPos
 24714   000994  6ED9               	movwf	fsr2l,c
 24715   000996  6ADA               	clrf	fsr2h,c
 24716   000998  50DF               	movf	indf2,w,c
 24717   00099A  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 24718   00099C  6BCC               	clrf	(??_pollServos+3)& (0+255),b
 24719   00099E  0E20               	movlw	low _stepsPerPollSpeed
 24720   0009A0  25D4               	addwf	pollServos@io& (0+255),w,b
 24721   0009A2  6ED9               	movwf	fsr2l,c
 24722   0009A4  6ADA               	clrf	fsr2h,c
 24723   0009A6  0E01               	movlw	high _stepsPerPollSpeed
 24724   0009A8  22DA               	addwfc	fsr2h,f,c
 24725   0009AA  50DF               	movf	indf2,w,c
 24726   0009AC  6FCD               	movwf	(??_pollServos+4)& (0+255),b
 24727   0009AE  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 24728   0009B0  27CB               	addwf	(??_pollServos+2)& (0+255),f,b
 24729   0009B2  0E00               	movlw	0
 24730   0009B4  23CC               	addwfc	(??_pollServos+3)& (0+255),f,b
 24731   0009B6  51C9               	movf	??_pollServos& (0+255),w,b
 24732   0009B8  5DCB               	subwf	(??_pollServos+2)& (0+255),w,b
 24733   0009BA  51CC               	movf	(??_pollServos+3)& (0+255),w,b
 24734   0009BC  0A80               	xorlw	128
 24735   0009BE  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 24736   0009C0  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 24737   0009C2  0A80               	xorlw	128
 24738   0009C4  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 24739   0009C6  B0D8               	btfsc	status,0,c
 24740   0009C8  D007               	goto	l21309
 24741                           
 24742                           ; BSR set to: 1
 24743                           ;../servo.c: 314:                                     currentPos[io] =255;
 24744   0009CA  51D4               	movf	pollServos@io& (0+255),w,b
 24745   0009CC  0FA9               	addlw	low _currentPos
 24746   0009CE  6ED9               	movwf	fsr2l,c
 24747   0009D0  6ADA               	clrf	fsr2h,c
 24748   0009D2  0EFF               	movlw	255
 24749   0009D4  6EDF               	movwf	indf2,c
 24750                           
 24751                           ;../servo.c: 315:                                 } else {
 24752   0009D6  D032               	goto	l21317
 24753   0009D8                     l21309:
 24754                           
 24755                           ; BSR set to: 1
 24756                           ;../servo.c: 316:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 24757   0009D8  0E20               	movlw	low _stepsPerPollSpeed
 24758   0009DA  25D4               	addwf	pollServos@io& (0+255),w,b
 24759   0009DC  6ED9               	movwf	fsr2l,c
 24760   0009DE  6ADA               	clrf	fsr2h,c
 24761   0009E0  0E01               	movlw	high _stepsPerPollSpeed
 24762   0009E2  22DA               	addwfc	fsr2h,f,c
 24763   0009E4  50DF               	movf	indf2,w,c
 24764   0009E6  6FC9               	movwf	??_pollServos& (0+255),b
 24765   0009E8  51D4               	movf	pollServos@io& (0+255),w,b
 24766   0009EA  0FA9               	addlw	low _currentPos
 24767   0009EC  6ED9               	movwf	fsr2l,c
 24768   0009EE  6ADA               	clrf	fsr2h,c
 24769   0009F0  51C9               	movf	??_pollServos& (0+255),w,b
 24770   0009F2  26DF               	addwf	indf2,f,c
 24771   0009F4  D023               	goto	l21317
 24772   0009F6                     l21311:
 24773                           
 24774                           ; BSR set to: 1
 24775                           ;../servo.c: 319:                                 pollCount[io]--;
 24776   0009F6  0E84               	movlw	low _pollCount
 24777   0009F8  25D4               	addwf	pollServos@io& (0+255),w,b
 24778   0009FA  6ED9               	movwf	fsr2l,c
 24779   0009FC  6ADA               	clrf	fsr2h,c
 24780   0009FE  0E02               	movlw	high _pollCount
 24781   000A00  22DA               	addwfc	fsr2h,f,c
 24782   000A02  06DF               	decf	indf2,f,c
 24783                           
 24784                           ;../servo.c: 320:                                 if (pollCount[io] == 0) {
 24785   000A04  0E84               	movlw	low _pollCount
 24786   000A06  25D4               	addwf	pollServos@io& (0+255),w,b
 24787   000A08  6ED9               	movwf	fsr2l,c
 24788   000A0A  6ADA               	clrf	fsr2h,c
 24789   000A0C  0E02               	movlw	high _pollCount
 24790   000A0E  22DA               	addwfc	fsr2h,f,c
 24791   000A10  50DF               	movf	indf2,w,c
 24792   000A12  A4D8               	btfss	status,2,c
 24793   000A14  D013               	goto	l21317
 24794                           
 24795                           ; BSR set to: 1
 24796                           ;../servo.c: 321:                                     currentPos[io]++;
 24797   000A16  51D4               	movf	pollServos@io& (0+255),w,b
 24798   000A18  0FA9               	addlw	low _currentPos
 24799   000A1A  6ED9               	movwf	fsr2l,c
 24800   000A1C  6ADA               	clrf	fsr2h,c
 24801   000A1E  2ADF               	incf	indf2,f,c
 24802                           
 24803                           ; BSR set to: 1
 24804                           ;../servo.c: 322:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 24805   000A20  0E94               	movlw	low _pollsPerStepSpeed
 24806   000A22  25D4               	addwf	pollServos@io& (0+255),w,b
 24807   000A24  6ED9               	movwf	fsr2l,c
 24808   000A26  6ADA               	clrf	fsr2h,c
 24809   000A28  0E02               	movlw	high _pollsPerStepSpeed
 24810   000A2A  22DA               	addwfc	fsr2h,f,c
 24811   000A2C  0E84               	movlw	low _pollCount
 24812   000A2E  25D4               	addwf	pollServos@io& (0+255),w,b
 24813   000A30  6EE1               	movwf	fsr1l,c
 24814   000A32  6AE2               	clrf	fsr1h,c
 24815   000A34  0E02               	movlw	high _pollCount
 24816   000A36  22E2               	addwfc	fsr1h,f,c
 24817   000A38  CFDF FFE7          	movff	indf2,indf1
 24818   000A3C                     l21317:
 24819                           
 24820                           ; BSR set to: 1
 24821                           ;../servo.c: 326:                             if (currentPos[io] > targetPos[io]) {
 24822   000A3C  51D4               	movf	pollServos@io& (0+255),w,b
 24823   000A3E  0FA9               	addlw	low _currentPos
 24824   000A40  6ED9               	movwf	fsr2l,c
 24825   000A42  6ADA               	clrf	fsr2h,c
 24826   000A44  0E40               	movlw	low _targetPos
 24827   000A46  25D4               	addwf	pollServos@io& (0+255),w,b
 24828   000A48  6EE1               	movwf	fsr1l,c
 24829   000A4A  6AE2               	clrf	fsr1h,c
 24830   000A4C  0E01               	movlw	high _targetPos
 24831   000A4E  22E2               	addwfc	fsr1h,f,c
 24832   000A50  50DE               	movf	postinc2,w,c
 24833   000A52  5CE6               	subwf	postinc1,w,c
 24834   000A54  B0D8               	btfsc	status,0,c
 24835   000A56  D00C               	goto	l21321
 24836                           
 24837                           ; BSR set to: 1
 24838                           ;../servo.c: 327:                                 currentPos[io] = targetPos[io];
 24839   000A58  0E40               	movlw	low _targetPos
 24840   000A5A  25D4               	addwf	pollServos@io& (0+255),w,b
 24841   000A5C  6ED9               	movwf	fsr2l,c
 24842   000A5E  6ADA               	clrf	fsr2h,c
 24843   000A60  0E01               	movlw	high _targetPos
 24844   000A62  22DA               	addwfc	fsr2h,f,c
 24845   000A64  51D4               	movf	pollServos@io& (0+255),w,b
 24846   000A66  0FA9               	addlw	low _currentPos
 24847   000A68  6EE1               	movwf	fsr1l,c
 24848   000A6A  6AE2               	clrf	fsr1h,c
 24849   000A6C  CFDF FFE7          	movff	indf2,indf1
 24850   000A70                     l21321:
 24851                           
 24852                           ; BSR set to: 1
 24853                           ;../servo.c: 329:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 24854   000A70  51D4               	movf	pollServos@io& (0+255),w,b
 24855   000A72  0FA9               	addlw	low _currentPos
 24856   000A74  6ED9               	movwf	fsr2l,c
 24857   000A76  6ADA               	clrf	fsr2h,c
 24858   000A78  51D3               	movf	pollServos@midway& (0+255),w,b
 24859   000A7A  5CDE               	subwf	postinc2,w,c
 24860   000A7C  A0D8               	btfss	status,0,c
 24861   000A7E  D0CB               	goto	l21357
 24862                           
 24863                           ; BSR set to: 1
 24864   000A80  51D2               	movf	pollServos@beforeMidway& (0+255),w,b
 24865   000A82  B4D8               	btfsc	status,2,c
 24866   000A84  D0C8               	goto	l21357
 24867                           
 24868                           ; BSR set to: 1
 24869                           ;../servo.c: 333:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24870   000A86  51D4               	movf	pollServos@io& (0+255),w,b
 24871   000A88  0D07               	mullw	7
 24872   000A8A  50F3               	movf	243,w,c
 24873   000A8C  0F11               	addlw	17
 24874   000A8E  EC21  F05D         	call	_getNV
 24875   000A92  0100               	movlb	0	; () banked
 24876   000A94  BD8D               	btfsc	?_getNV& (0+255),6,b
 24877   000A96  D002               	goto	u22170
 24878   000A98  0E01               	movlw	1
 24879   000A9A  D001               	goto	u22180
 24880   000A9C                     u22170:
 24881   000A9C  0E00               	movlw	0
 24882   000A9E                     u22180:
 24883   000A9E  0101               	movlb	1	; () banked
 24884   000AA0  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24885   000AA2  51D4               	movf	pollServos@io& (0+255),w,b
 24886   000AA4  0D04               	mullw	4
 24887   000AA6  50F3               	movf	243,w,c
 24888   000AA8  0F09               	addlw	9
 24889   000AAA  EC76  F04B         	call	_sendProducedEvent
 24890   000AAE  D0B3               	goto	l21357
 24891   000AB0                     l21327:
 24892                           
 24893                           ; BSR set to: 1
 24894   000AB0  51D4               	movf	pollServos@io& (0+255),w,b
 24895   000AB2  0FA9               	addlw	low _currentPos
 24896   000AB4  6ED9               	movwf	fsr2l,c
 24897   000AB6  6ADA               	clrf	fsr2h,c
 24898   000AB8  0E40               	movlw	low _targetPos
 24899   000ABA  25D4               	addwf	pollServos@io& (0+255),w,b
 24900   000ABC  6EE1               	movwf	fsr1l,c
 24901   000ABE  6AE2               	clrf	fsr1h,c
 24902   000AC0  0E01               	movlw	high _targetPos
 24903   000AC2  22E2               	addwfc	fsr1h,f,c
 24904   000AC4  50DE               	movf	postinc2,w,c
 24905   000AC6  5CE6               	subwf	postinc1,w,c
 24906   000AC8  B0D8               	btfsc	status,0,c
 24907   000ACA  D0A5               	goto	l21357
 24908                           
 24909                           ; BSR set to: 1
 24910                           ;../servo.c: 336:                             if (currentPos[io] > midway) {
 24911   000ACC  51D4               	movf	pollServos@io& (0+255),w,b
 24912   000ACE  0FA9               	addlw	low _currentPos
 24913   000AD0  6ED9               	movwf	fsr2l,c
 24914   000AD2  6ADA               	clrf	fsr2h,c
 24915   000AD4  50DE               	movf	postinc2,w,c
 24916   000AD6  5DD3               	subwf	pollServos@midway& (0+255),w,b
 24917   000AD8  B0D8               	btfsc	status,0,c
 24918   000ADA  D002               	goto	l21333
 24919                           
 24920                           ; BSR set to: 1
 24921                           ;../servo.c: 337:                                 beforeMidway = TRUE;
 24922   000ADC  0E01               	movlw	1
 24923   000ADE  6FD2               	movwf	pollServos@beforeMidway& (0+255),b
 24924   000AE0                     l21333:
 24925                           
 24926                           ; BSR set to: 1
 24927                           ;../servo.c: 340:                             if (stepsPerPollSpeed[io]) {
 24928   000AE0  0E20               	movlw	low _stepsPerPollSpeed
 24929   000AE2  25D4               	addwf	pollServos@io& (0+255),w,b
 24930   000AE4  6ED9               	movwf	fsr2l,c
 24931   000AE6  6ADA               	clrf	fsr2h,c
 24932   000AE8  0E01               	movlw	high _stepsPerPollSpeed
 24933   000AEA  22DA               	addwfc	fsr2h,f,c
 24934   000AEC  50DF               	movf	indf2,w,c
 24935   000AEE  B4D8               	btfsc	status,2,c
 24936   000AF0  D039               	goto	l21341
 24937                           
 24938                           ; BSR set to: 1
 24939                           ;../servo.c: 341:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 24940   000AF2  51D4               	movf	pollServos@io& (0+255),w,b
 24941   000AF4  0FA9               	addlw	low _currentPos
 24942   000AF6  6ED9               	movwf	fsr2l,c
 24943   000AF8  6ADA               	clrf	fsr2h,c
 24944   000AFA  50DF               	movf	indf2,w,c
 24945   000AFC  6FC9               	movwf	??_pollServos& (0+255),b
 24946   000AFE  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24947   000B00  0E20               	movlw	low _stepsPerPollSpeed
 24948   000B02  25D4               	addwf	pollServos@io& (0+255),w,b
 24949   000B04  6ED9               	movwf	fsr2l,c
 24950   000B06  6ADA               	clrf	fsr2h,c
 24951   000B08  0E01               	movlw	high _stepsPerPollSpeed
 24952   000B0A  22DA               	addwfc	fsr2h,f,c
 24953   000B0C  50DF               	movf	indf2,w,c
 24954   000B0E  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 24955   000B10  51CB               	movf	(??_pollServos+2)& (0+255),w,b
 24956   000B12  5FC9               	subwf	??_pollServos& (0+255),f,b
 24957   000B14  0E00               	movlw	0
 24958   000B16  5BCA               	subwfb	(??_pollServos+1)& (0+255),f,b
 24959   000B18  51D4               	movf	pollServos@io& (0+255),w,b
 24960   000B1A  0FA9               	addlw	low _currentPos
 24961   000B1C  6ED9               	movwf	fsr2l,c
 24962   000B1E  6ADA               	clrf	fsr2h,c
 24963   000B20  50DF               	movf	indf2,w,c
 24964   000B22  6FCC               	movwf	(??_pollServos+3)& (0+255),b
 24965   000B24  6BCD               	clrf	(??_pollServos+4)& (0+255),b
 24966   000B26  51C9               	movf	??_pollServos& (0+255),w,b
 24967   000B28  5DCC               	subwf	(??_pollServos+3)& (0+255),w,b
 24968   000B2A  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 24969   000B2C  0A80               	xorlw	128
 24970   000B2E  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 24971   000B30  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 24972   000B32  0A80               	xorlw	128
 24973   000B34  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 24974   000B36  B0D8               	btfsc	status,0,c
 24975   000B38  D006               	goto	l21339
 24976                           
 24977                           ; BSR set to: 1
 24978                           ;../servo.c: 343:                                     currentPos[io] = 0;
 24979   000B3A  51D4               	movf	pollServos@io& (0+255),w,b
 24980   000B3C  0FA9               	addlw	low _currentPos
 24981   000B3E  6ED9               	movwf	fsr2l,c
 24982   000B40  6ADA               	clrf	fsr2h,c
 24983   000B42  6ADF               	clrf	indf2,c
 24984                           
 24985                           ;../servo.c: 344:                                 } else {
 24986   000B44  D032               	goto	l21347
 24987   000B46                     l21339:
 24988                           
 24989                           ; BSR set to: 1
 24990                           ;../servo.c: 345:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 24991   000B46  0E20               	movlw	low _stepsPerPollSpeed
 24992   000B48  25D4               	addwf	pollServos@io& (0+255),w,b
 24993   000B4A  6ED9               	movwf	fsr2l,c
 24994   000B4C  6ADA               	clrf	fsr2h,c
 24995   000B4E  0E01               	movlw	high _stepsPerPollSpeed
 24996   000B50  22DA               	addwfc	fsr2h,f,c
 24997   000B52  50DF               	movf	indf2,w,c
 24998   000B54  6FC9               	movwf	??_pollServos& (0+255),b
 24999   000B56  51D4               	movf	pollServos@io& (0+255),w,b
 25000   000B58  0FA9               	addlw	low _currentPos
 25001   000B5A  6ED9               	movwf	fsr2l,c
 25002   000B5C  6ADA               	clrf	fsr2h,c
 25003   000B5E  51C9               	movf	??_pollServos& (0+255),w,b
 25004   000B60  5EDF               	subwf	indf2,f,c
 25005   000B62  D023               	goto	l21347
 25006   000B64                     l21341:
 25007                           
 25008                           ; BSR set to: 1
 25009                           ;../servo.c: 348:                                 pollCount[io]--;
 25010   000B64  0E84               	movlw	low _pollCount
 25011   000B66  25D4               	addwf	pollServos@io& (0+255),w,b
 25012   000B68  6ED9               	movwf	fsr2l,c
 25013   000B6A  6ADA               	clrf	fsr2h,c
 25014   000B6C  0E02               	movlw	high _pollCount
 25015   000B6E  22DA               	addwfc	fsr2h,f,c
 25016   000B70  06DF               	decf	indf2,f,c
 25017                           
 25018                           ;../servo.c: 349:                                 if (pollCount[io] == 0) {
 25019   000B72  0E84               	movlw	low _pollCount
 25020   000B74  25D4               	addwf	pollServos@io& (0+255),w,b
 25021   000B76  6ED9               	movwf	fsr2l,c
 25022   000B78  6ADA               	clrf	fsr2h,c
 25023   000B7A  0E02               	movlw	high _pollCount
 25024   000B7C  22DA               	addwfc	fsr2h,f,c
 25025   000B7E  50DF               	movf	indf2,w,c
 25026   000B80  A4D8               	btfss	status,2,c
 25027   000B82  D013               	goto	l21347
 25028                           
 25029                           ; BSR set to: 1
 25030                           ;../servo.c: 350:                                     currentPos[io]--;
 25031   000B84  51D4               	movf	pollServos@io& (0+255),w,b
 25032   000B86  0FA9               	addlw	low _currentPos
 25033   000B88  6ED9               	movwf	fsr2l,c
 25034   000B8A  6ADA               	clrf	fsr2h,c
 25035   000B8C  06DF               	decf	indf2,f,c
 25036                           
 25037                           ; BSR set to: 1
 25038                           ;../servo.c: 351:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25039   000B8E  0E94               	movlw	low _pollsPerStepSpeed
 25040   000B90  25D4               	addwf	pollServos@io& (0+255),w,b
 25041   000B92  6ED9               	movwf	fsr2l,c
 25042   000B94  6ADA               	clrf	fsr2h,c
 25043   000B96  0E02               	movlw	high _pollsPerStepSpeed
 25044   000B98  22DA               	addwfc	fsr2h,f,c
 25045   000B9A  0E84               	movlw	low _pollCount
 25046   000B9C  25D4               	addwf	pollServos@io& (0+255),w,b
 25047   000B9E  6EE1               	movwf	fsr1l,c
 25048   000BA0  6AE2               	clrf	fsr1h,c
 25049   000BA2  0E02               	movlw	high _pollCount
 25050   000BA4  22E2               	addwfc	fsr1h,f,c
 25051   000BA6  CFDF FFE7          	movff	indf2,indf1
 25052   000BAA                     l21347:
 25053                           
 25054                           ; BSR set to: 1
 25055                           ;../servo.c: 355:                             if (currentPos[io] < targetPos[io]) {
 25056   000BAA  0E40               	movlw	low _targetPos
 25057   000BAC  25D4               	addwf	pollServos@io& (0+255),w,b
 25058   000BAE  6ED9               	movwf	fsr2l,c
 25059   000BB0  6ADA               	clrf	fsr2h,c
 25060   000BB2  0E01               	movlw	high _targetPos
 25061   000BB4  22DA               	addwfc	fsr2h,f,c
 25062   000BB6  51D4               	movf	pollServos@io& (0+255),w,b
 25063   000BB8  0FA9               	addlw	low _currentPos
 25064   000BBA  6EE1               	movwf	fsr1l,c
 25065   000BBC  6AE2               	clrf	fsr1h,c
 25066   000BBE  50DE               	movf	postinc2,w,c
 25067   000BC0  5CE6               	subwf	postinc1,w,c
 25068   000BC2  B0D8               	btfsc	status,0,c
 25069   000BC4  D00C               	goto	l21351
 25070                           
 25071                           ; BSR set to: 1
 25072                           ;../servo.c: 356:                                 currentPos[io] = targetPos[io];
 25073   000BC6  0E40               	movlw	low _targetPos
 25074   000BC8  25D4               	addwf	pollServos@io& (0+255),w,b
 25075   000BCA  6ED9               	movwf	fsr2l,c
 25076   000BCC  6ADA               	clrf	fsr2h,c
 25077   000BCE  0E01               	movlw	high _targetPos
 25078   000BD0  22DA               	addwfc	fsr2h,f,c
 25079   000BD2  51D4               	movf	pollServos@io& (0+255),w,b
 25080   000BD4  0FA9               	addlw	low _currentPos
 25081   000BD6  6EE1               	movwf	fsr1l,c
 25082   000BD8  6AE2               	clrf	fsr1h,c
 25083   000BDA  CFDF FFE7          	movff	indf2,indf1
 25084   000BDE                     l21351:
 25085                           
 25086                           ; BSR set to: 1
 25087                           ;../servo.c: 358:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 25088   000BDE  51D4               	movf	pollServos@io& (0+255),w,b
 25089   000BE0  0FA9               	addlw	low _currentPos
 25090   000BE2  6ED9               	movwf	fsr2l,c
 25091   000BE4  6ADA               	clrf	fsr2h,c
 25092   000BE6  50DE               	movf	postinc2,w,c
 25093   000BE8  5DD3               	subwf	pollServos@midway& (0+255),w,b
 25094   000BEA  A0D8               	btfss	status,0,c
 25095   000BEC  D014               	goto	l21357
 25096                           
 25097                           ; BSR set to: 1
 25098   000BEE  51D2               	movf	pollServos@beforeMidway& (0+255),w,b
 25099   000BF0  B4D8               	btfsc	status,2,c
 25100   000BF2  D011               	goto	l21357
 25101                           
 25102                           ; BSR set to: 1
 25103                           ;../servo.c: 360:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 25104   000BF4  51D4               	movf	pollServos@io& (0+255),w,b
 25105   000BF6  0D07               	mullw	7
 25106   000BF8  50F3               	movf	243,w,c
 25107   000BFA  0F11               	addlw	17
 25108   000BFC  EC21  F05D         	call	_getNV
 25109   000C00  0100               	movlb	0	; () banked
 25110   000C02  518D               	movf	?_getNV& (0+255),w,b
 25111   000C04  0B40               	andlw	64
 25112   000C06  0101               	movlb	1	; () banked
 25113   000C08  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25114   000C0A  51D4               	movf	pollServos@io& (0+255),w,b
 25115   000C0C  0D04               	mullw	4
 25116   000C0E  50F3               	movf	243,w,c
 25117   000C10  0F09               	addlw	9
 25118   000C12  EC76  F04B         	call	_sendProducedEvent
 25119   000C16                     l21357:
 25120                           
 25121                           ;../servo.c: 363:                         if (targetPos[io] == currentPos[io]) {
 25122   000C16  0101               	movlb	1	; () banked
 25123   000C18  51D4               	movf	pollServos@io& (0+255),w,b
 25124   000C1A  0FA9               	addlw	low _currentPos
 25125   000C1C  6ED9               	movwf	fsr2l,c
 25126   000C1E  6ADA               	clrf	fsr2h,c
 25127   000C20  0E40               	movlw	low _targetPos
 25128   000C22  25D4               	addwf	pollServos@io& (0+255),w,b
 25129   000C24  6EE1               	movwf	fsr1l,c
 25130   000C26  6AE2               	clrf	fsr1h,c
 25131   000C28  0E01               	movlw	high _targetPos
 25132   000C2A  22E2               	addwfc	fsr1h,f,c
 25133   000C2C  50DE               	movf	postinc2,w,c
 25134   000C2E  18E6               	xorwf	postinc1,w,c
 25135   000C30  A4D8               	btfss	status,2,c
 25136   000C32  EF49  F00B         	goto	l21523
 25137                           
 25138                           ; BSR set to: 1
 25139                           ;../servo.c: 364:                             servoState[io] = SS_STOPPED;
 25140   000C36  0E30               	movlw	low _servoState
 25141   000C38  25D4               	addwf	pollServos@io& (0+255),w,b
 25142   000C3A  6ED9               	movwf	fsr2l,c
 25143   000C3C  6ADA               	clrf	fsr2h,c
 25144   000C3E  0E01               	movlw	high _servoState
 25145   000C40  22DA               	addwfc	fsr2h,f,c
 25146   000C42  0E01               	movlw	1
 25147   000C44  6EDF               	movwf	indf2,c
 25148                           
 25149                           ; BSR set to: 1
 25150                           ;../servo.c: 365:                             ticksWhenStopped[io].val = tickGet();
 25151   000C46  ECD6  F059         	call	_tickGet	;wreg free
 25152   000C4A  0101               	movlb	1	; () banked
 25153   000C4C  51D4               	movf	pollServos@io& (0+255),w,b
 25154   000C4E  0D04               	mullw	4
 25155   000C50  0E00               	movlw	low _ticksWhenStopped
 25156   000C52  24F3               	addwf	243,w,c
 25157   000C54  6ED9               	movwf	fsr2l,c
 25158   000C56  0E02               	movlw	high _ticksWhenStopped
 25159   000C58  20F4               	addwfc	prodh,w,c
 25160   000C5A  6EDA               	movwf	fsr2h,c
 25161   000C5C  0100               	movlb	0	; () banked
 25162   000C5E  C08D  FFDE         	movff	?_tickGet,postinc2
 25163   000C62  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25164   000C66  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25165   000C6A  C090  FFDE         	movff	?_tickGet+3,postinc2
 25166                           
 25167                           ; BSR set to: 0
 25168                           ;../servo.c: 367:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 25169   000C6E  0101               	movlb	1	; () banked
 25170   000C70  51D4               	movf	pollServos@io& (0+255),w,b
 25171   000C72  0D07               	mullw	7
 25172   000C74  50F3               	movf	243,w,c
 25173   000C76  0F12               	addlw	18
 25174   000C78  EC21  F05D         	call	_getNV
 25175   000C7C  0101               	movlb	1	; () banked
 25176   000C7E  51D4               	movf	pollServos@io& (0+255),w,b
 25177   000C80  0FA9               	addlw	low _currentPos
 25178   000C82  6ED9               	movwf	fsr2l,c
 25179   000C84  6ADA               	clrf	fsr2h,c
 25180   000C86  50DF               	movf	indf2,w,c
 25181   000C88  6FC9               	movwf	??_pollServos& (0+255),b
 25182   000C8A  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25183   000C8C  0100               	movlb	0	; () banked
 25184   000C8E  518D               	movf	?_getNV& (0+255),w,b
 25185   000C90  0101               	movlb	1	; () banked
 25186   000C92  19C9               	xorwf	??_pollServos& (0+255),w,b
 25187   000C94  E11B               	bnz	l21367
 25188   000C96  0100               	movlb	0	; () banked
 25189   000C98  518E               	movf	(?_getNV+1)& (0+255),w,b
 25190   000C9A  0101               	movlb	1	; () banked
 25191   000C9C  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25192   000C9E  A4D8               	btfss	status,2,c
 25193   000CA0  D015               	goto	l21367
 25194                           
 25195                           ; BSR set to: 1
 25196                           ;../servo.c: 368:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25197   000CA2  51D4               	movf	pollServos@io& (0+255),w,b
 25198   000CA4  0D07               	mullw	7
 25199   000CA6  50F3               	movf	243,w,c
 25200   000CA8  0F11               	addlw	17
 25201   000CAA  EC21  F05D         	call	_getNV
 25202   000CAE  0100               	movlb	0	; () banked
 25203   000CB0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25204   000CB2  D002               	goto	u22290
 25205   000CB4  0E01               	movlw	1
 25206   000CB6  D001               	goto	u22300
 25207   000CB8                     u22290:
 25208   000CB8  0E00               	movlw	0
 25209   000CBA                     u22300:
 25210   000CBA  0101               	movlb	1	; () banked
 25211   000CBC  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25212   000CBE  51D4               	movf	pollServos@io& (0+255),w,b
 25213   000CC0  0D04               	mullw	4
 25214   000CC2  50F3               	movf	243,w,c
 25215   000CC4  0F08               	addlw	8
 25216   000CC6  EC76  F04B         	call	_sendProducedEvent
 25217                           
 25218                           ;../servo.c: 369:                             } else {
 25219   000CCA  D014               	goto	l21369
 25220   000CCC                     l21367:
 25221                           
 25222                           ; BSR set to: 1
 25223                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25224   000CCC  51D4               	movf	pollServos@io& (0+255),w,b
 25225   000CCE  0D07               	mullw	7
 25226   000CD0  50F3               	movf	243,w,c
 25227   000CD2  0F11               	addlw	17
 25228   000CD4  EC21  F05D         	call	_getNV
 25229   000CD8  0100               	movlb	0	; () banked
 25230   000CDA  BD8D               	btfsc	?_getNV& (0+255),6,b
 25231   000CDC  D002               	goto	u22310
 25232   000CDE  0E01               	movlw	1
 25233   000CE0  D001               	goto	u22320
 25234   000CE2                     u22310:
 25235   000CE2  0E00               	movlw	0
 25236   000CE4                     u22320:
 25237   000CE4  0101               	movlb	1	; () banked
 25238   000CE6  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25239   000CE8  51D4               	movf	pollServos@io& (0+255),w,b
 25240   000CEA  0D04               	mullw	4
 25241   000CEC  50F3               	movf	243,w,c
 25242   000CEE  0F0A               	addlw	10
 25243   000CF0  EC76  F04B         	call	_sendProducedEvent
 25244   000CF4                     l21369:
 25245                           
 25246                           ;../servo.c: 372:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25247   000CF4  0EDE               	movlw	222
 25248   000CF6  0101               	movlb	1	; () banked
 25249   000CF8  25D4               	addwf	pollServos@io& (0+255),w,b
 25250   000CFA  6FC9               	movwf	??_pollServos& (0+255),b
 25251   000CFC  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25252   000CFE  0E03               	movlw	3
 25253   000D00  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25254   000D02  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25255   000D06  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25256   000D0A  0100               	movlb	0	; () banked
 25257   000D0C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25258   000D0E  0101               	movlb	1	; () banked
 25259   000D10  51D4               	movf	pollServos@io& (0+255),w,b
 25260   000D12  0FA9               	addlw	low _currentPos
 25261   000D14  6ED9               	movwf	fsr2l,c
 25262   000D16  6ADA               	clrf	fsr2h,c
 25263   000D18  50DF               	movf	indf2,w,c
 25264   000D1A  0100               	movlb	0	; () banked
 25265   000D1C  6FA7               	movwf	writeNVM@value& (0+255),b
 25266   000D1E  0E00               	movlw	0
 25267   000D20  EC52  F05B         	call	_writeNVM
 25268   000D24  EF49  F00B         	goto	l21523
 25269   000D28                     l21373:
 25270                           
 25271                           ; BSR set to: 1
 25272   000D28  0E30               	movlw	low _servoState
 25273   000D2A  25D4               	addwf	pollServos@io& (0+255),w,b
 25274   000D2C  6ED9               	movwf	fsr2l,c
 25275   000D2E  6ADA               	clrf	fsr2h,c
 25276   000D30  0E01               	movlw	high _servoState
 25277   000D32  22DA               	addwfc	fsr2h,f,c
 25278   000D34  50DF               	movf	indf2,w,c
 25279   000D36  6FC9               	movwf	??_pollServos& (0+255),b
 25280   000D38  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25281                           
 25282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25283                           ; Switch size 1, requested type "simple"
 25284                           ; Number of cases is 1, Range of values is 0 to 0
 25285                           ; switch strategies available:
 25286                           ; Name         Instructions Cycles
 25287                           ; simple_byte            4     3 (average)
 25288                           ;	Chosen strategy is simple_byte
 25289   000D3A  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25290   000D3C  0A00               	xorlw	0	; case 0
 25291   000D3E  A4D8               	btfss	status,2,c
 25292   000D40  EF49  F00B         	goto	l21523
 25293                           
 25294                           ; BSR set to: 1
 25295                           ; Switch size 1, requested type "simple"
 25296                           ; Number of cases is 4, Range of values is 0 to 3
 25297                           ; switch strategies available:
 25298                           ; Name         Instructions Cycles
 25299                           ; simple_byte           13     7 (average)
 25300                           ;	Chosen strategy is simple_byte
 25301   000D44  51C9               	movf	??_pollServos& (0+255),w,b
 25302   000D46  0A00               	xorlw	0	; case 0
 25303   000D48  B4D8               	btfsc	status,2,c
 25304   000D4A  EF49  F00B         	goto	l21523
 25305   000D4E  0A01               	xorlw	1	; case 1
 25306   000D50  B4D8               	btfsc	status,2,c
 25307   000D52  EF49  F00B         	goto	l21523
 25308   000D56  0A03               	xorlw	3	; case 2
 25309   000D58  B4D8               	btfsc	status,2,c
 25310   000D5A  D5F2               	goto	l21297
 25311   000D5C  0A01               	xorlw	1	; case 3
 25312   000D5E  B4D8               	btfsc	status,2,c
 25313   000D60  D5AA               	goto	l21289
 25314   000D62  EF49  F00B         	goto	l21523
 25315   000D66                     l21375:
 25316                           
 25317                           ; BSR set to: 1
 25318                           ;../servo.c: 383:                         initBounce(io);
 25319   000D66  51D4               	movf	pollServos@io& (0+255),w,b
 25320   000D68  ECD1  F05F         	call	_initBounce
 25321                           
 25322                           ;../servo.c: 384:                         servoState[io] = SS_MOVING;
 25323   000D6C  0E30               	movlw	low _servoState
 25324   000D6E  0101               	movlb	1	; () banked
 25325   000D70  25D4               	addwf	pollServos@io& (0+255),w,b
 25326   000D72  6ED9               	movwf	fsr2l,c
 25327   000D74  6ADA               	clrf	fsr2h,c
 25328   000D76  0E01               	movlw	high _servoState
 25329   000D78  22DA               	addwfc	fsr2h,f,c
 25330   000D7A  0E02               	movlw	2
 25331   000D7C  6EDF               	movwf	indf2,c
 25332                           
 25333                           ; BSR set to: 1
 25334                           ;../servo.c: 385:                         loopCount[io] = 0;
 25335   000D7E  0E74               	movlw	low _loopCount
 25336   000D80  25D4               	addwf	pollServos@io& (0+255),w,b
 25337   000D82  6ED9               	movwf	fsr2l,c
 25338   000D84  6ADA               	clrf	fsr2h,c
 25339   000D86  0E02               	movlw	high _loopCount
 25340   000D88  22DA               	addwfc	fsr2h,f,c
 25341   000D8A  6ADF               	clrf	indf2,c
 25342   000D8C                     l21381:
 25343                           
 25344                           ; BSR set to: 1
 25345                           ;../servo.c: 389:                         loopCount[io]++;
 25346   000D8C  0E74               	movlw	low _loopCount
 25347   000D8E  25D4               	addwf	pollServos@io& (0+255),w,b
 25348   000D90  6ED9               	movwf	fsr2l,c
 25349   000D92  6ADA               	clrf	fsr2h,c
 25350   000D94  0E02               	movlw	high _loopCount
 25351   000D96  22DA               	addwfc	fsr2h,f,c
 25352   000D98  2ADF               	incf	indf2,f,c
 25353                           
 25354                           ; BSR set to: 1
 25355                           ;../servo.c: 390:                         if (loopCount[io] >= 255) {
 25356   000D9A  0E74               	movlw	low _loopCount
 25357   000D9C  25D4               	addwf	pollServos@io& (0+255),w,b
 25358   000D9E  6ED9               	movwf	fsr2l,c
 25359   000DA0  6ADA               	clrf	fsr2h,c
 25360   000DA2  0E02               	movlw	high _loopCount
 25361   000DA4  22DA               	addwfc	fsr2h,f,c
 25362   000DA6  28DE               	incf	postinc2,w,c
 25363   000DA8  A4D8               	btfss	status,2,c
 25364   000DAA  D057               	goto	l21395
 25365                           
 25366                           ; BSR set to: 1
 25367                           ;../servo.c: 391:                             servoState[io] = SS_STOPPED;
 25368   000DAC  0E30               	movlw	low _servoState
 25369   000DAE  25D4               	addwf	pollServos@io& (0+255),w,b
 25370   000DB0  6ED9               	movwf	fsr2l,c
 25371   000DB2  6ADA               	clrf	fsr2h,c
 25372   000DB4  0E01               	movlw	high _servoState
 25373   000DB6  22DA               	addwfc	fsr2h,f,c
 25374   000DB8  0E01               	movlw	1
 25375   000DBA  6EDF               	movwf	indf2,c
 25376                           
 25377                           ; BSR set to: 1
 25378                           ;../servo.c: 392:                             ticksWhenStopped[io].val = tickGet();
 25379   000DBC  ECD6  F059         	call	_tickGet	;wreg free
 25380   000DC0  0101               	movlb	1	; () banked
 25381   000DC2  51D4               	movf	pollServos@io& (0+255),w,b
 25382   000DC4  0D04               	mullw	4
 25383   000DC6  0E00               	movlw	low _ticksWhenStopped
 25384   000DC8  24F3               	addwf	243,w,c
 25385   000DCA  6ED9               	movwf	fsr2l,c
 25386   000DCC  0E02               	movlw	high _ticksWhenStopped
 25387   000DCE  20F4               	addwfc	prodh,w,c
 25388   000DD0  6EDA               	movwf	fsr2h,c
 25389   000DD2  0100               	movlb	0	; () banked
 25390   000DD4  C08D  FFDE         	movff	?_tickGet,postinc2
 25391   000DD8  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25392   000DDC  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25393   000DE0  C090  FFDE         	movff	?_tickGet+3,postinc2
 25394                           
 25395                           ; BSR set to: 0
 25396                           ;../servo.c: 393:                             currentPos[io] = targetPos[io];
 25397   000DE4  0E40               	movlw	low _targetPos
 25398   000DE6  0101               	movlb	1	; () banked
 25399   000DE8  25D4               	addwf	pollServos@io& (0+255),w,b
 25400   000DEA  6ED9               	movwf	fsr2l,c
 25401   000DEC  6ADA               	clrf	fsr2h,c
 25402   000DEE  0E01               	movlw	high _targetPos
 25403   000DF0  22DA               	addwfc	fsr2h,f,c
 25404   000DF2  51D4               	movf	pollServos@io& (0+255),w,b
 25405   000DF4  0FA9               	addlw	low _currentPos
 25406   000DF6  6EE1               	movwf	fsr1l,c
 25407   000DF8  6AE2               	clrf	fsr1h,c
 25408   000DFA  CFDF FFE7          	movff	indf2,indf1
 25409                           
 25410                           ; BSR set to: 1
 25411                           ;../servo.c: 394:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 25412   000DFE  51D4               	movf	pollServos@io& (0+255),w,b
 25413   000E00  0D07               	mullw	7
 25414   000E02  50F3               	movf	243,w,c
 25415   000E04  0F11               	addlw	17
 25416   000E06  EC21  F05D         	call	_getNV
 25417   000E0A  0100               	movlb	0	; () banked
 25418   000E0C  BD8D               	btfsc	?_getNV& (0+255),6,b
 25419   000E0E  D002               	goto	u22340
 25420   000E10  0E01               	movlw	1
 25421   000E12  D001               	goto	u22350
 25422   000E14                     u22340:
 25423   000E14  0E00               	movlw	0
 25424   000E16                     u22350:
 25425   000E16  0101               	movlb	1	; () banked
 25426   000E18  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25427   000E1A  51D4               	movf	pollServos@io& (0+255),w,b
 25428   000E1C  0D04               	mullw	4
 25429   000E1E  50F3               	movf	243,w,c
 25430   000E20  0F08               	addlw	8
 25431   000E22  EC76  F04B         	call	_sendProducedEvent
 25432                           
 25433                           ;../servo.c: 395:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25434   000E26  0EDE               	movlw	222
 25435   000E28  0101               	movlb	1	; () banked
 25436   000E2A  25D4               	addwf	pollServos@io& (0+255),w,b
 25437   000E2C  6FC9               	movwf	??_pollServos& (0+255),b
 25438   000E2E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25439   000E30  0E03               	movlw	3
 25440   000E32  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25441   000E34  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25442   000E38  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25443   000E3C  0100               	movlb	0	; () banked
 25444   000E3E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25445   000E40  0101               	movlb	1	; () banked
 25446   000E42  51D4               	movf	pollServos@io& (0+255),w,b
 25447   000E44  0FA9               	addlw	low _currentPos
 25448   000E46  6ED9               	movwf	fsr2l,c
 25449   000E48  6ADA               	clrf	fsr2h,c
 25450   000E4A  50DF               	movf	indf2,w,c
 25451   000E4C  0100               	movlb	0	; () banked
 25452   000E4E  6FA7               	movwf	writeNVM@value& (0+255),b
 25453   000E50  0E00               	movlw	0
 25454   000E52  EC52  F05B         	call	_writeNVM
 25455                           
 25456                           ;../servo.c: 396:                             break;
 25457   000E56  EF49  F00B         	goto	l21523
 25458   000E5A                     l21395:
 25459                           
 25460                           ; BSR set to: 1
 25461                           ;../servo.c: 399:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 25462   000E5A  51D4               	movf	pollServos@io& (0+255),w,b
 25463   000E5C  0D07               	mullw	7
 25464   000E5E  50F3               	movf	243,w,c
 25465   000E60  0F12               	addlw	18
 25466   000E62  EC21  F05D         	call	_getNV
 25467   000E66  0100               	movlb	0	; () banked
 25468   000E68  518D               	movf	?_getNV& (0+255),w,b
 25469   000E6A  0101               	movlb	1	; () banked
 25470   000E6C  6FD1               	movwf	pollServos@target& (0+255),b
 25471                           
 25472                           ; BSR set to: 1
 25473                           ;../servo.c: 403:                         if (targetPos[io] == target) {
 25474   000E6E  0E40               	movlw	low _targetPos
 25475   000E70  25D4               	addwf	pollServos@io& (0+255),w,b
 25476   000E72  6ED9               	movwf	fsr2l,c
 25477   000E74  6ADA               	clrf	fsr2h,c
 25478   000E76  0E01               	movlw	high _targetPos
 25479   000E78  22DA               	addwfc	fsr2h,f,c
 25480   000E7A  51D1               	movf	pollServos@target& (0+255),w,b
 25481   000E7C  18DE               	xorwf	postinc2,w,c
 25482   000E7E  A4D8               	btfss	status,2,c
 25483   000E80  D05E               	goto	l21411
 25484                           
 25485                           ; BSR set to: 1
 25486                           ;../servo.c: 404:                             if (bounceUp(io)) {
 25487   000E82  51D4               	movf	pollServos@io& (0+255),w,b
 25488   000E84  ECE6  F02C         	call	_bounceUp
 25489   000E88  0900               	iorlw	0
 25490   000E8A  B4D8               	btfsc	status,2,c
 25491   000E8C  EF49  F00B         	goto	l21523
 25492                           
 25493                           ;../servo.c: 405:                                 servoState[io] = SS_STOPPED;
 25494   000E90  0E30               	movlw	low _servoState
 25495   000E92  0101               	movlb	1	; () banked
 25496   000E94  25D4               	addwf	pollServos@io& (0+255),w,b
 25497   000E96  6ED9               	movwf	fsr2l,c
 25498   000E98  6ADA               	clrf	fsr2h,c
 25499   000E9A  0E01               	movlw	high _servoState
 25500   000E9C  22DA               	addwfc	fsr2h,f,c
 25501   000E9E  0E01               	movlw	1
 25502   000EA0  6EDF               	movwf	indf2,c
 25503                           
 25504                           ; BSR set to: 1
 25505                           ;../servo.c: 406:                                 ticksWhenStopped[io].val = tickGet();
 25506   000EA2  ECD6  F059         	call	_tickGet	;wreg free
 25507   000EA6  0101               	movlb	1	; () banked
 25508   000EA8  51D4               	movf	pollServos@io& (0+255),w,b
 25509   000EAA  0D04               	mullw	4
 25510   000EAC  0E00               	movlw	low _ticksWhenStopped
 25511   000EAE  24F3               	addwf	243,w,c
 25512   000EB0  6ED9               	movwf	fsr2l,c
 25513   000EB2  0E02               	movlw	high _ticksWhenStopped
 25514   000EB4  20F4               	addwfc	prodh,w,c
 25515   000EB6  6EDA               	movwf	fsr2h,c
 25516   000EB8  0100               	movlb	0	; () banked
 25517   000EBA  C08D  FFDE         	movff	?_tickGet,postinc2
 25518   000EBE  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25519   000EC2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25520   000EC6  C090  FFDE         	movff	?_tickGet+3,postinc2
 25521                           
 25522                           ; BSR set to: 0
 25523                           ;../servo.c: 407:                                 currentPos[io] = targetPos[io];
 25524   000ECA  0E40               	movlw	low _targetPos
 25525   000ECC  0101               	movlb	1	; () banked
 25526   000ECE  25D4               	addwf	pollServos@io& (0+255),w,b
 25527   000ED0  6ED9               	movwf	fsr2l,c
 25528   000ED2  6ADA               	clrf	fsr2h,c
 25529   000ED4  0E01               	movlw	high _targetPos
 25530   000ED6  22DA               	addwfc	fsr2h,f,c
 25531   000ED8  51D4               	movf	pollServos@io& (0+255),w,b
 25532   000EDA  0FA9               	addlw	low _currentPos
 25533   000EDC  6EE1               	movwf	fsr1l,c
 25534   000EDE  6AE2               	clrf	fsr1h,c
 25535   000EE0  CFDF FFE7          	movff	indf2,indf1
 25536                           
 25537                           ; BSR set to: 1
 25538                           ;../servo.c: 408:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25539   000EE4  51D4               	movf	pollServos@io& (0+255),w,b
 25540   000EE6  0D07               	mullw	7
 25541   000EE8  50F3               	movf	243,w,c
 25542   000EEA  0F11               	addlw	17
 25543   000EEC  EC21  F05D         	call	_getNV
 25544   000EF0  0100               	movlb	0	; () banked
 25545   000EF2  BD8D               	btfsc	?_getNV& (0+255),6,b
 25546   000EF4  D002               	goto	u22380
 25547   000EF6  0E01               	movlw	1
 25548   000EF8  D001               	goto	u22390
 25549   000EFA                     u22380:
 25550   000EFA  0E00               	movlw	0
 25551   000EFC                     u22390:
 25552   000EFC  0101               	movlb	1	; () banked
 25553   000EFE  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25554   000F00  51D4               	movf	pollServos@io& (0+255),w,b
 25555   000F02  0D04               	mullw	4
 25556   000F04  50F3               	movf	243,w,c
 25557   000F06  0F08               	addlw	8
 25558   000F08  EC76  F04B         	call	_sendProducedEvent
 25559                           
 25560                           ;../servo.c: 409:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 25561   000F0C  0EDE               	movlw	222
 25562   000F0E  0101               	movlb	1	; () banked
 25563   000F10  25D4               	addwf	pollServos@io& (0+255),w,b
 25564   000F12  6FC9               	movwf	??_pollServos& (0+255),b
 25565   000F14  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25566   000F16  0E03               	movlw	3
 25567   000F18  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25568   000F1A  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25569   000F1E  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25570   000F22  0100               	movlb	0	; () banked
 25571   000F24  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25572   000F26  0101               	movlb	1	; () banked
 25573   000F28  51D4               	movf	pollServos@io& (0+255),w,b
 25574   000F2A  0FA9               	addlw	low _currentPos
 25575   000F2C  6ED9               	movwf	fsr2l,c
 25576   000F2E  6ADA               	clrf	fsr2h,c
 25577   000F30  50DF               	movf	indf2,w,c
 25578   000F32  0100               	movlb	0	; () banked
 25579   000F34  6FA7               	movwf	writeNVM@value& (0+255),b
 25580   000F36  0E00               	movlw	0
 25581   000F38  EC52  F05B         	call	_writeNVM
 25582   000F3C  D3AA               	goto	l21523
 25583   000F3E                     l21411:
 25584                           
 25585                           ; BSR set to: 1
 25586                           ;../servo.c: 412:                             if (bounceDown(io)) {
 25587   000F3E  51D4               	movf	pollServos@io& (0+255),w,b
 25588   000F40  EC23  F014         	call	_bounceDown
 25589   000F44  0900               	iorlw	0
 25590   000F46  B4D8               	btfsc	status,2,c
 25591   000F48  D3A4               	goto	l21523
 25592                           
 25593                           ;../servo.c: 413:                                 servoState[io] = SS_STOPPED;
 25594   000F4A  0E30               	movlw	low _servoState
 25595   000F4C  0101               	movlb	1	; () banked
 25596   000F4E  25D4               	addwf	pollServos@io& (0+255),w,b
 25597   000F50  6ED9               	movwf	fsr2l,c
 25598   000F52  6ADA               	clrf	fsr2h,c
 25599   000F54  0E01               	movlw	high _servoState
 25600   000F56  22DA               	addwfc	fsr2h,f,c
 25601   000F58  0E01               	movlw	1
 25602   000F5A  6EDF               	movwf	indf2,c
 25603                           
 25604                           ; BSR set to: 1
 25605                           ;../servo.c: 414:                                 ticksWhenStopped[io].val = tickGet();
 25606   000F5C  ECD6  F059         	call	_tickGet	;wreg free
 25607   000F60  0101               	movlb	1	; () banked
 25608   000F62  51D4               	movf	pollServos@io& (0+255),w,b
 25609   000F64  0D04               	mullw	4
 25610   000F66  0E00               	movlw	low _ticksWhenStopped
 25611   000F68  24F3               	addwf	243,w,c
 25612   000F6A  6ED9               	movwf	fsr2l,c
 25613   000F6C  0E02               	movlw	high _ticksWhenStopped
 25614   000F6E  20F4               	addwfc	prodh,w,c
 25615   000F70  6EDA               	movwf	fsr2h,c
 25616   000F72  0100               	movlb	0	; () banked
 25617   000F74  C08D  FFDE         	movff	?_tickGet,postinc2
 25618   000F78  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25619   000F7C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25620   000F80  C090  FFDE         	movff	?_tickGet+3,postinc2
 25621                           
 25622                           ; BSR set to: 0
 25623                           ;../servo.c: 415:                                 currentPos[io] = targetPos[io];
 25624   000F84  0E40               	movlw	low _targetPos
 25625   000F86  0101               	movlb	1	; () banked
 25626   000F88  25D4               	addwf	pollServos@io& (0+255),w,b
 25627   000F8A  6ED9               	movwf	fsr2l,c
 25628   000F8C  6ADA               	clrf	fsr2h,c
 25629   000F8E  0E01               	movlw	high _targetPos
 25630   000F90  22DA               	addwfc	fsr2h,f,c
 25631   000F92  51D4               	movf	pollServos@io& (0+255),w,b
 25632   000F94  0FA9               	addlw	low _currentPos
 25633   000F96  6EE1               	movwf	fsr1l,c
 25634   000F98  6AE2               	clrf	fsr1h,c
 25635   000F9A  CFDF FFE7          	movff	indf2,indf1
 25636                           
 25637                           ; BSR set to: 1
 25638                           ;../servo.c: 416:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 25639   000F9E  51D4               	movf	pollServos@io& (0+255),w,b
 25640   000FA0  0D07               	mullw	7
 25641   000FA2  50F3               	movf	243,w,c
 25642   000FA4  0F11               	addlw	17
 25643   000FA6  EC21  F05D         	call	_getNV
 25644   000FAA  0100               	movlb	0	; () banked
 25645   000FAC  518D               	movf	?_getNV& (0+255),w,b
 25646   000FAE  0B40               	andlw	64
 25647   000FB0  0101               	movlb	1	; () banked
 25648   000FB2  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25649   000FB4  51D4               	movf	pollServos@io& (0+255),w,b
 25650   000FB6  0D04               	mullw	4
 25651   000FB8  50F3               	movf	243,w,c
 25652   000FBA  0F08               	addlw	8
 25653   000FBC  EC76  F04B         	call	_sendProducedEvent
 25654                           
 25655                           ;../servo.c: 417:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 25656   000FC0  0EDE               	movlw	222
 25657   000FC2  0101               	movlb	1	; () banked
 25658   000FC4  25D4               	addwf	pollServos@io& (0+255),w,b
 25659   000FC6  6FC9               	movwf	??_pollServos& (0+255),b
 25660   000FC8  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25661   000FCA  0E03               	movlw	3
 25662   000FCC  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25663   000FCE  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25664   000FD2  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25665   000FD6  0100               	movlb	0	; () banked
 25666   000FD8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25667   000FDA  0101               	movlb	1	; () banked
 25668   000FDC  51D4               	movf	pollServos@io& (0+255),w,b
 25669   000FDE  0FA9               	addlw	low _currentPos
 25670   000FE0  6ED9               	movwf	fsr2l,c
 25671   000FE2  6ADA               	clrf	fsr2h,c
 25672   000FE4  50DF               	movf	indf2,w,c
 25673   000FE6  0100               	movlb	0	; () banked
 25674   000FE8  6FA7               	movwf	writeNVM@value& (0+255),b
 25675   000FEA  0E00               	movlw	0
 25676   000FEC  EC52  F05B         	call	_writeNVM
 25677   000FF0  D350               	goto	l21523
 25678   000FF2                     l21425:
 25679                           
 25680                           ; BSR set to: 0
 25681   000FF2  0E30               	movlw	low _servoState
 25682   000FF4  0101               	movlb	1	; () banked
 25683   000FF6  25D4               	addwf	pollServos@io& (0+255),w,b
 25684   000FF8  6ED9               	movwf	fsr2l,c
 25685   000FFA  6ADA               	clrf	fsr2h,c
 25686   000FFC  0E01               	movlw	high _servoState
 25687   000FFE  22DA               	addwfc	fsr2h,f,c
 25688   001000  50DF               	movf	indf2,w,c
 25689   001002  6FC9               	movwf	??_pollServos& (0+255),b
 25690   001004  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25691                           
 25692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25693                           ; Switch size 1, requested type "simple"
 25694                           ; Number of cases is 1, Range of values is 0 to 0
 25695                           ; switch strategies available:
 25696                           ; Name         Instructions Cycles
 25697                           ; simple_byte            4     3 (average)
 25698                           ;	Chosen strategy is simple_byte
 25699   001006  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25700   001008  0A00               	xorlw	0	; case 0
 25701   00100A  A4D8               	btfss	status,2,c
 25702   00100C  D342               	goto	l21523
 25703                           
 25704                           ; BSR set to: 1
 25705                           ; Switch size 1, requested type "simple"
 25706                           ; Number of cases is 4, Range of values is 0 to 3
 25707                           ; switch strategies available:
 25708                           ; Name         Instructions Cycles
 25709                           ; simple_byte           13     7 (average)
 25710                           ;	Chosen strategy is simple_byte
 25711   00100E  51C9               	movf	??_pollServos& (0+255),w,b
 25712   001010  0A00               	xorlw	0	; case 0
 25713   001012  B4D8               	btfsc	status,2,c
 25714   001014  D33E               	goto	l21523
 25715   001016  0A01               	xorlw	1	; case 1
 25716   001018  B4D8               	btfsc	status,2,c
 25717   00101A  D33B               	goto	l21523
 25718   00101C  0A03               	xorlw	3	; case 2
 25719   00101E  B4D8               	btfsc	status,2,c
 25720   001020  D6B5               	goto	l21381
 25721   001022  0A01               	xorlw	1	; case 3
 25722   001024  B4D8               	btfsc	status,2,c
 25723   001026  D69F               	goto	l21375
 25724   001028  D334               	goto	l21523
 25725   00102A                     l21427:
 25726                           
 25727                           ; BSR set to: 1
 25728                           ;../servo.c: 429:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 25729   00102A  51D4               	movf	pollServos@io& (0+255),w,b
 25730   00102C  0D07               	mullw	7
 25731   00102E  50F3               	movf	243,w,c
 25732   001030  0F13               	addlw	19
 25733   001032  EC21  F05D         	call	_getNV
 25734   001036  0101               	movlb	1	; () banked
 25735   001038  51D4               	movf	pollServos@io& (0+255),w,b
 25736   00103A  0FA9               	addlw	low _currentPos
 25737   00103C  6ED9               	movwf	fsr2l,c
 25738   00103E  6ADA               	clrf	fsr2h,c
 25739   001040  50DF               	movf	indf2,w,c
 25740   001042  6FC9               	movwf	??_pollServos& (0+255),b
 25741   001044  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25742   001046  0100               	movlb	0	; () banked
 25743   001048  518D               	movf	?_getNV& (0+255),w,b
 25744   00104A  0101               	movlb	1	; () banked
 25745   00104C  19C9               	xorwf	??_pollServos& (0+255),w,b
 25746   00104E  E117               	bnz	l21431
 25747   001050  0100               	movlb	0	; () banked
 25748   001052  518E               	movf	(?_getNV+1)& (0+255),w,b
 25749   001054  0101               	movlb	1	; () banked
 25750   001056  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25751   001058  A4D8               	btfss	status,2,c
 25752   00105A  D011               	goto	l21431
 25753                           
 25754                           ; BSR set to: 1
 25755                           ;../servo.c: 430:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25756   00105C  51D4               	movf	pollServos@io& (0+255),w,b
 25757   00105E  0D07               	mullw	7
 25758   001060  50F3               	movf	243,w,c
 25759   001062  0F11               	addlw	17
 25760   001064  EC21  F05D         	call	_getNV
 25761   001068  0100               	movlb	0	; () banked
 25762   00106A  518D               	movf	?_getNV& (0+255),w,b
 25763   00106C  0B40               	andlw	64
 25764   00106E  0101               	movlb	1	; () banked
 25765   001070  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25766   001072  51D4               	movf	pollServos@io& (0+255),w,b
 25767   001074  0D04               	mullw	4
 25768   001076  50F3               	movf	243,w,c
 25769   001078  0F08               	addlw	8
 25770   00107A  EC76  F04B         	call	_sendProducedEvent
 25771   00107E                     l21431:
 25772                           
 25773                           ;../servo.c: 432:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 25774   00107E  0101               	movlb	1	; () banked
 25775   001080  51D4               	movf	pollServos@io& (0+255),w,b
 25776   001082  0D07               	mullw	7
 25777   001084  50F3               	movf	243,w,c
 25778   001086  0F14               	addlw	20
 25779   001088  EC21  F05D         	call	_getNV
 25780   00108C  0101               	movlb	1	; () banked
 25781   00108E  51D4               	movf	pollServos@io& (0+255),w,b
 25782   001090  0FA9               	addlw	low _currentPos
 25783   001092  6ED9               	movwf	fsr2l,c
 25784   001094  6ADA               	clrf	fsr2h,c
 25785   001096  50DF               	movf	indf2,w,c
 25786   001098  6FC9               	movwf	??_pollServos& (0+255),b
 25787   00109A  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25788   00109C  0100               	movlb	0	; () banked
 25789   00109E  518D               	movf	?_getNV& (0+255),w,b
 25790   0010A0  0101               	movlb	1	; () banked
 25791   0010A2  19C9               	xorwf	??_pollServos& (0+255),w,b
 25792   0010A4  E117               	bnz	l21435
 25793   0010A6  0100               	movlb	0	; () banked
 25794   0010A8  518E               	movf	(?_getNV+1)& (0+255),w,b
 25795   0010AA  0101               	movlb	1	; () banked
 25796   0010AC  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25797   0010AE  A4D8               	btfss	status,2,c
 25798   0010B0  D011               	goto	l21435
 25799                           
 25800                           ; BSR set to: 1
 25801                           ;../servo.c: 433:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25802   0010B2  51D4               	movf	pollServos@io& (0+255),w,b
 25803   0010B4  0D07               	mullw	7
 25804   0010B6  50F3               	movf	243,w,c
 25805   0010B8  0F11               	addlw	17
 25806   0010BA  EC21  F05D         	call	_getNV
 25807   0010BE  0100               	movlb	0	; () banked
 25808   0010C0  518D               	movf	?_getNV& (0+255),w,b
 25809   0010C2  0B40               	andlw	64
 25810   0010C4  0101               	movlb	1	; () banked
 25811   0010C6  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25812   0010C8  51D4               	movf	pollServos@io& (0+255),w,b
 25813   0010CA  0D04               	mullw	4
 25814   0010CC  50F3               	movf	243,w,c
 25815   0010CE  0F09               	addlw	9
 25816   0010D0  EC76  F04B         	call	_sendProducedEvent
 25817   0010D4                     l21435:
 25818                           
 25819                           ;../servo.c: 435:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 25820   0010D4  0101               	movlb	1	; () banked
 25821   0010D6  51D4               	movf	pollServos@io& (0+255),w,b
 25822   0010D8  0D07               	mullw	7
 25823   0010DA  50F3               	movf	243,w,c
 25824   0010DC  0F15               	addlw	21
 25825   0010DE  EC21  F05D         	call	_getNV
 25826   0010E2  0101               	movlb	1	; () banked
 25827   0010E4  51D4               	movf	pollServos@io& (0+255),w,b
 25828   0010E6  0FA9               	addlw	low _currentPos
 25829   0010E8  6ED9               	movwf	fsr2l,c
 25830   0010EA  6ADA               	clrf	fsr2h,c
 25831   0010EC  50DF               	movf	indf2,w,c
 25832   0010EE  6FC9               	movwf	??_pollServos& (0+255),b
 25833   0010F0  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25834   0010F2  0100               	movlb	0	; () banked
 25835   0010F4  518D               	movf	?_getNV& (0+255),w,b
 25836   0010F6  0101               	movlb	1	; () banked
 25837   0010F8  19C9               	xorwf	??_pollServos& (0+255),w,b
 25838   0010FA  E117               	bnz	l21439
 25839   0010FC  0100               	movlb	0	; () banked
 25840   0010FE  518E               	movf	(?_getNV+1)& (0+255),w,b
 25841   001100  0101               	movlb	1	; () banked
 25842   001102  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25843   001104  A4D8               	btfss	status,2,c
 25844   001106  D011               	goto	l21439
 25845                           
 25846                           ; BSR set to: 1
 25847                           ;../servo.c: 436:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25848   001108  51D4               	movf	pollServos@io& (0+255),w,b
 25849   00110A  0D07               	mullw	7
 25850   00110C  50F3               	movf	243,w,c
 25851   00110E  0F11               	addlw	17
 25852   001110  EC21  F05D         	call	_getNV
 25853   001114  0100               	movlb	0	; () banked
 25854   001116  518D               	movf	?_getNV& (0+255),w,b
 25855   001118  0B40               	andlw	64
 25856   00111A  0101               	movlb	1	; () banked
 25857   00111C  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25858   00111E  51D4               	movf	pollServos@io& (0+255),w,b
 25859   001120  0D04               	mullw	4
 25860   001122  50F3               	movf	243,w,c
 25861   001124  0F0A               	addlw	10
 25862   001126  EC76  F04B         	call	_sendProducedEvent
 25863   00112A                     l21439:
 25864                           
 25865                           ;../servo.c: 438:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 25866   00112A  0101               	movlb	1	; () banked
 25867   00112C  51D4               	movf	pollServos@io& (0+255),w,b
 25868   00112E  0D07               	mullw	7
 25869   001130  50F3               	movf	243,w,c
 25870   001132  0F16               	addlw	22
 25871   001134  EC21  F05D         	call	_getNV
 25872   001138  0101               	movlb	1	; () banked
 25873   00113A  51D4               	movf	pollServos@io& (0+255),w,b
 25874   00113C  0FA9               	addlw	low _currentPos
 25875   00113E  6ED9               	movwf	fsr2l,c
 25876   001140  6ADA               	clrf	fsr2h,c
 25877   001142  50DF               	movf	indf2,w,c
 25878   001144  6FC9               	movwf	??_pollServos& (0+255),b
 25879   001146  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25880   001148  0100               	movlb	0	; () banked
 25881   00114A  518D               	movf	?_getNV& (0+255),w,b
 25882   00114C  0101               	movlb	1	; () banked
 25883   00114E  19C9               	xorwf	??_pollServos& (0+255),w,b
 25884   001150  E117               	bnz	l21443
 25885   001152  0100               	movlb	0	; () banked
 25886   001154  518E               	movf	(?_getNV+1)& (0+255),w,b
 25887   001156  0101               	movlb	1	; () banked
 25888   001158  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25889   00115A  A4D8               	btfss	status,2,c
 25890   00115C  D011               	goto	l21443
 25891                           
 25892                           ; BSR set to: 1
 25893                           ;../servo.c: 439:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25894   00115E  51D4               	movf	pollServos@io& (0+255),w,b
 25895   001160  0D07               	mullw	7
 25896   001162  50F3               	movf	243,w,c
 25897   001164  0F11               	addlw	17
 25898   001166  EC21  F05D         	call	_getNV
 25899   00116A  0100               	movlb	0	; () banked
 25900   00116C  518D               	movf	?_getNV& (0+255),w,b
 25901   00116E  0B40               	andlw	64
 25902   001170  0101               	movlb	1	; () banked
 25903   001172  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25904   001174  51D4               	movf	pollServos@io& (0+255),w,b
 25905   001176  0D04               	mullw	4
 25906   001178  50F3               	movf	243,w,c
 25907   00117A  0F0B               	addlw	11
 25908   00117C  EC76  F04B         	call	_sendProducedEvent
 25909   001180                     l21443:
 25910                           
 25911                           ;../servo.c: 441:                         servoState[io] = SS_MOVING;
 25912   001180  0E30               	movlw	low _servoState
 25913   001182  0101               	movlb	1	; () banked
 25914   001184  25D4               	addwf	pollServos@io& (0+255),w,b
 25915   001186  6ED9               	movwf	fsr2l,c
 25916   001188  6ADA               	clrf	fsr2h,c
 25917   00118A  0E01               	movlw	high _servoState
 25918   00118C  22DA               	addwfc	fsr2h,f,c
 25919   00118E  0E02               	movlw	2
 25920   001190  6EDF               	movwf	indf2,c
 25921   001192                     l21445:
 25922                           
 25923                           ; BSR set to: 1
 25924                           ;../servo.c: 444:                         if (targetPos[io] > currentPos[io]) {
 25925   001192  0E40               	movlw	low _targetPos
 25926   001194  25D4               	addwf	pollServos@io& (0+255),w,b
 25927   001196  6ED9               	movwf	fsr2l,c
 25928   001198  6ADA               	clrf	fsr2h,c
 25929   00119A  0E01               	movlw	high _targetPos
 25930   00119C  22DA               	addwfc	fsr2h,f,c
 25931   00119E  51D4               	movf	pollServos@io& (0+255),w,b
 25932   0011A0  0FA9               	addlw	low _currentPos
 25933   0011A2  6EE1               	movwf	fsr1l,c
 25934   0011A4  6AE2               	clrf	fsr1h,c
 25935   0011A6  50DE               	movf	postinc2,w,c
 25936   0011A8  5CE6               	subwf	postinc1,w,c
 25937   0011AA  B0D8               	btfsc	status,0,c
 25938   0011AC  D081               	goto	l21465
 25939                           
 25940                           ; BSR set to: 1
 25941                           ;../servo.c: 445:                             if (stepsPerPollSpeed[io]) {
 25942   0011AE  0E20               	movlw	low _stepsPerPollSpeed
 25943   0011B0  25D4               	addwf	pollServos@io& (0+255),w,b
 25944   0011B2  6ED9               	movwf	fsr2l,c
 25945   0011B4  6ADA               	clrf	fsr2h,c
 25946   0011B6  0E01               	movlw	high _stepsPerPollSpeed
 25947   0011B8  22DA               	addwfc	fsr2h,f,c
 25948   0011BA  50DF               	movf	indf2,w,c
 25949   0011BC  B4D8               	btfsc	status,2,c
 25950   0011BE  D03A               	goto	l21455
 25951                           
 25952                           ; BSR set to: 1
 25953                           ;../servo.c: 446:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 25954   0011C0  51D4               	movf	pollServos@io& (0+255),w,b
 25955   0011C2  0FA9               	addlw	low _currentPos
 25956   0011C4  6ED9               	movwf	fsr2l,c
 25957   0011C6  6ADA               	clrf	fsr2h,c
 25958   0011C8  50DF               	movf	indf2,w,c
 25959   0011CA  6FC9               	movwf	??_pollServos& (0+255),b
 25960   0011CC  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25961   0011CE  51D4               	movf	pollServos@io& (0+255),w,b
 25962   0011D0  0FA9               	addlw	low _currentPos
 25963   0011D2  6ED9               	movwf	fsr2l,c
 25964   0011D4  6ADA               	clrf	fsr2h,c
 25965   0011D6  50DF               	movf	indf2,w,c
 25966   0011D8  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 25967   0011DA  6BCC               	clrf	(??_pollServos+3)& (0+255),b
 25968   0011DC  0E20               	movlw	low _stepsPerPollSpeed
 25969   0011DE  25D4               	addwf	pollServos@io& (0+255),w,b
 25970   0011E0  6ED9               	movwf	fsr2l,c
 25971   0011E2  6ADA               	clrf	fsr2h,c
 25972   0011E4  0E01               	movlw	high _stepsPerPollSpeed
 25973   0011E6  22DA               	addwfc	fsr2h,f,c
 25974   0011E8  50DF               	movf	indf2,w,c
 25975   0011EA  6FCD               	movwf	(??_pollServos+4)& (0+255),b
 25976   0011EC  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 25977   0011EE  27CB               	addwf	(??_pollServos+2)& (0+255),f,b
 25978   0011F0  0E00               	movlw	0
 25979   0011F2  23CC               	addwfc	(??_pollServos+3)& (0+255),f,b
 25980   0011F4  51C9               	movf	??_pollServos& (0+255),w,b
 25981   0011F6  5DCB               	subwf	(??_pollServos+2)& (0+255),w,b
 25982   0011F8  51CC               	movf	(??_pollServos+3)& (0+255),w,b
 25983   0011FA  0A80               	xorlw	128
 25984   0011FC  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 25985   0011FE  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25986   001200  0A80               	xorlw	128
 25987   001202  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 25988   001204  B0D8               	btfsc	status,0,c
 25989   001206  D007               	goto	l21453
 25990                           
 25991                           ; BSR set to: 1
 25992                           ;../servo.c: 448:                                     currentPos[io] =255;
 25993   001208  51D4               	movf	pollServos@io& (0+255),w,b
 25994   00120A  0FA9               	addlw	low _currentPos
 25995   00120C  6ED9               	movwf	fsr2l,c
 25996   00120E  6ADA               	clrf	fsr2h,c
 25997   001210  0EFF               	movlw	255
 25998   001212  6EDF               	movwf	indf2,c
 25999                           
 26000                           ;../servo.c: 449:                                 } else {
 26001   001214  D032               	goto	l21461
 26002   001216                     l21453:
 26003                           
 26004                           ; BSR set to: 1
 26005                           ;../servo.c: 450:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 26006   001216  0E20               	movlw	low _stepsPerPollSpeed
 26007   001218  25D4               	addwf	pollServos@io& (0+255),w,b
 26008   00121A  6ED9               	movwf	fsr2l,c
 26009   00121C  6ADA               	clrf	fsr2h,c
 26010   00121E  0E01               	movlw	high _stepsPerPollSpeed
 26011   001220  22DA               	addwfc	fsr2h,f,c
 26012   001222  50DF               	movf	indf2,w,c
 26013   001224  6FC9               	movwf	??_pollServos& (0+255),b
 26014   001226  51D4               	movf	pollServos@io& (0+255),w,b
 26015   001228  0FA9               	addlw	low _currentPos
 26016   00122A  6ED9               	movwf	fsr2l,c
 26017   00122C  6ADA               	clrf	fsr2h,c
 26018   00122E  51C9               	movf	??_pollServos& (0+255),w,b
 26019   001230  26DF               	addwf	indf2,f,c
 26020   001232  D023               	goto	l21461
 26021   001234                     l21455:
 26022                           
 26023                           ; BSR set to: 1
 26024                           ;../servo.c: 453:                                 pollCount[io]--;
 26025   001234  0E84               	movlw	low _pollCount
 26026   001236  25D4               	addwf	pollServos@io& (0+255),w,b
 26027   001238  6ED9               	movwf	fsr2l,c
 26028   00123A  6ADA               	clrf	fsr2h,c
 26029   00123C  0E02               	movlw	high _pollCount
 26030   00123E  22DA               	addwfc	fsr2h,f,c
 26031   001240  06DF               	decf	indf2,f,c
 26032                           
 26033                           ;../servo.c: 454:                                 if (pollCount[io] == 0) {
 26034   001242  0E84               	movlw	low _pollCount
 26035   001244  25D4               	addwf	pollServos@io& (0+255),w,b
 26036   001246  6ED9               	movwf	fsr2l,c
 26037   001248  6ADA               	clrf	fsr2h,c
 26038   00124A  0E02               	movlw	high _pollCount
 26039   00124C  22DA               	addwfc	fsr2h,f,c
 26040   00124E  50DF               	movf	indf2,w,c
 26041   001250  A4D8               	btfss	status,2,c
 26042   001252  D013               	goto	l21461
 26043                           
 26044                           ; BSR set to: 1
 26045                           ;../servo.c: 455:                                     currentPos[io]++;
 26046   001254  51D4               	movf	pollServos@io& (0+255),w,b
 26047   001256  0FA9               	addlw	low _currentPos
 26048   001258  6ED9               	movwf	fsr2l,c
 26049   00125A  6ADA               	clrf	fsr2h,c
 26050   00125C  2ADF               	incf	indf2,f,c
 26051                           
 26052                           ; BSR set to: 1
 26053                           ;../servo.c: 456:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26054   00125E  0E94               	movlw	low _pollsPerStepSpeed
 26055   001260  25D4               	addwf	pollServos@io& (0+255),w,b
 26056   001262  6ED9               	movwf	fsr2l,c
 26057   001264  6ADA               	clrf	fsr2h,c
 26058   001266  0E02               	movlw	high _pollsPerStepSpeed
 26059   001268  22DA               	addwfc	fsr2h,f,c
 26060   00126A  0E84               	movlw	low _pollCount
 26061   00126C  25D4               	addwf	pollServos@io& (0+255),w,b
 26062   00126E  6EE1               	movwf	fsr1l,c
 26063   001270  6AE2               	clrf	fsr1h,c
 26064   001272  0E02               	movlw	high _pollCount
 26065   001274  22E2               	addwfc	fsr1h,f,c
 26066   001276  CFDF FFE7          	movff	indf2,indf1
 26067   00127A                     l21461:
 26068                           
 26069                           ; BSR set to: 1
 26070                           ;../servo.c: 459:                             if (currentPos[io] > targetPos[io]) {
 26071   00127A  51D4               	movf	pollServos@io& (0+255),w,b
 26072   00127C  0FA9               	addlw	low _currentPos
 26073   00127E  6ED9               	movwf	fsr2l,c
 26074   001280  6ADA               	clrf	fsr2h,c
 26075   001282  0E40               	movlw	low _targetPos
 26076   001284  25D4               	addwf	pollServos@io& (0+255),w,b
 26077   001286  6EE1               	movwf	fsr1l,c
 26078   001288  6AE2               	clrf	fsr1h,c
 26079   00128A  0E01               	movlw	high _targetPos
 26080   00128C  22E2               	addwfc	fsr1h,f,c
 26081   00128E  50DE               	movf	postinc2,w,c
 26082   001290  5CE6               	subwf	postinc1,w,c
 26083   001292  B0D8               	btfsc	status,0,c
 26084   001294  D08E               	goto	l1091
 26085   001296                     u22490:
 26086                           
 26087                           ; BSR set to: 1
 26088                           ;../servo.c: 460:                                 currentPos[io] = targetPos[io];
 26089   001296  0E40               	movlw	low _targetPos
 26090   001298  25D4               	addwf	pollServos@io& (0+255),w,b
 26091   00129A  6ED9               	movwf	fsr2l,c
 26092   00129C  6ADA               	clrf	fsr2h,c
 26093   00129E  0E01               	movlw	high _targetPos
 26094   0012A0  22DA               	addwfc	fsr2h,f,c
 26095   0012A2  51D4               	movf	pollServos@io& (0+255),w,b
 26096   0012A4  0FA9               	addlw	low _currentPos
 26097   0012A6  6EE1               	movwf	fsr1l,c
 26098   0012A8  6AE2               	clrf	fsr1h,c
 26099   0012AA  CFDF FFE7          	movff	indf2,indf1
 26100   0012AE  D081               	goto	l1091
 26101   0012B0                     l21465:
 26102                           
 26103                           ; BSR set to: 1
 26104   0012B0  51D4               	movf	pollServos@io& (0+255),w,b
 26105   0012B2  0FA9               	addlw	low _currentPos
 26106   0012B4  6ED9               	movwf	fsr2l,c
 26107   0012B6  6ADA               	clrf	fsr2h,c
 26108   0012B8  0E40               	movlw	low _targetPos
 26109   0012BA  25D4               	addwf	pollServos@io& (0+255),w,b
 26110   0012BC  6EE1               	movwf	fsr1l,c
 26111   0012BE  6AE2               	clrf	fsr1h,c
 26112   0012C0  0E01               	movlw	high _targetPos
 26113   0012C2  22E2               	addwfc	fsr1h,f,c
 26114   0012C4  50DE               	movf	postinc2,w,c
 26115   0012C6  5CE6               	subwf	postinc1,w,c
 26116   0012C8  B0D8               	btfsc	status,0,c
 26117   0012CA  D073               	goto	l1091
 26118                           
 26119                           ; BSR set to: 1
 26120                           ;../servo.c: 464:                             if (stepsPerPollSpeed[io]) {
 26121   0012CC  0E20               	movlw	low _stepsPerPollSpeed
 26122   0012CE  25D4               	addwf	pollServos@io& (0+255),w,b
 26123   0012D0  6ED9               	movwf	fsr2l,c
 26124   0012D2  6ADA               	clrf	fsr2h,c
 26125   0012D4  0E01               	movlw	high _stepsPerPollSpeed
 26126   0012D6  22DA               	addwfc	fsr2h,f,c
 26127   0012D8  50DF               	movf	indf2,w,c
 26128   0012DA  B4D8               	btfsc	status,2,c
 26129   0012DC  D039               	goto	l21475
 26130                           
 26131                           ; BSR set to: 1
 26132                           ;../servo.c: 465:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 26133   0012DE  51D4               	movf	pollServos@io& (0+255),w,b
 26134   0012E0  0FA9               	addlw	low _currentPos
 26135   0012E2  6ED9               	movwf	fsr2l,c
 26136   0012E4  6ADA               	clrf	fsr2h,c
 26137   0012E6  50DF               	movf	indf2,w,c
 26138   0012E8  6FC9               	movwf	??_pollServos& (0+255),b
 26139   0012EA  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26140   0012EC  0E20               	movlw	low _stepsPerPollSpeed
 26141   0012EE  25D4               	addwf	pollServos@io& (0+255),w,b
 26142   0012F0  6ED9               	movwf	fsr2l,c
 26143   0012F2  6ADA               	clrf	fsr2h,c
 26144   0012F4  0E01               	movlw	high _stepsPerPollSpeed
 26145   0012F6  22DA               	addwfc	fsr2h,f,c
 26146   0012F8  50DF               	movf	indf2,w,c
 26147   0012FA  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 26148   0012FC  51CB               	movf	(??_pollServos+2)& (0+255),w,b
 26149   0012FE  5FC9               	subwf	??_pollServos& (0+255),f,b
 26150   001300  0E00               	movlw	0
 26151   001302  5BCA               	subwfb	(??_pollServos+1)& (0+255),f,b
 26152   001304  51D4               	movf	pollServos@io& (0+255),w,b
 26153   001306  0FA9               	addlw	low _currentPos
 26154   001308  6ED9               	movwf	fsr2l,c
 26155   00130A  6ADA               	clrf	fsr2h,c
 26156   00130C  50DF               	movf	indf2,w,c
 26157   00130E  6FCC               	movwf	(??_pollServos+3)& (0+255),b
 26158   001310  6BCD               	clrf	(??_pollServos+4)& (0+255),b
 26159   001312  51C9               	movf	??_pollServos& (0+255),w,b
 26160   001314  5DCC               	subwf	(??_pollServos+3)& (0+255),w,b
 26161   001316  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 26162   001318  0A80               	xorlw	128
 26163   00131A  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 26164   00131C  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26165   00131E  0A80               	xorlw	128
 26166   001320  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 26167   001322  B0D8               	btfsc	status,0,c
 26168   001324  D006               	goto	l21473
 26169                           
 26170                           ; BSR set to: 1
 26171                           ;../servo.c: 467:                                     currentPos[io] = 0;
 26172   001326  51D4               	movf	pollServos@io& (0+255),w,b
 26173   001328  0FA9               	addlw	low _currentPos
 26174   00132A  6ED9               	movwf	fsr2l,c
 26175   00132C  6ADA               	clrf	fsr2h,c
 26176   00132E  6ADF               	clrf	indf2,c
 26177                           
 26178                           ;../servo.c: 468:                                 } else {
 26179   001330  D032               	goto	l21481
 26180   001332                     l21473:
 26181                           
 26182                           ; BSR set to: 1
 26183                           ;../servo.c: 469:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 26184   001332  0E20               	movlw	low _stepsPerPollSpeed
 26185   001334  25D4               	addwf	pollServos@io& (0+255),w,b
 26186   001336  6ED9               	movwf	fsr2l,c
 26187   001338  6ADA               	clrf	fsr2h,c
 26188   00133A  0E01               	movlw	high _stepsPerPollSpeed
 26189   00133C  22DA               	addwfc	fsr2h,f,c
 26190   00133E  50DF               	movf	indf2,w,c
 26191   001340  6FC9               	movwf	??_pollServos& (0+255),b
 26192   001342  51D4               	movf	pollServos@io& (0+255),w,b
 26193   001344  0FA9               	addlw	low _currentPos
 26194   001346  6ED9               	movwf	fsr2l,c
 26195   001348  6ADA               	clrf	fsr2h,c
 26196   00134A  51C9               	movf	??_pollServos& (0+255),w,b
 26197   00134C  5EDF               	subwf	indf2,f,c
 26198   00134E  D023               	goto	l21481
 26199   001350                     l21475:
 26200                           
 26201                           ; BSR set to: 1
 26202                           ;../servo.c: 472:                                 pollCount[io]--;
 26203   001350  0E84               	movlw	low _pollCount
 26204   001352  25D4               	addwf	pollServos@io& (0+255),w,b
 26205   001354  6ED9               	movwf	fsr2l,c
 26206   001356  6ADA               	clrf	fsr2h,c
 26207   001358  0E02               	movlw	high _pollCount
 26208   00135A  22DA               	addwfc	fsr2h,f,c
 26209   00135C  06DF               	decf	indf2,f,c
 26210                           
 26211                           ;../servo.c: 473:                                 if (pollCount[io] == 0) {
 26212   00135E  0E84               	movlw	low _pollCount
 26213   001360  25D4               	addwf	pollServos@io& (0+255),w,b
 26214   001362  6ED9               	movwf	fsr2l,c
 26215   001364  6ADA               	clrf	fsr2h,c
 26216   001366  0E02               	movlw	high _pollCount
 26217   001368  22DA               	addwfc	fsr2h,f,c
 26218   00136A  50DF               	movf	indf2,w,c
 26219   00136C  A4D8               	btfss	status,2,c
 26220   00136E  D013               	goto	l21481
 26221                           
 26222                           ; BSR set to: 1
 26223                           ;../servo.c: 474:                                     currentPos[io]--;
 26224   001370  51D4               	movf	pollServos@io& (0+255),w,b
 26225   001372  0FA9               	addlw	low _currentPos
 26226   001374  6ED9               	movwf	fsr2l,c
 26227   001376  6ADA               	clrf	fsr2h,c
 26228   001378  06DF               	decf	indf2,f,c
 26229                           
 26230                           ; BSR set to: 1
 26231                           ;../servo.c: 475:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26232   00137A  0E94               	movlw	low _pollsPerStepSpeed
 26233   00137C  25D4               	addwf	pollServos@io& (0+255),w,b
 26234   00137E  6ED9               	movwf	fsr2l,c
 26235   001380  6ADA               	clrf	fsr2h,c
 26236   001382  0E02               	movlw	high _pollsPerStepSpeed
 26237   001384  22DA               	addwfc	fsr2h,f,c
 26238   001386  0E84               	movlw	low _pollCount
 26239   001388  25D4               	addwf	pollServos@io& (0+255),w,b
 26240   00138A  6EE1               	movwf	fsr1l,c
 26241   00138C  6AE2               	clrf	fsr1h,c
 26242   00138E  0E02               	movlw	high _pollCount
 26243   001390  22E2               	addwfc	fsr1h,f,c
 26244   001392  CFDF FFE7          	movff	indf2,indf1
 26245   001396                     l21481:
 26246                           
 26247                           ; BSR set to: 1
 26248                           ;../servo.c: 478:                             if (currentPos[io] < targetPos[io]) {
 26249   001396  0E40               	movlw	low _targetPos
 26250   001398  25D4               	addwf	pollServos@io& (0+255),w,b
 26251   00139A  6ED9               	movwf	fsr2l,c
 26252   00139C  6ADA               	clrf	fsr2h,c
 26253   00139E  0E01               	movlw	high _targetPos
 26254   0013A0  22DA               	addwfc	fsr2h,f,c
 26255   0013A2  51D4               	movf	pollServos@io& (0+255),w,b
 26256   0013A4  0FA9               	addlw	low _currentPos
 26257   0013A6  6EE1               	movwf	fsr1l,c
 26258   0013A8  6AE2               	clrf	fsr1h,c
 26259   0013AA  50DE               	movf	postinc2,w,c
 26260   0013AC  5CE6               	subwf	postinc1,w,c
 26261   0013AE  A0D8               	btfss	status,0,c
 26262   0013B0  D772               	goto	u22490
 26263   0013B2                     l1091:
 26264                           
 26265                           ; BSR set to: 1
 26266                           ;../servo.c: 482:                         if (targetPos[io] == currentPos[io]) {
 26267   0013B2  51D4               	movf	pollServos@io& (0+255),w,b
 26268   0013B4  0FA9               	addlw	low _currentPos
 26269   0013B6  6ED9               	movwf	fsr2l,c
 26270   0013B8  6ADA               	clrf	fsr2h,c
 26271   0013BA  0E40               	movlw	low _targetPos
 26272   0013BC  25D4               	addwf	pollServos@io& (0+255),w,b
 26273   0013BE  6EE1               	movwf	fsr1l,c
 26274   0013C0  6AE2               	clrf	fsr1h,c
 26275   0013C2  0E01               	movlw	high _targetPos
 26276   0013C4  22E2               	addwfc	fsr1h,f,c
 26277   0013C6  50DE               	movf	postinc2,w,c
 26278   0013C8  18E6               	xorwf	postinc1,w,c
 26279   0013CA  A4D8               	btfss	status,2,c
 26280   0013CC  D162               	goto	l21523
 26281                           
 26282                           ; BSR set to: 1
 26283                           ;../servo.c: 483:                             servoState[io] = SS_STOPPED;
 26284   0013CE  0E30               	movlw	low _servoState
 26285   0013D0  25D4               	addwf	pollServos@io& (0+255),w,b
 26286   0013D2  6ED9               	movwf	fsr2l,c
 26287   0013D4  6ADA               	clrf	fsr2h,c
 26288   0013D6  0E01               	movlw	high _servoState
 26289   0013D8  22DA               	addwfc	fsr2h,f,c
 26290   0013DA  0E01               	movlw	1
 26291   0013DC  6EDF               	movwf	indf2,c
 26292                           
 26293                           ; BSR set to: 1
 26294                           ;../servo.c: 484:                             ticksWhenStopped[io].val = tickGet();
 26295   0013DE  ECD6  F059         	call	_tickGet	;wreg free
 26296   0013E2  0101               	movlb	1	; () banked
 26297   0013E4  51D4               	movf	pollServos@io& (0+255),w,b
 26298   0013E6  0D04               	mullw	4
 26299   0013E8  0E00               	movlw	low _ticksWhenStopped
 26300   0013EA  24F3               	addwf	243,w,c
 26301   0013EC  6ED9               	movwf	fsr2l,c
 26302   0013EE  0E02               	movlw	high _ticksWhenStopped
 26303   0013F0  20F4               	addwfc	prodh,w,c
 26304   0013F2  6EDA               	movwf	fsr2h,c
 26305   0013F4  0100               	movlb	0	; () banked
 26306   0013F6  C08D  FFDE         	movff	?_tickGet,postinc2
 26307   0013FA  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26308   0013FE  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26309   001402  C090  FFDE         	movff	?_tickGet+3,postinc2
 26310                           
 26311                           ; BSR set to: 0
 26312                           ;../servo.c: 486:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 26313   001406  0101               	movlb	1	; () banked
 26314   001408  51D4               	movf	pollServos@io& (0+255),w,b
 26315   00140A  0D07               	mullw	7
 26316   00140C  50F3               	movf	243,w,c
 26317   00140E  0F13               	addlw	19
 26318   001410  EC21  F05D         	call	_getNV
 26319   001414  0101               	movlb	1	; () banked
 26320   001416  51D4               	movf	pollServos@io& (0+255),w,b
 26321   001418  0FA9               	addlw	low _currentPos
 26322   00141A  6ED9               	movwf	fsr2l,c
 26323   00141C  6ADA               	clrf	fsr2h,c
 26324   00141E  50DF               	movf	indf2,w,c
 26325   001420  6FC9               	movwf	??_pollServos& (0+255),b
 26326   001422  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26327   001424  0100               	movlb	0	; () banked
 26328   001426  518D               	movf	?_getNV& (0+255),w,b
 26329   001428  0101               	movlb	1	; () banked
 26330   00142A  19C9               	xorwf	??_pollServos& (0+255),w,b
 26331   00142C  E11A               	bnz	l21493
 26332   00142E  0100               	movlb	0	; () banked
 26333   001430  518E               	movf	(?_getNV+1)& (0+255),w,b
 26334   001432  0101               	movlb	1	; () banked
 26335   001434  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26336   001436  A4D8               	btfss	status,2,c
 26337   001438  D014               	goto	l21493
 26338                           
 26339                           ; BSR set to: 1
 26340                           ;../servo.c: 487:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26341   00143A  51D4               	movf	pollServos@io& (0+255),w,b
 26342   00143C  0D07               	mullw	7
 26343   00143E  50F3               	movf	243,w,c
 26344   001440  0F11               	addlw	17
 26345   001442  EC21  F05D         	call	_getNV
 26346   001446  0100               	movlb	0	; () banked
 26347   001448  BD8D               	btfsc	?_getNV& (0+255),6,b
 26348   00144A  D002               	goto	u22570
 26349   00144C  0E01               	movlw	1
 26350   00144E  D001               	goto	u22580
 26351   001450                     u22570:
 26352   001450  0E00               	movlw	0
 26353   001452                     u22580:
 26354   001452  0101               	movlb	1	; () banked
 26355   001454  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26356   001456  51D4               	movf	pollServos@io& (0+255),w,b
 26357   001458  0D04               	mullw	4
 26358   00145A  50F3               	movf	243,w,c
 26359   00145C  0F08               	addlw	8
 26360   00145E  EC76  F04B         	call	_sendProducedEvent
 26361   001462                     l21493:
 26362                           
 26363                           ;../servo.c: 489:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 26364   001462  0101               	movlb	1	; () banked
 26365   001464  51D4               	movf	pollServos@io& (0+255),w,b
 26366   001466  0D07               	mullw	7
 26367   001468  50F3               	movf	243,w,c
 26368   00146A  0F14               	addlw	20
 26369   00146C  EC21  F05D         	call	_getNV
 26370   001470  0101               	movlb	1	; () banked
 26371   001472  51D4               	movf	pollServos@io& (0+255),w,b
 26372   001474  0FA9               	addlw	low _currentPos
 26373   001476  6ED9               	movwf	fsr2l,c
 26374   001478  6ADA               	clrf	fsr2h,c
 26375   00147A  50DF               	movf	indf2,w,c
 26376   00147C  6FC9               	movwf	??_pollServos& (0+255),b
 26377   00147E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26378   001480  0100               	movlb	0	; () banked
 26379   001482  518D               	movf	?_getNV& (0+255),w,b
 26380   001484  0101               	movlb	1	; () banked
 26381   001486  19C9               	xorwf	??_pollServos& (0+255),w,b
 26382   001488  E11A               	bnz	l21497
 26383   00148A  0100               	movlb	0	; () banked
 26384   00148C  518E               	movf	(?_getNV+1)& (0+255),w,b
 26385   00148E  0101               	movlb	1	; () banked
 26386   001490  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26387   001492  A4D8               	btfss	status,2,c
 26388   001494  D014               	goto	l21497
 26389                           
 26390                           ; BSR set to: 1
 26391                           ;../servo.c: 490:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26392   001496  51D4               	movf	pollServos@io& (0+255),w,b
 26393   001498  0D07               	mullw	7
 26394   00149A  50F3               	movf	243,w,c
 26395   00149C  0F11               	addlw	17
 26396   00149E  EC21  F05D         	call	_getNV
 26397   0014A2  0100               	movlb	0	; () banked
 26398   0014A4  BD8D               	btfsc	?_getNV& (0+255),6,b
 26399   0014A6  D002               	goto	u22600
 26400   0014A8  0E01               	movlw	1
 26401   0014AA  D001               	goto	u22610
 26402   0014AC                     u22600:
 26403   0014AC  0E00               	movlw	0
 26404   0014AE                     u22610:
 26405   0014AE  0101               	movlb	1	; () banked
 26406   0014B0  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26407   0014B2  51D4               	movf	pollServos@io& (0+255),w,b
 26408   0014B4  0D04               	mullw	4
 26409   0014B6  50F3               	movf	243,w,c
 26410   0014B8  0F09               	addlw	9
 26411   0014BA  EC76  F04B         	call	_sendProducedEvent
 26412   0014BE                     l21497:
 26413                           
 26414                           ;../servo.c: 492:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 26415   0014BE  0101               	movlb	1	; () banked
 26416   0014C0  51D4               	movf	pollServos@io& (0+255),w,b
 26417   0014C2  0D07               	mullw	7
 26418   0014C4  50F3               	movf	243,w,c
 26419   0014C6  0F15               	addlw	21
 26420   0014C8  EC21  F05D         	call	_getNV
 26421   0014CC  0101               	movlb	1	; () banked
 26422   0014CE  51D4               	movf	pollServos@io& (0+255),w,b
 26423   0014D0  0FA9               	addlw	low _currentPos
 26424   0014D2  6ED9               	movwf	fsr2l,c
 26425   0014D4  6ADA               	clrf	fsr2h,c
 26426   0014D6  50DF               	movf	indf2,w,c
 26427   0014D8  6FC9               	movwf	??_pollServos& (0+255),b
 26428   0014DA  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26429   0014DC  0100               	movlb	0	; () banked
 26430   0014DE  518D               	movf	?_getNV& (0+255),w,b
 26431   0014E0  0101               	movlb	1	; () banked
 26432   0014E2  19C9               	xorwf	??_pollServos& (0+255),w,b
 26433   0014E4  E11A               	bnz	l21501
 26434   0014E6  0100               	movlb	0	; () banked
 26435   0014E8  518E               	movf	(?_getNV+1)& (0+255),w,b
 26436   0014EA  0101               	movlb	1	; () banked
 26437   0014EC  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26438   0014EE  A4D8               	btfss	status,2,c
 26439   0014F0  D014               	goto	l21501
 26440                           
 26441                           ; BSR set to: 1
 26442                           ;../servo.c: 493:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26443   0014F2  51D4               	movf	pollServos@io& (0+255),w,b
 26444   0014F4  0D07               	mullw	7
 26445   0014F6  50F3               	movf	243,w,c
 26446   0014F8  0F11               	addlw	17
 26447   0014FA  EC21  F05D         	call	_getNV
 26448   0014FE  0100               	movlb	0	; () banked
 26449   001500  BD8D               	btfsc	?_getNV& (0+255),6,b
 26450   001502  D002               	goto	u22630
 26451   001504  0E01               	movlw	1
 26452   001506  D001               	goto	u22640
 26453   001508                     u22630:
 26454   001508  0E00               	movlw	0
 26455   00150A                     u22640:
 26456   00150A  0101               	movlb	1	; () banked
 26457   00150C  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26458   00150E  51D4               	movf	pollServos@io& (0+255),w,b
 26459   001510  0D04               	mullw	4
 26460   001512  50F3               	movf	243,w,c
 26461   001514  0F0A               	addlw	10
 26462   001516  EC76  F04B         	call	_sendProducedEvent
 26463   00151A                     l21501:
 26464                           
 26465                           ;../servo.c: 495:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 26466   00151A  0101               	movlb	1	; () banked
 26467   00151C  51D4               	movf	pollServos@io& (0+255),w,b
 26468   00151E  0D07               	mullw	7
 26469   001520  50F3               	movf	243,w,c
 26470   001522  0F16               	addlw	22
 26471   001524  EC21  F05D         	call	_getNV
 26472   001528  0101               	movlb	1	; () banked
 26473   00152A  51D4               	movf	pollServos@io& (0+255),w,b
 26474   00152C  0FA9               	addlw	low _currentPos
 26475   00152E  6ED9               	movwf	fsr2l,c
 26476   001530  6ADA               	clrf	fsr2h,c
 26477   001532  50DF               	movf	indf2,w,c
 26478   001534  6FC9               	movwf	??_pollServos& (0+255),b
 26479   001536  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26480   001538  0100               	movlb	0	; () banked
 26481   00153A  518D               	movf	?_getNV& (0+255),w,b
 26482   00153C  0101               	movlb	1	; () banked
 26483   00153E  19C9               	xorwf	??_pollServos& (0+255),w,b
 26484   001540  E11A               	bnz	l21505
 26485   001542  0100               	movlb	0	; () banked
 26486   001544  518E               	movf	(?_getNV+1)& (0+255),w,b
 26487   001546  0101               	movlb	1	; () banked
 26488   001548  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26489   00154A  A4D8               	btfss	status,2,c
 26490   00154C  D014               	goto	l21505
 26491                           
 26492                           ; BSR set to: 1
 26493                           ;../servo.c: 496:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26494   00154E  51D4               	movf	pollServos@io& (0+255),w,b
 26495   001550  0D07               	mullw	7
 26496   001552  50F3               	movf	243,w,c
 26497   001554  0F11               	addlw	17
 26498   001556  EC21  F05D         	call	_getNV
 26499   00155A  0100               	movlb	0	; () banked
 26500   00155C  BD8D               	btfsc	?_getNV& (0+255),6,b
 26501   00155E  D002               	goto	u22660
 26502   001560  0E01               	movlw	1
 26503   001562  D001               	goto	u22670
 26504   001564                     u22660:
 26505   001564  0E00               	movlw	0
 26506   001566                     u22670:
 26507   001566  0101               	movlb	1	; () banked
 26508   001568  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26509   00156A  51D4               	movf	pollServos@io& (0+255),w,b
 26510   00156C  0D04               	mullw	4
 26511   00156E  50F3               	movf	243,w,c
 26512   001570  0F0B               	addlw	11
 26513   001572  EC76  F04B         	call	_sendProducedEvent
 26514   001576                     l21505:
 26515                           
 26516                           ;../servo.c: 498:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26517   001576  0EDE               	movlw	222
 26518   001578  0101               	movlb	1	; () banked
 26519   00157A  25D4               	addwf	pollServos@io& (0+255),w,b
 26520   00157C  6FC9               	movwf	??_pollServos& (0+255),b
 26521   00157E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26522   001580  0E03               	movlw	3
 26523   001582  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 26524   001584  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 26525   001588  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26526   00158C  0100               	movlb	0	; () banked
 26527   00158E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26528   001590  0101               	movlb	1	; () banked
 26529   001592  51D4               	movf	pollServos@io& (0+255),w,b
 26530   001594  0FA9               	addlw	low _currentPos
 26531   001596  6ED9               	movwf	fsr2l,c
 26532   001598  6ADA               	clrf	fsr2h,c
 26533   00159A  50DF               	movf	indf2,w,c
 26534   00159C  0100               	movlb	0	; () banked
 26535   00159E  6FA7               	movwf	writeNVM@value& (0+255),b
 26536   0015A0  0E00               	movlw	0
 26537   0015A2  EC52  F05B         	call	_writeNVM
 26538   0015A6  D075               	goto	l21523
 26539   0015A8                     l21509:
 26540                           
 26541                           ; BSR set to: 0
 26542   0015A8  0E30               	movlw	low _servoState
 26543   0015AA  0101               	movlb	1	; () banked
 26544   0015AC  25D4               	addwf	pollServos@io& (0+255),w,b
 26545   0015AE  6ED9               	movwf	fsr2l,c
 26546   0015B0  6ADA               	clrf	fsr2h,c
 26547   0015B2  0E01               	movlw	high _servoState
 26548   0015B4  22DA               	addwfc	fsr2h,f,c
 26549   0015B6  50DF               	movf	indf2,w,c
 26550   0015B8  6FC9               	movwf	??_pollServos& (0+255),b
 26551   0015BA  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26552                           
 26553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26554                           ; Switch size 1, requested type "simple"
 26555                           ; Number of cases is 1, Range of values is 0 to 0
 26556                           ; switch strategies available:
 26557                           ; Name         Instructions Cycles
 26558                           ; simple_byte            4     3 (average)
 26559                           ;	Chosen strategy is simple_byte
 26560   0015BC  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26561   0015BE  0A00               	xorlw	0	; case 0
 26562   0015C0  A4D8               	btfss	status,2,c
 26563   0015C2  D067               	goto	l21523
 26564                           
 26565                           ; BSR set to: 1
 26566                           ; Switch size 1, requested type "simple"
 26567                           ; Number of cases is 4, Range of values is 0 to 3
 26568                           ; switch strategies available:
 26569                           ; Name         Instructions Cycles
 26570                           ; simple_byte           13     7 (average)
 26571                           ;	Chosen strategy is simple_byte
 26572   0015C4  51C9               	movf	??_pollServos& (0+255),w,b
 26573   0015C6  0A00               	xorlw	0	; case 0
 26574   0015C8  B4D8               	btfsc	status,2,c
 26575   0015CA  D063               	goto	l21523
 26576   0015CC  0A01               	xorlw	1	; case 1
 26577   0015CE  B4D8               	btfsc	status,2,c
 26578   0015D0  D060               	goto	l21523
 26579   0015D2  0A03               	xorlw	3	; case 2
 26580   0015D4  B4D8               	btfsc	status,2,c
 26581   0015D6  D5DD               	goto	l21445
 26582   0015D8  0A01               	xorlw	1	; case 3
 26583   0015DA  B4D8               	btfsc	status,2,c
 26584   0015DC  D526               	goto	l21427
 26585   0015DE  D059               	goto	l21523
 26586   0015E0                     l21513:
 26587                           
 26588                           ; BSR set to: 1
 26589   0015E0  51D4               	movf	pollServos@io& (0+255),w,b
 26590   0015E2  0D07               	mullw	7
 26591   0015E4  50F3               	movf	243,w,c
 26592   0015E6  0F10               	addlw	16
 26593   0015E8  EC21  F05D         	call	_getNV
 26594                           
 26595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26596                           ; Switch size 1, requested type "simple"
 26597                           ; Number of cases is 1, Range of values is 0 to 0
 26598                           ; switch strategies available:
 26599                           ; Name         Instructions Cycles
 26600                           ; simple_byte            4     3 (average)
 26601                           ;	Chosen strategy is simple_byte
 26602   0015EC  0100               	movlb	0	; () banked
 26603   0015EE  518E               	movf	(?_getNV+1)& (0+255),w,b
 26604   0015F0  0A00               	xorlw	0	; case 0
 26605   0015F2  A4D8               	btfss	status,2,c
 26606   0015F4  D04E               	goto	l21523
 26607                           
 26608                           ; BSR set to: 0
 26609                           ; Switch size 1, requested type "simple"
 26610                           ; Number of cases is 3, Range of values is 2 to 4
 26611                           ; switch strategies available:
 26612                           ; Name         Instructions Cycles
 26613                           ; simple_byte           10     6 (average)
 26614                           ;	Chosen strategy is simple_byte
 26615   0015F6  518D               	movf	?_getNV& (0+255),w,b
 26616   0015F8  0A02               	xorlw	2	; case 2
 26617   0015FA  B4D8               	btfsc	status,2,c
 26618   0015FC  EF2D  F004         	goto	l21285
 26619   001600  0A01               	xorlw	1	; case 3
 26620   001602  B4D8               	btfsc	status,2,c
 26621   001604  D4F6               	goto	l21425
 26622   001606  0A07               	xorlw	7	; case 4
 26623   001608  B4D8               	btfsc	status,2,c
 26624   00160A  D7CE               	goto	l21509
 26625                           
 26626                           ; BSR set to: 1
 26627                           ;../servo.c: 507:         switch (servoState[io]) {
 26628   00160C  D042               	goto	l21523
 26629   00160E                     l21515:
 26630                           
 26631                           ; BSR set to: 1
 26632                           ;../servo.c: 514:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 26633   00160E  51D4               	movf	pollServos@io& (0+255),w,b
 26634   001610  0D07               	mullw	7
 26635   001612  50F3               	movf	243,w,c
 26636   001614  0F11               	addlw	17
 26637   001616  EC21  F05D         	call	_getNV
 26638   00161A  0100               	movlb	0	; () banked
 26639   00161C  A38D               	btfss	?_getNV& (0+255),1,b
 26640   00161E  D051               	goto	l21525
 26641                           
 26642                           ; BSR set to: 0
 26643                           ;../servo.c: 515:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 26644   001620  0101               	movlb	1	; () banked
 26645   001622  51D4               	movf	pollServos@io& (0+255),w,b
 26646   001624  0D04               	mullw	4
 26647   001626  0E00               	movlw	low _ticksWhenStopped
 26648   001628  24F3               	addwf	243,w,c
 26649   00162A  6ED9               	movwf	fsr2l,c
 26650   00162C  0E02               	movlw	high _ticksWhenStopped
 26651   00162E  20F4               	addwfc	prodh,w,c
 26652   001630  6EDA               	movwf	fsr2h,c
 26653   001632  CFDE F1C9          	movff	postinc2,??_pollServos
 26654   001636  CFDE F1CA          	movff	postinc2,??_pollServos+1
 26655   00163A  CFDE F1CB          	movff	postinc2,??_pollServos+2
 26656   00163E  CFDE F1CC          	movff	postinc2,??_pollServos+3
 26657   001642  ECD6  F059         	call	_tickGet	;wreg free
 26658   001646  0101               	movlb	1	; () banked
 26659   001648  51C9               	movf	??_pollServos& (0+255),w,b
 26660   00164A  0100               	movlb	0	; () banked
 26661   00164C  5D8D               	subwf	?_tickGet& (0+255),w,b
 26662   00164E  0101               	movlb	1	; () banked
 26663   001650  6FCD               	movwf	(??_pollServos+4)& (0+255),b
 26664   001652  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26665   001654  0100               	movlb	0	; () banked
 26666   001656  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 26667   001658  0101               	movlb	1	; () banked
 26668   00165A  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 26669   00165C  51CB               	movf	(??_pollServos+2)& (0+255),w,b
 26670   00165E  0100               	movlb	0	; () banked
 26671   001660  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 26672   001662  0101               	movlb	1	; () banked
 26673   001664  6FCF               	movwf	(??_pollServos+6)& (0+255),b
 26674   001666  51CC               	movf	(??_pollServos+3)& (0+255),w,b
 26675   001668  0100               	movlb	0	; () banked
 26676   00166A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 26677   00166C  0101               	movlb	1	; () banked
 26678   00166E  6FD0               	movwf	(??_pollServos+7)& (0+255),b
 26679   001670  51D0               	movf	(??_pollServos+7)& (0+255),w,b
 26680   001672  11CF               	iorwf	(??_pollServos+6)& (0+255),w,b
 26681   001674  E106               	bnz	u22690
 26682   001676  0E25               	movlw	37
 26683   001678  5DCD               	subwf	(??_pollServos+4)& (0+255),w,b
 26684   00167A  0EF4               	movlw	244
 26685   00167C  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 26686   00167E  A0D8               	btfss	status,0,c
 26687   001680  D020               	goto	l21525
 26688   001682                     u22690:
 26689                           
 26690                           ; BSR set to: 1
 26691                           ;../servo.c: 516:                         servoState[io] = SS_OFF;
 26692   001682  0E30               	movlw	low _servoState
 26693   001684  25D4               	addwf	pollServos@io& (0+255),w,b
 26694   001686  6ED9               	movwf	fsr2l,c
 26695   001688  6ADA               	clrf	fsr2h,c
 26696   00168A  0E01               	movlw	high _servoState
 26697   00168C  22DA               	addwfc	fsr2h,f,c
 26698   00168E  6ADF               	clrf	indf2,c
 26699   001690  D018               	goto	l21525
 26700   001692                     l21523:
 26701   001692  0E30               	movlw	low _servoState
 26702   001694  0101               	movlb	1	; () banked
 26703   001696  25D4               	addwf	pollServos@io& (0+255),w,b
 26704   001698  6ED9               	movwf	fsr2l,c
 26705   00169A  6ADA               	clrf	fsr2h,c
 26706   00169C  0E01               	movlw	high _servoState
 26707   00169E  22DA               	addwfc	fsr2h,f,c
 26708   0016A0  50DF               	movf	indf2,w,c
 26709   0016A2  6FC9               	movwf	??_pollServos& (0+255),b
 26710   0016A4  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26711                           
 26712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26713                           ; Switch size 1, requested type "simple"
 26714                           ; Number of cases is 1, Range of values is 0 to 0
 26715                           ; switch strategies available:
 26716                           ; Name         Instructions Cycles
 26717                           ; simple_byte            4     3 (average)
 26718                           ;	Chosen strategy is simple_byte
 26719   0016A6  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26720   0016A8  0A00               	xorlw	0	; case 0
 26721   0016AA  A4D8               	btfss	status,2,c
 26722   0016AC  D00A               	goto	l21525
 26723                           
 26724                           ; BSR set to: 1
 26725                           ; Switch size 1, requested type "simple"
 26726                           ; Number of cases is 4, Range of values is 0 to 3
 26727                           ; switch strategies available:
 26728                           ; Name         Instructions Cycles
 26729                           ; simple_byte           13     7 (average)
 26730                           ;	Chosen strategy is simple_byte
 26731   0016AE  51C9               	movf	??_pollServos& (0+255),w,b
 26732   0016B0  0A00               	xorlw	0	; case 0
 26733   0016B2  B4D8               	btfsc	status,2,c
 26734   0016B4  D006               	goto	l21525
 26735   0016B6  0A01               	xorlw	1	; case 1
 26736   0016B8  B4D8               	btfsc	status,2,c
 26737   0016BA  D7A9               	goto	l21515
 26738   0016BC  0A03               	xorlw	3	; case 2
 26739   0016BE  A4D8               	btfss	status,2,c
 26740   0016C0  0A01               	xorlw	1	; case 3
 26741   0016C2                     l21525:
 26742                           
 26743                           ;../servo.c: 526:     }
 26744   0016C2  0101               	movlb	1	; () banked
 26745   0016C4  2BD4               	incf	pollServos@io& (0+255),f,b
 26746                           
 26747                           ; BSR set to: 1
 26748   0016C6  0E0F               	movlw	15
 26749   0016C8  65D4               	cpfsgt	pollServos@io& (0+255),b
 26750   0016CA  D78A               	goto	l21513
 26751   0016CC  0012               	return	
 26752   0016CE                     __end_of_pollServos:
 26753                           	callstack 0
 26754                           
 26755 ;; *************** function _initBounce *****************
 26756 ;; Defined at:
 26757 ;;		line 89 in file "../bounce.c"
 26758 ;; Parameters:    Size  Location     Type
 26759 ;;  io              1    wreg     unsigned char 
 26760 ;; Auto vars:     Size  Location     Type
 26761 ;;  io              1   45[BANK0 ] unsigned char 
 26762 ;; Return value:  Size  Location     Type
 26763 ;;                  1    wreg      void 
 26764 ;; Registers used:
 26765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26766 ;; Tracked objects:
 26767 ;;		On entry : 0/0
 26768 ;;		On exit  : 0/0
 26769 ;;		Unchanged: 0/0
 26770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26772 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26774 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26775 ;;Total ram usage:        1 bytes
 26776 ;; Hardware stack levels used: 1
 26777 ;; Hardware stack levels required when called: 12
 26778 ;; This function calls:
 26779 ;;		Nothing
 26780 ;; This function is called by:
 26781 ;;		_pollServos
 26782 ;; This function uses a non-reentrant model
 26783 ;;
 26784                           
 26785                           	psect	text97
 26786   00BFA2                     __ptext97:
 26787                           	callstack 0
 26788   00BFA2                     _initBounce:
 26789                           	callstack 15
 26790                           
 26791                           ; BSR set to: 1
 26792                           ;incstack = 0
 26793                           ;initBounce@io stored from wreg
 26794   00BFA2  0100               	movlb	0	; () banked
 26795   00BFA4  6F8D               	movwf	initBounce@io& (0+255),b
 26796                           
 26797                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 26798   00BFA6  0E64               	movlw	low _bounceState
 26799   00BFA8  0100               	movlb	0	; () banked
 26800   00BFAA  258D               	addwf	initBounce@io& (0+255),w,b
 26801   00BFAC  6ED9               	movwf	fsr2l,c
 26802   00BFAE  6ADA               	clrf	fsr2h,c
 26803   00BFB0  0E02               	movlw	high _bounceState
 26804   00BFB2  22DA               	addwfc	fsr2h,f,c
 26805   00BFB4  6ADF               	clrf	indf2,c
 26806                           
 26807                           ; BSR set to: 0
 26808                           ;../bounce.c: 91:     speed[io] = 0;
 26809   00BFB6  518D               	movf	initBounce@io& (0+255),w,b
 26810   00BFB8  0D02               	mullw	2
 26811   00BFBA  0E00               	movlw	low _speed
 26812   00BFBC  24F3               	addwf	243,w,c
 26813   00BFBE  6ED9               	movwf	fsr2l,c
 26814   00BFC0  0E01               	movlw	high _speed
 26815   00BFC2  20F4               	addwfc	prodh,w,c
 26816   00BFC4  6EDA               	movwf	fsr2h,c
 26817   00BFC6  6ADE               	clrf	postinc2,c
 26818   00BFC8  6ADD               	clrf	postdec2,c
 26819                           
 26820                           ; BSR set to: 0
 26821   00BFCA  0012               	return		;funcret
 26822   00BFCC                     __end_of_initBounce:
 26823                           	callstack 0
 26824                           
 26825 ;; *************** function _bounceUp *****************
 26826 ;; Defined at:
 26827 ;;		line 161 in file "../bounce.c"
 26828 ;; Parameters:    Size  Location     Type
 26829 ;;  io              1    wreg     unsigned char 
 26830 ;; Auto vars:     Size  Location     Type
 26831 ;;  io              1   71[BANK0 ] unsigned char 
 26832 ;;  midway          1   70[BANK0 ] unsigned char 
 26833 ;;  reversed        1   69[BANK0 ] enum E12710
 26834 ;; Return value:  Size  Location     Type
 26835 ;;                  1    wreg      enum E12710
 26836 ;; Registers used:
 26837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26838 ;; Tracked objects:
 26839 ;;		On entry : 0/0
 26840 ;;		On exit  : 0/0
 26841 ;;		Unchanged: 0/0
 26842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26844 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26845 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26846 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26847 ;;Total ram usage:        9 bytes
 26848 ;; Hardware stack levels used: 1
 26849 ;; Hardware stack levels required when called: 13
 26850 ;; This function calls:
 26851 ;;		___awdiv
 26852 ;;		_getNV
 26853 ;; This function is called by:
 26854 ;;		_pollServos
 26855 ;; This function uses a non-reentrant model
 26856 ;;
 26857                           
 26858                           	psect	text98
 26859   0059CC                     __ptext98:
 26860                           	callstack 0
 26861   0059CC                     _bounceUp:
 26862                           	callstack 14
 26863                           
 26864                           ; BSR set to: 0
 26865                           ;incstack = 0
 26866                           ;bounceUp@io stored from wreg
 26867   0059CC  0100               	movlb	0	; () banked
 26868   0059CE  6FA7               	movwf	bounceUp@io& (0+255),b
 26869                           
 26870                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 26871   0059D0  0100               	movlb	0	; () banked
 26872   0059D2  51A7               	movf	bounceUp@io& (0+255),w,b
 26873   0059D4  0D07               	mullw	7
 26874   0059D6  50F3               	movf	243,w,c
 26875   0059D8  0F12               	addlw	18
 26876   0059DA  EC21  F05D         	call	_getNV
 26877   0059DE  C08D  F09F         	movff	?_getNV,??_bounceUp
 26878   0059E2  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 26879   0059E6  0100               	movlb	0	; () banked
 26880   0059E8  51A7               	movf	bounceUp@io& (0+255),w,b
 26881   0059EA  0D07               	mullw	7
 26882   0059EC  50F3               	movf	243,w,c
 26883   0059EE  0F13               	addlw	19
 26884   0059F0  EC21  F05D         	call	_getNV
 26885   0059F4  0100               	movlb	0	; () banked
 26886   0059F6  518D               	movf	?_getNV& (0+255),w,b
 26887   0059F8  5D9F               	subwf	??_bounceUp& (0+255),w,b
 26888   0059FA  B0D8               	btfsc	status,0,c
 26889   0059FC  D002               	goto	u21180
 26890   0059FE  0E01               	movlw	1
 26891   005A00  D001               	goto	u21190
 26892   005A02                     u21180:
 26893   005A02  0E00               	movlw	0
 26894   005A04                     u21190:
 26895   005A04  6FA5               	movwf	bounceUp@reversed& (0+255),b
 26896                           
 26897                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 26898   005A06  D10A               	goto	l20473
 26899   005A08                     l20423:
 26900                           
 26901                           ; BSR set to: 0
 26902                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 26903   005A08  51A7               	movf	bounceUp@io& (0+255),w,b
 26904   005A0A  0D07               	mullw	7
 26905   005A0C  50F3               	movf	243,w,c
 26906   005A0E  0F12               	addlw	18
 26907   005A10  EC21  F05D         	call	_getNV
 26908   005A14  0100               	movlb	0	; () banked
 26909   005A16  518D               	movf	?_getNV& (0+255),w,b
 26910   005A18  6F97               	movwf	___awdiv@dividend& (0+255),b
 26911   005A1A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26912   005A1C  0E00               	movlw	0
 26913   005A1E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26914   005A20  0E02               	movlw	2
 26915   005A22  6F99               	movwf	___awdiv@divisor& (0+255),b
 26916   005A24  EC4A  F052         	call	___awdiv	;wreg free
 26917   005A28  C097  F09F         	movff	?___awdiv,??_bounceUp
 26918   005A2C  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 26919   005A30  0100               	movlb	0	; () banked
 26920   005A32  51A7               	movf	bounceUp@io& (0+255),w,b
 26921   005A34  0D07               	mullw	7
 26922   005A36  50F3               	movf	243,w,c
 26923   005A38  0F13               	addlw	19
 26924   005A3A  EC21  F05D         	call	_getNV
 26925   005A3E  0100               	movlb	0	; () banked
 26926   005A40  518D               	movf	?_getNV& (0+255),w,b
 26927   005A42  6F97               	movwf	___awdiv@dividend& (0+255),b
 26928   005A44  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26929   005A46  0E00               	movlw	0
 26930   005A48  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26931   005A4A  0E02               	movlw	2
 26932   005A4C  6F99               	movwf	___awdiv@divisor& (0+255),b
 26933   005A4E  EC4A  F052         	call	___awdiv	;wreg free
 26934   005A52  0100               	movlb	0	; () banked
 26935   005A54  5197               	movf	?___awdiv& (0+255),w,b
 26936   005A56  259F               	addwf	??_bounceUp& (0+255),w,b
 26937   005A58  6FA6               	movwf	bounceUp@midway& (0+255),b
 26938                           
 26939                           ; BSR set to: 0
 26940                           ;../bounce.c: 169:         if (reversed) {
 26941   005A5A  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26942   005A5C  B4D8               	btfsc	status,2,c
 26943   005A5E  D024               	goto	l20435
 26944                           
 26945                           ; BSR set to: 0
 26946                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26947   005A60  51A7               	movf	bounceUp@io& (0+255),w,b
 26948   005A62  0D07               	mullw	7
 26949   005A64  50F3               	movf	243,w,c
 26950   005A66  0F15               	addlw	21
 26951   005A68  EC21  F05D         	call	_getNV
 26952   005A6C  0100               	movlb	0	; () banked
 26953   005A6E  51A7               	movf	bounceUp@io& (0+255),w,b
 26954   005A70  0FA9               	addlw	low _currentPos
 26955   005A72  6ED9               	movwf	fsr2l,c
 26956   005A74  6ADA               	clrf	fsr2h,c
 26957   005A76  518D               	movf	?_getNV& (0+255),w,b
 26958   005A78  5EDF               	subwf	indf2,f,c
 26959                           
 26960                           ; BSR set to: 0
 26961                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 26962   005A7A  51A7               	movf	bounceUp@io& (0+255),w,b
 26963   005A7C  0FA9               	addlw	low _currentPos
 26964   005A7E  6ED9               	movwf	fsr2l,c
 26965   005A80  6ADA               	clrf	fsr2h,c
 26966   005A82  50DE               	movf	postinc2,w,c
 26967   005A84  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 26968   005A86  A0D8               	btfss	status,0,c
 26969   005A88  D0E1               	goto	l20475
 26970                           
 26971                           ; BSR set to: 0
 26972                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 26973   005A8A  0E64               	movlw	low _bounceState
 26974   005A8C  25A7               	addwf	bounceUp@io& (0+255),w,b
 26975   005A8E  6ED9               	movwf	fsr2l,c
 26976   005A90  6ADA               	clrf	fsr2h,c
 26977   005A92  0E02               	movlw	high _bounceState
 26978   005A94  22DA               	addwfc	fsr2h,f,c
 26979   005A96  0E01               	movlw	1
 26980   005A98  6EDF               	movwf	indf2,c
 26981                           
 26982                           ; BSR set to: 0
 26983                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26984   005A9A  51A7               	movf	bounceUp@io& (0+255),w,b
 26985   005A9C  0D07               	mullw	7
 26986   005A9E  50F3               	movf	243,w,c
 26987   005AA0  0F16               	addlw	22
 26988   005AA2  EC21  F05D         	call	_getNV
 26989   005AA6  D023               	goto	L6
 26990   005AA8                     l20435:
 26991                           
 26992                           ; BSR set to: 0
 26993                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26994   005AA8  51A7               	movf	bounceUp@io& (0+255),w,b
 26995   005AAA  0D07               	mullw	7
 26996   005AAC  50F3               	movf	243,w,c
 26997   005AAE  0F15               	addlw	21
 26998   005AB0  EC21  F05D         	call	_getNV
 26999   005AB4  0100               	movlb	0	; () banked
 27000   005AB6  51A7               	movf	bounceUp@io& (0+255),w,b
 27001   005AB8  0FA9               	addlw	low _currentPos
 27002   005ABA  6ED9               	movwf	fsr2l,c
 27003   005ABC  6ADA               	clrf	fsr2h,c
 27004   005ABE  518D               	movf	?_getNV& (0+255),w,b
 27005   005AC0  26DF               	addwf	indf2,f,c
 27006                           
 27007                           ; BSR set to: 0
 27008                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 27009   005AC2  51A7               	movf	bounceUp@io& (0+255),w,b
 27010   005AC4  0FA9               	addlw	low _currentPos
 27011   005AC6  6ED9               	movwf	fsr2l,c
 27012   005AC8  6ADA               	clrf	fsr2h,c
 27013   005ACA  51A6               	movf	bounceUp@midway& (0+255),w,b
 27014   005ACC  5CDE               	subwf	postinc2,w,c
 27015   005ACE  A0D8               	btfss	status,0,c
 27016   005AD0  D0BD               	goto	l20475
 27017                           
 27018                           ; BSR set to: 0
 27019                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 27020   005AD2  0E64               	movlw	low _bounceState
 27021   005AD4  25A7               	addwf	bounceUp@io& (0+255),w,b
 27022   005AD6  6ED9               	movwf	fsr2l,c
 27023   005AD8  6ADA               	clrf	fsr2h,c
 27024   005ADA  0E02               	movlw	high _bounceState
 27025   005ADC  22DA               	addwfc	fsr2h,f,c
 27026   005ADE  0E01               	movlw	1
 27027   005AE0  6EDF               	movwf	indf2,c
 27028                           
 27029                           ; BSR set to: 0
 27030                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 27031   005AE2  51A7               	movf	bounceUp@io& (0+255),w,b
 27032   005AE4  0D07               	mullw	7
 27033   005AE6  50F3               	movf	243,w,c
 27034   005AE8  0F16               	addlw	22
 27035   005AEA  EC21  F05D         	call	_getNV
 27036   005AEE                     L6:
 27037   005AEE  0100               	movlb	0	; () banked
 27038   005AF0  518D               	movf	?_getNV& (0+255),w,b
 27039   005AF2  6F9F               	movwf	??_bounceUp& (0+255),b
 27040   005AF4  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27041   005AF6  51A7               	movf	bounceUp@io& (0+255),w,b
 27042   005AF8  0D02               	mullw	2
 27043   005AFA  0E00               	movlw	low _speed
 27044   005AFC  24F3               	addwf	243,w,c
 27045   005AFE  6ED9               	movwf	fsr2l,c
 27046   005B00  0E01               	movlw	high _speed
 27047   005B02  20F4               	addwfc	prodh,w,c
 27048   005B04  6EDA               	movwf	fsr2h,c
 27049   005B06  C09F  FFDE         	movff	??_bounceUp,postinc2
 27050   005B0A  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 27051   005B0E  D09E               	goto	l20475
 27052   005B10                     l20443:
 27053                           
 27054                           ; BSR set to: 0
 27055                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 27056   005B10  51A7               	movf	bounceUp@io& (0+255),w,b
 27057   005B12  0D02               	mullw	2
 27058   005B14  0E00               	movlw	low _speed
 27059   005B16  24F3               	addwf	243,w,c
 27060   005B18  6ED9               	movwf	fsr2l,c
 27061   005B1A  0E01               	movlw	high _speed
 27062   005B1C  20F4               	addwfc	prodh,w,c
 27063   005B1E  6EDA               	movwf	fsr2h,c
 27064   005B20  50DE               	movf	postinc2,w,c
 27065   005B22  10DE               	iorwf	postinc2,w,c
 27066   005B24  A4D8               	btfss	status,2,c
 27067   005B26  D008               	goto	l20447
 27068                           
 27069                           ; BSR set to: 0
 27070   005B28  0E64               	movlw	low _bounceState
 27071   005B2A  25A7               	addwf	bounceUp@io& (0+255),w,b
 27072   005B2C  6ED9               	movwf	fsr2l,c
 27073   005B2E  6ADA               	clrf	fsr2h,c
 27074   005B30  0E02               	movlw	high _bounceState
 27075   005B32  22DA               	addwfc	fsr2h,f,c
 27076   005B34  0E02               	movlw	2
 27077   005B36  6EDF               	movwf	indf2,c
 27078   005B38                     l20447:
 27079                           
 27080                           ; BSR set to: 0
 27081                           ;../bounce.c: 186:         speed[io]--;
 27082   005B38  51A7               	movf	bounceUp@io& (0+255),w,b
 27083   005B3A  0D02               	mullw	2
 27084   005B3C  0E00               	movlw	low _speed
 27085   005B3E  24F3               	addwf	243,w,c
 27086   005B40  6ED9               	movwf	fsr2l,c
 27087   005B42  0E01               	movlw	high _speed
 27088   005B44  20F4               	addwfc	prodh,w,c
 27089   005B46  6EDA               	movwf	fsr2h,c
 27090   005B48  06DE               	decf	postinc2,f,c
 27091   005B4A  0E00               	movlw	0
 27092   005B4C  5ADD               	subwfb	postdec2,f,c
 27093                           
 27094                           ;../bounce.c: 187:         break;
 27095   005B4E  D07E               	goto	l20475
 27096   005B50                     l20449:
 27097                           
 27098                           ; BSR set to: 0
 27099                           ;../bounce.c: 190:         if (reversed) {
 27100   005B50  51A5               	movf	bounceUp@reversed& (0+255),w,b
 27101   005B52  B4D8               	btfsc	status,2,c
 27102   005B54  D036               	goto	l20461
 27103                           
 27104                           ; BSR set to: 0
 27105                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 27106   005B56  51A7               	movf	bounceUp@io& (0+255),w,b
 27107   005B58  0D07               	mullw	7
 27108   005B5A  50F3               	movf	243,w,c
 27109   005B5C  0F15               	addlw	21
 27110   005B5E  EC21  F05D         	call	_getNV
 27111   005B62  0100               	movlb	0	; () banked
 27112   005B64  51A7               	movf	bounceUp@io& (0+255),w,b
 27113   005B66  0FA9               	addlw	low _currentPos
 27114   005B68  6ED9               	movwf	fsr2l,c
 27115   005B6A  6ADA               	clrf	fsr2h,c
 27116   005B6C  518D               	movf	?_getNV& (0+255),w,b
 27117   005B6E  5EDF               	subwf	indf2,f,c
 27118                           
 27119                           ; BSR set to: 0
 27120                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 27121   005B70  51A7               	movf	bounceUp@io& (0+255),w,b
 27122   005B72  0FA9               	addlw	low _currentPos
 27123   005B74  6ED9               	movwf	fsr2l,c
 27124   005B76  6ADA               	clrf	fsr2h,c
 27125   005B78  50DF               	movf	indf2,w,c
 27126   005B7A  6F9F               	movwf	??_bounceUp& (0+255),b
 27127   005B7C  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27128   005B7E  0E40               	movlw	low _targetPos
 27129   005B80  25A7               	addwf	bounceUp@io& (0+255),w,b
 27130   005B82  6ED9               	movwf	fsr2l,c
 27131   005B84  6ADA               	clrf	fsr2h,c
 27132   005B86  0E01               	movlw	high _targetPos
 27133   005B88  22DA               	addwfc	fsr2h,f,c
 27134   005B8A  50DF               	movf	indf2,w,c
 27135   005B8C  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 27136   005B8E  0EFD               	movlw	253
 27137   005B90  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 27138   005B92  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27139   005B94  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27140   005B96  0EFF               	movlw	255
 27141   005B98  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 27142   005B9A  519F               	movf	??_bounceUp& (0+255),w,b
 27143   005B9C  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27144   005B9E  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27145   005BA0  0A80               	xorlw	128
 27146   005BA2  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27147   005BA4  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27148   005BA6  0A80               	xorlw	128
 27149   005BA8  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27150   005BAA  A0D8               	btfss	status,0,c
 27151   005BAC  D04F               	goto	l20475
 27152   005BAE                     u21250:
 27153                           
 27154                           ; BSR set to: 0
 27155                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 27156   005BAE  0E64               	movlw	low _bounceState
 27157   005BB0  25A7               	addwf	bounceUp@io& (0+255),w,b
 27158   005BB2  6ED9               	movwf	fsr2l,c
 27159   005BB4  6ADA               	clrf	fsr2h,c
 27160   005BB6  0E02               	movlw	high _bounceState
 27161   005BB8  22DA               	addwfc	fsr2h,f,c
 27162   005BBA  0E03               	movlw	3
 27163   005BBC  6EDF               	movwf	indf2,c
 27164                           
 27165                           ; BSR set to: 0
 27166                           ;../bounce.c: 194:                 return TRUE;
 27167   005BBE  0E01               	movlw	1
 27168   005BC0  0012               	return	
 27169   005BC2                     l20461:
 27170                           
 27171                           ; BSR set to: 0
 27172                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 27173   005BC2  51A7               	movf	bounceUp@io& (0+255),w,b
 27174   005BC4  0D07               	mullw	7
 27175   005BC6  50F3               	movf	243,w,c
 27176   005BC8  0F15               	addlw	21
 27177   005BCA  EC21  F05D         	call	_getNV
 27178   005BCE  0100               	movlb	0	; () banked
 27179   005BD0  51A7               	movf	bounceUp@io& (0+255),w,b
 27180   005BD2  0FA9               	addlw	low _currentPos
 27181   005BD4  6ED9               	movwf	fsr2l,c
 27182   005BD6  6ADA               	clrf	fsr2h,c
 27183   005BD8  518D               	movf	?_getNV& (0+255),w,b
 27184   005BDA  26DF               	addwf	indf2,f,c
 27185                           
 27186                           ; BSR set to: 0
 27187                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 27188   005BDC  0E40               	movlw	low _targetPos
 27189   005BDE  25A7               	addwf	bounceUp@io& (0+255),w,b
 27190   005BE0  6ED9               	movwf	fsr2l,c
 27191   005BE2  6ADA               	clrf	fsr2h,c
 27192   005BE4  0E01               	movlw	high _targetPos
 27193   005BE6  22DA               	addwfc	fsr2h,f,c
 27194   005BE8  50DF               	movf	indf2,w,c
 27195   005BEA  6F9F               	movwf	??_bounceUp& (0+255),b
 27196   005BEC  0EFD               	movlw	253
 27197   005BEE  259F               	addwf	??_bounceUp& (0+255),w,b
 27198   005BF0  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 27199   005BF2  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 27200   005BF4  0EFF               	movlw	255
 27201   005BF6  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 27202   005BF8  51A7               	movf	bounceUp@io& (0+255),w,b
 27203   005BFA  0FA9               	addlw	low _currentPos
 27204   005BFC  6ED9               	movwf	fsr2l,c
 27205   005BFE  6ADA               	clrf	fsr2h,c
 27206   005C00  50DF               	movf	indf2,w,c
 27207   005C02  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27208   005C04  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27209   005C06  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27210   005C08  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27211   005C0A  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27212   005C0C  0A80               	xorlw	128
 27213   005C0E  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27214   005C10  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 27215   005C12  0A80               	xorlw	128
 27216   005C14  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27217   005C16  B0D8               	btfsc	status,0,c
 27218   005C18  D7CA               	goto	u21250
 27219   005C1A  D018               	goto	l20475
 27220   005C1C                     l20473:
 27221                           
 27222                           ; BSR set to: 0
 27223   005C1C  0E64               	movlw	low _bounceState
 27224   005C1E  25A7               	addwf	bounceUp@io& (0+255),w,b
 27225   005C20  6ED9               	movwf	fsr2l,c
 27226   005C22  6ADA               	clrf	fsr2h,c
 27227   005C24  0E02               	movlw	high _bounceState
 27228   005C26  22DA               	addwfc	fsr2h,f,c
 27229   005C28  50DF               	movf	indf2,w,c
 27230   005C2A  6F9F               	movwf	??_bounceUp& (0+255),b
 27231   005C2C  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27232                           
 27233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27234                           ; Switch size 1, requested type "simple"
 27235                           ; Number of cases is 1, Range of values is 0 to 0
 27236                           ; switch strategies available:
 27237                           ; Name         Instructions Cycles
 27238                           ; simple_byte            4     3 (average)
 27239                           ;	Chosen strategy is simple_byte
 27240   005C2E  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27241   005C30  0A00               	xorlw	0	; case 0
 27242   005C32  A4D8               	btfss	status,2,c
 27243   005C34  D00B               	goto	l20475
 27244                           
 27245                           ; BSR set to: 0
 27246                           ; Switch size 1, requested type "simple"
 27247                           ; Number of cases is 4, Range of values is 0 to 3
 27248                           ; switch strategies available:
 27249                           ; Name         Instructions Cycles
 27250                           ; simple_byte           13     7 (average)
 27251                           ;	Chosen strategy is simple_byte
 27252   005C36  519F               	movf	??_bounceUp& (0+255),w,b
 27253   005C38  0A00               	xorlw	0	; case 0
 27254   005C3A  B4D8               	btfsc	status,2,c
 27255   005C3C  D6E5               	goto	l20423
 27256   005C3E  0A01               	xorlw	1	; case 1
 27257   005C40  B4D8               	btfsc	status,2,c
 27258   005C42  D766               	goto	l20443
 27259   005C44  0A03               	xorlw	3	; case 2
 27260   005C46  B4D8               	btfsc	status,2,c
 27261   005C48  D783               	goto	l20449
 27262   005C4A  0A01               	xorlw	1	; case 3
 27263   005C4C                     l20475:
 27264                           
 27265                           ; BSR set to: 0
 27266                           ;../bounce.c: 207:     return FALSE;
 27267   005C4C  0E00               	movlw	0
 27268                           
 27269                           ; BSR set to: 0
 27270   005C4E  0012               	return		;funcret
 27271   005C50                     __end_of_bounceUp:
 27272                           	callstack 0
 27273                           
 27274 ;; *************** function _bounceDown *****************
 27275 ;; Defined at:
 27276 ;;		line 103 in file "../bounce.c"
 27277 ;; Parameters:    Size  Location     Type
 27278 ;;  io              1    wreg     unsigned char 
 27279 ;; Auto vars:     Size  Location     Type
 27280 ;;  io              1    3[BANK1 ] unsigned char 
 27281 ;;  tmp             2    1[BANK1 ] int 
 27282 ;;  reversed        1    0[BANK1 ] enum E12710
 27283 ;; Return value:  Size  Location     Type
 27284 ;;                  1    wreg      enum E12710
 27285 ;; Registers used:
 27286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27287 ;; Tracked objects:
 27288 ;;		On entry : 0/0
 27289 ;;		On exit  : 0/0
 27290 ;;		Unchanged: 0/0
 27291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27293 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27294 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27295 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27296 ;;Total ram usage:       11 bytes
 27297 ;; Hardware stack levels used: 1
 27298 ;; Hardware stack levels required when called: 13
 27299 ;; This function calls:
 27300 ;;		___awdiv
 27301 ;;		___wmul
 27302 ;;		_getNV
 27303 ;; This function is called by:
 27304 ;;		_pollServos
 27305 ;; This function uses a non-reentrant model
 27306 ;;
 27307                           
 27308                           	psect	text99
 27309   002846                     __ptext99:
 27310                           	callstack 0
 27311   002846                     _bounceDown:
 27312                           	callstack 14
 27313                           
 27314                           ; BSR set to: 0
 27315                           ;incstack = 0
 27316                           ;bounceDown@io stored from wreg
 27317   002846  0101               	movlb	1	; () banked
 27318   002848  6FBB               	movwf	bounceDown@io& (0+255),b
 27319                           
 27320                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 27321   00284A  0101               	movlb	1	; () banked
 27322   00284C  51BB               	movf	bounceDown@io& (0+255),w,b
 27323   00284E  0FA9               	addlw	low _currentPos
 27324   002850  6ED9               	movwf	fsr2l,c
 27325   002852  6ADA               	clrf	fsr2h,c
 27326   002854  50DF               	movf	indf2,w,c
 27327   002856  0100               	movlb	0	; () banked
 27328   002858  6F9F               	movwf	??_bounceDown& (0+255),b
 27329   00285A  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27330   00285C  0E40               	movlw	low _targetPos
 27331   00285E  0101               	movlb	1	; () banked
 27332   002860  25BB               	addwf	bounceDown@io& (0+255),w,b
 27333   002862  6ED9               	movwf	fsr2l,c
 27334   002864  6ADA               	clrf	fsr2h,c
 27335   002866  0E01               	movlw	high _targetPos
 27336   002868  22DA               	addwfc	fsr2h,f,c
 27337   00286A  50DF               	movf	indf2,w,c
 27338   00286C  0100               	movlb	0	; () banked
 27339   00286E  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27340   002870  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 27341   002872  0E03               	movlw	3
 27342   002874  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 27343   002876  0E00               	movlw	0
 27344   002878  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 27345   00287A  519F               	movf	??_bounceDown& (0+255),w,b
 27346   00287C  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27347   00287E  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27348   002880  0A80               	xorlw	128
 27349   002882  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27350   002884  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27351   002886  0A80               	xorlw	128
 27352   002888  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 27353   00288A  A0D8               	btfss	status,0,c
 27354   00288C  D047               	goto	u21300
 27355                           
 27356                           ; BSR set to: 0
 27357   00288E  0E40               	movlw	low _targetPos
 27358   002890  0101               	movlb	1	; () banked
 27359   002892  25BB               	addwf	bounceDown@io& (0+255),w,b
 27360   002894  6ED9               	movwf	fsr2l,c
 27361   002896  6ADA               	clrf	fsr2h,c
 27362   002898  0E01               	movlw	high _targetPos
 27363   00289A  22DA               	addwfc	fsr2h,f,c
 27364   00289C  50DF               	movf	indf2,w,c
 27365   00289E  0100               	movlb	0	; () banked
 27366   0028A0  6F9F               	movwf	??_bounceDown& (0+255),b
 27367   0028A2  0EFD               	movlw	253
 27368   0028A4  259F               	addwf	??_bounceDown& (0+255),w,b
 27369   0028A6  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 27370   0028A8  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 27371   0028AA  0EFF               	movlw	255
 27372   0028AC  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 27373   0028AE  0101               	movlb	1	; () banked
 27374   0028B0  51BB               	movf	bounceDown@io& (0+255),w,b
 27375   0028B2  0FA9               	addlw	low _currentPos
 27376   0028B4  6ED9               	movwf	fsr2l,c
 27377   0028B6  6ADA               	clrf	fsr2h,c
 27378   0028B8  50DF               	movf	indf2,w,c
 27379   0028BA  0100               	movlb	0	; () banked
 27380   0028BC  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27381   0028BE  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 27382   0028C0  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27383   0028C2  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 27384   0028C4  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27385   0028C6  0A80               	xorlw	128
 27386   0028C8  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 27387   0028CA  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27388   0028CC  0A80               	xorlw	128
 27389   0028CE  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 27390   0028D0  A0D8               	btfss	status,0,c
 27391   0028D2  D024               	goto	u21300
 27392                           
 27393                           ; BSR set to: 0
 27394   0028D4  0101               	movlb	1	; () banked
 27395   0028D6  51BB               	movf	bounceDown@io& (0+255),w,b
 27396   0028D8  0D02               	mullw	2
 27397   0028DA  0E00               	movlw	low _speed
 27398   0028DC  24F3               	addwf	243,w,c
 27399   0028DE  6ED9               	movwf	fsr2l,c
 27400   0028E0  0E01               	movlw	high _speed
 27401   0028E2  20F4               	addwfc	prodh,w,c
 27402   0028E4  6EDA               	movwf	fsr2h,c
 27403   0028E6  0E01               	movlw	1
 27404   0028E8  BEDB               	btfsc	plusw2,7,c
 27405   0028EA  D007               	goto	u21290
 27406   0028EC  0E01               	movlw	1
 27407   0028EE  50DB               	movf	plusw2,w,c
 27408   0028F0  E115               	bnz	l20491
 27409   0028F2  0E04               	movlw	4
 27410   0028F4  5CDE               	subwf	postinc2,w,c
 27411   0028F6  B0D8               	btfsc	status,0,c
 27412   0028F8  D011               	goto	u21300
 27413   0028FA                     u21290:
 27414                           
 27415                           ; BSR set to: 1
 27416   0028FA  51BB               	movf	bounceDown@io& (0+255),w,b
 27417   0028FC  0D02               	mullw	2
 27418   0028FE  0E00               	movlw	low _speed
 27419   002900  24F3               	addwf	243,w,c
 27420   002902  6ED9               	movwf	fsr2l,c
 27421   002904  0E01               	movlw	high _speed
 27422   002906  20F4               	addwfc	prodh,w,c
 27423   002908  6EDA               	movwf	fsr2h,c
 27424   00290A  0E01               	movlw	1
 27425   00290C  AEDB               	btfss	plusw2,7,c
 27426   00290E  D1F3               	goto	l20519
 27427   002910  0EFD               	movlw	253
 27428   002912  5CDE               	subwf	postinc2,w,c
 27429   002914  0EFF               	movlw	255
 27430   002916  58DE               	subwfb	postinc2,w,c
 27431   002918  B0D8               	btfsc	status,0,c
 27432   00291A  D1ED               	goto	l20519
 27433   00291C                     u21300:
 27434   00291C                     l20491:
 27435                           
 27436                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 27437   00291C  0101               	movlb	1	; () banked
 27438   00291E  51BB               	movf	bounceDown@io& (0+255),w,b
 27439   002920  0D07               	mullw	7
 27440   002922  50F3               	movf	243,w,c
 27441   002924  0F12               	addlw	18
 27442   002926  EC21  F05D         	call	_getNV
 27443   00292A  C08D  F09F         	movff	?_getNV,??_bounceDown
 27444   00292E  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 27445   002932  0101               	movlb	1	; () banked
 27446   002934  51BB               	movf	bounceDown@io& (0+255),w,b
 27447   002936  0D07               	mullw	7
 27448   002938  50F3               	movf	243,w,c
 27449   00293A  0F13               	addlw	19
 27450   00293C  EC21  F05D         	call	_getNV
 27451   002940  0100               	movlb	0	; () banked
 27452   002942  518D               	movf	?_getNV& (0+255),w,b
 27453   002944  5D9F               	subwf	??_bounceDown& (0+255),w,b
 27454   002946  B0D8               	btfsc	status,0,c
 27455   002948  D002               	goto	u21310
 27456   00294A  0E01               	movlw	1
 27457   00294C  D001               	goto	u21320
 27458   00294E                     u21310:
 27459   00294E  0E00               	movlw	0
 27460   002950                     u21320:
 27461   002950  0101               	movlb	1	; () banked
 27462   002952  6FB8               	movwf	bounceDown@reversed& (0+255),b
 27463                           
 27464                           ; BSR set to: 1
 27465                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 27466   002954  51B8               	movf	bounceDown@reversed& (0+255),w,b
 27467   002956  A4D8               	btfss	status,2,c
 27468   002958  D0E8               	goto	l20505
 27469                           
 27470                           ; BSR set to: 1
 27471                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 27472   00295A  51BB               	movf	bounceDown@io& (0+255),w,b
 27473   00295C  0D02               	mullw	2
 27474   00295E  0E00               	movlw	low _speed
 27475   002960  24F3               	addwf	243,w,c
 27476   002962  6ED9               	movwf	fsr2l,c
 27477   002964  0E01               	movlw	high _speed
 27478   002966  20F4               	addwfc	prodh,w,c
 27479   002968  6EDA               	movwf	fsr2h,c
 27480   00296A  CFDE F097          	movff	postinc2,___awdiv@dividend
 27481   00296E  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27482   002972  0E00               	movlw	0
 27483   002974  0100               	movlb	0	; () banked
 27484   002976  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27485   002978  0E1E               	movlw	30
 27486   00297A  6F99               	movwf	___awdiv@divisor& (0+255),b
 27487   00297C  EC4A  F052         	call	___awdiv	;wreg free
 27488   002980  C097  F09F         	movff	?___awdiv,??_bounceDown
 27489   002984  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 27490   002988  0101               	movlb	1	; () banked
 27491   00298A  51BB               	movf	bounceDown@io& (0+255),w,b
 27492   00298C  0D07               	mullw	7
 27493   00298E  50F3               	movf	243,w,c
 27494   002990  0F13               	addlw	19
 27495   002992  EC21  F05D         	call	_getNV
 27496   002996  0100               	movlb	0	; () banked
 27497   002998  518D               	movf	?_getNV& (0+255),w,b
 27498   00299A  259F               	addwf	??_bounceDown& (0+255),w,b
 27499   00299C  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27500   00299E  0E00               	movlw	0
 27501   0029A0  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27502   0029A2  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27503   0029A4  0101               	movlb	1	; () banked
 27504   0029A6  51BB               	movf	bounceDown@io& (0+255),w,b
 27505   0029A8  0FA9               	addlw	low _currentPos
 27506   0029AA  6ED9               	movwf	fsr2l,c
 27507   0029AC  6ADA               	clrf	fsr2h,c
 27508   0029AE  50DF               	movf	indf2,w,c
 27509   0029B0  0100               	movlb	0	; () banked
 27510   0029B2  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27511   0029B4  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 27512   0029B6  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27513   0029B8  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 27514   0029BA  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27515   0029BC  0A80               	xorlw	128
 27516   0029BE  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27517   0029C0  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27518   0029C2  0A80               	xorlw	128
 27519   0029C4  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27520   0029C6  B0D8               	btfsc	status,0,c
 27521   0029C8  D084               	goto	l20501
 27522                           
 27523                           ; BSR set to: 0
 27524                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27525   0029CA  0101               	movlb	1	; () banked
 27526   0029CC  51BB               	movf	bounceDown@io& (0+255),w,b
 27527   0029CE  0D07               	mullw	7
 27528   0029D0  50F3               	movf	243,w,c
 27529   0029D2  0F14               	addlw	20
 27530   0029D4  EC21  F05D         	call	_getNV
 27531   0029D8  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27532   0029DC  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27533   0029E0  0101               	movlb	1	; () banked
 27534   0029E2  51BB               	movf	bounceDown@io& (0+255),w,b
 27535   0029E4  0D02               	mullw	2
 27536   0029E6  0E00               	movlw	low _speed
 27537   0029E8  24F3               	addwf	243,w,c
 27538   0029EA  6ED9               	movwf	fsr2l,c
 27539   0029EC  0E01               	movlw	high _speed
 27540   0029EE  20F4               	addwfc	prodh,w,c
 27541   0029F0  6EDA               	movwf	fsr2h,c
 27542   0029F2  CFDE F09F          	movff	postinc2,??_bounceDown
 27543   0029F6  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27544   0029FA  0100               	movlb	0	; () banked
 27545   0029FC  1F9F               	comf	??_bounceDown& (0+255),f,b
 27546   0029FE  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27547   002A00  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27548   002A02  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27549   002A04  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27550   002A08  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27551   002A0C  EC0E  F060         	call	___wmul	;wreg free
 27552   002A10  C091  F097         	movff	?___wmul,___awdiv@dividend
 27553   002A14  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27554   002A18  0E00               	movlw	0
 27555   002A1A  0100               	movlb	0	; () banked
 27556   002A1C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27557   002A1E  0E64               	movlw	100
 27558   002A20  6F99               	movwf	___awdiv@divisor& (0+255),b
 27559   002A22  EC4A  F052         	call	___awdiv	;wreg free
 27560   002A26  0101               	movlb	1	; () banked
 27561   002A28  51BB               	movf	bounceDown@io& (0+255),w,b
 27562   002A2A  0D02               	mullw	2
 27563   002A2C  0E00               	movlw	low _speed
 27564   002A2E  24F3               	addwf	243,w,c
 27565   002A30  6ED9               	movwf	fsr2l,c
 27566   002A32  0E01               	movlw	high _speed
 27567   002A34  20F4               	addwfc	prodh,w,c
 27568   002A36  6EDA               	movwf	fsr2h,c
 27569   002A38  0100               	movlb	0	; () banked
 27570   002A3A  C097  FFDE         	movff	?___awdiv,postinc2
 27571   002A3E  C098  FFDD         	movff	?___awdiv+1,postdec2
 27572                           
 27573                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 27574   002A42  0101               	movlb	1	; () banked
 27575   002A44  51BB               	movf	bounceDown@io& (0+255),w,b
 27576   002A46  0D07               	mullw	7
 27577   002A48  50F3               	movf	243,w,c
 27578   002A4A  0F13               	addlw	19
 27579   002A4C  EC21  F05D         	call	_getNV
 27580   002A50  0100               	movlb	0	; () banked
 27581   002A52  518D               	movf	?_getNV& (0+255),w,b
 27582   002A54  6F9F               	movwf	??_bounceDown& (0+255),b
 27583   002A56  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27584   002A58  0101               	movlb	1	; () banked
 27585   002A5A  51BB               	movf	bounceDown@io& (0+255),w,b
 27586   002A5C  0D07               	mullw	7
 27587   002A5E  50F3               	movf	243,w,c
 27588   002A60  0F13               	addlw	19
 27589   002A62  EC21  F05D         	call	_getNV
 27590   002A66  0100               	movlb	0	; () banked
 27591   002A68  518D               	movf	?_getNV& (0+255),w,b
 27592   002A6A  279F               	addwf	??_bounceDown& (0+255),f,b
 27593   002A6C  0E00               	movlw	0
 27594   002A6E  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27595   002A70  0101               	movlb	1	; () banked
 27596   002A72  51BB               	movf	bounceDown@io& (0+255),w,b
 27597   002A74  0FA9               	addlw	low _currentPos
 27598   002A76  6ED9               	movwf	fsr2l,c
 27599   002A78  6ADA               	clrf	fsr2h,c
 27600   002A7A  50DF               	movf	indf2,w,c
 27601   002A7C  0100               	movlb	0	; () banked
 27602   002A7E  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27603   002A80  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27604   002A82  5F9F               	subwf	??_bounceDown& (0+255),f,b
 27605   002A84  0E00               	movlw	0
 27606   002A86  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 27607   002A88  0101               	movlb	1	; () banked
 27608   002A8A  51BB               	movf	bounceDown@io& (0+255),w,b
 27609   002A8C  0D02               	mullw	2
 27610   002A8E  0E00               	movlw	low _speed
 27611   002A90  24F3               	addwf	243,w,c
 27612   002A92  6ED9               	movwf	fsr2l,c
 27613   002A94  0E01               	movlw	high _speed
 27614   002A96  20F4               	addwfc	prodh,w,c
 27615   002A98  6EDA               	movwf	fsr2h,c
 27616   002A9A  CFDE F097          	movff	postinc2,___awdiv@dividend
 27617   002A9E  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27618   002AA2  0E00               	movlw	0
 27619   002AA4  0100               	movlb	0	; () banked
 27620   002AA6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27621   002AA8  0E1E               	movlw	30
 27622   002AAA  6F99               	movwf	___awdiv@divisor& (0+255),b
 27623   002AAC  EC4A  F052         	call	___awdiv	;wreg free
 27624   002AB0  0100               	movlb	0	; () banked
 27625   002AB2  5197               	movf	?___awdiv& (0+255),w,b
 27626   002AB4  5D9F               	subwf	??_bounceDown& (0+255),w,b
 27627   002AB6  0101               	movlb	1	; () banked
 27628   002AB8  6FB9               	movwf	bounceDown@tmp& (0+255),b
 27629   002ABA  0100               	movlb	0	; () banked
 27630   002ABC  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27631   002ABE  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 27632   002AC0  0101               	movlb	1	; () banked
 27633   002AC2  6FBA               	movwf	(bounceDown@tmp+1)& (0+255),b
 27634                           
 27635                           ; BSR set to: 1
 27636                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 27637   002AC4  51BB               	movf	bounceDown@io& (0+255),w,b
 27638   002AC6  0FA9               	addlw	low _currentPos
 27639   002AC8  6ED9               	movwf	fsr2l,c
 27640   002ACA  6ADA               	clrf	fsr2h,c
 27641   002ACC  C1B9  FFDF         	movff	bounceDown@tmp,indf2
 27642                           
 27643                           ;../bounce.c: 121:             } else {
 27644   002AD0  D110               	goto	l20515
 27645   002AD2                     l20501:
 27646                           
 27647                           ; BSR set to: 0
 27648                           ;../bounce.c: 124:                 speed[io] += 3;
 27649   002AD2  0101               	movlb	1	; () banked
 27650   002AD4  51BB               	movf	bounceDown@io& (0+255),w,b
 27651   002AD6  0D02               	mullw	2
 27652   002AD8  0E00               	movlw	low _speed
 27653   002ADA  24F3               	addwf	243,w,c
 27654   002ADC  6ED9               	movwf	fsr2l,c
 27655   002ADE  0E01               	movlw	high _speed
 27656   002AE0  20F4               	addwfc	prodh,w,c
 27657   002AE2  6EDA               	movwf	fsr2h,c
 27658   002AE4  0E03               	movlw	3
 27659   002AE6  26DE               	addwf	postinc2,f,c
 27660   002AE8  0E00               	movlw	0
 27661   002AEA  22DD               	addwfc	postdec2,f,c
 27662                           
 27663                           ; BSR set to: 1
 27664                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 27665   002AEC  51BB               	movf	bounceDown@io& (0+255),w,b
 27666   002AEE  0D02               	mullw	2
 27667   002AF0  0E00               	movlw	low _speed
 27668   002AF2  24F3               	addwf	243,w,c
 27669   002AF4  6ED9               	movwf	fsr2l,c
 27670   002AF6  0E01               	movlw	high _speed
 27671   002AF8  20F4               	addwfc	prodh,w,c
 27672   002AFA  6EDA               	movwf	fsr2h,c
 27673   002AFC  CFDE F097          	movff	postinc2,___awdiv@dividend
 27674   002B00  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27675   002B04  0E00               	movlw	0
 27676   002B06  0100               	movlb	0	; () banked
 27677   002B08  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27678   002B0A  0E1E               	movlw	30
 27679   002B0C  6F99               	movwf	___awdiv@divisor& (0+255),b
 27680   002B0E  EC4A  F052         	call	___awdiv	;wreg free
 27681   002B12  0E01               	movlw	1
 27682   002B14  0100               	movlb	0	; () banked
 27683   002B16  2797               	addwf	?___awdiv& (0+255),f,b
 27684   002B18  0101               	movlb	1	; () banked
 27685   002B1A  51BB               	movf	bounceDown@io& (0+255),w,b
 27686   002B1C  0FA9               	addlw	low _currentPos
 27687   002B1E  6ED9               	movwf	fsr2l,c
 27688   002B20  6ADA               	clrf	fsr2h,c
 27689   002B22  0100               	movlb	0	; () banked
 27690   002B24  5197               	movf	?___awdiv& (0+255),w,b
 27691   002B26  5EDF               	subwf	indf2,f,c
 27692   002B28  D0E4               	goto	l20515
 27693   002B2A                     l20505:
 27694                           
 27695                           ; BSR set to: 1
 27696                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 27697   002B2A  51BB               	movf	bounceDown@io& (0+255),w,b
 27698   002B2C  0FA9               	addlw	low _currentPos
 27699   002B2E  6ED9               	movwf	fsr2l,c
 27700   002B30  6ADA               	clrf	fsr2h,c
 27701   002B32  50DF               	movf	indf2,w,c
 27702   002B34  0100               	movlb	0	; () banked
 27703   002B36  6F9F               	movwf	??_bounceDown& (0+255),b
 27704   002B38  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27705   002B3A  0101               	movlb	1	; () banked
 27706   002B3C  51BB               	movf	bounceDown@io& (0+255),w,b
 27707   002B3E  0D07               	mullw	7
 27708   002B40  50F3               	movf	243,w,c
 27709   002B42  0F13               	addlw	19
 27710   002B44  EC21  F05D         	call	_getNV
 27711   002B48  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 27712   002B4C  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 27713   002B50  0101               	movlb	1	; () banked
 27714   002B52  51BB               	movf	bounceDown@io& (0+255),w,b
 27715   002B54  0D02               	mullw	2
 27716   002B56  0E00               	movlw	low _speed
 27717   002B58  24F3               	addwf	243,w,c
 27718   002B5A  6ED9               	movwf	fsr2l,c
 27719   002B5C  0E01               	movlw	high _speed
 27720   002B5E  20F4               	addwfc	prodh,w,c
 27721   002B60  6EDA               	movwf	fsr2h,c
 27722   002B62  CFDE F097          	movff	postinc2,___awdiv@dividend
 27723   002B66  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27724   002B6A  0E00               	movlw	0
 27725   002B6C  0100               	movlb	0	; () banked
 27726   002B6E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27727   002B70  0E1E               	movlw	30
 27728   002B72  6F99               	movwf	___awdiv@divisor& (0+255),b
 27729   002B74  EC4A  F052         	call	___awdiv	;wreg free
 27730   002B78  0100               	movlb	0	; () banked
 27731   002B7A  5197               	movf	?___awdiv& (0+255),w,b
 27732   002B7C  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27733   002B7E  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27734   002B80  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27735   002B82  A0D8               	btfss	status,0,c
 27736   002B84  2998               	incf	(?___awdiv+1)& (0+255),w,b
 27737   002B86  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 27738   002B88  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 27739   002B8A  519F               	movf	??_bounceDown& (0+255),w,b
 27740   002B8C  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 27741   002B8E  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27742   002B90  0A80               	xorlw	128
 27743   002B92  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27744   002B94  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27745   002B96  0A80               	xorlw	128
 27746   002B98  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27747   002B9A  B0D8               	btfsc	status,0,c
 27748   002B9C  D07F               	goto	l20511
 27749                           
 27750                           ; BSR set to: 0
 27751                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27752   002B9E  0101               	movlb	1	; () banked
 27753   002BA0  51BB               	movf	bounceDown@io& (0+255),w,b
 27754   002BA2  0D07               	mullw	7
 27755   002BA4  50F3               	movf	243,w,c
 27756   002BA6  0F14               	addlw	20
 27757   002BA8  EC21  F05D         	call	_getNV
 27758   002BAC  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27759   002BB0  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27760   002BB4  0101               	movlb	1	; () banked
 27761   002BB6  51BB               	movf	bounceDown@io& (0+255),w,b
 27762   002BB8  0D02               	mullw	2
 27763   002BBA  0E00               	movlw	low _speed
 27764   002BBC  24F3               	addwf	243,w,c
 27765   002BBE  6ED9               	movwf	fsr2l,c
 27766   002BC0  0E01               	movlw	high _speed
 27767   002BC2  20F4               	addwfc	prodh,w,c
 27768   002BC4  6EDA               	movwf	fsr2h,c
 27769   002BC6  CFDE F09F          	movff	postinc2,??_bounceDown
 27770   002BCA  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27771   002BCE  0100               	movlb	0	; () banked
 27772   002BD0  1F9F               	comf	??_bounceDown& (0+255),f,b
 27773   002BD2  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27774   002BD4  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27775   002BD6  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27776   002BD8  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27777   002BDC  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27778   002BE0  EC0E  F060         	call	___wmul	;wreg free
 27779   002BE4  C091  F097         	movff	?___wmul,___awdiv@dividend
 27780   002BE8  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27781   002BEC  0E00               	movlw	0
 27782   002BEE  0100               	movlb	0	; () banked
 27783   002BF0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27784   002BF2  0E64               	movlw	100
 27785   002BF4  6F99               	movwf	___awdiv@divisor& (0+255),b
 27786   002BF6  EC4A  F052         	call	___awdiv	;wreg free
 27787   002BFA  0101               	movlb	1	; () banked
 27788   002BFC  51BB               	movf	bounceDown@io& (0+255),w,b
 27789   002BFE  0D02               	mullw	2
 27790   002C00  0E00               	movlw	low _speed
 27791   002C02  24F3               	addwf	243,w,c
 27792   002C04  6ED9               	movwf	fsr2l,c
 27793   002C06  0E01               	movlw	high _speed
 27794   002C08  20F4               	addwfc	prodh,w,c
 27795   002C0A  6EDA               	movwf	fsr2h,c
 27796   002C0C  0100               	movlb	0	; () banked
 27797   002C0E  C097  FFDE         	movff	?___awdiv,postinc2
 27798   002C12  C098  FFDD         	movff	?___awdiv+1,postdec2
 27799                           
 27800                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 27801   002C16  0101               	movlb	1	; () banked
 27802   002C18  51BB               	movf	bounceDown@io& (0+255),w,b
 27803   002C1A  0D07               	mullw	7
 27804   002C1C  50F3               	movf	243,w,c
 27805   002C1E  0F13               	addlw	19
 27806   002C20  EC21  F05D         	call	_getNV
 27807   002C24  0100               	movlb	0	; () banked
 27808   002C26  518D               	movf	?_getNV& (0+255),w,b
 27809   002C28  6F9F               	movwf	??_bounceDown& (0+255),b
 27810   002C2A  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27811   002C2C  0101               	movlb	1	; () banked
 27812   002C2E  51BB               	movf	bounceDown@io& (0+255),w,b
 27813   002C30  0D07               	mullw	7
 27814   002C32  50F3               	movf	243,w,c
 27815   002C34  0F13               	addlw	19
 27816   002C36  EC21  F05D         	call	_getNV
 27817   002C3A  0100               	movlb	0	; () banked
 27818   002C3C  518D               	movf	?_getNV& (0+255),w,b
 27819   002C3E  279F               	addwf	??_bounceDown& (0+255),f,b
 27820   002C40  0E00               	movlw	0
 27821   002C42  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27822   002C44  0101               	movlb	1	; () banked
 27823   002C46  51BB               	movf	bounceDown@io& (0+255),w,b
 27824   002C48  0D02               	mullw	2
 27825   002C4A  0E00               	movlw	low _speed
 27826   002C4C  24F3               	addwf	243,w,c
 27827   002C4E  6ED9               	movwf	fsr2l,c
 27828   002C50  0E01               	movlw	high _speed
 27829   002C52  20F4               	addwfc	prodh,w,c
 27830   002C54  6EDA               	movwf	fsr2h,c
 27831   002C56  CFDE F097          	movff	postinc2,___awdiv@dividend
 27832   002C5A  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27833   002C5E  0E00               	movlw	0
 27834   002C60  0100               	movlb	0	; () banked
 27835   002C62  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27836   002C64  0E1E               	movlw	30
 27837   002C66  6F99               	movwf	___awdiv@divisor& (0+255),b
 27838   002C68  EC4A  F052         	call	___awdiv	;wreg free
 27839   002C6C  0100               	movlb	0	; () banked
 27840   002C6E  5197               	movf	?___awdiv& (0+255),w,b
 27841   002C70  259F               	addwf	??_bounceDown& (0+255),w,b
 27842   002C72  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27843   002C74  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27844   002C76  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27845   002C78  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27846   002C7A  0101               	movlb	1	; () banked
 27847   002C7C  51BB               	movf	bounceDown@io& (0+255),w,b
 27848   002C7E  0FA9               	addlw	low _currentPos
 27849   002C80  6ED9               	movwf	fsr2l,c
 27850   002C82  6ADA               	clrf	fsr2h,c
 27851   002C84  50DF               	movf	indf2,w,c
 27852   002C86  0100               	movlb	0	; () banked
 27853   002C88  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27854   002C8A  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27855   002C8C  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27856   002C8E  0101               	movlb	1	; () banked
 27857   002C90  6FB9               	movwf	bounceDown@tmp& (0+255),b
 27858   002C92  0100               	movlb	0	; () banked
 27859   002C94  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27860   002C96  A0D8               	btfss	status,0,c
 27861   002C98  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 27862   002C9A  D712               	goto	L7
 27863   002C9C                     l20511:
 27864                           
 27865                           ; BSR set to: 0
 27866                           ;../bounce.c: 142:                 speed[io] += 3;
 27867   002C9C  0101               	movlb	1	; () banked
 27868   002C9E  51BB               	movf	bounceDown@io& (0+255),w,b
 27869   002CA0  0D02               	mullw	2
 27870   002CA2  0E00               	movlw	low _speed
 27871   002CA4  24F3               	addwf	243,w,c
 27872   002CA6  6ED9               	movwf	fsr2l,c
 27873   002CA8  0E01               	movlw	high _speed
 27874   002CAA  20F4               	addwfc	prodh,w,c
 27875   002CAC  6EDA               	movwf	fsr2h,c
 27876   002CAE  0E03               	movlw	3
 27877   002CB0  26DE               	addwf	postinc2,f,c
 27878   002CB2  0E00               	movlw	0
 27879   002CB4  22DD               	addwfc	postdec2,f,c
 27880                           
 27881                           ; BSR set to: 1
 27882                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 27883   002CB6  51BB               	movf	bounceDown@io& (0+255),w,b
 27884   002CB8  0D02               	mullw	2
 27885   002CBA  0E00               	movlw	low _speed
 27886   002CBC  24F3               	addwf	243,w,c
 27887   002CBE  6ED9               	movwf	fsr2l,c
 27888   002CC0  0E01               	movlw	high _speed
 27889   002CC2  20F4               	addwfc	prodh,w,c
 27890   002CC4  6EDA               	movwf	fsr2h,c
 27891   002CC6  CFDE F097          	movff	postinc2,___awdiv@dividend
 27892   002CCA  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27893   002CCE  0E00               	movlw	0
 27894   002CD0  0100               	movlb	0	; () banked
 27895   002CD2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27896   002CD4  0E1E               	movlw	30
 27897   002CD6  6F99               	movwf	___awdiv@divisor& (0+255),b
 27898   002CD8  EC4A  F052         	call	___awdiv	;wreg free
 27899   002CDC  0E01               	movlw	1
 27900   002CDE  0100               	movlb	0	; () banked
 27901   002CE0  2797               	addwf	?___awdiv& (0+255),f,b
 27902   002CE2  0101               	movlb	1	; () banked
 27903   002CE4  51BB               	movf	bounceDown@io& (0+255),w,b
 27904   002CE6  0FA9               	addlw	low _currentPos
 27905   002CE8  6ED9               	movwf	fsr2l,c
 27906   002CEA  6ADA               	clrf	fsr2h,c
 27907   002CEC  0100               	movlb	0	; () banked
 27908   002CEE  5197               	movf	?___awdiv& (0+255),w,b
 27909   002CF0  26DF               	addwf	indf2,f,c
 27910   002CF2                     l20515:
 27911                           
 27912                           ;../bounce.c: 147:         return FALSE;
 27913   002CF2  0E00               	movlw	0
 27914   002CF4  0012               	return	
 27915   002CF6                     l20519:
 27916                           
 27917                           ; BSR set to: 1
 27918                           ;../bounce.c: 149:     return TRUE;
 27919   002CF6  0E01               	movlw	1
 27920   002CF8  0012               	return		;funcret
 27921   002CFA                     __end_of_bounceDown:
 27922                           	callstack 0
 27923                           
 27924 ;; *************** function _processOutputs *****************
 27925 ;; Defined at:
 27926 ;;		line 178 in file "../digitalOut.c"
 27927 ;; Parameters:    Size  Location     Type
 27928 ;;		None
 27929 ;; Auto vars:     Size  Location     Type
 27930 ;;  io              1   18[BANK1 ] unsigned char 
 27931 ;; Return value:  Size  Location     Type
 27932 ;;                  1    wreg      void 
 27933 ;; Registers used:
 27934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27935 ;; Tracked objects:
 27936 ;;		On entry : 0/0
 27937 ;;		On exit  : 0/0
 27938 ;;		Unchanged: 0/0
 27939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27941 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27942 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27943 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27944 ;;Total ram usage:        2 bytes
 27945 ;; Hardware stack levels used: 1
 27946 ;; Hardware stack levels required when called: 17
 27947 ;; This function calls:
 27948 ;;		_getNV
 27949 ;;		_sendProducedEvent
 27950 ;;		_setOutputPin
 27951 ;; This function is called by:
 27952 ;;		_loop
 27953 ;; This function uses a non-reentrant model
 27954 ;;
 27955                           
 27956                           	psect	text100
 27957   006772                     __ptext100:
 27958                           	callstack 0
 27959   006772                     _processOutputs:
 27960                           	callstack 12
 27961                           
 27962                           ;../digitalOut.c: 179:     uint8_t io;;../digitalOut.c: 180:     for (io=0; io<16; io++)
      +                           {
 27963                           
 27964                           ;incstack = 0
 27965   006772  0E00               	movlw	0
 27966   006774  0101               	movlb	1	; () banked
 27967   006776  6FCA               	movwf	processOutputs@io& (0+255),b
 27968   006778                     l22653:
 27969                           
 27970                           ; BSR set to: 1
 27971                           ;../digitalOut.c: 181:         if (getNV((16 + 7*(io) + 0)) == 1) {
 27972   006778  51CA               	movf	processOutputs@io& (0+255),w,b
 27973   00677A  0D07               	mullw	7
 27974   00677C  50F3               	movf	243,w,c
 27975   00677E  0F10               	addlw	16
 27976   006780  EC21  F05D         	call	_getNV
 27977   006784  0100               	movlb	0	; () banked
 27978   006786  058D               	decf	?_getNV& (0+255),w,b
 27979   006788  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 27980   00678A  A4D8               	btfss	status,2,c
 27981   00678C  D0D5               	goto	l281
 27982                           
 27983                           ; BSR set to: 0
 27984                           ;../digitalOut.c: 183:             if (flashDelays[io] == 1) {
 27985   00678E  0EC4               	movlw	low _flashDelays
 27986   006790  0101               	movlb	1	; () banked
 27987   006792  25CA               	addwf	processOutputs@io& (0+255),w,b
 27988   006794  6ED9               	movwf	fsr2l,c
 27989   006796  6ADA               	clrf	fsr2h,c
 27990   006798  0E02               	movlw	high _flashDelays
 27991   00679A  22DA               	addwfc	fsr2h,f,c
 27992   00679C  04DE               	decf	postinc2,w,c
 27993   00679E  A4D8               	btfss	status,2,c
 27994   0067A0  D02F               	goto	l22663
 27995                           
 27996                           ; BSR set to: 1
 27997                           ;../digitalOut.c: 184:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 27998   0067A2  51CA               	movf	processOutputs@io& (0+255),w,b
 27999   0067A4  0D07               	mullw	7
 28000   0067A6  50F3               	movf	243,w,c
 28001   0067A8  0F11               	addlw	17
 28002   0067AA  EC21  F05D         	call	_getNV
 28003   0067AE  0100               	movlb	0	; () banked
 28004   0067B0  518D               	movf	?_getNV& (0+255),w,b
 28005   0067B2  0B20               	andlw	32
 28006   0067B4  6F91               	movwf	setOutputPin@state& (0+255),b
 28007   0067B6  0101               	movlb	1	; () banked
 28008   0067B8  51CA               	movf	processOutputs@io& (0+255),w,b
 28009   0067BA  EC66  F036         	call	_setOutputPin
 28010                           
 28011                           ;../digitalOut.c: 185:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 28012   0067BE  0101               	movlb	1	; () banked
 28013   0067C0  51CA               	movf	processOutputs@io& (0+255),w,b
 28014   0067C2  0D07               	mullw	7
 28015   0067C4  50F3               	movf	243,w,c
 28016   0067C6  0F13               	addlw	19
 28017   0067C8  EC21  F05D         	call	_getNV
 28018   0067CC  0EC4               	movlw	low _flashDelays
 28019   0067CE  0101               	movlb	1	; () banked
 28020   0067D0  25CA               	addwf	processOutputs@io& (0+255),w,b
 28021   0067D2  6ED9               	movwf	fsr2l,c
 28022   0067D4  6ADA               	clrf	fsr2h,c
 28023   0067D6  0E02               	movlw	high _flashDelays
 28024   0067D8  22DA               	addwfc	fsr2h,f,c
 28025   0067DA  0100               	movlb	0	; () banked
 28026   0067DC  C08D  FFDF         	movff	?_getNV,indf2
 28027                           
 28028                           ; BSR set to: 0
 28029                           ;../digitalOut.c: 186:                 flashDelays[io] = - flashDelays[io];
 28030   0067E0  0EC4               	movlw	low _flashDelays
 28031   0067E2  0101               	movlb	1	; () banked
 28032   0067E4  25CA               	addwf	processOutputs@io& (0+255),w,b
 28033   0067E6  6ED9               	movwf	fsr2l,c
 28034   0067E8  6ADA               	clrf	fsr2h,c
 28035   0067EA  0E02               	movlw	high _flashDelays
 28036   0067EC  22DA               	addwfc	fsr2h,f,c
 28037   0067EE  0EC4               	movlw	low _flashDelays
 28038   0067F0  25CA               	addwf	processOutputs@io& (0+255),w,b
 28039   0067F2  6EE1               	movwf	fsr1l,c
 28040   0067F4  6AE2               	clrf	fsr1h,c
 28041   0067F6  0E02               	movlw	high _flashDelays
 28042   0067F8  22E2               	addwfc	fsr1h,f,c
 28043   0067FA  50E7               	movf	indf1,w,c
 28044   0067FC  0800               	sublw	0
 28045   0067FE  6EDF               	movwf	indf2,c
 28046   006800                     l22663:
 28047                           
 28048                           ; BSR set to: 1
 28049                           ;../digitalOut.c: 188:             if (flashDelays[io] == -1) {
 28050   006800  0EC4               	movlw	low _flashDelays
 28051   006802  25CA               	addwf	processOutputs@io& (0+255),w,b
 28052   006804  6ED9               	movwf	fsr2l,c
 28053   006806  6ADA               	clrf	fsr2h,c
 28054   006808  0E02               	movlw	high _flashDelays
 28055   00680A  22DA               	addwfc	fsr2h,f,c
 28056   00680C  28DE               	incf	postinc2,w,c
 28057   00680E  A4D8               	btfss	status,2,c
 28058   006810  D022               	goto	l22669
 28059                           
 28060                           ; BSR set to: 1
 28061                           ;../digitalOut.c: 189:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 28062   006812  51CA               	movf	processOutputs@io& (0+255),w,b
 28063   006814  0D07               	mullw	7
 28064   006816  50F3               	movf	243,w,c
 28065   006818  0F11               	addlw	17
 28066   00681A  EC21  F05D         	call	_getNV
 28067   00681E  0100               	movlb	0	; () banked
 28068   006820  BB8D               	btfsc	?_getNV& (0+255),5,b
 28069   006822  D002               	goto	u24230
 28070   006824  0E01               	movlw	1
 28071   006826  D001               	goto	u24240
 28072   006828                     u24230:
 28073   006828  0E00               	movlw	0
 28074   00682A                     u24240:
 28075   00682A  6F91               	movwf	setOutputPin@state& (0+255),b
 28076   00682C  0101               	movlb	1	; () banked
 28077   00682E  51CA               	movf	processOutputs@io& (0+255),w,b
 28078   006830  EC66  F036         	call	_setOutputPin
 28079                           
 28080                           ;../digitalOut.c: 190:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 28081   006834  0101               	movlb	1	; () banked
 28082   006836  51CA               	movf	processOutputs@io& (0+255),w,b
 28083   006838  0D07               	mullw	7
 28084   00683A  50F3               	movf	243,w,c
 28085   00683C  0F13               	addlw	19
 28086   00683E  EC21  F05D         	call	_getNV
 28087   006842  0EC4               	movlw	low _flashDelays
 28088   006844  0101               	movlb	1	; () banked
 28089   006846  25CA               	addwf	processOutputs@io& (0+255),w,b
 28090   006848  6ED9               	movwf	fsr2l,c
 28091   00684A  6ADA               	clrf	fsr2h,c
 28092   00684C  0E02               	movlw	high _flashDelays
 28093   00684E  22DA               	addwfc	fsr2h,f,c
 28094   006850  0100               	movlb	0	; () banked
 28095   006852  C08D  FFDF         	movff	?_getNV,indf2
 28096   006856                     l22669:
 28097                           
 28098                           ;../digitalOut.c: 192:             if (flashDelays[io] > 1) {
 28099   006856  0EC4               	movlw	low _flashDelays
 28100   006858  0101               	movlb	1	; () banked
 28101   00685A  25CA               	addwf	processOutputs@io& (0+255),w,b
 28102   00685C  6ED9               	movwf	fsr2l,c
 28103   00685E  6ADA               	clrf	fsr2h,c
 28104   006860  0E02               	movlw	high _flashDelays
 28105   006862  22DA               	addwfc	fsr2h,f,c
 28106   006864  50DF               	movf	indf2,w,c
 28107   006866  0A80               	xorlw	128
 28108   006868  0F7E               	addlw	-130
 28109   00686A  A0D8               	btfss	status,0,c
 28110   00686C  D008               	goto	l22673
 28111                           
 28112                           ; BSR set to: 1
 28113                           ;../digitalOut.c: 193:                 flashDelays[io]--;
 28114   00686E  0EC4               	movlw	low _flashDelays
 28115   006870  25CA               	addwf	processOutputs@io& (0+255),w,b
 28116   006872  6ED9               	movwf	fsr2l,c
 28117   006874  6ADA               	clrf	fsr2h,c
 28118   006876  0E02               	movlw	high _flashDelays
 28119   006878  22DA               	addwfc	fsr2h,f,c
 28120   00687A  06DF               	decf	indf2,f,c
 28121                           
 28122                           ;../digitalOut.c: 194:             } else if (flashDelays[io] < -1) {
 28123   00687C  D012               	goto	l279
 28124   00687E                     l22673:
 28125                           
 28126                           ; BSR set to: 1
 28127   00687E  0EC4               	movlw	low _flashDelays
 28128   006880  25CA               	addwf	processOutputs@io& (0+255),w,b
 28129   006882  6ED9               	movwf	fsr2l,c
 28130   006884  6ADA               	clrf	fsr2h,c
 28131   006886  0E02               	movlw	high _flashDelays
 28132   006888  22DA               	addwfc	fsr2h,f,c
 28133   00688A  50DF               	movf	indf2,w,c
 28134   00688C  0A80               	xorlw	128
 28135   00688E  0F81               	addlw	129
 28136   006890  B0D8               	btfsc	status,0,c
 28137   006892  D007               	goto	l279
 28138                           
 28139                           ; BSR set to: 1
 28140                           ;../digitalOut.c: 195:                 flashDelays[io]++;
 28141   006894  0EC4               	movlw	low _flashDelays
 28142   006896  25CA               	addwf	processOutputs@io& (0+255),w,b
 28143   006898  6ED9               	movwf	fsr2l,c
 28144   00689A  6ADA               	clrf	fsr2h,c
 28145   00689C  0E02               	movlw	high _flashDelays
 28146   00689E  22DA               	addwfc	fsr2h,f,c
 28147   0068A0  2ADF               	incf	indf2,f,c
 28148   0068A2                     l279:
 28149                           
 28150                           ; BSR set to: 1
 28151                           ;../digitalOut.c: 198:             if (pulseDelays[io] != 0) {
 28152   0068A2  0ED4               	movlw	low _pulseDelays
 28153   0068A4  25CA               	addwf	processOutputs@io& (0+255),w,b
 28154   0068A6  6ED9               	movwf	fsr2l,c
 28155   0068A8  6ADA               	clrf	fsr2h,c
 28156   0068AA  0E02               	movlw	high _pulseDelays
 28157   0068AC  22DA               	addwfc	fsr2h,f,c
 28158   0068AE  50DF               	movf	indf2,w,c
 28159   0068B0  B4D8               	btfsc	status,2,c
 28160   0068B2  D042               	goto	l281
 28161                           
 28162                           ; BSR set to: 1
 28163                           ;../digitalOut.c: 199:                 pulseDelays[io]--;
 28164   0068B4  0ED4               	movlw	low _pulseDelays
 28165   0068B6  25CA               	addwf	processOutputs@io& (0+255),w,b
 28166   0068B8  6ED9               	movwf	fsr2l,c
 28167   0068BA  6ADA               	clrf	fsr2h,c
 28168   0068BC  0E02               	movlw	high _pulseDelays
 28169   0068BE  22DA               	addwfc	fsr2h,f,c
 28170   0068C0  06DF               	decf	indf2,f,c
 28171                           
 28172                           ;../digitalOut.c: 202:                 if (pulseDelays[io] == 1) {
 28173   0068C2  0ED4               	movlw	low _pulseDelays
 28174   0068C4  25CA               	addwf	processOutputs@io& (0+255),w,b
 28175   0068C6  6ED9               	movwf	fsr2l,c
 28176   0068C8  6ADA               	clrf	fsr2h,c
 28177   0068CA  0E02               	movlw	high _pulseDelays
 28178   0068CC  22DA               	addwfc	fsr2h,f,c
 28179   0068CE  04DE               	decf	postinc2,w,c
 28180   0068D0  A4D8               	btfss	status,2,c
 28181   0068D2  D032               	goto	l281
 28182                           
 28183                           ; BSR set to: 1
 28184                           ;../digitalOut.c: 204:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 28185   0068D4  51CA               	movf	processOutputs@io& (0+255),w,b
 28186   0068D6  0D07               	mullw	7
 28187   0068D8  50F3               	movf	243,w,c
 28188   0068DA  0F11               	addlw	17
 28189   0068DC  EC21  F05D         	call	_getNV
 28190   0068E0  0100               	movlb	0	; () banked
 28191   0068E2  AB8D               	btfss	?_getNV& (0+255),5,b
 28192   0068E4  D007               	goto	l22683
 28193                           
 28194                           ; BSR set to: 0
 28195                           ;../digitalOut.c: 205:                         setOutputPin(io, TRUE);
 28196   0068E6  0E01               	movlw	1
 28197   0068E8  6F91               	movwf	setOutputPin@state& (0+255),b
 28198   0068EA  0101               	movlb	1	; () banked
 28199   0068EC  51CA               	movf	processOutputs@io& (0+255),w,b
 28200   0068EE  EC66  F036         	call	_setOutputPin
 28201                           
 28202                           ;../digitalOut.c: 206:                     } else {
 28203   0068F2  D006               	goto	l22685
 28204   0068F4                     l22683:
 28205                           
 28206                           ; BSR set to: 0
 28207                           ;../digitalOut.c: 207:                         setOutputPin(io, FALSE);
 28208   0068F4  0E00               	movlw	0
 28209   0068F6  6F91               	movwf	setOutputPin@state& (0+255),b
 28210   0068F8  0101               	movlb	1	; () banked
 28211   0068FA  51CA               	movf	processOutputs@io& (0+255),w,b
 28212   0068FC  EC66  F036         	call	_setOutputPin
 28213   006900                     l22685:
 28214                           
 28215                           ;../digitalOut.c: 210:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 28216   006900  0101               	movlb	1	; () banked
 28217   006902  51CA               	movf	processOutputs@io& (0+255),w,b
 28218   006904  0D07               	mullw	7
 28219   006906  50F3               	movf	243,w,c
 28220   006908  0F11               	addlw	17
 28221   00690A  EC21  F05D         	call	_getNV
 28222   00690E  0100               	movlb	0	; () banked
 28223   006910  B78D               	btfsc	?_getNV& (0+255),3,b
 28224   006912  D012               	goto	l281
 28225                           
 28226                           ; BSR set to: 0
 28227                           ;../digitalOut.c: 212:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 28228   006914  0101               	movlb	1	; () banked
 28229   006916  51CA               	movf	processOutputs@io& (0+255),w,b
 28230   006918  0D07               	mullw	7
 28231   00691A  50F3               	movf	243,w,c
 28232   00691C  0F11               	addlw	17
 28233   00691E  EC21  F05D         	call	_getNV
 28234   006922  0100               	movlb	0	; () banked
 28235   006924  518D               	movf	?_getNV& (0+255),w,b
 28236   006926  0B40               	andlw	64
 28237   006928  0101               	movlb	1	; () banked
 28238   00692A  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 28239   00692C  51CA               	movf	processOutputs@io& (0+255),w,b
 28240   00692E  0D04               	mullw	4
 28241   006930  50F3               	movf	243,w,c
 28242   006932  0F08               	addlw	8
 28243   006934  EC76  F04B         	call	_sendProducedEvent
 28244   006938                     l281:
 28245                           
 28246                           ;../digitalOut.c: 217:     }
 28247                           
 28248                           ; BSR set to: 0
 28249   006938  0101               	movlb	1	; () banked
 28250   00693A  2BCA               	incf	processOutputs@io& (0+255),f,b
 28251                           
 28252                           ; BSR set to: 1
 28253   00693C  0E0F               	movlw	15
 28254   00693E  65CA               	cpfsgt	processOutputs@io& (0+255),b
 28255   006940  D71B               	goto	l22653
 28256   006942  0012               	return	
 28257   006944                     __end_of_processOutputs:
 28258                           	callstack 0
 28259                           
 28260 ;; *************** function _processActions *****************
 28261 ;; Defined at:
 28262 ;;		line 233 in file "../universalEvents.c"
 28263 ;; Parameters:    Size  Location     Type
 28264 ;;		None
 28265 ;; Auto vars:     Size  Location     Type
 28266 ;;  nextAction      1   42[BANK1 ] unsigned char 
 28267 ;;  nextIo          1   39[BANK1 ] unsigned char 
 28268 ;;  nextType        1   38[BANK1 ] unsigned char 
 28269 ;;  action          1   44[BANK1 ] unsigned char 
 28270 ;;  io              1   43[BANK1 ] unsigned char 
 28271 ;;  ioAction        1   41[BANK1 ] unsigned char 
 28272 ;;  type            1   40[BANK1 ] unsigned char 
 28273 ;;  peekItem        1   37[BANK1 ] unsigned char 
 28274 ;;  simultaneous    1   36[BANK1 ] unsigned char 
 28275 ;; Return value:  Size  Location     Type
 28276 ;;                  1    wreg      void 
 28277 ;; Registers used:
 28278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28279 ;; Tracked objects:
 28280 ;;		On entry : 0/0
 28281 ;;		On exit  : 0/0
 28282 ;;		Unchanged: 0/0
 28283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28285 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28287 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28288 ;;Total ram usage:        9 bytes
 28289 ;; Hardware stack levels used: 1
 28290 ;; Hardware stack levels required when called: 20
 28291 ;; This function calls:
 28292 ;;		___awdiv
 28293 ;;		___awmod
 28294 ;;		_completed
 28295 ;;		_deleteTwoActionQueue
 28296 ;;		_doSOD
 28297 ;;		_doWait
 28298 ;;		_doneTwoAction
 28299 ;;		_finaliseOutput
 28300 ;;		_getNV
 28301 ;;		_getTwoAction
 28302 ;;		_needsStarting
 28303 ;;		_peekTwoActionQueue
 28304 ;;		_setOutputState
 28305 ;;		_startOutput
 28306 ;; This function is called by:
 28307 ;;		_loop
 28308 ;; This function uses a non-reentrant model
 28309 ;;
 28310                           
 28311                           	psect	text101
 28312   006138                     __ptext101:
 28313                           	callstack 0
 28314   006138                     _processActions:
 28315                           	callstack 9
 28316                           
 28317                           ;../universalEvents.c: 242:         action = getTwoAction();
 28318                           
 28319                           ; BSR set to: 1
 28320                           ;incstack = 0
 28321                           ;../universalEvents.c: 234:     uint8_t io;;../universalEvents.c: 235:     uint8_t type;
      +                          ;../universalEvents.c: 236:     uint8_t action;;../universalEvents.c: 237:     uint8_t i
      +                          oAction;;../universalEvents.c: 238:     uint8_t simultaneous;;../universalEvents.c: 239:
      +                               uint8_t peekItem;;../universalEvents.c: 241:     while (1) {
 28322   006138  ECD3  F061         	call	_getTwoAction	;wreg free
 28323   00613C  0101               	movlb	1	; () banked
 28324   00613E  6FE4               	movwf	processActions@action& (0+255),b
 28325                           
 28326                           ; BSR set to: 1
 28327                           ;../universalEvents.c: 244:         if (action == 0) {
 28328   006140  51E4               	movf	processActions@action& (0+255),w,b
 28329   006142  A4D8               	btfss	status,2,c
 28330   006144  D003               	goto	l22555
 28331   006146                     u24050:
 28332                           
 28333                           ;../universalEvents.c: 245:             doneTwoAction();
 28334   006146  ECE4  F061         	call	_doneTwoAction	;wreg free
 28335   00614A  0012               	return	
 28336   00614C                     l22555:
 28337                           
 28338                           ; BSR set to: 1
 28339                           ;../universalEvents.c: 249:         if (action == 1) {
 28340   00614C  05E4               	decf	processActions@action& (0+255),w,b
 28341   00614E  A4D8               	btfss	status,2,c
 28342   006150  D003               	goto	l22563
 28343                           
 28344                           ; BSR set to: 1
 28345                           ;../universalEvents.c: 251:             doSOD();
 28346   006152  EC48  F061         	call	_doSOD	;wreg free
 28347   006156  D7F7               	goto	u24050
 28348   006158                     l22563:
 28349                           
 28350                           ; BSR set to: 1
 28351                           ;../universalEvents.c: 255:         if (action == 2) {
 28352   006158  0E02               	movlw	2
 28353   00615A  19E4               	xorwf	processActions@action& (0+255),w,b
 28354   00615C  A4D8               	btfss	status,2,c
 28355   00615E  D008               	goto	l22569
 28356                           
 28357                           ; BSR set to: 1
 28358                           ;../universalEvents.c: 256:             doWait(5);
 28359   006160  0E00               	movlw	0
 28360   006162  0100               	movlb	0	; () banked
 28361   006164  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28362   006166  0E05               	movlw	5
 28363   006168  6F9D               	movwf	doWait@duration& (0+255),b
 28364   00616A  ECBF  F051         	call	_doWait	;wreg free
 28365   00616E  0012               	return	
 28366   006170                     l22569:
 28367                           
 28368                           ; BSR set to: 1
 28369                           ;../universalEvents.c: 259:         if (action == 3) {
 28370   006170  0E03               	movlw	3
 28371   006172  19E4               	xorwf	processActions@action& (0+255),w,b
 28372   006174  A4D8               	btfss	status,2,c
 28373   006176  D008               	goto	l22575
 28374                           
 28375                           ; BSR set to: 1
 28376                           ;../universalEvents.c: 260:             doWait(10);
 28377   006178  0E00               	movlw	0
 28378   00617A  0100               	movlb	0	; () banked
 28379   00617C  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28380   00617E  0E0A               	movlw	10
 28381   006180  6F9D               	movwf	doWait@duration& (0+255),b
 28382   006182  ECBF  F051         	call	_doWait	;wreg free
 28383   006186  0012               	return	
 28384   006188                     l22575:
 28385                           
 28386                           ; BSR set to: 1
 28387                           ;../universalEvents.c: 263:         if (action == 4) {
 28388   006188  0E04               	movlw	4
 28389   00618A  19E4               	xorwf	processActions@action& (0+255),w,b
 28390   00618C  A4D8               	btfss	status,2,c
 28391   00618E  D008               	goto	l22581
 28392                           
 28393                           ; BSR set to: 1
 28394                           ;../universalEvents.c: 264:             doWait(20);
 28395   006190  0E00               	movlw	0
 28396   006192  0100               	movlb	0	; () banked
 28397   006194  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28398   006196  0E14               	movlw	20
 28399   006198  6F9D               	movwf	doWait@duration& (0+255),b
 28400   00619A  ECBF  F051         	call	_doWait	;wreg free
 28401   00619E  0012               	return	
 28402   0061A0                     l22581:
 28403                           
 28404                           ; BSR set to: 1
 28405                           ;../universalEvents.c: 267:         if (action == 5) {
 28406   0061A0  0E05               	movlw	5
 28407   0061A2  19E4               	xorwf	processActions@action& (0+255),w,b
 28408   0061A4  A4D8               	btfss	status,2,c
 28409   0061A6  D008               	goto	l22587
 28410                           
 28411                           ; BSR set to: 1
 28412                           ;../universalEvents.c: 268:             doWait(50);
 28413   0061A8  0E00               	movlw	0
 28414   0061AA  0100               	movlb	0	; () banked
 28415   0061AC  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28416   0061AE  0E32               	movlw	50
 28417   0061B0  6F9D               	movwf	doWait@duration& (0+255),b
 28418   0061B2  ECBF  F051         	call	_doWait	;wreg free
 28419   0061B6  0012               	return	
 28420   0061B8                     l22587:
 28421                           
 28422                           ; BSR set to: 1
 28423                           ;../universalEvents.c: 271:         simultaneous = action & 0x80;
 28424   0061B8  51E4               	movf	processActions@action& (0+255),w,b
 28425   0061BA  0B80               	andlw	128
 28426   0061BC  6FDC               	movwf	processActions@simultaneous& (0+255),b
 28427                           
 28428                           ;../universalEvents.c: 272:         ioAction = action&0x7F;
 28429   0061BE  51E4               	movf	processActions@action& (0+255),w,b
 28430   0061C0  0B7F               	andlw	127
 28431   0061C2  6FE1               	movwf	processActions@ioAction& (0+255),b
 28432                           
 28433                           ;../universalEvents.c: 273:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 28434   0061C4  0E07               	movlw	7
 28435   0061C6  65E1               	cpfsgt	processActions@ioAction& (0+255),b
 28436   0061C8  D0D0               	goto	l22645
 28437                           
 28438                           ; BSR set to: 1
 28439   0061CA  0E58               	movlw	88
 28440   0061CC  61E1               	cpfslt	processActions@ioAction& (0+255),b
 28441   0061CE  D0CD               	goto	l22645
 28442                           
 28443                           ; BSR set to: 1
 28444                           ;../universalEvents.c: 276:             io = (((ioAction)-8)/5);
 28445   0061D0  0EF8               	movlw	248
 28446   0061D2  25E1               	addwf	processActions@ioAction& (0+255),w,b
 28447   0061D4  0100               	movlb	0	; () banked
 28448   0061D6  6F97               	movwf	___awdiv@dividend& (0+255),b
 28449   0061D8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28450   0061DA  0EFF               	movlw	255
 28451   0061DC  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 28452   0061DE  0E00               	movlw	0
 28453   0061E0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28454   0061E2  0E05               	movlw	5
 28455   0061E4  6F99               	movwf	___awdiv@divisor& (0+255),b
 28456   0061E6  EC4A  F052         	call	___awdiv	;wreg free
 28457   0061EA  0100               	movlb	0	; () banked
 28458   0061EC  5197               	movf	?___awdiv& (0+255),w,b
 28459   0061EE  0101               	movlb	1	; () banked
 28460   0061F0  6FE3               	movwf	processActions@io& (0+255),b
 28461                           
 28462                           ;../universalEvents.c: 277:             ioAction = (((ioAction)-8)%5);
 28463   0061F2  0EF8               	movlw	248
 28464   0061F4  25E1               	addwf	processActions@ioAction& (0+255),w,b
 28465   0061F6  0100               	movlb	0	; () banked
 28466   0061F8  6F8D               	movwf	___awmod@dividend& (0+255),b
 28467   0061FA  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 28468   0061FC  0EFF               	movlw	255
 28469   0061FE  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 28470   006200  0E00               	movlw	0
 28471   006202  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 28472   006204  0E05               	movlw	5
 28473   006206  6F8F               	movwf	___awmod@divisor& (0+255),b
 28474   006208  EC26  F056         	call	___awmod	;wreg free
 28475   00620C  0100               	movlb	0	; () banked
 28476   00620E  518D               	movf	?___awmod& (0+255),w,b
 28477   006210  0101               	movlb	1	; () banked
 28478   006212  6FE1               	movwf	processActions@ioAction& (0+255),b
 28479                           
 28480                           ; BSR set to: 1
 28481                           ;../universalEvents.c: 278:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 28482   006214  51E3               	movf	processActions@io& (0+255),w,b
 28483   006216  0D07               	mullw	7
 28484   006218  50F3               	movf	243,w,c
 28485   00621A  0F10               	addlw	16
 28486   00621C  EC21  F05D         	call	_getNV
 28487   006220  0100               	movlb	0	; () banked
 28488   006222  518D               	movf	?_getNV& (0+255),w,b
 28489   006224  0101               	movlb	1	; () banked
 28490   006226  6FE0               	movwf	processActions@type& (0+255),b
 28491                           
 28492                           ; BSR set to: 1
 28493                           ;../universalEvents.c: 280:             setOutputState(io, ioAction, type);
 28494   006228  C1E1  F093         	movff	processActions@ioAction,setOutputState@act
 28495   00622C  C1E0  F094         	movff	processActions@type,setOutputState@type
 28496   006230  51E3               	movf	processActions@io& (0+255),w,b
 28497   006232  EC5A  F05A         	call	_setOutputState
 28498                           
 28499                           ;../universalEvents.c: 281:             if (needsStarting(io, ioAction, type)) {
 28500   006236  C1E1  F08D         	movff	processActions@ioAction,needsStarting@act
 28501   00623A  C1E0  F08E         	movff	processActions@type,needsStarting@type
 28502   00623E  0101               	movlb	1	; () banked
 28503   006240  51E3               	movf	processActions@io& (0+255),w,b
 28504   006242  EC12  F053         	call	_needsStarting
 28505   006246  0900               	iorlw	0
 28506   006248  B4D8               	btfsc	status,2,c
 28507   00624A  D008               	goto	l22601
 28508                           
 28509                           ;../universalEvents.c: 282:                 startOutput(io, ioAction, type);
 28510   00624C  C1E1  F1D9         	movff	processActions@ioAction,startOutput@act
 28511   006250  C1E0  F1DA         	movff	processActions@type,startOutput@type
 28512   006254  0101               	movlb	1	; () banked
 28513   006256  51E3               	movf	processActions@io& (0+255),w,b
 28514   006258  EC50  F059         	call	_startOutput
 28515   00625C                     l22601:
 28516                           
 28517                           ;../universalEvents.c: 285:             peekItem = 1;
 28518   00625C  0E01               	movlw	1
 28519   00625E  0101               	movlb	1	; () banked
 28520   006260  6FDD               	movwf	processActions@peekItem& (0+255),b
 28521                           
 28522                           ;../universalEvents.c: 286:             while (simultaneous) {
 28523   006262  D06D               	goto	l22637
 28524   006264                     l22603:
 28525                           
 28526                           ; BSR set to: 1
 28527                           ;../universalEvents.c: 287:                 uint8_t nextAction;;../universalEvents.c: 28
      +                          8:                 uint8_t nextIo;;../universalEvents.c: 289:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 291:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 28528   006264  51DD               	movf	processActions@peekItem& (0+255),w,b
 28529   006266  EC05  F052         	call	_peekTwoActionQueue
 28530   00626A  0101               	movlb	1	; () banked
 28531   00626C  6FE2               	movwf	processActions@nextAction& (0+255),b
 28532                           
 28533                           ; BSR set to: 1
 28534                           ;../universalEvents.c: 293:                 if (nextAction == 0) break;
 28535   00626E  51E2               	movf	processActions@nextAction& (0+255),w,b
 28536   006270  B4D8               	btfsc	status,2,c
 28537   006272  D068               	goto	u24180
 28538                           
 28539                           ; BSR set to: 1
 28540                           ;../universalEvents.c: 294:                 simultaneous = nextAction & 0x80;
 28541   006274  51E2               	movf	processActions@nextAction& (0+255),w,b
 28542   006276  0B80               	andlw	128
 28543   006278  6FDC               	movwf	processActions@simultaneous& (0+255),b
 28544                           
 28545                           ; BSR set to: 1
 28546                           ;../universalEvents.c: 295:                 nextAction &= 0x7F;
 28547   00627A  9FE2               	bcf	processActions@nextAction& (0+255),7,b
 28548                           
 28549                           ; BSR set to: 1
 28550                           ;../universalEvents.c: 296:                 nextIo = (((nextAction)-8)/5);
 28551   00627C  0EF8               	movlw	248
 28552   00627E  25E2               	addwf	processActions@nextAction& (0+255),w,b
 28553   006280  0100               	movlb	0	; () banked
 28554   006282  6F97               	movwf	___awdiv@dividend& (0+255),b
 28555   006284  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28556   006286  0EFF               	movlw	255
 28557   006288  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 28558   00628A  0E00               	movlw	0
 28559   00628C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28560   00628E  0E05               	movlw	5
 28561   006290  6F99               	movwf	___awdiv@divisor& (0+255),b
 28562   006292  EC4A  F052         	call	___awdiv	;wreg free
 28563   006296  0100               	movlb	0	; () banked
 28564   006298  5197               	movf	?___awdiv& (0+255),w,b
 28565   00629A  0101               	movlb	1	; () banked
 28566   00629C  6FDF               	movwf	processActions@nextIo& (0+255),b
 28567                           
 28568                           ; BSR set to: 1
 28569                           ;../universalEvents.c: 297:                 if (nextIo == io) {
 28570   00629E  51E3               	movf	processActions@io& (0+255),w,b
 28571   0062A0  19DF               	xorwf	processActions@nextIo& (0+255),w,b
 28572   0062A2  B4D8               	btfsc	status,2,c
 28573   0062A4  D04F               	goto	u24180
 28574                           
 28575                           ; BSR set to: 1
 28576                           ;../universalEvents.c: 303:                 nextAction = (((nextAction)-8)%5);
 28577   0062A6  0EF8               	movlw	248
 28578   0062A8  25E2               	addwf	processActions@nextAction& (0+255),w,b
 28579   0062AA  0100               	movlb	0	; () banked
 28580   0062AC  6F8D               	movwf	___awmod@dividend& (0+255),b
 28581   0062AE  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 28582   0062B0  0EFF               	movlw	255
 28583   0062B2  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 28584   0062B4  0E00               	movlw	0
 28585   0062B6  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 28586   0062B8  0E05               	movlw	5
 28587   0062BA  6F8F               	movwf	___awmod@divisor& (0+255),b
 28588   0062BC  EC26  F056         	call	___awmod	;wreg free
 28589   0062C0  0100               	movlb	0	; () banked
 28590   0062C2  518D               	movf	?___awmod& (0+255),w,b
 28591   0062C4  0101               	movlb	1	; () banked
 28592   0062C6  6FE2               	movwf	processActions@nextAction& (0+255),b
 28593                           
 28594                           ; BSR set to: 1
 28595                           ;../universalEvents.c: 304:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 28596   0062C8  51E3               	movf	processActions@io& (0+255),w,b
 28597   0062CA  0D07               	mullw	7
 28598   0062CC  50F3               	movf	243,w,c
 28599   0062CE  0F10               	addlw	16
 28600   0062D0  EC21  F05D         	call	_getNV
 28601   0062D4  0100               	movlb	0	; () banked
 28602   0062D6  518D               	movf	?_getNV& (0+255),w,b
 28603   0062D8  0101               	movlb	1	; () banked
 28604   0062DA  6FDE               	movwf	processActions@nextType& (0+255),b
 28605                           
 28606                           ; BSR set to: 1
 28607                           ;../universalEvents.c: 305:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 28608   0062DC  C1E2  F093         	movff	processActions@nextAction,setOutputState@act
 28609   0062E0  C1DE  F094         	movff	processActions@nextType,setOutputState@type
 28610   0062E4  51DF               	movf	processActions@nextIo& (0+255),w,b
 28611   0062E6  EC5A  F05A         	call	_setOutputState
 28612                           
 28613                           ;../universalEvents.c: 306:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 28614   0062EA  C1E2  F08D         	movff	processActions@nextAction,needsStarting@act
 28615   0062EE  C1DE  F08E         	movff	processActions@nextType,needsStarting@type
 28616   0062F2  0101               	movlb	1	; () banked
 28617   0062F4  51DF               	movf	processActions@nextIo& (0+255),w,b
 28618   0062F6  EC12  F053         	call	_needsStarting
 28619   0062FA  0900               	iorlw	0
 28620   0062FC  B4D8               	btfsc	status,2,c
 28621   0062FE  D008               	goto	l22629
 28622                           
 28623                           ;../universalEvents.c: 307:                     startOutput(nextIo, nextAction, nextType
      +                          );
 28624   006300  C1E2  F1D9         	movff	processActions@nextAction,startOutput@act
 28625   006304  C1DE  F1DA         	movff	processActions@nextType,startOutput@type
 28626   006308  0101               	movlb	1	; () banked
 28627   00630A  51DF               	movf	processActions@nextIo& (0+255),w,b
 28628   00630C  EC50  F059         	call	_startOutput
 28629   006310                     l22629:
 28630                           
 28631                           ;../universalEvents.c: 309:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 28632   006310  C1E2  F08D         	movff	processActions@nextAction,completed@action
 28633   006314  C1DE  F08E         	movff	processActions@nextType,completed@type
 28634   006318  0101               	movlb	1	; () banked
 28635   00631A  51DF               	movf	processActions@nextIo& (0+255),w,b
 28636   00631C  ECC4  F04F         	call	_completed
 28637   006320  0900               	iorlw	0
 28638   006322  B4D8               	btfsc	status,2,c
 28639   006324  D00A               	goto	l22635
 28640                           
 28641                           ;../universalEvents.c: 310:                     deleteTwoActionQueue(peekItem);
 28642   006326  0101               	movlb	1	; () banked
 28643   006328  51DD               	movf	processActions@peekItem& (0+255),w,b
 28644   00632A  EC92  F053         	call	_deleteTwoActionQueue
 28645                           
 28646                           ;../universalEvents.c: 311:                     finaliseOutput(io, type);
 28647   00632E  C1E0  F08D         	movff	processActions@type,finaliseOutput@type
 28648   006332  0101               	movlb	1	; () banked
 28649   006334  51E3               	movf	processActions@io& (0+255),w,b
 28650   006336  ECD7  F061         	call	_finaliseOutput
 28651   00633A                     l22635:
 28652                           
 28653                           ;../universalEvents.c: 313:                 peekItem++;
 28654   00633A  0101               	movlb	1	; () banked
 28655   00633C  2BDD               	incf	processActions@peekItem& (0+255),f,b
 28656   00633E                     l22637:
 28657                           
 28658                           ; BSR set to: 1
 28659                           ;../universalEvents.c: 286:             while (simultaneous) {
 28660   00633E  51DC               	movf	processActions@simultaneous& (0+255),w,b
 28661   006340  A4D8               	btfss	status,2,c
 28662   006342  D790               	goto	l22603
 28663   006344                     u24180:
 28664                           
 28665                           ; BSR set to: 1
 28666                           ;../universalEvents.c: 316:             if (completed(io, action, type)) {
 28667   006344  C1E4  F08D         	movff	processActions@action,completed@action
 28668   006348  C1E0  F08E         	movff	processActions@type,completed@type
 28669   00634C  51E3               	movf	processActions@io& (0+255),w,b
 28670   00634E  ECC4  F04F         	call	_completed
 28671   006352  0900               	iorlw	0
 28672   006354  B4D8               	btfsc	status,2,c
 28673   006356  0012               	return	
 28674                           
 28675                           ;../universalEvents.c: 317:                 doneTwoAction();
 28676   006358  ECE4  F061         	call	_doneTwoAction	;wreg free
 28677                           
 28678                           ;../universalEvents.c: 318:                 finaliseOutput(io, type);
 28679   00635C  C1E0  F08D         	movff	processActions@type,finaliseOutput@type
 28680   006360  0101               	movlb	1	; () banked
 28681   006362  51E3               	movf	processActions@io& (0+255),w,b
 28682   006364  ECD7  F061         	call	_finaliseOutput
 28683                           
 28684                           ;../universalEvents.c: 319:             } else {
 28685   006368  D6E7               	goto	__ptext101
 28686   00636A                     l22645:
 28687                           
 28688                           ; BSR set to: 1
 28689                           ;../universalEvents.c: 327:             doneTwoAction();
 28690   00636A  ECE4  F061         	call	_doneTwoAction	;wreg free
 28691   00636E  D6E4               	goto	__ptext101
 28692   006370                     __end_of_processActions:
 28693                           	callstack 0
 28694                           
 28695 ;; *************** function _startOutput *****************
 28696 ;; Defined at:
 28697 ;;		line 72 in file "../outputs.c"
 28698 ;; Parameters:    Size  Location     Type
 28699 ;;  io              1    wreg     unsigned char 
 28700 ;;  act             1   33[BANK1 ] unsigned char 
 28701 ;;  type            1   34[BANK1 ] unsigned char 
 28702 ;; Auto vars:     Size  Location     Type
 28703 ;;  io              1   35[BANK1 ] unsigned char 
 28704 ;; Return value:  Size  Location     Type
 28705 ;;                  1    wreg      void 
 28706 ;; Registers used:
 28707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28708 ;; Tracked objects:
 28709 ;;		On entry : 0/0
 28710 ;;		On exit  : 0/0
 28711 ;;		Unchanged: 0/0
 28712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28713 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28714 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28716 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28717 ;;Total ram usage:        3 bytes
 28718 ;; Hardware stack levels used: 1
 28719 ;; Hardware stack levels required when called: 19
 28720 ;; This function calls:
 28721 ;;		_startBounceOutput
 28722 ;;		_startDigitalOutput
 28723 ;;		_startMultiOutput
 28724 ;;		_startServoOutput
 28725 ;; This function is called by:
 28726 ;;		_processActions
 28727 ;; This function uses a non-reentrant model
 28728 ;;
 28729                           
 28730                           	psect	text102
 28731   00B2A0                     __ptext102:
 28732                           	callstack 0
 28733   00B2A0                     _startOutput:
 28734                           	callstack 9
 28735                           
 28736                           ;incstack = 0
 28737                           ;startOutput@io stored from wreg
 28738   00B2A0  0101               	movlb	1	; () banked
 28739   00B2A2  6FDB               	movwf	startOutput@io& (0+255),b
 28740                           
 28741                           ;../outputs.c: 73:     switch(type) {
 28742   00B2A4  D018               	goto	l21169
 28743   00B2A6                     l21151:
 28744                           
 28745                           ; BSR set to: 1
 28746                           ;../outputs.c: 78:             startDigitalOutput(io, act);
 28747   00B2A6  C1D9  F1D1         	movff	startOutput@act,startDigitalOutput@state
 28748   00B2AA  51DB               	movf	startOutput@io& (0+255),w,b
 28749   00B2AC  EC42  F02A         	call	_startDigitalOutput
 28750   00B2B0  0012               	return	
 28751   00B2B2                     l21155:
 28752                           
 28753                           ; BSR set to: 1
 28754                           ;../outputs.c: 82:             startBounceOutput(io, act);
 28755   00B2B2  C1D9  F08D         	movff	startOutput@act,startBounceOutput@action
 28756   00B2B6  51DB               	movf	startOutput@io& (0+255),w,b
 28757   00B2B8  EC9B  F057         	call	_startBounceOutput
 28758   00B2BC  0012               	return	
 28759   00B2BE                     l21159:
 28760                           
 28761                           ; BSR set to: 1
 28762                           ;../outputs.c: 87:             startServoOutput(io, act);
 28763   00B2BE  C1D9  F091         	movff	startOutput@act,startServoOutput@action
 28764   00B2C2  51DB               	movf	startOutput@io& (0+255),w,b
 28765   00B2C4  EC8F  F048         	call	_startServoOutput
 28766   00B2C8  0012               	return	
 28767   00B2CA                     l21163:
 28768                           
 28769                           ; BSR set to: 1
 28770                           ;../outputs.c: 92:             startMultiOutput(io, act);
 28771   00B2CA  C1D9  F091         	movff	startOutput@act,startMultiOutput@action
 28772   00B2CE  51DB               	movf	startOutput@io& (0+255),w,b
 28773   00B2D0  EC19  F04D         	call	_startMultiOutput
 28774   00B2D4  0012               	return	
 28775   00B2D6                     l21169:
 28776   00B2D6  0101               	movlb	1	; () banked
 28777   00B2D8  51DA               	movf	startOutput@type& (0+255),w,b
 28778                           
 28779                           ; Switch size 1, requested type "simple"
 28780                           ; Number of cases is 5, Range of values is 0 to 4
 28781                           ; switch strategies available:
 28782                           ; Name         Instructions Cycles
 28783                           ; simple_byte           16     9 (average)
 28784                           ;	Chosen strategy is simple_byte
 28785   00B2DA  0A00               	xorlw	0	; case 0
 28786   00B2DC  B4D8               	btfsc	status,2,c
 28787   00B2DE  0012               	return	
 28788   00B2E0  0A01               	xorlw	1	; case 1
 28789   00B2E2  B4D8               	btfsc	status,2,c
 28790   00B2E4  D7E0               	goto	l21151
 28791   00B2E6  0A03               	xorlw	3	; case 2
 28792   00B2E8  B4D8               	btfsc	status,2,c
 28793   00B2EA  D7E9               	goto	l21159
 28794   00B2EC  0A01               	xorlw	1	; case 3
 28795   00B2EE  B4D8               	btfsc	status,2,c
 28796   00B2F0  D7E0               	goto	l21155
 28797   00B2F2  0A07               	xorlw	7	; case 4
 28798   00B2F4  A4D8               	btfss	status,2,c
 28799   00B2F6  0012               	return	
 28800   00B2F8  D7E8               	goto	l21163
 28801   00B2FA                     __end_of_startOutput:
 28802                           	callstack 0
 28803                           
 28804 ;; *************** function _startServoOutput *****************
 28805 ;; Defined at:
 28806 ;;		line 538 in file "../servo.c"
 28807 ;; Parameters:    Size  Location     Type
 28808 ;;  io              1    wreg     unsigned char 
 28809 ;;  action          1   49[BANK0 ] unsigned char 
 28810 ;; Auto vars:     Size  Location     Type
 28811 ;;  io              1   51[BANK0 ] unsigned char 
 28812 ;; Return value:  Size  Location     Type
 28813 ;;                  1    wreg      void 
 28814 ;; Registers used:
 28815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28816 ;; Tracked objects:
 28817 ;;		On entry : 0/0
 28818 ;;		On exit  : 0/0
 28819 ;;		Unchanged: 0/0
 28820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28821 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28822 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28823 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28824 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28825 ;;Total ram usage:        3 bytes
 28826 ;; Hardware stack levels used: 1
 28827 ;; Hardware stack levels required when called: 13
 28828 ;; This function calls:
 28829 ;;		_getNV
 28830 ;; This function is called by:
 28831 ;;		_APP_nvValueChanged
 28832 ;;		_startOutput
 28833 ;; This function uses a non-reentrant model
 28834 ;;
 28835                           
 28836                           	psect	text103
 28837   00911E                     __ptext103:
 28838                           	callstack 0
 28839   00911E                     _startServoOutput:
 28840                           	callstack 13
 28841                           
 28842                           ;incstack = 0
 28843                           ;startServoOutput@io stored from wreg
 28844   00911E  0100               	movlb	0	; () banked
 28845   009120  6F93               	movwf	startServoOutput@io& (0+255),b
 28846                           
 28847                           ;../servo.c: 539:     switch (action) {
 28848   009122  D017               	goto	l19767
 28849   009124                     l19761:
 28850                           
 28851                           ; BSR set to: 0
 28852                           ;../servo.c: 541:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 28853   009124  5193               	movf	startServoOutput@io& (0+255),w,b
 28854   009126  0D07               	mullw	7
 28855   009128  50F3               	movf	243,w,c
 28856   00912A  0F15               	addlw	21
 28857   00912C  EC21  F05D         	call	_getNV
 28858   009130  D006               	goto	L8
 28859   009132                     l19763:
 28860                           
 28861                           ; BSR set to: 0
 28862                           ;../servo.c: 544:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 28863   009132  5193               	movf	startServoOutput@io& (0+255),w,b
 28864   009134  0D07               	mullw	7
 28865   009136  50F3               	movf	243,w,c
 28866   009138  0F14               	addlw	20
 28867   00913A  EC21  F05D         	call	_getNV
 28868   00913E                     L8:
 28869   00913E  0E20               	movlw	low _stepsPerPollSpeed
 28870   009140  0100               	movlb	0	; () banked
 28871   009142  2593               	addwf	startServoOutput@io& (0+255),w,b
 28872   009144  6ED9               	movwf	fsr2l,c
 28873   009146  6ADA               	clrf	fsr2h,c
 28874   009148  0E01               	movlw	high _stepsPerPollSpeed
 28875   00914A  22DA               	addwfc	fsr2h,f,c
 28876   00914C  C08D  FFDF         	movff	?_getNV,indf2
 28877                           
 28878                           ;../servo.c: 545:             break;
 28879   009150  D008               	goto	l19769
 28880   009152                     l19767:
 28881   009152  0100               	movlb	0	; () banked
 28882   009154  5191               	movf	startServoOutput@action& (0+255),w,b
 28883                           
 28884                           ; Switch size 1, requested type "simple"
 28885                           ; Number of cases is 2, Range of values is 1 to 2
 28886                           ; switch strategies available:
 28887                           ; Name         Instructions Cycles
 28888                           ; simple_byte            7     4 (average)
 28889                           ;	Chosen strategy is simple_byte
 28890   009156  0A01               	xorlw	1	; case 1
 28891   009158  B4D8               	btfsc	status,2,c
 28892   00915A  D7EB               	goto	l19763
 28893   00915C  0A03               	xorlw	3	; case 2
 28894   00915E  B4D8               	btfsc	status,2,c
 28895   009160  D7E1               	goto	l19761
 28896   009162                     l19769:
 28897                           
 28898                           ; BSR set to: 0
 28899                           ;../servo.c: 547:     if (stepsPerPollSpeed[io] > 234) {
 28900   009162  0E20               	movlw	low _stepsPerPollSpeed
 28901   009164  2593               	addwf	startServoOutput@io& (0+255),w,b
 28902   009166  6ED9               	movwf	fsr2l,c
 28903   009168  6ADA               	clrf	fsr2h,c
 28904   00916A  0E01               	movlw	high _stepsPerPollSpeed
 28905   00916C  22DA               	addwfc	fsr2h,f,c
 28906   00916E  0EEA               	movlw	234
 28907   009170  64DF               	cpfsgt	indf2,c
 28908   009172  D00E               	goto	l19773
 28909                           
 28910                           ; BSR set to: 0
 28911                           ;../servo.c: 548:         stepsPerPollSpeed[io] -= 234;
 28912   009174  0E20               	movlw	low _stepsPerPollSpeed
 28913   009176  2593               	addwf	startServoOutput@io& (0+255),w,b
 28914   009178  6ED9               	movwf	fsr2l,c
 28915   00917A  6ADA               	clrf	fsr2h,c
 28916   00917C  0E01               	movlw	high _stepsPerPollSpeed
 28917   00917E  22DA               	addwfc	fsr2h,f,c
 28918   009180  0EEA               	movlw	234
 28919   009182  5EDF               	subwf	indf2,f,c
 28920                           
 28921                           ;../servo.c: 549:         pollsPerStepSpeed[io] = 0;
 28922   009184  0E94               	movlw	low _pollsPerStepSpeed
 28923   009186  2593               	addwf	startServoOutput@io& (0+255),w,b
 28924   009188  6ED9               	movwf	fsr2l,c
 28925   00918A  6ADA               	clrf	fsr2h,c
 28926   00918C  0E02               	movlw	high _pollsPerStepSpeed
 28927   00918E  D01E               	goto	L9
 28928   009190                     l19773:
 28929                           
 28930                           ; BSR set to: 0
 28931                           ;../servo.c: 551:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28932   009190  0E94               	movlw	low _pollsPerStepSpeed
 28933   009192  2593               	addwf	startServoOutput@io& (0+255),w,b
 28934   009194  6ED9               	movwf	fsr2l,c
 28935   009196  6ADA               	clrf	fsr2h,c
 28936   009198  0E02               	movlw	high _pollsPerStepSpeed
 28937   00919A  22DA               	addwfc	fsr2h,f,c
 28938   00919C  0E20               	movlw	low _stepsPerPollSpeed
 28939   00919E  2593               	addwf	startServoOutput@io& (0+255),w,b
 28940   0091A0  6EE1               	movwf	fsr1l,c
 28941   0091A2  6AE2               	clrf	fsr1h,c
 28942   0091A4  0E01               	movlw	high _stepsPerPollSpeed
 28943   0091A6  22E2               	addwfc	fsr1h,f,c
 28944   0091A8  50E7               	movf	indf1,w,c
 28945   0091AA  6F92               	movwf	??_startServoOutput& (0+255),b
 28946   0091AC  5192               	movf	??_startServoOutput& (0+255),w,b
 28947   0091AE  08EB               	sublw	235
 28948   0091B0  6EDF               	movwf	indf2,c
 28949                           
 28950                           ; BSR set to: 0
 28951                           ;../servo.c: 552:         pollCount[io] = 1;
 28952   0091B2  0E84               	movlw	low _pollCount
 28953   0091B4  2593               	addwf	startServoOutput@io& (0+255),w,b
 28954   0091B6  6ED9               	movwf	fsr2l,c
 28955   0091B8  6ADA               	clrf	fsr2h,c
 28956   0091BA  0E02               	movlw	high _pollCount
 28957   0091BC  22DA               	addwfc	fsr2h,f,c
 28958   0091BE  0E01               	movlw	1
 28959   0091C0  6EDF               	movwf	indf2,c
 28960                           
 28961                           ; BSR set to: 0
 28962                           ;../servo.c: 553:         stepsPerPollSpeed[io] = 0;
 28963   0091C2  0E20               	movlw	low _stepsPerPollSpeed
 28964   0091C4  2593               	addwf	startServoOutput@io& (0+255),w,b
 28965   0091C6  6ED9               	movwf	fsr2l,c
 28966   0091C8  6ADA               	clrf	fsr2h,c
 28967   0091CA  0E01               	movlw	high _stepsPerPollSpeed
 28968   0091CC                     L9:
 28969   0091CC  22DA               	addwfc	fsr2h,f,c
 28970   0091CE  6ADF               	clrf	indf2,c
 28971                           
 28972                           ; BSR set to: 0
 28973                           ;../servo.c: 555:     servoState[io] = SS_STARTING;
 28974   0091D0  0E30               	movlw	low _servoState
 28975   0091D2  2593               	addwf	startServoOutput@io& (0+255),w,b
 28976   0091D4  6ED9               	movwf	fsr2l,c
 28977   0091D6  6ADA               	clrf	fsr2h,c
 28978   0091D8  0E01               	movlw	high _servoState
 28979   0091DA  22DA               	addwfc	fsr2h,f,c
 28980   0091DC  0E03               	movlw	3
 28981   0091DE  6EDF               	movwf	indf2,c
 28982                           
 28983                           ; BSR set to: 0
 28984   0091E0  0012               	return		;funcret
 28985   0091E2                     __end_of_startServoOutput:
 28986                           	callstack 0
 28987                           
 28988 ;; *************** function _startMultiOutput *****************
 28989 ;; Defined at:
 28990 ;;		line 584 in file "../servo.c"
 28991 ;; Parameters:    Size  Location     Type
 28992 ;;  io              1    wreg     unsigned char 
 28993 ;;  action          1   49[BANK0 ] unsigned char 
 28994 ;; Auto vars:     Size  Location     Type
 28995 ;;  io              1   51[BANK0 ] unsigned char 
 28996 ;; Return value:  Size  Location     Type
 28997 ;;                  1    wreg      void 
 28998 ;; Registers used:
 28999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29000 ;; Tracked objects:
 29001 ;;		On entry : 0/0
 29002 ;;		On exit  : 0/0
 29003 ;;		Unchanged: 0/0
 29004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29005 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29008 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29009 ;;Total ram usage:        3 bytes
 29010 ;; Hardware stack levels used: 1
 29011 ;; Hardware stack levels required when called: 13
 29012 ;; This function calls:
 29013 ;;		_getNV
 29014 ;; This function is called by:
 29015 ;;		_APP_nvValueChanged
 29016 ;;		_startOutput
 29017 ;; This function uses a non-reentrant model
 29018 ;;
 29019                           
 29020                           	psect	text104
 29021   009A32                     __ptext104:
 29022                           	callstack 0
 29023   009A32                     _startMultiOutput:
 29024                           	callstack 13
 29025                           
 29026                           ; BSR set to: 0
 29027                           ;incstack = 0
 29028                           ;startMultiOutput@io stored from wreg
 29029   009A32  0100               	movlb	0	; () banked
 29030   009A34  6F93               	movwf	startMultiOutput@io& (0+255),b
 29031                           
 29032                           ;../servo.c: 586:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 29033   009A36  0E03               	movlw	3
 29034   009A38  EC21  F05D         	call	_getNV
 29035   009A3C  0E20               	movlw	low _stepsPerPollSpeed
 29036   009A3E  0100               	movlb	0	; () banked
 29037   009A40  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29038   009A42  6ED9               	movwf	fsr2l,c
 29039   009A44  6ADA               	clrf	fsr2h,c
 29040   009A46  0E01               	movlw	high _stepsPerPollSpeed
 29041   009A48  22DA               	addwfc	fsr2h,f,c
 29042   009A4A  C08D  FFDF         	movff	?_getNV,indf2
 29043                           
 29044                           ; BSR set to: 0
 29045                           ;../servo.c: 587:     if (stepsPerPollSpeed[io] > 234) {
 29046   009A4E  0E20               	movlw	low _stepsPerPollSpeed
 29047   009A50  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29048   009A52  6ED9               	movwf	fsr2l,c
 29049   009A54  6ADA               	clrf	fsr2h,c
 29050   009A56  0E01               	movlw	high _stepsPerPollSpeed
 29051   009A58  22DA               	addwfc	fsr2h,f,c
 29052   009A5A  0EEA               	movlw	234
 29053   009A5C  64DF               	cpfsgt	indf2,c
 29054   009A5E  D00E               	goto	l19837
 29055                           
 29056                           ; BSR set to: 0
 29057                           ;../servo.c: 588:         stepsPerPollSpeed[io] -= 234;
 29058   009A60  0E20               	movlw	low _stepsPerPollSpeed
 29059   009A62  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29060   009A64  6ED9               	movwf	fsr2l,c
 29061   009A66  6ADA               	clrf	fsr2h,c
 29062   009A68  0E01               	movlw	high _stepsPerPollSpeed
 29063   009A6A  22DA               	addwfc	fsr2h,f,c
 29064   009A6C  0EEA               	movlw	234
 29065   009A6E  5EDF               	subwf	indf2,f,c
 29066                           
 29067                           ;../servo.c: 589:         pollsPerStepSpeed[io] = 0;
 29068   009A70  0E94               	movlw	low _pollsPerStepSpeed
 29069   009A72  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29070   009A74  6ED9               	movwf	fsr2l,c
 29071   009A76  6ADA               	clrf	fsr2h,c
 29072   009A78  0E02               	movlw	high _pollsPerStepSpeed
 29073   009A7A  D01E               	goto	L10
 29074   009A7C                     l19837:
 29075                           
 29076                           ; BSR set to: 0
 29077                           ;../servo.c: 591:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 29078   009A7C  0E94               	movlw	low _pollsPerStepSpeed
 29079   009A7E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29080   009A80  6ED9               	movwf	fsr2l,c
 29081   009A82  6ADA               	clrf	fsr2h,c
 29082   009A84  0E02               	movlw	high _pollsPerStepSpeed
 29083   009A86  22DA               	addwfc	fsr2h,f,c
 29084   009A88  0E20               	movlw	low _stepsPerPollSpeed
 29085   009A8A  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29086   009A8C  6EE1               	movwf	fsr1l,c
 29087   009A8E  6AE2               	clrf	fsr1h,c
 29088   009A90  0E01               	movlw	high _stepsPerPollSpeed
 29089   009A92  22E2               	addwfc	fsr1h,f,c
 29090   009A94  50E7               	movf	indf1,w,c
 29091   009A96  6F92               	movwf	??_startMultiOutput& (0+255),b
 29092   009A98  5192               	movf	??_startMultiOutput& (0+255),w,b
 29093   009A9A  08EB               	sublw	235
 29094   009A9C  6EDF               	movwf	indf2,c
 29095                           
 29096                           ; BSR set to: 0
 29097                           ;../servo.c: 592:         pollCount[io] = 1;
 29098   009A9E  0E84               	movlw	low _pollCount
 29099   009AA0  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29100   009AA2  6ED9               	movwf	fsr2l,c
 29101   009AA4  6ADA               	clrf	fsr2h,c
 29102   009AA6  0E02               	movlw	high _pollCount
 29103   009AA8  22DA               	addwfc	fsr2h,f,c
 29104   009AAA  0E01               	movlw	1
 29105   009AAC  6EDF               	movwf	indf2,c
 29106                           
 29107                           ; BSR set to: 0
 29108                           ;../servo.c: 593:         stepsPerPollSpeed[io] = 0;
 29109   009AAE  0E20               	movlw	low _stepsPerPollSpeed
 29110   009AB0  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29111   009AB2  6ED9               	movwf	fsr2l,c
 29112   009AB4  6ADA               	clrf	fsr2h,c
 29113   009AB6  0E01               	movlw	high _stepsPerPollSpeed
 29114   009AB8                     L10:
 29115   009AB8  22DA               	addwfc	fsr2h,f,c
 29116   009ABA  6ADF               	clrf	indf2,c
 29117                           
 29118                           ; BSR set to: 0
 29119                           ;../servo.c: 595:     servoState[io] = SS_STARTING;
 29120   009ABC  0E30               	movlw	low _servoState
 29121   009ABE  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29122   009AC0  6ED9               	movwf	fsr2l,c
 29123   009AC2  6ADA               	clrf	fsr2h,c
 29124   009AC4  0E01               	movlw	high _servoState
 29125   009AC6  22DA               	addwfc	fsr2h,f,c
 29126   009AC8  0E03               	movlw	3
 29127   009ACA  6EDF               	movwf	indf2,c
 29128                           
 29129                           ; BSR set to: 0
 29130   009ACC  0012               	return		;funcret
 29131   009ACE                     __end_of_startMultiOutput:
 29132                           	callstack 0
 29133                           
 29134 ;; *************** function _startDigitalOutput *****************
 29135 ;; Defined at:
 29136 ;;		line 107 in file "../digitalOut.c"
 29137 ;; Parameters:    Size  Location     Type
 29138 ;;  io              1    wreg     unsigned char 
 29139 ;;  state           1   25[BANK1 ] unsigned char 
 29140 ;; Auto vars:     Size  Location     Type
 29141 ;;  io              1   32[BANK1 ] unsigned char 
 29142 ;;  actionState     1   31[BANK1 ] enum E12760
 29143 ;;  pinState        1   30[BANK1 ] enum E12760
 29144 ;; Return value:  Size  Location     Type
 29145 ;;                  1    wreg      void 
 29146 ;; Registers used:
 29147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29148 ;; Tracked objects:
 29149 ;;		On entry : 0/0
 29150 ;;		On exit  : 0/0
 29151 ;;		Unchanged: 0/0
 29152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29153 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29154 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29155 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29156 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29157 ;;Total ram usage:        8 bytes
 29158 ;; Hardware stack levels used: 1
 29159 ;; Hardware stack levels required when called: 18
 29160 ;; This function calls:
 29161 ;;		_getNV
 29162 ;;		_sendInvertedProducedEvent
 29163 ;;		_setOutputPin
 29164 ;;		_writeNVM
 29165 ;; This function is called by:
 29166 ;;		_startOutput
 29167 ;; This function uses a non-reentrant model
 29168 ;;
 29169                           
 29170                           	psect	text105
 29171   005484                     __ptext105:
 29172                           	callstack 0
 29173   005484                     _startDigitalOutput:
 29174                           	callstack 9
 29175                           
 29176                           ; BSR set to: 0
 29177                           ;incstack = 0
 29178                           ;startDigitalOutput@io stored from wreg
 29179   005484  0101               	movlb	1	; () banked
 29180   005486  6FD8               	movwf	startDigitalOutput@io& (0+255),b
 29181                           
 29182                           ;../digitalOut.c: 108:     Boolean pinState;;../digitalOut.c: 109:     Boolean actionSta
      +                          te;;../digitalOut.c: 116:     if (state == 3) {
 29183   005488  0E03               	movlw	3
 29184   00548A  0101               	movlb	1	; () banked
 29185   00548C  19D1               	xorwf	startDigitalOutput@state& (0+255),w,b
 29186   00548E  A4D8               	btfss	status,2,c
 29187   005490  D058               	goto	l20137
 29188                           
 29189                           ; BSR set to: 1
 29190                           ;../digitalOut.c: 117:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 29191   005492  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29192   005494  0D07               	mullw	7
 29193   005496  50F3               	movf	243,w,c
 29194   005498  0F13               	addlw	19
 29195   00549A  EC21  F05D         	call	_getNV
 29196   00549E  0EC4               	movlw	low _flashDelays
 29197   0054A0  0101               	movlb	1	; () banked
 29198   0054A2  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29199   0054A4  6ED9               	movwf	fsr2l,c
 29200   0054A6  6ADA               	clrf	fsr2h,c
 29201   0054A8  0E02               	movlw	high _flashDelays
 29202   0054AA  22DA               	addwfc	fsr2h,f,c
 29203   0054AC  0100               	movlb	0	; () banked
 29204   0054AE  C08D  FFDF         	movff	?_getNV,indf2
 29205                           
 29206                           ; BSR set to: 0
 29207                           ;../digitalOut.c: 118:         pulseDelays[io] = 1;
 29208   0054B2  0ED4               	movlw	low _pulseDelays
 29209   0054B4  0101               	movlb	1	; () banked
 29210   0054B6  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29211   0054B8  6ED9               	movwf	fsr2l,c
 29212   0054BA  6ADA               	clrf	fsr2h,c
 29213   0054BC  0E02               	movlw	high _pulseDelays
 29214   0054BE  22DA               	addwfc	fsr2h,f,c
 29215   0054C0  0E01               	movlw	1
 29216   0054C2  6EDF               	movwf	indf2,c
 29217                           
 29218                           ; BSR set to: 1
 29219                           ;../digitalOut.c: 119:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 29220   0054C4  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29221   0054C6  0D07               	mullw	7
 29222   0054C8  50F3               	movf	243,w,c
 29223   0054CA  0F11               	addlw	17
 29224   0054CC  0B20               	andlw	32
 29225   0054CE  EC21  F05D         	call	_getNV
 29226   0054D2  0100               	movlb	0	; () banked
 29227   0054D4  518D               	movf	?_getNV& (0+255),w,b
 29228   0054D6  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29229   0054D8  A4D8               	btfss	status,2,c
 29230   0054DA  D002               	goto	u20510
 29231   0054DC  0E01               	movlw	1
 29232   0054DE  D001               	goto	u20520
 29233   0054E0                     u20510:
 29234   0054E0  0E00               	movlw	0
 29235   0054E2                     u20520:
 29236   0054E2  6F91               	movwf	setOutputPin@state& (0+255),b
 29237   0054E4  0101               	movlb	1	; () banked
 29238   0054E6  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29239   0054E8  EC66  F036         	call	_setOutputPin
 29240                           
 29241                           ;../digitalOut.c: 120:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 29242   0054EC  0EDE               	movlw	222
 29243   0054EE  0101               	movlb	1	; () banked
 29244   0054F0  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29245   0054F2  6FD2               	movwf	??_startDigitalOutput& (0+255),b
 29246   0054F4  6BD3               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29247   0054F6  0E03               	movlw	3
 29248   0054F8  23D3               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29249   0054FA  C1D2  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29250   0054FE  C1D3  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29251   005502  0100               	movlb	0	; () banked
 29252   005504  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29253   005506  C1D1  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 29254   00550A  0E00               	movlw	0
 29255   00550C  EC52  F05B         	call	_writeNVM
 29256                           
 29257                           ;../digitalOut.c: 121:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 29258   005510  0E01               	movlw	1
 29259   005512  0101               	movlb	1	; () banked
 29260   005514  6FC9               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29261   005516  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29262   005518  0D07               	mullw	7
 29263   00551A  50F3               	movf	243,w,c
 29264   00551C  0F11               	addlw	17
 29265   00551E  EC21  F05D         	call	_getNV
 29266   005522  0100               	movlb	0	; () banked
 29267   005524  518D               	movf	?_getNV& (0+255),w,b
 29268   005526  0B40               	andlw	64
 29269   005528  0101               	movlb	1	; () banked
 29270   00552A  6FCA               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29271   00552C  0E01               	movlw	1
 29272   00552E  6FCB               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29273   005530  0E01               	movlw	1
 29274   005532  6FCC               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29275   005534  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29276   005536  0D04               	mullw	4
 29277   005538  50F3               	movf	243,w,c
 29278   00553A  0F08               	addlw	8
 29279   00553C  ECE9  F05B         	call	_sendInvertedProducedEvent
 29280   005540  0012               	return	
 29281   005542                     l20137:
 29282                           
 29283                           ; BSR set to: 1
 29284                           ;../digitalOut.c: 125:     flashDelays[io] = 0;
 29285   005542  0EC4               	movlw	low _flashDelays
 29286   005544  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29287   005546  6ED9               	movwf	fsr2l,c
 29288   005548  6ADA               	clrf	fsr2h,c
 29289   00554A  0E02               	movlw	high _flashDelays
 29290   00554C  22DA               	addwfc	fsr2h,f,c
 29291   00554E  6ADF               	clrf	indf2,c
 29292                           
 29293                           ; BSR set to: 1
 29294                           ;../digitalOut.c: 127:     actionState = (state == 1);
 29295   005550  05D1               	decf	startDigitalOutput@state& (0+255),w,b
 29296   005552  A4D8               	btfss	status,2,c
 29297   005554  D002               	goto	u20530
 29298   005556  0E01               	movlw	1
 29299   005558  D001               	goto	u20540
 29300   00555A                     u20530:
 29301   00555A  0E00               	movlw	0
 29302   00555C                     u20540:
 29303   00555C  6FD7               	movwf	startDigitalOutput@actionState& (0+255),b
 29304                           
 29305                           ; BSR set to: 1
 29306                           ;../digitalOut.c: 130:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29307   00555E  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29308   005560  0D07               	mullw	7
 29309   005562  50F3               	movf	243,w,c
 29310   005564  0F11               	addlw	17
 29311   005566  EC21  F05D         	call	_getNV
 29312   00556A  0100               	movlb	0	; () banked
 29313   00556C  A18D               	btfss	?_getNV& (0+255),0,b
 29314   00556E  D008               	goto	l259
 29315                           
 29316                           ; BSR set to: 0
 29317                           ;../digitalOut.c: 131:         actionState = !actionState;
 29318   005570  0101               	movlb	1	; () banked
 29319   005572  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29320   005574  A4D8               	btfss	status,2,c
 29321   005576  D002               	goto	u20560
 29322   005578  0E01               	movlw	1
 29323   00557A  D001               	goto	u20570
 29324   00557C                     u20560:
 29325   00557C  0E00               	movlw	0
 29326   00557E                     u20570:
 29327   00557E  6FD7               	movwf	startDigitalOutput@actionState& (0+255),b
 29328   005580                     l259:
 29329                           
 29330                           ;../digitalOut.c: 135:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 29331   005580  0101               	movlb	1	; () banked
 29332   005582  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29333   005584  A4D8               	btfss	status,2,c
 29334   005586  D015               	goto	l20151
 29335                           
 29336                           ; BSR set to: 1
 29337   005588  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29338   00558A  0D07               	mullw	7
 29339   00558C  50F3               	movf	243,w,c
 29340   00558E  0F12               	addlw	18
 29341   005590  EC21  F05D         	call	_getNV
 29342   005594  0100               	movlb	0	; () banked
 29343   005596  518D               	movf	?_getNV& (0+255),w,b
 29344   005598  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29345   00559A  B4D8               	btfsc	status,2,c
 29346   00559C  D00A               	goto	l20151
 29347                           
 29348                           ; BSR set to: 0
 29349                           ;../digitalOut.c: 136:         pulseDelays[io] = 1;
 29350   00559E  0ED4               	movlw	low _pulseDelays
 29351   0055A0  0101               	movlb	1	; () banked
 29352   0055A2  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29353   0055A4  6ED9               	movwf	fsr2l,c
 29354   0055A6  6ADA               	clrf	fsr2h,c
 29355   0055A8  0E02               	movlw	high _pulseDelays
 29356   0055AA  22DA               	addwfc	fsr2h,f,c
 29357   0055AC  0E01               	movlw	1
 29358   0055AE  6EDF               	movwf	indf2,c
 29359   0055B0  0012               	return	
 29360   0055B2                     l20151:
 29361                           
 29362                           ;../digitalOut.c: 142:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 29363   0055B2  0101               	movlb	1	; () banked
 29364   0055B4  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29365   0055B6  B4D8               	btfsc	status,2,c
 29366   0055B8  D038               	goto	l20161
 29367                           
 29368                           ; BSR set to: 1
 29369   0055BA  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29370   0055BC  0D07               	mullw	7
 29371   0055BE  50F3               	movf	243,w,c
 29372   0055C0  0F12               	addlw	18
 29373   0055C2  EC21  F05D         	call	_getNV
 29374   0055C6  0100               	movlb	0	; () banked
 29375   0055C8  518D               	movf	?_getNV& (0+255),w,b
 29376   0055CA  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29377   0055CC  B4D8               	btfsc	status,2,c
 29378   0055CE  D02D               	goto	l20161
 29379                           
 29380                           ; BSR set to: 0
 29381   0055D0  0ED4               	movlw	low _pulseDelays
 29382   0055D2  0101               	movlb	1	; () banked
 29383   0055D4  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29384   0055D6  6ED9               	movwf	fsr2l,c
 29385   0055D8  6ADA               	clrf	fsr2h,c
 29386   0055DA  0E02               	movlw	high _pulseDelays
 29387   0055DC  22DA               	addwfc	fsr2h,f,c
 29388   0055DE  50DF               	movf	indf2,w,c
 29389   0055E0  A4D8               	btfss	status,2,c
 29390   0055E2  D023               	goto	l20161
 29391                           
 29392                           ; BSR set to: 1
 29393                           ;../digitalOut.c: 143:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29394   0055E4  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29395   0055E6  0D07               	mullw	7
 29396   0055E8  50F3               	movf	243,w,c
 29397   0055EA  0F12               	addlw	18
 29398   0055EC  EC21  F05D         	call	_getNV
 29399   0055F0  0ED4               	movlw	low _pulseDelays
 29400   0055F2  0101               	movlb	1	; () banked
 29401   0055F4  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29402   0055F6  6ED9               	movwf	fsr2l,c
 29403   0055F8  6ADA               	clrf	fsr2h,c
 29404   0055FA  0E02               	movlw	high _pulseDelays
 29405   0055FC  22DA               	addwfc	fsr2h,f,c
 29406   0055FE  0100               	movlb	0	; () banked
 29407   005600  C08D  FFDF         	movff	?_getNV,indf2
 29408                           
 29409                           ; BSR set to: 0
 29410                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 29411   005604  0EDE               	movlw	222
 29412   005606  0101               	movlb	1	; () banked
 29413   005608  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29414   00560A  6FD2               	movwf	??_startDigitalOutput& (0+255),b
 29415   00560C  6BD3               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29416   00560E  0E03               	movlw	3
 29417   005610  23D3               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29418   005612  C1D2  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29419   005616  C1D3  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29420   00561A  0100               	movlb	0	; () banked
 29421   00561C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29422   00561E  0E02               	movlw	2
 29423   005620  6FA7               	movwf	writeNVM@value& (0+255),b
 29424   005622  0E00               	movlw	0
 29425   005624  EC52  F05B         	call	_writeNVM
 29426                           
 29427                           ;../digitalOut.c: 147:     } else {
 29428   005628  D025               	goto	l20171
 29429   00562A                     l20161:
 29430                           
 29431                           ;../digitalOut.c: 148:         pulseDelays[io] = 1;
 29432   00562A  0ED4               	movlw	low _pulseDelays
 29433   00562C  0101               	movlb	1	; () banked
 29434   00562E  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29435   005630  6ED9               	movwf	fsr2l,c
 29436   005632  6ADA               	clrf	fsr2h,c
 29437   005634  0E02               	movlw	high _pulseDelays
 29438   005636  22DA               	addwfc	fsr2h,f,c
 29439   005638  0E01               	movlw	1
 29440   00563A  6EDF               	movwf	indf2,c
 29441                           
 29442                           ; BSR set to: 1
 29443                           ;../digitalOut.c: 149:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 29444   00563C  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29445   00563E  A4D8               	btfss	status,2,c
 29446   005640  D004               	goto	l20167
 29447                           
 29448                           ; BSR set to: 1
 29449   005642  0E00               	movlw	0
 29450   005644  6FD5               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 29451   005646  0E02               	movlw	2
 29452   005648  D003               	goto	L11
 29453   00564A                     l20167:
 29454                           
 29455                           ; BSR set to: 1
 29456   00564A  0E00               	movlw	0
 29457   00564C  6FD5               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 29458   00564E  0E01               	movlw	1
 29459   005650                     L11:
 29460   005650  6FD4               	movwf	_startDigitalOutput$808& (0+255),b
 29461                           
 29462                           ; BSR set to: 1
 29463   005652  0EDE               	movlw	222
 29464   005654  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29465   005656  6FD2               	movwf	??_startDigitalOutput& (0+255),b
 29466   005658  6BD3               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29467   00565A  0E03               	movlw	3
 29468   00565C  23D3               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29469   00565E  C1D2  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29470   005662  C1D3  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29471   005666  0100               	movlb	0	; () banked
 29472   005668  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29473   00566A  C1D4  F0A7         	movff	_startDigitalOutput$808,writeNVM@value
 29474   00566E  0E00               	movlw	0
 29475   005670  EC52  F05B         	call	_writeNVM
 29476   005674                     l20171:
 29477                           
 29478                           ;../digitalOut.c: 152:     pinState = actionState;
 29479   005674  C1D7  F1D6         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 29480                           
 29481                           ;../digitalOut.c: 153:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 29482   005678  0101               	movlb	1	; () banked
 29483   00567A  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29484   00567C  0D07               	mullw	7
 29485   00567E  50F3               	movf	243,w,c
 29486   005680  0F11               	addlw	17
 29487   005682  EC21  F05D         	call	_getNV
 29488   005686  0100               	movlb	0	; () banked
 29489   005688  AB8D               	btfss	?_getNV& (0+255),5,b
 29490   00568A  D008               	goto	l20177
 29491                           
 29492                           ; BSR set to: 0
 29493                           ;../digitalOut.c: 154:         pinState = !pinState;
 29494   00568C  0101               	movlb	1	; () banked
 29495   00568E  51D6               	movf	startDigitalOutput@pinState& (0+255),w,b
 29496   005690  A4D8               	btfss	status,2,c
 29497   005692  D002               	goto	u20650
 29498   005694  0E01               	movlw	1
 29499   005696  D001               	goto	u20660
 29500   005698                     u20650:
 29501   005698  0E00               	movlw	0
 29502   00569A                     u20660:
 29503   00569A  6FD6               	movwf	startDigitalOutput@pinState& (0+255),b
 29504   00569C                     l20177:
 29505                           
 29506                           ;../digitalOut.c: 156:     setOutputPin(io, pinState);
 29507   00569C  C1D6  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 29508   0056A0  0101               	movlb	1	; () banked
 29509   0056A2  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29510   0056A4  EC66  F036         	call	_setOutputPin
 29511                           
 29512                           ;../digitalOut.c: 161:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 29513   0056A8  0101               	movlb	1	; () banked
 29514   0056AA  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29515   0056AC  0D07               	mullw	7
 29516   0056AE  50F3               	movf	243,w,c
 29517   0056B0  0F11               	addlw	17
 29518   0056B2  EC21  F05D         	call	_getNV
 29519   0056B6  0100               	movlb	0	; () banked
 29520   0056B8  A78D               	btfss	?_getNV& (0+255),3,b
 29521   0056BA  D021               	goto	l20185
 29522                           
 29523                           ; BSR set to: 0
 29524                           ;../digitalOut.c: 162:         if (actionState) {
 29525   0056BC  0101               	movlb	1	; () banked
 29526   0056BE  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29527   0056C0  B4D8               	btfsc	status,2,c
 29528   0056C2  0012               	return	
 29529                           
 29530                           ; BSR set to: 1
 29531                           ;../digitalOut.c: 165:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 29532   0056C4  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29533   0056C6  B4D8               	btfsc	status,2,c
 29534   0056C8  D002               	goto	u20690
 29535   0056CA  0E01               	movlw	1
 29536   0056CC  D001               	goto	u20700
 29537   0056CE                     u20690:
 29538   0056CE  0E00               	movlw	0
 29539   0056D0                     u20700:
 29540   0056D0  6FC9               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29541   0056D2  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29542   0056D4  0D07               	mullw	7
 29543   0056D6  50F3               	movf	243,w,c
 29544   0056D8  0F11               	addlw	17
 29545   0056DA  EC21  F05D         	call	_getNV
 29546   0056DE  0100               	movlb	0	; () banked
 29547   0056E0  518D               	movf	?_getNV& (0+255),w,b
 29548   0056E2  0B40               	andlw	64
 29549   0056E4  0101               	movlb	1	; () banked
 29550   0056E6  6FCA               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29551   0056E8  0E01               	movlw	1
 29552   0056EA  6FCB               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29553   0056EC  0E01               	movlw	1
 29554   0056EE  6FCC               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29555   0056F0  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29556   0056F2  0D04               	mullw	4
 29557   0056F4  50F3               	movf	243,w,c
 29558   0056F6  0F08               	addlw	8
 29559   0056F8  ECE9  F05B         	call	_sendInvertedProducedEvent
 29560   0056FC  0012               	return	
 29561   0056FE                     l20185:
 29562                           
 29563                           ; BSR set to: 0
 29564                           ;../digitalOut.c: 170:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 29565   0056FE  0101               	movlb	1	; () banked
 29566   005700  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29567   005702  B4D8               	btfsc	status,2,c
 29568   005704  D002               	goto	u20710
 29569   005706  0E01               	movlw	1
 29570   005708  D001               	goto	u20720
 29571   00570A                     u20710:
 29572   00570A  0E00               	movlw	0
 29573   00570C                     u20720:
 29574   00570C  6FC9               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29575   00570E  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29576   005710  0D07               	mullw	7
 29577   005712  50F3               	movf	243,w,c
 29578   005714  0F11               	addlw	17
 29579   005716  EC21  F05D         	call	_getNV
 29580   00571A  0100               	movlb	0	; () banked
 29581   00571C  518D               	movf	?_getNV& (0+255),w,b
 29582   00571E  0B40               	andlw	64
 29583   005720  0101               	movlb	1	; () banked
 29584   005722  6FCA               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29585   005724  0E01               	movlw	1
 29586   005726  6FCB               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29587   005728  0E01               	movlw	1
 29588   00572A  6FCC               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29589   00572C  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29590   00572E  0D04               	mullw	4
 29591   005730  50F3               	movf	243,w,c
 29592   005732  0F08               	addlw	8
 29593   005734  ECE9  F05B         	call	_sendInvertedProducedEvent
 29594   005738  0012               	return		;funcret
 29595   00573A                     __end_of_startDigitalOutput:
 29596                           	callstack 0
 29597                           
 29598 ;; *************** function _sendInvertedProducedEvent *****************
 29599 ;; Defined at:
 29600 ;;		line 362 in file "../universalEvents.c"
 29601 ;; Parameters:    Size  Location     Type
 29602 ;;  happening       1    wreg     unsigned char 
 29603 ;;  state           1   17[BANK1 ] enum E12781
 29604 ;;  invert          1   18[BANK1 ] enum E12761
 29605 ;;  can_send_on     1   19[BANK1 ] enum E12761
 29606 ;;  can_send_off    1   20[BANK1 ] enum E12761
 29607 ;; Auto vars:     Size  Location     Type
 29608 ;;  happening       1   21[BANK1 ] unsigned char 
 29609 ;;  state_to_sen    1   24[BANK1 ] enum E12781
 29610 ;; Return value:  Size  Location     Type
 29611 ;;                  1    wreg      enum E12760
 29612 ;; Registers used:
 29613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29614 ;; Tracked objects:
 29615 ;;		On entry : 0/0
 29616 ;;		On exit  : 0/0
 29617 ;;		Unchanged: 0/0
 29618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29619 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29620 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29622 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29623 ;;Total ram usage:        8 bytes
 29624 ;; Hardware stack levels used: 1
 29625 ;; Hardware stack levels required when called: 17
 29626 ;; This function calls:
 29627 ;;		_sendProducedEvent
 29628 ;; This function is called by:
 29629 ;;		_startDigitalOutput
 29630 ;;		_sodTRCallback
 29631 ;; This function uses a non-reentrant model
 29632 ;;
 29633                           
 29634                           	psect	text106
 29635   00B7D2                     __ptext106:
 29636                           	callstack 0
 29637   00B7D2                     _sendInvertedProducedEvent:
 29638                           	callstack 10
 29639                           
 29640                           ;incstack = 0
 29641                           ;sendInvertedProducedEvent@happening stored from wreg
 29642   00B7D2  0101               	movlb	1	; () banked
 29643   00B7D4  6FCD               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 29644                           
 29645                           ;../universalEvents.c: 363:  EventState state_to_send = invert?!state:state;
 29646   00B7D6  0101               	movlb	1	; () banked
 29647   00B7D8  51CA               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 29648   00B7DA  A4D8               	btfss	status,2,c
 29649   00B7DC  D003               	goto	l19649
 29650                           
 29651                           ; BSR set to: 1
 29652   00B7DE  C1C9  F1CE         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1395
 29653   00B7E2  D007               	goto	L12
 29654   00B7E4                     l19649:
 29655                           
 29656                           ; BSR set to: 1
 29657   00B7E4  51C9               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 29658   00B7E6  A4D8               	btfss	status,2,c
 29659   00B7E8  D002               	goto	u19840
 29660   00B7EA  0E01               	movlw	1
 29661   00B7EC  D001               	goto	u19850
 29662   00B7EE                     u19840:
 29663   00B7EE  0E00               	movlw	0
 29664   00B7F0                     u19850:
 29665   00B7F0  6FCE               	movwf	_sendInvertedProducedEvent$1395& (0+255),b
 29666   00B7F2                     L12:
 29667   00B7F2  6BCF               	clrf	(_sendInvertedProducedEvent$1395+1)& (0+255),b
 29668                           
 29669                           ; BSR set to: 1
 29670   00B7F4  C1CE  F1D0         	movff	_sendInvertedProducedEvent$1395,sendInvertedProducedEvent@state_to_send
 29671                           
 29672                           ;../universalEvents.c: 364:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 29673   00B7F8  51D0               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 29674   00B7FA  B4D8               	btfsc	status,2,c
 29675   00B7FC  D003               	goto	u19870
 29676                           
 29677                           ; BSR set to: 1
 29678   00B7FE  51CB               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 29679   00B800  A4D8               	btfss	status,2,c
 29680   00B802  D006               	goto	u19890
 29681   00B804                     u19870:
 29682                           
 29683                           ; BSR set to: 1
 29684   00B804  51D0               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 29685   00B806  A4D8               	btfss	status,2,c
 29686   00B808  0012               	return	
 29687                           
 29688                           ; BSR set to: 1
 29689   00B80A  51CC               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 29690   00B80C  B4D8               	btfsc	status,2,c
 29691   00B80E  0012               	return	
 29692   00B810                     u19890:
 29693                           
 29694                           ; BSR set to: 1
 29695                           ;../universalEvents.c: 365:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 29696   00B810  C1D0  F1C1         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 29697   00B814  51CD               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 29698   00B816  EC76  F04B         	call	_sendProducedEvent
 29699   00B81A  0012               	return		;funcret
 29700   00B81C                     __end_of_sendInvertedProducedEvent:
 29701                           	callstack 0
 29702                           
 29703 ;; *************** function _startBounceOutput *****************
 29704 ;; Defined at:
 29705 ;;		line 566 in file "../servo.c"
 29706 ;; Parameters:    Size  Location     Type
 29707 ;;  io              1    wreg     unsigned char 
 29708 ;;  action          1   45[BANK0 ] unsigned char 
 29709 ;; Auto vars:     Size  Location     Type
 29710 ;;  io              1   46[BANK0 ] unsigned char 
 29711 ;; Return value:  Size  Location     Type
 29712 ;;                  1    wreg      void 
 29713 ;; Registers used:
 29714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29715 ;; Tracked objects:
 29716 ;;		On entry : 0/0
 29717 ;;		On exit  : 0/0
 29718 ;;		Unchanged: 0/0
 29719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29720 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29724 ;;Total ram usage:        2 bytes
 29725 ;; Hardware stack levels used: 1
 29726 ;; Hardware stack levels required when called: 12
 29727 ;; This function calls:
 29728 ;;		Nothing
 29729 ;; This function is called by:
 29730 ;;		_APP_nvValueChanged
 29731 ;;		_startOutput
 29732 ;; This function uses a non-reentrant model
 29733 ;;
 29734                           
 29735                           	psect	text107
 29736   00AF36                     __ptext107:
 29737                           	callstack 0
 29738   00AF36                     _startBounceOutput:
 29739                           	callstack 14
 29740                           
 29741                           ;incstack = 0
 29742                           ;startBounceOutput@io stored from wreg
 29743   00AF36  0100               	movlb	0	; () banked
 29744   00AF38  6F8E               	movwf	startBounceOutput@io& (0+255),b
 29745                           
 29746                           ;../servo.c: 567:     switch (action) {
 29747   00AF3A  D018               	goto	l19809
 29748   00AF3C                     l19803:
 29749                           
 29750                           ; BSR set to: 0
 29751                           ;../servo.c: 569:             speed[io] = 0;
 29752   00AF3C  518E               	movf	startBounceOutput@io& (0+255),w,b
 29753   00AF3E  0D02               	mullw	2
 29754   00AF40  0E00               	movlw	low _speed
 29755   00AF42  24F3               	addwf	243,w,c
 29756   00AF44  6ED9               	movwf	fsr2l,c
 29757   00AF46  0E01               	movlw	high _speed
 29758   00AF48  20F4               	addwfc	prodh,w,c
 29759   00AF4A  6EDA               	movwf	fsr2h,c
 29760   00AF4C  6ADE               	clrf	postinc2,c
 29761   00AF4E  6ADD               	clrf	postdec2,c
 29762                           
 29763                           ;../servo.c: 570:             break;
 29764   00AF50  D015               	goto	l19811
 29765   00AF52                     l19805:
 29766                           
 29767                           ; BSR set to: 0
 29768                           ;../servo.c: 572:             speed[io] = 12;
 29769   00AF52  518E               	movf	startBounceOutput@io& (0+255),w,b
 29770   00AF54  0D02               	mullw	2
 29771   00AF56  0E00               	movlw	low _speed
 29772   00AF58  24F3               	addwf	243,w,c
 29773   00AF5A  6ED9               	movwf	fsr2l,c
 29774   00AF5C  0E01               	movlw	high _speed
 29775   00AF5E  20F4               	addwfc	prodh,w,c
 29776   00AF60  6EDA               	movwf	fsr2h,c
 29777   00AF62  0E0C               	movlw	12
 29778   00AF64  6EDE               	movwf	postinc2,c
 29779   00AF66  0E00               	movlw	0
 29780   00AF68  6EDD               	movwf	postdec2,c
 29781                           
 29782                           ;../servo.c: 573:             break;
 29783   00AF6A  D008               	goto	l19811
 29784   00AF6C                     l19809:
 29785   00AF6C  0100               	movlb	0	; () banked
 29786   00AF6E  518D               	movf	startBounceOutput@action& (0+255),w,b
 29787                           
 29788                           ; Switch size 1, requested type "simple"
 29789                           ; Number of cases is 2, Range of values is 1 to 2
 29790                           ; switch strategies available:
 29791                           ; Name         Instructions Cycles
 29792                           ; simple_byte            7     4 (average)
 29793                           ;	Chosen strategy is simple_byte
 29794   00AF70  0A01               	xorlw	1	; case 1
 29795   00AF72  B4D8               	btfsc	status,2,c
 29796   00AF74  D7EE               	goto	l19805
 29797   00AF76  0A03               	xorlw	3	; case 2
 29798   00AF78  B4D8               	btfsc	status,2,c
 29799   00AF7A  D7E0               	goto	l19803
 29800   00AF7C                     l19811:
 29801                           
 29802                           ; BSR set to: 0
 29803                           ;../servo.c: 575:     servoState[io] = SS_STARTING;
 29804   00AF7C  0E30               	movlw	low _servoState
 29805   00AF7E  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29806   00AF80  6ED9               	movwf	fsr2l,c
 29807   00AF82  6ADA               	clrf	fsr2h,c
 29808   00AF84  0E01               	movlw	high _servoState
 29809   00AF86  22DA               	addwfc	fsr2h,f,c
 29810   00AF88  0E03               	movlw	3
 29811   00AF8A  6EDF               	movwf	indf2,c
 29812                           
 29813                           ;../servo.c: 576:     loopCount[io] = 0;
 29814   00AF8C  0E74               	movlw	low _loopCount
 29815   00AF8E  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29816   00AF90  6ED9               	movwf	fsr2l,c
 29817   00AF92  6ADA               	clrf	fsr2h,c
 29818   00AF94  0E02               	movlw	high _loopCount
 29819   00AF96  22DA               	addwfc	fsr2h,f,c
 29820   00AF98  6ADF               	clrf	indf2,c
 29821                           
 29822                           ; BSR set to: 0
 29823   00AF9A  0012               	return		;funcret
 29824   00AF9C                     __end_of_startBounceOutput:
 29825                           	callstack 0
 29826                           
 29827 ;; *************** function _setOutputState *****************
 29828 ;; Defined at:
 29829 ;;		line 110 in file "../outputs.c"
 29830 ;; Parameters:    Size  Location     Type
 29831 ;;  io              1    wreg     unsigned char 
 29832 ;;  act             1   51[BANK0 ] unsigned char 
 29833 ;;  type            1   52[BANK0 ] unsigned char 
 29834 ;; Auto vars:     Size  Location     Type
 29835 ;;  io              1   53[BANK0 ] unsigned char 
 29836 ;; Return value:  Size  Location     Type
 29837 ;;                  1    wreg      void 
 29838 ;; Registers used:
 29839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29840 ;; Tracked objects:
 29841 ;;		On entry : 0/0
 29842 ;;		On exit  : 0/0
 29843 ;;		Unchanged: 0/0
 29844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29845 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29848 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29849 ;;Total ram usage:        3 bytes
 29850 ;; Hardware stack levels used: 1
 29851 ;; Hardware stack levels required when called: 14
 29852 ;; This function calls:
 29853 ;;		_setBounceState
 29854 ;;		_setMultiState
 29855 ;;		_setServoState
 29856 ;; This function is called by:
 29857 ;;		_processActions
 29858 ;; This function uses a non-reentrant model
 29859 ;;
 29860                           
 29861                           	psect	text108
 29862   00B4B4                     __ptext108:
 29863                           	callstack 0
 29864   00B4B4                     _setOutputState:
 29865                           	callstack 14
 29866                           
 29867                           ; BSR set to: 0
 29868                           ;incstack = 0
 29869                           ;setOutputState@io stored from wreg
 29870   00B4B4  0100               	movlb	0	; () banked
 29871   00B4B6  6F95               	movwf	setOutputState@io& (0+255),b
 29872                           
 29873                           ;../outputs.c: 111:     switch(type) {
 29874   00B4B8  D012               	goto	l21119
 29875   00B4BA                     l21105:
 29876                           
 29877                           ; BSR set to: 0
 29878                           ;../outputs.c: 124:             setBounceState(io, act);
 29879   00B4BA  C093  F091         	movff	setOutputState@act,setBounceState@action
 29880   00B4BE  5195               	movf	setOutputState@io& (0+255),w,b
 29881   00B4C0  EC0F  F04A         	call	_setBounceState
 29882   00B4C4  0012               	return	
 29883   00B4C6                     l21109:
 29884                           
 29885                           ; BSR set to: 0
 29886                           ;../outputs.c: 129:             setServoState(io, act);
 29887   00B4C6  C093  F091         	movff	setOutputState@act,setServoState@action
 29888   00B4CA  5195               	movf	setOutputState@io& (0+255),w,b
 29889   00B4CC  ECB1  F049         	call	_setServoState
 29890   00B4D0  0012               	return	
 29891   00B4D2                     l21113:
 29892                           
 29893                           ; BSR set to: 0
 29894                           ;../outputs.c: 134:             setMultiState(io, act);
 29895   00B4D2  C093  F091         	movff	setOutputState@act,setMultiState@action
 29896   00B4D6  5195               	movf	setOutputState@io& (0+255),w,b
 29897   00B4D8  EC9E  F043         	call	_setMultiState
 29898   00B4DC  0012               	return	
 29899   00B4DE                     l21119:
 29900   00B4DE  0100               	movlb	0	; () banked
 29901   00B4E0  5194               	movf	setOutputState@type& (0+255),w,b
 29902                           
 29903                           ; Switch size 1, requested type "simple"
 29904                           ; Number of cases is 7, Range of values is 0 to 6
 29905                           ; switch strategies available:
 29906                           ; Name         Instructions Cycles
 29907                           ; simple_byte           22    12 (average)
 29908                           ;	Chosen strategy is simple_byte
 29909   00B4E2  0A00               	xorlw	0	; case 0
 29910   00B4E4  B4D8               	btfsc	status,2,c
 29911   00B4E6  0012               	return	
 29912   00B4E8  0A01               	xorlw	1	; case 1
 29913   00B4EA  B4D8               	btfsc	status,2,c
 29914   00B4EC  0012               	return	
 29915   00B4EE  0A03               	xorlw	3	; case 2
 29916   00B4F0  B4D8               	btfsc	status,2,c
 29917   00B4F2  D7E9               	goto	l21109
 29918   00B4F4  0A01               	xorlw	1	; case 3
 29919   00B4F6  B4D8               	btfsc	status,2,c
 29920   00B4F8  D7E0               	goto	l21105
 29921   00B4FA  0A07               	xorlw	7	; case 4
 29922   00B4FC  B4D8               	btfsc	status,2,c
 29923   00B4FE  D7E9               	goto	l21113
 29924   00B500  0A01               	xorlw	1	; case 5
 29925   00B502  B4D8               	btfsc	status,2,c
 29926   00B504  0012               	return	
 29927   00B506  0A03               	xorlw	3	; case 6
 29928   00B508  0012               	return	
 29929   00B50A                     __end_of_setOutputState:
 29930                           	callstack 0
 29931                           
 29932 ;; *************** function _setServoState *****************
 29933 ;; Defined at:
 29934 ;;		line 606 in file "../servo.c"
 29935 ;; Parameters:    Size  Location     Type
 29936 ;;  io              1    wreg     unsigned char 
 29937 ;;  action          1   49[BANK0 ] unsigned char 
 29938 ;; Auto vars:     Size  Location     Type
 29939 ;;  io              1   50[BANK0 ] unsigned char 
 29940 ;; Return value:  Size  Location     Type
 29941 ;;                  1    wreg      void 
 29942 ;; Registers used:
 29943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29944 ;; Tracked objects:
 29945 ;;		On entry : 0/0
 29946 ;;		On exit  : 0/0
 29947 ;;		Unchanged: 0/0
 29948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29949 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29952 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29953 ;;Total ram usage:        2 bytes
 29954 ;; Hardware stack levels used: 1
 29955 ;; Hardware stack levels required when called: 13
 29956 ;; This function calls:
 29957 ;;		_getNV
 29958 ;; This function is called by:
 29959 ;;		_APP_nvValueChanged
 29960 ;;		_setOutputState
 29961 ;; This function uses a non-reentrant model
 29962 ;;
 29963                           
 29964                           	psect	text109
 29965   009362                     __ptext109:
 29966                           	callstack 0
 29967   009362                     _setServoState:
 29968                           	callstack 13
 29969                           
 29970                           ;incstack = 0
 29971                           ;setServoState@io stored from wreg
 29972   009362  0100               	movlb	0	; () banked
 29973   009364  6F92               	movwf	setServoState@io& (0+255),b
 29974                           
 29975                           ;../servo.c: 607:     switch (action) {
 29976   009366  D052               	goto	l19757
 29977   009368                     l19743:
 29978                           
 29979                           ; BSR set to: 0
 29980                           ;../servo.c: 609:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29981   009368  5192               	movf	setServoState@io& (0+255),w,b
 29982   00936A  0D07               	mullw	7
 29983   00936C  50F3               	movf	243,w,c
 29984   00936E  0F11               	addlw	17
 29985   009370  EC21  F05D         	call	_getNV
 29986   009374  0100               	movlb	0	; () banked
 29987   009376  A18D               	btfss	?_getNV& (0+255),0,b
 29988   009378  D010               	goto	l19747
 29989                           
 29990                           ; BSR set to: 0
 29991                           ;../servo.c: 610:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29992   00937A  5192               	movf	setServoState@io& (0+255),w,b
 29993   00937C  0D07               	mullw	7
 29994   00937E  50F3               	movf	243,w,c
 29995   009380  0F13               	addlw	19
 29996   009382  EC21  F05D         	call	_getNV
 29997   009386  0E40               	movlw	low _targetPos
 29998   009388  0100               	movlb	0	; () banked
 29999   00938A  2592               	addwf	setServoState@io& (0+255),w,b
 30000   00938C  6ED9               	movwf	fsr2l,c
 30001   00938E  6ADA               	clrf	fsr2h,c
 30002   009390  0E01               	movlw	high _targetPos
 30003   009392  22DA               	addwfc	fsr2h,f,c
 30004   009394  C08D  FFDF         	movff	?_getNV,indf2
 30005                           
 30006                           ;../servo.c: 611:             } else {
 30007   009398  0012               	return	
 30008   00939A                     l19747:
 30009                           
 30010                           ; BSR set to: 0
 30011                           ;../servo.c: 612:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30012   00939A  5192               	movf	setServoState@io& (0+255),w,b
 30013   00939C  0D07               	mullw	7
 30014   00939E  50F3               	movf	243,w,c
 30015   0093A0  0F12               	addlw	18
 30016   0093A2  EC21  F05D         	call	_getNV
 30017   0093A6  0E40               	movlw	low _targetPos
 30018   0093A8  0100               	movlb	0	; () banked
 30019   0093AA  2592               	addwf	setServoState@io& (0+255),w,b
 30020   0093AC  6ED9               	movwf	fsr2l,c
 30021   0093AE  6ADA               	clrf	fsr2h,c
 30022   0093B0  0E01               	movlw	high _targetPos
 30023   0093B2  22DA               	addwfc	fsr2h,f,c
 30024   0093B4  C08D  FFDF         	movff	?_getNV,indf2
 30025   0093B8  0012               	return	
 30026   0093BA                     l19749:
 30027                           
 30028                           ; BSR set to: 0
 30029                           ;../servo.c: 616:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30030   0093BA  5192               	movf	setServoState@io& (0+255),w,b
 30031   0093BC  0D07               	mullw	7
 30032   0093BE  50F3               	movf	243,w,c
 30033   0093C0  0F11               	addlw	17
 30034   0093C2  EC21  F05D         	call	_getNV
 30035   0093C6  0100               	movlb	0	; () banked
 30036   0093C8  A18D               	btfss	?_getNV& (0+255),0,b
 30037   0093CA  D010               	goto	l19753
 30038                           
 30039                           ; BSR set to: 0
 30040                           ;../servo.c: 617:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30041   0093CC  5192               	movf	setServoState@io& (0+255),w,b
 30042   0093CE  0D07               	mullw	7
 30043   0093D0  50F3               	movf	243,w,c
 30044   0093D2  0F12               	addlw	18
 30045   0093D4  EC21  F05D         	call	_getNV
 30046   0093D8  0E40               	movlw	low _targetPos
 30047   0093DA  0100               	movlb	0	; () banked
 30048   0093DC  2592               	addwf	setServoState@io& (0+255),w,b
 30049   0093DE  6ED9               	movwf	fsr2l,c
 30050   0093E0  6ADA               	clrf	fsr2h,c
 30051   0093E2  0E01               	movlw	high _targetPos
 30052   0093E4  22DA               	addwfc	fsr2h,f,c
 30053   0093E6  C08D  FFDF         	movff	?_getNV,indf2
 30054                           
 30055                           ;../servo.c: 618:             } else {
 30056   0093EA  0012               	return	
 30057   0093EC                     l19753:
 30058                           
 30059                           ; BSR set to: 0
 30060                           ;../servo.c: 619:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30061   0093EC  5192               	movf	setServoState@io& (0+255),w,b
 30062   0093EE  0D07               	mullw	7
 30063   0093F0  50F3               	movf	243,w,c
 30064   0093F2  0F13               	addlw	19
 30065   0093F4  EC21  F05D         	call	_getNV
 30066   0093F8  0E40               	movlw	low _targetPos
 30067   0093FA  0100               	movlb	0	; () banked
 30068   0093FC  2592               	addwf	setServoState@io& (0+255),w,b
 30069   0093FE  6ED9               	movwf	fsr2l,c
 30070   009400  6ADA               	clrf	fsr2h,c
 30071   009402  0E01               	movlw	high _targetPos
 30072   009404  22DA               	addwfc	fsr2h,f,c
 30073   009406  C08D  FFDF         	movff	?_getNV,indf2
 30074   00940A  0012               	return	
 30075   00940C                     l19757:
 30076   00940C  0100               	movlb	0	; () banked
 30077   00940E  5191               	movf	setServoState@action& (0+255),w,b
 30078                           
 30079                           ; Switch size 1, requested type "simple"
 30080                           ; Number of cases is 2, Range of values is 1 to 2
 30081                           ; switch strategies available:
 30082                           ; Name         Instructions Cycles
 30083                           ; simple_byte            7     4 (average)
 30084                           ;	Chosen strategy is simple_byte
 30085   009410  0A01               	xorlw	1	; case 1
 30086   009412  B4D8               	btfsc	status,2,c
 30087   009414  D7D2               	goto	l19749
 30088   009416  0A03               	xorlw	3	; case 2
 30089   009418  A4D8               	btfss	status,2,c
 30090   00941A  0012               	return	
 30091   00941C  D7A5               	goto	l19743
 30092   00941E                     __end_of_setServoState:
 30093                           	callstack 0
 30094                           
 30095 ;; *************** function _setMultiState *****************
 30096 ;; Defined at:
 30097 ;;		line 657 in file "../servo.c"
 30098 ;; Parameters:    Size  Location     Type
 30099 ;;  io              1    wreg     unsigned char 
 30100 ;;  action          1   49[BANK0 ] unsigned char 
 30101 ;; Auto vars:     Size  Location     Type
 30102 ;;  io              1   50[BANK0 ] unsigned char 
 30103 ;; Return value:  Size  Location     Type
 30104 ;;                  1    wreg      void 
 30105 ;; Registers used:
 30106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30107 ;; Tracked objects:
 30108 ;;		On entry : 0/0
 30109 ;;		On exit  : 0/0
 30110 ;;		Unchanged: 0/0
 30111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30112 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30113 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30115 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30116 ;;Total ram usage:        2 bytes
 30117 ;; Hardware stack levels used: 1
 30118 ;; Hardware stack levels required when called: 13
 30119 ;; This function calls:
 30120 ;;		_getNV
 30121 ;; This function is called by:
 30122 ;;		_APP_nvValueChanged
 30123 ;;		_setOutputState
 30124 ;; This function uses a non-reentrant model
 30125 ;;
 30126                           
 30127                           	psect	text110
 30128   00873C                     __ptext110:
 30129                           	callstack 0
 30130   00873C                     _setMultiState:
 30131                           	callstack 13
 30132                           
 30133                           ; BSR set to: 0
 30134                           ;incstack = 0
 30135                           ;setMultiState@io stored from wreg
 30136   00873C  0100               	movlb	0	; () banked
 30137   00873E  6F92               	movwf	setMultiState@io& (0+255),b
 30138                           
 30139                           ;../servo.c: 658:     switch (action) {
 30140   008740  D05E               	goto	l19829
 30141   008742                     l19815:
 30142                           
 30143                           ; BSR set to: 0
 30144                           ;../servo.c: 660:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30145   008742  5192               	movf	setMultiState@io& (0+255),w,b
 30146   008744  0D07               	mullw	7
 30147   008746  50F3               	movf	243,w,c
 30148   008748  0F13               	addlw	19
 30149   00874A  EC21  F05D         	call	_getNV
 30150   00874E  0E40               	movlw	low _targetPos
 30151   008750  0100               	movlb	0	; () banked
 30152   008752  2592               	addwf	setMultiState@io& (0+255),w,b
 30153   008754  6ED9               	movwf	fsr2l,c
 30154   008756  6ADA               	clrf	fsr2h,c
 30155   008758  0E01               	movlw	high _targetPos
 30156   00875A  22DA               	addwfc	fsr2h,f,c
 30157   00875C  C08D  FFDF         	movff	?_getNV,indf2
 30158                           
 30159                           ;../servo.c: 661:             break;
 30160   008760  0012               	return	
 30161   008762                     l19817:
 30162                           
 30163                           ; BSR set to: 0
 30164                           ;../servo.c: 663:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 30165   008762  5192               	movf	setMultiState@io& (0+255),w,b
 30166   008764  0D07               	mullw	7
 30167   008766  50F3               	movf	243,w,c
 30168   008768  0F14               	addlw	20
 30169   00876A  EC21  F05D         	call	_getNV
 30170   00876E  0E40               	movlw	low _targetPos
 30171   008770  0100               	movlb	0	; () banked
 30172   008772  2592               	addwf	setMultiState@io& (0+255),w,b
 30173   008774  6ED9               	movwf	fsr2l,c
 30174   008776  6ADA               	clrf	fsr2h,c
 30175   008778  0E01               	movlw	high _targetPos
 30176   00877A  22DA               	addwfc	fsr2h,f,c
 30177   00877C  C08D  FFDF         	movff	?_getNV,indf2
 30178                           
 30179                           ;../servo.c: 664:             break;
 30180   008780  0012               	return	
 30181   008782                     l19819:
 30182                           
 30183                           ; BSR set to: 0
 30184                           ;../servo.c: 666:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 30185   008782  5192               	movf	setMultiState@io& (0+255),w,b
 30186   008784  0D07               	mullw	7
 30187   008786  50F3               	movf	243,w,c
 30188   008788  0F12               	addlw	18
 30189   00878A  EC21  F05D         	call	_getNV
 30190   00878E  0100               	movlb	0	; () banked
 30191   008790  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30192   008792  0012               	return	
 30193   008794  518E               	movf	(?_getNV+1)& (0+255),w,b
 30194   008796  E104               	bnz	u20000
 30195   008798  0E03               	movlw	3
 30196   00879A  5D8D               	subwf	?_getNV& (0+255),w,b
 30197   00879C  A0D8               	btfss	status,0,c
 30198   00879E  0012               	return	
 30199   0087A0                     u20000:
 30200                           
 30201                           ; BSR set to: 0
 30202                           ;../servo.c: 667:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 30203   0087A0  5192               	movf	setMultiState@io& (0+255),w,b
 30204   0087A2  0D07               	mullw	7
 30205   0087A4  50F3               	movf	243,w,c
 30206   0087A6  0F15               	addlw	21
 30207   0087A8  EC21  F05D         	call	_getNV
 30208   0087AC  0E40               	movlw	low _targetPos
 30209   0087AE  0100               	movlb	0	; () banked
 30210   0087B0  2592               	addwf	setMultiState@io& (0+255),w,b
 30211   0087B2  6ED9               	movwf	fsr2l,c
 30212   0087B4  6ADA               	clrf	fsr2h,c
 30213   0087B6  0E01               	movlw	high _targetPos
 30214   0087B8  22DA               	addwfc	fsr2h,f,c
 30215   0087BA  C08D  FFDF         	movff	?_getNV,indf2
 30216   0087BE  0012               	return	
 30217   0087C0                     l19823:
 30218                           
 30219                           ; BSR set to: 0
 30220                           ;../servo.c: 671:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 30221   0087C0  5192               	movf	setMultiState@io& (0+255),w,b
 30222   0087C2  0D07               	mullw	7
 30223   0087C4  50F3               	movf	243,w,c
 30224   0087C6  0F12               	addlw	18
 30225   0087C8  EC21  F05D         	call	_getNV
 30226   0087CC  0100               	movlb	0	; () banked
 30227   0087CE  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30228   0087D0  0012               	return	
 30229   0087D2  518E               	movf	(?_getNV+1)& (0+255),w,b
 30230   0087D4  E104               	bnz	u20010
 30231   0087D6  0E04               	movlw	4
 30232   0087D8  5D8D               	subwf	?_getNV& (0+255),w,b
 30233   0087DA  A0D8               	btfss	status,0,c
 30234   0087DC  0012               	return	
 30235   0087DE                     u20010:
 30236                           
 30237                           ; BSR set to: 0
 30238                           ;../servo.c: 672:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 30239   0087DE  5192               	movf	setMultiState@io& (0+255),w,b
 30240   0087E0  0D07               	mullw	7
 30241   0087E2  50F3               	movf	243,w,c
 30242   0087E4  0F16               	addlw	22
 30243   0087E6  EC21  F05D         	call	_getNV
 30244   0087EA  0E40               	movlw	low _targetPos
 30245   0087EC  0100               	movlb	0	; () banked
 30246   0087EE  2592               	addwf	setMultiState@io& (0+255),w,b
 30247   0087F0  6ED9               	movwf	fsr2l,c
 30248   0087F2  6ADA               	clrf	fsr2h,c
 30249   0087F4  0E01               	movlw	high _targetPos
 30250   0087F6  22DA               	addwfc	fsr2h,f,c
 30251   0087F8  C08D  FFDF         	movff	?_getNV,indf2
 30252   0087FC  0012               	return	
 30253   0087FE                     l19829:
 30254   0087FE  0100               	movlb	0	; () banked
 30255   008800  5191               	movf	setMultiState@action& (0+255),w,b
 30256                           
 30257                           ; Switch size 1, requested type "simple"
 30258                           ; Number of cases is 4, Range of values is 0 to 3
 30259                           ; switch strategies available:
 30260                           ; Name         Instructions Cycles
 30261                           ; simple_byte           13     7 (average)
 30262                           ;	Chosen strategy is simple_byte
 30263   008802  0A00               	xorlw	0	; case 0
 30264   008804  B4D8               	btfsc	status,2,c
 30265   008806  D79D               	goto	l19815
 30266   008808  0A01               	xorlw	1	; case 1
 30267   00880A  B4D8               	btfsc	status,2,c
 30268   00880C  D7AA               	goto	l19817
 30269   00880E  0A03               	xorlw	3	; case 2
 30270   008810  B4D8               	btfsc	status,2,c
 30271   008812  D7B7               	goto	l19819
 30272   008814  0A01               	xorlw	1	; case 3
 30273   008816  A4D8               	btfss	status,2,c
 30274   008818  0012               	return	
 30275   00881A  D7D2               	goto	l19823
 30276   00881C                     __end_of_setMultiState:
 30277                           	callstack 0
 30278                           
 30279 ;; *************** function _setBounceState *****************
 30280 ;; Defined at:
 30281 ;;		line 633 in file "../servo.c"
 30282 ;; Parameters:    Size  Location     Type
 30283 ;;  io              1    wreg     unsigned char 
 30284 ;;  action          1   49[BANK0 ] unsigned char 
 30285 ;; Auto vars:     Size  Location     Type
 30286 ;;  io              1   50[BANK0 ] unsigned char 
 30287 ;; Return value:  Size  Location     Type
 30288 ;;                  1    wreg      void 
 30289 ;; Registers used:
 30290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30291 ;; Tracked objects:
 30292 ;;		On entry : 0/0
 30293 ;;		On exit  : 0/0
 30294 ;;		Unchanged: 0/0
 30295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30296 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30299 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30300 ;;Total ram usage:        2 bytes
 30301 ;; Hardware stack levels used: 1
 30302 ;; Hardware stack levels required when called: 13
 30303 ;; This function calls:
 30304 ;;		_getNV
 30305 ;; This function is called by:
 30306 ;;		_APP_nvValueChanged
 30307 ;;		_setOutputState
 30308 ;; This function uses a non-reentrant model
 30309 ;;
 30310                           
 30311                           	psect	text111
 30312   00941E                     __ptext111:
 30313                           	callstack 0
 30314   00941E                     _setBounceState:
 30315                           	callstack 13
 30316                           
 30317                           ; BSR set to: 0
 30318                           ;incstack = 0
 30319                           ;setBounceState@io stored from wreg
 30320   00941E  0100               	movlb	0	; () banked
 30321   009420  6F92               	movwf	setBounceState@io& (0+255),b
 30322                           
 30323                           ;../servo.c: 634:     switch (action) {
 30324   009422  D052               	goto	l19799
 30325   009424                     l19785:
 30326                           
 30327                           ; BSR set to: 0
 30328                           ;../servo.c: 636:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30329   009424  5192               	movf	setBounceState@io& (0+255),w,b
 30330   009426  0D07               	mullw	7
 30331   009428  50F3               	movf	243,w,c
 30332   00942A  0F11               	addlw	17
 30333   00942C  EC21  F05D         	call	_getNV
 30334   009430  0100               	movlb	0	; () banked
 30335   009432  A18D               	btfss	?_getNV& (0+255),0,b
 30336   009434  D010               	goto	l19789
 30337                           
 30338                           ; BSR set to: 0
 30339                           ;../servo.c: 637:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30340   009436  5192               	movf	setBounceState@io& (0+255),w,b
 30341   009438  0D07               	mullw	7
 30342   00943A  50F3               	movf	243,w,c
 30343   00943C  0F12               	addlw	18
 30344   00943E  EC21  F05D         	call	_getNV
 30345   009442  0E40               	movlw	low _targetPos
 30346   009444  0100               	movlb	0	; () banked
 30347   009446  2592               	addwf	setBounceState@io& (0+255),w,b
 30348   009448  6ED9               	movwf	fsr2l,c
 30349   00944A  6ADA               	clrf	fsr2h,c
 30350   00944C  0E01               	movlw	high _targetPos
 30351   00944E  22DA               	addwfc	fsr2h,f,c
 30352   009450  C08D  FFDF         	movff	?_getNV,indf2
 30353                           
 30354                           ;../servo.c: 638:             } else {
 30355   009454  0012               	return	
 30356   009456                     l19789:
 30357                           
 30358                           ; BSR set to: 0
 30359                           ;../servo.c: 639:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30360   009456  5192               	movf	setBounceState@io& (0+255),w,b
 30361   009458  0D07               	mullw	7
 30362   00945A  50F3               	movf	243,w,c
 30363   00945C  0F13               	addlw	19
 30364   00945E  EC21  F05D         	call	_getNV
 30365   009462  0E40               	movlw	low _targetPos
 30366   009464  0100               	movlb	0	; () banked
 30367   009466  2592               	addwf	setBounceState@io& (0+255),w,b
 30368   009468  6ED9               	movwf	fsr2l,c
 30369   00946A  6ADA               	clrf	fsr2h,c
 30370   00946C  0E01               	movlw	high _targetPos
 30371   00946E  22DA               	addwfc	fsr2h,f,c
 30372   009470  C08D  FFDF         	movff	?_getNV,indf2
 30373   009474  0012               	return	
 30374   009476                     l19791:
 30375                           
 30376                           ; BSR set to: 0
 30377                           ;../servo.c: 643:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30378   009476  5192               	movf	setBounceState@io& (0+255),w,b
 30379   009478  0D07               	mullw	7
 30380   00947A  50F3               	movf	243,w,c
 30381   00947C  0F11               	addlw	17
 30382   00947E  EC21  F05D         	call	_getNV
 30383   009482  0100               	movlb	0	; () banked
 30384   009484  A18D               	btfss	?_getNV& (0+255),0,b
 30385   009486  D010               	goto	l19795
 30386                           
 30387                           ; BSR set to: 0
 30388                           ;../servo.c: 644:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30389   009488  5192               	movf	setBounceState@io& (0+255),w,b
 30390   00948A  0D07               	mullw	7
 30391   00948C  50F3               	movf	243,w,c
 30392   00948E  0F13               	addlw	19
 30393   009490  EC21  F05D         	call	_getNV
 30394   009494  0E40               	movlw	low _targetPos
 30395   009496  0100               	movlb	0	; () banked
 30396   009498  2592               	addwf	setBounceState@io& (0+255),w,b
 30397   00949A  6ED9               	movwf	fsr2l,c
 30398   00949C  6ADA               	clrf	fsr2h,c
 30399   00949E  0E01               	movlw	high _targetPos
 30400   0094A0  22DA               	addwfc	fsr2h,f,c
 30401   0094A2  C08D  FFDF         	movff	?_getNV,indf2
 30402                           
 30403                           ;../servo.c: 645:             } else {
 30404   0094A6  0012               	return	
 30405   0094A8                     l19795:
 30406                           
 30407                           ; BSR set to: 0
 30408                           ;../servo.c: 646:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30409   0094A8  5192               	movf	setBounceState@io& (0+255),w,b
 30410   0094AA  0D07               	mullw	7
 30411   0094AC  50F3               	movf	243,w,c
 30412   0094AE  0F12               	addlw	18
 30413   0094B0  EC21  F05D         	call	_getNV
 30414   0094B4  0E40               	movlw	low _targetPos
 30415   0094B6  0100               	movlb	0	; () banked
 30416   0094B8  2592               	addwf	setBounceState@io& (0+255),w,b
 30417   0094BA  6ED9               	movwf	fsr2l,c
 30418   0094BC  6ADA               	clrf	fsr2h,c
 30419   0094BE  0E01               	movlw	high _targetPos
 30420   0094C0  22DA               	addwfc	fsr2h,f,c
 30421   0094C2  C08D  FFDF         	movff	?_getNV,indf2
 30422   0094C6  0012               	return	
 30423   0094C8                     l19799:
 30424   0094C8  0100               	movlb	0	; () banked
 30425   0094CA  5191               	movf	setBounceState@action& (0+255),w,b
 30426                           
 30427                           ; Switch size 1, requested type "simple"
 30428                           ; Number of cases is 2, Range of values is 1 to 2
 30429                           ; switch strategies available:
 30430                           ; Name         Instructions Cycles
 30431                           ; simple_byte            7     4 (average)
 30432                           ;	Chosen strategy is simple_byte
 30433   0094CC  0A01               	xorlw	1	; case 1
 30434   0094CE  B4D8               	btfsc	status,2,c
 30435   0094D0  D7D2               	goto	l19791
 30436   0094D2  0A03               	xorlw	3	; case 2
 30437   0094D4  A4D8               	btfss	status,2,c
 30438   0094D6  0012               	return	
 30439   0094D8  D7A5               	goto	l19785
 30440   0094DA                     __end_of_setBounceState:
 30441                           	callstack 0
 30442                           
 30443 ;; *************** function _needsStarting *****************
 30444 ;; Defined at:
 30445 ;;		line 182 in file "../outputs.c"
 30446 ;; Parameters:    Size  Location     Type
 30447 ;;  io              1    wreg     unsigned char 
 30448 ;;  act             1   45[BANK0 ] unsigned char 
 30449 ;;  type            1   46[BANK0 ] unsigned char 
 30450 ;; Auto vars:     Size  Location     Type
 30451 ;;  io              1   49[BANK0 ] unsigned char 
 30452 ;; Return value:  Size  Location     Type
 30453 ;;                  1    wreg      enum E12761
 30454 ;; Registers used:
 30455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30456 ;; Tracked objects:
 30457 ;;		On entry : 0/0
 30458 ;;		On exit  : 0/0
 30459 ;;		Unchanged: 0/0
 30460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30464 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30465 ;;Total ram usage:        5 bytes
 30466 ;; Hardware stack levels used: 1
 30467 ;; Hardware stack levels required when called: 12
 30468 ;; This function calls:
 30469 ;;		Nothing
 30470 ;; This function is called by:
 30471 ;;		_processActions
 30472 ;; This function uses a non-reentrant model
 30473 ;;
 30474                           
 30475                           	psect	text112
 30476   00A624                     __ptext112:
 30477                           	callstack 0
 30478   00A624                     _needsStarting:
 30479                           	callstack 16
 30480                           
 30481                           ; BSR set to: 0
 30482                           ;incstack = 0
 30483                           ;needsStarting@io stored from wreg
 30484   00A624  0100               	movlb	0	; () banked
 30485   00A626  6F91               	movwf	needsStarting@io& (0+255),b
 30486                           
 30487                           ;../outputs.c: 183:     switch(type) {
 30488   00A628  D02B               	goto	l21143
 30489   00A62A                     l21123:
 30490                           
 30491                           ; BSR set to: 0
 30492                           ;../outputs.c: 186:             return FALSE;
 30493   00A62A  0E00               	movlw	0
 30494   00A62C  0012               	return	
 30495   00A62E                     l21127:
 30496                           
 30497                           ; BSR set to: 0
 30498                           ;../outputs.c: 195:             return (pulseDelays[io] == 0);
 30499   00A62E  0ED4               	movlw	low _pulseDelays
 30500   00A630  2591               	addwf	needsStarting@io& (0+255),w,b
 30501   00A632  6ED9               	movwf	fsr2l,c
 30502   00A634  6ADA               	clrf	fsr2h,c
 30503   00A636  0E02               	movlw	high _pulseDelays
 30504   00A638  22DA               	addwfc	fsr2h,f,c
 30505   00A63A  50DF               	movf	indf2,w,c
 30506   00A63C  A4D8               	btfss	status,2,c
 30507   00A63E  D002               	goto	u21890
 30508   00A640  0E01               	movlw	1
 30509   00A642  0012               	return	
 30510   00A644                     u21890:
 30511   00A644  0E00               	movlw	0
 30512   00A646  0012               	return	
 30513   00A648                     l21131:
 30514                           
 30515                           ; BSR set to: 0
 30516                           ;../outputs.c: 205:             if (targetPos[io] == currentPos[io]) {
 30517   00A648  5191               	movf	needsStarting@io& (0+255),w,b
 30518   00A64A  0FA9               	addlw	low _currentPos
 30519   00A64C  6ED9               	movwf	fsr2l,c
 30520   00A64E  6ADA               	clrf	fsr2h,c
 30521   00A650  0E40               	movlw	low _targetPos
 30522   00A652  2591               	addwf	needsStarting@io& (0+255),w,b
 30523   00A654  6EE1               	movwf	fsr1l,c
 30524   00A656  6AE2               	clrf	fsr1h,c
 30525   00A658  0E01               	movlw	high _targetPos
 30526   00A65A  22E2               	addwfc	fsr1h,f,c
 30527   00A65C  50DE               	movf	postinc2,w,c
 30528   00A65E  18E6               	xorwf	postinc1,w,c
 30529   00A660  B4D8               	btfsc	status,2,c
 30530   00A662  D7E3               	goto	l21123
 30531                           
 30532                           ; BSR set to: 0
 30533                           ;../outputs.c: 209:             return (servoState[io] != SS_MOVING);
 30534   00A664  0E30               	movlw	low _servoState
 30535   00A666  2591               	addwf	needsStarting@io& (0+255),w,b
 30536   00A668  6ED9               	movwf	fsr2l,c
 30537   00A66A  6ADA               	clrf	fsr2h,c
 30538   00A66C  0E01               	movlw	high _servoState
 30539   00A66E  22DA               	addwfc	fsr2h,f,c
 30540   00A670  0E02               	movlw	2
 30541   00A672  18DE               	xorwf	postinc2,w,c
 30542   00A674  B4D8               	btfsc	status,2,c
 30543   00A676  D002               	goto	u21920
 30544   00A678  0E01               	movlw	1
 30545   00A67A  0012               	return	
 30546   00A67C                     u21920:
 30547   00A67C  0E00               	movlw	0
 30548   00A67E  0012               	return	
 30549   00A680                     l21143:
 30550   00A680  0100               	movlb	0	; () banked
 30551   00A682  518E               	movf	needsStarting@type& (0+255),w,b
 30552                           
 30553                           ; Switch size 1, requested type "simple"
 30554                           ; Number of cases is 5, Range of values is 0 to 4
 30555                           ; switch strategies available:
 30556                           ; Name         Instructions Cycles
 30557                           ; simple_byte           16     9 (average)
 30558                           ;	Chosen strategy is simple_byte
 30559   00A684  0A00               	xorlw	0	; case 0
 30560   00A686  B4D8               	btfsc	status,2,c
 30561   00A688  D7D0               	goto	l21123
 30562   00A68A  0A01               	xorlw	1	; case 1
 30563   00A68C  B4D8               	btfsc	status,2,c
 30564   00A68E  D7CF               	goto	l21127
 30565   00A690  0A03               	xorlw	3	; case 2
 30566   00A692  B4D8               	btfsc	status,2,c
 30567   00A694  D7D9               	goto	l21131
 30568   00A696  0A01               	xorlw	1	; case 3
 30569   00A698  B4D8               	btfsc	status,2,c
 30570   00A69A  D7D6               	goto	l21131
 30571   00A69C  0A07               	xorlw	7	; case 4
 30572   00A69E  B4D8               	btfsc	status,2,c
 30573   00A6A0  D7D3               	goto	l21131
 30574                           
 30575                           ; BSR set to: 0
 30576                           ;../outputs.c: 212:     return TRUE;
 30577   00A6A2  0E01               	movlw	1
 30578                           
 30579                           ; BSR set to: 0
 30580   00A6A4  0012               	return		;funcret
 30581   00A6A6                     __end_of_needsStarting:
 30582                           	callstack 0
 30583                           
 30584 ;; *************** function _getTwoAction *****************
 30585 ;; Defined at:
 30586 ;;		line 397 in file "../event_consumerDualActionQueue.c"
 30587 ;; Parameters:    Size  Location     Type
 30588 ;;		None
 30589 ;; Auto vars:     Size  Location     Type
 30590 ;;		None
 30591 ;; Return value:  Size  Location     Type
 30592 ;;                  1    wreg      unsigned char 
 30593 ;; Registers used:
 30594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30595 ;; Tracked objects:
 30596 ;;		On entry : 0/0
 30597 ;;		On exit  : 0/0
 30598 ;;		Unchanged: 0/0
 30599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30604 ;;Total ram usage:        0 bytes
 30605 ;; Hardware stack levels used: 1
 30606 ;; Hardware stack levels required when called: 13
 30607 ;; This function calls:
 30608 ;;		_peekTwoActionQueue
 30609 ;; This function is called by:
 30610 ;;		_processActions
 30611 ;; This function uses a non-reentrant model
 30612 ;;
 30613                           
 30614                           	psect	text113
 30615   00C3A6                     __ptext113:
 30616                           	callstack 0
 30617   00C3A6                     _getTwoAction:
 30618                           	callstack 15
 30619                           
 30620                           ;../event_consumerDualActionQueue.c: 398:  return peekTwoActionQueue(0);
 30621                           
 30622                           ; BSR set to: 0
 30623                           ;incstack = 0
 30624   00C3A6  0E00               	movlw	0
 30625   00C3A8  EC05  F052         	call	_peekTwoActionQueue
 30626   00C3AC  0012               	return		;funcret
 30627   00C3AE                     __end_of_getTwoAction:
 30628                           	callstack 0
 30629                           
 30630 ;; *************** function _peekTwoActionQueue *****************
 30631 ;; Defined at:
 30632 ;;		line 436 in file "../event_consumerDualActionQueue.c"
 30633 ;; Parameters:    Size  Location     Type
 30634 ;;  index           1    wreg     unsigned char 
 30635 ;; Auto vars:     Size  Location     Type
 30636 ;;  index           1   46[BANK0 ] unsigned char 
 30637 ;;  qty             1   45[BANK0 ] unsigned char 
 30638 ;; Return value:  Size  Location     Type
 30639 ;;                  1    wreg      unsigned char 
 30640 ;; Registers used:
 30641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30642 ;; Tracked objects:
 30643 ;;		On entry : 0/0
 30644 ;;		On exit  : 0/0
 30645 ;;		Unchanged: 0/0
 30646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30648 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30650 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30651 ;;Total ram usage:        2 bytes
 30652 ;; Hardware stack levels used: 1
 30653 ;; Hardware stack levels required when called: 12
 30654 ;; This function calls:
 30655 ;;		Nothing
 30656 ;; This function is called by:
 30657 ;;		_getTwoAction
 30658 ;;		_processActions
 30659 ;; This function uses a non-reentrant model
 30660 ;;
 30661                           
 30662                           	psect	text114
 30663   00A40A                     __ptext114:
 30664                           	callstack 0
 30665   00A40A                     _peekTwoActionQueue:
 30666                           	callstack 16
 30667                           
 30668                           ;incstack = 0
 30669                           ;peekTwoActionQueue@index stored from wreg
 30670   00A40A  0100               	movlb	0	; () banked
 30671   00A40C  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 30672                           
 30673                           ;../event_consumerDualActionQueue.c: 437:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 438:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 30674   00A40E  0100               	movlb	0	; () banked
 30675   00A410  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 30676   00A412  5DCC               	subwf	_expeditedWriteIndex& (0+255),w,b
 30677   00A414  0B07               	andlw	7
 30678   00A416  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 30679                           
 30680                           ;../event_consumerDualActionQueue.c: 439:     if (index < qty) {
 30681   00A418  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30682   00A41A  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 30683   00A41C  B0D8               	btfsc	status,0,c
 30684   00A41E  D019               	goto	l20219
 30685                           
 30686                           ; BSR set to: 0
 30687                           ;../event_consumerDualActionQueue.c: 440:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 30688   00A420  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 30689   00A422  19CD               	xorwf	_expeditedReadIndex& (0+255),w,b
 30690   00A424  A4D8               	btfss	status,2,c
 30691   00A426  D002               	goto	l20207
 30692   00A428                     u20760:
 30693                           
 30694                           ; BSR set to: 0
 30695   00A428  0E00               	movlw	0
 30696   00A42A  0012               	return	
 30697   00A42C                     l20207:
 30698                           
 30699                           ; BSR set to: 0
 30700                           ;../event_consumerDualActionQueue.c: 441:         index += expeditedReadIndex;
 30701   00A42C  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 30702   00A42E  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 30703                           
 30704                           ;../event_consumerDualActionQueue.c: 442:         if (index >= 8) {
 30705   00A430  0E07               	movlw	7
 30706   00A432  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 30707   00A434  D002               	goto	l541
 30708                           
 30709                           ; BSR set to: 0
 30710                           ;../event_consumerDualActionQueue.c: 443:             index -= 8;
 30711   00A436  0E08               	movlw	8
 30712   00A438  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30713   00A43A                     l541:
 30714                           
 30715                           ; BSR set to: 0
 30716                           ;../event_consumerDualActionQueue.c: 445:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 30717   00A43A  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 30718   00A43C  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30719   00A43E  B4D8               	btfsc	status,2,c
 30720   00A440  D7F3               	goto	u20760
 30721                           
 30722                           ; BSR set to: 0
 30723                           ;../event_consumerDualActionQueue.c: 446:         return expeditedQueueBuf[index];
 30724   00A442  0EF4               	movlw	low _expeditedQueueBuf
 30725   00A444  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 30726   00A446  6ED9               	movwf	fsr2l,c
 30727   00A448  6ADA               	clrf	fsr2h,c
 30728   00A44A  0E02               	movlw	high _expeditedQueueBuf
 30729   00A44C  22DA               	addwfc	fsr2h,f,c
 30730   00A44E  50DF               	movf	indf2,w,c
 30731   00A450  0012               	return	
 30732   00A452                     l20219:
 30733                           
 30734                           ; BSR set to: 0
 30735                           ;../event_consumerDualActionQueue.c: 448:     index -= qty;
 30736   00A452  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30737   00A454  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30738                           
 30739                           ;../event_consumerDualActionQueue.c: 449:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 30740   00A456  51CF               	movf	_normalReadIndex& (0+255),w,b
 30741   00A458  5DCE               	subwf	_normalWriteIndex& (0+255),w,b
 30742   00A45A  0B3F               	andlw	63
 30743   00A45C  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 30744                           
 30745                           ;../event_consumerDualActionQueue.c: 450:     if (index < qty) {
 30746   00A45E  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30747   00A460  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 30748   00A462  B0D8               	btfsc	status,0,c
 30749   00A464  D7E1               	goto	u20760
 30750                           
 30751                           ; BSR set to: 0
 30752                           ;../event_consumerDualActionQueue.c: 451:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 30753   00A466  51CE               	movf	_normalWriteIndex& (0+255),w,b
 30754   00A468  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 30755   00A46A  B4D8               	btfsc	status,2,c
 30756   00A46C  D7DD               	goto	u20760
 30757                           
 30758                           ; BSR set to: 0
 30759                           ;../event_consumerDualActionQueue.c: 452:         index += normalReadIndex;
 30760   00A46E  51CF               	movf	_normalReadIndex& (0+255),w,b
 30761   00A470  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 30762                           
 30763                           ;../event_consumerDualActionQueue.c: 453:         if (index >= 64) {
 30764   00A472  0E3F               	movlw	63
 30765   00A474  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 30766   00A476  D002               	goto	l545
 30767                           
 30768                           ; BSR set to: 0
 30769                           ;../event_consumerDualActionQueue.c: 454:             index -= 64;
 30770   00A478  0E40               	movlw	64
 30771   00A47A  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30772   00A47C                     l545:
 30773                           
 30774                           ; BSR set to: 0
 30775                           ;../event_consumerDualActionQueue.c: 456:         if (index == normalWriteIndex) return 
      +                          0;
 30776   00A47C  51CE               	movf	_normalWriteIndex& (0+255),w,b
 30777   00A47E  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30778   00A480  B4D8               	btfsc	status,2,c
 30779   00A482  D7D2               	goto	u20760
 30780                           
 30781                           ; BSR set to: 0
 30782                           ;../event_consumerDualActionQueue.c: 457:         return normalQueueBuf[index];
 30783   00A484  0E87               	movlw	low _normalQueueBuf
 30784   00A486  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 30785   00A488  6ED9               	movwf	fsr2l,c
 30786   00A48A  6ADA               	clrf	fsr2h,c
 30787   00A48C  0E03               	movlw	high _normalQueueBuf
 30788   00A48E  22DA               	addwfc	fsr2h,f,c
 30789   00A490  50DF               	movf	indf2,w,c
 30790                           
 30791                           ; BSR set to: 0
 30792   00A492  0012               	return		;funcret
 30793   00A494                     __end_of_peekTwoActionQueue:
 30794                           	callstack 0
 30795                           
 30796 ;; *************** function _finaliseOutput *****************
 30797 ;; Defined at:
 30798 ;;		line 253 in file "../outputs.c"
 30799 ;; Parameters:    Size  Location     Type
 30800 ;;  io              1    wreg     unsigned char 
 30801 ;;  type            1   45[BANK0 ] unsigned char 
 30802 ;; Auto vars:     Size  Location     Type
 30803 ;;  io              1    0[COMRAM] unsigned char 
 30804 ;; Return value:  Size  Location     Type
 30805 ;;                  1    wreg      void 
 30806 ;; Registers used:
 30807 ;;		wreg, status,2, status,0
 30808 ;; Tracked objects:
 30809 ;;		On entry : 0/0
 30810 ;;		On exit  : 0/0
 30811 ;;		Unchanged: 0/0
 30812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30813 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30816 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30817 ;;Total ram usage:        1 bytes
 30818 ;; Hardware stack levels used: 1
 30819 ;; Hardware stack levels required when called: 12
 30820 ;; This function calls:
 30821 ;;		Nothing
 30822 ;; This function is called by:
 30823 ;;		_processActions
 30824 ;; This function uses a non-reentrant model
 30825 ;;
 30826                           
 30827                           	psect	text115
 30828   00C3AE                     __ptext115:
 30829                           	callstack 0
 30830   00C3AE                     _finaliseOutput:
 30831                           	callstack 16
 30832                           
 30833                           ;../outputs.c: 254:     switch(type) {
 30834                           
 30835                           ; BSR set to: 0
 30836                           ;incstack = 0
 30837   00C3AE  0100               	movlb	0	; () banked
 30838   00C3B0  518D               	movf	finaliseOutput@type& (0+255),w,b
 30839                           
 30840                           ; Switch size 1, requested type "simple"
 30841                           ; Number of cases is 1, Range of values is 1 to 1
 30842                           ; switch strategies available:
 30843                           ; Name         Instructions Cycles
 30844                           ; simple_byte            4     3 (average)
 30845                           ;	Chosen strategy is simple_byte
 30846   00C3B2  0A01               	xorlw	1	; case 1
 30847   00C3B4  0012               	return	
 30848   00C3B6                     __end_of_finaliseOutput:
 30849                           	callstack 0
 30850                           
 30851 ;; *************** function _doWait *****************
 30852 ;; Defined at:
 30853 ;;		line 337 in file "../universalEvents.c"
 30854 ;; Parameters:    Size  Location     Type
 30855 ;;  duration        2   61[BANK0 ] unsigned short 
 30856 ;; Auto vars:     Size  Location     Type
 30857 ;;		None
 30858 ;; Return value:  Size  Location     Type
 30859 ;;                  1    wreg      void 
 30860 ;; Registers used:
 30861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30862 ;; Tracked objects:
 30863 ;;		On entry : 0/0
 30864 ;;		On exit  : 0/0
 30865 ;;		Unchanged: 0/0
 30866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30867 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30869 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30870 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30871 ;;Total ram usage:        6 bytes
 30872 ;; Hardware stack levels used: 1
 30873 ;; Hardware stack levels required when called: 14
 30874 ;; This function calls:
 30875 ;;		___lmul
 30876 ;;		_doneTwoAction
 30877 ;;		_tickGet
 30878 ;; This function is called by:
 30879 ;;		_processActions
 30880 ;; This function uses a non-reentrant model
 30881 ;;
 30882                           
 30883                           	psect	text116
 30884   00A37E                     __ptext116:
 30885                           	callstack 0
 30886   00A37E                     _doWait:
 30887                           	callstack 14
 30888                           
 30889                           ;../universalEvents.c: 339:     if (startWait.val == 0) {
 30890                           
 30891                           ; BSR set to: 0
 30892                           ;incstack = 0
 30893   00A37E  5037               	movf	_startWait^0,w,c
 30894   00A380  1038               	iorwf	(_startWait+1)^0,w,c
 30895   00A382  1039               	iorwf	(_startWait+2)^0,w,c
 30896   00A384  103A               	iorwf	(_startWait+3)^0,w,c
 30897   00A386  A4D8               	btfss	status,2,c
 30898   00A388  D00B               	goto	l21095
 30899                           
 30900                           ;../universalEvents.c: 340:         startWait.val = tickGet();
 30901   00A38A  ECD6  F059         	call	_tickGet	;wreg free
 30902   00A38E  C08D  F037         	movff	?_tickGet,_startWait
 30903   00A392  C08E  F038         	movff	?_tickGet+1,_startWait+1
 30904   00A396  C08F  F039         	movff	?_tickGet+2,_startWait+2
 30905   00A39A  C090  F03A         	movff	?_tickGet+3,_startWait+3
 30906   00A39E  0012               	return	
 30907   00A3A0                     l21095:
 30908                           
 30909                           ;../universalEvents.c: 344:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 30910   00A3A0  ECD6  F059         	call	_tickGet	;wreg free
 30911   00A3A4  5037               	movf	_startWait^0,w,c
 30912   00A3A6  0100               	movlb	0	; () banked
 30913   00A3A8  5D8D               	subwf	?_tickGet& (0+255),w,b
 30914   00A3AA  6F9F               	movwf	??_doWait& (0+255),b
 30915   00A3AC  5038               	movf	(_startWait+1)^0,w,c
 30916   00A3AE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 30917   00A3B0  6FA0               	movwf	(??_doWait+1)& (0+255),b
 30918   00A3B2  5039               	movf	(_startWait+2)^0,w,c
 30919   00A3B4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 30920   00A3B6  6FA1               	movwf	(??_doWait+2)& (0+255),b
 30921   00A3B8  503A               	movf	(_startWait+3)^0,w,c
 30922   00A3BA  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 30923   00A3BC  6FA2               	movwf	(??_doWait+3)& (0+255),b
 30924   00A3BE  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 30925   00A3C2  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 30926   00A3C6  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 30927   00A3C8  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 30928   00A3CA  0E6A               	movlw	106
 30929   00A3CC  6F95               	movwf	___lmul@multiplicand& (0+255),b
 30930   00A3CE  0E18               	movlw	24
 30931   00A3D0  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30932   00A3D2  0E00               	movlw	0
 30933   00A3D4  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30934   00A3D6  0E00               	movlw	0
 30935   00A3D8  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30936   00A3DA  EC02  F05A         	call	___lmul	;wreg free
 30937   00A3DE  0100               	movlb	0	; () banked
 30938   00A3E0  519F               	movf	??_doWait& (0+255),w,b
 30939   00A3E2  5D91               	subwf	?___lmul& (0+255),w,b
 30940   00A3E4  51A0               	movf	(??_doWait+1)& (0+255),w,b
 30941   00A3E6  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 30942   00A3E8  51A1               	movf	(??_doWait+2)& (0+255),w,b
 30943   00A3EA  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 30944   00A3EC  51A2               	movf	(??_doWait+3)& (0+255),w,b
 30945   00A3EE  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 30946   00A3F0  B0D8               	btfsc	status,0,c
 30947   00A3F2  0012               	return	
 30948                           
 30949                           ; BSR set to: 0
 30950                           ;../universalEvents.c: 345:             doneTwoAction();
 30951   00A3F4  ECE4  F061         	call	_doneTwoAction	;wreg free
 30952                           
 30953                           ;../universalEvents.c: 346:             startWait.val = 0;
 30954   00A3F8  0E00               	movlw	0
 30955   00A3FA  6E37               	movwf	_startWait^0,c
 30956   00A3FC  0E00               	movlw	0
 30957   00A3FE  6E38               	movwf	(_startWait+1)^0,c
 30958   00A400  0E00               	movlw	0
 30959   00A402  6E39               	movwf	(_startWait+2)^0,c
 30960   00A404  0E00               	movlw	0
 30961   00A406  6E3A               	movwf	(_startWait+3)^0,c
 30962   00A408  0012               	return		;funcret
 30963   00A40A                     __end_of_doWait:
 30964                           	callstack 0
 30965                           
 30966 ;; *************** function _doneTwoAction *****************
 30967 ;; Defined at:
 30968 ;;		line 427 in file "../event_consumerDualActionQueue.c"
 30969 ;; Parameters:    Size  Location     Type
 30970 ;;		None
 30971 ;; Auto vars:     Size  Location     Type
 30972 ;;		None
 30973 ;; Return value:  Size  Location     Type
 30974 ;;                  1    wreg      void 
 30975 ;; Registers used:
 30976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30977 ;; Tracked objects:
 30978 ;;		On entry : 0/0
 30979 ;;		On exit  : 0/0
 30980 ;;		Unchanged: 0/0
 30981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30986 ;;Total ram usage:        0 bytes
 30987 ;; Hardware stack levels used: 1
 30988 ;; Hardware stack levels required when called: 13
 30989 ;; This function calls:
 30990 ;;		_popTwoAction
 30991 ;; This function is called by:
 30992 ;;		_processActions
 30993 ;;		_doWait
 30994 ;; This function uses a non-reentrant model
 30995 ;;
 30996                           
 30997                           	psect	text117
 30998   00C3C8                     __ptext117:
 30999                           	callstack 0
 31000   00C3C8                     _doneTwoAction:
 31001                           	callstack 15
 31002                           
 31003                           ;../event_consumerDualActionQueue.c: 428:  popTwoAction();
 31004                           
 31005                           ;incstack = 0
 31006   00C3C8  EC4D  F05F         	call	_popTwoAction	;wreg free
 31007   00C3CC  0012               	return		;funcret
 31008   00C3CE                     __end_of_doneTwoAction:
 31009                           	callstack 0
 31010                           
 31011 ;; *************** function _popTwoAction *****************
 31012 ;; Defined at:
 31013 ;;		line 406 in file "../event_consumerDualActionQueue.c"
 31014 ;; Parameters:    Size  Location     Type
 31015 ;;		None
 31016 ;; Auto vars:     Size  Location     Type
 31017 ;;  ret             1    0        unsigned char 
 31018 ;; Return value:  Size  Location     Type
 31019 ;;                  1    wreg      unsigned char 
 31020 ;; Registers used:
 31021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31022 ;; Tracked objects:
 31023 ;;		On entry : 0/0
 31024 ;;		On exit  : 0/0
 31025 ;;		Unchanged: 0/0
 31026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31031 ;;Total ram usage:        0 bytes
 31032 ;; Hardware stack levels used: 1
 31033 ;; Hardware stack levels required when called: 12
 31034 ;; This function calls:
 31035 ;;		Nothing
 31036 ;; This function is called by:
 31037 ;;		_doneTwoAction
 31038 ;; This function uses a non-reentrant model
 31039 ;;
 31040                           
 31041                           	psect	text118
 31042   00BE9A                     __ptext118:
 31043                           	callstack 0
 31044   00BE9A                     _popTwoAction:
 31045                           	callstack 15
 31046                           
 31047                           ;../event_consumerDualActionQueue.c: 407:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 409:  if (expeditedWriteIndex != expeditedReadIndex) {
 31048                           
 31049                           ;incstack = 0
 31050   00BE9A  0100               	movlb	0	; () banked
 31051   00BE9C  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31052   00BE9E  19CC               	xorwf	_expeditedWriteIndex& (0+255),w,b
 31053   00BEA0  B4D8               	btfsc	status,2,c
 31054   00BEA2  D007               	goto	l19677
 31055                           
 31056                           ; BSR set to: 0
 31057                           
 31058                           ; BSR set to: 0
 31059   00BEA4  2BCD               	incf	_expeditedReadIndex& (0+255),f,b
 31060                           
 31061                           ; BSR set to: 0
 31062                           ;../event_consumerDualActionQueue.c: 412:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 31063   00BEA6  0E07               	movlw	7
 31064   00BEA8  65CD               	cpfsgt	_expeditedReadIndex& (0+255),b
 31065   00BEAA  0012               	return	
 31066                           
 31067                           ; BSR set to: 0
 31068   00BEAC  0E00               	movlw	0
 31069   00BEAE  6FCD               	movwf	_expeditedReadIndex& (0+255),b
 31070   00BEB0  0012               	return	
 31071   00BEB2                     l19677:
 31072                           
 31073                           ; BSR set to: 0
 31074                           ;../event_consumerDualActionQueue.c: 416:  if (normalWriteIndex == normalReadIndex) {
 31075   00BEB2  51CF               	movf	_normalReadIndex& (0+255),w,b
 31076   00BEB4  19CE               	xorwf	_normalWriteIndex& (0+255),w,b
 31077   00BEB6  B4D8               	btfsc	status,2,c
 31078   00BEB8  0012               	return	
 31079                           
 31080                           ; BSR set to: 0
 31081                           
 31082                           ; BSR set to: 0
 31083   00BEBA  2BCF               	incf	_normalReadIndex& (0+255),f,b
 31084                           
 31085                           ; BSR set to: 0
 31086                           ;../event_consumerDualActionQueue.c: 420:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 31087   00BEBC  0E3F               	movlw	63
 31088   00BEBE  65CF               	cpfsgt	_normalReadIndex& (0+255),b
 31089   00BEC0  0012               	return	
 31090                           
 31091                           ; BSR set to: 0
 31092   00BEC2  0E00               	movlw	0
 31093   00BEC4  6FCF               	movwf	_normalReadIndex& (0+255),b
 31094                           
 31095                           ; BSR set to: 0
 31096   00BEC6  0012               	return		;funcret
 31097   00BEC8                     __end_of_popTwoAction:
 31098                           	callstack 0
 31099                           
 31100 ;; *************** function _doSOD *****************
 31101 ;; Defined at:
 31102 ;;		line 387 in file "../universalEvents.c"
 31103 ;; Parameters:    Size  Location     Type
 31104 ;;		None
 31105 ;; Auto vars:     Size  Location     Type
 31106 ;;		None
 31107 ;; Return value:  Size  Location     Type
 31108 ;;                  1    wreg      void 
 31109 ;; Registers used:
 31110 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31111 ;; Tracked objects:
 31112 ;;		On entry : 0/0
 31113 ;;		On exit  : 0/0
 31114 ;;		Unchanged: 0/0
 31115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31120 ;;Total ram usage:        0 bytes
 31121 ;; Hardware stack levels used: 1
 31122 ;; Hardware stack levels required when called: 13
 31123 ;; This function calls:
 31124 ;;		_findServiceIndex
 31125 ;;		_startTimedResponse
 31126 ;; This function is called by:
 31127 ;;		_processActions
 31128 ;; This function uses a non-reentrant model
 31129 ;;
 31130                           
 31131                           	psect	text119
 31132   00C290                     __ptext119:
 31133                           	callstack 0
 31134   00C290                     _doSOD:
 31135                           	callstack 15
 31136                           
 31137                           ;../universalEvents.c: 388:     startTimedResponse(1, findServiceIndex(SERVICE_ID_PRODUC
      +                          ER), sodTRCallback);
 31138                           
 31139                           ; BSR set to: 0
 31140                           ;incstack = 0
 31141   00C290  0E05               	movlw	5
 31142   00C292  ECB4  F055         	call	_findServiceIndex
 31143   00C296  0100               	movlb	0	; () banked
 31144   00C298  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 31145   00C29A  0EC2               	movlw	low _sodTRCallback
 31146   00C29C  6F92               	movwf	startTimedResponse@callback& (0+255),b
 31147   00C29E  0E81               	movlw	high _sodTRCallback
 31148   00C2A0  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 31149   00C2A2  0E01               	movlw	1
 31150   00C2A4  ECE3  F05C         	call	_startTimedResponse
 31151   00C2A8  0012               	return		;funcret
 31152   00C2AA                     __end_of_doSOD:
 31153                           	callstack 0
 31154                           
 31155 ;; *************** function _startTimedResponse *****************
 31156 ;; Defined at:
 31157 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 31158 ;; Parameters:    Size  Location     Type
 31159 ;;  type            1    wreg     unsigned char 
 31160 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 31161 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 31162 ;;		 -> reqevCallback(1), nerdCallback(1), nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), 
 31163 ;;		 -> mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), sodTRCallback(1), 
 31164 ;; Auto vars:     Size  Location     Type
 31165 ;;  type            1   52[BANK0 ] unsigned char 
 31166 ;; Return value:  Size  Location     Type
 31167 ;;                  1    wreg      void 
 31168 ;; Registers used:
 31169 ;;		wreg, status,2, status,0
 31170 ;; Tracked objects:
 31171 ;;		On entry : 0/0
 31172 ;;		On exit  : 0/0
 31173 ;;		Unchanged: 0/0
 31174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31175 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31178 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31179 ;;Total ram usage:        4 bytes
 31180 ;; Hardware stack levels used: 1
 31181 ;; Hardware stack levels required when called: 12
 31182 ;; This function calls:
 31183 ;;		Nothing
 31184 ;; This function is called by:
 31185 ;;		_doSOD
 31186 ;;		_mnsProcessMessage
 31187 ;;		_nvProcessMessage
 31188 ;;		_doNerd
 31189 ;;		_doReqev
 31190 ;; This function uses a non-reentrant model
 31191 ;;
 31192                           
 31193                           	psect	text120
 31194   00B9C6                     __ptext120:
 31195                           	callstack 0
 31196   00B9C6                     _startTimedResponse:
 31197                           	callstack 15
 31198                           
 31199                           ;incstack = 0
 31200                           ;startTimedResponse@type stored from wreg
 31201   00B9C6  0100               	movlb	0	; () banked
 31202   00B9C8  6F94               	movwf	startTimedResponse@type& (0+255),b
 31203                           
 31204                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 31205   00B9CA  C094  F0C5         	movff	startTimedResponse@type,_timedResponseType
 31206                           
 31207                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 31208   00B9CE  0100               	movlb	0	; () banked
 31209   00B9D0  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31210   00B9D2  A4D8               	btfss	status,2,c
 31211   00B9D4  D004               	goto	l20289
 31212                           
 31213                           ; BSR set to: 0
 31214                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 31215   00B9D6  0E01               	movlw	1
 31216   00B9D8  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31217                           
 31218                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 31219   00B9DA  0E00               	movlw	0
 31220   00B9DC  D00B               	goto	L13
 31221   00B9DE                     l20289:
 31222                           
 31223                           ; BSR set to: 0
 31224                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 31225   00B9DE  0E00               	movlw	0
 31226   00B9E0  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31227                           
 31228                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 31229   00B9E2  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31230   00B9E4  B4D8               	btfsc	status,2,c
 31231   00B9E6  D003               	goto	u20930
 31232                           
 31233                           ; BSR set to: 0
 31234   00B9E8  0E09               	movlw	9
 31235   00B9EA  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 31236   00B9EC  D002               	goto	l20293
 31237   00B9EE                     u20930:
 31238                           
 31239                           ; BSR set to: 0
 31240                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 31241   00B9EE  69C5               	setf	_timedResponseType& (0+255),b
 31242                           
 31243                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 31244   00B9F0  0012               	return	
 31245   00B9F2                     l20293:
 31246                           
 31247                           ; BSR set to: 0
 31248                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 31249   00B9F2  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 31250   00B9F4                     L13:
 31251   00B9F4  6FC6               	movwf	_timedResponseServiceIndex& (0+255),b
 31252                           
 31253                           ; BSR set to: 0
 31254                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 31255   00B9F6  0E00               	movlw	0
 31256   00B9F8  6E43               	movwf	_timedResponseStep^0,c
 31257                           
 31258                           ; BSR set to: 0
 31259                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 31260   00B9FA  C092  F03F         	movff	startTimedResponse@callback,_timedResponseCallback
 31261   00B9FE  C093  F040         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 31262                           
 31263                           ; BSR set to: 0
 31264   00BA02  0012               	return		;funcret
 31265   00BA04                     __end_of_startTimedResponse:
 31266                           	callstack 0
 31267                           
 31268 ;; *************** function _findServiceIndex *****************
 31269 ;; Defined at:
 31270 ;;		line 822 in file "../../VLCBlib_PIC/vlcb.c"
 31271 ;; Parameters:    Size  Location     Type
 31272 ;;  serviceType     1    wreg     unsigned char 
 31273 ;; Auto vars:     Size  Location     Type
 31274 ;;  serviceType     1   47[BANK0 ] unsigned char 
 31275 ;;  i               1   48[BANK0 ] unsigned char 
 31276 ;; Return value:  Size  Location     Type
 31277 ;;                  1    wreg      unsigned char 
 31278 ;; Registers used:
 31279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 31280 ;; Tracked objects:
 31281 ;;		On entry : 0/0
 31282 ;;		On exit  : 0/0
 31283 ;;		Unchanged: 0/0
 31284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31286 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31287 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31288 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31289 ;;Total ram usage:        4 bytes
 31290 ;; Hardware stack levels used: 1
 31291 ;; Hardware stack levels required when called: 12
 31292 ;; This function calls:
 31293 ;;		Nothing
 31294 ;; This function is called by:
 31295 ;;		_doSOD
 31296 ;;		_mnsProcessMessage
 31297 ;;		_nvProcessMessage
 31298 ;;		_doNerd
 31299 ;;		_doReqev
 31300 ;; This function uses a non-reentrant model
 31301 ;;
 31302                           
 31303                           	psect	text121
 31304   00AB68                     __ptext121:
 31305                           	callstack 0
 31306   00AB68                     _findServiceIndex:
 31307                           	callstack 15
 31308                           
 31309                           ; BSR set to: 0
 31310                           ;incstack = 0
 31311                           ;findServiceIndex@serviceType stored from wreg
 31312   00AB68  0100               	movlb	0	; () banked
 31313   00AB6A  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 31314                           
 31315                           ;../../VLCBlib_PIC/vlcb.c: 823:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 824:     for (i
      +                          =0; i<9; i++) {
 31316   00AB6C  0E00               	movlw	0
 31317   00AB6E  0100               	movlb	0	; () banked
 31318   00AB70  6F90               	movwf	findServiceIndex@i& (0+255),b
 31319   00AB72                     l20267:
 31320                           
 31321                           ; BSR set to: 0
 31322                           ;../../VLCBlib_PIC/vlcb.c: 825:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 31323   00AB72  5190               	movf	findServiceIndex@i& (0+255),w,b
 31324   00AB74  0D02               	mullw	2
 31325   00AB76  0E75               	movlw	low _services
 31326   00AB78  24F3               	addwf	243,w,c
 31327   00AB7A  6EF6               	movwf	tblptrl,c
 31328   00AB7C  0EEE               	movlw	high _services
 31329   00AB7E  20F4               	addwfc	244,w,c
 31330   00AB80  6EF7               	movwf	tblptrh,c
 31331   00AB82                     	if	1	;There are 3 active tblptr bytes
 31332   00AB82  6AF8               	clrf	tblptru,c
 31333   00AB84  0E00               	movlw	low (__mediumconst shr (0+16))
 31334   00AB86  22F8               	addwfc	tblptru,f,c
 31335   00AB88                     	endif
 31336   00AB88  0009               	tblrd		*+
 31337   00AB8A  50F5               	movf	tablat,w,c
 31338   00AB8C  0009               	tblrd		*+
 31339   00AB8E  10F5               	iorwf	tablat,w,c
 31340   00AB90  B4D8               	btfsc	status,2,c
 31341   00AB92  D01D               	goto	l20275
 31342                           
 31343                           ; BSR set to: 0
 31344   00AB94  5190               	movf	findServiceIndex@i& (0+255),w,b
 31345   00AB96  0D02               	mullw	2
 31346   00AB98  0E75               	movlw	low _services
 31347   00AB9A  24F3               	addwf	243,w,c
 31348   00AB9C  6EF6               	movwf	tblptrl,c
 31349   00AB9E  0EEE               	movlw	high _services
 31350   00ABA0  20F4               	addwfc	244,w,c
 31351   00ABA2  6EF7               	movwf	tblptrh,c
 31352   00ABA4                     	if	1	;There are 3 active tblptr bytes
 31353   00ABA4  6AF8               	clrf	tblptru,c
 31354   00ABA6  0E00               	movlw	low (__mediumconst shr (0+16))
 31355   00ABA8  22F8               	addwfc	tblptru,f,c
 31356   00ABAA                     	endif
 31357   00ABAA  0009               	tblrd		*+
 31358   00ABAC  CFF5 F08D          	movff	tablat,??_findServiceIndex
 31359   00ABB0  0009               	tblrd		*+
 31360   00ABB2  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 31361   00ABB6  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 31362   00ABBA  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 31363   00ABBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31364   00ABBE  6AF8               	clrf	tblptru,c
 31365   00ABC0                     	endif
 31366   00ABC0                     	if	0	;tblptru may be non-zero
 31367   00ABC0                     	endif
 31368   00ABC0  0008               	tblrd		*
 31369   00ABC2  50F5               	movf	tablat,w,c
 31370   00ABC4  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 31371   00ABC6  A4D8               	btfss	status,2,c
 31372   00ABC8  D002               	goto	l20275
 31373                           
 31374                           ; BSR set to: 0
 31375                           ;../../VLCBlib_PIC/vlcb.c: 826:             return i;
 31376   00ABCA  5190               	movf	findServiceIndex@i& (0+255),w,b
 31377   00ABCC  0012               	return	
 31378   00ABCE                     l20275:
 31379                           
 31380                           ; BSR set to: 0
 31381                           ;../../VLCBlib_PIC/vlcb.c: 828:     }
 31382   00ABCE  2B90               	incf	findServiceIndex@i& (0+255),f,b
 31383                           
 31384                           ; BSR set to: 0
 31385   00ABD0  0E08               	movlw	8
 31386   00ABD2  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 31387   00ABD4  D7CE               	goto	l20267
 31388                           
 31389                           ; BSR set to: 0
 31390                           ;../../VLCBlib_PIC/vlcb.c: 829:     return 0xFF;
 31391   00ABD6  0EFF               	movlw	255
 31392                           
 31393                           ; BSR set to: 0
 31394   00ABD8  0012               	return		;funcret
 31395   00ABDA                     __end_of_findServiceIndex:
 31396                           	callstack 0
 31397                           
 31398 ;; *************** function _deleteTwoActionQueue *****************
 31399 ;; Defined at:
 31400 ;;		line 466 in file "../event_consumerDualActionQueue.c"
 31401 ;; Parameters:    Size  Location     Type
 31402 ;;  index           1    wreg     unsigned char 
 31403 ;; Auto vars:     Size  Location     Type
 31404 ;;  index           1   46[BANK0 ] unsigned char 
 31405 ;;  qty             1   45[BANK0 ] unsigned char 
 31406 ;; Return value:  Size  Location     Type
 31407 ;;                  1    wreg      void 
 31408 ;; Registers used:
 31409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31410 ;; Tracked objects:
 31411 ;;		On entry : 0/0
 31412 ;;		On exit  : 0/0
 31413 ;;		Unchanged: 0/0
 31414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31419 ;;Total ram usage:        2 bytes
 31420 ;; Hardware stack levels used: 1
 31421 ;; Hardware stack levels required when called: 12
 31422 ;; This function calls:
 31423 ;;		Nothing
 31424 ;; This function is called by:
 31425 ;;		_processActions
 31426 ;; This function uses a non-reentrant model
 31427 ;;
 31428                           
 31429                           	psect	text122
 31430   00A724                     __ptext122:
 31431                           	callstack 0
 31432   00A724                     _deleteTwoActionQueue:
 31433                           	callstack 16
 31434                           
 31435                           ; BSR set to: 0
 31436                           ;incstack = 0
 31437                           ;deleteTwoActionQueue@index stored from wreg
 31438   00A724  0100               	movlb	0	; () banked
 31439   00A726  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 31440                           
 31441                           ;../event_consumerDualActionQueue.c: 467:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 468:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31442   00A728  0100               	movlb	0	; () banked
 31443   00A72A  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31444   00A72C  5DCC               	subwf	_expeditedWriteIndex& (0+255),w,b
 31445   00A72E  0B07               	andlw	7
 31446   00A730  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31447                           
 31448                           ;../event_consumerDualActionQueue.c: 469:     if (index < qty) {
 31449   00A732  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31450   00A734  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31451   00A736  B0D8               	btfsc	status,0,c
 31452   00A738  D013               	goto	l21069
 31453                           
 31454                           ; BSR set to: 0
 31455                           ;../event_consumerDualActionQueue.c: 470:         index += expeditedReadIndex;
 31456   00A73A  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31457   00A73C  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31458                           
 31459                           ;../event_consumerDualActionQueue.c: 471:         if (index >= 8) {
 31460   00A73E  0E07               	movlw	7
 31461   00A740  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31462   00A742  D002               	goto	l550
 31463                           
 31464                           ; BSR set to: 0
 31465                           ;../event_consumerDualActionQueue.c: 472:             index -= 8;
 31466   00A744  0E08               	movlw	8
 31467   00A746  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31468   00A748                     l550:
 31469                           
 31470                           ; BSR set to: 0
 31471                           ;../event_consumerDualActionQueue.c: 474:         if (index == expeditedWriteIndex) retu
      +                          rn;
 31472   00A748  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 31473   00A74A  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31474   00A74C  B4D8               	btfsc	status,2,c
 31475   00A74E  0012               	return	
 31476                           
 31477                           ; BSR set to: 0
 31478                           ;../event_consumerDualActionQueue.c: 475:         expeditedQueueBuf[index] = 0;
 31479   00A750  0EF4               	movlw	low _expeditedQueueBuf
 31480   00A752  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31481   00A754  6ED9               	movwf	fsr2l,c
 31482   00A756  6ADA               	clrf	fsr2h,c
 31483   00A758  0E02               	movlw	high _expeditedQueueBuf
 31484   00A75A  22DA               	addwfc	fsr2h,f,c
 31485   00A75C  6ADF               	clrf	indf2,c
 31486   00A75E  0012               	return	
 31487   00A760                     l21069:
 31488                           
 31489                           ; BSR set to: 0
 31490                           ;../event_consumerDualActionQueue.c: 478:     index -= qty;
 31491   00A760  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31492   00A762  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31493                           
 31494                           ;../event_consumerDualActionQueue.c: 479:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31495   00A764  51CF               	movf	_normalReadIndex& (0+255),w,b
 31496   00A766  5DCE               	subwf	_normalWriteIndex& (0+255),w,b
 31497   00A768  0B3F               	andlw	63
 31498   00A76A  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31499                           
 31500                           ;../event_consumerDualActionQueue.c: 480:     if (index < qty) {
 31501   00A76C  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31502   00A76E  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31503   00A770  B0D8               	btfsc	status,0,c
 31504   00A772  0012               	return	
 31505                           
 31506                           ; BSR set to: 0
 31507                           ;../event_consumerDualActionQueue.c: 481:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 31508   00A774  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31509   00A776  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 31510   00A778  B4D8               	btfsc	status,2,c
 31511   00A77A  0012               	return	
 31512                           
 31513                           ; BSR set to: 0
 31514                           ;../event_consumerDualActionQueue.c: 482:         index += normalReadIndex;
 31515   00A77C  51CF               	movf	_normalReadIndex& (0+255),w,b
 31516   00A77E  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31517                           
 31518                           ;../event_consumerDualActionQueue.c: 483:         if (index >= 64) {
 31519   00A780  0E3F               	movlw	63
 31520   00A782  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31521   00A784  D002               	goto	l555
 31522                           
 31523                           ; BSR set to: 0
 31524                           ;../event_consumerDualActionQueue.c: 484:             index -= 64;
 31525   00A786  0E40               	movlw	64
 31526   00A788  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31527   00A78A                     l555:
 31528                           
 31529                           ; BSR set to: 0
 31530                           ;../event_consumerDualActionQueue.c: 486:         if (index == normalWriteIndex) return;
 31531   00A78A  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31532   00A78C  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31533   00A78E  B4D8               	btfsc	status,2,c
 31534   00A790  0012               	return	
 31535                           
 31536                           ; BSR set to: 0
 31537                           ;../event_consumerDualActionQueue.c: 487:         normalQueueBuf[index] = 0;
 31538   00A792  0E87               	movlw	low _normalQueueBuf
 31539   00A794  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31540   00A796  6ED9               	movwf	fsr2l,c
 31541   00A798  6ADA               	clrf	fsr2h,c
 31542   00A79A  0E03               	movlw	high _normalQueueBuf
 31543   00A79C  22DA               	addwfc	fsr2h,f,c
 31544   00A79E  6ADF               	clrf	indf2,c
 31545                           
 31546                           ; BSR set to: 0
 31547   00A7A0  0012               	return		;funcret
 31548   00A7A2                     __end_of_deleteTwoActionQueue:
 31549                           	callstack 0
 31550                           
 31551 ;; *************** function _completed *****************
 31552 ;; Defined at:
 31553 ;;		line 219 in file "../outputs.c"
 31554 ;; Parameters:    Size  Location     Type
 31555 ;;  io              1    wreg     unsigned char 
 31556 ;;  action          1   45[BANK0 ] unsigned char 
 31557 ;;  type            1   46[BANK0 ] unsigned char 
 31558 ;; Auto vars:     Size  Location     Type
 31559 ;;  io              1   50[BANK0 ] unsigned char 
 31560 ;; Return value:  Size  Location     Type
 31561 ;;                  1    wreg      enum E12761
 31562 ;; Registers used:
 31563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31564 ;; Tracked objects:
 31565 ;;		On entry : 0/0
 31566 ;;		On exit  : 0/0
 31567 ;;		Unchanged: 0/0
 31568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31570 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31571 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31572 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31573 ;;Total ram usage:        6 bytes
 31574 ;; Hardware stack levels used: 1
 31575 ;; Hardware stack levels required when called: 12
 31576 ;; This function calls:
 31577 ;;		Nothing
 31578 ;; This function is called by:
 31579 ;;		_processActions
 31580 ;; This function uses a non-reentrant model
 31581 ;;
 31582                           
 31583                           	psect	text123
 31584   009F88                     __ptext123:
 31585                           	callstack 0
 31586   009F88                     _completed:
 31587                           	callstack 16
 31588                           
 31589                           ; BSR set to: 0
 31590                           ;incstack = 0
 31591                           ;completed@io stored from wreg
 31592   009F88  0100               	movlb	0	; () banked
 31593   009F8A  6F92               	movwf	completed@io& (0+255),b
 31594                           
 31595                           ;../outputs.c: 220:     switch(type) {
 31596   009F8C  D035               	goto	l21195
 31597   009F8E                     l21173:
 31598                           
 31599                           ; BSR set to: 0
 31600                           ;../outputs.c: 223:             return TRUE;
 31601   009F8E  0E01               	movlw	1
 31602   009F90  0012               	return	
 31603   009F92                     l21177:
 31604                           
 31605                           ; BSR set to: 0
 31606                           ;../outputs.c: 226:             return pulseDelays[io] == 1;
 31607   009F92  0ED4               	movlw	low _pulseDelays
 31608   009F94  2592               	addwf	completed@io& (0+255),w,b
 31609   009F96  6ED9               	movwf	fsr2l,c
 31610   009F98  6ADA               	clrf	fsr2h,c
 31611   009F9A  0E02               	movlw	high _pulseDelays
 31612   009F9C  22DA               	addwfc	fsr2h,f,c
 31613   009F9E  04DE               	decf	postinc2,w,c
 31614   009FA0  A4D8               	btfss	status,2,c
 31615   009FA2  D002               	goto	u21940
 31616   009FA4  0E01               	movlw	1
 31617   009FA6  0012               	return	
 31618   009FA8                     u21940:
 31619   009FA8  0E00               	movlw	0
 31620   009FAA  0012               	return	
 31621   009FAC                     l21181:
 31622                           
 31623                           ; BSR set to: 0
 31624                           ;../outputs.c: 235:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 31625   009FAC  0E00               	movlw	0
 31626   009FAE  6F91               	movwf	_completed$1536& (0+255),b
 31627                           
 31628                           ; BSR set to: 0
 31629   009FB0  5192               	movf	completed@io& (0+255),w,b
 31630   009FB2  0FA9               	addlw	low _currentPos
 31631   009FB4  6ED9               	movwf	fsr2l,c
 31632   009FB6  6ADA               	clrf	fsr2h,c
 31633   009FB8  0E40               	movlw	low _targetPos
 31634   009FBA  2592               	addwf	completed@io& (0+255),w,b
 31635   009FBC  6EE1               	movwf	fsr1l,c
 31636   009FBE  6AE2               	clrf	fsr1h,c
 31637   009FC0  0E01               	movlw	high _targetPos
 31638   009FC2  22E2               	addwfc	fsr1h,f,c
 31639   009FC4  50DE               	movf	postinc2,w,c
 31640   009FC6  18E6               	xorwf	postinc1,w,c
 31641   009FC8  A4D8               	btfss	status,2,c
 31642   009FCA  D014               	goto	l911
 31643                           
 31644                           ; BSR set to: 0
 31645   009FCC  0E30               	movlw	low _servoState
 31646   009FCE  2592               	addwf	completed@io& (0+255),w,b
 31647   009FD0  6ED9               	movwf	fsr2l,c
 31648   009FD2  6ADA               	clrf	fsr2h,c
 31649   009FD4  0E01               	movlw	high _servoState
 31650   009FD6  22DA               	addwfc	fsr2h,f,c
 31651   009FD8  04DE               	decf	postinc2,w,c
 31652   009FDA  B4D8               	btfsc	status,2,c
 31653   009FDC  D009               	goto	u21980
 31654                           
 31655                           ; BSR set to: 0
 31656   009FDE  0E30               	movlw	low _servoState
 31657   009FE0  2592               	addwf	completed@io& (0+255),w,b
 31658   009FE2  6ED9               	movwf	fsr2l,c
 31659   009FE4  6ADA               	clrf	fsr2h,c
 31660   009FE6  0E01               	movlw	high _servoState
 31661   009FE8  22DA               	addwfc	fsr2h,f,c
 31662   009FEA  50DF               	movf	indf2,w,c
 31663   009FEC  A4D8               	btfss	status,2,c
 31664   009FEE  D002               	goto	l911
 31665   009FF0                     u21980:
 31666                           
 31667                           ; BSR set to: 0
 31668   009FF0  0E01               	movlw	1
 31669   009FF2  6F91               	movwf	_completed$1536& (0+255),b
 31670   009FF4                     l911:
 31671                           
 31672                           ; BSR set to: 0
 31673   009FF4  5191               	movf	_completed$1536& (0+255),w,b
 31674   009FF6  0012               	return	
 31675   009FF8                     l21195:
 31676   009FF8  0100               	movlb	0	; () banked
 31677   009FFA  518E               	movf	completed@type& (0+255),w,b
 31678                           
 31679                           ; Switch size 1, requested type "simple"
 31680                           ; Number of cases is 5, Range of values is 0 to 4
 31681                           ; switch strategies available:
 31682                           ; Name         Instructions Cycles
 31683                           ; simple_byte           16     9 (average)
 31684                           ;	Chosen strategy is simple_byte
 31685   009FFC  0A00               	xorlw	0	; case 0
 31686   009FFE  B4D8               	btfsc	status,2,c
 31687   00A000  D7C6               	goto	l21173
 31688   00A002  0A01               	xorlw	1	; case 1
 31689   00A004  B4D8               	btfsc	status,2,c
 31690   00A006  D7C5               	goto	l21177
 31691   00A008  0A03               	xorlw	3	; case 2
 31692   00A00A  B4D8               	btfsc	status,2,c
 31693   00A00C  D7CF               	goto	l21181
 31694   00A00E  0A01               	xorlw	1	; case 3
 31695   00A010  B4D8               	btfsc	status,2,c
 31696   00A012  D7CC               	goto	l21181
 31697   00A014  0A07               	xorlw	7	; case 4
 31698   00A016  B4D8               	btfsc	status,2,c
 31699   00A018  D7C9               	goto	l21181
 31700   00A01A  D7B9               	goto	l21173
 31701   00A01C                     __end_of_completed:
 31702                           	callstack 0
 31703                           
 31704 ;; *************** function _inputScan *****************
 31705 ;; Defined at:
 31706 ;;		line 101 in file "../inputs.c"
 31707 ;; Parameters:    Size  Location     Type
 31708 ;;		None
 31709 ;; Auto vars:     Size  Location     Type
 31710 ;;  change          1   19[BANK1 ] enum E12711
 31711 ;;  input           1   20[BANK1 ] unsigned char 
 31712 ;; Return value:  Size  Location     Type
 31713 ;;                  1    wreg      void 
 31714 ;; Registers used:
 31715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31716 ;; Tracked objects:
 31717 ;;		On entry : 0/0
 31718 ;;		On exit  : 0/0
 31719 ;;		Unchanged: 0/0
 31720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31722 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31723 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31724 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31725 ;;Total ram usage:        4 bytes
 31726 ;; Hardware stack levels used: 1
 31727 ;; Hardware stack levels required when called: 18
 31728 ;; This function calls:
 31729 ;;		_getNV
 31730 ;;		_readInput
 31731 ;;		_sendProducedEvent
 31732 ;;		_writeNVM
 31733 ;; This function is called by:
 31734 ;;		_loop
 31735 ;; This function uses a non-reentrant model
 31736 ;;
 31737                           
 31738                           	psect	text124
 31739   004924                     __ptext124:
 31740                           	callstack 0
 31741   004924                     _inputScan:
 31742                           	callstack 11
 31743                           
 31744                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 31745                           
 31746                           ; BSR set to: 0
 31747                           ;incstack = 0
 31748   004924  0E00               	movlw	0
 31749   004926  0100               	movlb	0	; () banked
 31750   004928  6FD0               	movwf	_io@inputs$F849& (0+255),b
 31751   00492A                     l22477:
 31752                           
 31753                           ; BSR set to: 0
 31754   00492A  0E0F               	movlw	15
 31755   00492C  65D0               	cpfsgt	_io@inputs$F849& (0+255),b
 31756   00492E  D001               	goto	l22481
 31757   004930  0012               	return	
 31758   004932                     l22481:
 31759                           
 31760                           ; BSR set to: 0
 31761                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 31762   004932  51D0               	movf	_io@inputs$F849& (0+255),w,b
 31763   004934  0D07               	mullw	7
 31764   004936  50F3               	movf	243,w,c
 31765   004938  0F10               	addlw	16
 31766   00493A  EC21  F05D         	call	_getNV
 31767   00493E  0100               	movlb	0	; () banked
 31768   004940  518D               	movf	?_getNV& (0+255),w,b
 31769   004942  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 31770   004944  A4D8               	btfss	status,2,c
 31771   004946  D15D               	goto	l22543
 31772                           
 31773                           ; BSR set to: 0
 31774                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 31775   004948  51D0               	movf	_io@inputs$F849& (0+255),w,b
 31776   00494A  EC57  F03F         	call	_readInput
 31777   00494E  0101               	movlb	1	; () banked
 31778   004950  6FCC               	movwf	inputScan@input& (0+255),b
 31779                           
 31780                           ; BSR set to: 1
 31781                           ;../inputs.c: 105:             if (input != inputState[io]) {
 31782   004952  0EB4               	movlw	low _inputState
 31783   004954  0100               	movlb	0	; () banked
 31784   004956  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31785   004958  6ED9               	movwf	fsr2l,c
 31786   00495A  6ADA               	clrf	fsr2h,c
 31787   00495C  0E02               	movlw	high _inputState
 31788   00495E  22DA               	addwfc	fsr2h,f,c
 31789   004960  0101               	movlb	1	; () banked
 31790   004962  51CC               	movf	inputScan@input& (0+255),w,b
 31791   004964  18DE               	xorwf	postinc2,w,c
 31792   004966  B4D8               	btfsc	status,2,c
 31793   004968  D144               	goto	l22541
 31794                           
 31795                           ; BSR set to: 1
 31796                           ;../inputs.c: 106:                 Boolean change = FALSE;
 31797   00496A  0E00               	movlw	0
 31798   00496C  6FCB               	movwf	inputScan@change& (0+255),b
 31799                           
 31800                           ; BSR set to: 1
 31801                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 31802   00496E  0EB4               	movlw	low _inputState
 31803   004970  0100               	movlb	0	; () banked
 31804   004972  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31805   004974  6ED9               	movwf	fsr2l,c
 31806   004976  6ADA               	clrf	fsr2h,c
 31807   004978  0E02               	movlw	high _inputState
 31808   00497A  22DA               	addwfc	fsr2h,f,c
 31809   00497C  50DF               	movf	indf2,w,c
 31810   00497E  B4D8               	btfsc	status,2,c
 31811   004980  D01E               	goto	l22495
 31812                           
 31813                           ; BSR set to: 0
 31814   004982  51D0               	movf	_io@inputs$F849& (0+255),w,b
 31815   004984  0D07               	mullw	7
 31816   004986  50F3               	movf	243,w,c
 31817   004988  0F12               	addlw	18
 31818   00498A  EC21  F05D         	call	_getNV
 31819   00498E  0EA4               	movlw	low _delayCount
 31820   004990  0100               	movlb	0	; () banked
 31821   004992  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31822   004994  6ED9               	movwf	fsr2l,c
 31823   004996  6ADA               	clrf	fsr2h,c
 31824   004998  0E02               	movlw	high _delayCount
 31825   00499A  22DA               	addwfc	fsr2h,f,c
 31826   00499C  50DF               	movf	indf2,w,c
 31827   00499E  0101               	movlb	1	; () banked
 31828   0049A0  6FC9               	movwf	??_inputScan& (0+255),b
 31829   0049A2  6BCA               	clrf	(??_inputScan+1)& (0+255),b
 31830   0049A4  0100               	movlb	0	; () banked
 31831   0049A6  518D               	movf	?_getNV& (0+255),w,b
 31832   0049A8  0101               	movlb	1	; () banked
 31833   0049AA  19C9               	xorwf	??_inputScan& (0+255),w,b
 31834   0049AC  E108               	bnz	l22495
 31835   0049AE  0100               	movlb	0	; () banked
 31836   0049B0  518E               	movf	(?_getNV+1)& (0+255),w,b
 31837   0049B2  0101               	movlb	1	; () banked
 31838   0049B4  19CA               	xorwf	(??_inputScan+1)& (0+255),w,b
 31839   0049B6  A4D8               	btfss	status,2,c
 31840   0049B8  D002               	goto	l22495
 31841                           
 31842                           ; BSR set to: 1
 31843                           ;../inputs.c: 109:                     change = TRUE;
 31844   0049BA  0E01               	movlw	1
 31845   0049BC  6FCB               	movwf	inputScan@change& (0+255),b
 31846   0049BE                     l22495:
 31847                           
 31848                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 31849   0049BE  0EB4               	movlw	low _inputState
 31850   0049C0  0100               	movlb	0	; () banked
 31851   0049C2  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31852   0049C4  6ED9               	movwf	fsr2l,c
 31853   0049C6  6ADA               	clrf	fsr2h,c
 31854   0049C8  0E02               	movlw	high _inputState
 31855   0049CA  22DA               	addwfc	fsr2h,f,c
 31856   0049CC  50DF               	movf	indf2,w,c
 31857   0049CE  A4D8               	btfss	status,2,c
 31858   0049D0  D01E               	goto	l352
 31859                           
 31860                           ; BSR set to: 0
 31861   0049D2  51D0               	movf	_io@inputs$F849& (0+255),w,b
 31862   0049D4  0D07               	mullw	7
 31863   0049D6  50F3               	movf	243,w,c
 31864   0049D8  0F13               	addlw	19
 31865   0049DA  EC21  F05D         	call	_getNV
 31866   0049DE  0EA4               	movlw	low _delayCount
 31867   0049E0  0100               	movlb	0	; () banked
 31868   0049E2  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31869   0049E4  6ED9               	movwf	fsr2l,c
 31870   0049E6  6ADA               	clrf	fsr2h,c
 31871   0049E8  0E02               	movlw	high _delayCount
 31872   0049EA  22DA               	addwfc	fsr2h,f,c
 31873   0049EC  50DF               	movf	indf2,w,c
 31874   0049EE  0101               	movlb	1	; () banked
 31875   0049F0  6FC9               	movwf	??_inputScan& (0+255),b
 31876   0049F2  6BCA               	clrf	(??_inputScan+1)& (0+255),b
 31877   0049F4  0100               	movlb	0	; () banked
 31878   0049F6  518D               	movf	?_getNV& (0+255),w,b
 31879   0049F8  0101               	movlb	1	; () banked
 31880   0049FA  19C9               	xorwf	??_inputScan& (0+255),w,b
 31881   0049FC  E108               	bnz	l352
 31882   0049FE  0100               	movlb	0	; () banked
 31883   004A00  518E               	movf	(?_getNV+1)& (0+255),w,b
 31884   004A02  0101               	movlb	1	; () banked
 31885   004A04  19CA               	xorwf	(??_inputScan+1)& (0+255),w,b
 31886   004A06  A4D8               	btfss	status,2,c
 31887   004A08  D002               	goto	l352
 31888                           
 31889                           ; BSR set to: 1
 31890                           ;../inputs.c: 112:                     change = TRUE;
 31891   004A0A  0E01               	movlw	1
 31892   004A0C  6FCB               	movwf	inputScan@change& (0+255),b
 31893   004A0E                     l352:
 31894                           
 31895                           ;../inputs.c: 114:                 if (change) {
 31896   004A0E  0101               	movlb	1	; () banked
 31897   004A10  51CB               	movf	inputScan@change& (0+255),w,b
 31898   004A12  B4D8               	btfsc	status,2,c
 31899   004A14  D0E5               	goto	l22539
 31900                           
 31901                           ; BSR set to: 1
 31902                           ;../inputs.c: 116:                     delayCount[io] = 0;
 31903   004A16  0EA4               	movlw	low _delayCount
 31904   004A18  0100               	movlb	0	; () banked
 31905   004A1A  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31906   004A1C  6ED9               	movwf	fsr2l,c
 31907   004A1E  6ADA               	clrf	fsr2h,c
 31908   004A20  0E02               	movlw	high _delayCount
 31909   004A22  22DA               	addwfc	fsr2h,f,c
 31910   004A24  6ADF               	clrf	indf2,c
 31911                           
 31912                           ;../inputs.c: 117:                     inputState[io] = input;
 31913   004A26  0EB4               	movlw	low _inputState
 31914   004A28  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31915   004A2A  6ED9               	movwf	fsr2l,c
 31916   004A2C  6ADA               	clrf	fsr2h,c
 31917   004A2E  0E02               	movlw	high _inputState
 31918   004A30  22DA               	addwfc	fsr2h,f,c
 31919   004A32  C1CC  FFDF         	movff	inputScan@input,indf2
 31920                           
 31921                           ; BSR set to: 0
 31922                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 31923   004A36  51D0               	movf	_io@inputs$F849& (0+255),w,b
 31924   004A38  0D07               	mullw	7
 31925   004A3A  50F3               	movf	243,w,c
 31926   004A3C  0F11               	addlw	17
 31927   004A3E  EC21  F05D         	call	_getNV
 31928   004A42  0100               	movlb	0	; () banked
 31929   004A44  B18D               	btfsc	?_getNV& (0+255),0,b
 31930   004A46  D008               	goto	l22507
 31931                           
 31932                           ; BSR set to: 0
 31933                           ;../inputs.c: 120:                         input = !input;
 31934   004A48  0101               	movlb	1	; () banked
 31935   004A4A  51CC               	movf	inputScan@input& (0+255),w,b
 31936   004A4C  A4D8               	btfss	status,2,c
 31937   004A4E  D002               	goto	u23920
 31938   004A50  0E01               	movlw	1
 31939   004A52  D001               	goto	u23930
 31940   004A54                     u23920:
 31941   004A54  0E00               	movlw	0
 31942   004A56                     u23930:
 31943   004A56  6FCC               	movwf	inputScan@input& (0+255),b
 31944   004A58                     l22507:
 31945                           
 31946                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 31947   004A58  0100               	movlb	0	; () banked
 31948   004A5A  51D0               	movf	_io@inputs$F849& (0+255),w,b
 31949   004A5C  0D07               	mullw	7
 31950   004A5E  50F3               	movf	243,w,c
 31951   004A60  0F11               	addlw	17
 31952   004A62  EC21  F05D         	call	_getNV
 31953   004A66  0100               	movlb	0	; () banked
 31954   004A68  A98D               	btfss	?_getNV& (0+255),4,b
 31955   004A6A  D031               	goto	l22515
 31956                           
 31957                           ; BSR set to: 0
 31958                           ;../inputs.c: 124:                         if (input) {
 31959   004A6C  0101               	movlb	1	; () banked
 31960   004A6E  51CC               	movf	inputScan@input& (0+255),w,b
 31961   004A70  B4D8               	btfsc	status,2,c
 31962   004A72  D0C7               	goto	l22543
 31963                           
 31964                           ; BSR set to: 1
 31965                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 31966   004A74  0EE4               	movlw	low _outputState
 31967   004A76  0100               	movlb	0	; () banked
 31968   004A78  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31969   004A7A  6ED9               	movwf	fsr2l,c
 31970   004A7C  6ADA               	clrf	fsr2h,c
 31971   004A7E  0E02               	movlw	high _outputState
 31972   004A80  22DA               	addwfc	fsr2h,f,c
 31973   004A82  0EE4               	movlw	low _outputState
 31974   004A84  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31975   004A86  6EE1               	movwf	fsr1l,c
 31976   004A88  6AE2               	clrf	fsr1h,c
 31977   004A8A  0E02               	movlw	high _outputState
 31978   004A8C  22E2               	addwfc	fsr1h,f,c
 31979   004A8E  50E7               	movf	indf1,w,c
 31980   004A90  A4D8               	btfss	status,2,c
 31981   004A92  D002               	goto	u23960
 31982   004A94  0E01               	movlw	1
 31983   004A96  D001               	goto	u23970
 31984   004A98                     u23960:
 31985   004A98  0E00               	movlw	0
 31986   004A9A                     u23970:
 31987   004A9A  6EDF               	movwf	indf2,c
 31988                           
 31989                           ; BSR set to: 0
 31990                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 31991                           
 31992                           ;../inputs.c: 126:                         } else {
 31993   004A9C  0EDE               	movlw	222
 31994   004A9E  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 31995   004AA0  0101               	movlb	1	; () banked
 31996   004AA2  6FC9               	movwf	??_inputScan& (0+255),b
 31997   004AA4  6BCA               	clrf	(??_inputScan+1)& (0+255),b
 31998   004AA6  0E03               	movlw	3
 31999   004AA8  23CA               	addwfc	(??_inputScan+1)& (0+255),f,b
 32000   004AAA  C1C9  F0A4         	movff	??_inputScan,writeNVM@index
 32001   004AAE  C1CA  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 32002   004AB2  0100               	movlb	0	; () banked
 32003   004AB4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 32004   004AB6  0EE4               	movlw	low _outputState
 32005   004AB8  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32006   004ABA  6ED9               	movwf	fsr2l,c
 32007   004ABC  6ADA               	clrf	fsr2h,c
 32008   004ABE  0E02               	movlw	high _outputState
 32009   004AC0  22DA               	addwfc	fsr2h,f,c
 32010   004AC2  50DF               	movf	indf2,w,c
 32011   004AC4  6FA7               	movwf	writeNVM@value& (0+255),b
 32012   004AC6  0E00               	movlw	0
 32013   004AC8  EC52  F05B         	call	_writeNVM
 32014                           
 32015                           ;../inputs.c: 130:                      } else {
 32016   004ACC  D008               	goto	l22517
 32017   004ACE                     l22515:
 32018                           
 32019                           ; BSR set to: 0
 32020                           ;../inputs.c: 131:                         outputState[io] = input;
 32021   004ACE  0EE4               	movlw	low _outputState
 32022   004AD0  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32023   004AD2  6ED9               	movwf	fsr2l,c
 32024   004AD4  6ADA               	clrf	fsr2h,c
 32025   004AD6  0E02               	movlw	high _outputState
 32026   004AD8  22DA               	addwfc	fsr2h,f,c
 32027   004ADA  C1CC  FFDF         	movff	inputScan@input,indf2
 32028   004ADE                     l22517:
 32029                           
 32030                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 32031   004ADE  0100               	movlb	0	; () banked
 32032   004AE0  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32033   004AE2  0D07               	mullw	7
 32034   004AE4  50F3               	movf	243,w,c
 32035   004AE6  0F11               	addlw	17
 32036   004AE8  EC21  F05D         	call	_getNV
 32037   004AEC  0100               	movlb	0	; () banked
 32038   004AEE  A78D               	btfss	?_getNV& (0+255),3,b
 32039   004AF0  D047               	goto	l22533
 32040                           
 32041                           ; BSR set to: 0
 32042                           ;../inputs.c: 136:                         if (outputState[io]) {
 32043   004AF2  0EE4               	movlw	low _outputState
 32044   004AF4  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32045   004AF6  6ED9               	movwf	fsr2l,c
 32046   004AF8  6ADA               	clrf	fsr2h,c
 32047   004AFA  0E02               	movlw	high _outputState
 32048   004AFC  22DA               	addwfc	fsr2h,f,c
 32049   004AFE  50DF               	movf	indf2,w,c
 32050   004B00  B4D8               	btfsc	status,2,c
 32051   004B02  D01F               	goto	l22527
 32052                           
 32053                           ; BSR set to: 0
 32054                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32055   004B04  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32056   004B06  0D07               	mullw	7
 32057   004B08  50F3               	movf	243,w,c
 32058   004B0A  0F11               	addlw	17
 32059   004B0C  EC21  F05D         	call	_getNV
 32060   004B10  0100               	movlb	0	; () banked
 32061   004B12  AD8D               	btfss	?_getNV& (0+255),6,b
 32062   004B14  D00B               	goto	l22525
 32063                           
 32064                           ; BSR set to: 0
 32065                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 32066   004B16  0E00               	movlw	0
 32067   004B18  0101               	movlb	1	; () banked
 32068   004B1A  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 32069   004B1C  0100               	movlb	0	; () banked
 32070   004B1E  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32071   004B20  0D04               	mullw	4
 32072   004B22  50F3               	movf	243,w,c
 32073   004B24  0F08               	addlw	8
 32074   004B26  EC76  F04B         	call	_sendProducedEvent
 32075                           
 32076                           ;../inputs.c: 141:                             } else {
 32077   004B2A  D06B               	goto	l22543
 32078   004B2C                     l22525:
 32079                           
 32080                           ; BSR set to: 0
 32081                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 32082   004B2C  0E01               	movlw	1
 32083   004B2E  0101               	movlb	1	; () banked
 32084   004B30  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 32085   004B32  0100               	movlb	0	; () banked
 32086   004B34  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32087   004B36  0D04               	mullw	4
 32088   004B38  50F3               	movf	243,w,c
 32089   004B3A  0F08               	addlw	8
 32090   004B3C  EC76  F04B         	call	_sendProducedEvent
 32091   004B40  D060               	goto	l22543
 32092   004B42                     l22527:
 32093                           
 32094                           ; BSR set to: 0
 32095                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32096   004B42  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32097   004B44  0D07               	mullw	7
 32098   004B46  50F3               	movf	243,w,c
 32099   004B48  0F11               	addlw	17
 32100   004B4A  EC21  F05D         	call	_getNV
 32101   004B4E  0100               	movlb	0	; () banked
 32102   004B50  AD8D               	btfss	?_getNV& (0+255),6,b
 32103   004B52  D00B               	goto	l22531
 32104                           
 32105                           ; BSR set to: 0
 32106                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 32107   004B54  0E00               	movlw	0
 32108   004B56  0101               	movlb	1	; () banked
 32109   004B58  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 32110   004B5A  0100               	movlb	0	; () banked
 32111   004B5C  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32112   004B5E  0D04               	mullw	4
 32113   004B60  50F3               	movf	243,w,c
 32114   004B62  0F09               	addlw	9
 32115   004B64  EC76  F04B         	call	_sendProducedEvent
 32116                           
 32117                           ;../inputs.c: 147:                             } else {
 32118   004B68  D04C               	goto	l22543
 32119   004B6A                     l22531:
 32120                           
 32121                           ; BSR set to: 0
 32122                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 32123   004B6A  0E01               	movlw	1
 32124   004B6C  0101               	movlb	1	; () banked
 32125   004B6E  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 32126   004B70  0100               	movlb	0	; () banked
 32127   004B72  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32128   004B74  0D04               	mullw	4
 32129   004B76  50F3               	movf	243,w,c
 32130   004B78  0F09               	addlw	9
 32131   004B7A  EC76  F04B         	call	_sendProducedEvent
 32132   004B7E  D041               	goto	l22543
 32133   004B80                     l22533:
 32134                           
 32135                           ; BSR set to: 0
 32136                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32137   004B80  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32138   004B82  0D07               	mullw	7
 32139   004B84  50F3               	movf	243,w,c
 32140   004B86  0F11               	addlw	17
 32141   004B88  EC21  F05D         	call	_getNV
 32142   004B8C  0100               	movlb	0	; () banked
 32143   004B8E  AD8D               	btfss	?_getNV& (0+255),6,b
 32144   004B90  D016               	goto	l22537
 32145                           
 32146                           ; BSR set to: 0
 32147                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 32148   004B92  0EE4               	movlw	low _outputState
 32149   004B94  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32150   004B96  6ED9               	movwf	fsr2l,c
 32151   004B98  6ADA               	clrf	fsr2h,c
 32152   004B9A  0E02               	movlw	high _outputState
 32153   004B9C  22DA               	addwfc	fsr2h,f,c
 32154   004B9E  50DF               	movf	indf2,w,c
 32155   004BA0  A4D8               	btfss	status,2,c
 32156   004BA2  D002               	goto	u24030
 32157   004BA4  0E01               	movlw	1
 32158   004BA6  D001               	goto	u24040
 32159   004BA8                     u24030:
 32160   004BA8  0E00               	movlw	0
 32161   004BAA                     u24040:
 32162   004BAA  0101               	movlb	1	; () banked
 32163   004BAC  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 32164   004BAE  0100               	movlb	0	; () banked
 32165   004BB0  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32166   004BB2  0D04               	mullw	4
 32167   004BB4  50F3               	movf	243,w,c
 32168   004BB6  0F08               	addlw	8
 32169   004BB8  EC76  F04B         	call	_sendProducedEvent
 32170                           
 32171                           ;../inputs.c: 155:                         } else {
 32172   004BBC  D022               	goto	l22543
 32173   004BBE                     l22537:
 32174                           
 32175                           ; BSR set to: 0
 32176                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 32177   004BBE  0EE4               	movlw	low _outputState
 32178   004BC0  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32179   004BC2  6ED9               	movwf	fsr2l,c
 32180   004BC4  6ADA               	clrf	fsr2h,c
 32181   004BC6  0E02               	movlw	high _outputState
 32182   004BC8  22DA               	addwfc	fsr2h,f,c
 32183   004BCA  50DF               	movf	indf2,w,c
 32184   004BCC  0101               	movlb	1	; () banked
 32185   004BCE  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 32186   004BD0  0100               	movlb	0	; () banked
 32187   004BD2  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32188   004BD4  0D04               	mullw	4
 32189   004BD6  50F3               	movf	243,w,c
 32190   004BD8  0F08               	addlw	8
 32191   004BDA  EC76  F04B         	call	_sendProducedEvent
 32192   004BDE  D011               	goto	l22543
 32193   004BE0                     l22539:
 32194                           
 32195                           ; BSR set to: 1
 32196                           ;../inputs.c: 160:                     delayCount[io]++;
 32197   004BE0  0EA4               	movlw	low _delayCount
 32198   004BE2  0100               	movlb	0	; () banked
 32199   004BE4  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32200   004BE6  6ED9               	movwf	fsr2l,c
 32201   004BE8  6ADA               	clrf	fsr2h,c
 32202   004BEA  0E02               	movlw	high _delayCount
 32203   004BEC  22DA               	addwfc	fsr2h,f,c
 32204   004BEE  2ADF               	incf	indf2,f,c
 32205   004BF0  D008               	goto	l22543
 32206   004BF2                     l22541:
 32207                           
 32208                           ; BSR set to: 1
 32209                           ;../inputs.c: 163:                 delayCount[io] = 0;
 32210   004BF2  0EA4               	movlw	low _delayCount
 32211   004BF4  0100               	movlb	0	; () banked
 32212   004BF6  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32213   004BF8  6ED9               	movwf	fsr2l,c
 32214   004BFA  6ADA               	clrf	fsr2h,c
 32215   004BFC  0E02               	movlw	high _delayCount
 32216   004BFE  22DA               	addwfc	fsr2h,f,c
 32217   004C00  6ADF               	clrf	indf2,c
 32218   004C02                     l22543:
 32219   004C02  0100               	movlb	0	; () banked
 32220   004C04  2BD0               	incf	_io@inputs$F849& (0+255),f,b
 32221   004C06  D691               	goto	l22477
 32222   004C08                     __end_of_inputScan:
 32223                           	callstack 0
 32224                           
 32225 ;; *************** function _sendProducedEvent *****************
 32226 ;; Defined at:
 32227 ;;		line 216 in file "../../VLCBlib_PIC/event_producer_happening.c"
 32228 ;; Parameters:    Size  Location     Type
 32229 ;;  happening       1    wreg     unsigned char 
 32230 ;;  onOff           1    9[BANK1 ] enum E12730
 32231 ;; Auto vars:     Size  Location     Type
 32232 ;;  happening       1   16[BANK1 ] unsigned char 
 32233 ;;  producedEven    2   14[BANK1 ] struct Word
 32234 ;;  producedEven    2   12[BANK1 ] struct Word
 32235 ;;  opc             1   11[BANK1 ] unsigned char 
 32236 ;; Return value:  Size  Location     Type
 32237 ;;                  1    wreg      enum E12710
 32238 ;; Registers used:
 32239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32240 ;; Tracked objects:
 32241 ;;		On entry : 0/0
 32242 ;;		On exit  : 0/0
 32243 ;;		Unchanged: 0/0
 32244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32245 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32246 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32247 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32248 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32249 ;;Total ram usage:        8 bytes
 32250 ;; Hardware stack levels used: 1
 32251 ;; Hardware stack levels required when called: 16
 32252 ;; This function calls:
 32253 ;;		_getEN
 32254 ;;		_getNN
 32255 ;;		_sendMessage4
 32256 ;; This function is called by:
 32257 ;;		_loop
 32258 ;;		_processOutputs
 32259 ;;		_inputScan
 32260 ;;		_sendInvertedProducedEvent
 32261 ;;		_pollServos
 32262 ;;		_alwaysSendInvertedProducedEvent
 32263 ;; This function uses a non-reentrant model
 32264 ;;
 32265                           
 32266                           	psect	text125
 32267   0096EC                     __ptext125:
 32268                           	callstack 0
 32269   0096EC                     _sendProducedEvent:
 32270                           	callstack 10
 32271                           
 32272                           ; BSR set to: 0
 32273                           ;incstack = 0
 32274                           ;sendProducedEvent@happening stored from wreg
 32275   0096EC  0101               	movlb	1	; () banked
 32276   0096EE  6FC8               	movwf	sendProducedEvent@happening& (0+255),b
 32277                           
 32278                           ;../../VLCBlib_PIC/event_producer_happening.c: 217:     Word producedEventNN;;../../VLCB
      +                          lib_PIC/event_producer_happening.c: 218:     Word producedEventEN;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 219:     uint8_t opc;;../../VLCBlib_PIC/event_producer_happenin
      +                          g.c: 225:     if ((happening < 1) || (happening > (7+16*4))) return FALSE;
 32279   0096F0  0101               	movlb	1	; () banked
 32280   0096F2  51C8               	movf	sendProducedEvent@happening& (0+255),w,b
 32281   0096F4  B4D8               	btfsc	status,2,c
 32282   0096F6  D003               	goto	u19620
 32283                           
 32284                           ; BSR set to: 1
 32285   0096F8  0E47               	movlw	71
 32286   0096FA  65C8               	cpfsgt	sendProducedEvent@happening& (0+255),b
 32287   0096FC  D002               	goto	l19475
 32288   0096FE                     u19620:
 32289                           
 32290                           ; BSR set to: 1
 32291   0096FE  0E00               	movlw	0
 32292   009700  0012               	return	
 32293   009702                     l19475:
 32294                           
 32295                           ; BSR set to: 1
 32296                           ;../../VLCBlib_PIC/event_producer_happening.c: 226:     if (happening2Event[happening-1]
      +                           == 0xff) return FALSE;
 32297   009702  0EFF               	movlw	low (_happening2Event+65535)
 32298   009704  25C8               	addwf	sendProducedEvent@happening& (0+255),w,b
 32299   009706  6ED9               	movwf	fsr2l,c
 32300   009708  6ADA               	clrf	fsr2h,c
 32301   00970A  0E02               	movlw	high (_happening2Event+65535)
 32302   00970C  22DA               	addwfc	fsr2h,f,c
 32303   00970E  28DE               	incf	postinc2,w,c
 32304   009710  B4D8               	btfsc	status,2,c
 32305   009712  D7F5               	goto	u19620
 32306                           
 32307                           ; BSR set to: 1
 32308                           ;../../VLCBlib_PIC/event_producer_happening.c: 227:     producedEventNN.word = getNN(hap
      +                          pening2Event[happening-1]);
 32309   009714  0EFF               	movlw	low (_happening2Event+65535)
 32310   009716  25C8               	addwf	sendProducedEvent@happening& (0+255),w,b
 32311   009718  6ED9               	movwf	fsr2l,c
 32312   00971A  6ADA               	clrf	fsr2h,c
 32313   00971C  0E02               	movlw	high (_happening2Event+65535)
 32314   00971E  22DA               	addwfc	fsr2h,f,c
 32315   009720  50DF               	movf	indf2,w,c
 32316   009722  ECF1  F048         	call	_getNN
 32317   009726  C097  F1C6         	movff	?_getNN,sendProducedEvent@producedEventNN
 32318   00972A  C098  F1C7         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 32319                           
 32320                           ;../../VLCBlib_PIC/event_producer_happening.c: 228:     producedEventEN.word = getEN(hap
      +                          pening2Event[happening-1]);
 32321   00972E  0EFF               	movlw	low (_happening2Event+65535)
 32322   009730  0101               	movlb	1	; () banked
 32323   009732  25C8               	addwf	sendProducedEvent@happening& (0+255),w,b
 32324   009734  6ED9               	movwf	fsr2l,c
 32325   009736  6ADA               	clrf	fsr2h,c
 32326   009738  0E02               	movlw	high (_happening2Event+65535)
 32327   00973A  22DA               	addwfc	fsr2h,f,c
 32328   00973C  50DF               	movf	indf2,w,c
 32329   00973E  ECC9  F054         	call	_getEN
 32330   009742  C097  F1C4         	movff	?_getEN,sendProducedEvent@producedEventEN
 32331   009746  C098  F1C5         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 32332                           
 32333                           ;../../VLCBlib_PIC/event_producer_happening.c: 252:                 if (producedEventNN.
      +                          word == 0) {
 32334   00974A  0101               	movlb	1	; () banked
 32335   00974C  51C6               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 32336   00974E  11C7               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 32337   009750  A4D8               	btfss	status,2,c
 32338   009752  D00C               	goto	l19493
 32339                           
 32340                           ; BSR set to: 1
 32341                           ;../../VLCBlib_PIC/event_producer_happening.c: 254:                     if (onOff == EVE
      +                          NT_ON) {
 32342   009754  05C1               	decf	sendProducedEvent@onOff& (0+255),w,b
 32343   009756  A4D8               	btfss	status,2,c
 32344   009758  D002               	goto	l19489
 32345                           
 32346                           ; BSR set to: 1
 32347                           ;../../VLCBlib_PIC/event_producer_happening.c: 255:                         opc = OPC_AS
      +                          ON;
 32348   00975A  0E98               	movlw	152
 32349   00975C  D001               	goto	L14
 32350   00975E                     l19489:
 32351                           
 32352                           ; BSR set to: 1
 32353                           ;../../VLCBlib_PIC/event_producer_happening.c: 257:                         opc = OPC_AS
      +                          OF;
 32354   00975E  0E99               	movlw	153
 32355   009760                     L14:
 32356   009760  6FC3               	movwf	sendProducedEvent@opc& (0+255),b
 32357                           
 32358                           ; BSR set to: 1
 32359                           ;../../VLCBlib_PIC/event_producer_happening.c: 259:                     producedEventNN.
      +                          word = nn.word;
 32360   009762  C0BF  F1C6         	movff	_nn,sendProducedEvent@producedEventNN
 32361   009766  C0C0  F1C7         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 32362                           
 32363                           ;../../VLCBlib_PIC/event_producer_happening.c: 260:                 } else {
 32364   00976A  D007               	goto	l19499
 32365   00976C                     l19493:
 32366                           
 32367                           ; BSR set to: 1
 32368                           ;../../VLCBlib_PIC/event_producer_happening.c: 262:                     if (onOff == EVE
      +                          NT_ON) {
 32369   00976C  05C1               	decf	sendProducedEvent@onOff& (0+255),w,b
 32370   00976E  A4D8               	btfss	status,2,c
 32371   009770  D002               	goto	l19497
 32372                           
 32373                           ; BSR set to: 1
 32374                           ;../../VLCBlib_PIC/event_producer_happening.c: 263:                         opc = OPC_AC
      +                          ON;
 32375   009772  0E90               	movlw	144
 32376   009774  D001               	goto	L15
 32377   009776                     l19497:
 32378                           
 32379                           ; BSR set to: 1
 32380                           ;../../VLCBlib_PIC/event_producer_happening.c: 265:                         opc = OPC_AC
      +                          OF;
 32381   009776  0E91               	movlw	145
 32382   009778                     L15:
 32383   009778  6FC3               	movwf	sendProducedEvent@opc& (0+255),b
 32384   00977A                     l19499:
 32385                           
 32386                           ; BSR set to: 1
 32387                           ;../../VLCBlib_PIC/event_producer_happening.c: 268:                 sendMessage4(opc, pr
      +                          oducedEventNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEven
      +                          tEN.bytes.lo);
 32388   00977A  C1C7  F0A5         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 32389   00977E  C1C6  F0A6         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 32390   009782  C1C5  F0A7         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 32391   009786  C1C4  F0A8         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 32392   00978A  51C3               	movf	sendProducedEvent@opc& (0+255),w,b
 32393   00978C  EC64  F05F         	call	_sendMessage4
 32394                           
 32395                           ;../../VLCBlib_PIC/event_producer_happening.c: 270:                 producerDiagnostics[
      +                          0].asUint++;
 32396   009790  0101               	movlb	1	; () banked
 32397   009792  4BB0               	infsnz	_producerDiagnostics& (0+255),f,b
 32398   009794  2BB1               	incf	(_producerDiagnostics+1)& (0+255),f,b
 32399                           
 32400                           ; BSR set to: 1
 32401                           ;../../VLCBlib_PIC/event_producer_happening.c: 272:                 return TRUE;
 32402   009796  0E01               	movlw	1
 32403                           
 32404                           ; BSR set to: 1
 32405   009798  0012               	return		;funcret
 32406   00979A                     __end_of_sendProducedEvent:
 32407                           	callstack 0
 32408                           
 32409 ;; *************** function _sendMessage4 *****************
 32410 ;; Defined at:
 32411 ;;		line 1166 in file "../../VLCBlib_PIC/vlcb.c"
 32412 ;; Parameters:    Size  Location     Type
 32413 ;;  opc             1    wreg     enum E12392
 32414 ;;  data1           1   69[BANK0 ] unsigned char 
 32415 ;;  data2           1   70[BANK0 ] unsigned char 
 32416 ;;  data3           1   71[BANK0 ] unsigned char 
 32417 ;;  data4           1   72[BANK0 ] unsigned char 
 32418 ;; Auto vars:     Size  Location     Type
 32419 ;;  opc             1    8[BANK1 ] enum E12392
 32420 ;; Return value:  Size  Location     Type
 32421 ;;                  1    wreg      void 
 32422 ;; Registers used:
 32423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32424 ;; Tracked objects:
 32425 ;;		On entry : 0/0
 32426 ;;		On exit  : 0/0
 32427 ;;		Unchanged: 0/0
 32428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32430 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32432 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32433 ;;Total ram usage:        5 bytes
 32434 ;; Hardware stack levels used: 1
 32435 ;; Hardware stack levels required when called: 15
 32436 ;; This function calls:
 32437 ;;		_sendMessage
 32438 ;; This function is called by:
 32439 ;;		_mnsProcessMessage
 32440 ;;		_mnsTRrqnpnCallback
 32441 ;;		_nvProcessMessage
 32442 ;;		_nvTRnvrdCallback
 32443 ;;		_producerProcessMessage
 32444 ;;		_sendProducedEvent
 32445 ;; This function uses a non-reentrant model
 32446 ;;
 32447                           
 32448                           	psect	text126
 32449   00BEC8                     __ptext126:
 32450                           	callstack 0
 32451   00BEC8                     _sendMessage4:
 32452                           	callstack 13
 32453                           
 32454                           ; BSR set to: 1
 32455                           ;incstack = 0
 32456                           ;sendMessage4@opc stored from wreg
 32457   00BEC8  0101               	movlb	1	; () banked
 32458   00BECA  6FC0               	movwf	sendMessage4@opc& (0+255),b
 32459                           
 32460                           ;../../VLCBlib_PIC/vlcb.c: 1167:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32461   00BECC  0E05               	movlw	5
 32462   00BECE  0101               	movlb	1	; () banked
 32463   00BED0  6FB8               	movwf	sendMessage@len& (0+255),b
 32464   00BED2  C0A5  F1B9         	movff	sendMessage4@data1,sendMessage@data1
 32465   00BED6  C0A6  F1BA         	movff	sendMessage4@data2,sendMessage@data2
 32466   00BEDA  C0A7  F1BB         	movff	sendMessage4@data3,sendMessage@data3
 32467   00BEDE  C0A8  F1BC         	movff	sendMessage4@data4,sendMessage@data4
 32468   00BEE2  0E00               	movlw	0
 32469   00BEE4  6FBD               	movwf	sendMessage@data5& (0+255),b
 32470   00BEE6  0E00               	movlw	0
 32471   00BEE8  6FBE               	movwf	sendMessage@data6& (0+255),b
 32472   00BEEA  0E00               	movlw	0
 32473   00BEEC  6FBF               	movwf	sendMessage@data7& (0+255),b
 32474   00BEEE  51C0               	movf	sendMessage4@opc& (0+255),w,b
 32475   00BEF0  ECD1  F053         	call	_sendMessage
 32476   00BEF4  0012               	return		;funcret
 32477   00BEF6                     __end_of_sendMessage4:
 32478                           	callstack 0
 32479                           
 32480 ;; *************** function _sendMessage *****************
 32481 ;; Defined at:
 32482 ;;		line 1224 in file "../../VLCBlib_PIC/vlcb.c"
 32483 ;; Parameters:    Size  Location     Type
 32484 ;;  opc             1    wreg     enum E12392
 32485 ;;  len             1    0[BANK1 ] unsigned char 
 32486 ;;  data1           1    1[BANK1 ] unsigned char 
 32487 ;;  data2           1    2[BANK1 ] unsigned char 
 32488 ;;  data3           1    3[BANK1 ] unsigned char 
 32489 ;;  data4           1    4[BANK1 ] unsigned char 
 32490 ;;  data5           1    5[BANK1 ] unsigned char 
 32491 ;;  data6           1    6[BANK1 ] unsigned char 
 32492 ;;  data7           1    7[BANK1 ] unsigned char 
 32493 ;; Auto vars:     Size  Location     Type
 32494 ;;  opc             1   68[BANK0 ] enum E12392
 32495 ;; Return value:  Size  Location     Type
 32496 ;;                  1    wreg      void 
 32497 ;; Registers used:
 32498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32499 ;; Tracked objects:
 32500 ;;		On entry : 0/0
 32501 ;;		On exit  : 0/0
 32502 ;;		Unchanged: 0/0
 32503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32504 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32506 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32507 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32508 ;;Total ram usage:       11 bytes
 32509 ;; Hardware stack levels used: 1
 32510 ;; Hardware stack levels required when called: 14
 32511 ;; This function calls:
 32512 ;;		_canSendMessage
 32513 ;; This function is called by:
 32514 ;;		_sendMessage2
 32515 ;;		_sendMessage3
 32516 ;;		_sendMessage4
 32517 ;;		_sendMessage5
 32518 ;;		_sendMessage6
 32519 ;;		_sendMessage7
 32520 ;;		_sendMessage0
 32521 ;;		_sendMessage1
 32522 ;; This function uses a non-reentrant model
 32523 ;;
 32524                           
 32525                           	psect	text127
 32526   00A7A2                     __ptext127:
 32527                           	callstack 0
 32528   00A7A2                     _sendMessage:
 32529                           	callstack 12
 32530                           
 32531                           ;incstack = 0
 32532                           ;sendMessage@opc stored from wreg
 32533   00A7A2  0100               	movlb	0	; () banked
 32534   00A7A4  6FA4               	movwf	sendMessage@opc& (0+255),b
 32535                           
 32536                           ;../../VLCBlib_PIC/vlcb.c: 1225:     tmpMessage.opc = opc;
 32537   00A7A6  C0A4  F1A4         	movff	sendMessage@opc,_tmpMessage+1
 32538                           
 32539                           ;../../VLCBlib_PIC/vlcb.c: 1226:     tmpMessage.len = len;
 32540   00A7AA  C1B8  F1A3         	movff	sendMessage@len,_tmpMessage
 32541                           
 32542                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.bytes[0] = data1;
 32543   00A7AE  C1B9  F1A5         	movff	sendMessage@data1,_tmpMessage+2
 32544                           
 32545                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.bytes[1] = data2;
 32546   00A7B2  C1BA  F1A6         	movff	sendMessage@data2,_tmpMessage+3
 32547                           
 32548                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[2] = data3;
 32549   00A7B6  C1BB  F1A7         	movff	sendMessage@data3,_tmpMessage+4
 32550                           
 32551                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[3] = data4;
 32552   00A7BA  C1BC  F1A8         	movff	sendMessage@data4,_tmpMessage+5
 32553                           
 32554                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[4] = data5;
 32555   00A7BE  C1BD  F1A9         	movff	sendMessage@data5,_tmpMessage+6
 32556                           
 32557                           ;../../VLCBlib_PIC/vlcb.c: 1232:     tmpMessage.bytes[5] = data6;
 32558   00A7C2  C1BE  F1AA         	movff	sendMessage@data6,_tmpMessage+7
 32559                           
 32560                           ;../../VLCBlib_PIC/vlcb.c: 1233:     tmpMessage.bytes[6] = data7;
 32561   00A7C6  C1BF  F1AB         	movff	sendMessage@data7,_tmpMessage+8
 32562                           
 32563                           ;../../VLCBlib_PIC/vlcb.c: 1234:     if (transport != ((void*)0)) {
 32564   00A7CA  0101               	movlb	1	; () banked
 32565   00A7CC  5172               	movf	_transport& (0+255),w,b
 32566   00A7CE  1173               	iorwf	(_transport+1)& (0+255),w,b
 32567   00A7D0  B4D8               	btfsc	status,2,c
 32568   00A7D2  0012               	return	
 32569                           
 32570                           ; BSR set to: 1
 32571                           ;../../VLCBlib_PIC/vlcb.c: 1235:         if (transport->sendMessage != ((void*)0)) {
 32572   00A7D4  C172  FFF6         	movff	_transport,tblptrl
 32573   00A7D8  C173  FFF7         	movff	_transport+1,tblptrh
 32574   00A7DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32575   00A7DC  6AF8               	clrf	tblptru,c
 32576   00A7DE                     	endif
 32577   00A7DE                     	if	0	;tblptru may be non-zero
 32578   00A7DE                     	endif
 32579   00A7DE  0009               	tblrd		*+
 32580   00A7E0  50F5               	movf	tablat,w,c
 32581   00A7E2  0009               	tblrd		*+
 32582   00A7E4  10F5               	iorwf	tablat,w,c
 32583   00A7E6  B4D8               	btfsc	status,2,c
 32584   00A7E8  0012               	return	
 32585                           
 32586                           ; BSR set to: 1
 32587                           ;../../VLCBlib_PIC/vlcb.c: 1236:             transport->sendMessage(&tmpMessage);
 32588   00A7EA  0EA3               	movlw	low _tmpMessage
 32589   00A7EC  0100               	movlb	0	; () banked
 32590   00A7EE  6F99               	movwf	canSendMessage@mp& (0+255),b
 32591   00A7F0  0E01               	movlw	high _tmpMessage
 32592   00A7F2  6F9A               	movwf	(canSendMessage@mp+1)& (0+255),b
 32593   00A7F4  C172  FFF6         	movff	_transport,tblptrl
 32594   00A7F8  C173  FFF7         	movff	_transport+1,tblptrh
 32595   00A7FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32596   00A7FC  6AF8               	clrf	tblptru,c
 32597   00A7FE                     	endif
 32598   00A7FE                     	if	0	;tblptru may be non-zero
 32599   00A7FE                     	endif
 32600   00A7FE  0009               	tblrd		*+
 32601   00A800  CFF5 F0A2          	movff	tablat,??_sendMessage
 32602   00A804  0009               	tblrd		*+
 32603   00A806  CFF5 F0A3          	movff	tablat,??_sendMessage+1
 32604   00A80A  D801               	call	u19278
 32605   00A80C  0012               	return	
 32606   00A80E                     u19278:
 32607   00A80E  0005               	push	
 32608   00A810  6EFA               	movwf	pclath,c
 32609   00A812  51A2               	movf	??_sendMessage& (0+255),w,b
 32610   00A814  6EFD               	movwf	tosl,c
 32611   00A816  51A3               	movf	(??_sendMessage+1)& (0+255),w,b
 32612   00A818  6EFE               	movwf	tosh,c
 32613   00A81A  6AFF               	clrf	tosu,c
 32614   00A81C  50FA               	movf	pclath,w,c
 32615   00A81E  0012               	return		;indir
 32616   00A820                     __end_of_sendMessage:
 32617                           	callstack 0
 32618                           
 32619 ;; *************** function _canSendMessage *****************
 32620 ;; Defined at:
 32621 ;;		line 448 in file "../../VLCBlib_PIC/can18_ecan.c"
 32622 ;; Parameters:    Size  Location     Type
 32623 ;;  mp              2   57[BANK0 ] PTR struct Message
 32624 ;;		 -> tmpMessage(9), 
 32625 ;; Auto vars:     Size  Location     Type
 32626 ;;  m               2   64[BANK0 ] PTR struct Message
 32627 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 32628 ;; Return value:  Size  Location     Type
 32629 ;;                  1    wreg      enum E13075
 32630 ;; Registers used:
 32631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32632 ;; Tracked objects:
 32633 ;;		On entry : 0/0
 32634 ;;		On exit  : 0/0
 32635 ;;		Unchanged: 0/0
 32636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32638 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32639 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32640 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32641 ;;Total ram usage:        9 bytes
 32642 ;; Hardware stack levels used: 1
 32643 ;; Hardware stack levels required when called: 13
 32644 ;; This function calls:
 32645 ;;		_getNextWriteMessage
 32646 ;;		_have
 32647 ;;		_isEvent
 32648 ;;		_push
 32649 ;;		_quantity
 32650 ;;		_updateModuleErrorStatus
 32651 ;; This function is called by:
 32652 ;;		_sendMessage
 32653 ;; This function uses a non-reentrant model
 32654 ;;
 32655                           
 32656                           	psect	text128
 32657   004EEA                     __ptext128:
 32658                           	callstack 0
 32659   004EEA                     _canSendMessage:
 32660                           	callstack 12
 32661                           
 32662                           ;../../VLCBlib_PIC/can18_ecan.c: 450:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          53:     PIE5bits.TXBnIE = 0;
 32663                           
 32664                           ;incstack = 0
 32665   004EEA  9876               	bcf	118,4,c	;volatile
 32666                           
 32667                           ;../../VLCBlib_PIC/can18_ecan.c: 454:     if (quantity(&txQueue) == 0) {
 32668   004EEC  0E48               	movlw	low _txQueue
 32669   004EEE  0100               	movlb	0	; () banked
 32670   004EF0  6F8D               	movwf	quantity@q& (0+255),b
 32671   004EF2  ECB4  F05D         	call	_quantity	;wreg free
 32672   004EF6  0900               	iorlw	0
 32673   004EF8  A4D8               	btfss	status,2,c
 32674   004EFA  D150               	goto	l19113
 32675                           
 32676                           ;../../VLCBlib_PIC/can18_ecan.c: 456:         if (TXB0CONbits.TXREQ == 0) {
 32677   004EFC  010F               	movlb	15	; () banked
 32678   004EFE  B720               	btfsc	32,3,b	;volatile
 32679   004F00  D14D               	goto	l19113
 32680                           
 32681                           ; BSR set to: 15
 32682                           ;../../VLCBlib_PIC/can18_ecan.c: 458:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 32683   004F02  0100               	movlb	0	; () banked
 32684   004F04  51C3               	movf	_canId& (0+255),w,b
 32685   004F06  A4D8               	btfss	status,2,c
 32686   004F08  D007               	goto	l19049
 32687                           
 32688                           ; BSR set to: 0
 32689   004F0A  51C1               	movf	_enumerationState& (0+255),w,b
 32690   004F0C  A4D8               	btfss	status,2,c
 32691   004F0E  D004               	goto	l19049
 32692                           
 32693                           ; BSR set to: 0
 32694                           ;../../VLCBlib_PIC/can18_ecan.c: 459:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 32695   004F10  0E01               	movlw	1
 32696   004F12  6FC1               	movwf	_enumerationState& (0+255),b
 32697                           
 32698                           ;../../VLCBlib_PIC/can18_ecan.c: 460:                 canId = 1;
 32699   004F14  0E01               	movlw	1
 32700   004F16  6FC3               	movwf	_canId& (0+255),b
 32701   004F18                     l19049:
 32702                           
 32703                           ; BSR set to: 0
 32704                           ;../../VLCBlib_PIC/can18_ecan.c: 462:             PIE5bits.TXBnIE = 1;
 32705   004F18  8876               	bsf	118,4,c	;volatile
 32706                           
 32707                           ; BSR set to: 0
 32708                           ;../../VLCBlib_PIC/can18_ecan.c: 464:             if (mp->len >8) mp->len = 8;
 32709   004F1A  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32710   004F1E  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32711   004F22  0E08               	movlw	8
 32712   004F24  64DF               	cpfsgt	indf2,c
 32713   004F26  D006               	goto	l19055
 32714                           
 32715                           ; BSR set to: 0
 32716   004F28  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32717   004F2C  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32718   004F30  0E08               	movlw	8
 32719   004F32  6EDF               	movwf	indf2,c
 32720   004F34                     l19055:
 32721                           
 32722                           ; BSR set to: 0
 32723                           ;../../VLCBlib_PIC/can18_ecan.c: 466:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 32724   004F34  EE20 F001          	lfsr	2,1
 32725   004F38  5199               	movf	canSendMessage@mp& (0+255),w,b
 32726   004F3A  26D9               	addwf	fsr2l,f,c
 32727   004F3C  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32728   004F3E  22DA               	addwfc	fsr2h,f,c
 32729   004F40  50DF               	movf	indf2,w,c
 32730   004F42  6F9B               	movwf	??_canSendMessage& (0+255),b
 32731   004F44  6B9C               	clrf	(??_canSendMessage+1)& (0+255),b
 32732   004F46  0E35               	movlw	low _priorities
 32733   004F48  259B               	addwf	??_canSendMessage& (0+255),w,b
 32734   004F4A  6EF6               	movwf	tblptrl,c
 32735   004F4C  0EED               	movlw	high _priorities
 32736   004F4E  219C               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 32737   004F50  6EF7               	movwf	tblptrh,c
 32738   004F52                     	if	1	;There are 3 active tblptr bytes
 32739   004F52  6AF8               	clrf	tblptru,c
 32740   004F54  0E00               	movlw	low (__mediumconst shr (0+16))
 32741   004F56  22F8               	addwfc	tblptru,f,c
 32742   004F58                     	endif
 32743   004F58  0008               	tblrd		*
 32744   004F5A  50F5               	movf	tablat,w,c
 32745   004F5C  6F9D               	movwf	(??_canSendMessage+2)& (0+255),b
 32746   004F5E  6B9E               	clrf	(??_canSendMessage+3)& (0+255),b
 32747   004F60  0E87               	movlw	low _canPri
 32748   004F62  259D               	addwf	(??_canSendMessage+2)& (0+255),w,b
 32749   004F64  6EF6               	movwf	tblptrl,c
 32750   004F66  0EEE               	movlw	high _canPri
 32751   004F68  219E               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 32752   004F6A  6EF7               	movwf	tblptrh,c
 32753   004F6C                     	if	1	;There are 3 active tblptr bytes
 32754   004F6C  6AF8               	clrf	tblptru,c
 32755   004F6E  0E00               	movlw	low (__mediumconst shr (0+16))
 32756   004F70  22F8               	addwfc	tblptru,f,c
 32757   004F72                     	endif
 32758   004F72  0008               	tblrd		*
 32759   004F74  CFF5 F09F          	movff	tablat,??_canSendMessage+4
 32760   004F78  39C3               	swapf	_canId& (0+255),w,b
 32761   004F7A  46E8               	rlncf	wreg,f,c
 32762   004F7C  0B1F               	andlw	31
 32763   004F7E  0B0F               	andlw	15
 32764   004F80  119F               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 32765   004F82  010F               	movlb	15	; () banked
 32766   004F84  6F21               	movwf	33,b	;volatile
 32767                           
 32768                           ; BSR set to: 15
 32769                           ;../../VLCBlib_PIC/can18_ecan.c: 467:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 32770   004F86  C0C3  F09B         	movff	_canId,??_canSendMessage
 32771   004F8A  0E07               	movlw	7
 32772   004F8C  0100               	movlb	0	; () banked
 32773   004F8E  179B               	andwf	??_canSendMessage& (0+255),f,b
 32774   004F90  0E05               	movlw	5
 32775   004F92  6F9C               	movwf	(??_canSendMessage+1)& (0+255),b
 32776   004F94                     u18945:
 32777   004F94  90D8               	bcf	status,0,c
 32778   004F96  379B               	rlcf	??_canSendMessage& (0+255),f,b
 32779   004F98  2F9C               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 32780   004F9A  D7FC               	goto	u18945
 32781   004F9C  519B               	movf	??_canSendMessage& (0+255),w,b
 32782   004F9E  010F               	movlb	15	; () banked
 32783   004FA0  6F22               	movwf	34,b	;volatile
 32784                           
 32785                           ; BSR set to: 15
 32786                           ;../../VLCBlib_PIC/can18_ecan.c: 468:             TXB0D0 = mp->opc;
 32787   004FA2  0100               	movlb	0	; () banked
 32788   004FA4  EE20 F001          	lfsr	2,1
 32789   004FA8  5199               	movf	canSendMessage@mp& (0+255),w,b
 32790   004FAA  26D9               	addwf	fsr2l,f,c
 32791   004FAC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32792   004FAE  22DA               	addwfc	fsr2h,f,c
 32793   004FB0  50DF               	movf	indf2,w,c
 32794   004FB2  010F               	movlb	15	; () banked
 32795   004FB4  6F26               	movwf	38,b	;volatile
 32796                           
 32797                           ; BSR set to: 15
 32798                           ;../../VLCBlib_PIC/can18_ecan.c: 469:             TXB0D1 = mp->bytes[0];
 32799   004FB6  0100               	movlb	0	; () banked
 32800   004FB8  EE20 F002          	lfsr	2,2
 32801   004FBC  5199               	movf	canSendMessage@mp& (0+255),w,b
 32802   004FBE  26D9               	addwf	fsr2l,f,c
 32803   004FC0  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32804   004FC2  22DA               	addwfc	fsr2h,f,c
 32805   004FC4  50DF               	movf	indf2,w,c
 32806   004FC6  010F               	movlb	15	; () banked
 32807   004FC8  6F27               	movwf	39,b	;volatile
 32808                           
 32809                           ; BSR set to: 15
 32810                           ;../../VLCBlib_PIC/can18_ecan.c: 470:             TXB0D2 = mp->bytes[1];
 32811   004FCA  0100               	movlb	0	; () banked
 32812   004FCC  EE20 F003          	lfsr	2,3
 32813   004FD0  5199               	movf	canSendMessage@mp& (0+255),w,b
 32814   004FD2  26D9               	addwf	fsr2l,f,c
 32815   004FD4  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32816   004FD6  22DA               	addwfc	fsr2h,f,c
 32817   004FD8  50DF               	movf	indf2,w,c
 32818   004FDA  010F               	movlb	15	; () banked
 32819   004FDC  6F28               	movwf	40,b	;volatile
 32820                           
 32821                           ; BSR set to: 15
 32822                           ;../../VLCBlib_PIC/can18_ecan.c: 471:             TXB0D3 = mp->bytes[2];
 32823   004FDE  0100               	movlb	0	; () banked
 32824   004FE0  EE20 F004          	lfsr	2,4
 32825   004FE4  5199               	movf	canSendMessage@mp& (0+255),w,b
 32826   004FE6  26D9               	addwf	fsr2l,f,c
 32827   004FE8  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32828   004FEA  22DA               	addwfc	fsr2h,f,c
 32829   004FEC  50DF               	movf	indf2,w,c
 32830   004FEE  010F               	movlb	15	; () banked
 32831   004FF0  6F29               	movwf	41,b	;volatile
 32832                           
 32833                           ; BSR set to: 15
 32834                           ;../../VLCBlib_PIC/can18_ecan.c: 472:             TXB0D4 = mp->bytes[3];
 32835   004FF2  0100               	movlb	0	; () banked
 32836   004FF4  EE20 F005          	lfsr	2,5
 32837   004FF8  5199               	movf	canSendMessage@mp& (0+255),w,b
 32838   004FFA  26D9               	addwf	fsr2l,f,c
 32839   004FFC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32840   004FFE  22DA               	addwfc	fsr2h,f,c
 32841   005000  50DF               	movf	indf2,w,c
 32842   005002  010F               	movlb	15	; () banked
 32843   005004  6F2A               	movwf	42,b	;volatile
 32844                           
 32845                           ; BSR set to: 15
 32846                           ;../../VLCBlib_PIC/can18_ecan.c: 473:             TXB0D5 = mp->bytes[4];
 32847   005006  0100               	movlb	0	; () banked
 32848   005008  EE20 F006          	lfsr	2,6
 32849   00500C  5199               	movf	canSendMessage@mp& (0+255),w,b
 32850   00500E  26D9               	addwf	fsr2l,f,c
 32851   005010  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32852   005012  22DA               	addwfc	fsr2h,f,c
 32853   005014  50DF               	movf	indf2,w,c
 32854   005016  010F               	movlb	15	; () banked
 32855   005018  6F2B               	movwf	43,b	;volatile
 32856                           
 32857                           ; BSR set to: 15
 32858                           ;../../VLCBlib_PIC/can18_ecan.c: 474:             TXB0D6 = mp->bytes[5];
 32859   00501A  0100               	movlb	0	; () banked
 32860   00501C  EE20 F007          	lfsr	2,7
 32861   005020  5199               	movf	canSendMessage@mp& (0+255),w,b
 32862   005022  26D9               	addwf	fsr2l,f,c
 32863   005024  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32864   005026  22DA               	addwfc	fsr2h,f,c
 32865   005028  50DF               	movf	indf2,w,c
 32866   00502A  010F               	movlb	15	; () banked
 32867   00502C  6F2C               	movwf	44,b	;volatile
 32868                           
 32869                           ; BSR set to: 15
 32870                           ;../../VLCBlib_PIC/can18_ecan.c: 475:             TXB0D7 = mp->bytes[6];
 32871   00502E  0100               	movlb	0	; () banked
 32872   005030  EE20 F008          	lfsr	2,8
 32873   005034  5199               	movf	canSendMessage@mp& (0+255),w,b
 32874   005036  26D9               	addwf	fsr2l,f,c
 32875   005038  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32876   00503A  22DA               	addwfc	fsr2h,f,c
 32877   00503C  50DF               	movf	indf2,w,c
 32878   00503E  010F               	movlb	15	; () banked
 32879   005040  6F2D               	movwf	45,b	;volatile
 32880                           
 32881                           ; BSR set to: 15
 32882                           ;../../VLCBlib_PIC/can18_ecan.c: 476:             TXB0DLC = mp->len & 0x0F;
 32883   005042  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32884   005046  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32885   00504A  50DF               	movf	indf2,w,c
 32886   00504C  0B0F               	andlw	15
 32887   00504E  6F25               	movwf	37,b	;volatile
 32888                           
 32889                           ; BSR set to: 15
 32890                           ;../../VLCBlib_PIC/can18_ecan.c: 478:             TXB0CONbits.TXREQ = 1;
 32891   005050  8720               	bsf	32,3,b	;volatile
 32892                           
 32893                           ; BSR set to: 15
 32894                           ;../../VLCBlib_PIC/can18_ecan.c: 480:             canDiagnostics[0x05].asUint++;
 32895   005052  0101               	movlb	1	; () banked
 32896   005054  4B81               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 32897   005056  2B82               	incf	(_canDiagnostics+11)& (0+255),f,b
 32898                           
 32899                           ; BSR set to: 1
 32900                           ;../../VLCBlib_PIC/can18_ecan.c: 485:             if (isEvent(mp->opc)) {
 32901   005058  0100               	movlb	0	; () banked
 32902   00505A  EE20 F001          	lfsr	2,1
 32903   00505E  5199               	movf	canSendMessage@mp& (0+255),w,b
 32904   005060  26D9               	addwf	fsr2l,f,c
 32905   005062  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32906   005064  22DA               	addwfc	fsr2h,f,c
 32907   005066  50DF               	movf	indf2,w,c
 32908   005068  ECFA  F05F         	call	_isEvent
 32909   00506C  0900               	iorlw	0
 32910   00506E  B4D8               	btfsc	status,2,c
 32911   005070  0012               	return	
 32912                           
 32913                           ;../../VLCBlib_PIC/can18_ecan.c: 486:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 32914   005072  0E08               	movlw	8
 32915   005074  ECED  F055         	call	_have
 32916   005078  0900               	iorlw	0
 32917   00507A  B4D8               	btfsc	status,2,c
 32918   00507C  0012               	return	
 32919                           
 32920                           ;../../VLCBlib_PIC/can18_ecan.c: 488:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 32921   00507E  0E4D               	movlw	low _rxQueue
 32922   005080  0100               	movlb	0	; () banked
 32923   005082  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 32924   005084  EC56  F045         	call	_getNextWriteMessage	;wreg free
 32925   005088  C08D  F0A0         	movff	?_getNextWriteMessage,canSendMessage@m
 32926   00508C  C08E  F0A1         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 32927                           
 32928                           ;../../VLCBlib_PIC/can18_ecan.c: 489:                     if (m == ((void*)0)) {
 32929   005090  0100               	movlb	0	; () banked
 32930   005092  51A0               	movf	canSendMessage@m& (0+255),w,b
 32931   005094  11A1               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 32932   005096  A4D8               	btfss	status,2,c
 32933   005098  D006               	goto	l19093
 32934                           
 32935                           ; BSR set to: 0
 32936                           ;../../VLCBlib_PIC/can18_ecan.c: 491:                         canDiagnostics[0x07].asUin
      +                          t++;
 32937   00509A  0101               	movlb	1	; () banked
 32938   00509C  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 32939   00509E  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 32940                           
 32941                           ; BSR set to: 1
 32942                           ;../../VLCBlib_PIC/can18_ecan.c: 492:                         updateModuleErrorStatus();
 32943   0050A0  ECB2  F061         	call	_updateModuleErrorStatus	;wreg free
 32944                           
 32945                           ;../../VLCBlib_PIC/can18_ecan.c: 494:                     } else {
 32946   0050A4  0012               	return	
 32947   0050A6                     l19093:
 32948                           
 32949                           ; BSR set to: 0
 32950                           ;../../VLCBlib_PIC/can18_ecan.c: 496:                         m->opc = mp->opc;
 32951   0050A6  EE20 F001          	lfsr	2,1
 32952   0050AA  5199               	movf	canSendMessage@mp& (0+255),w,b
 32953   0050AC  26D9               	addwf	fsr2l,f,c
 32954   0050AE  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32955   0050B0  22DA               	addwfc	fsr2h,f,c
 32956   0050B2  EE10 F001          	lfsr	1,1
 32957   0050B6  51A0               	movf	canSendMessage@m& (0+255),w,b
 32958   0050B8  26E1               	addwf	fsr1l,f,c
 32959   0050BA  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32960   0050BC  22E2               	addwfc	fsr1h,f,c
 32961   0050BE  CFDF FFE7          	movff	indf2,indf1
 32962                           
 32963                           ; BSR set to: 0
 32964                           ;../../VLCBlib_PIC/can18_ecan.c: 497:                         m->len = mp->len;
 32965   0050C2  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32966   0050C6  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32967   0050CA  C0A0  FFE1         	movff	canSendMessage@m,fsr1l
 32968   0050CE  C0A1  FFE2         	movff	canSendMessage@m+1,fsr1h
 32969   0050D2  CFDF FFE7          	movff	indf2,indf1
 32970                           
 32971                           ; BSR set to: 0
 32972                           ;../../VLCBlib_PIC/can18_ecan.c: 498:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 32973   0050D6  EE20 F002          	lfsr	2,2
 32974   0050DA  5199               	movf	canSendMessage@mp& (0+255),w,b
 32975   0050DC  26D9               	addwf	fsr2l,f,c
 32976   0050DE  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32977   0050E0  22DA               	addwfc	fsr2h,f,c
 32978   0050E2  EE10 F002          	lfsr	1,2
 32979   0050E6  51A0               	movf	canSendMessage@m& (0+255),w,b
 32980   0050E8  26E1               	addwf	fsr1l,f,c
 32981   0050EA  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32982   0050EC  22E2               	addwfc	fsr1h,f,c
 32983   0050EE  CFDF FFE7          	movff	indf2,indf1
 32984                           
 32985                           ; BSR set to: 0
 32986                           ;../../VLCBlib_PIC/can18_ecan.c: 499:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 32987   0050F2  EE20 F003          	lfsr	2,3
 32988   0050F6  5199               	movf	canSendMessage@mp& (0+255),w,b
 32989   0050F8  26D9               	addwf	fsr2l,f,c
 32990   0050FA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32991   0050FC  22DA               	addwfc	fsr2h,f,c
 32992   0050FE  EE10 F003          	lfsr	1,3
 32993   005102  51A0               	movf	canSendMessage@m& (0+255),w,b
 32994   005104  26E1               	addwf	fsr1l,f,c
 32995   005106  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32996   005108  22E2               	addwfc	fsr1h,f,c
 32997   00510A  CFDF FFE7          	movff	indf2,indf1
 32998                           
 32999                           ; BSR set to: 0
 33000                           ;../../VLCBlib_PIC/can18_ecan.c: 500:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 33001   00510E  EE20 F004          	lfsr	2,4
 33002   005112  5199               	movf	canSendMessage@mp& (0+255),w,b
 33003   005114  26D9               	addwf	fsr2l,f,c
 33004   005116  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33005   005118  22DA               	addwfc	fsr2h,f,c
 33006   00511A  EE10 F004          	lfsr	1,4
 33007   00511E  51A0               	movf	canSendMessage@m& (0+255),w,b
 33008   005120  26E1               	addwf	fsr1l,f,c
 33009   005122  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 33010   005124  22E2               	addwfc	fsr1h,f,c
 33011   005126  CFDF FFE7          	movff	indf2,indf1
 33012                           
 33013                           ; BSR set to: 0
 33014                           ;../../VLCBlib_PIC/can18_ecan.c: 501:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 33015   00512A  EE20 F005          	lfsr	2,5
 33016   00512E  5199               	movf	canSendMessage@mp& (0+255),w,b
 33017   005130  26D9               	addwf	fsr2l,f,c
 33018   005132  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33019   005134  22DA               	addwfc	fsr2h,f,c
 33020   005136  EE10 F005          	lfsr	1,5
 33021   00513A  51A0               	movf	canSendMessage@m& (0+255),w,b
 33022   00513C  26E1               	addwf	fsr1l,f,c
 33023   00513E  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 33024   005140  22E2               	addwfc	fsr1h,f,c
 33025   005142  CFDF FFE7          	movff	indf2,indf1
 33026                           
 33027                           ; BSR set to: 0
 33028                           ;../../VLCBlib_PIC/can18_ecan.c: 502:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 33029   005146  EE20 F006          	lfsr	2,6
 33030   00514A  5199               	movf	canSendMessage@mp& (0+255),w,b
 33031   00514C  26D9               	addwf	fsr2l,f,c
 33032   00514E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33033   005150  22DA               	addwfc	fsr2h,f,c
 33034   005152  EE10 F006          	lfsr	1,6
 33035   005156  51A0               	movf	canSendMessage@m& (0+255),w,b
 33036   005158  26E1               	addwf	fsr1l,f,c
 33037   00515A  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 33038   00515C  22E2               	addwfc	fsr1h,f,c
 33039   00515E  CFDF FFE7          	movff	indf2,indf1
 33040                           
 33041                           ; BSR set to: 0
 33042                           ;../../VLCBlib_PIC/can18_ecan.c: 503:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 33043   005162  EE20 F007          	lfsr	2,7
 33044   005166  5199               	movf	canSendMessage@mp& (0+255),w,b
 33045   005168  26D9               	addwf	fsr2l,f,c
 33046   00516A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33047   00516C  22DA               	addwfc	fsr2h,f,c
 33048   00516E  EE10 F007          	lfsr	1,7
 33049   005172  51A0               	movf	canSendMessage@m& (0+255),w,b
 33050   005174  26E1               	addwf	fsr1l,f,c
 33051   005176  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 33052   005178  22E2               	addwfc	fsr1h,f,c
 33053   00517A  CFDF FFE7          	movff	indf2,indf1
 33054                           
 33055                           ; BSR set to: 0
 33056                           ;../../VLCBlib_PIC/can18_ecan.c: 504:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 33057   00517E  EE20 F008          	lfsr	2,8
 33058   005182  5199               	movf	canSendMessage@mp& (0+255),w,b
 33059   005184  26D9               	addwf	fsr2l,f,c
 33060   005186  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33061   005188  22DA               	addwfc	fsr2h,f,c
 33062   00518A  EE10 F008          	lfsr	1,8
 33063   00518E  51A0               	movf	canSendMessage@m& (0+255),w,b
 33064   005190  26E1               	addwf	fsr1l,f,c
 33065   005192  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 33066   005194  22E2               	addwfc	fsr1h,f,c
 33067   005196  CFDF FFE7          	movff	indf2,indf1
 33068   00519A  0012               	return	
 33069   00519C                     l19113:
 33070                           
 33071                           ;../../VLCBlib_PIC/can18_ecan.c: 513:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 33072   00519C  0E48               	movlw	low _txQueue
 33073   00519E  0100               	movlb	0	; () banked
 33074   0051A0  6F8D               	movwf	push@q& (0+255),b
 33075   0051A2  C099  F08E         	movff	canSendMessage@mp,push@m
 33076   0051A6  C09A  F08F         	movff	canSendMessage@mp+1,push@m+1
 33077   0051AA  ECBB  F01F         	call	_push	;wreg free
 33078   0051AE  0900               	iorlw	0
 33079   0051B0  A4D8               	btfss	status,2,c
 33080   0051B2  D007               	goto	l2454
 33081                           
 33082                           ;../../VLCBlib_PIC/can18_ecan.c: 515:         canDiagnostics[0x04].asUint++;
 33083   0051B4  0101               	movlb	1	; () banked
 33084   0051B6  4B7F               	infsnz	(_canDiagnostics+8)& (0+255),f,b
 33085   0051B8  2B80               	incf	(_canDiagnostics+9)& (0+255),f,b
 33086                           
 33087                           ; BSR set to: 1
 33088                           ;../../VLCBlib_PIC/can18_ecan.c: 516:         updateModuleErrorStatus();
 33089   0051BA  ECB2  F061         	call	_updateModuleErrorStatus	;wreg free
 33090                           
 33091                           ;../../VLCBlib_PIC/can18_ecan.c: 518:         PIE5bits.TXBnIE = 1;
 33092   0051BE  8876               	bsf	118,4,c	;volatile
 33093   0051C0  0012               	return	
 33094   0051C2                     l2454:
 33095                           
 33096                           ;../../VLCBlib_PIC/can18_ecan.c: 521:     PIE5bits.TXBnIE = 1;
 33097   0051C2  8876               	bsf	118,4,c	;volatile
 33098                           
 33099                           ;../../VLCBlib_PIC/can18_ecan.c: 522:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 33100   0051C4  0012               	return		;funcret
 33101   0051C6                     __end_of_canSendMessage:
 33102                           	callstack 0
 33103                           
 33104 ;; *************** function _quantity *****************
 33105 ;; Defined at:
 33106 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 33107 ;; Parameters:    Size  Location     Type
 33108 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33109 ;;		 -> txQueue(5), 
 33110 ;; Auto vars:     Size  Location     Type
 33111 ;;		None
 33112 ;; Return value:  Size  Location     Type
 33113 ;;                  1    wreg      unsigned char 
 33114 ;; Registers used:
 33115 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33116 ;; Tracked objects:
 33117 ;;		On entry : 0/0
 33118 ;;		On exit  : 0/0
 33119 ;;		Unchanged: 0/0
 33120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33121 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33123 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33124 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33125 ;;Total ram usage:        5 bytes
 33126 ;; Hardware stack levels used: 1
 33127 ;; Hardware stack levels required when called: 12
 33128 ;; This function calls:
 33129 ;;		Nothing
 33130 ;; This function is called by:
 33131 ;;		_canSendMessage
 33132 ;; This function uses a non-reentrant model
 33133 ;;
 33134                           
 33135                           	psect	text129
 33136   00BB68                     __ptext129:
 33137                           	callstack 0
 33138   00BB68                     _quantity:
 33139                           	callstack 12
 33140                           
 33141                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 33142                           
 33143                           ;incstack = 0
 33144   00BB68  0100               	movlb	0	; () banked
 33145   00BB6A  518D               	movf	quantity@q& (0+255),w,b
 33146   00BB6C  6ED9               	movwf	fsr2l,c
 33147   00BB6E  6ADA               	clrf	fsr2h,c
 33148   00BB70  0E02               	movlw	2
 33149   00BB72  26D9               	addwf	fsr2l,f,c
 33150   00BB74  50DF               	movf	indf2,w,c
 33151   00BB76  6F8E               	movwf	??_quantity& (0+255),b
 33152   00BB78  518D               	movf	quantity@q& (0+255),w,b
 33153   00BB7A  6ED9               	movwf	fsr2l,c
 33154   00BB7C  6ADA               	clrf	fsr2h,c
 33155   00BB7E  0E03               	movlw	3
 33156   00BB80  26D9               	addwf	fsr2l,f,c
 33157   00BB82  50DF               	movf	indf2,w,c
 33158   00BB84  6F8F               	movwf	(??_quantity+1)& (0+255),b
 33159   00BB86  518E               	movf	??_quantity& (0+255),w,b
 33160   00BB88  5D8F               	subwf	(??_quantity+1)& (0+255),w,b
 33161   00BB8A  6F90               	movwf	(??_quantity+2)& (0+255),b
 33162   00BB8C  518D               	movf	quantity@q& (0+255),w,b
 33163   00BB8E  6ED9               	movwf	fsr2l,c
 33164   00BB90  6ADA               	clrf	fsr2h,c
 33165   00BB92  0E04               	movlw	4
 33166   00BB94  26D9               	addwf	fsr2l,f,c
 33167   00BB96  50DF               	movf	indf2,w,c
 33168   00BB98  6F91               	movwf	(??_quantity+3)& (0+255),b
 33169   00BB9A  0591               	decf	(??_quantity+3)& (0+255),w,b
 33170   00BB9C  1590               	andwf	(??_quantity+2)& (0+255),w,b
 33171                           
 33172                           ; BSR set to: 0
 33173   00BB9E  0012               	return		;funcret
 33174   00BBA0                     __end_of_quantity:
 33175                           	callstack 0
 33176                           
 33177 ;; *************** function _push *****************
 33178 ;; Defined at:
 33179 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 33180 ;; Parameters:    Size  Location     Type
 33181 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33182 ;;		 -> txQueue(5), 
 33183 ;;  m               2   46[BANK0 ] PTR struct Message
 33184 ;;		 -> tmpMessage(9), 
 33185 ;; Auto vars:     Size  Location     Type
 33186 ;;		None
 33187 ;; Return value:  Size  Location     Type
 33188 ;;                  1    wreg      enum E12928
 33189 ;; Registers used:
 33190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33191 ;; Tracked objects:
 33192 ;;		On entry : 0/0
 33193 ;;		On exit  : 0/0
 33194 ;;		Unchanged: 0/0
 33195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33196 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33198 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33199 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33200 ;;Total ram usage:       12 bytes
 33201 ;; Hardware stack levels used: 1
 33202 ;; Hardware stack levels required when called: 12
 33203 ;; This function calls:
 33204 ;;		Nothing
 33205 ;; This function is called by:
 33206 ;;		_canSendMessage
 33207 ;; This function uses a non-reentrant model
 33208 ;;
 33209                           
 33210                           	psect	text130
 33211   003F76                     __ptext130:
 33212                           	callstack 0
 33213   003F76                     _push:
 33214                           	callstack 12
 33215                           
 33216                           ; BSR set to: 0
 33217                           ;incstack = 0
 33218   003F76  0100               	movlb	0	; () banked
 33219   003F78  518D               	movf	push@q& (0+255),w,b
 33220   003F7A  6ED9               	movwf	fsr2l,c
 33221   003F7C  6ADA               	clrf	fsr2h,c
 33222   003F7E  0E02               	movlw	2
 33223   003F80  26D9               	addwf	fsr2l,f,c
 33224   003F82  50DF               	movf	indf2,w,c
 33225   003F84  6F90               	movwf	??_push& (0+255),b
 33226   003F86  6B91               	clrf	(??_push+1)& (0+255),b
 33227   003F88  518D               	movf	push@q& (0+255),w,b
 33228   003F8A  6ED9               	movwf	fsr2l,c
 33229   003F8C  6ADA               	clrf	fsr2h,c
 33230   003F8E  0E04               	movlw	4
 33231   003F90  26D9               	addwf	fsr2l,f,c
 33232   003F92  50DF               	movf	indf2,w,c
 33233   003F94  6F92               	movwf	(??_push+2)& (0+255),b
 33234   003F96  0EFF               	movlw	255
 33235   003F98  2592               	addwf	(??_push+2)& (0+255),w,b
 33236   003F9A  6F93               	movwf	(??_push+3)& (0+255),b
 33237   003F9C  6B94               	clrf	(??_push+4)& (0+255),b
 33238   003F9E  0EFF               	movlw	255
 33239   003FA0  2394               	addwfc	(??_push+4)& (0+255),f,b
 33240   003FA2  518D               	movf	push@q& (0+255),w,b
 33241   003FA4  6ED9               	movwf	fsr2l,c
 33242   003FA6  6ADA               	clrf	fsr2h,c
 33243   003FA8  0E03               	movlw	3
 33244   003FAA  26D9               	addwf	fsr2l,f,c
 33245   003FAC  50DF               	movf	indf2,w,c
 33246   003FAE  6F95               	movwf	(??_push+5)& (0+255),b
 33247   003FB0  6B96               	clrf	(??_push+6)& (0+255),b
 33248   003FB2  0E01               	movlw	1
 33249   003FB4  2795               	addwf	(??_push+5)& (0+255),f,b
 33250   003FB6  0E00               	movlw	0
 33251   003FB8  2396               	addwfc	(??_push+6)& (0+255),f,b
 33252   003FBA  5193               	movf	(??_push+3)& (0+255),w,b
 33253   003FBC  1595               	andwf	(??_push+5)& (0+255),w,b
 33254   003FBE  6F97               	movwf	(??_push+7)& (0+255),b
 33255   003FC0  5194               	movf	(??_push+4)& (0+255),w,b
 33256   003FC2  1596               	andwf	(??_push+6)& (0+255),w,b
 33257   003FC4  6F98               	movwf	(??_push+8)& (0+255),b
 33258   003FC6  5190               	movf	??_push& (0+255),w,b
 33259   003FC8  1997               	xorwf	(??_push+7)& (0+255),w,b
 33260   003FCA  E106               	bnz	l18915
 33261   003FCC  5191               	movf	(??_push+1)& (0+255),w,b
 33262   003FCE  1998               	xorwf	(??_push+8)& (0+255),w,b
 33263   003FD0  A4D8               	btfss	status,2,c
 33264   003FD2  D002               	goto	l18915
 33265                           
 33266                           ; BSR set to: 0
 33267   003FD4  0E00               	movlw	0
 33268   003FD6  0012               	return	
 33269   003FD8                     l18915:
 33270                           
 33271                           ; BSR set to: 0
 33272   003FD8  EE20 F001          	lfsr	2,1
 33273   003FDC  518E               	movf	push@m& (0+255),w,b
 33274   003FDE  26D9               	addwf	fsr2l,f,c
 33275   003FE0  518F               	movf	(push@m+1)& (0+255),w,b
 33276   003FE2  22DA               	addwfc	fsr2h,f,c
 33277   003FE4  518D               	movf	push@q& (0+255),w,b
 33278   003FE6  6EE1               	movwf	fsr1l,c
 33279   003FE8  6AE2               	clrf	fsr1h,c
 33280   003FEA  0E03               	movlw	3
 33281   003FEC  26E1               	addwf	fsr1l,f,c
 33282   003FEE  50E7               	movf	indf1,w,c
 33283   003FF0  6F90               	movwf	??_push& (0+255),b
 33284   003FF2  5190               	movf	??_push& (0+255),w,b
 33285   003FF4  0D09               	mullw	9
 33286   003FF6  CFF3 F091          	movff	prodl,??_push+1
 33287   003FFA  CFF4 F092          	movff	prodh,??_push+2
 33288   003FFE  518D               	movf	push@q& (0+255),w,b
 33289   004000  6EE1               	movwf	fsr1l,c
 33290   004002  6AE2               	clrf	fsr1h,c
 33291   004004  CFE6 F093          	movff	postinc1,??_push+3
 33292   004008  CFE5 F094          	movff	postdec1,??_push+4
 33293   00400C  5191               	movf	(??_push+1)& (0+255),w,b
 33294   00400E  2593               	addwf	(??_push+3)& (0+255),w,b
 33295   004010  6F95               	movwf	(??_push+5)& (0+255),b
 33296   004012  5192               	movf	(??_push+2)& (0+255),w,b
 33297   004014  2194               	addwfc	(??_push+4)& (0+255),w,b
 33298   004016  6F96               	movwf	(??_push+6)& (0+255),b
 33299   004018  0E01               	movlw	1
 33300   00401A  2595               	addwf	(??_push+5)& (0+255),w,b
 33301   00401C  6EE1               	movwf	fsr1l,c
 33302   00401E  0E00               	movlw	0
 33303   004020  2196               	addwfc	(??_push+6)& (0+255),w,b
 33304   004022  6EE2               	movwf	fsr1h,c
 33305   004024  CFDF FFE7          	movff	indf2,indf1
 33306   004028  EE20 F002          	lfsr	2,2
 33307   00402C  518E               	movf	push@m& (0+255),w,b
 33308   00402E  26D9               	addwf	fsr2l,f,c
 33309   004030  518F               	movf	(push@m+1)& (0+255),w,b
 33310   004032  22DA               	addwfc	fsr2h,f,c
 33311   004034  518D               	movf	push@q& (0+255),w,b
 33312   004036  6EE1               	movwf	fsr1l,c
 33313   004038  6AE2               	clrf	fsr1h,c
 33314   00403A  0E03               	movlw	3
 33315   00403C  26E1               	addwf	fsr1l,f,c
 33316   00403E  50E7               	movf	indf1,w,c
 33317   004040  6F90               	movwf	??_push& (0+255),b
 33318   004042  5190               	movf	??_push& (0+255),w,b
 33319   004044  0D09               	mullw	9
 33320   004046  CFF3 F091          	movff	prodl,??_push+1
 33321   00404A  CFF4 F092          	movff	prodh,??_push+2
 33322   00404E  518D               	movf	push@q& (0+255),w,b
 33323   004050  6EE1               	movwf	fsr1l,c
 33324   004052  6AE2               	clrf	fsr1h,c
 33325   004054  CFE6 F093          	movff	postinc1,??_push+3
 33326   004058  CFE5 F094          	movff	postdec1,??_push+4
 33327   00405C  5191               	movf	(??_push+1)& (0+255),w,b
 33328   00405E  2593               	addwf	(??_push+3)& (0+255),w,b
 33329   004060  6F95               	movwf	(??_push+5)& (0+255),b
 33330   004062  5192               	movf	(??_push+2)& (0+255),w,b
 33331   004064  2194               	addwfc	(??_push+4)& (0+255),w,b
 33332   004066  6F96               	movwf	(??_push+6)& (0+255),b
 33333   004068  0E02               	movlw	2
 33334   00406A  2595               	addwf	(??_push+5)& (0+255),w,b
 33335   00406C  6EE1               	movwf	fsr1l,c
 33336   00406E  0E00               	movlw	0
 33337   004070  2196               	addwfc	(??_push+6)& (0+255),w,b
 33338   004072  6EE2               	movwf	fsr1h,c
 33339   004074  CFDF FFE7          	movff	indf2,indf1
 33340   004078  EE20 F003          	lfsr	2,3
 33341   00407C  518E               	movf	push@m& (0+255),w,b
 33342   00407E  26D9               	addwf	fsr2l,f,c
 33343   004080  518F               	movf	(push@m+1)& (0+255),w,b
 33344   004082  22DA               	addwfc	fsr2h,f,c
 33345   004084  518D               	movf	push@q& (0+255),w,b
 33346   004086  6EE1               	movwf	fsr1l,c
 33347   004088  6AE2               	clrf	fsr1h,c
 33348   00408A  0E03               	movlw	3
 33349   00408C  26E1               	addwf	fsr1l,f,c
 33350   00408E  50E7               	movf	indf1,w,c
 33351   004090  6F90               	movwf	??_push& (0+255),b
 33352   004092  5190               	movf	??_push& (0+255),w,b
 33353   004094  0D09               	mullw	9
 33354   004096  CFF3 F091          	movff	prodl,??_push+1
 33355   00409A  CFF4 F092          	movff	prodh,??_push+2
 33356   00409E  518D               	movf	push@q& (0+255),w,b
 33357   0040A0  6EE1               	movwf	fsr1l,c
 33358   0040A2  6AE2               	clrf	fsr1h,c
 33359   0040A4  CFE6 F093          	movff	postinc1,??_push+3
 33360   0040A8  CFE5 F094          	movff	postdec1,??_push+4
 33361   0040AC  5191               	movf	(??_push+1)& (0+255),w,b
 33362   0040AE  2593               	addwf	(??_push+3)& (0+255),w,b
 33363   0040B0  6F95               	movwf	(??_push+5)& (0+255),b
 33364   0040B2  5192               	movf	(??_push+2)& (0+255),w,b
 33365   0040B4  2194               	addwfc	(??_push+4)& (0+255),w,b
 33366   0040B6  6F96               	movwf	(??_push+6)& (0+255),b
 33367   0040B8  0E03               	movlw	3
 33368   0040BA  2595               	addwf	(??_push+5)& (0+255),w,b
 33369   0040BC  6EE1               	movwf	fsr1l,c
 33370   0040BE  0E00               	movlw	0
 33371   0040C0  2196               	addwfc	(??_push+6)& (0+255),w,b
 33372   0040C2  6EE2               	movwf	fsr1h,c
 33373   0040C4  CFDF FFE7          	movff	indf2,indf1
 33374   0040C8  EE20 F004          	lfsr	2,4
 33375   0040CC  518E               	movf	push@m& (0+255),w,b
 33376   0040CE  26D9               	addwf	fsr2l,f,c
 33377   0040D0  518F               	movf	(push@m+1)& (0+255),w,b
 33378   0040D2  22DA               	addwfc	fsr2h,f,c
 33379   0040D4  518D               	movf	push@q& (0+255),w,b
 33380   0040D6  6EE1               	movwf	fsr1l,c
 33381   0040D8  6AE2               	clrf	fsr1h,c
 33382   0040DA  0E03               	movlw	3
 33383   0040DC  26E1               	addwf	fsr1l,f,c
 33384   0040DE  50E7               	movf	indf1,w,c
 33385   0040E0  6F90               	movwf	??_push& (0+255),b
 33386   0040E2  5190               	movf	??_push& (0+255),w,b
 33387   0040E4  0D09               	mullw	9
 33388   0040E6  CFF3 F091          	movff	prodl,??_push+1
 33389   0040EA  CFF4 F092          	movff	prodh,??_push+2
 33390   0040EE  518D               	movf	push@q& (0+255),w,b
 33391   0040F0  6EE1               	movwf	fsr1l,c
 33392   0040F2  6AE2               	clrf	fsr1h,c
 33393   0040F4  CFE6 F093          	movff	postinc1,??_push+3
 33394   0040F8  CFE5 F094          	movff	postdec1,??_push+4
 33395   0040FC  5191               	movf	(??_push+1)& (0+255),w,b
 33396   0040FE  2593               	addwf	(??_push+3)& (0+255),w,b
 33397   004100  6F95               	movwf	(??_push+5)& (0+255),b
 33398   004102  5192               	movf	(??_push+2)& (0+255),w,b
 33399   004104  2194               	addwfc	(??_push+4)& (0+255),w,b
 33400   004106  6F96               	movwf	(??_push+6)& (0+255),b
 33401   004108  0E04               	movlw	4
 33402   00410A  2595               	addwf	(??_push+5)& (0+255),w,b
 33403   00410C  6EE1               	movwf	fsr1l,c
 33404   00410E  0E00               	movlw	0
 33405   004110  2196               	addwfc	(??_push+6)& (0+255),w,b
 33406   004112  6EE2               	movwf	fsr1h,c
 33407   004114  CFDF FFE7          	movff	indf2,indf1
 33408   004118  EE20 F005          	lfsr	2,5
 33409   00411C  518E               	movf	push@m& (0+255),w,b
 33410   00411E  26D9               	addwf	fsr2l,f,c
 33411   004120  518F               	movf	(push@m+1)& (0+255),w,b
 33412   004122  22DA               	addwfc	fsr2h,f,c
 33413   004124  518D               	movf	push@q& (0+255),w,b
 33414   004126  6EE1               	movwf	fsr1l,c
 33415   004128  6AE2               	clrf	fsr1h,c
 33416   00412A  0E03               	movlw	3
 33417   00412C  26E1               	addwf	fsr1l,f,c
 33418   00412E  50E7               	movf	indf1,w,c
 33419   004130  6F90               	movwf	??_push& (0+255),b
 33420   004132  5190               	movf	??_push& (0+255),w,b
 33421   004134  0D09               	mullw	9
 33422   004136  CFF3 F091          	movff	prodl,??_push+1
 33423   00413A  CFF4 F092          	movff	prodh,??_push+2
 33424   00413E  518D               	movf	push@q& (0+255),w,b
 33425   004140  6EE1               	movwf	fsr1l,c
 33426   004142  6AE2               	clrf	fsr1h,c
 33427   004144  CFE6 F093          	movff	postinc1,??_push+3
 33428   004148  CFE5 F094          	movff	postdec1,??_push+4
 33429   00414C  5191               	movf	(??_push+1)& (0+255),w,b
 33430   00414E  2593               	addwf	(??_push+3)& (0+255),w,b
 33431   004150  6F95               	movwf	(??_push+5)& (0+255),b
 33432   004152  5192               	movf	(??_push+2)& (0+255),w,b
 33433   004154  2194               	addwfc	(??_push+4)& (0+255),w,b
 33434   004156  6F96               	movwf	(??_push+6)& (0+255),b
 33435   004158  0E05               	movlw	5
 33436   00415A  2595               	addwf	(??_push+5)& (0+255),w,b
 33437   00415C  6EE1               	movwf	fsr1l,c
 33438   00415E  0E00               	movlw	0
 33439   004160  2196               	addwfc	(??_push+6)& (0+255),w,b
 33440   004162  6EE2               	movwf	fsr1h,c
 33441   004164  CFDF FFE7          	movff	indf2,indf1
 33442   004168  EE20 F006          	lfsr	2,6
 33443   00416C  518E               	movf	push@m& (0+255),w,b
 33444   00416E  26D9               	addwf	fsr2l,f,c
 33445   004170  518F               	movf	(push@m+1)& (0+255),w,b
 33446   004172  22DA               	addwfc	fsr2h,f,c
 33447   004174  518D               	movf	push@q& (0+255),w,b
 33448   004176  6EE1               	movwf	fsr1l,c
 33449   004178  6AE2               	clrf	fsr1h,c
 33450   00417A  0E03               	movlw	3
 33451   00417C  26E1               	addwf	fsr1l,f,c
 33452   00417E  50E7               	movf	indf1,w,c
 33453   004180  6F90               	movwf	??_push& (0+255),b
 33454   004182  5190               	movf	??_push& (0+255),w,b
 33455   004184  0D09               	mullw	9
 33456   004186  CFF3 F091          	movff	prodl,??_push+1
 33457   00418A  CFF4 F092          	movff	prodh,??_push+2
 33458   00418E  518D               	movf	push@q& (0+255),w,b
 33459   004190  6EE1               	movwf	fsr1l,c
 33460   004192  6AE2               	clrf	fsr1h,c
 33461   004194  CFE6 F093          	movff	postinc1,??_push+3
 33462   004198  CFE5 F094          	movff	postdec1,??_push+4
 33463   00419C  5191               	movf	(??_push+1)& (0+255),w,b
 33464   00419E  2593               	addwf	(??_push+3)& (0+255),w,b
 33465   0041A0  6F95               	movwf	(??_push+5)& (0+255),b
 33466   0041A2  5192               	movf	(??_push+2)& (0+255),w,b
 33467   0041A4  2194               	addwfc	(??_push+4)& (0+255),w,b
 33468   0041A6  6F96               	movwf	(??_push+6)& (0+255),b
 33469   0041A8  0E06               	movlw	6
 33470   0041AA  2595               	addwf	(??_push+5)& (0+255),w,b
 33471   0041AC  6EE1               	movwf	fsr1l,c
 33472   0041AE  0E00               	movlw	0
 33473   0041B0  2196               	addwfc	(??_push+6)& (0+255),w,b
 33474   0041B2  6EE2               	movwf	fsr1h,c
 33475   0041B4  CFDF FFE7          	movff	indf2,indf1
 33476   0041B8  EE20 F007          	lfsr	2,7
 33477   0041BC  518E               	movf	push@m& (0+255),w,b
 33478   0041BE  26D9               	addwf	fsr2l,f,c
 33479   0041C0  518F               	movf	(push@m+1)& (0+255),w,b
 33480   0041C2  22DA               	addwfc	fsr2h,f,c
 33481   0041C4  518D               	movf	push@q& (0+255),w,b
 33482   0041C6  6EE1               	movwf	fsr1l,c
 33483   0041C8  6AE2               	clrf	fsr1h,c
 33484   0041CA  0E03               	movlw	3
 33485   0041CC  26E1               	addwf	fsr1l,f,c
 33486   0041CE  50E7               	movf	indf1,w,c
 33487   0041D0  6F90               	movwf	??_push& (0+255),b
 33488   0041D2  5190               	movf	??_push& (0+255),w,b
 33489   0041D4  0D09               	mullw	9
 33490   0041D6  CFF3 F091          	movff	prodl,??_push+1
 33491   0041DA  CFF4 F092          	movff	prodh,??_push+2
 33492   0041DE  518D               	movf	push@q& (0+255),w,b
 33493   0041E0  6EE1               	movwf	fsr1l,c
 33494   0041E2  6AE2               	clrf	fsr1h,c
 33495   0041E4  CFE6 F093          	movff	postinc1,??_push+3
 33496   0041E8  CFE5 F094          	movff	postdec1,??_push+4
 33497   0041EC  5191               	movf	(??_push+1)& (0+255),w,b
 33498   0041EE  2593               	addwf	(??_push+3)& (0+255),w,b
 33499   0041F0  6F95               	movwf	(??_push+5)& (0+255),b
 33500   0041F2  5192               	movf	(??_push+2)& (0+255),w,b
 33501   0041F4  2194               	addwfc	(??_push+4)& (0+255),w,b
 33502   0041F6  6F96               	movwf	(??_push+6)& (0+255),b
 33503   0041F8  0E07               	movlw	7
 33504   0041FA  2595               	addwf	(??_push+5)& (0+255),w,b
 33505   0041FC  6EE1               	movwf	fsr1l,c
 33506   0041FE  0E00               	movlw	0
 33507   004200  2196               	addwfc	(??_push+6)& (0+255),w,b
 33508   004202  6EE2               	movwf	fsr1h,c
 33509   004204  CFDF FFE7          	movff	indf2,indf1
 33510   004208  EE20 F008          	lfsr	2,8
 33511   00420C  518E               	movf	push@m& (0+255),w,b
 33512   00420E  26D9               	addwf	fsr2l,f,c
 33513   004210  518F               	movf	(push@m+1)& (0+255),w,b
 33514   004212  22DA               	addwfc	fsr2h,f,c
 33515   004214  518D               	movf	push@q& (0+255),w,b
 33516   004216  6EE1               	movwf	fsr1l,c
 33517   004218  6AE2               	clrf	fsr1h,c
 33518   00421A  0E03               	movlw	3
 33519   00421C  26E1               	addwf	fsr1l,f,c
 33520   00421E  50E7               	movf	indf1,w,c
 33521   004220  6F90               	movwf	??_push& (0+255),b
 33522   004222  5190               	movf	??_push& (0+255),w,b
 33523   004224  0D09               	mullw	9
 33524   004226  CFF3 F091          	movff	prodl,??_push+1
 33525   00422A  CFF4 F092          	movff	prodh,??_push+2
 33526   00422E  518D               	movf	push@q& (0+255),w,b
 33527   004230  6EE1               	movwf	fsr1l,c
 33528   004232  6AE2               	clrf	fsr1h,c
 33529   004234  CFE6 F093          	movff	postinc1,??_push+3
 33530   004238  CFE5 F094          	movff	postdec1,??_push+4
 33531   00423C  5191               	movf	(??_push+1)& (0+255),w,b
 33532   00423E  2593               	addwf	(??_push+3)& (0+255),w,b
 33533   004240  6F95               	movwf	(??_push+5)& (0+255),b
 33534   004242  5192               	movf	(??_push+2)& (0+255),w,b
 33535   004244  2194               	addwfc	(??_push+4)& (0+255),w,b
 33536   004246  6F96               	movwf	(??_push+6)& (0+255),b
 33537   004248  0E08               	movlw	8
 33538   00424A  2595               	addwf	(??_push+5)& (0+255),w,b
 33539   00424C  6EE1               	movwf	fsr1l,c
 33540   00424E  0E00               	movlw	0
 33541   004250  2196               	addwfc	(??_push+6)& (0+255),w,b
 33542   004252  6EE2               	movwf	fsr1h,c
 33543   004254  CFDF FFE7          	movff	indf2,indf1
 33544   004258  C08E  FFD9         	movff	push@m,fsr2l
 33545   00425C  C08F  FFDA         	movff	push@m+1,fsr2h
 33546   004260  518D               	movf	push@q& (0+255),w,b
 33547   004262  6EE1               	movwf	fsr1l,c
 33548   004264  6AE2               	clrf	fsr1h,c
 33549   004266  0E03               	movlw	3
 33550   004268  26E1               	addwf	fsr1l,f,c
 33551   00426A  50E7               	movf	indf1,w,c
 33552   00426C  6F90               	movwf	??_push& (0+255),b
 33553   00426E  5190               	movf	??_push& (0+255),w,b
 33554   004270  0D09               	mullw	9
 33555   004272  CFF3 F091          	movff	prodl,??_push+1
 33556   004276  CFF4 F092          	movff	prodh,??_push+2
 33557   00427A  518D               	movf	push@q& (0+255),w,b
 33558   00427C  6EE1               	movwf	fsr1l,c
 33559   00427E  6AE2               	clrf	fsr1h,c
 33560   004280  CFE6 F093          	movff	postinc1,??_push+3
 33561   004284  CFE5 F094          	movff	postdec1,??_push+4
 33562   004288  5191               	movf	(??_push+1)& (0+255),w,b
 33563   00428A  2593               	addwf	(??_push+3)& (0+255),w,b
 33564   00428C  6EE1               	movwf	fsr1l,c
 33565   00428E  5192               	movf	(??_push+2)& (0+255),w,b
 33566   004290  2194               	addwfc	(??_push+4)& (0+255),w,b
 33567   004292  6EE2               	movwf	fsr1h,c
 33568   004294  CFDF FFE7          	movff	indf2,indf1
 33569                           
 33570                           ; BSR set to: 0
 33571   004298  518D               	movf	push@q& (0+255),w,b
 33572   00429A  6ED9               	movwf	fsr2l,c
 33573   00429C  6ADA               	clrf	fsr2h,c
 33574   00429E  0E03               	movlw	3
 33575   0042A0  26D9               	addwf	fsr2l,f,c
 33576   0042A2  2ADF               	incf	indf2,f,c
 33577                           
 33578                           ; BSR set to: 0
 33579   0042A4  518D               	movf	push@q& (0+255),w,b
 33580   0042A6  6ED9               	movwf	fsr2l,c
 33581   0042A8  6ADA               	clrf	fsr2h,c
 33582   0042AA  0E04               	movlw	4
 33583   0042AC  26D9               	addwf	fsr2l,f,c
 33584   0042AE  518D               	movf	push@q& (0+255),w,b
 33585   0042B0  6EE1               	movwf	fsr1l,c
 33586   0042B2  6AE2               	clrf	fsr1h,c
 33587   0042B4  0E03               	movlw	3
 33588   0042B6  26E1               	addwf	fsr1l,f,c
 33589   0042B8  50DE               	movf	postinc2,w,c
 33590   0042BA  5CE6               	subwf	postinc1,w,c
 33591   0042BC  A0D8               	btfss	status,0,c
 33592   0042BE  D006               	goto	l18923
 33593                           
 33594                           ; BSR set to: 0
 33595   0042C0  518D               	movf	push@q& (0+255),w,b
 33596   0042C2  6ED9               	movwf	fsr2l,c
 33597   0042C4  6ADA               	clrf	fsr2h,c
 33598   0042C6  0E03               	movlw	3
 33599   0042C8  26D9               	addwf	fsr2l,f,c
 33600   0042CA  6ADF               	clrf	indf2,c
 33601   0042CC                     l18923:
 33602                           
 33603                           ; BSR set to: 0
 33604   0042CC  0E01               	movlw	1
 33605                           
 33606                           ; BSR set to: 0
 33607   0042CE  0012               	return		;funcret
 33608   0042D0                     __end_of_push:
 33609                           	callstack 0
 33610                           
 33611 ;; *************** function _isEvent *****************
 33612 ;; Defined at:
 33613 ;;		line 1116 in file "../../VLCBlib_PIC/vlcb.c"
 33614 ;; Parameters:    Size  Location     Type
 33615 ;;  opc             1    wreg     unsigned char 
 33616 ;; Auto vars:     Size  Location     Type
 33617 ;;  opc             1   46[BANK0 ] unsigned char 
 33618 ;; Return value:  Size  Location     Type
 33619 ;;                  1    wreg      enum E12760
 33620 ;; Registers used:
 33621 ;;		wreg, status,2, status,0
 33622 ;; Tracked objects:
 33623 ;;		On entry : 0/0
 33624 ;;		On exit  : 0/0
 33625 ;;		Unchanged: 0/0
 33626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33628 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33630 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33631 ;;Total ram usage:        2 bytes
 33632 ;; Hardware stack levels used: 1
 33633 ;; Hardware stack levels required when called: 12
 33634 ;; This function calls:
 33635 ;;		Nothing
 33636 ;; This function is called by:
 33637 ;;		_canSendMessage
 33638 ;; This function uses a non-reentrant model
 33639 ;;
 33640                           
 33641                           	psect	text131
 33642   00BFF4                     __ptext131:
 33643                           	callstack 0
 33644   00BFF4                     _isEvent:
 33645                           	callstack 12
 33646                           
 33647                           ; BSR set to: 0
 33648                           ;incstack = 0
 33649                           ;isEvent@opc stored from wreg
 33650   00BFF4  0100               	movlb	0	; () banked
 33651   00BFF6  6F8E               	movwf	isEvent@opc& (0+255),b
 33652                           
 33653                           ;../../VLCBlib_PIC/vlcb.c: 1117:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 33654   00BFF8  0E00               	movlw	0
 33655   00BFFA  0100               	movlb	0	; () banked
 33656   00BFFC  6F8D               	movwf	_isEvent$4861& (0+255),b
 33657                           
 33658                           ; BSR set to: 0
 33659   00BFFE  518E               	movf	isEvent@opc& (0+255),w,b
 33660   00C000  0B90               	andlw	144
 33661   00C002  0A90               	xorlw	144
 33662   00C004  A4D8               	btfss	status,2,c
 33663   00C006  D008               	goto	l2011
 33664                           
 33665                           ; BSR set to: 0
 33666   00C008  518E               	movf	isEvent@opc& (0+255),w,b
 33667   00C00A  0AFF               	xorlw	255
 33668   00C00C  0B06               	andlw	6
 33669   00C00E  0A06               	xorlw	6
 33670   00C010  A4D8               	btfss	status,2,c
 33671   00C012  D002               	goto	l2011
 33672                           
 33673                           ; BSR set to: 0
 33674   00C014  0E01               	movlw	1
 33675   00C016  6F8D               	movwf	_isEvent$4861& (0+255),b
 33676   00C018                     l2011:
 33677                           
 33678                           ; BSR set to: 0
 33679   00C018  518D               	movf	_isEvent$4861& (0+255),w,b
 33680                           
 33681                           ; BSR set to: 0
 33682   00C01A  0012               	return		;funcret
 33683   00C01C                     __end_of_isEvent:
 33684                           	callstack 0
 33685                           
 33686 ;; *************** function _have *****************
 33687 ;; Defined at:
 33688 ;;		line 837 in file "../../VLCBlib_PIC/vlcb.c"
 33689 ;; Parameters:    Size  Location     Type
 33690 ;;  id              1    wreg     unsigned char 
 33691 ;; Auto vars:     Size  Location     Type
 33692 ;;  id              1   47[BANK0 ] unsigned char 
 33693 ;;  i               1   48[BANK0 ] unsigned char 
 33694 ;; Return value:  Size  Location     Type
 33695 ;;                  1    wreg      enum E12891
 33696 ;; Registers used:
 33697 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33698 ;; Tracked objects:
 33699 ;;		On entry : 0/0
 33700 ;;		On exit  : 0/0
 33701 ;;		Unchanged: 0/0
 33702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33704 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33705 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33706 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33707 ;;Total ram usage:        4 bytes
 33708 ;; Hardware stack levels used: 1
 33709 ;; Hardware stack levels required when called: 12
 33710 ;; This function calls:
 33711 ;;		Nothing
 33712 ;; This function is called by:
 33713 ;;		_getParameterFlags
 33714 ;;		_getParameter
 33715 ;;		_canSendMessage
 33716 ;; This function uses a non-reentrant model
 33717 ;;
 33718                           
 33719                           	psect	text132
 33720   00ABDA                     __ptext132:
 33721                           	callstack 0
 33722   00ABDA                     _have:
 33723                           	callstack 12
 33724                           
 33725                           ; BSR set to: 0
 33726                           ;incstack = 0
 33727                           ;have@id stored from wreg
 33728   00ABDA  0100               	movlb	0	; () banked
 33729   00ABDC  6F8F               	movwf	have@id& (0+255),b
 33730                           
 33731                           ;../../VLCBlib_PIC/vlcb.c: 838:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 839:     for (i
      +                          =0; i<9; i++) {
 33732   00ABDE  0E00               	movlw	0
 33733   00ABE0  0100               	movlb	0	; () banked
 33734   00ABE2  6F90               	movwf	have@i& (0+255),b
 33735   00ABE4                     l18883:
 33736                           
 33737                           ; BSR set to: 0
 33738                           ;../../VLCBlib_PIC/vlcb.c: 840:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 33739   00ABE4  5190               	movf	have@i& (0+255),w,b
 33740   00ABE6  0D02               	mullw	2
 33741   00ABE8  0E75               	movlw	low _services
 33742   00ABEA  24F3               	addwf	243,w,c
 33743   00ABEC  6EF6               	movwf	tblptrl,c
 33744   00ABEE  0EEE               	movlw	high _services
 33745   00ABF0  20F4               	addwfc	244,w,c
 33746   00ABF2  6EF7               	movwf	tblptrh,c
 33747   00ABF4                     	if	1	;There are 3 active tblptr bytes
 33748   00ABF4  6AF8               	clrf	tblptru,c
 33749   00ABF6  0E00               	movlw	low (__mediumconst shr (0+16))
 33750   00ABF8  22F8               	addwfc	tblptru,f,c
 33751   00ABFA                     	endif
 33752   00ABFA  0009               	tblrd		*+
 33753   00ABFC  50F5               	movf	tablat,w,c
 33754   00ABFE  0009               	tblrd		*+
 33755   00AC00  10F5               	iorwf	tablat,w,c
 33756   00AC02  B4D8               	btfsc	status,2,c
 33757   00AC04  D01D               	goto	l18891
 33758                           
 33759                           ; BSR set to: 0
 33760   00AC06  5190               	movf	have@i& (0+255),w,b
 33761   00AC08  0D02               	mullw	2
 33762   00AC0A  0E75               	movlw	low _services
 33763   00AC0C  24F3               	addwf	243,w,c
 33764   00AC0E  6EF6               	movwf	tblptrl,c
 33765   00AC10  0EEE               	movlw	high _services
 33766   00AC12  20F4               	addwfc	244,w,c
 33767   00AC14  6EF7               	movwf	tblptrh,c
 33768   00AC16                     	if	1	;There are 3 active tblptr bytes
 33769   00AC16  6AF8               	clrf	tblptru,c
 33770   00AC18  0E00               	movlw	low (__mediumconst shr (0+16))
 33771   00AC1A  22F8               	addwfc	tblptru,f,c
 33772   00AC1C                     	endif
 33773   00AC1C  0009               	tblrd		*+
 33774   00AC1E  CFF5 F08D          	movff	tablat,??_have
 33775   00AC22  0009               	tblrd		*+
 33776   00AC24  CFF5 F08E          	movff	tablat,??_have+1
 33777   00AC28  C08D  FFF6         	movff	??_have,tblptrl
 33778   00AC2C  C08E  FFF7         	movff	??_have+1,tblptrh
 33779   00AC30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33780   00AC30  6AF8               	clrf	tblptru,c
 33781   00AC32                     	endif
 33782   00AC32                     	if	0	;tblptru may be non-zero
 33783   00AC32                     	endif
 33784   00AC32  0008               	tblrd		*
 33785   00AC34  50F5               	movf	tablat,w,c
 33786   00AC36  198F               	xorwf	have@id& (0+255),w,b
 33787   00AC38  A4D8               	btfss	status,2,c
 33788   00AC3A  D002               	goto	l18891
 33789                           
 33790                           ; BSR set to: 0
 33791                           ;../../VLCBlib_PIC/vlcb.c: 841:             return PRESENT;
 33792   00AC3C  0E01               	movlw	1
 33793   00AC3E  0012               	return	
 33794   00AC40                     l18891:
 33795                           
 33796                           ; BSR set to: 0
 33797                           ;../../VLCBlib_PIC/vlcb.c: 843:     }
 33798   00AC40  2B90               	incf	have@i& (0+255),f,b
 33799                           
 33800                           ; BSR set to: 0
 33801   00AC42  0E08               	movlw	8
 33802   00AC44  6590               	cpfsgt	have@i& (0+255),b
 33803   00AC46  D7CE               	goto	l18883
 33804                           
 33805                           ; BSR set to: 0
 33806                           ;../../VLCBlib_PIC/vlcb.c: 844:     return NOT_PRESENT;
 33807   00AC48  0E00               	movlw	0
 33808                           
 33809                           ; BSR set to: 0
 33810   00AC4A  0012               	return		;funcret
 33811   00AC4C                     __end_of_have:
 33812                           	callstack 0
 33813                           
 33814 ;; *************** function _getNextWriteMessage *****************
 33815 ;; Defined at:
 33816 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 33817 ;; Parameters:    Size  Location     Type
 33818 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33819 ;;		 -> rxQueue(5), 
 33820 ;; Auto vars:     Size  Location     Type
 33821 ;;  wr              1   56[BANK0 ] unsigned char 
 33822 ;; Return value:  Size  Location     Type
 33823 ;;                  2   45[BANK0 ] PTR struct Message
 33824 ;; Registers used:
 33825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33826 ;; Tracked objects:
 33827 ;;		On entry : 0/0
 33828 ;;		On exit  : 0/0
 33829 ;;		Unchanged: 0/0
 33830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33833 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33834 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33835 ;;Total ram usage:       12 bytes
 33836 ;; Hardware stack levels used: 1
 33837 ;; Hardware stack levels required when called: 12
 33838 ;; This function calls:
 33839 ;;		Nothing
 33840 ;; This function is called by:
 33841 ;;		_canSendMessage
 33842 ;; This function uses a non-reentrant model
 33843 ;;
 33844                           
 33845                           	psect	text133
 33846   008AAC                     __ptext133:
 33847                           	callstack 0
 33848   008AAC                     _getNextWriteMessage:
 33849                           	callstack 12
 33850                           
 33851                           ; BSR set to: 0
 33852                           ;incstack = 0
 33853   008AAC  0100               	movlb	0	; () banked
 33854   008AAE  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33855   008AB0  6ED9               	movwf	fsr2l,c
 33856   008AB2  6ADA               	clrf	fsr2h,c
 33857   008AB4  0E02               	movlw	2
 33858   008AB6  26D9               	addwf	fsr2l,f,c
 33859   008AB8  50DF               	movf	indf2,w,c
 33860   008ABA  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 33861   008ABC  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 33862   008ABE  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33863   008AC0  6ED9               	movwf	fsr2l,c
 33864   008AC2  6ADA               	clrf	fsr2h,c
 33865   008AC4  0E04               	movlw	4
 33866   008AC6  26D9               	addwf	fsr2l,f,c
 33867   008AC8  50DF               	movf	indf2,w,c
 33868   008ACA  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 33869   008ACC  0EFF               	movlw	255
 33870   008ACE  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33871   008AD0  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 33872   008AD2  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 33873   008AD4  0EFF               	movlw	255
 33874   008AD6  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 33875   008AD8  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33876   008ADA  6ED9               	movwf	fsr2l,c
 33877   008ADC  6ADA               	clrf	fsr2h,c
 33878   008ADE  0E03               	movlw	3
 33879   008AE0  26D9               	addwf	fsr2l,f,c
 33880   008AE2  50DF               	movf	indf2,w,c
 33881   008AE4  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 33882   008AE6  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 33883   008AE8  0E01               	movlw	1
 33884   008AEA  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 33885   008AEC  0E00               	movlw	0
 33886   008AEE  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 33887   008AF0  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 33888   008AF2  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 33889   008AF4  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 33890   008AF6  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 33891   008AF8  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 33892   008AFA  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 33893   008AFC  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33894   008AFE  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 33895   008B00  E109               	bnz	l18933
 33896   008B02  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33897   008B04  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 33898   008B06  A4D8               	btfss	status,2,c
 33899   008B08  D005               	goto	l18933
 33900                           
 33901                           ; BSR set to: 0
 33902   008B0A  0E00               	movlw	0
 33903   008B0C  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33904   008B0E  0E00               	movlw	0
 33905   008B10  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33906   008B12  0012               	return	
 33907   008B14                     l18933:
 33908                           
 33909                           ; BSR set to: 0
 33910   008B14  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33911   008B16  6ED9               	movwf	fsr2l,c
 33912   008B18  6ADA               	clrf	fsr2h,c
 33913   008B1A  0E03               	movlw	3
 33914   008B1C  26D9               	addwf	fsr2l,f,c
 33915   008B1E  50DF               	movf	indf2,w,c
 33916   008B20  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 33917   008B22  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33918   008B24  6ED9               	movwf	fsr2l,c
 33919   008B26  6ADA               	clrf	fsr2h,c
 33920   008B28  0E03               	movlw	3
 33921   008B2A  26D9               	addwf	fsr2l,f,c
 33922   008B2C  2ADF               	incf	indf2,f,c
 33923                           
 33924                           ; BSR set to: 0
 33925   008B2E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33926   008B30  6ED9               	movwf	fsr2l,c
 33927   008B32  6ADA               	clrf	fsr2h,c
 33928   008B34  0E04               	movlw	4
 33929   008B36  26D9               	addwf	fsr2l,f,c
 33930   008B38  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33931   008B3A  6EE1               	movwf	fsr1l,c
 33932   008B3C  6AE2               	clrf	fsr1h,c
 33933   008B3E  0E03               	movlw	3
 33934   008B40  26E1               	addwf	fsr1l,f,c
 33935   008B42  50DE               	movf	postinc2,w,c
 33936   008B44  5CE6               	subwf	postinc1,w,c
 33937   008B46  A0D8               	btfss	status,0,c
 33938   008B48  D006               	goto	l18939
 33939                           
 33940                           ; BSR set to: 0
 33941   008B4A  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33942   008B4C  6ED9               	movwf	fsr2l,c
 33943   008B4E  6ADA               	clrf	fsr2h,c
 33944   008B50  0E03               	movlw	3
 33945   008B52  26D9               	addwf	fsr2l,f,c
 33946   008B54  6ADF               	clrf	indf2,c
 33947   008B56                     l18939:
 33948                           
 33949                           ; BSR set to: 0
 33950   008B56  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 33951   008B58  0D09               	mullw	9
 33952   008B5A  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 33953   008B5E  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 33954   008B62  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33955   008B64  6ED9               	movwf	fsr2l,c
 33956   008B66  6ADA               	clrf	fsr2h,c
 33957   008B68  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 33958   008B6C  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 33959   008B70  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33960   008B72  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33961   008B74  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33962   008B76  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33963   008B78  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 33964   008B7A  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33965                           
 33966                           ; BSR set to: 0
 33967   008B7C  0012               	return		;funcret
 33968   008B7E                     __end_of_getNextWriteMessage:
 33969                           	callstack 0
 33970                           
 33971 ;; *************** function _readInput *****************
 33972 ;; Defined at:
 33973 ;;		line 174 in file "../inputs.c"
 33974 ;; Parameters:    Size  Location     Type
 33975 ;;  io              1    wreg     unsigned char 
 33976 ;; Auto vars:     Size  Location     Type
 33977 ;;  io              1   51[BANK0 ] unsigned char 
 33978 ;; Return value:  Size  Location     Type
 33979 ;;                  1    wreg      enum E12711
 33980 ;; Registers used:
 33981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33982 ;; Tracked objects:
 33983 ;;		On entry : 0/0
 33984 ;;		On exit  : 0/0
 33985 ;;		Unchanged: 0/0
 33986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33989 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33990 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33991 ;;Total ram usage:        3 bytes
 33992 ;; Hardware stack levels used: 1
 33993 ;; Hardware stack levels required when called: 13
 33994 ;; This function calls:
 33995 ;;		_getNV
 33996 ;; This function is called by:
 33997 ;;		_initInputScan
 33998 ;;		_inputScan
 33999 ;; This function uses a non-reentrant model
 34000 ;;
 34001                           
 34002                           	psect	text134
 34003   007EAE                     __ptext134:
 34004                           	callstack 0
 34005   007EAE                     _readInput:
 34006                           	callstack 15
 34007                           
 34008                           ; BSR set to: 0
 34009                           ;incstack = 0
 34010                           ;readInput@io stored from wreg
 34011   007EAE  0100               	movlb	0	; () banked
 34012   007EB0  6F93               	movwf	readInput@io& (0+255),b
 34013                           
 34014                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 34015   007EB2  0100               	movlb	0	; () banked
 34016   007EB4  5193               	movf	readInput@io& (0+255),w,b
 34017   007EB6  0D07               	mullw	7
 34018   007EB8  50F3               	movf	243,w,c
 34019   007EBA  0F10               	addlw	16
 34020   007EBC  EC21  F05D         	call	_getNV
 34021   007EC0  0100               	movlb	0	; () banked
 34022   007EC2  518D               	movf	?_getNV& (0+255),w,b
 34023   007EC4  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 34024   007EC6  B4D8               	btfsc	status,2,c
 34025   007EC8  D05B               	goto	l20995
 34026   007ECA  D074               	goto	l20997
 34027   007ECC                     l20981:
 34028                           
 34029                           ; BSR set to: 0
 34030                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 34031   007ECC  5193               	movf	readInput@io& (0+255),w,b
 34032   007ECE  0D04               	mullw	4
 34033   007ED0  0E02               	movlw	2
 34034   007ED2  26F3               	addwf	243,f,c
 34035   007ED4  0E00               	movlw	0
 34036   007ED6  22F4               	addwfc	244,f,c
 34037   007ED8  0E35               	movlw	low _configs
 34038   007EDA  24F3               	addwf	243,w,c
 34039   007EDC  6EF6               	movwf	tblptrl,c
 34040   007EDE  0EEE               	movlw	high _configs
 34041   007EE0  20F4               	addwfc	244,w,c
 34042   007EE2  6EF7               	movwf	tblptrh,c
 34043   007EE4                     	if	1	;There are 3 active tblptr bytes
 34044   007EE4  6AF8               	clrf	tblptru,c
 34045   007EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 34046   007EE8  22F8               	addwfc	tblptru,f,c
 34047   007EEA                     	endif
 34048   007EEA  0008               	tblrd		*
 34049   007EEC  CFF5 F091          	movff	tablat,??_readInput
 34050   007EF0  0E01               	movlw	1
 34051   007EF2  6F92               	movwf	(??_readInput+1)& (0+255),b
 34052   007EF4  2B91               	incf	??_readInput& (0+255),f,b
 34053   007EF6  D002               	goto	u21724
 34054   007EF8                     u21725:
 34055   007EF8  90D8               	bcf	status,0,c
 34056   007EFA  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34057   007EFC                     u21724:
 34058   007EFC  2F91               	decfsz	??_readInput& (0+255),f,b
 34059   007EFE  D7FC               	goto	u21725
 34060   007F00  0100               	movlb	0	; () banked
 34061   007F02  5192               	movf	(??_readInput+1)& (0+255),w,b
 34062   007F04  1480               	andwf	128,w,c	;volatile
 34063   007F06  0012               	return	
 34064   007F08                     l20985:
 34065                           
 34066                           ; BSR set to: 0
 34067                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 34068   007F08  5193               	movf	readInput@io& (0+255),w,b
 34069   007F0A  0D04               	mullw	4
 34070   007F0C  0E02               	movlw	2
 34071   007F0E  26F3               	addwf	243,f,c
 34072   007F10  0E00               	movlw	0
 34073   007F12  22F4               	addwfc	244,f,c
 34074   007F14  0E35               	movlw	low _configs
 34075   007F16  24F3               	addwf	243,w,c
 34076   007F18  6EF6               	movwf	tblptrl,c
 34077   007F1A  0EEE               	movlw	high _configs
 34078   007F1C  20F4               	addwfc	244,w,c
 34079   007F1E  6EF7               	movwf	tblptrh,c
 34080   007F20                     	if	1	;There are 3 active tblptr bytes
 34081   007F20  6AF8               	clrf	tblptru,c
 34082   007F22  0E00               	movlw	low (__mediumconst shr (0+16))
 34083   007F24  22F8               	addwfc	tblptru,f,c
 34084   007F26                     	endif
 34085   007F26  0008               	tblrd		*
 34086   007F28  CFF5 F091          	movff	tablat,??_readInput
 34087   007F2C  0E01               	movlw	1
 34088   007F2E  6F92               	movwf	(??_readInput+1)& (0+255),b
 34089   007F30  2B91               	incf	??_readInput& (0+255),f,b
 34090   007F32  D002               	goto	u21734
 34091   007F34                     u21735:
 34092   007F34  90D8               	bcf	status,0,c
 34093   007F36  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34094   007F38                     u21734:
 34095   007F38  2F91               	decfsz	??_readInput& (0+255),f,b
 34096   007F3A  D7FC               	goto	u21735
 34097   007F3C  0100               	movlb	0	; () banked
 34098   007F3E  5192               	movf	(??_readInput+1)& (0+255),w,b
 34099   007F40  1481               	andwf	129,w,c	;volatile
 34100   007F42  0012               	return	
 34101   007F44                     l20989:
 34102                           
 34103                           ; BSR set to: 0
 34104                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 34105   007F44  5193               	movf	readInput@io& (0+255),w,b
 34106   007F46  0D04               	mullw	4
 34107   007F48  0E02               	movlw	2
 34108   007F4A  26F3               	addwf	243,f,c
 34109   007F4C  0E00               	movlw	0
 34110   007F4E  22F4               	addwfc	244,f,c
 34111   007F50  0E35               	movlw	low _configs
 34112   007F52  24F3               	addwf	243,w,c
 34113   007F54  6EF6               	movwf	tblptrl,c
 34114   007F56  0EEE               	movlw	high _configs
 34115   007F58  20F4               	addwfc	244,w,c
 34116   007F5A  6EF7               	movwf	tblptrh,c
 34117   007F5C                     	if	1	;There are 3 active tblptr bytes
 34118   007F5C  6AF8               	clrf	tblptru,c
 34119   007F5E  0E00               	movlw	low (__mediumconst shr (0+16))
 34120   007F60  22F8               	addwfc	tblptru,f,c
 34121   007F62                     	endif
 34122   007F62  0008               	tblrd		*
 34123   007F64  CFF5 F091          	movff	tablat,??_readInput
 34124   007F68  0E01               	movlw	1
 34125   007F6A  6F92               	movwf	(??_readInput+1)& (0+255),b
 34126   007F6C  2B91               	incf	??_readInput& (0+255),f,b
 34127   007F6E  D002               	goto	u21744
 34128   007F70                     u21745:
 34129   007F70  90D8               	bcf	status,0,c
 34130   007F72  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34131   007F74                     u21744:
 34132   007F74  2F91               	decfsz	??_readInput& (0+255),f,b
 34133   007F76  D7FC               	goto	u21745
 34134   007F78  0100               	movlb	0	; () banked
 34135   007F7A  5192               	movf	(??_readInput+1)& (0+255),w,b
 34136   007F7C  1482               	andwf	130,w,c	;volatile
 34137   007F7E  0012               	return	
 34138   007F80                     l20995:
 34139                           
 34140                           ; BSR set to: 0
 34141   007F80  5193               	movf	readInput@io& (0+255),w,b
 34142   007F82  0D04               	mullw	4
 34143   007F84  0E01               	movlw	1
 34144   007F86  26F3               	addwf	243,f,c
 34145   007F88  0E00               	movlw	0
 34146   007F8A  22F4               	addwfc	244,f,c
 34147   007F8C  0E35               	movlw	low _configs
 34148   007F8E  24F3               	addwf	243,w,c
 34149   007F90  6EF6               	movwf	tblptrl,c
 34150   007F92  0EEE               	movlw	high _configs
 34151   007F94  20F4               	addwfc	244,w,c
 34152   007F96  6EF7               	movwf	tblptrh,c
 34153   007F98                     	if	1	;There are 3 active tblptr bytes
 34154   007F98  6AF8               	clrf	tblptru,c
 34155   007F9A  0E00               	movlw	low (__mediumconst shr (0+16))
 34156   007F9C  22F8               	addwfc	tblptru,f,c
 34157   007F9E                     	endif
 34158   007F9E  0008               	tblrd		*
 34159   007FA0  50F5               	movf	tablat,w,c
 34160                           
 34161                           ; Switch size 1, requested type "simple"
 34162                           ; Number of cases is 3, Range of values is 65 to 67
 34163                           ; switch strategies available:
 34164                           ; Name         Instructions Cycles
 34165                           ; simple_byte           10     6 (average)
 34166                           ;	Chosen strategy is simple_byte
 34167   007FA2  0A41               	xorlw	65	; case 65
 34168   007FA4  B4D8               	btfsc	status,2,c
 34169   007FA6  D792               	goto	l20981
 34170   007FA8  0A03               	xorlw	3	; case 66
 34171   007FAA  B4D8               	btfsc	status,2,c
 34172   007FAC  D7AD               	goto	l20985
 34173   007FAE  0A01               	xorlw	1	; case 67
 34174   007FB0  B4D8               	btfsc	status,2,c
 34175   007FB2  D7C8               	goto	l20989
 34176   007FB4                     l20997:
 34177                           
 34178                           ; BSR set to: 0
 34179                           ;../inputs.c: 191:     return FALSE;
 34180   007FB4  0E00               	movlw	0
 34181                           
 34182                           ; BSR set to: 0
 34183   007FB6  0012               	return		;funcret
 34184   007FB8                     __end_of_readInput:
 34185                           	callstack 0
 34186                           
 34187 ;; *************** function _initRomOps *****************
 34188 ;; Defined at:
 34189 ;;		line 148 in file "../../VLCBlib_PIC/nvm.c"
 34190 ;; Parameters:    Size  Location     Type
 34191 ;;		None
 34192 ;; Auto vars:     Size  Location     Type
 34193 ;;		None
 34194 ;; Return value:  Size  Location     Type
 34195 ;;                  1    wreg      void 
 34196 ;; Registers used:
 34197 ;;		wreg, status,2
 34198 ;; Tracked objects:
 34199 ;;		On entry : 0/0
 34200 ;;		On exit  : 0/0
 34201 ;;		Unchanged: 0/0
 34202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34207 ;;Total ram usage:        0 bytes
 34208 ;; Hardware stack levels used: 1
 34209 ;; Hardware stack levels required when called: 12
 34210 ;; This function calls:
 34211 ;;		Nothing
 34212 ;; This function is called by:
 34213 ;;		_main
 34214 ;; This function uses a non-reentrant model
 34215 ;;
 34216                           
 34217                           	psect	text135
 34218   00C308                     __ptext135:
 34219                           	callstack 0
 34220   00C308                     _initRomOps:
 34221                           	callstack 18
 34222                           
 34223                           ;../../VLCBlib_PIC/nvm.c: 149:     flashFlags.asByte = 0;
 34224                           
 34225                           ; BSR set to: 0
 34226                           ;incstack = 0
 34227   00C308  0E00               	movlw	0
 34228   00C30A  0100               	movlb	0	; () banked
 34229   00C30C  6FC4               	movwf	_flashFlags& (0+255),b
 34230                           
 34231                           ;../../VLCBlib_PIC/nvm.c: 150:     flashBlock = 0x0000;
 34232   00C30E  0E00               	movlw	0
 34233   00C310  6FBA               	movwf	(_flashBlock+1)& (0+255),b
 34234   00C312  0E00               	movlw	0
 34235   00C314  6FB9               	movwf	_flashBlock& (0+255),b
 34236                           
 34237                           ;../../VLCBlib_PIC/nvm.c: 152:     TBLPTRU = 0;
 34238   00C316  0E00               	movlw	0
 34239   00C318  6EF8               	movwf	248,c	;volatile
 34240                           
 34241                           ; BSR set to: 0
 34242   00C31A  0012               	return		;funcret
 34243   00C31C                     __end_of_initRomOps:
 34244                           	callstack 0
 34245                           
 34246 ;; *************** function _checkPowerOnPb *****************
 34247 ;; Defined at:
 34248 ;;		line 953 in file "../../VLCBlib_PIC/vlcb.c"
 34249 ;; Parameters:    Size  Location     Type
 34250 ;;		None
 34251 ;; Auto vars:     Size  Location     Type
 34252 ;;  i               1   57[BANK1 ] unsigned char 
 34253 ;; Return value:  Size  Location     Type
 34254 ;;                  1    wreg      void 
 34255 ;; Registers used:
 34256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34257 ;; Tracked objects:
 34258 ;;		On entry : 0/0
 34259 ;;		On exit  : 0/0
 34260 ;;		Unchanged: 0/0
 34261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34263 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34265 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34266 ;;Total ram usage:        1 bytes
 34267 ;; Hardware stack levels used: 1
 34268 ;; Hardware stack levels required when called: 27
 34269 ;; This function calls:
 34270 ;;		_APP_testMode
 34271 ;;		_factoryReset
 34272 ;;		_pbDownTimer
 34273 ;;		_pbUpTimer
 34274 ;;		_showStatus
 34275 ;; This function is called by:
 34276 ;;		_main
 34277 ;; This function uses a non-reentrant model
 34278 ;;
 34279                           
 34280                           	psect	text136
 34281   00B242                     __ptext136:
 34282                           	callstack 0
 34283   00B242                     _checkPowerOnPb:
 34284                           	callstack 3
 34285                           
 34286                           ;../../VLCBlib_PIC/vlcb.c: 954:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 957:     if ((!
      +                          (PORTAbits.RA2))) {
 34287                           
 34288                           ; BSR set to: 0
 34289                           ;incstack = 0
 34290   00B242  B480               	btfsc	128,2,c	;volatile
 34291   00B244  0012               	return	
 34292                           
 34293                           ;../../VLCBlib_PIC/vlcb.c: 959:         i = pbDownTimer(30);
 34294   00B246  0E1E               	movlw	30
 34295   00B248  EC1E  F04B         	call	_pbDownTimer
 34296   00B24C  0101               	movlb	1	; () banked
 34297   00B24E  6FF1               	movwf	checkPowerOnPb@i& (0+255),b
 34298                           
 34299                           ; BSR set to: 1
 34300                           ;../../VLCBlib_PIC/vlcb.c: 960:         if (i == 0) {
 34301   00B250  51F1               	movf	checkPowerOnPb@i& (0+255),w,b
 34302   00B252  B4D8               	btfsc	status,2,c
 34303   00B254  0012               	return	
 34304                           
 34305                           ; BSR set to: 1
 34306                           
 34307                           ; BSR set to: 1
 34308                           ;../../VLCBlib_PIC/vlcb.c: 962:             return;
 34309   00B256  0E01               	movlw	1
 34310   00B258  65F1               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34311   00B25A  D006               	goto	l24439
 34312                           
 34313                           ; BSR set to: 1
 34314   00B25C  0E06               	movlw	6
 34315   00B25E  61F1               	cpfslt	checkPowerOnPb@i& (0+255),b
 34316   00B260  D003               	goto	l24439
 34317                           
 34318                           ; BSR set to: 1
 34319                           ;../../VLCBlib_PIC/vlcb.c: 964:             APP_testMode();
 34320   00B262  ECEF  F061         	call	_APP_testMode	;wreg free
 34321                           
 34322                           ;../../VLCBlib_PIC/vlcb.c: 965:         } else if (i >= 10) {
 34323   00B266  0012               	return	
 34324   00B268                     l24439:
 34325                           
 34326                           ; BSR set to: 1
 34327   00B268  0E09               	movlw	9
 34328   00B26A  65F1               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34329   00B26C  0012               	return	
 34330                           
 34331                           ; BSR set to: 1
 34332                           ;../../VLCBlib_PIC/vlcb.c: 966:             showStatus(STATUS_RESET_WARNING);
 34333   00B26E  0E04               	movlw	4
 34334   00B270  ECBC  F042         	call	_showStatus
 34335                           
 34336                           ;../../VLCBlib_PIC/vlcb.c: 968:             i = pbUpTimer(5);
 34337   00B274  0E05               	movlw	5
 34338   00B276  ECC6  F04A         	call	_pbUpTimer
 34339   00B27A  0101               	movlb	1	; () banked
 34340   00B27C  6FF1               	movwf	checkPowerOnPb@i& (0+255),b
 34341                           
 34342                           ; BSR set to: 1
 34343                           ;../../VLCBlib_PIC/vlcb.c: 969:             if (i == 0) {
 34344   00B27E  51F1               	movf	checkPowerOnPb@i& (0+255),w,b
 34345   00B280  B4D8               	btfsc	status,2,c
 34346   00B282  0012               	return	
 34347                           
 34348                           ; BSR set to: 1
 34349                           ;../../VLCBlib_PIC/vlcb.c: 973:             i = pbDownTimer(5);
 34350   00B284  0E05               	movlw	5
 34351   00B286  EC1E  F04B         	call	_pbDownTimer
 34352   00B28A  0101               	movlb	1	; () banked
 34353   00B28C  6FF1               	movwf	checkPowerOnPb@i& (0+255),b
 34354                           
 34355                           ; BSR set to: 1
 34356                           ;../../VLCBlib_PIC/vlcb.c: 974:             if ((i>=2) && (i < 4)) {
 34357   00B28E  0E01               	movlw	1
 34358   00B290  65F1               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34359   00B292  0012               	return	
 34360                           
 34361                           ; BSR set to: 1
 34362   00B294  0E04               	movlw	4
 34363   00B296  61F1               	cpfslt	checkPowerOnPb@i& (0+255),b
 34364   00B298  0012               	return	
 34365                           
 34366                           ; BSR set to: 1
 34367                           ;../../VLCBlib_PIC/vlcb.c: 975:                 factoryReset();
 34368   00B29A  EC49  F042         	call	_factoryReset	;wreg free
 34369   00B29E  0012               	return		;funcret
 34370   00B2A0                     __end_of_checkPowerOnPb:
 34371                           	callstack 0
 34372                           
 34373 ;; *************** function _showStatus *****************
 34374 ;; Defined at:
 34375 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 34376 ;; Parameters:    Size  Location     Type
 34377 ;;  s               1    wreg     enum E12891
 34378 ;; Auto vars:     Size  Location     Type
 34379 ;;  s               1   47[BANK0 ] enum E12891
 34380 ;; Return value:  Size  Location     Type
 34381 ;;                  1    wreg      void 
 34382 ;; Registers used:
 34383 ;;		wreg, status,2, status,0
 34384 ;; Tracked objects:
 34385 ;;		On entry : 0/0
 34386 ;;		On exit  : 0/0
 34387 ;;		Unchanged: 0/0
 34388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34392 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34393 ;;Total ram usage:        3 bytes
 34394 ;; Hardware stack levels used: 1
 34395 ;; Hardware stack levels required when called: 12
 34396 ;; This function calls:
 34397 ;;		Nothing
 34398 ;; This function is called by:
 34399 ;;		_setLEDsByMode
 34400 ;;		_checkPowerOnPb
 34401 ;;		_poll
 34402 ;; This function uses a non-reentrant model
 34403 ;;
 34404                           
 34405                           	psect	text137
 34406   008578                     __ptext137:
 34407                           	callstack 0
 34408   008578                     _showStatus:
 34409                           	callstack 15
 34410                           
 34411                           ;incstack = 0
 34412                           ;showStatus@s stored from wreg
 34413   008578  0100               	movlb	0	; () banked
 34414   00857A  6F8F               	movwf	showStatus@s& (0+255),b
 34415                           
 34416                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 34417   00857C  D03E               	goto	l20709
 34418   00857E                     l20679:
 34419                           
 34420                           ; BSR set to: 0
 34421                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 34422   00857E  0E00               	movlw	0
 34423   008580  6FBD               	movwf	_ledState& (0+255),b
 34424                           
 34425                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 34426   008582  0E00               	movlw	0
 34427   008584  6FBE               	movwf	(_ledState+1)& (0+255),b
 34428                           
 34429                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 34430   008586  0012               	return	
 34431   008588                     l20681:
 34432                           
 34433                           ; BSR set to: 0
 34434                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 34435   008588  0E01               	movlw	1
 34436   00858A  6FBD               	movwf	_ledState& (0+255),b
 34437                           
 34438                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 34439   00858C  0E00               	movlw	0
 34440   00858E  6FBE               	movwf	(_ledState+1)& (0+255),b
 34441                           
 34442                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 34443   008590  0012               	return	
 34444   008592                     l20683:
 34445                           
 34446                           ; BSR set to: 0
 34447                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 34448   008592  0E00               	movlw	0
 34449   008594  6FBD               	movwf	_ledState& (0+255),b
 34450                           
 34451                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 34452   008596  0E03               	movlw	3
 34453   008598  6FBE               	movwf	(_ledState+1)& (0+255),b
 34454                           
 34455                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 34456   00859A  0012               	return	
 34457   00859C                     l1766:
 34458                           
 34459                           ; BSR set to: 0
 34460                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 34461                           
 34462                           ; BSR set to: 0
 34463   00859C  0E00               	movlw	0
 34464   00859E  6FBD               	movwf	_ledState& (0+255),b
 34465                           
 34466                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 34467   0085A0  0E01               	movlw	1
 34468   0085A2  6FBE               	movwf	(_ledState+1)& (0+255),b
 34469                           
 34470                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 34471   0085A4  0012               	return	
 34472   0085A6                     l20687:
 34473                           
 34474                           ; BSR set to: 0
 34475                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 34476   0085A6  0E00               	movlw	0
 34477   0085A8  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34478                           
 34479                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 34480   0085AA  0E19               	movlw	25
 34481   0085AC  6FBB               	movwf	_flashCounter& (0+255),b
 34482                           
 34483                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 34484   0085AE  0E02               	movlw	2
 34485   0085B0  6FBD               	movwf	_ledState& (0+255),b
 34486                           
 34487                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 34488   0085B2  0E02               	movlw	2
 34489   0085B4  6FBE               	movwf	(_ledState+1)& (0+255),b
 34490                           
 34491                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 34492   0085B6  0012               	return	
 34493   0085B8                     l20689:
 34494                           
 34495                           ; BSR set to: 0
 34496                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 34497   0085B8  29C8               	incf	_mode_state& (0+255),w,b
 34498   0085BA  A4D8               	btfss	status,2,c
 34499   0085BC  D003               	goto	l20693
 34500                           
 34501                           ; BSR set to: 0
 34502                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 34503   0085BE  0E06               	movlw	6
 34504   0085C0  6FBE               	movwf	(_ledState+1)& (0+255),b
 34505                           
 34506                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 34507   0085C2  0012               	return	
 34508   0085C4                     l20693:
 34509                           
 34510                           ; BSR set to: 0
 34511   0085C4  05C8               	decf	_mode_state& (0+255),w,b
 34512   0085C6  A4D8               	btfss	status,2,c
 34513   0085C8  0012               	return	
 34514                           
 34515                           ; BSR set to: 0
 34516                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 34517   0085CA  0E06               	movlw	6
 34518   0085CC  6FBD               	movwf	_ledState& (0+255),b
 34519   0085CE  0012               	return	
 34520   0085D0                     l20697:
 34521                           
 34522                           ; BSR set to: 0
 34523                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 34524   0085D0  29C8               	incf	_mode_state& (0+255),w,b
 34525   0085D2  A4D8               	btfss	status,2,c
 34526   0085D4  D003               	goto	l20701
 34527                           
 34528                           ; BSR set to: 0
 34529                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 34530   0085D6  0E08               	movlw	8
 34531   0085D8  6FBE               	movwf	(_ledState+1)& (0+255),b
 34532                           
 34533                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 34534   0085DA  0012               	return	
 34535   0085DC                     l20701:
 34536                           
 34537                           ; BSR set to: 0
 34538   0085DC  05C8               	decf	_mode_state& (0+255),w,b
 34539   0085DE  A4D8               	btfss	status,2,c
 34540   0085E0  0012               	return	
 34541                           
 34542                           ; BSR set to: 0
 34543                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 34544   0085E2  0E08               	movlw	8
 34545   0085E4  6FBD               	movwf	_ledState& (0+255),b
 34546   0085E6  0012               	return	
 34547   0085E8                     l20705:
 34548                           
 34549                           ; BSR set to: 0
 34550                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 34551   0085E8  0E00               	movlw	0
 34552   0085EA  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34553                           
 34554                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 34555   0085EC  0E00               	movlw	0
 34556   0085EE  6FBB               	movwf	_flashCounter& (0+255),b
 34557                           
 34558                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 34559   0085F0  0E02               	movlw	2
 34560   0085F2  6FBD               	movwf	_ledState& (0+255),b
 34561                           
 34562                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 34563   0085F4  0E02               	movlw	2
 34564   0085F6  6FBE               	movwf	(_ledState+1)& (0+255),b
 34565                           
 34566                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 34567   0085F8  0012               	return	
 34568   0085FA                     l20709:
 34569   0085FA  0100               	movlb	0	; () banked
 34570   0085FC  518F               	movf	showStatus@s& (0+255),w,b
 34571   0085FE  6F8D               	movwf	??_showStatus& (0+255),b
 34572   008600  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 34573                           
 34574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34575                           ; Switch size 1, requested type "simple"
 34576                           ; Number of cases is 1, Range of values is 0 to 0
 34577                           ; switch strategies available:
 34578                           ; Name         Instructions Cycles
 34579                           ; simple_byte            4     3 (average)
 34580                           ;	Chosen strategy is simple_byte
 34581   008602  518E               	movf	(??_showStatus+1)& (0+255),w,b
 34582   008604  0A00               	xorlw	0	; case 0
 34583   008606  A4D8               	btfss	status,2,c
 34584   008608  0012               	return	
 34585                           
 34586                           ; BSR set to: 0
 34587                           ; Switch size 1, requested type "simple"
 34588                           ; Number of cases is 13, Range of values is 0 to 12
 34589                           ; switch strategies available:
 34590                           ; Name         Instructions Cycles
 34591                           ; simple_byte           40    21 (average)
 34592                           ;	Chosen strategy is simple_byte
 34593   00860A  518D               	movf	??_showStatus& (0+255),w,b
 34594   00860C  0A00               	xorlw	0	; case 0
 34595   00860E  B4D8               	btfsc	status,2,c
 34596   008610  D7B6               	goto	l20679
 34597   008612  0A01               	xorlw	1	; case 1
 34598   008614  B4D8               	btfsc	status,2,c
 34599   008616  D7B8               	goto	l20681
 34600   008618  0A03               	xorlw	3	; case 2
 34601   00861A  B4D8               	btfsc	status,2,c
 34602   00861C  D7BA               	goto	l20683
 34603   00861E  0A01               	xorlw	1	; case 3
 34604   008620  B4D8               	btfsc	status,2,c
 34605   008622  D7BC               	goto	l1766
 34606   008624  0A07               	xorlw	7	; case 4
 34607   008626  B4D8               	btfsc	status,2,c
 34608   008628  D7BE               	goto	l20687
 34609   00862A  0A01               	xorlw	1	; case 5
 34610   00862C  B4D8               	btfsc	status,2,c
 34611   00862E  D7B6               	goto	l1766
 34612   008630  0A03               	xorlw	3	; case 6
 34613   008632  B4D8               	btfsc	status,2,c
 34614   008634  D7B3               	goto	l1766
 34615   008636  0A01               	xorlw	1	; case 7
 34616   008638  B4D8               	btfsc	status,2,c
 34617   00863A  D7BE               	goto	l20689
 34618   00863C  0A0F               	xorlw	15	; case 8
 34619   00863E  B4D8               	btfsc	status,2,c
 34620   008640  D7C7               	goto	l20697
 34621   008642  0A01               	xorlw	1	; case 9
 34622   008644  B4D8               	btfsc	status,2,c
 34623   008646  D7AA               	goto	l1766
 34624   008648  0A03               	xorlw	3	; case 10
 34625   00864A  B4D8               	btfsc	status,2,c
 34626   00864C  D7A7               	goto	l1766
 34627   00864E  0A01               	xorlw	1	; case 11
 34628   008650  B4D8               	btfsc	status,2,c
 34629   008652  D7CA               	goto	l20705
 34630   008654  0A07               	xorlw	7	; case 12
 34631   008656  A4D8               	btfss	status,2,c
 34632   008658  0012               	return	
 34633   00865A  D7C6               	goto	l20705
 34634   00865C                     __end_of_showStatus:
 34635                           	callstack 0
 34636                           
 34637 ;; *************** function _pbUpTimer *****************
 34638 ;; Defined at:
 34639 ;;		line 930 in file "../../VLCBlib_PIC/vlcb.c"
 34640 ;; Parameters:    Size  Location     Type
 34641 ;;  timeout         1    wreg     unsigned char 
 34642 ;; Auto vars:     Size  Location     Type
 34643 ;;  timeout         1   72[BANK0 ] unsigned char 
 34644 ;; Return value:  Size  Location     Type
 34645 ;;                  1    wreg      unsigned char 
 34646 ;; Registers used:
 34647 ;;		wreg, status,2, status,0, cstack
 34648 ;; Tracked objects:
 34649 ;;		On entry : 0/0
 34650 ;;		On exit  : 0/0
 34651 ;;		Unchanged: 0/0
 34652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34654 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34655 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34656 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34657 ;;Total ram usage:        5 bytes
 34658 ;; Hardware stack levels used: 1
 34659 ;; Hardware stack levels required when called: 14
 34660 ;; This function calls:
 34661 ;;		___lldiv
 34662 ;;		___lmul
 34663 ;;		_leds_poll
 34664 ;;		_tickGet
 34665 ;; This function is called by:
 34666 ;;		_checkPowerOnPb
 34667 ;; This function uses a non-reentrant model
 34668 ;;
 34669                           
 34670                           	psect	text138
 34671   00958C                     __ptext138:
 34672                           	callstack 0
 34673   00958C                     _pbUpTimer:
 34674                           	callstack 15
 34675                           
 34676                           ; BSR set to: 0
 34677                           ;incstack = 0
 34678                           ;pbUpTimer@timeout stored from wreg
 34679   00958C  0100               	movlb	0	; () banked
 34680   00958E  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 34681                           
 34682                           ;../../VLCBlib_PIC/vlcb.c: 932:     pbTimer.val = tickGet();
 34683   009590  ECD6  F059         	call	_tickGet	;wreg free
 34684   009594  C08D  F033         	movff	?_tickGet,_pbTimer
 34685   009598  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 34686   00959C  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 34687   0095A0  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 34688                           
 34689                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34690   0095A4  D02D               	goto	l1955
 34691   0095A6                     l23731:
 34692                           
 34693                           ;../../VLCBlib_PIC/vlcb.c: 934:         leds_poll();
 34694   0095A6  EC65  F02F         	call	_leds_poll	;wreg free
 34695                           
 34696                           ;../../VLCBlib_PIC/vlcb.c: 935:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34697   0095AA  ECD6  F059         	call	_tickGet	;wreg free
 34698   0095AE  5033               	movf	_pbTimer^0,w,c
 34699   0095B0  0100               	movlb	0	; () banked
 34700   0095B2  5D8D               	subwf	?_tickGet& (0+255),w,b
 34701   0095B4  6FA4               	movwf	??_pbUpTimer& (0+255),b
 34702   0095B6  5034               	movf	(_pbTimer+1)^0,w,c
 34703   0095B8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34704   0095BA  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 34705   0095BC  5035               	movf	(_pbTimer+2)^0,w,c
 34706   0095BE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34707   0095C0  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 34708   0095C2  5036               	movf	(_pbTimer+3)^0,w,c
 34709   0095C4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34710   0095C6  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 34711   0095C8  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 34712   0095CA  6F91               	movwf	___lmul@multiplier& (0+255),b
 34713   0095CC  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34714   0095CE  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34715   0095D0  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34716   0095D2  0E24               	movlw	36
 34717   0095D4  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34718   0095D6  0EF4               	movlw	244
 34719   0095D8  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34720   0095DA  0E00               	movlw	0
 34721   0095DC  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34722   0095DE  0E00               	movlw	0
 34723   0095E0  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34724   0095E2  EC02  F05A         	call	___lmul	;wreg free
 34725   0095E6  0100               	movlb	0	; () banked
 34726   0095E8  51A4               	movf	??_pbUpTimer& (0+255),w,b
 34727   0095EA  5D91               	subwf	?___lmul& (0+255),w,b
 34728   0095EC  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 34729   0095EE  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34730   0095F0  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 34731   0095F2  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34732   0095F4  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 34733   0095F6  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34734   0095F8  B0D8               	btfsc	status,0,c
 34735   0095FA  D002               	goto	l1955
 34736                           
 34737                           ; BSR set to: 0
 34738                           ;../../VLCBlib_PIC/vlcb.c: 936:             return 0;
 34739   0095FC  0E00               	movlw	0
 34740   0095FE  0012               	return	
 34741   009600                     l1955:
 34742                           
 34743                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34744   009600  B480               	btfsc	128,2,c	;volatile
 34745   009602  D7D1               	goto	l23731
 34746                           
 34747                           ;../../VLCBlib_PIC/vlcb.c: 940:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34748   009604  ECD6  F059         	call	_tickGet	;wreg free
 34749   009608  5033               	movf	_pbTimer^0,w,c
 34750   00960A  0100               	movlb	0	; () banked
 34751   00960C  5D8D               	subwf	?_tickGet& (0+255),w,b
 34752   00960E  6F97               	movwf	___lldiv@dividend& (0+255),b
 34753   009610  5034               	movf	(_pbTimer+1)^0,w,c
 34754   009612  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34755   009614  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34756   009616  5035               	movf	(_pbTimer+2)^0,w,c
 34757   009618  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34758   00961A  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34759   00961C  5036               	movf	(_pbTimer+3)^0,w,c
 34760   00961E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34761   009620  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34762   009622  0E24               	movlw	36
 34763   009624  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34764   009626  0EF4               	movlw	244
 34765   009628  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34766   00962A  0E00               	movlw	0
 34767   00962C  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34768   00962E  0E00               	movlw	0
 34769   009630  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34770   009632  ECD0  F052         	call	___lldiv	;wreg free
 34771   009636  0100               	movlb	0	; () banked
 34772   009638  5197               	movf	?___lldiv& (0+255),w,b
 34773                           
 34774                           ; BSR set to: 0
 34775   00963A  0012               	return		;funcret
 34776   00963C                     __end_of_pbUpTimer:
 34777                           	callstack 0
 34778                           
 34779 ;; *************** function _pbDownTimer *****************
 34780 ;; Defined at:
 34781 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 34782 ;; Parameters:    Size  Location     Type
 34783 ;;  timeout         1    wreg     unsigned char 
 34784 ;; Auto vars:     Size  Location     Type
 34785 ;;  timeout         1   72[BANK0 ] unsigned char 
 34786 ;; Return value:  Size  Location     Type
 34787 ;;                  1    wreg      unsigned char 
 34788 ;; Registers used:
 34789 ;;		wreg, status,2, status,0, cstack
 34790 ;; Tracked objects:
 34791 ;;		On entry : 0/0
 34792 ;;		On exit  : 0/0
 34793 ;;		Unchanged: 0/0
 34794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34796 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34797 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34798 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34799 ;;Total ram usage:        5 bytes
 34800 ;; Hardware stack levels used: 1
 34801 ;; Hardware stack levels required when called: 14
 34802 ;; This function calls:
 34803 ;;		___lldiv
 34804 ;;		___lmul
 34805 ;;		_leds_poll
 34806 ;;		_tickGet
 34807 ;; This function is called by:
 34808 ;;		_checkPowerOnPb
 34809 ;; This function uses a non-reentrant model
 34810 ;;
 34811                           
 34812                           	psect	text139
 34813   00963C                     __ptext139:
 34814                           	callstack 0
 34815   00963C                     _pbDownTimer:
 34816                           	callstack 15
 34817                           
 34818                           ; BSR set to: 0
 34819                           ;incstack = 0
 34820                           ;pbDownTimer@timeout stored from wreg
 34821   00963C  0100               	movlb	0	; () banked
 34822   00963E  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 34823                           
 34824                           ;../../VLCBlib_PIC/vlcb.c: 913:     pbTimer.val = tickGet();
 34825   009640  ECD6  F059         	call	_tickGet	;wreg free
 34826   009644  C08D  F033         	movff	?_tickGet,_pbTimer
 34827   009648  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 34828   00964C  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 34829   009650  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 34830                           
 34831                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34832   009654  D02D               	goto	l1948
 34833   009656                     l23719:
 34834                           
 34835                           ;../../VLCBlib_PIC/vlcb.c: 915:         leds_poll();
 34836   009656  EC65  F02F         	call	_leds_poll	;wreg free
 34837                           
 34838                           ;../../VLCBlib_PIC/vlcb.c: 916:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34839   00965A  ECD6  F059         	call	_tickGet	;wreg free
 34840   00965E  5033               	movf	_pbTimer^0,w,c
 34841   009660  0100               	movlb	0	; () banked
 34842   009662  5D8D               	subwf	?_tickGet& (0+255),w,b
 34843   009664  6FA4               	movwf	??_pbDownTimer& (0+255),b
 34844   009666  5034               	movf	(_pbTimer+1)^0,w,c
 34845   009668  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34846   00966A  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 34847   00966C  5035               	movf	(_pbTimer+2)^0,w,c
 34848   00966E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34849   009670  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 34850   009672  5036               	movf	(_pbTimer+3)^0,w,c
 34851   009674  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34852   009676  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 34853   009678  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 34854   00967A  6F91               	movwf	___lmul@multiplier& (0+255),b
 34855   00967C  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34856   00967E  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34857   009680  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34858   009682  0E24               	movlw	36
 34859   009684  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34860   009686  0EF4               	movlw	244
 34861   009688  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34862   00968A  0E00               	movlw	0
 34863   00968C  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34864   00968E  0E00               	movlw	0
 34865   009690  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34866   009692  EC02  F05A         	call	___lmul	;wreg free
 34867   009696  0100               	movlb	0	; () banked
 34868   009698  51A4               	movf	??_pbDownTimer& (0+255),w,b
 34869   00969A  5D91               	subwf	?___lmul& (0+255),w,b
 34870   00969C  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 34871   00969E  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34872   0096A0  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 34873   0096A2  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34874   0096A4  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 34875   0096A6  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34876   0096A8  B0D8               	btfsc	status,0,c
 34877   0096AA  D002               	goto	l1948
 34878                           
 34879                           ; BSR set to: 0
 34880                           ;../../VLCBlib_PIC/vlcb.c: 917:             return 0;
 34881   0096AC  0E00               	movlw	0
 34882   0096AE  0012               	return	
 34883   0096B0                     l1948:
 34884                           
 34885                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34886   0096B0  A480               	btfss	128,2,c	;volatile
 34887   0096B2  D7D1               	goto	l23719
 34888                           
 34889                           ;../../VLCBlib_PIC/vlcb.c: 921:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34890   0096B4  ECD6  F059         	call	_tickGet	;wreg free
 34891   0096B8  5033               	movf	_pbTimer^0,w,c
 34892   0096BA  0100               	movlb	0	; () banked
 34893   0096BC  5D8D               	subwf	?_tickGet& (0+255),w,b
 34894   0096BE  6F97               	movwf	___lldiv@dividend& (0+255),b
 34895   0096C0  5034               	movf	(_pbTimer+1)^0,w,c
 34896   0096C2  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34897   0096C4  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34898   0096C6  5035               	movf	(_pbTimer+2)^0,w,c
 34899   0096C8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34900   0096CA  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34901   0096CC  5036               	movf	(_pbTimer+3)^0,w,c
 34902   0096CE  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34903   0096D0  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34904   0096D2  0E24               	movlw	36
 34905   0096D4  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34906   0096D6  0EF4               	movlw	244
 34907   0096D8  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34908   0096DA  0E00               	movlw	0
 34909   0096DC  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34910   0096DE  0E00               	movlw	0
 34911   0096E0  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34912   0096E2  ECD0  F052         	call	___lldiv	;wreg free
 34913   0096E6  0100               	movlb	0	; () banked
 34914   0096E8  5197               	movf	?___lldiv& (0+255),w,b
 34915                           
 34916                           ; BSR set to: 0
 34917   0096EA  0012               	return		;funcret
 34918   0096EC                     __end_of_pbDownTimer:
 34919                           	callstack 0
 34920                           
 34921 ;; *************** function _leds_poll *****************
 34922 ;; Defined at:
 34923 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 34924 ;; Parameters:    Size  Location     Type
 34925 ;;		None
 34926 ;; Auto vars:     Size  Location     Type
 34927 ;;		None
 34928 ;; Return value:  Size  Location     Type
 34929 ;;                  1    wreg      void 
 34930 ;; Registers used:
 34931 ;;		wreg, status,2, status,0, cstack
 34932 ;; Tracked objects:
 34933 ;;		On entry : 0/0
 34934 ;;		On exit  : 0/0
 34935 ;;		Unchanged: 0/0
 34936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34939 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34940 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34941 ;;Total ram usage:        4 bytes
 34942 ;; Hardware stack levels used: 1
 34943 ;; Hardware stack levels required when called: 13
 34944 ;; This function calls:
 34945 ;;		___awdiv
 34946 ;;		_tickGet
 34947 ;; This function is called by:
 34948 ;;		_pbDownTimer
 34949 ;;		_pbUpTimer
 34950 ;;		_poll
 34951 ;; This function uses a non-reentrant model
 34952 ;;
 34953                           
 34954                           	psect	text140
 34955   005ECA                     __ptext140:
 34956                           	callstack 0
 34957   005ECA                     _leds_poll:
 34958                           	callstack 16
 34959                           
 34960                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 34961                           
 34962                           ; BSR set to: 0
 34963                           ;incstack = 0
 34964   005ECA  ECD6  F059         	call	_tickGet	;wreg free
 34965   005ECE  0101               	movlb	1	; () banked
 34966   005ED0  5158               	movf	_ledTimer& (0+255),w,b
 34967   005ED2  0100               	movlb	0	; () banked
 34968   005ED4  5D8D               	subwf	?_tickGet& (0+255),w,b
 34969   005ED6  6F9F               	movwf	??_leds_poll& (0+255),b
 34970   005ED8  0101               	movlb	1	; () banked
 34971   005EDA  5159               	movf	(_ledTimer+1)& (0+255),w,b
 34972   005EDC  0100               	movlb	0	; () banked
 34973   005EDE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34974   005EE0  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 34975   005EE2  0101               	movlb	1	; () banked
 34976   005EE4  515A               	movf	(_ledTimer+2)& (0+255),w,b
 34977   005EE6  0100               	movlb	0	; () banked
 34978   005EE8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34979   005EEA  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 34980   005EEC  0101               	movlb	1	; () banked
 34981   005EEE  515B               	movf	(_ledTimer+3)& (0+255),w,b
 34982   005EF0  0100               	movlb	0	; () banked
 34983   005EF2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34984   005EF4  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 34985   005EF6  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 34986   005EF8  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 34987   005EFA  E106               	bnz	u22930
 34988   005EFC  0E72               	movlw	114
 34989   005EFE  5D9F               	subwf	??_leds_poll& (0+255),w,b
 34990   005F00  0E02               	movlw	2
 34991   005F02  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 34992   005F04  A0D8               	btfss	status,0,c
 34993   005F06  D06B               	goto	l21801
 34994   005F08                     u22930:
 34995                           
 34996                           ; BSR set to: 0
 34997                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 34998   005F08  2BBB               	incf	_flashCounter& (0+255),f,b
 34999                           
 35000                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 35001   005F0A  2BBC               	incf	(_flashCounter+1)& (0+255),f,b
 35002                           
 35003                           ; BSR set to: 0
 35004                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 35005   005F0C  ECD6  F059         	call	_tickGet	;wreg free
 35006   005F10  C08D  F158         	movff	?_tickGet,_ledTimer
 35007   005F14  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
 35008   005F18  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
 35009   005F1C  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
 35010   005F20  D05E               	goto	l21801
 35011   005F22                     l1716:
 35012                           
 35013                           ; BSR set to: 0
 35014                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 35015   005F22  8C8A               	bsf	138,6,c	;volatile
 35016   005F24                     l21757:
 35017                           
 35018                           ; BSR set to: 0
 35019                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 35020   005F24  0E00               	movlw	0
 35021   005F26  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 35022                           
 35023                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 35024   005F28  D0E0               	goto	l21847
 35025   005F2A                     l1718:
 35026                           
 35027                           ; BSR set to: 0
 35028                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 35029   005F2A  9C8A               	bcf	138,6,c	;volatile
 35030   005F2C  D7FB               	goto	l21757
 35031   005F2E                     l21761:
 35032                           
 35033                           ; BSR set to: 0
 35034                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 35035   005F2E  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 35036   005F32  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35037   005F34  0E00               	movlw	0
 35038   005F36  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35039   005F38  0E19               	movlw	25
 35040   005F3A  6F99               	movwf	___awdiv@divisor& (0+255),b
 35041   005F3C  EC4A  F052         	call	___awdiv	;wreg free
 35042   005F40  0100               	movlb	0	; () banked
 35043   005F42  3B97               	swapf	?___awdiv& (0+255),f,b
 35044   005F44  4797               	rlncf	?___awdiv& (0+255),f,b
 35045   005F46  4797               	rlncf	?___awdiv& (0+255),f,b
 35046   005F48  508A               	movf	138,w,c	;volatile
 35047   005F4A  1997               	xorwf	?___awdiv& (0+255),w,b
 35048   005F4C  0BBF               	andlw	-65
 35049   005F4E  1997               	xorwf	?___awdiv& (0+255),w,b
 35050   005F50  6E8A               	movwf	138,c	;volatile
 35051                           
 35052                           ; BSR set to: 0
 35053                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 35054   005F52  0E31               	movlw	49
 35055   005F54                     L16:
 35056   005F54  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 35057   005F56  D0C9               	goto	l21847
 35058   005F58  D7E5               	goto	l21757
 35059   005F5A                     l21767:
 35060                           
 35061                           ; BSR set to: 0
 35062                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 35063   005F5A  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 35064   005F5E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35065   005F60  0E00               	movlw	0
 35066   005F62  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35067   005F64  0E32               	movlw	50
 35068   005F66  6F99               	movwf	___awdiv@divisor& (0+255),b
 35069   005F68  EC4A  F052         	call	___awdiv	;wreg free
 35070   005F6C  0100               	movlb	0	; () banked
 35071   005F6E  3B97               	swapf	?___awdiv& (0+255),f,b
 35072   005F70  4797               	rlncf	?___awdiv& (0+255),f,b
 35073   005F72  4797               	rlncf	?___awdiv& (0+255),f,b
 35074   005F74  508A               	movf	138,w,c	;volatile
 35075   005F76  1997               	xorwf	?___awdiv& (0+255),w,b
 35076   005F78  0BBF               	andlw	-65
 35077   005F7A  1997               	xorwf	?___awdiv& (0+255),w,b
 35078   005F7C  6E8A               	movwf	138,c	;volatile
 35079                           
 35080                           ; BSR set to: 0
 35081                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 35082   005F7E  0E63               	movlw	99
 35083   005F80  D7E9               	goto	L16
 35084   005F82                     l21773:
 35085                           
 35086                           ; BSR set to: 0
 35087                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 35088   005F82  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 35089   005F86  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35090   005F88  0E00               	movlw	0
 35091   005F8A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35092   005F8C  0E64               	movlw	100
 35093   005F8E  6F99               	movwf	___awdiv@divisor& (0+255),b
 35094   005F90  EC4A  F052         	call	___awdiv	;wreg free
 35095   005F94  0100               	movlb	0	; () banked
 35096   005F96  3B97               	swapf	?___awdiv& (0+255),f,b
 35097   005F98  4797               	rlncf	?___awdiv& (0+255),f,b
 35098   005F9A  4797               	rlncf	?___awdiv& (0+255),f,b
 35099   005F9C  508A               	movf	138,w,c	;volatile
 35100   005F9E  1997               	xorwf	?___awdiv& (0+255),w,b
 35101   005FA0  0BBF               	andlw	-65
 35102   005FA2  1997               	xorwf	?___awdiv& (0+255),w,b
 35103   005FA4  6E8A               	movwf	138,c	;volatile
 35104                           
 35105                           ; BSR set to: 0
 35106                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 35107   005FA6  0EC7               	movlw	199
 35108   005FA8  D7D5               	goto	L16
 35109   005FAA                     l1725:
 35110                           
 35111                           ; BSR set to: 0
 35112                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 35113   005FAA  8C8A               	bsf	138,6,c	;volatile
 35114                           
 35115                           ; BSR set to: 0
 35116                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 35117   005FAC  0E18               	movlw	24
 35118   005FAE  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 35119   005FB0  D09C               	goto	l21847
 35120                           
 35121                           ; BSR set to: 0
 35122                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 35123   005FB2  0E00               	movlw	0
 35124   005FB4  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 35125                           
 35126                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 35127   005FB6  0E00               	movlw	0
 35128   005FB8  D007               	goto	L17
 35129   005FBA                     l1727:
 35130                           
 35131                           ; BSR set to: 0
 35132                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 35133   005FBA  9C8A               	bcf	138,6,c	;volatile
 35134                           
 35135                           ; BSR set to: 0
 35136                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 35137   005FBC  0E18               	movlw	24
 35138   005FBE  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 35139   005FC0  D094               	goto	l21847
 35140                           
 35141                           ; BSR set to: 0
 35142                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 35143   005FC2  0E00               	movlw	0
 35144   005FC4  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 35145                           
 35146                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 35147   005FC6  0E01               	movlw	1
 35148   005FC8                     L17:
 35149   005FC8  6FBE               	movwf	(_ledState+1)& (0+255),b
 35150   005FCA  D08F               	goto	l21847
 35151   005FCC                     l1729:
 35152                           
 35153                           ; BSR set to: 0
 35154                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 35155   005FCC  8C8A               	bsf	138,6,c	;volatile
 35156                           
 35157                           ; BSR set to: 0
 35158                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 35159   005FCE  0E31               	movlw	49
 35160   005FD0  D7EE               	goto	L20
 35161   005FD2                     l1731:
 35162                           
 35163                           ; BSR set to: 0
 35164                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 35165   005FD2  9C8A               	bcf	138,6,c	;volatile
 35166                           
 35167                           ; BSR set to: 0
 35168                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 35169   005FD4  0E31               	movlw	49
 35170   005FD6  D7F3               	goto	L21
 35171   005FD8                     l1733:
 35172                           
 35173                           ; BSR set to: 0
 35174                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 35175   005FD8  9C8A               	bcf	138,6,c	;volatile
 35176                           
 35177                           ; BSR set to: 0
 35178                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 35179   005FDA  0E63               	movlw	99
 35180   005FDC  D7F0               	goto	L21
 35181   005FDE                     l21801:
 35182   005FDE  0100               	movlb	0	; () banked
 35183   005FE0  51BE               	movf	(_ledState+1)& (0+255),w,b
 35184   005FE2  6F9F               	movwf	??_leds_poll& (0+255),b
 35185   005FE4  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 35186                           
 35187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35188                           ; Switch size 1, requested type "simple"
 35189                           ; Number of cases is 1, Range of values is 0 to 0
 35190                           ; switch strategies available:
 35191                           ; Name         Instructions Cycles
 35192                           ; simple_byte            4     3 (average)
 35193                           ;	Chosen strategy is simple_byte
 35194   005FE6  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35195   005FE8  0A00               	xorlw	0	; case 0
 35196   005FEA  A4D8               	btfss	status,2,c
 35197   005FEC  D07E               	goto	l21847
 35198                           
 35199                           ; BSR set to: 0
 35200                           ; Switch size 1, requested type "simple"
 35201                           ; Number of cases is 10, Range of values is 0 to 9
 35202                           ; switch strategies available:
 35203                           ; Name         Instructions Cycles
 35204                           ; simple_byte           31    16 (average)
 35205                           ;	Chosen strategy is simple_byte
 35206   005FEE  519F               	movf	??_leds_poll& (0+255),w,b
 35207   005FF0  0A00               	xorlw	0	; case 0
 35208   005FF2  B4D8               	btfsc	status,2,c
 35209   005FF4  D79A               	goto	l1718
 35210   005FF6  0A01               	xorlw	1	; case 1
 35211   005FF8  B4D8               	btfsc	status,2,c
 35212   005FFA  D793               	goto	l1716
 35213   005FFC  0A03               	xorlw	3	; case 2
 35214   005FFE  B4D8               	btfsc	status,2,c
 35215   006000  D796               	goto	l21761
 35216   006002  0A01               	xorlw	1	; case 3
 35217   006004  B4D8               	btfsc	status,2,c
 35218   006006  D7A9               	goto	l21767
 35219   006008  0A07               	xorlw	7	; case 4
 35220   00600A  B4D8               	btfsc	status,2,c
 35221   00600C  D7BA               	goto	l21773
 35222   00600E  0A01               	xorlw	1	; case 5
 35223   006010  B4D8               	btfsc	status,2,c
 35224   006012  D7D3               	goto	l1727
 35225   006014  0A03               	xorlw	3	; case 6
 35226   006016  B4D8               	btfsc	status,2,c
 35227   006018  D7C8               	goto	l1725
 35228   00601A  0A01               	xorlw	1	; case 7
 35229   00601C  B4D8               	btfsc	status,2,c
 35230   00601E  D7D9               	goto	l1731
 35231   006020  0A0F               	xorlw	15	; case 8
 35232   006022  B4D8               	btfsc	status,2,c
 35233   006024  D7D3               	goto	l1729
 35234   006026  0A01               	xorlw	1	; case 9
 35235   006028  B4D8               	btfsc	status,2,c
 35236   00602A  D7D6               	goto	l1733
 35237   00602C  D05E               	goto	l21847
 35238   00602E                     l1736:
 35239                           
 35240                           ; BSR set to: 0
 35241                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 35242   00602E  8E8A               	bsf	138,7,c	;volatile
 35243   006030                     l21803:
 35244                           
 35245                           ; BSR set to: 0
 35246                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 35247   006030  0E00               	movlw	0
 35248   006032  6FBB               	movwf	_flashCounter& (0+255),b
 35249                           
 35250                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 35251   006034  0012               	return	
 35252   006036                     l1738:
 35253                           
 35254                           ; BSR set to: 0
 35255                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 35256   006036  9E8A               	bcf	138,7,c	;volatile
 35257   006038  D7FB               	goto	l21803
 35258   00603A                     l21807:
 35259                           
 35260                           ; BSR set to: 0
 35261                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 35262   00603A  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 35263   00603E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35264   006040  0E00               	movlw	0
 35265   006042  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35266   006044  0E19               	movlw	25
 35267   006046  6F99               	movwf	___awdiv@divisor& (0+255),b
 35268   006048  EC4A  F052         	call	___awdiv	;wreg free
 35269   00604C  0100               	movlb	0	; () banked
 35270   00604E  3397               	rrcf	?___awdiv& (0+255),f,b
 35271   006050  3397               	rrcf	?___awdiv& (0+255),f,b
 35272   006052  508A               	movf	138,w,c	;volatile
 35273   006054  1997               	xorwf	?___awdiv& (0+255),w,b
 35274   006056  0B7F               	andlw	-129
 35275   006058  1997               	xorwf	?___awdiv& (0+255),w,b
 35276   00605A  6E8A               	movwf	138,c	;volatile
 35277                           
 35278                           ; BSR set to: 0
 35279                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 35280   00605C  0E31               	movlw	49
 35281   00605E                     L19:
 35282   00605E  65BB               	cpfsgt	_flashCounter& (0+255),b
 35283   006060  0012               	return	
 35284   006062  D7E6               	goto	l21803
 35285   006064                     l21813:
 35286                           
 35287                           ; BSR set to: 0
 35288                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 35289   006064  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 35290   006068  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35291   00606A  0E00               	movlw	0
 35292   00606C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35293   00606E  0E32               	movlw	50
 35294   006070  6F99               	movwf	___awdiv@divisor& (0+255),b
 35295   006072  EC4A  F052         	call	___awdiv	;wreg free
 35296   006076  0100               	movlb	0	; () banked
 35297   006078  3397               	rrcf	?___awdiv& (0+255),f,b
 35298   00607A  3397               	rrcf	?___awdiv& (0+255),f,b
 35299   00607C  508A               	movf	138,w,c	;volatile
 35300   00607E  1997               	xorwf	?___awdiv& (0+255),w,b
 35301   006080  0B7F               	andlw	-129
 35302   006082  1997               	xorwf	?___awdiv& (0+255),w,b
 35303   006084  6E8A               	movwf	138,c	;volatile
 35304                           
 35305                           ; BSR set to: 0
 35306                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 35307   006086  0E63               	movlw	99
 35308   006088  D7EA               	goto	L19
 35309   00608A                     l21819:
 35310                           
 35311                           ; BSR set to: 0
 35312                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 35313   00608A  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 35314   00608E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35315   006090  0E00               	movlw	0
 35316   006092  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35317   006094  0E64               	movlw	100
 35318   006096  6F99               	movwf	___awdiv@divisor& (0+255),b
 35319   006098  EC4A  F052         	call	___awdiv	;wreg free
 35320   00609C  0100               	movlb	0	; () banked
 35321   00609E  3397               	rrcf	?___awdiv& (0+255),f,b
 35322   0060A0  3397               	rrcf	?___awdiv& (0+255),f,b
 35323   0060A2  508A               	movf	138,w,c	;volatile
 35324   0060A4  1997               	xorwf	?___awdiv& (0+255),w,b
 35325   0060A6  0B7F               	andlw	-129
 35326   0060A8  1997               	xorwf	?___awdiv& (0+255),w,b
 35327   0060AA  6E8A               	movwf	138,c	;volatile
 35328                           
 35329                           ; BSR set to: 0
 35330                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 35331   0060AC  0EC7               	movlw	199
 35332   0060AE  D7D7               	goto	L19
 35333   0060B0                     l1745:
 35334                           
 35335                           ; BSR set to: 0
 35336                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 35337   0060B0  8E8A               	bsf	138,7,c	;volatile
 35338                           
 35339                           ; BSR set to: 0
 35340                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 35341   0060B2  0E18               	movlw	24
 35342   0060B4  D00F               	goto	L23
 35343   0060B6                     u23050:
 35344                           
 35345                           ; BSR set to: 0
 35346                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 35347   0060B6  0E00               	movlw	0
 35348   0060B8  6FBB               	movwf	_flashCounter& (0+255),b
 35349                           
 35350                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 35351   0060BA  0E00               	movlw	0
 35352   0060BC  6FBD               	movwf	_ledState& (0+255),b
 35353   0060BE  0012               	return	
 35354   0060C0                     l1747:
 35355                           
 35356                           ; BSR set to: 0
 35357                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 35358   0060C0  9E8A               	bcf	138,7,c	;volatile
 35359                           
 35360                           ; BSR set to: 0
 35361                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 35362   0060C2  0E18               	movlw	24
 35363   0060C4  D00C               	goto	L22
 35364   0060C6                     u23060:
 35365                           
 35366                           ; BSR set to: 0
 35367                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 35368   0060C6  0E00               	movlw	0
 35369   0060C8  6FBB               	movwf	_flashCounter& (0+255),b
 35370                           
 35371                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 35372   0060CA  0E01               	movlw	1
 35373   0060CC  6FBD               	movwf	_ledState& (0+255),b
 35374   0060CE  0012               	return	
 35375   0060D0                     l1749:
 35376                           
 35377                           ; BSR set to: 0
 35378                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 35379   0060D0  8E8A               	bsf	138,7,c	;volatile
 35380                           
 35381                           ; BSR set to: 0
 35382                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 35383   0060D2  0E31               	movlw	49
 35384   0060D4                     L23:
 35385   0060D4  65BB               	cpfsgt	_flashCounter& (0+255),b
 35386   0060D6  0012               	return	
 35387   0060D8  D7EE               	goto	u23050
 35388   0060DA                     l1751:
 35389                           
 35390                           ; BSR set to: 0
 35391                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 35392   0060DA  9E8A               	bcf	138,7,c	;volatile
 35393                           
 35394                           ; BSR set to: 0
 35395                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 35396   0060DC  0E31               	movlw	49
 35397   0060DE                     L22:
 35398   0060DE  65BB               	cpfsgt	_flashCounter& (0+255),b
 35399   0060E0  0012               	return	
 35400   0060E2  D7F1               	goto	u23060
 35401   0060E4                     l1753:
 35402                           
 35403                           ; BSR set to: 0
 35404                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 35405   0060E4  9E8A               	bcf	138,7,c	;volatile
 35406                           
 35407                           ; BSR set to: 0
 35408                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 35409   0060E6  0E63               	movlw	99
 35410   0060E8  D7FA               	goto	L22
 35411   0060EA                     l21847:
 35412                           
 35413                           ; BSR set to: 0
 35414   0060EA  51BD               	movf	_ledState& (0+255),w,b
 35415   0060EC  6F9F               	movwf	??_leds_poll& (0+255),b
 35416   0060EE  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 35417                           
 35418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35419                           ; Switch size 1, requested type "simple"
 35420                           ; Number of cases is 1, Range of values is 0 to 0
 35421                           ; switch strategies available:
 35422                           ; Name         Instructions Cycles
 35423                           ; simple_byte            4     3 (average)
 35424                           ;	Chosen strategy is simple_byte
 35425   0060F0  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35426   0060F2  0A00               	xorlw	0	; case 0
 35427   0060F4  A4D8               	btfss	status,2,c
 35428   0060F6  0012               	return	
 35429                           
 35430                           ; BSR set to: 0
 35431                           ; Switch size 1, requested type "simple"
 35432                           ; Number of cases is 10, Range of values is 0 to 9
 35433                           ; switch strategies available:
 35434                           ; Name         Instructions Cycles
 35435                           ; simple_byte           31    16 (average)
 35436                           ;	Chosen strategy is simple_byte
 35437   0060F8  519F               	movf	??_leds_poll& (0+255),w,b
 35438   0060FA  0A00               	xorlw	0	; case 0
 35439   0060FC  B4D8               	btfsc	status,2,c
 35440   0060FE  D79B               	goto	l1738
 35441   006100  0A01               	xorlw	1	; case 1
 35442   006102  B4D8               	btfsc	status,2,c
 35443   006104  D794               	goto	l1736
 35444   006106  0A03               	xorlw	3	; case 2
 35445   006108  B4D8               	btfsc	status,2,c
 35446   00610A  D797               	goto	l21807
 35447   00610C  0A01               	xorlw	1	; case 3
 35448   00610E  B4D8               	btfsc	status,2,c
 35449   006110  D7A9               	goto	l21813
 35450   006112  0A07               	xorlw	7	; case 4
 35451   006114  B4D8               	btfsc	status,2,c
 35452   006116  D7B9               	goto	l21819
 35453   006118  0A01               	xorlw	1	; case 5
 35454   00611A  B4D8               	btfsc	status,2,c
 35455   00611C  D7D1               	goto	l1747
 35456   00611E  0A03               	xorlw	3	; case 6
 35457   006120  B4D8               	btfsc	status,2,c
 35458   006122  D7C6               	goto	l1745
 35459   006124  0A01               	xorlw	1	; case 7
 35460   006126  B4D8               	btfsc	status,2,c
 35461   006128  D7D8               	goto	l1751
 35462   00612A  0A0F               	xorlw	15	; case 8
 35463   00612C  B4D8               	btfsc	status,2,c
 35464   00612E  D7D0               	goto	l1749
 35465   006130  0A01               	xorlw	1	; case 9
 35466   006132  A4D8               	btfss	status,2,c
 35467   006134  0012               	return	
 35468   006136  D7D6               	goto	l1753
 35469   006138                     __end_of_leds_poll:
 35470                           	callstack 0
 35471                           
 35472 ;; *************** function _tickGet *****************
 35473 ;; Defined at:
 35474 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 35475 ;; Parameters:    Size  Location     Type
 35476 ;;		None
 35477 ;; Auto vars:     Size  Location     Type
 35478 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 35479 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 35480 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 35481 ;; Return value:  Size  Location     Type
 35482 ;;                  4   45[BANK0 ] unsigned long 
 35483 ;; Registers used:
 35484 ;;		wreg, status,2, status,0
 35485 ;; Tracked objects:
 35486 ;;		On entry : 0/0
 35487 ;;		On exit  : 0/0
 35488 ;;		Unchanged: 0/0
 35489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35490 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35491 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35493 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35494 ;;Total ram usage:       10 bytes
 35495 ;; Hardware stack levels used: 1
 35496 ;; Hardware stack levels required when called: 12
 35497 ;; This function calls:
 35498 ;;		Nothing
 35499 ;; This function is called by:
 35500 ;;		_setup
 35501 ;;		_loop
 35502 ;;		_doWait
 35503 ;;		_initServos
 35504 ;;		_pollServos
 35505 ;;		_mnsPowerUp
 35506 ;;		_mnsPoll
 35507 ;;		_leds_powerUp
 35508 ;;		_leds_poll
 35509 ;;		_pbDownTimer
 35510 ;;		_pbUpTimer
 35511 ;;		_poll
 35512 ;;		_canPowerUp
 35513 ;;		_handleSelfEnumeration
 35514 ;;		_processEnumeration
 35515 ;; This function uses a non-reentrant model
 35516 ;;
 35517                           
 35518                           	psect	text141
 35519   00B3AC                     __ptext141:
 35520                           	callstack 0
 35521   00B3AC                     _tickGet:
 35522                           	callstack 17
 35523                           
 35524                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 35525                           
 35526                           ; BSR set to: 0
 35527                           ;incstack = 0
 35528   00B3AC  0E00               	movlw	0
 35529   00B3AE  0100               	movlb	0	; () banked
 35530   00B3B0  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 35531                           
 35532                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 35533   00B3B2  0E00               	movlw	0
 35534   00B3B4  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 35535                           
 35536                           ; BSR set to: 0
 35537                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 35538   00B3B6  9AF2               	bcf	242,5,c	;volatile
 35539   00B3B8                     l20001:
 35540                           
 35541                           ; BSR set to: 0
 35542                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 35543   00B3B8  0E00               	movlw	0
 35544   00B3BA  B4F2               	btfsc	242,2,c	;volatile
 35545   00B3BC  0E01               	movlw	1
 35546   00B3BE  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 35547                           
 35548                           ; BSR set to: 0
 35549                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 35550   00B3C0  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 35551                           
 35552                           ; BSR set to: 0
 35553                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 35554   00B3C4  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 35555                           
 35556                           ; BSR set to: 0
 35557                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 35558   00B3C8  0E00               	movlw	0
 35559   00B3CA  B4F2               	btfsc	242,2,c	;volatile
 35560   00B3CC  0E01               	movlw	1
 35561   00B3CE  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 35562                           
 35563                           ; BSR set to: 0
 35564                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 35565   00B3D0  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 35566   00B3D2  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 35567   00B3D4  A4D8               	btfss	status,2,c
 35568   00B3D6  D7F0               	goto	l20001
 35569                           
 35570                           ; BSR set to: 0
 35571                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 35572   00B3D8  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 35573   00B3DA  B4D8               	btfsc	status,2,c
 35574   00B3DC  D005               	goto	l20021
 35575                           
 35576                           ; BSR set to: 0
 35577                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 35578   00B3DE  94F2               	bcf	242,2,c	;volatile
 35579                           
 35580                           ; BSR set to: 0
 35581                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 35582   00B3E0  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 35583                           
 35584                           ; BSR set to: 0
 35585                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 35586   00B3E2  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 35587   00B3E4  B4D8               	btfsc	status,2,c
 35588                           
 35589                           ; BSR set to: 0
 35590                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 35591   00B3E6  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 35592   00B3E8                     l20021:
 35593                           
 35594                           ; BSR set to: 0
 35595                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 35596   00B3E8  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 35597   00B3EA  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 35598                           
 35599                           ; BSR set to: 0
 35600                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 35601   00B3EC  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 35602   00B3EE  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 35603                           
 35604                           ; BSR set to: 0
 35605                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 35606   00B3F0  8AF2               	bsf	242,5,c	;volatile
 35607                           
 35608                           ; BSR set to: 0
 35609                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 35610   00B3F2  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 35611   00B3F6  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 35612   00B3FA  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 35613   00B3FE  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 35614                           
 35615                           ; BSR set to: 0
 35616   00B402  0012               	return		;funcret
 35617   00B404                     __end_of_tickGet:
 35618                           	callstack 0
 35619                           
 35620 ;; *************** function ___lmul *****************
 35621 ;; Defined at:
 35622 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 35623 ;; Parameters:    Size  Location     Type
 35624 ;;  multiplier      4   49[BANK0 ] unsigned long 
 35625 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 35626 ;; Auto vars:     Size  Location     Type
 35627 ;;  product         4   57[BANK0 ] unsigned long 
 35628 ;; Return value:  Size  Location     Type
 35629 ;;                  4   49[BANK0 ] unsigned long 
 35630 ;; Registers used:
 35631 ;;		wreg, status,2, status,0
 35632 ;; Tracked objects:
 35633 ;;		On entry : 0/0
 35634 ;;		On exit  : 0/0
 35635 ;;		Unchanged: 0/0
 35636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35637 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35638 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35640 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35641 ;;Total ram usage:       12 bytes
 35642 ;; Hardware stack levels used: 1
 35643 ;; Hardware stack levels required when called: 12
 35644 ;; This function calls:
 35645 ;;		Nothing
 35646 ;; This function is called by:
 35647 ;;		_loop
 35648 ;;		_doWait
 35649 ;;		_pbDownTimer
 35650 ;;		_pbUpTimer
 35651 ;;		_poll
 35652 ;; This function uses a non-reentrant model
 35653 ;;
 35654                           
 35655                           	psect	text142
 35656   00B404                     __ptext142:
 35657                           	callstack 0
 35658   00B404                     ___lmul:
 35659                           	callstack 17
 35660                           
 35661                           ; BSR set to: 0
 35662                           ;incstack = 0
 35663   00B404  0E00               	movlw	0
 35664   00B406  0100               	movlb	0	; () banked
 35665   00B408  6F99               	movwf	___lmul@product& (0+255),b
 35666   00B40A  0E00               	movlw	0
 35667   00B40C  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 35668   00B40E  0E00               	movlw	0
 35669   00B410  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 35670   00B412  0E00               	movlw	0
 35671   00B414  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 35672   00B416                     l20927:
 35673                           
 35674                           ; BSR set to: 0
 35675   00B416  A191               	btfss	___lmul@multiplier& (0+255),0,b
 35676   00B418  D008               	goto	l20931
 35677                           
 35678                           ; BSR set to: 0
 35679   00B41A  5195               	movf	___lmul@multiplicand& (0+255),w,b
 35680   00B41C  2799               	addwf	___lmul@product& (0+255),f,b
 35681   00B41E  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 35682   00B420  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 35683   00B422  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 35684   00B424  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 35685   00B426  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 35686   00B428  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 35687   00B42A                     l20931:
 35688                           
 35689                           ; BSR set to: 0
 35690   00B42A  90D8               	bcf	status,0,c
 35691   00B42C  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 35692   00B42E  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 35693   00B430  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 35694   00B432  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 35695                           
 35696                           ; BSR set to: 0
 35697   00B434  90D8               	bcf	status,0,c
 35698   00B436  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 35699   00B438  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 35700   00B43A  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 35701   00B43C  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 35702   00B43E  5191               	movf	___lmul@multiplier& (0+255),w,b
 35703   00B440  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 35704   00B442  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 35705   00B444  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 35706   00B446  A4D8               	btfss	status,2,c
 35707   00B448  D7E6               	goto	l20927
 35708                           
 35709                           ; BSR set to: 0
 35710   00B44A  C099  F091         	movff	___lmul@product,?___lmul
 35711   00B44E  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 35712   00B452  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 35713   00B456  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 35714                           
 35715                           ; BSR set to: 0
 35716   00B45A  0012               	return		;funcret
 35717   00B45C                     __end_of___lmul:
 35718                           	callstack 0
 35719                           
 35720 ;; *************** function ___lldiv *****************
 35721 ;; Defined at:
 35722 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 35723 ;; Parameters:    Size  Location     Type
 35724 ;;  dividend        4   55[BANK0 ] unsigned long 
 35725 ;;  divisor         4   59[BANK0 ] unsigned long 
 35726 ;; Auto vars:     Size  Location     Type
 35727 ;;  quotient        4   63[BANK0 ] unsigned long 
 35728 ;;  counter         1   67[BANK0 ] unsigned char 
 35729 ;; Return value:  Size  Location     Type
 35730 ;;                  4   55[BANK0 ] unsigned long 
 35731 ;; Registers used:
 35732 ;;		wreg, status,2, status,0
 35733 ;; Tracked objects:
 35734 ;;		On entry : 0/0
 35735 ;;		On exit  : 0/0
 35736 ;;		Unchanged: 0/0
 35737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35738 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35739 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35741 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35742 ;;Total ram usage:       13 bytes
 35743 ;; Hardware stack levels used: 1
 35744 ;; Hardware stack levels required when called: 12
 35745 ;; This function calls:
 35746 ;;		Nothing
 35747 ;; This function is called by:
 35748 ;;		_pbDownTimer
 35749 ;;		_pbUpTimer
 35750 ;; This function uses a non-reentrant model
 35751 ;;
 35752                           
 35753                           	psect	text143
 35754   00A5A0                     __ptext143:
 35755                           	callstack 0
 35756   00A5A0                     ___lldiv:
 35757                           	callstack 16
 35758                           
 35759                           ; BSR set to: 0
 35760                           ;incstack = 0
 35761   00A5A0  0E00               	movlw	0
 35762   00A5A2  0100               	movlb	0	; () banked
 35763   00A5A4  6F9F               	movwf	___lldiv@quotient& (0+255),b
 35764   00A5A6  0E00               	movlw	0
 35765   00A5A8  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 35766   00A5AA  0E00               	movlw	0
 35767   00A5AC  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 35768   00A5AE  0E00               	movlw	0
 35769   00A5B0  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 35770                           
 35771                           ; BSR set to: 0
 35772   00A5B2  519B               	movf	___lldiv@divisor& (0+255),w,b
 35773   00A5B4  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35774   00A5B6  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35775   00A5B8  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35776   00A5BA  B4D8               	btfsc	status,2,c
 35777   00A5BC  D02A               	goto	l3073
 35778                           
 35779                           ; BSR set to: 0
 35780   00A5BE  0E01               	movlw	1
 35781   00A5C0  6FA3               	movwf	___lldiv@counter& (0+255),b
 35782   00A5C2  D006               	goto	l15269
 35783   00A5C4                     l15267:
 35784                           
 35785                           ; BSR set to: 0
 35786   00A5C4  90D8               	bcf	status,0,c
 35787   00A5C6  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 35788   00A5C8  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35789   00A5CA  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35790   00A5CC  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35791   00A5CE  2BA3               	incf	___lldiv@counter& (0+255),f,b
 35792   00A5D0                     l15269:
 35793                           
 35794                           ; BSR set to: 0
 35795   00A5D0  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35796   00A5D2  D7F8               	goto	l15267
 35797   00A5D4                     u14900:
 35798                           
 35799                           ; BSR set to: 0
 35800   00A5D4  90D8               	bcf	status,0,c
 35801   00A5D6  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 35802   00A5D8  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35803   00A5DA  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35804   00A5DC  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35805                           
 35806                           ; BSR set to: 0
 35807   00A5DE  519B               	movf	___lldiv@divisor& (0+255),w,b
 35808   00A5E0  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 35809   00A5E2  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35810   00A5E4  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35811   00A5E6  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35812   00A5E8  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35813   00A5EA  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35814   00A5EC  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35815   00A5EE  A0D8               	btfss	status,0,c
 35816   00A5F0  D009               	goto	l15279
 35817                           
 35818                           ; BSR set to: 0
 35819   00A5F2  519B               	movf	___lldiv@divisor& (0+255),w,b
 35820   00A5F4  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 35821   00A5F6  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35822   00A5F8  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35823   00A5FA  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35824   00A5FC  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35825   00A5FE  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35826   00A600  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35827                           
 35828                           ; BSR set to: 0
 35829   00A602  819F               	bsf	___lldiv@quotient& (0+255),0,b
 35830   00A604                     l15279:
 35831                           
 35832                           ; BSR set to: 0
 35833   00A604  90D8               	bcf	status,0,c
 35834   00A606  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35835   00A608  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35836   00A60A  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35837   00A60C  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 35838                           
 35839                           ; BSR set to: 0
 35840   00A60E  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 35841   00A610  D7E1               	goto	u14900
 35842   00A612                     l3073:
 35843                           
 35844                           ; BSR set to: 0
 35845   00A612  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 35846   00A616  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 35847   00A61A  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 35848   00A61E  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 35849                           
 35850                           ; BSR set to: 0
 35851   00A622  0012               	return		;funcret
 35852   00A624                     __end_of___lldiv:
 35853                           	callstack 0
 35854                           
 35855 ;; *************** function _factoryReset *****************
 35856 ;; Defined at:
 35857 ;;		line 856 in file "../../VLCBlib_PIC/vlcb.c"
 35858 ;; Parameters:    Size  Location     Type
 35859 ;;		None
 35860 ;; Auto vars:     Size  Location     Type
 35861 ;;  i               1   56[BANK1 ] unsigned char 
 35862 ;; Return value:  Size  Location     Type
 35863 ;;                  1    wreg      void 
 35864 ;; Registers used:
 35865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35866 ;; Tracked objects:
 35867 ;;		On entry : 0/0
 35868 ;;		On exit  : 0/0
 35869 ;;		Unchanged: 0/0
 35870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35872 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35873 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35874 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35875 ;;Total ram usage:        5 bytes
 35876 ;; Hardware stack levels used: 1
 35877 ;; Hardware stack levels required when called: 26
 35878 ;; This function calls:
 35879 ;;		NULL
 35880 ;;		_APP_factoryReset
 35881 ;;		_canFactoryReset
 35882 ;;		_mnsFactoryReset
 35883 ;;		_nvFactoryReset
 35884 ;;		_teachFactoryReset
 35885 ;;		_writeNVM
 35886 ;; This function is called by:
 35887 ;;		_mnsProcessMessage
 35888 ;;		_checkPowerOnPb
 35889 ;;		_main
 35890 ;; This function uses a non-reentrant model
 35891 ;;
 35892                           
 35893                           	psect	text144
 35894   008492                     __ptext144:
 35895                           	callstack 0
 35896   008492                     _factoryReset:
 35897                           	callstack 2
 35898                           
 35899                           ;../../VLCBlib_PIC/vlcb.c: 857:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 859:     for (i
      +                          =0; i<9; i++) {
 35900                           
 35901                           ; BSR set to: 0
 35902                           ;incstack = 0
 35903   008492  0E00               	movlw	0
 35904   008494  0101               	movlb	1	; () banked
 35905   008496  6FF0               	movwf	factoryReset@i& (0+255),b
 35906   008498                     l21635:
 35907                           
 35908                           ; BSR set to: 1
 35909                           ;../../VLCBlib_PIC/vlcb.c: 860:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 35910   008498  51F0               	movf	factoryReset@i& (0+255),w,b
 35911   00849A  0D02               	mullw	2
 35912   00849C  0E75               	movlw	low _services
 35913   00849E  24F3               	addwf	243,w,c
 35914   0084A0  6EF6               	movwf	tblptrl,c
 35915   0084A2  0EEE               	movlw	high _services
 35916   0084A4  20F4               	addwfc	244,w,c
 35917   0084A6  6EF7               	movwf	tblptrh,c
 35918   0084A8                     	if	1	;There are 3 active tblptr bytes
 35919   0084A8  6AF8               	clrf	tblptru,c
 35920   0084AA  0E00               	movlw	low (__mediumconst shr (0+16))
 35921   0084AC  22F8               	addwfc	tblptru,f,c
 35922   0084AE                     	endif
 35923   0084AE  0009               	tblrd		*+
 35924   0084B0  50F5               	movf	tablat,w,c
 35925   0084B2  0009               	tblrd		*+
 35926   0084B4  10F5               	iorwf	tablat,w,c
 35927   0084B6  B4D8               	btfsc	status,2,c
 35928   0084B8  D04B               	goto	u22829
 35929                           
 35930                           ; BSR set to: 1
 35931   0084BA  51F0               	movf	factoryReset@i& (0+255),w,b
 35932   0084BC  0D02               	mullw	2
 35933   0084BE  0E75               	movlw	low _services
 35934   0084C0  24F3               	addwf	243,w,c
 35935   0084C2  6EF6               	movwf	tblptrl,c
 35936   0084C4  0EEE               	movlw	high _services
 35937   0084C6  20F4               	addwfc	244,w,c
 35938   0084C8  6EF7               	movwf	tblptrh,c
 35939   0084CA                     	if	1	;There are 3 active tblptr bytes
 35940   0084CA  6AF8               	clrf	tblptru,c
 35941   0084CC  0E00               	movlw	low (__mediumconst shr (0+16))
 35942   0084CE  22F8               	addwfc	tblptru,f,c
 35943   0084D0                     	endif
 35944   0084D0  0009               	tblrd		*+
 35945   0084D2  CFF5 F1EC          	movff	tablat,??_factoryReset
 35946   0084D6  0009               	tblrd		*+
 35947   0084D8  CFF5 F1ED          	movff	tablat,??_factoryReset+1
 35948   0084DC  0E02               	movlw	2
 35949   0084DE  27EC               	addwf	??_factoryReset& (0+255),f,b
 35950   0084E0  0E00               	movlw	0
 35951   0084E2  23ED               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35952   0084E4  C1EC  FFF6         	movff	??_factoryReset,tblptrl
 35953   0084E8  C1ED  FFF7         	movff	??_factoryReset+1,tblptrh
 35954   0084EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35955   0084EC  6AF8               	clrf	tblptru,c
 35956   0084EE                     	endif
 35957   0084EE                     	if	0	;tblptru may be non-zero
 35958   0084EE                     	endif
 35959   0084EE  0009               	tblrd		*+
 35960   0084F0  50F5               	movf	tablat,w,c
 35961   0084F2  0009               	tblrd		*+
 35962   0084F4  10F5               	iorwf	tablat,w,c
 35963   0084F6  B4D8               	btfsc	status,2,c
 35964   0084F8  D02B               	goto	u22829
 35965                           
 35966                           ; BSR set to: 1
 35967                           ;../../VLCBlib_PIC/vlcb.c: 861:             services[i]->factoryReset();
 35968   0084FA  51F0               	movf	factoryReset@i& (0+255),w,b
 35969   0084FC  0D02               	mullw	2
 35970   0084FE  0E75               	movlw	low _services
 35971   008500  24F3               	addwf	243,w,c
 35972   008502  6EF6               	movwf	tblptrl,c
 35973   008504  0EEE               	movlw	high _services
 35974   008506  20F4               	addwfc	244,w,c
 35975   008508  6EF7               	movwf	tblptrh,c
 35976   00850A                     	if	1	;There are 3 active tblptr bytes
 35977   00850A  6AF8               	clrf	tblptru,c
 35978   00850C  0E00               	movlw	low (__mediumconst shr (0+16))
 35979   00850E  22F8               	addwfc	tblptru,f,c
 35980   008510                     	endif
 35981   008510  0009               	tblrd		*+
 35982   008512  CFF5 F1EC          	movff	tablat,??_factoryReset
 35983   008516  0009               	tblrd		*+
 35984   008518  CFF5 F1ED          	movff	tablat,??_factoryReset+1
 35985   00851C  0E02               	movlw	2
 35986   00851E  27EC               	addwf	??_factoryReset& (0+255),f,b
 35987   008520  0E00               	movlw	0
 35988   008522  23ED               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35989   008524  C1EC  FFF6         	movff	??_factoryReset,tblptrl
 35990   008528  C1ED  FFF7         	movff	??_factoryReset+1,tblptrh
 35991   00852C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35992   00852C  6AF8               	clrf	tblptru,c
 35993   00852E                     	endif
 35994   00852E                     	if	0	;tblptru may be non-zero
 35995   00852E                     	endif
 35996   00852E  0009               	tblrd		*+
 35997   008530  CFF5 F1EE          	movff	tablat,??_factoryReset+2
 35998   008534  0009               	tblrd		*+
 35999   008536  CFF5 F1EF          	movff	tablat,??_factoryReset+3
 36000   00853A  D801               	call	u22828
 36001   00853C  D009               	goto	u22829
 36002   00853E                     u22828:
 36003   00853E  0005               	push	
 36004   008540  6EFA               	movwf	pclath,c
 36005   008542  51EE               	movf	(??_factoryReset+2)& (0+255),w,b
 36006   008544  6EFD               	movwf	tosl,c
 36007   008546  51EF               	movf	(??_factoryReset+3)& (0+255),w,b
 36008   008548  6EFE               	movwf	tosh,c
 36009   00854A  6AFF               	clrf	tosu,c
 36010   00854C  50FA               	movf	pclath,w,c
 36011   00854E  0012               	return		;indir
 36012   008550                     u22829:
 36013                           
 36014                           ;../../VLCBlib_PIC/vlcb.c: 863:     }
 36015   008550  0101               	movlb	1	; () banked
 36016   008552  2BF0               	incf	factoryReset@i& (0+255),f,b
 36017                           
 36018                           ; BSR set to: 1
 36019   008554  0E08               	movlw	8
 36020   008556  65F0               	cpfsgt	factoryReset@i& (0+255),b
 36021   008558  D79F               	goto	l21635
 36022                           
 36023                           ; BSR set to: 1
 36024                           ;../../VLCBlib_PIC/vlcb.c: 865:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 36025   00855A  0EFA               	movlw	250
 36026   00855C  0100               	movlb	0	; () banked
 36027   00855E  6FA4               	movwf	writeNVM@index& (0+255),b
 36028   008560  0E03               	movlw	3
 36029   008562  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36030   008564  0E00               	movlw	0
 36031   008566  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36032   008568  0E01               	movlw	1
 36033   00856A  6FA7               	movwf	writeNVM@value& (0+255),b
 36034   00856C  0E00               	movlw	0
 36035   00856E  EC52  F05B         	call	_writeNVM
 36036                           
 36037                           ;../../VLCBlib_PIC/vlcb.c: 867:     APP_factoryReset();
 36038   008572  EC7E  F060         	call	_APP_factoryReset	;wreg free
 36039   008576  0012               	return		;funcret
 36040   008578                     __end_of_factoryReset:
 36041                           	callstack 0
 36042                           
 36043 ;; *************** function _canFactoryReset *****************
 36044 ;; Defined at:
 36045 ;;		line 200 in file "../../VLCBlib_PIC/can18_ecan.c"
 36046 ;; Parameters:    Size  Location     Type
 36047 ;;		None
 36048 ;; Auto vars:     Size  Location     Type
 36049 ;;		None
 36050 ;; Return value:  Size  Location     Type
 36051 ;;                  1    wreg      void 
 36052 ;; Registers used:
 36053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36054 ;; Tracked objects:
 36055 ;;		On entry : 0/0
 36056 ;;		On exit  : 0/0
 36057 ;;		Unchanged: 0/0
 36058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36063 ;;Total ram usage:        0 bytes
 36064 ;; Hardware stack levels used: 1
 36065 ;; Hardware stack levels required when called: 18
 36066 ;; This function calls:
 36067 ;;		_writeNVM
 36068 ;; This function is called by:
 36069 ;;		_factoryReset
 36070 ;; This function uses a non-reentrant model
 36071 ;;
 36072                           
 36073                           	psect	text145
 36074   00C206                     __ptext145:
 36075                           	callstack 0
 36076   00C206                     _canFactoryReset:
 36077                           	callstack 9
 36078                           
 36079                           ;../../VLCBlib_PIC/can18_ecan.c: 201:     canId = 0;
 36080                           
 36081                           ;incstack = 0
 36082   00C206  0E00               	movlw	0
 36083   00C208  0100               	movlb	0	; () banked
 36084   00C20A  6FC3               	movwf	_canId& (0+255),b
 36085                           
 36086                           ; BSR set to: 0
 36087                           ;../../VLCBlib_PIC/can18_ecan.c: 202:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 36088   00C20C  0EFE               	movlw	254
 36089   00C20E  6FA4               	movwf	writeNVM@index& (0+255),b
 36090   00C210  0E03               	movlw	3
 36091   00C212  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36092   00C214  0E00               	movlw	0
 36093   00C216  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36094   00C218  C0C3  F0A7         	movff	_canId,writeNVM@value
 36095   00C21C  0E00               	movlw	0
 36096   00C21E  EC52  F05B         	call	_writeNVM
 36097   00C222  0012               	return		;funcret
 36098   00C224                     __end_of_canFactoryReset:
 36099                           	callstack 0
 36100                           
 36101 ;; *************** function _nvFactoryReset *****************
 36102 ;; Defined at:
 36103 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 36104 ;; Parameters:    Size  Location     Type
 36105 ;;		None
 36106 ;; Auto vars:     Size  Location     Type
 36107 ;;  i               1    4[BANK1 ] unsigned char 
 36108 ;; Return value:  Size  Location     Type
 36109 ;;                  1    wreg      void 
 36110 ;; Registers used:
 36111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36112 ;; Tracked objects:
 36113 ;;		On entry : 0/0
 36114 ;;		On exit  : 0/0
 36115 ;;		Unchanged: 0/0
 36116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36118 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36119 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36120 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36121 ;;Total ram usage:        3 bytes
 36122 ;; Hardware stack levels used: 1
 36123 ;; Hardware stack levels required when called: 18
 36124 ;; This function calls:
 36125 ;;		_APP_nvDefault
 36126 ;;		_writeNVM
 36127 ;; This function is called by:
 36128 ;;		_factoryReset
 36129 ;; This function uses a non-reentrant model
 36130 ;;
 36131                           
 36132                           	psect	text146
 36133   00BA80                     __ptext146:
 36134                           	callstack 0
 36135   00BA80                     _nvFactoryReset:
 36136                           	callstack 9
 36137                           
 36138                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= (15+7*16); i++) {
 36139                           
 36140                           ;incstack = 0
 36141   00BA80  0E01               	movlw	1
 36142   00BA82  0101               	movlb	1	; () banked
 36143   00BA84  6FBC               	movwf	nvFactoryReset@i& (0+255),b
 36144   00BA86                     l20723:
 36145                           
 36146                           ; BSR set to: 1
 36147                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 36148   00BA86  0E80               	movlw	128
 36149   00BA88  25BC               	addwf	nvFactoryReset@i& (0+255),w,b
 36150   00BA8A  6FBA               	movwf	??_nvFactoryReset& (0+255),b
 36151   00BA8C  6BBB               	clrf	(??_nvFactoryReset+1)& (0+255),b
 36152   00BA8E  0EFF               	movlw	255
 36153   00BA90  23BB               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 36154   00BA92  C1BA  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 36155   00BA96  C1BB  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 36156   00BA9A  0100               	movlb	0	; () banked
 36157   00BA9C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36158   00BA9E  0101               	movlb	1	; () banked
 36159   00BAA0  51BC               	movf	nvFactoryReset@i& (0+255),w,b
 36160   00BAA2  ECBF  F045         	call	_APP_nvDefault
 36161   00BAA6  0100               	movlb	0	; () banked
 36162   00BAA8  6FA7               	movwf	writeNVM@value& (0+255),b
 36163   00BAAA  0E01               	movlw	1
 36164   00BAAC  EC52  F05B         	call	_writeNVM
 36165                           
 36166                           ;../../VLCBlib_PIC/nv.c: 130:     }
 36167   00BAB0  0101               	movlb	1	; () banked
 36168   00BAB2  2BBC               	incf	nvFactoryReset@i& (0+255),f,b
 36169                           
 36170                           ; BSR set to: 1
 36171   00BAB4  0E7F               	movlw	127
 36172   00BAB6  65BC               	cpfsgt	nvFactoryReset@i& (0+255),b
 36173   00BAB8  D7E6               	goto	l20723
 36174   00BABA  0012               	return	
 36175   00BABC                     __end_of_nvFactoryReset:
 36176                           	callstack 0
 36177                           
 36178 ;; *************** function _mnsFactoryReset *****************
 36179 ;; Defined at:
 36180 ;;		line 273 in file "../../VLCBlib_PIC/mns.c"
 36181 ;; Parameters:    Size  Location     Type
 36182 ;;		None
 36183 ;; Auto vars:     Size  Location     Type
 36184 ;;		None
 36185 ;; Return value:  Size  Location     Type
 36186 ;;                  1    wreg      void 
 36187 ;; Registers used:
 36188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36189 ;; Tracked objects:
 36190 ;;		On entry : 0/0
 36191 ;;		On exit  : 0/0
 36192 ;;		Unchanged: 0/0
 36193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36198 ;;Total ram usage:        0 bytes
 36199 ;; Hardware stack levels used: 1
 36200 ;; Hardware stack levels required when called: 18
 36201 ;; This function calls:
 36202 ;;		_writeNVM
 36203 ;; This function is called by:
 36204 ;;		_factoryReset
 36205 ;; This function uses a non-reentrant model
 36206 ;;
 36207                           
 36208                           	psect	text147
 36209   00AA0C                     __ptext147:
 36210                           	callstack 0
 36211   00AA0C                     _mnsFactoryReset:
 36212                           	callstack 9
 36213                           
 36214                           ;../../VLCBlib_PIC/mns.c: 274:     nn.bytes.hi = 0;
 36215                           
 36216                           ; BSR set to: 1
 36217                           ;incstack = 0
 36218   00AA0C  0E00               	movlw	0
 36219   00AA0E  0100               	movlb	0	; () banked
 36220   00AA10  6FC0               	movwf	(_nn+1)& (0+255),b
 36221                           
 36222                           ;../../VLCBlib_PIC/mns.c: 275:     nn.bytes.lo = 0;
 36223   00AA12  0E00               	movlw	0
 36224   00AA14  6FBF               	movwf	_nn& (0+255),b
 36225                           
 36226                           ; BSR set to: 0
 36227                           ;../../VLCBlib_PIC/mns.c: 276:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.hi);
 36228   00AA16  0EFC               	movlw	252
 36229   00AA18  6FA4               	movwf	writeNVM@index& (0+255),b
 36230   00AA1A  0E03               	movlw	3
 36231   00AA1C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36232   00AA1E  0E00               	movlw	0
 36233   00AA20  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36234   00AA22  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 36235   00AA26  0E00               	movlw	0
 36236   00AA28  EC52  F05B         	call	_writeNVM
 36237                           
 36238                           ;../../VLCBlib_PIC/mns.c: 277:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.lo);
 36239   00AA2C  0EFD               	movlw	253
 36240   00AA2E  0100               	movlb	0	; () banked
 36241   00AA30  6FA4               	movwf	writeNVM@index& (0+255),b
 36242   00AA32  0E03               	movlw	3
 36243   00AA34  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36244   00AA36  0E00               	movlw	0
 36245   00AA38  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36246   00AA3A  C0BF  F0A7         	movff	_nn,writeNVM@value
 36247   00AA3E  0E00               	movlw	0
 36248   00AA40  EC52  F05B         	call	_writeNVM
 36249                           
 36250                           ;../../VLCBlib_PIC/mns.c: 279:     last_mode_state = mode_state = MODE_UNINITIALISED;
 36251   00AA44  0100               	movlb	0	; () banked
 36252   00AA46  69C8               	setf	_mode_state& (0+255),b
 36253   00AA48  69C7               	setf	_last_mode_state& (0+255),b
 36254                           
 36255                           ; BSR set to: 0
 36256                           ;../../VLCBlib_PIC/mns.c: 280:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 36257   00AA4A  0EFB               	movlw	251
 36258   00AA4C  6FA4               	movwf	writeNVM@index& (0+255),b
 36259   00AA4E  0E03               	movlw	3
 36260   00AA50  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36261   00AA52  0E00               	movlw	0
 36262   00AA54  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36263   00AA56  C0C8  F0A7         	movff	_mode_state,writeNVM@value
 36264   00AA5A  0E00               	movlw	0
 36265   00AA5C  EC52  F05B         	call	_writeNVM
 36266                           
 36267                           ;../../VLCBlib_PIC/mns.c: 283:     last_mode_flags = mode_flags = 0;
 36268   00AA60  0E00               	movlw	0
 36269   00AA62  0101               	movlb	1	; () banked
 36270   00AA64  6F76               	movwf	_mode_flags& (0+255),b
 36271   00AA66  C176  F046         	movff	_mode_flags,_last_mode_flags
 36272                           
 36273                           ;../../VLCBlib_PIC/mns.c: 284:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 36274   00AA6A  0EF9               	movlw	249
 36275   00AA6C  0100               	movlb	0	; () banked
 36276   00AA6E  6FA4               	movwf	writeNVM@index& (0+255),b
 36277   00AA70  0E03               	movlw	3
 36278   00AA72  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36279   00AA74  0E00               	movlw	0
 36280   00AA76  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36281   00AA78  C176  F0A7         	movff	_mode_flags,writeNVM@value
 36282   00AA7C  0E00               	movlw	0
 36283   00AA7E  EC52  F05B         	call	_writeNVM
 36284   00AA82  0012               	return		;funcret
 36285   00AA84                     __end_of_mnsFactoryReset:
 36286                           	callstack 0
 36287                           
 36288 ;; *************** function _teachFactoryReset *****************
 36289 ;; Defined at:
 36290 ;;		line 352 in file "../../VLCBlib_PIC/event_teach_large.c"
 36291 ;; Parameters:    Size  Location     Type
 36292 ;;		None
 36293 ;; Auto vars:     Size  Location     Type
 36294 ;;		None
 36295 ;; Return value:  Size  Location     Type
 36296 ;;                  1    wreg      void 
 36297 ;; Registers used:
 36298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36299 ;; Tracked objects:
 36300 ;;		On entry : 0/0
 36301 ;;		On exit  : 0/0
 36302 ;;		Unchanged: 0/0
 36303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36308 ;;Total ram usage:        0 bytes
 36309 ;; Hardware stack levels used: 1
 36310 ;; Hardware stack levels required when called: 19
 36311 ;; This function calls:
 36312 ;;		_clearAllEvents
 36313 ;; This function is called by:
 36314 ;;		_factoryReset
 36315 ;; This function uses a non-reentrant model
 36316 ;;
 36317                           
 36318                           	psect	text148
 36319   00C3CE                     __ptext148:
 36320                           	callstack 0
 36321   00C3CE                     _teachFactoryReset:
 36322                           	callstack 8
 36323                           
 36324                           ;../../VLCBlib_PIC/event_teach_large.c: 353:     clearAllEvents();
 36325                           
 36326                           ;incstack = 0
 36327   00C3CE  EC85  F05A         	call	_clearAllEvents	;wreg free
 36328   00C3D2  0012               	return		;funcret
 36329   00C3D4                     __end_of_teachFactoryReset:
 36330                           	callstack 0
 36331                           
 36332 ;; *************** function _clearAllEvents *****************
 36333 ;; Defined at:
 36334 ;;		line 557 in file "../../VLCBlib_PIC/event_teach_large.c"
 36335 ;; Parameters:    Size  Location     Type
 36336 ;;		None
 36337 ;; Auto vars:     Size  Location     Type
 36338 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 36339 ;; Return value:  Size  Location     Type
 36340 ;;                  1    wreg      void 
 36341 ;; Registers used:
 36342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36343 ;; Tracked objects:
 36344 ;;		On entry : 0/0
 36345 ;;		On exit  : 0/0
 36346 ;;		Unchanged: 0/0
 36347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36349 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36350 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36351 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36352 ;;Total ram usage:        5 bytes
 36353 ;; Hardware stack levels used: 1
 36354 ;; Hardware stack levels required when called: 18
 36355 ;; This function calls:
 36356 ;;		_flushFlashBlock
 36357 ;;		_rebuildHashtable
 36358 ;;		_writeNVM
 36359 ;; This function is called by:
 36360 ;;		_teachFactoryReset
 36361 ;;		_doNnclr
 36362 ;; This function uses a non-reentrant model
 36363 ;;
 36364                           
 36365                           	psect	text149
 36366   00B50A                     __ptext149:
 36367                           	callstack 0
 36368   00B50A                     _clearAllEvents:
 36369                           	callstack 9
 36370                           
 36371                           ;../../VLCBlib_PIC/event_teach_large.c: 558:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 559:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 36372                           
 36373                           ;incstack = 0
 36374   00B50A  0E00               	movlw	0
 36375   00B50C  0101               	movlb	1	; () banked
 36376   00B50E  6FC5               	movwf	clearAllEvents@tableIndex& (0+255),b
 36377   00B510                     l19883:
 36378                           
 36379                           ; BSR set to: 1
 36380                           ;../../VLCBlib_PIC/event_teach_large.c: 561:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex + 0, 0xff);
 36381   00B510  51C5               	movf	clearAllEvents@tableIndex& (0+255),w,b
 36382   00B512  6FC1               	movwf	??_clearAllEvents& (0+255),b
 36383   00B514  6BC2               	clrf	(??_clearAllEvents+1)& (0+255),b
 36384   00B516  3BC1               	swapf	??_clearAllEvents& (0+255),f,b
 36385   00B518  3BC2               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 36386   00B51A  0EF0               	movlw	240
 36387   00B51C  17C2               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 36388   00B51E  51C1               	movf	??_clearAllEvents& (0+255),w,b
 36389   00B520  0B0F               	andlw	15
 36390   00B522  13C2               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 36391   00B524  0EF0               	movlw	240
 36392   00B526  17C1               	andwf	??_clearAllEvents& (0+255),f,b
 36393   00B528  0E80               	movlw	128
 36394   00B52A  25C1               	addwf	??_clearAllEvents& (0+255),w,b
 36395   00B52C  6FC3               	movwf	(??_clearAllEvents+2)& (0+255),b
 36396   00B52E  0EEF               	movlw	239
 36397   00B530  21C2               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 36398   00B532  6FC4               	movwf	(??_clearAllEvents+3)& (0+255),b
 36399   00B534  C1C3  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 36400   00B538  C1C4  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 36401   00B53C  0100               	movlb	0	; () banked
 36402   00B53E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36403   00B540  0EFF               	movlw	255
 36404   00B542  6FA7               	movwf	writeNVM@value& (0+255),b
 36405   00B544  0E01               	movlw	1
 36406   00B546  EC52  F05B         	call	_writeNVM
 36407                           
 36408                           ;../../VLCBlib_PIC/event_teach_large.c: 562:     }
 36409   00B54A  0101               	movlb	1	; () banked
 36410   00B54C  2BC5               	incf	clearAllEvents@tableIndex& (0+255),f,b
 36411                           
 36412                           ; BSR set to: 1
 36413   00B54E  29C5               	incf	clearAllEvents@tableIndex& (0+255),w,b
 36414   00B550  A4D8               	btfss	status,2,c
 36415   00B552  D7DE               	goto	l19883
 36416                           
 36417                           ; BSR set to: 1
 36418                           ;../../VLCBlib_PIC/event_teach_large.c: 563:     flushFlashBlock();
 36419   00B554  EC8D  F052         	call	_flushFlashBlock	;wreg free
 36420                           
 36421                           ;../../VLCBlib_PIC/event_teach_large.c: 565:     rebuildHashtable();
 36422   00B558  EC40  F03E         	call	_rebuildHashtable	;wreg free
 36423   00B55C  0012               	return		;funcret
 36424   00B55E                     __end_of_clearAllEvents:
 36425                           	callstack 0
 36426                           
 36427 ;; *************** function _APP_nvDefault *****************
 36428 ;; Defined at:
 36429 ;;		line 73 in file "../universalNv.c"
 36430 ;; Parameters:    Size  Location     Type
 36431 ;;  index           1    wreg     unsigned char 
 36432 ;; Auto vars:     Size  Location     Type
 36433 ;;  index           1   67[BANK0 ] unsigned char 
 36434 ;; Return value:  Size  Location     Type
 36435 ;;                  1    wreg      unsigned char 
 36436 ;; Registers used:
 36437 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36438 ;; Tracked objects:
 36439 ;;		On entry : 0/0
 36440 ;;		On exit  : 0/0
 36441 ;;		Unchanged: 0/0
 36442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36446 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36447 ;;Total ram usage:        5 bytes
 36448 ;; Hardware stack levels used: 1
 36449 ;; Hardware stack levels required when called: 13
 36450 ;; This function calls:
 36451 ;;		___awdiv
 36452 ;;		___awmod
 36453 ;;		___wmul
 36454 ;; This function is called by:
 36455 ;;		_nvFactoryReset
 36456 ;; This function uses a non-reentrant model
 36457 ;;
 36458                           
 36459                           	psect	text150
 36460   008B7E                     __ptext150:
 36461                           	callstack 0
 36462   008B7E                     _APP_nvDefault:
 36463                           	callstack 13
 36464                           
 36465                           ;incstack = 0
 36466                           ;APP_nvDefault@index stored from wreg
 36467   008B7E  0100               	movlb	0	; () banked
 36468   008B80  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 36469                           
 36470                           ;../universalNv.c: 74:     if (index < 16) {
 36471   008B82  0E10               	movlw	16
 36472   008B84  0100               	movlb	0	; () banked
 36473   008B86  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 36474   008B88  D02A               	goto	l19731
 36475   008B8A  D00C               	goto	l19729
 36476   008B8C                     l19695:
 36477                           
 36478                           ; BSR set to: 0
 36479                           ;../universalNv.c: 78:                 return 0;
 36480   008B8C  0E00               	movlw	0
 36481   008B8E  0012               	return	
 36482   008B90                     l19703:
 36483                           
 36484                           ; BSR set to: 0
 36485                           ;../universalNv.c: 82:                 return 234;
 36486   008B90  0EEA               	movlw	234
 36487   008B92  0012               	return	
 36488   008B94                     l19707:
 36489                           
 36490                           ; BSR set to: 0
 36491                           ;../universalNv.c: 84:                 return 0x33;
 36492   008B94  0E33               	movlw	51
 36493   008B96  0012               	return	
 36494   008B98                     l19711:
 36495                           
 36496                           ; BSR set to: 0
 36497                           ;../universalNv.c: 86:                 return 2;
 36498   008B98  0E02               	movlw	2
 36499   008B9A  0012               	return	
 36500   008B9C                     l19715:
 36501                           
 36502                           ; BSR set to: 0
 36503                           ;../universalNv.c: 90:                 return 0xFF;
 36504   008B9C  0EFF               	movlw	255
 36505   008B9E  0012               	return	
 36506   008BA0                     l19719:
 36507                           
 36508                           ; BSR set to: 0
 36509                           ;../universalNv.c: 92:                 return 20;
 36510   008BA0  0E14               	movlw	20
 36511   008BA2  0012               	return	
 36512   008BA4                     l19729:
 36513                           
 36514                           ; BSR set to: 0
 36515   008BA4  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 36516                           
 36517                           ; Switch size 1, requested type "simple"
 36518                           ; Number of cases is 9, Range of values is 1 to 9
 36519                           ; switch strategies available:
 36520                           ; Name         Instructions Cycles
 36521                           ; simple_byte           28    15 (average)
 36522                           ;	Chosen strategy is simple_byte
 36523   008BA6  0A01               	xorlw	1	; case 1
 36524   008BA8  B4D8               	btfsc	status,2,c
 36525   008BAA  D7F0               	goto	l19695
 36526   008BAC  0A03               	xorlw	3	; case 2
 36527   008BAE  B4D8               	btfsc	status,2,c
 36528   008BB0  D7ED               	goto	l19695
 36529   008BB2  0A01               	xorlw	1	; case 3
 36530   008BB4  B4D8               	btfsc	status,2,c
 36531   008BB6  D7EC               	goto	l19703
 36532   008BB8  0A07               	xorlw	7	; case 4
 36533   008BBA  B4D8               	btfsc	status,2,c
 36534   008BBC  D7EB               	goto	l19707
 36535   008BBE  0A01               	xorlw	1	; case 5
 36536   008BC0  B4D8               	btfsc	status,2,c
 36537   008BC2  D7EA               	goto	l19711
 36538   008BC4  0A03               	xorlw	3	; case 6
 36539   008BC6  B4D8               	btfsc	status,2,c
 36540   008BC8  D7E9               	goto	l19715
 36541   008BCA  0A01               	xorlw	1	; case 7
 36542   008BCC  B4D8               	btfsc	status,2,c
 36543   008BCE  D7E6               	goto	l19715
 36544   008BD0  0A0F               	xorlw	15	; case 8
 36545   008BD2  B4D8               	btfsc	status,2,c
 36546   008BD4  D7E3               	goto	l19715
 36547   008BD6  0A01               	xorlw	1	; case 9
 36548   008BD8  B4D8               	btfsc	status,2,c
 36549   008BDA  D7E2               	goto	l19719
 36550   008BDC  D7D7               	goto	l19695
 36551   008BDE                     l19731:
 36552                           
 36553                           ; BSR set to: 0
 36554                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 36555   008BDE  0EF0               	movlw	240
 36556   008BE0  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36557   008BE2  6F97               	movwf	___awdiv@dividend& (0+255),b
 36558   008BE4  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36559   008BE6  0EFF               	movlw	255
 36560   008BE8  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 36561   008BEA  0E00               	movlw	0
 36562   008BEC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36563   008BEE  0E07               	movlw	7
 36564   008BF0  6F99               	movwf	___awdiv@divisor& (0+255),b
 36565   008BF2  EC4A  F052         	call	___awdiv	;wreg free
 36566   008BF6  0E00               	movlw	0
 36567   008BF8  0100               	movlb	0	; () banked
 36568   008BFA  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 36569   008BFC  0E00               	movlw	0
 36570   008BFE  6F91               	movwf	___wmul@multiplier& (0+255),b
 36571   008C00  0E00               	movlw	0
 36572   008C02  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36573   008C04  0E07               	movlw	7
 36574   008C06  6F93               	movwf	___wmul@multiplicand& (0+255),b
 36575   008C08  EC0E  F060         	call	___wmul	;wreg free
 36576   008C0C  0E8C               	movlw	low _channelDefaultNVs
 36577   008C0E  0100               	movlb	0	; () banked
 36578   008C10  2591               	addwf	?___wmul& (0+255),w,b
 36579   008C12  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 36580   008C14  0EEE               	movlw	high _channelDefaultNVs
 36581   008C16  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 36582   008C18  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 36583   008C1A  0EF0               	movlw	240
 36584   008C1C  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36585   008C1E  6F8D               	movwf	___awmod@dividend& (0+255),b
 36586   008C20  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 36587   008C22  0EFF               	movlw	255
 36588   008C24  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 36589   008C26  0E00               	movlw	0
 36590   008C28  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 36591   008C2A  0E07               	movlw	7
 36592   008C2C  6F8F               	movwf	___awmod@divisor& (0+255),b
 36593   008C2E  EC26  F056         	call	___awmod	;wreg free
 36594   008C32  0100               	movlb	0	; () banked
 36595   008C34  518D               	movf	?___awmod& (0+255),w,b
 36596   008C36  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 36597   008C38  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 36598   008C3A  518E               	movf	(?___awmod+1)& (0+255),w,b
 36599   008C3C  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 36600   008C3E  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 36601   008C40  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 36602   008C44  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 36603   008C48                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36604   008C48  6AF8               	clrf	tblptru,c
 36605   008C4A                     	endif
 36606   008C4A                     	if	0	;tblptru may be non-zero
 36607   008C4A                     	endif
 36608   008C4A  0008               	tblrd		*
 36609   008C4C  50F5               	movf	tablat,w,c
 36610                           
 36611                           ; BSR set to: 0
 36612   008C4E  0012               	return		;funcret
 36613   008C50                     __end_of_APP_nvDefault:
 36614                           	callstack 0
 36615                           
 36616 ;; *************** function ___wmul *****************
 36617 ;; Defined at:
 36618 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 36619 ;; Parameters:    Size  Location     Type
 36620 ;;  multiplier      2   49[BANK0 ] unsigned int 
 36621 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 36622 ;; Auto vars:     Size  Location     Type
 36623 ;;  product         2   53[BANK0 ] unsigned int 
 36624 ;; Return value:  Size  Location     Type
 36625 ;;                  2   49[BANK0 ] unsigned int 
 36626 ;; Registers used:
 36627 ;;		wreg, status,2, status,0, prodl, prodh
 36628 ;; Tracked objects:
 36629 ;;		On entry : 0/0
 36630 ;;		On exit  : 0/0
 36631 ;;		Unchanged: 0/0
 36632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36633 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36634 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36636 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36637 ;;Total ram usage:        6 bytes
 36638 ;; Hardware stack levels used: 1
 36639 ;; Hardware stack levels required when called: 12
 36640 ;; This function calls:
 36641 ;;		Nothing
 36642 ;; This function is called by:
 36643 ;;		_APP_nvDefault
 36644 ;;		_bounceDown
 36645 ;; This function uses a non-reentrant model
 36646 ;;
 36647                           
 36648                           	psect	text151
 36649   00C01C                     __ptext151:
 36650                           	callstack 0
 36651   00C01C                     ___wmul:
 36652                           	callstack 13
 36653                           
 36654                           ; BSR set to: 0
 36655                           ;incstack = 0
 36656   00C01C  0100               	movlb	0	; () banked
 36657   00C01E  5191               	movf	___wmul@multiplier& (0+255),w,b
 36658   00C020  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36659   00C022  CFF3 F095          	movff	prodl,___wmul@product
 36660   00C026  CFF4 F096          	movff	prodh,___wmul@product+1
 36661   00C02A  5191               	movf	___wmul@multiplier& (0+255),w,b
 36662   00C02C  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 36663   00C02E  50F3               	movf	243,w,c
 36664   00C030  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36665   00C032  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 36666   00C034  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36667   00C036  50F3               	movf	243,w,c
 36668   00C038  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36669                           
 36670                           ; BSR set to: 0
 36671   00C03A  C095  F091         	movff	___wmul@product,?___wmul
 36672   00C03E  C096  F092         	movff	___wmul@product+1,?___wmul+1
 36673                           
 36674                           ; BSR set to: 0
 36675   00C042  0012               	return		;funcret
 36676   00C044                     __end_of___wmul:
 36677                           	callstack 0
 36678                           
 36679 ;; *************** function ___awmod *****************
 36680 ;; Defined at:
 36681 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 36682 ;; Parameters:    Size  Location     Type
 36683 ;;  dividend        2   45[BANK0 ] int 
 36684 ;;  divisor         2   47[BANK0 ] int 
 36685 ;; Auto vars:     Size  Location     Type
 36686 ;;  sign            1   50[BANK0 ] unsigned char 
 36687 ;;  counter         1   49[BANK0 ] unsigned char 
 36688 ;; Return value:  Size  Location     Type
 36689 ;;                  2   45[BANK0 ] int 
 36690 ;; Registers used:
 36691 ;;		wreg, status,2, status,0
 36692 ;; Tracked objects:
 36693 ;;		On entry : 0/0
 36694 ;;		On exit  : 0/0
 36695 ;;		Unchanged: 0/0
 36696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36697 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36698 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36700 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36701 ;;Total ram usage:        6 bytes
 36702 ;; Hardware stack levels used: 1
 36703 ;; Hardware stack levels required when called: 12
 36704 ;; This function calls:
 36705 ;;		Nothing
 36706 ;; This function is called by:
 36707 ;;		_consumer2QProcessMessage
 36708 ;;		_processActions
 36709 ;;		_APP_nvDefault
 36710 ;;		_APP_nvValueChanged
 36711 ;;		_APP_nvValidate
 36712 ;; This function uses a non-reentrant model
 36713 ;;
 36714                           
 36715                           	psect	text152
 36716   00AC4C                     __ptext152:
 36717                           	callstack 0
 36718   00AC4C                     ___awmod:
 36719                           	callstack 14
 36720                           
 36721                           ; BSR set to: 0
 36722                           ;incstack = 0
 36723   00AC4C  0E00               	movlw	0
 36724   00AC4E  0100               	movlb	0	; () banked
 36725   00AC50  6F92               	movwf	___awmod@sign& (0+255),b
 36726                           
 36727                           ; BSR set to: 0
 36728   00AC52  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 36729   00AC54  D006               	goto	l19597
 36730                           
 36731                           ; BSR set to: 0
 36732   00AC56  6D8D               	negf	___awmod@dividend& (0+255),b
 36733   00AC58  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36734   00AC5A  B0D8               	btfsc	status,0,c
 36735   00AC5C  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36736                           
 36737                           ; BSR set to: 0
 36738   00AC5E  0E01               	movlw	1
 36739   00AC60  6F92               	movwf	___awmod@sign& (0+255),b
 36740   00AC62                     l19597:
 36741                           
 36742                           ; BSR set to: 0
 36743   00AC62  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36744   00AC64  D004               	goto	l19601
 36745                           
 36746                           ; BSR set to: 0
 36747   00AC66  6D8F               	negf	___awmod@divisor& (0+255),b
 36748   00AC68  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 36749   00AC6A  B0D8               	btfsc	status,0,c
 36750   00AC6C  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 36751   00AC6E                     l19601:
 36752                           
 36753                           ; BSR set to: 0
 36754   00AC6E  518F               	movf	___awmod@divisor& (0+255),w,b
 36755   00AC70  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 36756   00AC72  B4D8               	btfsc	status,2,c
 36757   00AC74  D018               	goto	l19617
 36758                           
 36759                           ; BSR set to: 0
 36760   00AC76  0E01               	movlw	1
 36761   00AC78  6F91               	movwf	___awmod@counter& (0+255),b
 36762   00AC7A  D004               	goto	l19607
 36763   00AC7C                     l19605:
 36764                           
 36765                           ; BSR set to: 0
 36766   00AC7C  90D8               	bcf	status,0,c
 36767   00AC7E  378F               	rlcf	___awmod@divisor& (0+255),f,b
 36768   00AC80  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 36769   00AC82  2B91               	incf	___awmod@counter& (0+255),f,b
 36770   00AC84                     l19607:
 36771                           
 36772                           ; BSR set to: 0
 36773   00AC84  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36774   00AC86  D7FA               	goto	l19605
 36775   00AC88                     u19770:
 36776                           
 36777                           ; BSR set to: 0
 36778   00AC88  518F               	movf	___awmod@divisor& (0+255),w,b
 36779   00AC8A  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 36780   00AC8C  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36781   00AC8E  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 36782   00AC90  A0D8               	btfss	status,0,c
 36783   00AC92  D004               	goto	l19613
 36784                           
 36785                           ; BSR set to: 0
 36786   00AC94  518F               	movf	___awmod@divisor& (0+255),w,b
 36787   00AC96  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 36788   00AC98  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36789   00AC9A  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 36790   00AC9C                     l19613:
 36791                           
 36792                           ; BSR set to: 0
 36793   00AC9C  90D8               	bcf	status,0,c
 36794   00AC9E  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 36795   00ACA0  338F               	rrcf	___awmod@divisor& (0+255),f,b
 36796                           
 36797                           ; BSR set to: 0
 36798   00ACA2  2F91               	decfsz	___awmod@counter& (0+255),f,b
 36799   00ACA4  D7F1               	goto	u19770
 36800   00ACA6                     l19617:
 36801                           
 36802                           ; BSR set to: 0
 36803   00ACA6  5192               	movf	___awmod@sign& (0+255),w,b
 36804   00ACA8  B4D8               	btfsc	status,2,c
 36805   00ACAA  D004               	goto	l19621
 36806                           
 36807                           ; BSR set to: 0
 36808   00ACAC  6D8D               	negf	___awmod@dividend& (0+255),b
 36809   00ACAE  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36810   00ACB0  B0D8               	btfsc	status,0,c
 36811   00ACB2  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36812   00ACB4                     l19621:
 36813                           
 36814                           ; BSR set to: 0
 36815   00ACB4  C08D  F08D         	movff	___awmod@dividend,?___awmod
 36816   00ACB8  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 36817                           
 36818                           ; BSR set to: 0
 36819   00ACBC  0012               	return		;funcret
 36820   00ACBE                     __end_of___awmod:
 36821                           	callstack 0
 36822                           
 36823 ;; *************** function ___awdiv *****************
 36824 ;; Defined at:
 36825 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 36826 ;; Parameters:    Size  Location     Type
 36827 ;;  dividend        2   55[BANK0 ] int 
 36828 ;;  divisor         2   57[BANK0 ] int 
 36829 ;; Auto vars:     Size  Location     Type
 36830 ;;  quotient        2   61[BANK0 ] int 
 36831 ;;  sign            1   60[BANK0 ] unsigned char 
 36832 ;;  counter         1   59[BANK0 ] unsigned char 
 36833 ;; Return value:  Size  Location     Type
 36834 ;;                  2   55[BANK0 ] int 
 36835 ;; Registers used:
 36836 ;;		wreg, status,2, status,0
 36837 ;; Tracked objects:
 36838 ;;		On entry : 0/0
 36839 ;;		On exit  : 0/0
 36840 ;;		Unchanged: 0/0
 36841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36842 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36843 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36845 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36846 ;;Total ram usage:        8 bytes
 36847 ;; Hardware stack levels used: 1
 36848 ;; Hardware stack levels required when called: 12
 36849 ;; This function calls:
 36850 ;;		Nothing
 36851 ;; This function is called by:
 36852 ;;		_APP_GetEventState
 36853 ;;		_consumer2QProcessMessage
 36854 ;;		_processActions
 36855 ;;		_sodTRCallback
 36856 ;;		_APP_nvDefault
 36857 ;;		_APP_nvValueChanged
 36858 ;;		_APP_nvValidate
 36859 ;;		_pollServos
 36860 ;;		_bounceDown
 36861 ;;		_bounceUp
 36862 ;;		_leds_poll
 36863 ;; This function uses a non-reentrant model
 36864 ;;
 36865                           
 36866                           	psect	text153
 36867   00A494                     __ptext153:
 36868                           	callstack 0
 36869   00A494                     ___awdiv:
 36870                           	callstack 15
 36871                           
 36872                           ; BSR set to: 0
 36873                           ;incstack = 0
 36874   00A494  0E00               	movlw	0
 36875   00A496  0100               	movlb	0	; () banked
 36876   00A498  6F9C               	movwf	___awdiv@sign& (0+255),b
 36877                           
 36878                           ; BSR set to: 0
 36879   00A49A  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36880   00A49C  D006               	goto	l19553
 36881                           
 36882                           ; BSR set to: 0
 36883   00A49E  6D99               	negf	___awdiv@divisor& (0+255),b
 36884   00A4A0  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 36885   00A4A2  B0D8               	btfsc	status,0,c
 36886   00A4A4  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 36887                           
 36888                           ; BSR set to: 0
 36889   00A4A6  0E01               	movlw	1
 36890   00A4A8  6F9C               	movwf	___awdiv@sign& (0+255),b
 36891   00A4AA                     l19553:
 36892                           
 36893                           ; BSR set to: 0
 36894   00A4AA  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 36895   00A4AC  D006               	goto	l19559
 36896                           
 36897                           ; BSR set to: 0
 36898   00A4AE  6D97               	negf	___awdiv@dividend& (0+255),b
 36899   00A4B0  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 36900   00A4B2  B0D8               	btfsc	status,0,c
 36901   00A4B4  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 36902                           
 36903                           ; BSR set to: 0
 36904   00A4B6  0E01               	movlw	1
 36905   00A4B8  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 36906   00A4BA                     l19559:
 36907                           
 36908                           ; BSR set to: 0
 36909   00A4BA  0E00               	movlw	0
 36910   00A4BC  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 36911   00A4BE  0E00               	movlw	0
 36912   00A4C0  6F9D               	movwf	___awdiv@quotient& (0+255),b
 36913                           
 36914                           ; BSR set to: 0
 36915   00A4C2  5199               	movf	___awdiv@divisor& (0+255),w,b
 36916   00A4C4  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 36917   00A4C6  B4D8               	btfsc	status,2,c
 36918   00A4C8  D01C               	goto	l19581
 36919                           
 36920                           ; BSR set to: 0
 36921   00A4CA  0E01               	movlw	1
 36922   00A4CC  6F9B               	movwf	___awdiv@counter& (0+255),b
 36923   00A4CE  D004               	goto	l19567
 36924   00A4D0                     l19565:
 36925                           
 36926                           ; BSR set to: 0
 36927   00A4D0  90D8               	bcf	status,0,c
 36928   00A4D2  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 36929   00A4D4  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 36930   00A4D6  2B9B               	incf	___awdiv@counter& (0+255),f,b
 36931   00A4D8                     l19567:
 36932                           
 36933                           ; BSR set to: 0
 36934   00A4D8  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36935   00A4DA  D7FA               	goto	l19565
 36936   00A4DC                     u19710:
 36937                           
 36938                           ; BSR set to: 0
 36939   00A4DC  90D8               	bcf	status,0,c
 36940   00A4DE  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 36941   00A4E0  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 36942                           
 36943                           ; BSR set to: 0
 36944   00A4E2  5199               	movf	___awdiv@divisor& (0+255),w,b
 36945   00A4E4  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 36946   00A4E6  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36947   00A4E8  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 36948   00A4EA  A0D8               	btfss	status,0,c
 36949   00A4EC  D005               	goto	l19577
 36950                           
 36951                           ; BSR set to: 0
 36952   00A4EE  5199               	movf	___awdiv@divisor& (0+255),w,b
 36953   00A4F0  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 36954   00A4F2  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36955   00A4F4  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 36956                           
 36957                           ; BSR set to: 0
 36958   00A4F6  819D               	bsf	___awdiv@quotient& (0+255),0,b
 36959   00A4F8                     l19577:
 36960                           
 36961                           ; BSR set to: 0
 36962   00A4F8  90D8               	bcf	status,0,c
 36963   00A4FA  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 36964   00A4FC  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 36965                           
 36966                           ; BSR set to: 0
 36967   00A4FE  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 36968   00A500  D7ED               	goto	u19710
 36969   00A502                     l19581:
 36970                           
 36971                           ; BSR set to: 0
 36972   00A502  519C               	movf	___awdiv@sign& (0+255),w,b
 36973   00A504  B4D8               	btfsc	status,2,c
 36974   00A506  D004               	goto	l19585
 36975                           
 36976                           ; BSR set to: 0
 36977   00A508  6D9D               	negf	___awdiv@quotient& (0+255),b
 36978   00A50A  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 36979   00A50C  B0D8               	btfsc	status,0,c
 36980   00A50E  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 36981   00A510                     l19585:
 36982                           
 36983                           ; BSR set to: 0
 36984   00A510  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 36985   00A514  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 36986                           
 36987                           ; BSR set to: 0
 36988   00A518  0012               	return		;funcret
 36989   00A51A                     __end_of___awdiv:
 36990                           	callstack 0
 36991                           
 36992 ;; *************** function _APP_factoryReset *****************
 36993 ;; Defined at:
 36994 ;;		line 214 in file "../main.c"
 36995 ;; Parameters:    Size  Location     Type
 36996 ;;		None
 36997 ;; Auto vars:     Size  Location     Type
 36998 ;;  io              1   51[BANK1 ] unsigned char 
 36999 ;; Return value:  Size  Location     Type
 37000 ;;                  1    wreg      void 
 37001 ;; Registers used:
 37002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37003 ;; Tracked objects:
 37004 ;;		On entry : 0/0
 37005 ;;		On exit  : 0/0
 37006 ;;		Unchanged: 0/0
 37007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37009 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37011 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37012 ;;Total ram usage:        1 bytes
 37013 ;; Hardware stack levels used: 1
 37014 ;; Hardware stack levels required when called: 25
 37015 ;; This function calls:
 37016 ;;		_factoryResetGlobalEvents
 37017 ;;		_flushFlashBlock
 37018 ;;		_setType
 37019 ;; This function is called by:
 37020 ;;		_factoryReset
 37021 ;; This function uses a non-reentrant model
 37022 ;;
 37023                           
 37024                           	psect	text154
 37025   00C0FC                     __ptext154:
 37026                           	callstack 0
 37027   00C0FC                     _APP_factoryReset:
 37028                           	callstack 2
 37029                           
 37030                           ;../main.c: 215:     uint8_t io;;../main.c: 217:     factoryResetGlobalEvents();
 37031                           
 37032                           ; BSR set to: 0
 37033                           ;incstack = 0
 37034   00C0FC  ECEE  F061         	call	_factoryResetGlobalEvents	;wreg free
 37035                           
 37036                           ;../main.c: 219:     for (io=0; io<16; io++) {
 37037   00C100  0E00               	movlw	0
 37038   00C102  0101               	movlb	1	; () banked
 37039   00C104  6FEB               	movwf	APP_factoryReset@io& (0+255),b
 37040   00C106                     l19983:
 37041                           
 37042                           ; BSR set to: 1
 37043                           
 37044                           ; BSR set to: 1
 37045                           
 37046                           ; BSR set to: 1
 37047   00C106  0E00               	movlw	0
 37048   00C108  6FE8               	movwf	setType@type& (0+255),b
 37049   00C10A  51EB               	movf	APP_factoryReset@io& (0+255),w,b
 37050   00C10C  EC92  F058         	call	_setType
 37051                           
 37052                           ;../main.c: 221:     }
 37053   00C110  0101               	movlb	1	; () banked
 37054   00C112  2BEB               	incf	APP_factoryReset@io& (0+255),f,b
 37055                           
 37056                           ; BSR set to: 1
 37057   00C114  0E0F               	movlw	15
 37058   00C116  65EB               	cpfsgt	APP_factoryReset@io& (0+255),b
 37059   00C118  D7F6               	goto	l19983
 37060                           
 37061                           ; BSR set to: 1
 37062                           ;../main.c: 222:     flushFlashBlock();
 37063   00C11A  EC8D  F052         	call	_flushFlashBlock	;wreg free
 37064   00C11E  0012               	return		;funcret
 37065   00C120                     __end_of_APP_factoryReset:
 37066                           	callstack 0
 37067                           
 37068 ;; *************** function _setType *****************
 37069 ;; Defined at:
 37070 ;;		line 524 in file "../main.c"
 37071 ;; Parameters:    Size  Location     Type
 37072 ;;  io              1    wreg     unsigned char 
 37073 ;;  type            1   48[BANK1 ] unsigned char 
 37074 ;; Auto vars:     Size  Location     Type
 37075 ;;  io              1   50[BANK1 ] unsigned char 
 37076 ;;  index           1   49[BANK1 ] unsigned char 
 37077 ;; Return value:  Size  Location     Type
 37078 ;;                  1    wreg      void 
 37079 ;; Registers used:
 37080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37081 ;; Tracked objects:
 37082 ;;		On entry : 0/0
 37083 ;;		On exit  : 0/0
 37084 ;;		Unchanged: 0/0
 37085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37086 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37087 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37089 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37090 ;;Total ram usage:        3 bytes
 37091 ;; Hardware stack levels used: 1
 37092 ;; Hardware stack levels required when called: 24
 37093 ;; This function calls:
 37094 ;;		_configIO
 37095 ;;		_defaultEvents
 37096 ;;		_defaultNVs
 37097 ;;		_saveNV
 37098 ;; This function is called by:
 37099 ;;		_APP_factoryReset
 37100 ;;		_APP_nvValueChanged
 37101 ;; This function uses a non-reentrant model
 37102 ;;
 37103                           
 37104                           	psect	text155
 37105   00B124                     __ptext155:
 37106                           	callstack 0
 37107   00B124                     _setType:
 37108                           	callstack 2
 37109                           
 37110                           ;incstack = 0
 37111                           ;setType@io stored from wreg
 37112   00B124  0101               	movlb	1	; () banked
 37113   00B126  6FEA               	movwf	setType@io& (0+255),b
 37114                           
 37115                           ;../main.c: 525:     uint8_t index;;../main.c: 527:     index = (16 + 7*(io) + 0);
 37116   00B128  0101               	movlb	1	; () banked
 37117   00B12A  51EA               	movf	setType@io& (0+255),w,b
 37118   00B12C  0D07               	mullw	7
 37119   00B12E  50F3               	movf	243,w,c
 37120   00B130  0F10               	addlw	16
 37121   00B132  6FE9               	movwf	setType@index& (0+255),b
 37122                           
 37123                           ; BSR set to: 1
 37124                           ;../main.c: 528:     saveNV((uint8_t)index, type);
 37125   00B134  C1E8  F1BA         	movff	setType@type,saveNV@value
 37126   00B138  51E9               	movf	setType@index& (0+255),w,b
 37127   00B13A  EC5E  F05D         	call	_saveNV
 37128                           
 37129                           ;../main.c: 531:     defaultNVs(io, type);
 37130   00B13E  C1E8  F1BE         	movff	setType@type,defaultNVs@type
 37131   00B142  0101               	movlb	1	; () banked
 37132   00B144  51EA               	movf	setType@io& (0+255),w,b
 37133   00B146  EC03  F05B         	call	_defaultNVs
 37134                           
 37135                           ;../main.c: 534:     configIO(io);
 37136   00B14A  0101               	movlb	1	; () banked
 37137   00B14C  51EA               	movf	setType@io& (0+255),w,b
 37138   00B14E  EC04  F026         	call	_configIO
 37139                           
 37140                           ;../main.c: 536:     if ((type == 2) || (type== 3) || (type == 4)) {
 37141   00B152  0E02               	movlw	2
 37142   00B154  0101               	movlb	1	; () banked
 37143   00B156  19E8               	xorwf	setType@type& (0+255),w,b
 37144   00B158  B4D8               	btfsc	status,2,c
 37145   00B15A  D008               	goto	u19820
 37146                           
 37147                           ; BSR set to: 1
 37148   00B15C  0E03               	movlw	3
 37149   00B15E  19E8               	xorwf	setType@type& (0+255),w,b
 37150   00B160  B4D8               	btfsc	status,2,c
 37151   00B162  D004               	goto	u19820
 37152                           
 37153                           ; BSR set to: 1
 37154   00B164  0E04               	movlw	4
 37155   00B166  19E8               	xorwf	setType@type& (0+255),w,b
 37156   00B168  A4D8               	btfss	status,2,c
 37157   00B16A  D006               	goto	l19641
 37158   00B16C                     u19820:
 37159                           
 37160                           ; BSR set to: 1
 37161                           ;../main.c: 537:         currentPos[io] = 128;
 37162   00B16C  51EA               	movf	setType@io& (0+255),w,b
 37163   00B16E  0FA9               	addlw	low _currentPos
 37164   00B170  6ED9               	movwf	fsr2l,c
 37165   00B172  6ADA               	clrf	fsr2h,c
 37166   00B174  0E80               	movlw	128
 37167   00B176  6EDF               	movwf	indf2,c
 37168   00B178                     l19641:
 37169                           
 37170                           ; BSR set to: 1
 37171                           ;../main.c: 541:     defaultEvents(io, type);
 37172   00B178  C1E8  F1E4         	movff	setType@type,defaultEvents@type
 37173   00B17C  51EA               	movf	setType@io& (0+255),w,b
 37174   00B17E  EC59  F03A         	call	_defaultEvents
 37175   00B182  0012               	return		;funcret
 37176   00B184                     __end_of_setType:
 37177                           	callstack 0
 37178                           
 37179 ;; *************** function _defaultNVs *****************
 37180 ;; Defined at:
 37181 ;;		line 342 in file "../universalNv.c"
 37182 ;; Parameters:    Size  Location     Type
 37183 ;;  io              1    wreg     unsigned char 
 37184 ;;  type            1    6[BANK1 ] unsigned char 
 37185 ;; Auto vars:     Size  Location     Type
 37186 ;;  io              1    9[BANK1 ] unsigned char 
 37187 ;;  i               1   10[BANK1 ] unsigned char 
 37188 ;; Return value:  Size  Location     Type
 37189 ;;                  1    wreg      void 
 37190 ;; Registers used:
 37191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37192 ;; Tracked objects:
 37193 ;;		On entry : 0/0
 37194 ;;		On exit  : 0/0
 37195 ;;		Unchanged: 0/0
 37196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37197 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37198 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37199 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37200 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37201 ;;Total ram usage:        5 bytes
 37202 ;; Hardware stack levels used: 1
 37203 ;; Hardware stack levels required when called: 19
 37204 ;; This function calls:
 37205 ;;		_loadNvCache
 37206 ;;		_saveNV
 37207 ;; This function is called by:
 37208 ;;		_setType
 37209 ;; This function uses a non-reentrant model
 37210 ;;
 37211                           
 37212                           	psect	text156
 37213   00B606                     __ptext156:
 37214                           	callstack 0
 37215   00B606                     _defaultNVs:
 37216                           	callstack 6
 37217                           
 37218                           ;incstack = 0
 37219                           ;defaultNVs@io stored from wreg
 37220   00B606  0101               	movlb	1	; () banked
 37221   00B608  6FC1               	movwf	defaultNVs@io& (0+255),b
 37222                           
 37223                           ;../universalNv.c: 343:     uint8_t i;;../universalNv.c: 345:     for (i=1; i<7; i++) {
 37224   00B60A  0E01               	movlw	1
 37225   00B60C  0101               	movlb	1	; () banked
 37226   00B60E  6FC2               	movwf	defaultNVs@i& (0+255),b
 37227   00B610                     l19517:
 37228                           
 37229                           ; BSR set to: 1
 37230                           ;../universalNv.c: 346:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 37231   00B610  51BE               	movf	defaultNVs@type& (0+255),w,b
 37232   00B612  0D07               	mullw	7
 37233   00B614  0E8C               	movlw	low _channelDefaultNVs
 37234   00B616  24F3               	addwf	243,w,c
 37235   00B618  6FBF               	movwf	??_defaultNVs& (0+255),b
 37236   00B61A  0EEE               	movlw	high _channelDefaultNVs
 37237   00B61C  20F4               	addwfc	prodh,w,c
 37238   00B61E  6FC0               	movwf	(??_defaultNVs+1)& (0+255),b
 37239   00B620  51C2               	movf	defaultNVs@i& (0+255),w,b
 37240   00B622  27BF               	addwf	??_defaultNVs& (0+255),f,b
 37241   00B624  0E00               	movlw	0
 37242   00B626  23C0               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 37243   00B628  C1BF  FFF6         	movff	??_defaultNVs,tblptrl
 37244   00B62C  C1C0  FFF7         	movff	??_defaultNVs+1,tblptrh
 37245   00B630                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37246   00B630  6AF8               	clrf	tblptru,c
 37247   00B632                     	endif
 37248   00B632                     	if	0	;tblptru may be non-zero
 37249   00B632                     	endif
 37250   00B632  0008               	tblrd		*
 37251   00B634  CFF5 F1BA          	movff	tablat,saveNV@value
 37252   00B638  51C1               	movf	defaultNVs@io& (0+255),w,b
 37253   00B63A  0D07               	mullw	7
 37254   00B63C  50F3               	movf	243,w,c
 37255   00B63E  25C2               	addwf	defaultNVs@i& (0+255),w,b
 37256   00B640  0F10               	addlw	16
 37257   00B642  EC5E  F05D         	call	_saveNV
 37258                           
 37259                           ;../universalNv.c: 347:     }
 37260   00B646  0101               	movlb	1	; () banked
 37261   00B648  2BC2               	incf	defaultNVs@i& (0+255),f,b
 37262                           
 37263                           ; BSR set to: 1
 37264   00B64A  0E06               	movlw	6
 37265   00B64C  65C2               	cpfsgt	defaultNVs@i& (0+255),b
 37266   00B64E  D7E0               	goto	l19517
 37267                           
 37268                           ; BSR set to: 1
 37269                           ;../universalNv.c: 348:     loadNvCache();
 37270   00B650  EC0E  F05C         	call	_loadNvCache	;wreg free
 37271   00B654  0012               	return		;funcret
 37272   00B656                     __end_of_defaultNVs:
 37273                           	callstack 0
 37274                           
 37275 ;; *************** function _saveNV *****************
 37276 ;; Defined at:
 37277 ;;		line 198 in file "../../VLCBlib_PIC/nv.c"
 37278 ;; Parameters:    Size  Location     Type
 37279 ;;  index           1    wreg     unsigned char 
 37280 ;;  value           1    2[BANK1 ] unsigned char 
 37281 ;; Auto vars:     Size  Location     Type
 37282 ;;  index           1    5[BANK1 ] unsigned char 
 37283 ;; Return value:  Size  Location     Type
 37284 ;;                  1    wreg      void 
 37285 ;; Registers used:
 37286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37287 ;; Tracked objects:
 37288 ;;		On entry : 0/0
 37289 ;;		On exit  : 0/0
 37290 ;;		Unchanged: 0/0
 37291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37292 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37293 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37294 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37295 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37296 ;;Total ram usage:        4 bytes
 37297 ;; Hardware stack levels used: 1
 37298 ;; Hardware stack levels required when called: 18
 37299 ;; This function calls:
 37300 ;;		_writeNVM
 37301 ;; This function is called by:
 37302 ;;		_setType
 37303 ;;		_defaultNVs
 37304 ;; This function uses a non-reentrant model
 37305 ;;
 37306                           
 37307                           	psect	text157
 37308   00BABC                     __ptext157:
 37309                           	callstack 0
 37310   00BABC                     _saveNV:
 37311                           	callstack 7
 37312                           
 37313                           ;incstack = 0
 37314                           ;saveNV@index stored from wreg
 37315   00BABC  0101               	movlb	1	; () banked
 37316   00BABE  6FBD               	movwf	saveNV@index& (0+255),b
 37317                           
 37318                           ;../../VLCBlib_PIC/nv.c: 200:     nvCache[index] = value;
 37319   00BAC0  0E00               	movlw	low _nvCache
 37320   00BAC2  0101               	movlb	1	; () banked
 37321   00BAC4  25BD               	addwf	saveNV@index& (0+255),w,b
 37322   00BAC6  6ED9               	movwf	fsr2l,c
 37323   00BAC8  6ADA               	clrf	fsr2h,c
 37324   00BACA  0E04               	movlw	high _nvCache
 37325   00BACC  22DA               	addwfc	fsr2h,f,c
 37326   00BACE  C1BA  FFDF         	movff	saveNV@value,indf2
 37327                           
 37328                           ; BSR set to: 1
 37329                           ;../../VLCBlib_PIC/nv.c: 202:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 37330   00BAD2  0E80               	movlw	128
 37331   00BAD4  25BD               	addwf	saveNV@index& (0+255),w,b
 37332   00BAD6  6FBB               	movwf	??_saveNV& (0+255),b
 37333   00BAD8  6BBC               	clrf	(??_saveNV+1)& (0+255),b
 37334   00BADA  0EFF               	movlw	255
 37335   00BADC  23BC               	addwfc	(??_saveNV+1)& (0+255),f,b
 37336   00BADE  C1BB  F0A4         	movff	??_saveNV,writeNVM@index
 37337   00BAE2  C1BC  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 37338   00BAE6  0100               	movlb	0	; () banked
 37339   00BAE8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37340   00BAEA  C1BA  F0A7         	movff	saveNV@value,writeNVM@value
 37341   00BAEE  0E01               	movlw	1
 37342   00BAF0  EC52  F05B         	call	_writeNVM
 37343   00BAF4  0012               	return		;funcret
 37344   00BAF6                     __end_of_saveNV:
 37345                           	callstack 0
 37346                           
 37347 ;; *************** function _loadNvCache *****************
 37348 ;; Defined at:
 37349 ;;		line 161 in file "../../VLCBlib_PIC/nv.c"
 37350 ;; Parameters:    Size  Location     Type
 37351 ;;		None
 37352 ;; Auto vars:     Size  Location     Type
 37353 ;;  temp            2   57[BANK0 ] short 
 37354 ;;  i               1   59[BANK0 ] unsigned char 
 37355 ;; Return value:  Size  Location     Type
 37356 ;;                  1    wreg      void 
 37357 ;; Registers used:
 37358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37359 ;; Tracked objects:
 37360 ;;		On entry : 0/0
 37361 ;;		On exit  : 0/0
 37362 ;;		Unchanged: 0/0
 37363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37365 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37366 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37367 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37368 ;;Total ram usage:        5 bytes
 37369 ;; Hardware stack levels used: 1
 37370 ;; Hardware stack levels required when called: 14
 37371 ;; This function calls:
 37372 ;;		_readNVM
 37373 ;; This function is called by:
 37374 ;;		_defaultNVs
 37375 ;;		_nvPowerUp
 37376 ;; This function uses a non-reentrant model
 37377 ;;
 37378                           
 37379                           	psect	text158
 37380   00B81C                     __ptext158:
 37381                           	callstack 0
 37382   00B81C                     _loadNvCache:
 37383                           	callstack 14
 37384                           
 37385                           ;../../VLCBlib_PIC/nv.c: 162:     uint8_t i;;../../VLCBlib_PIC/nv.c: 163:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 165:     for (i=1; i<= (15+7*16); i++) {
 37386                           
 37387                           ;incstack = 0
 37388   00B81C  0E01               	movlw	1
 37389   00B81E  0100               	movlb	0	; () banked
 37390   00B820  6F9B               	movwf	loadNvCache@i& (0+255),b
 37391   00B822                     l19389:
 37392                           
 37393                           ; BSR set to: 0
 37394                           ;../../VLCBlib_PIC/nv.c: 166:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 37395   00B822  0E80               	movlw	128
 37396   00B824  259B               	addwf	loadNvCache@i& (0+255),w,b
 37397   00B826  6F97               	movwf	??_loadNvCache& (0+255),b
 37398   00B828  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 37399   00B82A  0EFF               	movlw	255
 37400   00B82C  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 37401   00B82E  C097  F091         	movff	??_loadNvCache,readNVM@index
 37402   00B832  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 37403   00B836  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37404   00B838  0E01               	movlw	1
 37405   00B83A  ECC2  F058         	call	_readNVM
 37406   00B83E  C091  F099         	movff	?_readNVM,loadNvCache@temp
 37407   00B842  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 37408                           
 37409                           ;../../VLCBlib_PIC/nv.c: 167:         if (temp < 0) {
 37410   00B846  0100               	movlb	0	; () banked
 37411   00B848  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 37412   00B84A  D008               	goto	l19397
 37413                           
 37414                           ; BSR set to: 0
 37415                           ;../../VLCBlib_PIC/nv.c: 170:             nvCache[i] = (uint8_t)temp;
 37416   00B84C  0E00               	movlw	low _nvCache
 37417   00B84E  259B               	addwf	loadNvCache@i& (0+255),w,b
 37418   00B850  6ED9               	movwf	fsr2l,c
 37419   00B852  6ADA               	clrf	fsr2h,c
 37420   00B854  0E04               	movlw	high _nvCache
 37421   00B856  22DA               	addwfc	fsr2h,f,c
 37422   00B858  C099  FFDF         	movff	loadNvCache@temp,indf2
 37423   00B85C                     l19397:
 37424                           
 37425                           ; BSR set to: 0
 37426                           ;../../VLCBlib_PIC/nv.c: 172:     }
 37427   00B85C  2B9B               	incf	loadNvCache@i& (0+255),f,b
 37428                           
 37429                           ; BSR set to: 0
 37430   00B85E  0E7F               	movlw	127
 37431   00B860  659B               	cpfsgt	loadNvCache@i& (0+255),b
 37432   00B862  D7DF               	goto	l19389
 37433   00B864  0012               	return	
 37434   00B866                     __end_of_loadNvCache:
 37435                           	callstack 0
 37436                           
 37437 ;; *************** function _defaultEvents *****************
 37438 ;; Defined at:
 37439 ;;		line 110 in file "../universalEvents.c"
 37440 ;; Parameters:    Size  Location     Type
 37441 ;;  io              1    wreg     unsigned char 
 37442 ;;  type            1   44[BANK1 ] unsigned char 
 37443 ;; Auto vars:     Size  Location     Type
 37444 ;;  io              1   47[BANK1 ] unsigned char 
 37445 ;;  en              2   45[BANK1 ] unsigned short 
 37446 ;;  b               1    0        unsigned char 
 37447 ;; Return value:  Size  Location     Type
 37448 ;;                  1    wreg      void 
 37449 ;; Registers used:
 37450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37451 ;; Tracked objects:
 37452 ;;		On entry : 0/0
 37453 ;;		On exit  : 0/0
 37454 ;;		Unchanged: 0/0
 37455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37456 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37457 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37459 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37460 ;;Total ram usage:        4 bytes
 37461 ;; Hardware stack levels used: 1
 37462 ;; Hardware stack levels required when called: 23
 37463 ;; This function calls:
 37464 ;;		_addEvent
 37465 ;;		_clearEvents
 37466 ;; This function is called by:
 37467 ;;		_setType
 37468 ;; This function uses a non-reentrant model
 37469 ;;
 37470                           
 37471                           	psect	text159
 37472   0074B2                     __ptext159:
 37473                           	callstack 0
 37474   0074B2                     _defaultEvents:
 37475                           	callstack 2
 37476                           
 37477                           ; BSR set to: 0
 37478                           ;incstack = 0
 37479                           ;defaultEvents@io stored from wreg
 37480   0074B2  0101               	movlb	1	; () banked
 37481   0074B4  6FE7               	movwf	defaultEvents@io& (0+255),b
 37482                           
 37483                           ;../universalEvents.c: 111:     uint16_t en = io+1;
 37484   0074B6  0E01               	movlw	1
 37485   0074B8  0101               	movlb	1	; () banked
 37486   0074BA  25E7               	addwf	defaultEvents@io& (0+255),w,b
 37487   0074BC  6FE5               	movwf	defaultEvents@en& (0+255),b
 37488   0074BE  6BE6               	clrf	(defaultEvents@en+1)& (0+255),b
 37489   0074C0  0E00               	movlw	0
 37490   0074C2  23E6               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 37491                           
 37492                           ; BSR set to: 1
 37493                           ;../universalEvents.c: 112:     uint8_t b;;../universalEvents.c: 120:         clearEvent
      +                          s(io);
 37494   0074C4  51E7               	movf	defaultEvents@io& (0+255),w,b
 37495   0074C6  EC02  F05D         	call	_clearEvents
 37496                           
 37497                           ;../universalEvents.c: 125:     switch(type) {
 37498   0074CA  D094               	goto	l19537
 37499   0074CC                     l19529:
 37500                           
 37501                           ; BSR set to: 1
 37502                           ;../universalEvents.c: 129:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 37503   0074CC  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37504   0074D0  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37505   0074D4  0E64               	movlw	100
 37506   0074D6  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37507   0074D8  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37508   0074DA  0E00               	movlw	0
 37509   0074DC  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37510   0074DE  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37511   0074E0  0E00               	movlw	0
 37512   0074E2  6FD9               	movwf	addEvent@evNum& (0+255),b
 37513   0074E4  51E7               	movf	defaultEvents@io& (0+255),w,b
 37514   0074E6  0D04               	mullw	4
 37515   0074E8  50F3               	movf	243,w,c
 37516   0074EA  0F08               	addlw	8
 37517   0074EC  6FDA               	movwf	addEvent@evVal& (0+255),b
 37518   0074EE  0E01               	movlw	1
 37519   0074F0  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37520   0074F2  ECB8  F031         	call	_addEvent	;wreg free
 37521   0074F6                     l640:
 37522                           
 37523                           ;../universalEvents.c: 134:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37524   0074F6  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37525   0074FA  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37526   0074FE  C1E5  F1D7         	movff	defaultEvents@en,addEvent@eventNumber
 37527   007502  C1E6  F1D8         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37528   007506  0E01               	movlw	1
 37529   007508  0101               	movlb	1	; () banked
 37530   00750A  6FD9               	movwf	addEvent@evNum& (0+255),b
 37531   00750C  51E7               	movf	defaultEvents@io& (0+255),w,b
 37532   00750E  0D05               	mullw	5
 37533   007510  50F3               	movf	243,w,c
 37534   007512  0F08               	addlw	8
 37535   007514  6FDA               	movwf	addEvent@evVal& (0+255),b
 37536   007516  0E01               	movlw	1
 37537   007518  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37538   00751A  ECB8  F031         	call	_addEvent	;wreg free
 37539                           
 37540                           ;../universalEvents.c: 137:             break;
 37541   00751E  0012               	return	
 37542   007520                     l19531:
 37543                           
 37544                           ; BSR set to: 1
 37545                           ;../universalEvents.c: 140:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 37546   007520  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37547   007524  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37548   007528  C1E5  F1D7         	movff	defaultEvents@en,addEvent@eventNumber
 37549   00752C  C1E6  F1D8         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37550   007530  0E00               	movlw	0
 37551   007532  6FD9               	movwf	addEvent@evNum& (0+255),b
 37552   007534  51E7               	movf	defaultEvents@io& (0+255),w,b
 37553   007536  0D04               	mullw	4
 37554   007538  50F3               	movf	243,w,c
 37555   00753A  0F08               	addlw	8
 37556   00753C  6FDA               	movwf	addEvent@evVal& (0+255),b
 37557   00753E  0E01               	movlw	1
 37558   007540  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37559   007542  ECB8  F031         	call	_addEvent	;wreg free
 37560                           
 37561                           ;../universalEvents.c: 141:             break;
 37562   007546  0012               	return	
 37563   007548                     l19533:
 37564                           
 37565                           ; BSR set to: 1
 37566                           ;../universalEvents.c: 145:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 37567   007548  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37568   00754C  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37569   007550  0E64               	movlw	100
 37570   007552  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37571   007554  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37572   007556  0E00               	movlw	0
 37573   007558  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37574   00755A  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37575   00755C  0E00               	movlw	0
 37576   00755E  6FD9               	movwf	addEvent@evNum& (0+255),b
 37577   007560  51E7               	movf	defaultEvents@io& (0+255),w,b
 37578   007562  0D04               	mullw	4
 37579   007564  50F3               	movf	243,w,c
 37580   007566  0F08               	addlw	8
 37581   007568  6FDA               	movwf	addEvent@evVal& (0+255),b
 37582   00756A  0E01               	movlw	1
 37583   00756C  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37584   00756E  ECB8  F031         	call	_addEvent	;wreg free
 37585                           
 37586                           ;../universalEvents.c: 146:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 37587   007572  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37588   007576  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37589   00757A  0E2C               	movlw	44
 37590   00757C  0101               	movlb	1	; () banked
 37591   00757E  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37592   007580  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37593   007582  0E01               	movlw	1
 37594   007584  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37595   007586  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37596   007588  0E00               	movlw	0
 37597   00758A  6FD9               	movwf	addEvent@evNum& (0+255),b
 37598   00758C  51E7               	movf	defaultEvents@io& (0+255),w,b
 37599   00758E  0D04               	mullw	4
 37600   007590  50F3               	movf	243,w,c
 37601   007592  0F09               	addlw	9
 37602   007594  6FDA               	movwf	addEvent@evVal& (0+255),b
 37603   007596  0E01               	movlw	1
 37604   007598  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37605   00759A  ECB8  F031         	call	_addEvent	;wreg free
 37606                           
 37607                           ;../universalEvents.c: 147:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 37608   00759E  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37609   0075A2  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37610   0075A6  0EC8               	movlw	200
 37611   0075A8  0101               	movlb	1	; () banked
 37612   0075AA  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37613   0075AC  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37614   0075AE  0E00               	movlw	0
 37615   0075B0  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37616   0075B2  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37617   0075B4  0E00               	movlw	0
 37618   0075B6  6FD9               	movwf	addEvent@evNum& (0+255),b
 37619   0075B8  51E7               	movf	defaultEvents@io& (0+255),w,b
 37620   0075BA  0D04               	mullw	4
 37621   0075BC  50F3               	movf	243,w,c
 37622   0075BE  0F0A               	addlw	10
 37623   0075C0  6FDA               	movwf	addEvent@evVal& (0+255),b
 37624   0075C2  0E01               	movlw	1
 37625   0075C4  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37626   0075C6  ECB8  F031         	call	_addEvent	;wreg free
 37627                           
 37628                           ;../universalEvents.c: 149:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37629   0075CA  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37630   0075CE  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37631   0075D2  C1E5  F1D7         	movff	defaultEvents@en,addEvent@eventNumber
 37632   0075D6  C1E6  F1D8         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37633   0075DA  0E01               	movlw	1
 37634   0075DC  0101               	movlb	1	; () banked
 37635   0075DE  6FD9               	movwf	addEvent@evNum& (0+255),b
 37636   0075E0  51E7               	movf	defaultEvents@io& (0+255),w,b
 37637   0075E2  0D05               	mullw	5
 37638   0075E4  50F3               	movf	243,w,c
 37639   0075E6  0F08               	addlw	8
 37640   0075E8  6FDA               	movwf	addEvent@evVal& (0+255),b
 37641   0075EA  0E01               	movlw	1
 37642   0075EC  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37643   0075EE  ECB8  F031         	call	_addEvent	;wreg free
 37644                           
 37645                           ;../universalEvents.c: 150:             break;
 37646   0075F2  0012               	return	
 37647   0075F4                     l19537:
 37648   0075F4  0101               	movlb	1	; () banked
 37649   0075F6  51E4               	movf	defaultEvents@type& (0+255),w,b
 37650                           
 37651                           ; Switch size 1, requested type "simple"
 37652                           ; Number of cases is 5, Range of values is 0 to 4
 37653                           ; switch strategies available:
 37654                           ; Name         Instructions Cycles
 37655                           ; simple_byte           16     9 (average)
 37656                           ;	Chosen strategy is simple_byte
 37657   0075F8  0A00               	xorlw	0	; case 0
 37658   0075FA  B4D8               	btfsc	status,2,c
 37659   0075FC  D791               	goto	l19531
 37660   0075FE  0A01               	xorlw	1	; case 1
 37661   007600  B4D8               	btfsc	status,2,c
 37662   007602  D779               	goto	l640
 37663   007604  0A03               	xorlw	3	; case 2
 37664   007606  B4D8               	btfsc	status,2,c
 37665   007608  D79F               	goto	l19533
 37666   00760A  0A01               	xorlw	1	; case 3
 37667   00760C  B4D8               	btfsc	status,2,c
 37668   00760E  D75E               	goto	l19529
 37669   007610  0A07               	xorlw	7	; case 4
 37670   007612  0012               	return	
 37671   007614                     __end_of_defaultEvents:
 37672                           	callstack 0
 37673                           
 37674 ;; *************** function _clearEvents *****************
 37675 ;; Defined at:
 37676 ;;		line 222 in file "../universalEvents.c"
 37677 ;; Parameters:    Size  Location     Type
 37678 ;;  io              1    wreg     unsigned char 
 37679 ;; Auto vars:     Size  Location     Type
 37680 ;;  io              1   39[BANK1 ] unsigned char 
 37681 ;; Return value:  Size  Location     Type
 37682 ;;                  1    wreg      void 
 37683 ;; Registers used:
 37684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37685 ;; Tracked objects:
 37686 ;;		On entry : 0/0
 37687 ;;		On exit  : 0/0
 37688 ;;		Unchanged: 0/0
 37689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37691 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37693 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37694 ;;Total ram usage:        1 bytes
 37695 ;; Hardware stack levels used: 1
 37696 ;; Hardware stack levels required when called: 22
 37697 ;; This function calls:
 37698 ;;		_deleteActionRange
 37699 ;;		_deleteHappeningRange
 37700 ;; This function is called by:
 37701 ;;		_defaultEvents
 37702 ;; This function uses a non-reentrant model
 37703 ;;
 37704                           
 37705                           	psect	text160
 37706   00BA04                     __ptext160:
 37707                           	callstack 0
 37708   00BA04                     _clearEvents:
 37709                           	callstack 2
 37710                           
 37711                           ;incstack = 0
 37712                           ;clearEvents@io stored from wreg
 37713   00BA04  0101               	movlb	1	; () banked
 37714   00BA06  6FDF               	movwf	clearEvents@io& (0+255),b
 37715                           
 37716                           ;../universalEvents.c: 223:     deleteActionRange((uint8_t)(uint8_t)(8 + 5*(io)), 5);
 37717   00BA08  0E05               	movlw	5
 37718   00BA0A  0101               	movlb	1	; () banked
 37719   00BA0C  6FD5               	movwf	deleteActionRange@number& (0+255),b
 37720   00BA0E  51DF               	movf	clearEvents@io& (0+255),w,b
 37721   00BA10  0D05               	mullw	5
 37722   00BA12  50F3               	movf	243,w,c
 37723   00BA14  0F08               	addlw	8
 37724   00BA16  EC6D  F04A         	call	_deleteActionRange
 37725                           
 37726                           ;../universalEvents.c: 224:     deleteActionRange((uint8_t)(uint8_t)((8 + 5*(io)) | 0x80
      +                          ), 5);
 37727   00BA1A  0E05               	movlw	5
 37728   00BA1C  0101               	movlb	1	; () banked
 37729   00BA1E  6FD5               	movwf	deleteActionRange@number& (0+255),b
 37730   00BA20  51DF               	movf	clearEvents@io& (0+255),w,b
 37731   00BA22  0D05               	mullw	5
 37732   00BA24  50F3               	movf	243,w,c
 37733   00BA26  0F08               	addlw	8
 37734   00BA28  0980               	iorlw	128
 37735   00BA2A  EC6D  F04A         	call	_deleteActionRange
 37736                           
 37737                           ;../universalEvents.c: 225:     deleteHappeningRange((8 + 4*(io)), 4);
 37738   00BA2E  0E04               	movlw	4
 37739   00BA30  0101               	movlb	1	; () banked
 37740   00BA32  6FD5               	movwf	deleteHappeningRange@number& (0+255),b
 37741   00BA34  51DF               	movf	clearEvents@io& (0+255),w,b
 37742   00BA36  0D04               	mullw	4
 37743   00BA38  50F3               	movf	243,w,c
 37744   00BA3A  0F08               	addlw	8
 37745   00BA3C  EC7C  F044         	call	_deleteHappeningRange
 37746   00BA40  0012               	return		;funcret
 37747   00BA42                     __end_of_clearEvents:
 37748                           	callstack 0
 37749                           
 37750 ;; *************** function _deleteHappeningRange *****************
 37751 ;; Defined at:
 37752 ;;		line 286 in file "../../VLCBlib_PIC/event_producer_happening.c"
 37753 ;; Parameters:    Size  Location     Type
 37754 ;;  happening       1    wreg     unsigned char 
 37755 ;;  number          1   29[BANK1 ] unsigned char 
 37756 ;; Auto vars:     Size  Location     Type
 37757 ;;  happening       1   35[BANK1 ] unsigned char 
 37758 ;;  h               1   36[BANK1 ] unsigned char 
 37759 ;;  f               1    0        struct .
 37760 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 37761 ;; Return value:  Size  Location     Type
 37762 ;;                  1    wreg      void 
 37763 ;; Registers used:
 37764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37765 ;; Tracked objects:
 37766 ;;		On entry : 0/0
 37767 ;;		On exit  : 0/0
 37768 ;;		Unchanged: 0/0
 37769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37770 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37771 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37772 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37773 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37774 ;;Total ram usage:        9 bytes
 37775 ;; Hardware stack levels used: 1
 37776 ;; Hardware stack levels required when called: 21
 37777 ;; This function calls:
 37778 ;;		_checkRemoveTableEntry
 37779 ;;		_flushFlashBlock
 37780 ;;		_readNVM
 37781 ;;		_rebuildHashtable
 37782 ;;		_validStart
 37783 ;;		_writeEv
 37784 ;; This function is called by:
 37785 ;;		_clearEvents
 37786 ;; This function uses a non-reentrant model
 37787 ;;
 37788                           
 37789                           	psect	text161
 37790   0088F8                     __ptext161:
 37791                           	callstack 0
 37792   0088F8                     _deleteHappeningRange:
 37793                           	callstack 2
 37794                           
 37795                           ;incstack = 0
 37796                           ;deleteHappeningRange@happening stored from wreg
 37797   0088F8  0101               	movlb	1	; () banked
 37798   0088FA  6FDB               	movwf	deleteHappeningRange@happening& (0+255),b
 37799                           
 37800                           ;../../VLCBlib_PIC/event_producer_happening.c: 287:     uint8_t tableIndex;;../../VLCBli
      +                          b_PIC/event_producer_happening.c: 288:     for (tableIndex=0; tableIndex < 255; tableInd
      +                          ex++) {
 37801   0088FC  0E00               	movlw	0
 37802   0088FE  0101               	movlb	1	; () banked
 37803   008900  6FDD               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 37804   008902                     l19247:
 37805                           
 37806                           ; BSR set to: 1
 37807                           ;../../VLCBlib_PIC/event_producer_happening.c: 289:         if ( validStart(tableIndex))
      +                           {
 37808   008902  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37809   008904  EC2B  F05B         	call	_validStart
 37810   008908  0900               	iorlw	0
 37811   00890A  B4D8               	btfsc	status,2,c
 37812   00890C  D059               	goto	l19259
 37813   00890E  0101               	movlb	1	; () banked
 37814   008910  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37815   008912  6FD6               	movwf	??_deleteHappeningRange& (0+255),b
 37816   008914  6BD7               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37817   008916  3BD6               	swapf	??_deleteHappeningRange& (0+255),f,b
 37818   008918  3BD7               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 37819   00891A  0EF0               	movlw	240
 37820   00891C  17D7               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37821   00891E  51D6               	movf	??_deleteHappeningRange& (0+255),w,b
 37822   008920  0B0F               	andlw	15
 37823   008922  13D7               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37824   008924  0EF0               	movlw	240
 37825   008926  17D6               	andwf	??_deleteHappeningRange& (0+255),f,b
 37826   008928  0E80               	movlw	128
 37827   00892A  25D6               	addwf	??_deleteHappeningRange& (0+255),w,b
 37828   00892C  6FD8               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37829   00892E  0EEF               	movlw	239
 37830   008930  21D7               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37831   008932  6FD9               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37832   008934  C1D8  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37833   008938  C1D9  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37834   00893C  0100               	movlb	0	; () banked
 37835   00893E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37836   008940  0E01               	movlw	1
 37837   008942  ECC2  F058         	call	_readNVM
 37838                           
 37839                           ;../../VLCBlib_PIC/event_producer_happening.c: 294:             h = (Happening)readNVM(F
      +                          LASH_NVM_TYPE,
 37840   008946  0101               	movlb	1	; () banked
 37841   008948  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37842   00894A  0D10               	mullw	16
 37843   00894C  CFF3 F1D6          	movff	prodl,??_deleteHappeningRange
 37844   008950  CFF4 F1D7          	movff	prodh,??_deleteHappeningRange+1
 37845   008954  0E86               	movlw	134
 37846   008956  25D6               	addwf	??_deleteHappeningRange& (0+255),w,b
 37847   008958  6FD8               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37848   00895A  0EEF               	movlw	239
 37849   00895C  21D7               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37850   00895E  6FD9               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37851   008960  C1D8  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37852   008964  C1D9  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37853   008968  0100               	movlb	0	; () banked
 37854   00896A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37855   00896C  0E01               	movlw	1
 37856   00896E  ECC2  F058         	call	_readNVM
 37857   008972  0100               	movlb	0	; () banked
 37858   008974  5191               	movf	?_readNVM& (0+255),w,b
 37859   008976  0101               	movlb	1	; () banked
 37860   008978  6FDC               	movwf	deleteHappeningRange@h& (0+255),b
 37861                           
 37862                           ; BSR set to: 1
 37863                           ;../../VLCBlib_PIC/event_producer_happening.c: 296:             if ((h >= happening) && 
      +                          (h < happening+number)) {
 37864   00897A  51DB               	movf	deleteHappeningRange@happening& (0+255),w,b
 37865   00897C  5DDC               	subwf	deleteHappeningRange@h& (0+255),w,b
 37866   00897E  A0D8               	btfss	status,0,c
 37867   008980  D01F               	goto	l19259
 37868                           
 37869                           ; BSR set to: 1
 37870   008982  51D5               	movf	deleteHappeningRange@number& (0+255),w,b
 37871   008984  C1DB  F1D6         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 37872   008988  6BD7               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37873   00898A  27D6               	addwf	??_deleteHappeningRange& (0+255),f,b
 37874   00898C  0E00               	movlw	0
 37875   00898E  23D7               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 37876   008990  51DC               	movf	deleteHappeningRange@h& (0+255),w,b
 37877   008992  6FD8               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37878   008994  6BD9               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 37879   008996  51D6               	movf	??_deleteHappeningRange& (0+255),w,b
 37880   008998  5DD8               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 37881   00899A  51D9               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 37882   00899C  0A80               	xorlw	128
 37883   00899E  6FDA               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 37884   0089A0  51D7               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 37885   0089A2  0A80               	xorlw	128
 37886   0089A4  59DA               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 37887   0089A6  B0D8               	btfsc	status,0,c
 37888   0089A8  D00B               	goto	l19259
 37889                           
 37890                           ; BSR set to: 1
 37891                           ;../../VLCBlib_PIC/event_producer_happening.c: 297:                 writeEv(tableIndex, 
      +                          0, 0);
 37892   0089AA  0E00               	movlw	0
 37893   0089AC  6FC9               	movwf	writeEv@evNum& (0+255),b
 37894   0089AE  0E00               	movlw	0
 37895   0089B0  6FCA               	movwf	writeEv@evVal& (0+255),b
 37896   0089B2  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37897   0089B4  ECC4  F018         	call	_writeEv
 37898                           
 37899                           ;../../VLCBlib_PIC/event_producer_happening.c: 298:                 checkRemoveTableEntr
      +                          y(tableIndex);
 37900   0089B8  0101               	movlb	1	; () banked
 37901   0089BA  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37902   0089BC  EC58  F05C         	call	_checkRemoveTableEntry
 37903   0089C0                     l19259:
 37904                           
 37905                           ;../../VLCBlib_PIC/event_producer_happening.c: 301:     }
 37906   0089C0  0101               	movlb	1	; () banked
 37907   0089C2  2BDD               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 37908                           
 37909                           ; BSR set to: 1
 37910   0089C4  29DD               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 37911   0089C6  A4D8               	btfss	status,2,c
 37912   0089C8  D79C               	goto	l19247
 37913                           
 37914                           ; BSR set to: 1
 37915                           ;../../VLCBlib_PIC/event_producer_happening.c: 302:     flushFlashBlock();
 37916   0089CA  EC8D  F052         	call	_flushFlashBlock	;wreg free
 37917                           
 37918                           ;../../VLCBlib_PIC/event_producer_happening.c: 303:     rebuildHashtable();
 37919   0089CE  EC40  F03E         	call	_rebuildHashtable	;wreg free
 37920   0089D2  0012               	return		;funcret
 37921   0089D4                     __end_of_deleteHappeningRange:
 37922                           	callstack 0
 37923                           
 37924 ;; *************** function _deleteActionRange *****************
 37925 ;; Defined at:
 37926 ;;		line 512 in file "../event_consumerDualActionQueue.c"
 37927 ;; Parameters:    Size  Location     Type
 37928 ;;  action          1    wreg     unsigned char 
 37929 ;;  number          1   29[BANK1 ] unsigned char 
 37930 ;; Auto vars:     Size  Location     Type
 37931 ;;  action          1   36[BANK1 ] unsigned char 
 37932 ;;  e               1   37[BANK1 ] unsigned char 
 37933 ;;  updated         1   35[BANK1 ] enum E12760
 37934 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 37935 ;; Return value:  Size  Location     Type
 37936 ;;                  1    wreg      void 
 37937 ;; Registers used:
 37938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37939 ;; Tracked objects:
 37940 ;;		On entry : 0/0
 37941 ;;		On exit  : 0/0
 37942 ;;		Unchanged: 0/0
 37943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37944 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37945 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37946 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37947 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37948 ;;Total ram usage:       10 bytes
 37949 ;; Hardware stack levels used: 1
 37950 ;; Hardware stack levels required when called: 21
 37951 ;; This function calls:
 37952 ;;		_checkRemoveTableEntry
 37953 ;;		_flushFlashBlock
 37954 ;;		_getEVs
 37955 ;;		_rebuildHashtable
 37956 ;;		_validStart
 37957 ;;		_writeEv
 37958 ;; This function is called by:
 37959 ;;		_clearEvents
 37960 ;; This function uses a non-reentrant model
 37961 ;;
 37962                           
 37963                           	psect	text162
 37964   0094DA                     __ptext162:
 37965                           	callstack 0
 37966   0094DA                     _deleteActionRange:
 37967                           	callstack 2
 37968                           
 37969                           ;incstack = 0
 37970                           ;deleteActionRange@action stored from wreg
 37971   0094DA  0101               	movlb	1	; () banked
 37972   0094DC  6FDC               	movwf	deleteActionRange@action& (0+255),b
 37973                           
 37974                           ;../event_consumerDualActionQueue.c: 513:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 514:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37975   0094DE  0E00               	movlw	0
 37976   0094E0  0101               	movlb	1	; () banked
 37977   0094E2  6FDE               	movwf	deleteActionRange@tableIndex& (0+255),b
 37978   0094E4                     l19203:
 37979                           
 37980                           ; BSR set to: 1
 37981                           ;../event_consumerDualActionQueue.c: 515:         if (validStart(tableIndex)) {
 37982   0094E4  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37983   0094E6  EC2B  F05B         	call	_validStart
 37984   0094EA  0900               	iorlw	0
 37985   0094EC  B4D8               	btfsc	status,2,c
 37986   0094EE  D044               	goto	l19233
 37987                           
 37988                           ;../event_consumerDualActionQueue.c: 516:             Boolean updated = FALSE;
 37989   0094F0  0E00               	movlw	0
 37990   0094F2  0101               	movlb	1	; () banked
 37991   0094F4  6FDB               	movwf	deleteActionRange@updated& (0+255),b
 37992                           
 37993                           ; BSR set to: 1
 37994                           ;../event_consumerDualActionQueue.c: 517:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 518:             if (getEVs(tableIndex)) {
 37995   0094F6  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37996   0094F8  EC5F  F040         	call	_getEVs
 37997   0094FC  0900               	iorlw	0
 37998   0094FE  A4D8               	btfss	status,2,c
 37999   009500  0012               	return	
 38000                           
 38001                           ;../event_consumerDualActionQueue.c: 522:             for (e=1; e<20; e++) {
 38002   009502  0E01               	movlw	1
 38003   009504  0101               	movlb	1	; () banked
 38004   009506  6FDD               	movwf	deleteActionRange@e& (0+255),b
 38005   009508                     l19217:
 38006                           
 38007                           ; BSR set to: 1
 38008                           ;../event_consumerDualActionQueue.c: 523:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 38009   009508  0E40               	movlw	low _evs
 38010   00950A  25DD               	addwf	deleteActionRange@e& (0+255),w,b
 38011   00950C  6ED9               	movwf	fsr2l,c
 38012   00950E  6ADA               	clrf	fsr2h,c
 38013   009510  0E02               	movlw	high _evs
 38014   009512  22DA               	addwfc	fsr2h,f,c
 38015   009514  51DC               	movf	deleteActionRange@action& (0+255),w,b
 38016   009516  5CDE               	subwf	postinc2,w,c
 38017   009518  A0D8               	btfss	status,0,c
 38018   00951A  D024               	goto	l19225
 38019                           
 38020                           ; BSR set to: 1
 38021   00951C  51D5               	movf	deleteActionRange@number& (0+255),w,b
 38022   00951E  C1DC  F1D6         	movff	deleteActionRange@action,??_deleteActionRange
 38023   009522  6BD7               	clrf	(??_deleteActionRange+1)& (0+255),b
 38024   009524  27D6               	addwf	??_deleteActionRange& (0+255),f,b
 38025   009526  0E00               	movlw	0
 38026   009528  23D7               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 38027   00952A  0E40               	movlw	low _evs
 38028   00952C  25DD               	addwf	deleteActionRange@e& (0+255),w,b
 38029   00952E  6ED9               	movwf	fsr2l,c
 38030   009530  6ADA               	clrf	fsr2h,c
 38031   009532  0E02               	movlw	high _evs
 38032   009534  22DA               	addwfc	fsr2h,f,c
 38033   009536  50DF               	movf	indf2,w,c
 38034   009538  6FD8               	movwf	(??_deleteActionRange+2)& (0+255),b
 38035   00953A  6BD9               	clrf	(??_deleteActionRange+3)& (0+255),b
 38036   00953C  51D6               	movf	??_deleteActionRange& (0+255),w,b
 38037   00953E  5DD8               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 38038   009540  51D9               	movf	(??_deleteActionRange+3)& (0+255),w,b
 38039   009542  0A80               	xorlw	128
 38040   009544  6FDA               	movwf	(??_deleteActionRange+4)& (0+255),b
 38041   009546  51D7               	movf	(??_deleteActionRange+1)& (0+255),w,b
 38042   009548  0A80               	xorlw	128
 38043   00954A  59DA               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 38044   00954C  B0D8               	btfsc	status,0,c
 38045   00954E  D00A               	goto	l19225
 38046                           
 38047                           ; BSR set to: 1
 38048                           ;../event_consumerDualActionQueue.c: 524:                     writeEv(tableIndex, e, 0);
 38049   009550  C1DD  F1C9         	movff	deleteActionRange@e,writeEv@evNum
 38050   009554  0E00               	movlw	0
 38051   009556  6FCA               	movwf	writeEv@evVal& (0+255),b
 38052   009558  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38053   00955A  ECC4  F018         	call	_writeEv
 38054                           
 38055                           ;../event_consumerDualActionQueue.c: 525:                     updated = TRUE;
 38056   00955E  0E01               	movlw	1
 38057   009560  0101               	movlb	1	; () banked
 38058   009562  6FDB               	movwf	deleteActionRange@updated& (0+255),b
 38059   009564                     l19225:
 38060                           
 38061                           ; BSR set to: 1
 38062                           ;../event_consumerDualActionQueue.c: 527:             }
 38063   009564  2BDD               	incf	deleteActionRange@e& (0+255),f,b
 38064                           
 38065                           ; BSR set to: 1
 38066   009566  0E13               	movlw	19
 38067   009568  65DD               	cpfsgt	deleteActionRange@e& (0+255),b
 38068   00956A  D7CE               	goto	l19217
 38069                           
 38070                           ; BSR set to: 1
 38071                           ;../event_consumerDualActionQueue.c: 528:             if (updated) {
 38072   00956C  51DB               	movf	deleteActionRange@updated& (0+255),w,b
 38073   00956E  B4D8               	btfsc	status,2,c
 38074   009570  D003               	goto	l19233
 38075                           
 38076                           ; BSR set to: 1
 38077                           ;../event_consumerDualActionQueue.c: 529:                 checkRemoveTableEntry(tableInd
      +                          ex);
 38078   009572  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38079   009574  EC58  F05C         	call	_checkRemoveTableEntry
 38080   009578                     l19233:
 38081                           
 38082                           ;../event_consumerDualActionQueue.c: 532:     }
 38083   009578  0101               	movlb	1	; () banked
 38084   00957A  2BDE               	incf	deleteActionRange@tableIndex& (0+255),f,b
 38085                           
 38086                           ; BSR set to: 1
 38087   00957C  29DE               	incf	deleteActionRange@tableIndex& (0+255),w,b
 38088   00957E  A4D8               	btfss	status,2,c
 38089   009580  D7B1               	goto	l19203
 38090                           
 38091                           ; BSR set to: 1
 38092                           ;../event_consumerDualActionQueue.c: 533:     flushFlashBlock();
 38093   009582  EC8D  F052         	call	_flushFlashBlock	;wreg free
 38094                           
 38095                           ;../event_consumerDualActionQueue.c: 535:     rebuildHashtable();
 38096   009586  EC40  F03E         	call	_rebuildHashtable	;wreg free
 38097   00958A  0012               	return		;funcret
 38098   00958C                     __end_of_deleteActionRange:
 38099                           	callstack 0
 38100                           
 38101 ;; *************** function _addEvent *****************
 38102 ;; Defined at:
 38103 ;;		line 937 in file "../../VLCBlib_PIC/event_teach_large.c"
 38104 ;; Parameters:    Size  Location     Type
 38105 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 38106 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 38107 ;;  evNum           1   33[BANK1 ] unsigned char 
 38108 ;;  evVal           1   34[BANK1 ] unsigned char 
 38109 ;;  forceOwnNN      1   35[BANK1 ] enum E12760
 38110 ;; Auto vars:     Size  Location     Type
 38111 ;;  e               1   42[BANK1 ] unsigned char 
 38112 ;;  f               1   41[BANK1 ] struct .
 38113 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 38114 ;;  error           1   40[BANK1 ] unsigned char 
 38115 ;; Return value:  Size  Location     Type
 38116 ;;                  1    wreg      unsigned char 
 38117 ;; Registers used:
 38118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38119 ;; Tracked objects:
 38120 ;;		On entry : 0/0
 38121 ;;		On exit  : 0/0
 38122 ;;		Unchanged: 0/0
 38123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38124 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38125 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38126 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38127 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38128 ;;Total ram usage:       15 bytes
 38129 ;; Hardware stack levels used: 1
 38130 ;; Hardware stack levels required when called: 21
 38131 ;; This function calls:
 38132 ;;		_findEvent
 38133 ;;		_flushFlashBlock
 38134 ;;		_readNVM
 38135 ;;		_rebuildHashtable
 38136 ;;		_writeEv
 38137 ;;		_writeNVM
 38138 ;; This function is called by:
 38139 ;;		_defaultEvents
 38140 ;;		_APP_addEvent
 38141 ;; This function uses a non-reentrant model
 38142 ;;
 38143                           
 38144                           	psect	text163
 38145   006370                     __ptext163:
 38146                           	callstack 0
 38147   006370                     _addEvent:
 38148                           	callstack 5
 38149                           
 38150                           ;../../VLCBlib_PIC/event_teach_large.c: 938:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 939:     uint8_t error;;../../VLCBlib_PIC/event_teach_large.c: 941: 
      +                              tableIndex = findEvent(nodeNumber, eventNumber);
 38151                           
 38152                           ;incstack = 0
 38153   006370  C1D5  F1B8         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 38154   006374  C1D6  F1B9         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 38155   006378  C1D7  F1BA         	movff	addEvent@eventNumber,findEvent@eventNumber
 38156   00637C  C1D8  F1BB         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 38157   006380  ECE9  F050         	call	_findEvent	;wreg free
 38158   006384  0101               	movlb	1	; () banked
 38159   006386  6FE3               	movwf	addEvent@tableIndex& (0+255),b
 38160                           
 38161                           ; BSR set to: 1
 38162                           ;../../VLCBlib_PIC/event_teach_large.c: 942:     if (tableIndex == 0xff) {
 38163   006388  29E3               	incf	addEvent@tableIndex& (0+255),w,b
 38164   00638A  A4D8               	btfss	status,2,c
 38165   00638C  D0E2               	goto	l19369
 38166                           
 38167                           ; BSR set to: 1
 38168                           ;../../VLCBlib_PIC/event_teach_large.c: 948:         if (evVal == 0) {
 38169   00638E  51DA               	movf	addEvent@evVal& (0+255),w,b
 38170   006390  A4D8               	btfss	status,2,c
 38171   006392  D002               	goto	l19327
 38172   006394                     u19340:
 38173                           
 38174                           ;../../VLCBlib_PIC/event_teach_large.c: 949:             return 0;
 38175   006394  0E00               	movlw	0
 38176   006396  0012               	return	
 38177   006398                     l19327:
 38178                           
 38179                           ; BSR set to: 1
 38180                           ;../../VLCBlib_PIC/event_teach_large.c: 951:         error = 1;
 38181   006398  0E01               	movlw	1
 38182   00639A  6FE0               	movwf	addEvent@error& (0+255),b
 38183                           
 38184                           ;../../VLCBlib_PIC/event_teach_large.c: 953:         for (tableIndex=0; tableIndex<255; 
      +                          tableIndex++) {
 38185   00639C  0E00               	movlw	0
 38186   00639E  6FE3               	movwf	addEvent@tableIndex& (0+255),b
 38187   0063A0                     l19333:
 38188                           
 38189                           ; BSR set to: 1
 38190                           ;../../VLCBlib_PIC/event_teach_large.c: 954:             EventTableFlags f;;../../VLCBli
      +                          b_PIC/event_teach_large.c: 955:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 38191   0063A0  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38192   0063A2  6FDC               	movwf	??_addEvent& (0+255),b
 38193   0063A4  6BDD               	clrf	(??_addEvent+1)& (0+255),b
 38194   0063A6  3BDC               	swapf	??_addEvent& (0+255),f,b
 38195   0063A8  3BDD               	swapf	(??_addEvent+1)& (0+255),f,b
 38196   0063AA  0EF0               	movlw	240
 38197   0063AC  17DD               	andwf	(??_addEvent+1)& (0+255),f,b
 38198   0063AE  51DC               	movf	??_addEvent& (0+255),w,b
 38199   0063B0  0B0F               	andlw	15
 38200   0063B2  13DD               	iorwf	(??_addEvent+1)& (0+255),f,b
 38201   0063B4  0EF0               	movlw	240
 38202   0063B6  17DC               	andwf	??_addEvent& (0+255),f,b
 38203   0063B8  0E80               	movlw	128
 38204   0063BA  25DC               	addwf	??_addEvent& (0+255),w,b
 38205   0063BC  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38206   0063BE  0EEF               	movlw	239
 38207   0063C0  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38208   0063C2  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38209   0063C4  C1DE  F091         	movff	??_addEvent+2,readNVM@index
 38210   0063C8  C1DF  F092         	movff	??_addEvent+3,readNVM@index+1
 38211   0063CC  0100               	movlb	0	; () banked
 38212   0063CE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38213   0063D0  0E01               	movlw	1
 38214   0063D2  ECC2  F058         	call	_readNVM
 38215   0063D6  0100               	movlb	0	; () banked
 38216   0063D8  5191               	movf	?_readNVM& (0+255),w,b
 38217   0063DA  0101               	movlb	1	; () banked
 38218   0063DC  6FE1               	movwf	addEvent@f& (0+255),b
 38219                           
 38220                           ; BSR set to: 1
 38221                           ;../../VLCBlib_PIC/event_teach_large.c: 956:             if (f.freeEntry) {
 38222   0063DE  AFE1               	btfss	addEvent@f& (0+255),7,b
 38223   0063E0  D0AF               	goto	l19359
 38224                           
 38225                           ; BSR set to: 1
 38226                           ;../../VLCBlib_PIC/event_teach_large.c: 957:                 uint8_t e;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 959:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIn
      +                          dex+2, nodeNumber&0xFF);
 38227   0063E2  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38228   0063E4  0D10               	mullw	16
 38229   0063E6  CFF3 F1DC          	movff	prodl,??_addEvent
 38230   0063EA  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38231   0063EE  0E82               	movlw	130
 38232   0063F0  25DC               	addwf	??_addEvent& (0+255),w,b
 38233   0063F2  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38234   0063F4  0EEF               	movlw	239
 38235   0063F6  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38236   0063F8  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38237   0063FA  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38238   0063FE  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38239   006402  0100               	movlb	0	; () banked
 38240   006404  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38241   006406  C1D5  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 38242   00640A  0E01               	movlw	1
 38243   00640C  EC52  F05B         	call	_writeNVM
 38244                           
 38245                           ;../../VLCBlib_PIC/event_teach_large.c: 960:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+2 +1, nodeNumber>>8);
 38246   006410  0101               	movlb	1	; () banked
 38247   006412  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38248   006414  0D10               	mullw	16
 38249   006416  CFF3 F1DC          	movff	prodl,??_addEvent
 38250   00641A  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38251   00641E  0E83               	movlw	131
 38252   006420  25DC               	addwf	??_addEvent& (0+255),w,b
 38253   006422  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38254   006424  0EEF               	movlw	239
 38255   006426  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38256   006428  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38257   00642A  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38258   00642E  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38259   006432  0100               	movlb	0	; () banked
 38260   006434  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38261   006436  0101               	movlb	1	; () banked
 38262   006438  51D6               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 38263   00643A  0100               	movlb	0	; () banked
 38264   00643C  6FA7               	movwf	writeNVM@value& (0+255),b
 38265   00643E  0E01               	movlw	1
 38266   006440  EC52  F05B         	call	_writeNVM
 38267                           
 38268                           ;../../VLCBlib_PIC/event_teach_large.c: 961:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4, eventNumber&0xFF);
 38269   006444  0101               	movlb	1	; () banked
 38270   006446  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38271   006448  0D10               	mullw	16
 38272   00644A  CFF3 F1DC          	movff	prodl,??_addEvent
 38273   00644E  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38274   006452  0E84               	movlw	132
 38275   006454  25DC               	addwf	??_addEvent& (0+255),w,b
 38276   006456  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38277   006458  0EEF               	movlw	239
 38278   00645A  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38279   00645C  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38280   00645E  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38281   006462  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38282   006466  0100               	movlb	0	; () banked
 38283   006468  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38284   00646A  C1D7  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 38285   00646E  0E01               	movlw	1
 38286   006470  EC52  F05B         	call	_writeNVM
 38287                           
 38288                           ;../../VLCBlib_PIC/event_teach_large.c: 962:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4 +1, eventNumber>>8);
 38289   006474  0101               	movlb	1	; () banked
 38290   006476  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38291   006478  0D10               	mullw	16
 38292   00647A  CFF3 F1DC          	movff	prodl,??_addEvent
 38293   00647E  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38294   006482  0E85               	movlw	133
 38295   006484  25DC               	addwf	??_addEvent& (0+255),w,b
 38296   006486  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38297   006488  0EEF               	movlw	239
 38298   00648A  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38299   00648C  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38300   00648E  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38301   006492  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38302   006496  0100               	movlb	0	; () banked
 38303   006498  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38304   00649A  0101               	movlb	1	; () banked
 38305   00649C  51D8               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 38306   00649E  0100               	movlb	0	; () banked
 38307   0064A0  6FA7               	movwf	writeNVM@value& (0+255),b
 38308   0064A2  0E01               	movlw	1
 38309   0064A4  EC52  F05B         	call	_writeNVM
 38310                           
 38311                           ;../../VLCBlib_PIC/event_teach_large.c: 963:                 f.asByte = 0;
 38312   0064A8  0E00               	movlw	0
 38313   0064AA  0101               	movlb	1	; () banked
 38314   0064AC  6FE1               	movwf	addEvent@f& (0+255),b
 38315                           
 38316                           ; BSR set to: 1
 38317                           ;../../VLCBlib_PIC/event_teach_large.c: 964:                 f.forceOwnNN = forceOwnNN;
 38318   0064AE  B1DB               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 38319   0064B0  D002               	bra	u19365
 38320   0064B2  9DE1               	bcf	addEvent@f& (0+255),6,b
 38321   0064B4  D002               	bra	u19366
 38322   0064B6                     u19365:
 38323   0064B6  0101               	movlb	1	; () banked
 38324   0064B8  8DE1               	bsf	addEvent@f& (0+255),6,b
 38325   0064BA                     u19366:
 38326                           
 38327                           ; BSR set to: 1
 38328                           ;../../VLCBlib_PIC/event_teach_large.c: 965:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0, f.asByte);
 38329   0064BA  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38330   0064BC  6FDC               	movwf	??_addEvent& (0+255),b
 38331   0064BE  6BDD               	clrf	(??_addEvent+1)& (0+255),b
 38332   0064C0  3BDC               	swapf	??_addEvent& (0+255),f,b
 38333   0064C2  3BDD               	swapf	(??_addEvent+1)& (0+255),f,b
 38334   0064C4  0EF0               	movlw	240
 38335   0064C6  17DD               	andwf	(??_addEvent+1)& (0+255),f,b
 38336   0064C8  51DC               	movf	??_addEvent& (0+255),w,b
 38337   0064CA  0B0F               	andlw	15
 38338   0064CC  13DD               	iorwf	(??_addEvent+1)& (0+255),f,b
 38339   0064CE  0EF0               	movlw	240
 38340   0064D0  17DC               	andwf	??_addEvent& (0+255),f,b
 38341   0064D2  0E80               	movlw	128
 38342   0064D4  25DC               	addwf	??_addEvent& (0+255),w,b
 38343   0064D6  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38344   0064D8  0EEF               	movlw	239
 38345   0064DA  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38346   0064DC  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38347   0064DE  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38348   0064E2  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38349   0064E6  0100               	movlb	0	; () banked
 38350   0064E8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38351   0064EA  C1E1  F0A7         	movff	addEvent@f,writeNVM@value
 38352   0064EE  0E01               	movlw	1
 38353   0064F0  EC52  F05B         	call	_writeNVM
 38354                           
 38355                           ;../../VLCBlib_PIC/event_teach_large.c: 967:                 for (e = 0; e < 10; e++) {
 38356   0064F4  0E00               	movlw	0
 38357   0064F6  0101               	movlb	1	; () banked
 38358   0064F8  6FE2               	movwf	addEvent@e& (0+255),b
 38359   0064FA                     l19351:
 38360                           
 38361                           ; BSR set to: 1
 38362                           ;../../VLCBlib_PIC/event_teach_large.c: 968:                     writeNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +e, 0);
 38363   0064FA  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38364   0064FC  0D10               	mullw	16
 38365   0064FE  CFF3 F1DC          	movff	prodl,??_addEvent
 38366   006502  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38367   006506  51E2               	movf	addEvent@e& (0+255),w,b
 38368   006508  27DC               	addwf	??_addEvent& (0+255),f,b
 38369   00650A  0E00               	movlw	0
 38370   00650C  23DD               	addwfc	(??_addEvent+1)& (0+255),f,b
 38371   00650E  0E86               	movlw	134
 38372   006510  25DC               	addwf	??_addEvent& (0+255),w,b
 38373   006512  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38374   006514  0EEF               	movlw	239
 38375   006516  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38376   006518  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38377   00651A  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38378   00651E  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38379   006522  0100               	movlb	0	; () banked
 38380   006524  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38381   006526  0E00               	movlw	0
 38382   006528  6FA7               	movwf	writeNVM@value& (0+255),b
 38383   00652A  0E01               	movlw	1
 38384   00652C  EC52  F05B         	call	_writeNVM
 38385                           
 38386                           ;../../VLCBlib_PIC/event_teach_large.c: 969:                 }
 38387   006530  0101               	movlb	1	; () banked
 38388   006532  2BE2               	incf	addEvent@e& (0+255),f,b
 38389                           
 38390                           ; BSR set to: 1
 38391   006534  0E09               	movlw	9
 38392   006536  65E2               	cpfsgt	addEvent@e& (0+255),b
 38393   006538  D7E0               	goto	l19351
 38394                           
 38395                           ; BSR set to: 1
 38396                           ;../../VLCBlib_PIC/event_teach_large.c: 970:                 error = 0;
 38397   00653A  0E00               	movlw	0
 38398   00653C  6FE0               	movwf	addEvent@error& (0+255),b
 38399                           
 38400                           ;../../VLCBlib_PIC/event_teach_large.c: 971:                 break;
 38401   00653E  D004               	goto	u19380
 38402   006540                     l19359:
 38403                           
 38404                           ; BSR set to: 1
 38405                           ;../../VLCBlib_PIC/event_teach_large.c: 973:         }
 38406   006540  2BE3               	incf	addEvent@tableIndex& (0+255),f,b
 38407                           
 38408                           ; BSR set to: 1
 38409   006542  29E3               	incf	addEvent@tableIndex& (0+255),w,b
 38410   006544  A4D8               	btfss	status,2,c
 38411   006546  D72C               	goto	l19333
 38412   006548                     u19380:
 38413                           
 38414                           ; BSR set to: 1
 38415                           ;../../VLCBlib_PIC/event_teach_large.c: 974:         if (error) {
 38416   006548  51E0               	movf	addEvent@error& (0+255),w,b
 38417   00654A  B4D8               	btfsc	status,2,c
 38418   00654C  D002               	goto	l19369
 38419                           
 38420                           ; BSR set to: 1
 38421                           ;../../VLCBlib_PIC/event_teach_large.c: 975:             return CMDERR_TOO_MANY_EVENTS;
 38422   00654E  0E04               	movlw	4
 38423   006550  0012               	return	
 38424   006552                     l19369:
 38425                           
 38426                           ; BSR set to: 1
 38427                           ;../../VLCBlib_PIC/event_teach_large.c: 979:     if (writeEv(tableIndex, evNum, evVal)) 
      +                          {
 38428   006552  C1D9  F1C9         	movff	addEvent@evNum,writeEv@evNum
 38429   006556  C1DA  F1CA         	movff	addEvent@evVal,writeEv@evVal
 38430   00655A  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38431   00655C  ECC4  F018         	call	_writeEv
 38432   006560  0900               	iorlw	0
 38433   006562  B4D8               	btfsc	status,2,c
 38434   006564  D002               	goto	l19375
 38435                           
 38436                           ;../../VLCBlib_PIC/event_teach_large.c: 981:         return CMDERR_INV_EV_IDX;
 38437   006566  0E06               	movlw	6
 38438   006568  0012               	return	
 38439   00656A                     l19375:
 38440                           
 38441                           ;../../VLCBlib_PIC/event_teach_large.c: 984:     flushFlashBlock();
 38442   00656A  EC8D  F052         	call	_flushFlashBlock	;wreg free
 38443                           
 38444                           ;../../VLCBlib_PIC/event_teach_large.c: 986:     rebuildHashtable();
 38445   00656E  EC40  F03E         	call	_rebuildHashtable	;wreg free
 38446   006572  D710               	goto	u19340
 38447   006574                     __end_of_addEvent:
 38448                           	callstack 0
 38449                           
 38450 ;; *************** function _writeEv *****************
 38451 ;; Defined at:
 38452 ;;		line 1038 in file "../../VLCBlib_PIC/event_teach_large.c"
 38453 ;; Parameters:    Size  Location     Type
 38454 ;;  tableIndex      1    wreg     unsigned char 
 38455 ;;  evNum           1   17[BANK1 ] unsigned char 
 38456 ;;  evVal           1   18[BANK1 ] unsigned char 
 38457 ;; Auto vars:     Size  Location     Type
 38458 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 38459 ;;  e               1   25[BANK1 ] unsigned char 
 38460 ;;  nextF           1   24[BANK1 ] struct .
 38461 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 38462 ;;  f               1   26[BANK1 ] struct .
 38463 ;;  startIndex      1   23[BANK1 ] unsigned char 
 38464 ;; Return value:  Size  Location     Type
 38465 ;;                  1    wreg      unsigned char 
 38466 ;; Registers used:
 38467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38468 ;; Tracked objects:
 38469 ;;		On entry : 0/0
 38470 ;;		On exit  : 0/0
 38471 ;;		Unchanged: 0/0
 38472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38473 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38474 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38475 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38476 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38477 ;;Total ram usage:       12 bytes
 38478 ;; Hardware stack levels used: 1
 38479 ;; Hardware stack levels required when called: 20
 38480 ;; This function calls:
 38481 ;;		_checkRemoveTableEntry
 38482 ;;		_readNVM
 38483 ;;		_writeNVM
 38484 ;; This function is called by:
 38485 ;;		_deleteActionRange
 38486 ;;		_APP_addEvent
 38487 ;;		_addEvent
 38488 ;;		_deleteHappeningRange
 38489 ;; This function uses a non-reentrant model
 38490 ;;
 38491                           
 38492                           	psect	text164
 38493   003188                     __ptext164:
 38494                           	callstack 0
 38495   003188                     _writeEv:
 38496                           	callstack 6
 38497                           
 38498                           ;incstack = 0
 38499                           ;writeEv@tableIndex stored from wreg
 38500   003188  0101               	movlb	1	; () banked
 38501   00318A  6FD3               	movwf	writeEv@tableIndex& (0+255),b
 38502                           
 38503                           ;../../VLCBlib_PIC/event_teach_large.c: 1039:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1040:     uint8_t startIndex = tableIndex;
 38504   00318C  C1D3  F1CF         	movff	writeEv@tableIndex,writeEv@startIndex
 38505                           
 38506                           ;../../VLCBlib_PIC/event_teach_large.c: 1041:     if (evNum >= 20) {
 38507   003190  0E13               	movlw	19
 38508   003192  0101               	movlb	1	; () banked
 38509   003194  65C9               	cpfsgt	writeEv@evNum& (0+255),b
 38510   003196  D14F               	goto	l19017
 38511                           
 38512                           ; BSR set to: 1
 38513                           ;../../VLCBlib_PIC/event_teach_large.c: 1042:         return CMDERR_INV_EV_IDX;
 38514   003198  0E06               	movlw	6
 38515   00319A  0012               	return	
 38516   00319C                     l18955:
 38517                           
 38518                           ; BSR set to: 1
 38519                           ;../../VLCBlib_PIC/event_teach_large.c: 1045:         uint8_t nextIdx;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1048:         evNum -= 10;
 38520   00319C  0E0A               	movlw	10
 38521   00319E  5FC9               	subwf	writeEv@evNum& (0+255),f,b
 38522                           
 38523                           ; BSR set to: 1
 38524                           ;../../VLCBlib_PIC/event_teach_large.c: 1049:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 38525   0031A0  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38526   0031A2  6FCB               	movwf	??_writeEv& (0+255),b
 38527   0031A4  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38528   0031A6  3BCB               	swapf	??_writeEv& (0+255),f,b
 38529   0031A8  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38530   0031AA  0EF0               	movlw	240
 38531   0031AC  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38532   0031AE  51CB               	movf	??_writeEv& (0+255),w,b
 38533   0031B0  0B0F               	andlw	15
 38534   0031B2  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38535   0031B4  0EF0               	movlw	240
 38536   0031B6  17CB               	andwf	??_writeEv& (0+255),f,b
 38537   0031B8  0E80               	movlw	128
 38538   0031BA  25CB               	addwf	??_writeEv& (0+255),w,b
 38539   0031BC  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38540   0031BE  0EEF               	movlw	239
 38541   0031C0  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38542   0031C2  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38543   0031C4  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38544   0031C8  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38545   0031CC  0100               	movlb	0	; () banked
 38546   0031CE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38547   0031D0  0E01               	movlw	1
 38548   0031D2  ECC2  F058         	call	_readNVM
 38549   0031D6  0100               	movlb	0	; () banked
 38550   0031D8  5191               	movf	?_readNVM& (0+255),w,b
 38551   0031DA  0101               	movlb	1	; () banked
 38552   0031DC  6FD2               	movwf	writeEv@f& (0+255),b
 38553                           
 38554                           ; BSR set to: 1
 38555                           ;../../VLCBlib_PIC/event_teach_large.c: 1051:         if (f.continued) {
 38556   0031DE  A9D2               	btfss	writeEv@f& (0+255),4,b
 38557   0031E0  D01E               	goto	l18969
 38558                           
 38559                           ; BSR set to: 1
 38560                           ;../../VLCBlib_PIC/event_teach_large.c: 1052:             tableIndex = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 38561   0031E2  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38562   0031E4  0D10               	mullw	16
 38563   0031E6  CFF3 F1CB          	movff	prodl,??_writeEv
 38564   0031EA  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38565   0031EE  0E81               	movlw	129
 38566   0031F0  25CB               	addwf	??_writeEv& (0+255),w,b
 38567   0031F2  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38568   0031F4  0EEF               	movlw	239
 38569   0031F6  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38570   0031F8  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38571   0031FA  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38572   0031FE  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38573   003202  0100               	movlb	0	; () banked
 38574   003204  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38575   003206  0E01               	movlw	1
 38576   003208  ECC2  F058         	call	_readNVM
 38577   00320C  0100               	movlb	0	; () banked
 38578   00320E  5191               	movf	?_readNVM& (0+255),w,b
 38579   003210  0101               	movlb	1	; () banked
 38580   003212  6FD3               	movwf	writeEv@tableIndex& (0+255),b
 38581                           
 38582                           ; BSR set to: 1
 38583                           ;../../VLCBlib_PIC/event_teach_large.c: 1053:             if (tableIndex == 0xff) {
 38584   003214  29D3               	incf	writeEv@tableIndex& (0+255),w,b
 38585   003216  A4D8               	btfss	status,2,c
 38586   003218  D10E               	goto	l19017
 38587                           
 38588                           ; BSR set to: 1
 38589                           ;../../VLCBlib_PIC/event_teach_large.c: 1054:                 return CMDERR_INVALID_EVEN
      +                          T;
 38590   00321A  0E07               	movlw	7
 38591   00321C  0012               	return	
 38592   00321E                     l18969:
 38593                           
 38594                           ; BSR set to: 1
 38595                           ;../../VLCBlib_PIC/event_teach_large.c: 1063:             if (evVal == 0) {
 38596   00321E  51CA               	movf	writeEv@evVal& (0+255),w,b
 38597   003220  A4D8               	btfss	status,2,c
 38598   003222  D002               	goto	l18975
 38599   003224                     u18800:
 38600                           
 38601                           ;../../VLCBlib_PIC/event_teach_large.c: 1064:                 return 0;
 38602   003224  0E00               	movlw	0
 38603   003226  0012               	return	
 38604   003228                     l18975:
 38605                           
 38606                           ; BSR set to: 1
 38607                           ;../../VLCBlib_PIC/event_teach_large.c: 1067:             for (nextIdx = tableIndex+1 ; 
      +                          nextIdx < 255; nextIdx++) {
 38608   003228  29D3               	incf	writeEv@tableIndex& (0+255),w,b
 38609   00322A  6FD4               	movwf	writeEv@nextIdx& (0+255),b
 38610   00322C  D0FB               	goto	l19009
 38611   00322E                     l18979:
 38612                           
 38613                           ; BSR set to: 1
 38614                           ;../../VLCBlib_PIC/event_teach_large.c: 1068:                 EventTableFlags nextF;;../
      +                          ../VLCBlib_PIC/event_teach_large.c: 1069:                 nextF.asByte = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+0);
 38615   00322E  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38616   003230  6FCB               	movwf	??_writeEv& (0+255),b
 38617   003232  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38618   003234  3BCB               	swapf	??_writeEv& (0+255),f,b
 38619   003236  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38620   003238  0EF0               	movlw	240
 38621   00323A  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38622   00323C  51CB               	movf	??_writeEv& (0+255),w,b
 38623   00323E  0B0F               	andlw	15
 38624   003240  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38625   003242  0EF0               	movlw	240
 38626   003244  17CB               	andwf	??_writeEv& (0+255),f,b
 38627   003246  0E80               	movlw	128
 38628   003248  25CB               	addwf	??_writeEv& (0+255),w,b
 38629   00324A  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38630   00324C  0EEF               	movlw	239
 38631   00324E  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38632   003250  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38633   003252  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38634   003256  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38635   00325A  0100               	movlb	0	; () banked
 38636   00325C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38637   00325E  0E01               	movlw	1
 38638   003260  ECC2  F058         	call	_readNVM
 38639   003264  0100               	movlb	0	; () banked
 38640   003266  5191               	movf	?_readNVM& (0+255),w,b
 38641   003268  0101               	movlb	1	; () banked
 38642   00326A  6FD0               	movwf	writeEv@nextF& (0+255),b
 38643                           
 38644                           ; BSR set to: 1
 38645                           ;../../VLCBlib_PIC/event_teach_large.c: 1070:                 if (nextF.freeEntry) {
 38646   00326C  AFD0               	btfss	writeEv@nextF& (0+255),7,b
 38647   00326E  D0D9               	goto	l19007
 38648                           
 38649                           ; BSR set to: 1
 38650                           ;../../VLCBlib_PIC/event_teach_large.c: 1071:                     uint8_t e;;../../VLCBl
      +                          ib_PIC/event_teach_large.c: 1073:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*nextIdx+2, 0xff);
 38651   003270  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38652   003272  0D10               	mullw	16
 38653   003274  CFF3 F1CB          	movff	prodl,??_writeEv
 38654   003278  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38655   00327C  0E82               	movlw	130
 38656   00327E  25CB               	addwf	??_writeEv& (0+255),w,b
 38657   003280  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38658   003282  0EEF               	movlw	239
 38659   003284  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38660   003286  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38661   003288  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38662   00328C  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38663   003290  0100               	movlb	0	; () banked
 38664   003292  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38665   003294  0EFF               	movlw	255
 38666   003296  6FA7               	movwf	writeNVM@value& (0+255),b
 38667   003298  0E01               	movlw	1
 38668   00329A  EC52  F05B         	call	_writeNVM
 38669                           
 38670                           ;../../VLCBlib_PIC/event_teach_large.c: 1074:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+2 +1, 0xff);
 38671   00329E  0101               	movlb	1	; () banked
 38672   0032A0  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38673   0032A2  0D10               	mullw	16
 38674   0032A4  CFF3 F1CB          	movff	prodl,??_writeEv
 38675   0032A8  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38676   0032AC  0E83               	movlw	131
 38677   0032AE  25CB               	addwf	??_writeEv& (0+255),w,b
 38678   0032B0  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38679   0032B2  0EEF               	movlw	239
 38680   0032B4  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38681   0032B6  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38682   0032B8  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38683   0032BC  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38684   0032C0  0100               	movlb	0	; () banked
 38685   0032C2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38686   0032C4  0EFF               	movlw	255
 38687   0032C6  6FA7               	movwf	writeNVM@value& (0+255),b
 38688   0032C8  0E01               	movlw	1
 38689   0032CA  EC52  F05B         	call	_writeNVM
 38690                           
 38691                           ;../../VLCBlib_PIC/event_teach_large.c: 1075:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4, 0xff);
 38692   0032CE  0101               	movlb	1	; () banked
 38693   0032D0  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38694   0032D2  0D10               	mullw	16
 38695   0032D4  CFF3 F1CB          	movff	prodl,??_writeEv
 38696   0032D8  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38697   0032DC  0E84               	movlw	132
 38698   0032DE  25CB               	addwf	??_writeEv& (0+255),w,b
 38699   0032E0  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38700   0032E2  0EEF               	movlw	239
 38701   0032E4  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38702   0032E6  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38703   0032E8  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38704   0032EC  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38705   0032F0  0100               	movlb	0	; () banked
 38706   0032F2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38707   0032F4  0EFF               	movlw	255
 38708   0032F6  6FA7               	movwf	writeNVM@value& (0+255),b
 38709   0032F8  0E01               	movlw	1
 38710   0032FA  EC52  F05B         	call	_writeNVM
 38711                           
 38712                           ;../../VLCBlib_PIC/event_teach_large.c: 1076:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4 +1, 0xff);
 38713   0032FE  0101               	movlb	1	; () banked
 38714   003300  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38715   003302  0D10               	mullw	16
 38716   003304  CFF3 F1CB          	movff	prodl,??_writeEv
 38717   003308  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38718   00330C  0E85               	movlw	133
 38719   00330E  25CB               	addwf	??_writeEv& (0+255),w,b
 38720   003310  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38721   003312  0EEF               	movlw	239
 38722   003314  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38723   003316  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38724   003318  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38725   00331C  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38726   003320  0100               	movlb	0	; () banked
 38727   003322  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38728   003324  0EFF               	movlw	255
 38729   003326  6FA7               	movwf	writeNVM@value& (0+255),b
 38730   003328  0E01               	movlw	1
 38731   00332A  EC52  F05B         	call	_writeNVM
 38732                           
 38733                           ;../../VLCBlib_PIC/event_teach_large.c: 1077:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+0, 0x20);
 38734   00332E  0101               	movlb	1	; () banked
 38735   003330  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38736   003332  6FCB               	movwf	??_writeEv& (0+255),b
 38737   003334  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38738   003336  3BCB               	swapf	??_writeEv& (0+255),f,b
 38739   003338  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38740   00333A  0EF0               	movlw	240
 38741   00333C  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38742   00333E  51CB               	movf	??_writeEv& (0+255),w,b
 38743   003340  0B0F               	andlw	15
 38744   003342  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38745   003344  0EF0               	movlw	240
 38746   003346  17CB               	andwf	??_writeEv& (0+255),f,b
 38747   003348  0E80               	movlw	128
 38748   00334A  25CB               	addwf	??_writeEv& (0+255),w,b
 38749   00334C  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38750   00334E  0EEF               	movlw	239
 38751   003350  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38752   003352  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38753   003354  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38754   003358  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38755   00335C  0100               	movlb	0	; () banked
 38756   00335E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38757   003360  0E20               	movlw	32
 38758   003362  6FA7               	movwf	writeNVM@value& (0+255),b
 38759   003364  0E01               	movlw	1
 38760   003366  EC52  F05B         	call	_writeNVM
 38761                           
 38762                           ;../../VLCBlib_PIC/event_teach_large.c: 1078:                     for (e = 0; e < 10; e+
      +                          +) {
 38763   00336A  0E00               	movlw	0
 38764   00336C  0101               	movlb	1	; () banked
 38765   00336E  6FD1               	movwf	writeEv@e& (0+255),b
 38766   003370                     l18993:
 38767                           
 38768                           ; BSR set to: 1
 38769                           ;../../VLCBlib_PIC/event_teach_large.c: 1079:                         writeNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*nextIdx+6 +e, 0);
 38770   003370  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38771   003372  0D10               	mullw	16
 38772   003374  CFF3 F1CB          	movff	prodl,??_writeEv
 38773   003378  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38774   00337C  51D1               	movf	writeEv@e& (0+255),w,b
 38775   00337E  27CB               	addwf	??_writeEv& (0+255),f,b
 38776   003380  0E00               	movlw	0
 38777   003382  23CC               	addwfc	(??_writeEv+1)& (0+255),f,b
 38778   003384  0E86               	movlw	134
 38779   003386  25CB               	addwf	??_writeEv& (0+255),w,b
 38780   003388  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38781   00338A  0EEF               	movlw	239
 38782   00338C  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38783   00338E  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38784   003390  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38785   003394  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38786   003398  0100               	movlb	0	; () banked
 38787   00339A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38788   00339C  0E00               	movlw	0
 38789   00339E  6FA7               	movwf	writeNVM@value& (0+255),b
 38790   0033A0  0E01               	movlw	1
 38791   0033A2  EC52  F05B         	call	_writeNVM
 38792                           
 38793                           ;../../VLCBlib_PIC/event_teach_large.c: 1080:                     }
 38794   0033A6  0101               	movlb	1	; () banked
 38795   0033A8  2BD1               	incf	writeEv@e& (0+255),f,b
 38796                           
 38797                           ; BSR set to: 1
 38798   0033AA  0E09               	movlw	9
 38799   0033AC  65D1               	cpfsgt	writeEv@e& (0+255),b
 38800   0033AE  D7E0               	goto	l18993
 38801                           
 38802                           ; BSR set to: 1
 38803                           ;../../VLCBlib_PIC/event_teach_large.c: 1082:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+1, nextIdx);
 38804   0033B0  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38805   0033B2  0D10               	mullw	16
 38806   0033B4  CFF3 F1CB          	movff	prodl,??_writeEv
 38807   0033B8  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38808   0033BC  0E81               	movlw	129
 38809   0033BE  25CB               	addwf	??_writeEv& (0+255),w,b
 38810   0033C0  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38811   0033C2  0EEF               	movlw	239
 38812   0033C4  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38813   0033C6  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38814   0033C8  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38815   0033CC  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38816   0033D0  0100               	movlb	0	; () banked
 38817   0033D2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38818   0033D4  C1D4  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 38819   0033D8  0E01               	movlw	1
 38820   0033DA  EC52  F05B         	call	_writeNVM
 38821                           
 38822                           ;../../VLCBlib_PIC/event_teach_large.c: 1084:                     f.continued = 1;
 38823   0033DE  0101               	movlb	1	; () banked
 38824   0033E0  89D2               	bsf	writeEv@f& (0+255),4,b
 38825                           
 38826                           ; BSR set to: 1
 38827                           ;../../VLCBlib_PIC/event_teach_large.c: 1085:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0, f.asByte);
 38828   0033E2  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38829   0033E4  6FCB               	movwf	??_writeEv& (0+255),b
 38830   0033E6  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38831   0033E8  3BCB               	swapf	??_writeEv& (0+255),f,b
 38832   0033EA  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38833   0033EC  0EF0               	movlw	240
 38834   0033EE  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38835   0033F0  51CB               	movf	??_writeEv& (0+255),w,b
 38836   0033F2  0B0F               	andlw	15
 38837   0033F4  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38838   0033F6  0EF0               	movlw	240
 38839   0033F8  17CB               	andwf	??_writeEv& (0+255),f,b
 38840   0033FA  0E80               	movlw	128
 38841   0033FC  25CB               	addwf	??_writeEv& (0+255),w,b
 38842   0033FE  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38843   003400  0EEF               	movlw	239
 38844   003402  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38845   003404  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38846   003406  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38847   00340A  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38848   00340E  0100               	movlb	0	; () banked
 38849   003410  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38850   003412  C1D2  F0A7         	movff	writeEv@f,writeNVM@value
 38851   003416  0E01               	movlw	1
 38852   003418  EC52  F05B         	call	_writeNVM
 38853                           
 38854                           ;../../VLCBlib_PIC/event_teach_large.c: 1086:                     tableIndex = nextIdx;
 38855   00341C  C1D4  F1D3         	movff	writeEv@nextIdx,writeEv@tableIndex
 38856                           
 38857                           ;../../VLCBlib_PIC/event_teach_large.c: 1087:                     break;
 38858   003420  D004               	goto	u18840
 38859   003422                     l19007:
 38860                           
 38861                           ; BSR set to: 1
 38862                           ;../../VLCBlib_PIC/event_teach_large.c: 1089:             }
 38863   003422  2BD4               	incf	writeEv@nextIdx& (0+255),f,b
 38864   003424                     l19009:
 38865                           
 38866                           ; BSR set to: 1
 38867   003424  29D4               	incf	writeEv@nextIdx& (0+255),w,b
 38868   003426  A4D8               	btfss	status,2,c
 38869   003428  D702               	goto	l18979
 38870   00342A                     u18840:
 38871                           
 38872                           ;../../VLCBlib_PIC/event_teach_large.c: 1090:             if (nextIdx >= 255) {
 38873   00342A  0101               	movlb	1	; () banked
 38874   00342C  29D4               	incf	writeEv@nextIdx& (0+255),w,b
 38875   00342E  A4D8               	btfss	status,2,c
 38876   003430  D002               	goto	l19017
 38877                           
 38878                           ; BSR set to: 1
 38879                           ;../../VLCBlib_PIC/event_teach_large.c: 1092:                 return CMDERR_TOO_MANY_EVE
      +                          NTS;
 38880   003432  0E04               	movlw	4
 38881   003434  0012               	return	
 38882   003436                     l19017:
 38883                           
 38884                           ; BSR set to: 1
 38885                           ;../../VLCBlib_PIC/event_teach_large.c: 1044:     while (evNum >= 10) {
 38886   003436  0E0A               	movlw	10
 38887   003438  61C9               	cpfslt	writeEv@evNum& (0+255),b
 38888   00343A  D6B0               	goto	l18955
 38889                           
 38890                           ; BSR set to: 1
 38891                           ;../../VLCBlib_PIC/event_teach_large.c: 1097:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*t
      +                          ableIndex+6 +evNum, evVal);
 38892   00343C  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38893   00343E  0D10               	mullw	16
 38894   003440  CFF3 F1CB          	movff	prodl,??_writeEv
 38895   003444  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38896   003448  51C9               	movf	writeEv@evNum& (0+255),w,b
 38897   00344A  27CB               	addwf	??_writeEv& (0+255),f,b
 38898   00344C  0E00               	movlw	0
 38899   00344E  23CC               	addwfc	(??_writeEv+1)& (0+255),f,b
 38900   003450  0E86               	movlw	134
 38901   003452  25CB               	addwf	??_writeEv& (0+255),w,b
 38902   003454  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38903   003456  0EEF               	movlw	239
 38904   003458  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38905   00345A  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38906   00345C  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38907   003460  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38908   003464  0100               	movlb	0	; () banked
 38909   003466  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38910   003468  C1CA  F0A7         	movff	writeEv@evVal,writeNVM@value
 38911   00346C  0E01               	movlw	1
 38912   00346E  EC52  F05B         	call	_writeNVM
 38913                           
 38914                           ;../../VLCBlib_PIC/event_teach_large.c: 1099:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 38915   003472  0101               	movlb	1	; () banked
 38916   003474  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38917   003476  6FCB               	movwf	??_writeEv& (0+255),b
 38918   003478  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38919   00347A  3BCB               	swapf	??_writeEv& (0+255),f,b
 38920   00347C  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38921   00347E  0EF0               	movlw	240
 38922   003480  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38923   003482  51CB               	movf	??_writeEv& (0+255),w,b
 38924   003484  0B0F               	andlw	15
 38925   003486  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38926   003488  0EF0               	movlw	240
 38927   00348A  17CB               	andwf	??_writeEv& (0+255),f,b
 38928   00348C  0E80               	movlw	128
 38929   00348E  25CB               	addwf	??_writeEv& (0+255),w,b
 38930   003490  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38931   003492  0EEF               	movlw	239
 38932   003494  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38933   003496  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38934   003498  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38935   00349C  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38936   0034A0  0100               	movlb	0	; () banked
 38937   0034A2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38938   0034A4  0E01               	movlw	1
 38939   0034A6  ECC2  F058         	call	_readNVM
 38940   0034AA  0100               	movlb	0	; () banked
 38941   0034AC  5191               	movf	?_readNVM& (0+255),w,b
 38942   0034AE  0101               	movlb	1	; () banked
 38943   0034B0  6FD2               	movwf	writeEv@f& (0+255),b
 38944                           
 38945                           ; BSR set to: 1
 38946                           ;../../VLCBlib_PIC/event_teach_large.c: 1100:     if (f.eVsUsed <= evNum) {
 38947   0034B2  51D2               	movf	writeEv@f& (0+255),w,b
 38948   0034B4  0B0F               	andlw	15
 38949   0034B6  6FCB               	movwf	??_writeEv& (0+255),b
 38950   0034B8  51CB               	movf	??_writeEv& (0+255),w,b
 38951   0034BA  5DC9               	subwf	writeEv@evNum& (0+255),w,b
 38952   0034BC  A0D8               	btfss	status,0,c
 38953   0034BE  D026               	goto	l19029
 38954                           
 38955                           ; BSR set to: 1
 38956                           ;../../VLCBlib_PIC/event_teach_large.c: 1101:         f.eVsUsed = evNum+1U;
 38957   0034C0  C1C9  F1CB         	movff	writeEv@evNum,??_writeEv
 38958   0034C4  0E01               	movlw	1
 38959   0034C6  27CB               	addwf	??_writeEv& (0+255),f,b
 38960   0034C8  51D2               	movf	writeEv@f& (0+255),w,b
 38961   0034CA  19CB               	xorwf	??_writeEv& (0+255),w,b
 38962   0034CC  0BF0               	andlw	-16
 38963   0034CE  19CB               	xorwf	??_writeEv& (0+255),w,b
 38964   0034D0  6FD2               	movwf	writeEv@f& (0+255),b
 38965                           
 38966                           ; BSR set to: 1
 38967                           ;../../VLCBlib_PIC/event_teach_large.c: 1102:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*tableIndex+0, f.asByte);
 38968   0034D2  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38969   0034D4  6FCB               	movwf	??_writeEv& (0+255),b
 38970   0034D6  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38971   0034D8  3BCB               	swapf	??_writeEv& (0+255),f,b
 38972   0034DA  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38973   0034DC  0EF0               	movlw	240
 38974   0034DE  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38975   0034E0  51CB               	movf	??_writeEv& (0+255),w,b
 38976   0034E2  0B0F               	andlw	15
 38977   0034E4  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38978   0034E6  0EF0               	movlw	240
 38979   0034E8  17CB               	andwf	??_writeEv& (0+255),f,b
 38980   0034EA  0E80               	movlw	128
 38981   0034EC  25CB               	addwf	??_writeEv& (0+255),w,b
 38982   0034EE  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38983   0034F0  0EEF               	movlw	239
 38984   0034F2  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38985   0034F4  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38986   0034F6  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38987   0034FA  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38988   0034FE  0100               	movlb	0	; () banked
 38989   003500  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38990   003502  C1D2  F0A7         	movff	writeEv@f,writeNVM@value
 38991   003506  0E01               	movlw	1
 38992   003508  EC52  F05B         	call	_writeNVM
 38993   00350C                     l19029:
 38994                           
 38995                           ;../../VLCBlib_PIC/event_teach_large.c: 1105:     if (evVal == 0) {
 38996   00350C  0101               	movlb	1	; () banked
 38997   00350E  51CA               	movf	writeEv@evVal& (0+255),w,b
 38998   003510  A4D8               	btfss	status,2,c
 38999   003512  D688               	goto	u18800
 39000                           
 39001                           ; BSR set to: 1
 39002                           ;../../VLCBlib_PIC/event_teach_large.c: 1106:         checkRemoveTableEntry(startIndex);
 39003   003514  51CF               	movf	writeEv@startIndex& (0+255),w,b
 39004   003516  EC58  F05C         	call	_checkRemoveTableEntry
 39005   00351A  D684               	goto	u18800
 39006   00351C                     __end_of_writeEv:
 39007                           	callstack 0
 39008                           
 39009 ;; *************** function _checkRemoveTableEntry *****************
 39010 ;; Defined at:
 39011 ;;		line 907 in file "../../VLCBlib_PIC/event_teach_large.c"
 39012 ;; Parameters:    Size  Location     Type
 39013 ;;  tableIndex      1    wreg     unsigned char 
 39014 ;; Auto vars:     Size  Location     Type
 39015 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 39016 ;;  e               1   16[BANK1 ] unsigned char 
 39017 ;; Return value:  Size  Location     Type
 39018 ;;                  1    wreg      void 
 39019 ;; Registers used:
 39020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39021 ;; Tracked objects:
 39022 ;;		On entry : 0/0
 39023 ;;		On exit  : 0/0
 39024 ;;		Unchanged: 0/0
 39025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39027 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39029 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39030 ;;Total ram usage:        2 bytes
 39031 ;; Hardware stack levels used: 1
 39032 ;; Hardware stack levels required when called: 19
 39033 ;; This function calls:
 39034 ;;		_getEVs
 39035 ;;		_removeTableEntry
 39036 ;;		_validStart
 39037 ;; This function is called by:
 39038 ;;		_deleteActionRange
 39039 ;;		_APP_addEvent
 39040 ;;		_writeEv
 39041 ;;		_deleteHappeningRange
 39042 ;; This function uses a non-reentrant model
 39043 ;;
 39044                           
 39045                           	psect	text165
 39046   00B8B0                     __ptext165:
 39047                           	callstack 0
 39048   00B8B0                     _checkRemoveTableEntry:
 39049                           	callstack 6
 39050                           
 39051                           ;incstack = 0
 39052                           ;checkRemoveTableEntry@tableIndex stored from wreg
 39053   00B8B0  0101               	movlb	1	; () banked
 39054   00B8B2  6FC7               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 39055                           
 39056                           ;../../VLCBlib_PIC/event_teach_large.c: 908:     uint8_t e;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 910:     if ( validStart(tableIndex)) {
 39057   00B8B4  0101               	movlb	1	; () banked
 39058   00B8B6  51C7               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39059   00B8B8  EC2B  F05B         	call	_validStart
 39060   00B8BC  0900               	iorlw	0
 39061   00B8BE  B4D8               	btfsc	status,2,c
 39062   00B8C0  0012               	return	
 39063                           
 39064                           ;../../VLCBlib_PIC/event_teach_large.c: 911:         if (getEVs(tableIndex)) {
 39065   00B8C2  0101               	movlb	1	; () banked
 39066   00B8C4  51C7               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39067   00B8C6  EC5F  F040         	call	_getEVs
 39068   00B8CA  0900               	iorlw	0
 39069   00B8CC  A4D8               	btfss	status,2,c
 39070   00B8CE  0012               	return	
 39071                           
 39072                           ;../../VLCBlib_PIC/event_teach_large.c: 914:         for (e=0; e<20; e++) {
 39073   00B8D0  0E00               	movlw	0
 39074   00B8D2  0101               	movlb	1	; () banked
 39075   00B8D4  6FC8               	movwf	checkRemoveTableEntry@e& (0+255),b
 39076   00B8D6                     l18867:
 39077                           
 39078                           ; BSR set to: 1
 39079                           ;../../VLCBlib_PIC/event_teach_large.c: 915:             if (evs[e] != 0) {
 39080   00B8D6  0E40               	movlw	low _evs
 39081   00B8D8  25C8               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 39082   00B8DA  6ED9               	movwf	fsr2l,c
 39083   00B8DC  6ADA               	clrf	fsr2h,c
 39084   00B8DE  0E02               	movlw	high _evs
 39085   00B8E0  22DA               	addwfc	fsr2h,f,c
 39086   00B8E2  50DF               	movf	indf2,w,c
 39087   00B8E4  A4D8               	btfss	status,2,c
 39088   00B8E6  0012               	return	
 39089                           
 39090                           ; BSR set to: 1
 39091                           ;../../VLCBlib_PIC/event_teach_large.c: 918:         }
 39092   00B8E8  2BC8               	incf	checkRemoveTableEntry@e& (0+255),f,b
 39093                           
 39094                           ; BSR set to: 1
 39095   00B8EA  0E13               	movlw	19
 39096   00B8EC  65C8               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 39097   00B8EE  D7F3               	goto	l18867
 39098                           
 39099                           ; BSR set to: 1
 39100                           ;../../VLCBlib_PIC/event_teach_large.c: 919:         removeTableEntry(tableIndex);
 39101   00B8F0  51C7               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39102   00B8F2  EC62  F03C         	call	_removeTableEntry
 39103   00B8F6  0012               	return		;funcret
 39104   00B8F8                     __end_of_checkRemoveTableEntry:
 39105                           	callstack 0
 39106                           
 39107 ;; *************** function _removeTableEntry *****************
 39108 ;; Defined at:
 39109 ;;		line 871 in file "../../VLCBlib_PIC/event_teach_large.c"
 39110 ;; Parameters:    Size  Location     Type
 39111 ;;  tableIndex      1    wreg     unsigned char 
 39112 ;; Auto vars:     Size  Location     Type
 39113 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 39114 ;;  f               1   13[BANK1 ] struct .
 39115 ;; Return value:  Size  Location     Type
 39116 ;;                  1    wreg      unsigned char 
 39117 ;; Registers used:
 39118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39119 ;; Tracked objects:
 39120 ;;		On entry : 0/0
 39121 ;;		On exit  : 0/0
 39122 ;;		Unchanged: 0/0
 39123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39125 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39126 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39127 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39128 ;;Total ram usage:        6 bytes
 39129 ;; Hardware stack levels used: 1
 39130 ;; Hardware stack levels required when called: 18
 39131 ;; This function calls:
 39132 ;;		_flushFlashBlock
 39133 ;;		_readNVM
 39134 ;;		_rebuildHashtable
 39135 ;;		_validStart
 39136 ;;		_writeNVM
 39137 ;; This function is called by:
 39138 ;;		_removeEvent
 39139 ;;		_checkRemoveTableEntry
 39140 ;; This function uses a non-reentrant model
 39141 ;;
 39142                           
 39143                           	psect	text166
 39144   0078C4                     __ptext166:
 39145                           	callstack 0
 39146   0078C4                     _removeTableEntry:
 39147                           	callstack 8
 39148                           
 39149                           ;incstack = 0
 39150                           ;removeTableEntry@tableIndex stored from wreg
 39151   0078C4  0101               	movlb	1	; () banked
 39152   0078C6  6FC6               	movwf	removeTableEntry@tableIndex& (0+255),b
 39153                           
 39154                           ;../../VLCBlib_PIC/event_teach_large.c: 872:     EventTableFlags f;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 877:     if (validStart(tableIndex)) {
 39155   0078C8  0101               	movlb	1	; () banked
 39156   0078CA  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39157   0078CC  EC2B  F05B         	call	_validStart
 39158   0078D0  0900               	iorlw	0
 39159   0078D2  B4D8               	btfsc	status,2,c
 39160   0078D4  D09F               	goto	l18851
 39161                           
 39162                           ;../../VLCBlib_PIC/event_teach_large.c: 878:         f.asByte = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+0);
 39163   0078D6  0101               	movlb	1	; () banked
 39164   0078D8  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39165   0078DA  6FC1               	movwf	??_removeTableEntry& (0+255),b
 39166   0078DC  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 39167   0078DE  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 39168   0078E0  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39169   0078E2  0EF0               	movlw	240
 39170   0078E4  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39171   0078E6  51C1               	movf	??_removeTableEntry& (0+255),w,b
 39172   0078E8  0B0F               	andlw	15
 39173   0078EA  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39174   0078EC  0EF0               	movlw	240
 39175   0078EE  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 39176   0078F0  0E80               	movlw	128
 39177   0078F2  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 39178   0078F4  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 39179   0078F6  0EEF               	movlw	239
 39180   0078F8  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39181   0078FA  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 39182   0078FC  C1C3  F091         	movff	??_removeTableEntry+2,readNVM@index
 39183   007900  C1C4  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39184   007904  0100               	movlb	0	; () banked
 39185   007906  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39186   007908  0E01               	movlw	1
 39187   00790A  ECC2  F058         	call	_readNVM
 39188   00790E  0100               	movlb	0	; () banked
 39189   007910  5191               	movf	?_readNVM& (0+255),w,b
 39190   007912  0101               	movlb	1	; () banked
 39191   007914  6FC5               	movwf	removeTableEntry@f& (0+255),b
 39192                           
 39193                           ;../../VLCBlib_PIC/event_teach_large.c: 880:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex+0, 0xff);
 39194   007916  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39195   007918  6FC1               	movwf	??_removeTableEntry& (0+255),b
 39196   00791A  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 39197   00791C  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 39198   00791E  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39199   007920  0EF0               	movlw	240
 39200   007922  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39201   007924  51C1               	movf	??_removeTableEntry& (0+255),w,b
 39202   007926  0B0F               	andlw	15
 39203   007928  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39204   00792A  0EF0               	movlw	240
 39205   00792C  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 39206   00792E  0E80               	movlw	128
 39207   007930  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 39208   007932  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 39209   007934  0EEF               	movlw	239
 39210   007936  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39211   007938  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 39212   00793A  C1C3  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 39213   00793E  C1C4  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 39214   007942  0100               	movlb	0	; () banked
 39215   007944  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39216   007946  0EFF               	movlw	255
 39217   007948  6FA7               	movwf	writeNVM@value& (0+255),b
 39218   00794A  0E01               	movlw	1
 39219   00794C  EC52  F05B         	call	_writeNVM
 39220                           
 39221                           ;../../VLCBlib_PIC/event_teach_large.c: 882:         while (f.continued) {
 39222   007950  D05A               	goto	l18845
 39223   007952                     l18833:
 39224                           
 39225                           ; BSR set to: 1
 39226                           ;../../VLCBlib_PIC/event_teach_large.c: 883:             tableIndex = (uint8_t)readNVM(F
      +                          LASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39227   007952  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39228   007954  0D10               	mullw	16
 39229   007956  CFF3 F1C1          	movff	prodl,??_removeTableEntry
 39230   00795A  CFF4 F1C2          	movff	prodh,??_removeTableEntry+1
 39231   00795E  0E81               	movlw	129
 39232   007960  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 39233   007962  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 39234   007964  0EEF               	movlw	239
 39235   007966  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39236   007968  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 39237   00796A  C1C3  F091         	movff	??_removeTableEntry+2,readNVM@index
 39238   00796E  C1C4  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39239   007972  0100               	movlb	0	; () banked
 39240   007974  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39241   007976  0E01               	movlw	1
 39242   007978  ECC2  F058         	call	_readNVM
 39243   00797C  0100               	movlb	0	; () banked
 39244   00797E  5191               	movf	?_readNVM& (0+255),w,b
 39245   007980  0101               	movlb	1	; () banked
 39246   007982  6FC6               	movwf	removeTableEntry@tableIndex& (0+255),b
 39247                           
 39248                           ; BSR set to: 1
 39249                           ;../../VLCBlib_PIC/event_teach_large.c: 884:             f.asByte = (uint8_t)readNVM(FLA
      +                          SH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39250   007984  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39251   007986  6FC1               	movwf	??_removeTableEntry& (0+255),b
 39252   007988  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 39253   00798A  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 39254   00798C  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39255   00798E  0EF0               	movlw	240
 39256   007990  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39257   007992  51C1               	movf	??_removeTableEntry& (0+255),w,b
 39258   007994  0B0F               	andlw	15
 39259   007996  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39260   007998  0EF0               	movlw	240
 39261   00799A  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 39262   00799C  0E80               	movlw	128
 39263   00799E  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 39264   0079A0  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 39265   0079A2  0EEF               	movlw	239
 39266   0079A4  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39267   0079A6  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 39268   0079A8  C1C3  F091         	movff	??_removeTableEntry+2,readNVM@index
 39269   0079AC  C1C4  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39270   0079B0  0100               	movlb	0	; () banked
 39271   0079B2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39272   0079B4  0E01               	movlw	1
 39273   0079B6  ECC2  F058         	call	_readNVM
 39274   0079BA  0100               	movlb	0	; () banked
 39275   0079BC  5191               	movf	?_readNVM& (0+255),w,b
 39276   0079BE  0101               	movlb	1	; () banked
 39277   0079C0  6FC5               	movwf	removeTableEntry@f& (0+255),b
 39278                           
 39279                           ; BSR set to: 1
 39280                           ;../../VLCBlib_PIC/event_teach_large.c: 886:             if (tableIndex >= 255) return C
      +                          MDERR_INV_EV_IDX;
 39281   0079C2  29C6               	incf	removeTableEntry@tableIndex& (0+255),w,b
 39282   0079C4  A4D8               	btfss	status,2,c
 39283   0079C6  D002               	goto	l18843
 39284                           
 39285                           ; BSR set to: 1
 39286   0079C8  0E06               	movlw	6
 39287   0079CA  0012               	return	
 39288   0079CC                     l18843:
 39289                           
 39290                           ; BSR set to: 1
 39291                           ;../../VLCBlib_PIC/event_teach_large.c: 889:             writeNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+0, 0xff);
 39292   0079CC  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39293   0079CE  6FC1               	movwf	??_removeTableEntry& (0+255),b
 39294   0079D0  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 39295   0079D2  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 39296   0079D4  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39297   0079D6  0EF0               	movlw	240
 39298   0079D8  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39299   0079DA  51C1               	movf	??_removeTableEntry& (0+255),w,b
 39300   0079DC  0B0F               	andlw	15
 39301   0079DE  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39302   0079E0  0EF0               	movlw	240
 39303   0079E2  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 39304   0079E4  0E80               	movlw	128
 39305   0079E6  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 39306   0079E8  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 39307   0079EA  0EEF               	movlw	239
 39308   0079EC  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39309   0079EE  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 39310   0079F0  C1C3  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 39311   0079F4  C1C4  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 39312   0079F8  0100               	movlb	0	; () banked
 39313   0079FA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39314   0079FC  0EFF               	movlw	255
 39315   0079FE  6FA7               	movwf	writeNVM@value& (0+255),b
 39316   007A00  0E01               	movlw	1
 39317   007A02  EC52  F05B         	call	_writeNVM
 39318   007A06                     l18845:
 39319                           
 39320                           ;../../VLCBlib_PIC/event_teach_large.c: 882:         while (f.continued) {
 39321   007A06  0101               	movlb	1	; () banked
 39322   007A08  B9C5               	btfsc	removeTableEntry@f& (0+255),4,b
 39323   007A0A  D7A3               	goto	l18833
 39324                           
 39325                           ; BSR set to: 1
 39326                           ;../../VLCBlib_PIC/event_teach_large.c: 892:         flushFlashBlock();
 39327   007A0C  EC8D  F052         	call	_flushFlashBlock	;wreg free
 39328                           
 39329                           ;../../VLCBlib_PIC/event_teach_large.c: 895:         rebuildHashtable();
 39330   007A10  EC40  F03E         	call	_rebuildHashtable	;wreg free
 39331   007A14                     l18851:
 39332                           
 39333                           ;../../VLCBlib_PIC/event_teach_large.c: 898:     return 0;
 39334   007A14  0E00               	movlw	0
 39335   007A16  0012               	return		;funcret
 39336   007A18                     __end_of_removeTableEntry:
 39337                           	callstack 0
 39338                           
 39339 ;; *************** function _rebuildHashtable *****************
 39340 ;; Defined at:
 39341 ;;		line 1327 in file "../../VLCBlib_PIC/event_teach_large.c"
 39342 ;; Parameters:    Size  Location     Type
 39343 ;;		None
 39344 ;; Auto vars:     Size  Location     Type
 39345 ;;  ev              2    3[BANK1 ] short 
 39346 ;;  a               2    0        int 
 39347 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 39348 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 39349 ;;  happening       1    6[BANK1 ] unsigned char 
 39350 ;;  hash            1    5[BANK1 ] unsigned char 
 39351 ;; Return value:  Size  Location     Type
 39352 ;;                  1    wreg      void 
 39353 ;; Registers used:
 39354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39355 ;; Tracked objects:
 39356 ;;		On entry : 0/0
 39357 ;;		On exit  : 0/0
 39358 ;;		Unchanged: 0/0
 39359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39361 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39362 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39363 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39364 ;;Total ram usage:        9 bytes
 39365 ;; Hardware stack levels used: 1
 39366 ;; Hardware stack levels required when called: 16
 39367 ;; This function calls:
 39368 ;;		_getEN
 39369 ;;		_getEv
 39370 ;;		_getHash
 39371 ;;		_getNN
 39372 ;;		_validStart
 39373 ;; This function is called by:
 39374 ;;		_deleteActionRange
 39375 ;;		_APP_addEvent
 39376 ;;		_mnsProcessMessage
 39377 ;;		_teachPowerUp
 39378 ;;		_clearAllEvents
 39379 ;;		_removeTableEntry
 39380 ;;		_addEvent
 39381 ;;		_deleteHappeningRange
 39382 ;; This function uses a non-reentrant model
 39383 ;;
 39384                           
 39385                           	psect	text167
 39386   007C80                     __ptext167:
 39387                           	callstack 0
 39388   007C80                     _rebuildHashtable:
 39389                           	callstack 12
 39390                           
 39391                           ;../../VLCBlib_PIC/event_teach_large.c: 1329:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1330:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_large.c: 1331: 
      +                              uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_large.c: 1332:     int a;;../../VL
      +                          CBlib_PIC/event_teach_large.c: 1335:     Happening happening;;../../VLCBlib_PIC/event_te
      +                          ach_large.c: 1336:     for (happening=0; happening<=(1+(7+16*4)-1); happening++) {
 39392                           
 39393                           ;incstack = 0
 39394   007C80  0E00               	movlw	0
 39395   007C82  0101               	movlb	1	; () banked
 39396   007C84  6FBE               	movwf	rebuildHashtable@happening& (0+255),b
 39397   007C86                     l18703:
 39398                           
 39399                           ; BSR set to: 1
 39400                           ;../../VLCBlib_PIC/event_teach_large.c: 1337:         happening2Event[happening] = 0xff;
 39401   007C86  0E00               	movlw	low _happening2Event
 39402   007C88  25BE               	addwf	rebuildHashtable@happening& (0+255),w,b
 39403   007C8A  6ED9               	movwf	fsr2l,c
 39404   007C8C  6ADA               	clrf	fsr2h,c
 39405   007C8E  0E03               	movlw	high _happening2Event
 39406   007C90  22DA               	addwfc	fsr2h,f,c
 39407   007C92  0EFF               	movlw	255
 39408   007C94  6EDF               	movwf	indf2,c
 39409                           
 39410                           ; BSR set to: 1
 39411                           ;../../VLCBlib_PIC/event_teach_large.c: 1338:     }
 39412   007C96  2BBE               	incf	rebuildHashtable@happening& (0+255),f,b
 39413                           
 39414                           ; BSR set to: 1
 39415   007C98  0E47               	movlw	71
 39416   007C9A  65BE               	cpfsgt	rebuildHashtable@happening& (0+255),b
 39417   007C9C  D7F4               	goto	l18703
 39418                           
 39419                           ; BSR set to: 1
 39420                           ;../../VLCBlib_PIC/event_teach_large.c: 1340:     for (hash=0; hash<32; hash++) {
 39421   007C9E  0E00               	movlw	0
 39422   007CA0  6FBD               	movwf	rebuildHashtable@hash& (0+255),b
 39423   007CA2                     l18715:
 39424                           
 39425                           ; BSR set to: 1
 39426                           ;../../VLCBlib_PIC/event_teach_large.c: 1341:         for (chainIdx=0; chainIdx < 20; ch
      +                          ainIdx++) {
 39427   007CA2  0E00               	movlw	0
 39428   007CA4  6FBF               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39429   007CA6                     l18721:
 39430                           
 39431                           ; BSR set to: 1
 39432                           ;../../VLCBlib_PIC/event_teach_large.c: 1342:             eventChains[hash][chainIdx] = 
      +                          0xff;
 39433   007CA6  51BD               	movf	rebuildHashtable@hash& (0+255),w,b
 39434   007CA8  0D14               	mullw	20
 39435   007CAA  0EC8               	movlw	low _eventChains
 39436   007CAC  24F3               	addwf	243,w,c
 39437   007CAE  6FB8               	movwf	??_rebuildHashtable& (0+255),b
 39438   007CB0  0E04               	movlw	high _eventChains
 39439   007CB2  20F4               	addwfc	prodh,w,c
 39440   007CB4  6FB9               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39441   007CB6  51BF               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39442   007CB8  25B8               	addwf	??_rebuildHashtable& (0+255),w,b
 39443   007CBA  6ED9               	movwf	fsr2l,c
 39444   007CBC  0E00               	movlw	0
 39445   007CBE  21B9               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39446   007CC0  6EDA               	movwf	fsr2h,c
 39447   007CC2  0EFF               	movlw	255
 39448   007CC4  6EDF               	movwf	indf2,c
 39449                           
 39450                           ; BSR set to: 1
 39451                           ;../../VLCBlib_PIC/event_teach_large.c: 1343:         }
 39452   007CC6  2BBF               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39453                           
 39454                           ; BSR set to: 1
 39455   007CC8  0E13               	movlw	19
 39456   007CCA  65BF               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39457   007CCC  D7EC               	goto	l18721
 39458                           
 39459                           ; BSR set to: 1
 39460                           ;../../VLCBlib_PIC/event_teach_large.c: 1344:     }
 39461   007CCE  2BBD               	incf	rebuildHashtable@hash& (0+255),f,b
 39462                           
 39463                           ; BSR set to: 1
 39464   007CD0  0E1F               	movlw	31
 39465   007CD2  65BD               	cpfsgt	rebuildHashtable@hash& (0+255),b
 39466   007CD4  D7E6               	goto	l18715
 39467                           
 39468                           ; BSR set to: 1
 39469                           ;../../VLCBlib_PIC/event_teach_large.c: 1347:     for (tableIndex=0; tableIndex<255; tab
      +                          leIndex++) {
 39470   007CD6  0E00               	movlw	0
 39471   007CD8  6FC0               	movwf	rebuildHashtable@tableIndex& (0+255),b
 39472   007CDA                     l18737:
 39473                           
 39474                           ; BSR set to: 1
 39475                           ;../../VLCBlib_PIC/event_teach_large.c: 1348:         if (validStart(tableIndex)) {
 39476   007CDA  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39477   007CDC  EC2B  F05B         	call	_validStart
 39478   007CE0  0900               	iorlw	0
 39479   007CE2  B4D8               	btfsc	status,2,c
 39480   007CE4  D059               	goto	u18530
 39481                           
 39482                           ;../../VLCBlib_PIC/event_teach_large.c: 1349:             int16_t ev;;../../VLCBlib_PIC/
      +                          event_teach_large.c: 1364:             ev = getEv(tableIndex, 0);
 39483   007CE6  0E00               	movlw	0
 39484   007CE8  0100               	movlb	0	; () banked
 39485   007CEA  6F9D               	movwf	getEv@evNum& (0+255),b
 39486   007CEC  0101               	movlb	1	; () banked
 39487   007CEE  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39488   007CF0  ECB7  F03B         	call	_getEv
 39489   007CF4  C09D  F1BB         	movff	?_getEv,rebuildHashtable@ev
 39490   007CF8  C09E  F1BC         	movff	?_getEv+1,rebuildHashtable@ev+1
 39491                           
 39492                           ;../../VLCBlib_PIC/event_teach_large.c: 1365:             if (ev < 0) continue;
 39493   007CFC  0101               	movlb	1	; () banked
 39494   007CFE  BFBC               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 39495   007D00  D04B               	goto	u18530
 39496                           
 39497                           ; BSR set to: 1
 39498                           ;../../VLCBlib_PIC/event_teach_large.c: 1366:             happening = (uint8_t) ev;
 39499   007D02  C1BB  F1BE         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 39500                           
 39501                           ; BSR set to: 1
 39502                           ;../../VLCBlib_PIC/event_teach_large.c: 1368:             if ((happening<= (7+16*4)) && 
      +                          (happening >= 1)) {
 39503   007D06  0E48               	movlw	72
 39504   007D08  61BE               	cpfslt	rebuildHashtable@happening& (0+255),b
 39505   007D0A  D00B               	goto	l18751
 39506                           
 39507                           ; BSR set to: 1
 39508   007D0C  51BE               	movf	rebuildHashtable@happening& (0+255),w,b
 39509   007D0E  B4D8               	btfsc	status,2,c
 39510   007D10  D008               	goto	l18751
 39511                           
 39512                           ; BSR set to: 1
 39513                           ;../../VLCBlib_PIC/event_teach_large.c: 1369:                 happening2Event[happening-
      +                          1] = tableIndex;
 39514   007D12  0EFF               	movlw	low (_happening2Event+65535)
 39515   007D14  25BE               	addwf	rebuildHashtable@happening& (0+255),w,b
 39516   007D16  6ED9               	movwf	fsr2l,c
 39517   007D18  6ADA               	clrf	fsr2h,c
 39518   007D1A  0E02               	movlw	high (_happening2Event+65535)
 39519   007D1C  22DA               	addwfc	fsr2h,f,c
 39520   007D1E  C1C0  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39521   007D22                     l18751:
 39522                           
 39523                           ; BSR set to: 1
 39524                           ;../../VLCBlib_PIC/event_teach_large.c: 1372:             hash = getHash(getNN(tableInde
      +                          x), getEN(tableIndex));
 39525   007D22  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39526   007D24  ECF1  F048         	call	_getNN
 39527   007D28  C097  F0A3         	movff	?_getNN,getHash@nn
 39528   007D2C  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 39529   007D30  0101               	movlb	1	; () banked
 39530   007D32  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39531   007D34  ECC9  F054         	call	_getEN
 39532   007D38  C097  F0A5         	movff	?_getEN,getHash@en
 39533   007D3C  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 39534   007D40  ECD3  F060         	call	_getHash	;wreg free
 39535   007D44  0101               	movlb	1	; () banked
 39536   007D46  6FBD               	movwf	rebuildHashtable@hash& (0+255),b
 39537                           
 39538                           ; BSR set to: 1
 39539                           ;../../VLCBlib_PIC/event_teach_large.c: 1374:             for (chainIdx=0; chainIdx<20; 
      +                          chainIdx++) {
 39540   007D48  0E00               	movlw	0
 39541   007D4A  6FBF               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39542   007D4C                     l18759:
 39543                           
 39544                           ; BSR set to: 1
 39545                           ;../../VLCBlib_PIC/event_teach_large.c: 1375:                 if (eventChains[hash][chai
      +                          nIdx] == 0xff) {
 39546   007D4C  51BD               	movf	rebuildHashtable@hash& (0+255),w,b
 39547   007D4E  0D14               	mullw	20
 39548   007D50  0EC8               	movlw	low _eventChains
 39549   007D52  24F3               	addwf	243,w,c
 39550   007D54  6FB8               	movwf	??_rebuildHashtable& (0+255),b
 39551   007D56  0E04               	movlw	high _eventChains
 39552   007D58  20F4               	addwfc	prodh,w,c
 39553   007D5A  6FB9               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39554   007D5C  51BF               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39555   007D5E  25B8               	addwf	??_rebuildHashtable& (0+255),w,b
 39556   007D60  6ED9               	movwf	fsr2l,c
 39557   007D62  0E00               	movlw	0
 39558   007D64  21B9               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39559   007D66  6EDA               	movwf	fsr2h,c
 39560   007D68  28DE               	incf	postinc2,w,c
 39561   007D6A  A4D8               	btfss	status,2,c
 39562   007D6C  D011               	goto	l18763
 39563                           
 39564                           ; BSR set to: 1
 39565                           ;../../VLCBlib_PIC/event_teach_large.c: 1377:                     eventChains[hash][chai
      +                          nIdx] = tableIndex;
 39566   007D6E  51BD               	movf	rebuildHashtable@hash& (0+255),w,b
 39567   007D70  0D14               	mullw	20
 39568   007D72  0EC8               	movlw	low _eventChains
 39569   007D74  24F3               	addwf	243,w,c
 39570   007D76  6FB8               	movwf	??_rebuildHashtable& (0+255),b
 39571   007D78  0E04               	movlw	high _eventChains
 39572   007D7A  20F4               	addwfc	prodh,w,c
 39573   007D7C  6FB9               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39574   007D7E  51BF               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39575   007D80  25B8               	addwf	??_rebuildHashtable& (0+255),w,b
 39576   007D82  6ED9               	movwf	fsr2l,c
 39577   007D84  0E00               	movlw	0
 39578   007D86  21B9               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39579   007D88  6EDA               	movwf	fsr2h,c
 39580   007D8A  C1C0  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39581                           
 39582                           ;../../VLCBlib_PIC/event_teach_large.c: 1378:                     break;
 39583   007D8E  D004               	goto	u18530
 39584   007D90                     l18763:
 39585                           
 39586                           ; BSR set to: 1
 39587                           ;../../VLCBlib_PIC/event_teach_large.c: 1380:             }
 39588   007D90  2BBF               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39589                           
 39590                           ; BSR set to: 1
 39591   007D92  0E13               	movlw	19
 39592   007D94  65BF               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39593   007D96  D7DA               	goto	l18759
 39594   007D98                     u18530:
 39595   007D98  0101               	movlb	1	; () banked
 39596   007D9A  2BC0               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 39597                           
 39598                           ; BSR set to: 1
 39599   007D9C  29C0               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 39600   007D9E  B4D8               	btfsc	status,2,c
 39601   007DA0  0012               	return	
 39602   007DA2  D79B               	goto	l18737
 39603   007DA4                     __end_of_rebuildHashtable:
 39604                           	callstack 0
 39605                           
 39606 ;; *************** function _getEv *****************
 39607 ;; Defined at:
 39608 ;;		line 1118 in file "../../VLCBlib_PIC/event_teach_large.c"
 39609 ;; Parameters:    Size  Location     Type
 39610 ;;  tableIndex      1    wreg     unsigned char 
 39611 ;;  evNum           1   61[BANK0 ] unsigned char 
 39612 ;; Auto vars:     Size  Location     Type
 39613 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 39614 ;;  f               1   68[BANK0 ] struct .
 39615 ;; Return value:  Size  Location     Type
 39616 ;;                  2   61[BANK0 ] short 
 39617 ;; Registers used:
 39618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39619 ;; Tracked objects:
 39620 ;;		On entry : 0/0
 39621 ;;		On exit  : 0/0
 39622 ;;		Unchanged: 0/0
 39623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39624 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39625 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39626 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39627 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39628 ;;Total ram usage:        9 bytes
 39629 ;; Hardware stack levels used: 1
 39630 ;; Hardware stack levels required when called: 15
 39631 ;; This function calls:
 39632 ;;		_readNVM
 39633 ;;		_validStart
 39634 ;; This function is called by:
 39635 ;;		_ackEventProcessMessage
 39636 ;;		_doReval
 39637 ;;		_doReqev
 39638 ;;		_reqevCallback
 39639 ;;		_rebuildHashtable
 39640 ;;		_producerProcessMessage
 39641 ;; This function uses a non-reentrant model
 39642 ;;
 39643                           
 39644                           	psect	text168
 39645   00776E                     __ptext168:
 39646                           	callstack 0
 39647   00776E                     _getEv:
 39648                           	callstack 12
 39649                           
 39650                           ; BSR set to: 1
 39651                           ;incstack = 0
 39652                           ;getEv@tableIndex stored from wreg
 39653   00776E  0100               	movlb	0	; () banked
 39654   007770  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39655                           
 39656                           ;../../VLCBlib_PIC/event_teach_large.c: 1119:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1120:     if ( ! validStart(tableIndex)) {
 39657   007772  0100               	movlb	0	; () banked
 39658   007774  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39659   007776  EC2B  F05B         	call	_validStart
 39660   00777A  0900               	iorlw	0
 39661   00777C  A4D8               	btfss	status,2,c
 39662   00777E  D006               	goto	l18545
 39663   007780                     u18280:
 39664                           
 39665                           ;../../VLCBlib_PIC/event_teach_large.c: 1122:         return -CMDERR_INVALID_EVENT;
 39666   007780  0EFF               	movlw	255
 39667   007782  0100               	movlb	0	; () banked
 39668   007784  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39669   007786  0EF9               	movlw	249
 39670   007788  6F9D               	movwf	?_getEv& (0+255),b
 39671   00778A  0012               	return	
 39672   00778C                     l18545:
 39673                           
 39674                           ;../../VLCBlib_PIC/event_teach_large.c: 1124:     if (evNum >= 20) {
 39675   00778C  0E13               	movlw	19
 39676   00778E  0100               	movlb	0	; () banked
 39677   007790  659D               	cpfsgt	getEv@evNum& (0+255),b
 39678   007792  D005               	goto	l18551
 39679                           
 39680                           ; BSR set to: 0
 39681                           ;../../VLCBlib_PIC/event_teach_large.c: 1125:         return -CMDERR_INV_EV_IDX;
 39682   007794  0EFF               	movlw	255
 39683   007796  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39684   007798  0EFA               	movlw	250
 39685   00779A  6F9D               	movwf	?_getEv& (0+255),b
 39686   00779C  0012               	return	
 39687   00779E                     l18551:
 39688                           
 39689                           ; BSR set to: 0
 39690                           ;../../VLCBlib_PIC/event_teach_large.c: 1127:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 39691   00779E  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39692   0077A0  6F9F               	movwf	??_getEv& (0+255),b
 39693   0077A2  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39694   0077A4  3B9F               	swapf	??_getEv& (0+255),f,b
 39695   0077A6  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39696   0077A8  0EF0               	movlw	240
 39697   0077AA  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39698   0077AC  519F               	movf	??_getEv& (0+255),w,b
 39699   0077AE  0B0F               	andlw	15
 39700   0077B0  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39701   0077B2  0EF0               	movlw	240
 39702   0077B4  179F               	andwf	??_getEv& (0+255),f,b
 39703   0077B6  0E80               	movlw	128
 39704   0077B8  259F               	addwf	??_getEv& (0+255),w,b
 39705   0077BA  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39706   0077BC  0EEF               	movlw	239
 39707   0077BE  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39708   0077C0  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39709   0077C2  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39710   0077C6  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39711   0077CA  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39712   0077CC  0E01               	movlw	1
 39713   0077CE  ECC2  F058         	call	_readNVM
 39714   0077D2  0100               	movlb	0	; () banked
 39715   0077D4  5191               	movf	?_readNVM& (0+255),w,b
 39716   0077D6  6FA4               	movwf	getEv@f& (0+255),b
 39717                           
 39718                           ;../../VLCBlib_PIC/event_teach_large.c: 1128:     while (evNum >= 10) {
 39719   0077D8  D040               	goto	l18569
 39720   0077DA                     l2878:
 39721                           
 39722                           ; BSR set to: 0
 39723                           ;../../VLCBlib_PIC/event_teach_large.c: 1130:         if (! f.continued) {
 39724   0077DA  B9A4               	btfsc	getEv@f& (0+255),4,b
 39725   0077DC  D005               	goto	l18557
 39726   0077DE                     u18300:
 39727                           
 39728                           ; BSR set to: 0
 39729                           ;../../VLCBlib_PIC/event_teach_large.c: 1131:             return -CMDERR_NO_EV;
 39730   0077DE  0EFF               	movlw	255
 39731   0077E0  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39732   0077E2  0EFB               	movlw	251
 39733   0077E4  6F9D               	movwf	?_getEv& (0+255),b
 39734   0077E6  0012               	return	
 39735   0077E8                     l18557:
 39736                           
 39737                           ; BSR set to: 0
 39738                           ;../../VLCBlib_PIC/event_teach_large.c: 1133:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39739   0077E8  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39740   0077EA  0D10               	mullw	16
 39741   0077EC  CFF3 F09F          	movff	prodl,??_getEv
 39742   0077F0  CFF4 F0A0          	movff	prodh,??_getEv+1
 39743   0077F4  0E81               	movlw	129
 39744   0077F6  259F               	addwf	??_getEv& (0+255),w,b
 39745   0077F8  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39746   0077FA  0EEF               	movlw	239
 39747   0077FC  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39748   0077FE  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39749   007800  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39750   007804  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39751   007808  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39752   00780A  0E01               	movlw	1
 39753   00780C  ECC2  F058         	call	_readNVM
 39754   007810  0100               	movlb	0	; () banked
 39755   007812  5191               	movf	?_readNVM& (0+255),w,b
 39756   007814  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39757                           
 39758                           ; BSR set to: 0
 39759                           ;../../VLCBlib_PIC/event_teach_large.c: 1134:         if (tableIndex == 0xff) {
 39760   007816  29A5               	incf	getEv@tableIndex& (0+255),w,b
 39761   007818  B4D8               	btfsc	status,2,c
 39762   00781A  D7B2               	goto	u18280
 39763                           
 39764                           ; BSR set to: 0
 39765                           ;../../VLCBlib_PIC/event_teach_large.c: 1137:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39766   00781C  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39767   00781E  6F9F               	movwf	??_getEv& (0+255),b
 39768   007820  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39769   007822  3B9F               	swapf	??_getEv& (0+255),f,b
 39770   007824  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39771   007826  0EF0               	movlw	240
 39772   007828  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39773   00782A  519F               	movf	??_getEv& (0+255),w,b
 39774   00782C  0B0F               	andlw	15
 39775   00782E  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39776   007830  0EF0               	movlw	240
 39777   007832  179F               	andwf	??_getEv& (0+255),f,b
 39778   007834  0E80               	movlw	128
 39779   007836  259F               	addwf	??_getEv& (0+255),w,b
 39780   007838  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39781   00783A  0EEF               	movlw	239
 39782   00783C  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39783   00783E  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39784   007840  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39785   007844  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39786   007848  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39787   00784A  0E01               	movlw	1
 39788   00784C  ECC2  F058         	call	_readNVM
 39789   007850  0100               	movlb	0	; () banked
 39790   007852  5191               	movf	?_readNVM& (0+255),w,b
 39791   007854  6FA4               	movwf	getEv@f& (0+255),b
 39792                           
 39793                           ; BSR set to: 0
 39794                           ;../../VLCBlib_PIC/event_teach_large.c: 1138:         evNum -= 10;
 39795   007856  0E0A               	movlw	10
 39796   007858  5F9D               	subwf	getEv@evNum& (0+255),f,b
 39797   00785A                     l18569:
 39798                           
 39799                           ; BSR set to: 0
 39800                           ;../../VLCBlib_PIC/event_teach_large.c: 1128:     while (evNum >= 10) {
 39801   00785A  0E0A               	movlw	10
 39802   00785C  619D               	cpfslt	getEv@evNum& (0+255),b
 39803   00785E  D7BD               	goto	l2878
 39804                           
 39805                           ; BSR set to: 0
 39806                           ;../../VLCBlib_PIC/event_teach_large.c: 1140:     if (evNum+1 > f.eVsUsed) {
 39807   007860  519D               	movf	getEv@evNum& (0+255),w,b
 39808   007862  6F9F               	movwf	??_getEv& (0+255),b
 39809   007864  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39810   007866  0E01               	movlw	1
 39811   007868  279F               	addwf	??_getEv& (0+255),f,b
 39812   00786A  0E00               	movlw	0
 39813   00786C  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39814   00786E  51A4               	movf	getEv@f& (0+255),w,b
 39815   007870  0B0F               	andlw	15
 39816   007872  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39817   007874  6BA2               	clrf	(??_getEv+3)& (0+255),b
 39818   007876  519F               	movf	??_getEv& (0+255),w,b
 39819   007878  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 39820   00787A  51A2               	movf	(??_getEv+3)& (0+255),w,b
 39821   00787C  0A80               	xorlw	128
 39822   00787E  6FA3               	movwf	(??_getEv+4)& (0+255),b
 39823   007880  51A0               	movf	(??_getEv+1)& (0+255),w,b
 39824   007882  0A80               	xorlw	128
 39825   007884  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 39826   007886  A0D8               	btfss	status,0,c
 39827   007888  D7AA               	goto	u18300
 39828                           
 39829                           ; BSR set to: 0
 39830                           ;../../VLCBlib_PIC/event_teach_large.c: 1144:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +evNum);
 39831   00788A  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39832   00788C  0D10               	mullw	16
 39833   00788E  CFF3 F09F          	movff	prodl,??_getEv
 39834   007892  CFF4 F0A0          	movff	prodh,??_getEv+1
 39835   007896  519D               	movf	getEv@evNum& (0+255),w,b
 39836   007898  279F               	addwf	??_getEv& (0+255),f,b
 39837   00789A  0E00               	movlw	0
 39838   00789C  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39839   00789E  0E86               	movlw	134
 39840   0078A0  259F               	addwf	??_getEv& (0+255),w,b
 39841   0078A2  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39842   0078A4  0EEF               	movlw	239
 39843   0078A6  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39844   0078A8  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39845   0078AA  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39846   0078AE  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39847   0078B2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39848   0078B4  0E01               	movlw	1
 39849   0078B6  ECC2  F058         	call	_readNVM
 39850   0078BA  0100               	movlb	0	; () banked
 39851   0078BC  5191               	movf	?_readNVM& (0+255),w,b
 39852   0078BE  6F9D               	movwf	?_getEv& (0+255),b
 39853   0078C0  6B9E               	clrf	(?_getEv+1)& (0+255),b
 39854                           
 39855                           ; BSR set to: 0
 39856   0078C2  0012               	return		;funcret
 39857   0078C4                     __end_of_getEv:
 39858                           	callstack 0
 39859                           
 39860 ;; *************** function _getEVs *****************
 39861 ;; Defined at:
 39862 ;;		line 1183 in file "../../VLCBlib_PIC/event_teach_large.c"
 39863 ;; Parameters:    Size  Location     Type
 39864 ;;  tableIndex      1    wreg     unsigned char 
 39865 ;; Auto vars:     Size  Location     Type
 39866 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 39867 ;;  evIdx           1   66[BANK0 ] unsigned char 
 39868 ;;  evNum           1   68[BANK0 ] unsigned char 
 39869 ;;  f               1   65[BANK0 ] struct .
 39870 ;; Return value:  Size  Location     Type
 39871 ;;                  1    wreg      unsigned char 
 39872 ;; Registers used:
 39873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39874 ;; Tracked objects:
 39875 ;;		On entry : 0/0
 39876 ;;		On exit  : 0/0
 39877 ;;		Unchanged: 0/0
 39878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39880 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39881 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39882 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39883 ;;Total ram usage:        8 bytes
 39884 ;; Hardware stack levels used: 1
 39885 ;; Hardware stack levels required when called: 15
 39886 ;; This function calls:
 39887 ;;		_readNVM
 39888 ;;		_validStart
 39889 ;; This function is called by:
 39890 ;;		_consumer2QProcessMessage
 39891 ;;		_deleteActionRange
 39892 ;;		_checkRemoveTableEntry
 39893 ;; This function uses a non-reentrant model
 39894 ;;
 39895                           
 39896                           	psect	text169
 39897   0080BE                     __ptext169:
 39898                           	callstack 0
 39899   0080BE                     _getEVs:
 39900                           	callstack 9
 39901                           
 39902                           ; BSR set to: 0
 39903                           ;incstack = 0
 39904                           ;getEVs@tableIndex stored from wreg
 39905   0080BE  0100               	movlb	0	; () banked
 39906   0080C0  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39907                           
 39908                           ;../../VLCBlib_PIC/event_teach_large.c: 1184:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1185:     uint8_t evNum;;../../VLCBlib_PIC/event_teach_large.c: 1187
      +                          :     if ( ! validStart(tableIndex)) {
 39909   0080C2  0100               	movlb	0	; () banked
 39910   0080C4  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39911   0080C6  EC2B  F05B         	call	_validStart
 39912   0080CA  0900               	iorlw	0
 39913   0080CC  A4D8               	btfss	status,2,c
 39914   0080CE  D002               	goto	l18777
 39915   0080D0                     u18550:
 39916                           
 39917                           ;../../VLCBlib_PIC/event_teach_large.c: 1189:         return CMDERR_INVALID_EVENT;
 39918   0080D0  0E07               	movlw	7
 39919   0080D2  0012               	return	
 39920   0080D4                     l18777:
 39921                           
 39922                           ;../../VLCBlib_PIC/event_teach_large.c: 1191:     for (evNum=0; evNum < 20; ) {
 39923   0080D4  0E00               	movlw	0
 39924   0080D6  0100               	movlb	0	; () banked
 39925   0080D8  6FA4               	movwf	getEVs@evNum& (0+255),b
 39926   0080DA                     l18783:
 39927                           
 39928                           ; BSR set to: 0
 39929                           ;../../VLCBlib_PIC/event_teach_large.c: 1192:         uint8_t evIdx;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1193:         for (evIdx=0; evIdx < 10; evIdx++) {
 39930   0080DA  0E00               	movlw	0
 39931   0080DC  6FA2               	movwf	getEVs@evIdx& (0+255),b
 39932   0080DE                     l18789:
 39933                           
 39934                           ; BSR set to: 0
 39935                           ;../../VLCBlib_PIC/event_teach_large.c: 1194:             evs[evNum] = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 39936   0080DE  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39937   0080E0  0D10               	mullw	16
 39938   0080E2  CFF3 F09D          	movff	prodl,??_getEVs
 39939   0080E6  CFF4 F09E          	movff	prodh,??_getEVs+1
 39940   0080EA  51A2               	movf	getEVs@evIdx& (0+255),w,b
 39941   0080EC  279D               	addwf	??_getEVs& (0+255),f,b
 39942   0080EE  0E00               	movlw	0
 39943   0080F0  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 39944   0080F2  0E86               	movlw	134
 39945   0080F4  259D               	addwf	??_getEVs& (0+255),w,b
 39946   0080F6  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39947   0080F8  0EEF               	movlw	239
 39948   0080FA  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39949   0080FC  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39950   0080FE  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39951   008102  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39952   008106  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39953   008108  0E01               	movlw	1
 39954   00810A  ECC2  F058         	call	_readNVM
 39955   00810E  0E40               	movlw	low _evs
 39956   008110  0100               	movlb	0	; () banked
 39957   008112  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39958   008114  6ED9               	movwf	fsr2l,c
 39959   008116  6ADA               	clrf	fsr2h,c
 39960   008118  0E02               	movlw	high _evs
 39961   00811A  22DA               	addwfc	fsr2h,f,c
 39962   00811C  C091  FFDF         	movff	?_readNVM,indf2
 39963                           
 39964                           ; BSR set to: 0
 39965                           ;../../VLCBlib_PIC/event_teach_large.c: 1195:             evNum++;
 39966   008120  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39967                           
 39968                           ; BSR set to: 0
 39969                           ;../../VLCBlib_PIC/event_teach_large.c: 1196:         }
 39970   008122  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 39971                           
 39972                           ; BSR set to: 0
 39973   008124  0E09               	movlw	9
 39974   008126  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 39975   008128  D7DA               	goto	l18789
 39976                           
 39977                           ; BSR set to: 0
 39978                           ;../../VLCBlib_PIC/event_teach_large.c: 1197:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39979   00812A  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39980   00812C  6F9D               	movwf	??_getEVs& (0+255),b
 39981   00812E  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 39982   008130  3B9D               	swapf	??_getEVs& (0+255),f,b
 39983   008132  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 39984   008134  0EF0               	movlw	240
 39985   008136  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 39986   008138  519D               	movf	??_getEVs& (0+255),w,b
 39987   00813A  0B0F               	andlw	15
 39988   00813C  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 39989   00813E  0EF0               	movlw	240
 39990   008140  179D               	andwf	??_getEVs& (0+255),f,b
 39991   008142  0E80               	movlw	128
 39992   008144  259D               	addwf	??_getEVs& (0+255),w,b
 39993   008146  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39994   008148  0EEF               	movlw	239
 39995   00814A  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39996   00814C  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39997   00814E  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39998   008152  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39999   008156  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40000   008158  0E01               	movlw	1
 40001   00815A  ECC2  F058         	call	_readNVM
 40002   00815E  0100               	movlb	0	; () banked
 40003   008160  5191               	movf	?_readNVM& (0+255),w,b
 40004   008162  6FA1               	movwf	getEVs@f& (0+255),b
 40005                           
 40006                           ; BSR set to: 0
 40007                           ;../../VLCBlib_PIC/event_teach_large.c: 1198:         if (! f.continued) {
 40008   008164  B9A1               	btfsc	getEVs@f& (0+255),4,b
 40009   008166  D00F               	goto	l18815
 40010   008168                     u18570:
 40011                           
 40012                           ; BSR set to: 0
 40013                           ;../../VLCBlib_PIC/event_teach_large.c: 1199:             for (; evNum < 20; evNum++) {
 40014   008168  0E13               	movlw	19
 40015   00816A  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 40016   00816C  D001               	goto	l18805
 40017   00816E  D009               	goto	l18811
 40018   008170                     l18805:
 40019                           
 40020                           ; BSR set to: 0
 40021                           ;../../VLCBlib_PIC/event_teach_large.c: 1200:                 evs[evNum] = 0;
 40022   008170  0E40               	movlw	low _evs
 40023   008172  25A4               	addwf	getEVs@evNum& (0+255),w,b
 40024   008174  6ED9               	movwf	fsr2l,c
 40025   008176  6ADA               	clrf	fsr2h,c
 40026   008178  0E02               	movlw	high _evs
 40027   00817A  22DA               	addwfc	fsr2h,f,c
 40028   00817C  6ADF               	clrf	indf2,c
 40029                           
 40030                           ; BSR set to: 0
 40031                           ;../../VLCBlib_PIC/event_teach_large.c: 1201:             }
 40032   00817E  2BA4               	incf	getEVs@evNum& (0+255),f,b
 40033   008180  D7F3               	goto	u18570
 40034   008182                     l18811:
 40035                           
 40036                           ; BSR set to: 0
 40037                           ;../../VLCBlib_PIC/event_teach_large.c: 1202:             return 0;
 40038   008182  0E00               	movlw	0
 40039   008184  0012               	return	
 40040   008186                     l18815:
 40041                           
 40042                           ; BSR set to: 0
 40043                           ;../../VLCBlib_PIC/event_teach_large.c: 1204:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40044   008186  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40045   008188  0D10               	mullw	16
 40046   00818A  CFF3 F09D          	movff	prodl,??_getEVs
 40047   00818E  CFF4 F09E          	movff	prodh,??_getEVs+1
 40048   008192  0E81               	movlw	129
 40049   008194  259D               	addwf	??_getEVs& (0+255),w,b
 40050   008196  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40051   008198  0EEF               	movlw	239
 40052   00819A  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40053   00819C  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40054   00819E  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40055   0081A2  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40056   0081A6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40057   0081A8  0E01               	movlw	1
 40058   0081AA  ECC2  F058         	call	_readNVM
 40059   0081AE  0100               	movlb	0	; () banked
 40060   0081B0  5191               	movf	?_readNVM& (0+255),w,b
 40061   0081B2  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 40062                           
 40063                           ; BSR set to: 0
 40064                           ;../../VLCBlib_PIC/event_teach_large.c: 1205:         if (tableIndex == 0xff) {
 40065   0081B4  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 40066   0081B6  B4D8               	btfsc	status,2,c
 40067   0081B8  D78B               	goto	u18550
 40068                           
 40069                           ; BSR set to: 0
 40070                           ;../../VLCBlib_PIC/event_teach_large.c: 1208:     }
 40071   0081BA  0E13               	movlw	19
 40072   0081BC  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 40073   0081BE  D78D               	goto	l18783
 40074   0081C0  D7E0               	goto	l18811
 40075   0081C2                     __end_of_getEVs:
 40076                           	callstack 0
 40077                           
 40078 ;; *************** function _validStart *****************
 40079 ;; Defined at:
 40080 ;;		line 1282 in file "../../VLCBlib_PIC/event_teach_large.c"
 40081 ;; Parameters:    Size  Location     Type
 40082 ;;  tableIndex      1    wreg     unsigned char 
 40083 ;; Auto vars:     Size  Location     Type
 40084 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 40085 ;;  f               1   60[BANK0 ] struct .
 40086 ;; Return value:  Size  Location     Type
 40087 ;;                  1    wreg      enum E12760
 40088 ;; Registers used:
 40089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40090 ;; Tracked objects:
 40091 ;;		On entry : 0/0
 40092 ;;		On exit  : 0/0
 40093 ;;		Unchanged: 0/0
 40094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40096 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40098 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40099 ;;Total ram usage:        6 bytes
 40100 ;; Hardware stack levels used: 1
 40101 ;; Hardware stack levels required when called: 14
 40102 ;; This function calls:
 40103 ;;		_readNVM
 40104 ;; This function is called by:
 40105 ;;		_deleteActionRange
 40106 ;;		_nerdCallback
 40107 ;;		_doNenrd
 40108 ;;		_doRqevn
 40109 ;;		_doReval
 40110 ;;		_removeTableEntry
 40111 ;;		_checkRemoveTableEntry
 40112 ;;		_getEv
 40113 ;;		_numEv
 40114 ;;		_getEVs
 40115 ;;		_rebuildHashtable
 40116 ;;		_deleteHappeningRange
 40117 ;; This function uses a non-reentrant model
 40118 ;;
 40119                           
 40120                           	psect	text170
 40121   00B656                     __ptext170:
 40122                           	callstack 0
 40123   00B656                     _validStart:
 40124                           	callstack 13
 40125                           
 40126                           ;incstack = 0
 40127                           ;validStart@tableIndex stored from wreg
 40128   00B656  0100               	movlb	0	; () banked
 40129   00B658  6F9B               	movwf	validStart@tableIndex& (0+255),b
 40130                           
 40131                           ;../../VLCBlib_PIC/event_teach_large.c: 1283:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1287:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*ta
      +                          bleIndex+0);
 40132   00B65A  0100               	movlb	0	; () banked
 40133   00B65C  519B               	movf	validStart@tableIndex& (0+255),w,b
 40134   00B65E  6F97               	movwf	??_validStart& (0+255),b
 40135   00B660  6B98               	clrf	(??_validStart+1)& (0+255),b
 40136   00B662  3B97               	swapf	??_validStart& (0+255),f,b
 40137   00B664  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 40138   00B666  0EF0               	movlw	240
 40139   00B668  1798               	andwf	(??_validStart+1)& (0+255),f,b
 40140   00B66A  5197               	movf	??_validStart& (0+255),w,b
 40141   00B66C  0B0F               	andlw	15
 40142   00B66E  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 40143   00B670  0EF0               	movlw	240
 40144   00B672  1797               	andwf	??_validStart& (0+255),f,b
 40145   00B674  0E80               	movlw	128
 40146   00B676  2597               	addwf	??_validStart& (0+255),w,b
 40147   00B678  6F99               	movwf	(??_validStart+2)& (0+255),b
 40148   00B67A  0EEF               	movlw	239
 40149   00B67C  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 40150   00B67E  6F9A               	movwf	(??_validStart+3)& (0+255),b
 40151   00B680  C099  F091         	movff	??_validStart+2,readNVM@index
 40152   00B684  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 40153   00B688  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40154   00B68A  0E01               	movlw	1
 40155   00B68C  ECC2  F058         	call	_readNVM
 40156   00B690  0100               	movlb	0	; () banked
 40157   00B692  5191               	movf	?_readNVM& (0+255),w,b
 40158   00B694  6F9C               	movwf	validStart@f& (0+255),b
 40159                           
 40160                           ; BSR set to: 0
 40161                           ;../../VLCBlib_PIC/event_teach_large.c: 1288:     if (( !f.freeEntry) && ( ! f.continuat
      +                          ion)) {
 40162   00B696  AF9C               	btfss	validStart@f& (0+255),7,b
 40163                           
 40164                           ; BSR set to: 0
 40165   00B698  BB9C               	btfsc	validStart@f& (0+255),5,b
 40166   00B69A  D002               	goto	l18507
 40167                           
 40168                           ; BSR set to: 0
 40169                           ;../../VLCBlib_PIC/event_teach_large.c: 1289:         return TRUE;
 40170   00B69C  0E01               	movlw	1
 40171   00B69E  0012               	return	
 40172   00B6A0                     l18507:
 40173                           
 40174                           ; BSR set to: 0
 40175                           ;../../VLCBlib_PIC/event_teach_large.c: 1291:         return FALSE;
 40176   00B6A0  0E00               	movlw	0
 40177                           
 40178                           ; BSR set to: 0
 40179   00B6A2  0012               	return		;funcret
 40180   00B6A4                     __end_of_validStart:
 40181                           	callstack 0
 40182                           
 40183 ;; *************** function _findEvent *****************
 40184 ;; Defined at:
 40185 ;;		line 998 in file "../../VLCBlib_PIC/event_teach_large.c"
 40186 ;; Parameters:    Size  Location     Type
 40187 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 40188 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 40189 ;; Auto vars:     Size  Location     Type
 40190 ;;  en              2    8[BANK1 ] unsigned short 
 40191 ;;  nn              2    6[BANK1 ] unsigned short 
 40192 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 40193 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 40194 ;;  hash            1   10[BANK1 ] unsigned char 
 40195 ;; Return value:  Size  Location     Type
 40196 ;;                  1    wreg      unsigned char 
 40197 ;; Registers used:
 40198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40199 ;; Tracked objects:
 40200 ;;		On entry : 0/0
 40201 ;;		On exit  : 0/0
 40202 ;;		Unchanged: 0/0
 40203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40204 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40205 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40206 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40207 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40208 ;;Total ram usage:       13 bytes
 40209 ;; Hardware stack levels used: 1
 40210 ;; Hardware stack levels required when called: 15
 40211 ;; This function calls:
 40212 ;;		_getEN
 40213 ;;		_getHash
 40214 ;;		_getNN
 40215 ;; This function is called by:
 40216 ;;		_consumer2QProcessMessage
 40217 ;;		_ackEventProcessMessage
 40218 ;;		_doReqev
 40219 ;;		_removeEvent
 40220 ;;		_addEvent
 40221 ;;		_producerProcessMessage
 40222 ;; This function uses a non-reentrant model
 40223 ;;
 40224                           
 40225                           	psect	text171
 40226   00A1D2                     __ptext171:
 40227                           	callstack 0
 40228   00A1D2                     _findEvent:
 40229                           	callstack 12
 40230                           
 40231                           ;../../VLCBlib_PIC/event_teach_large.c: 1000:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 40232                           
 40233                           ; BSR set to: 0
 40234                           ;incstack = 0
 40235   00A1D2  C1B8  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 40236   00A1D6  C1B9  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 40237   00A1DA  C1BA  F0A5         	movff	findEvent@eventNumber,getHash@en
 40238   00A1DE  C1BB  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 40239   00A1E2  ECD3  F060         	call	_getHash	;wreg free
 40240   00A1E6  0101               	movlb	1	; () banked
 40241   00A1E8  6FC2               	movwf	findEvent@hash& (0+255),b
 40242                           
 40243                           ; BSR set to: 1
 40244                           ;../../VLCBlib_PIC/event_teach_large.c: 1001:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 1002:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 40245   00A1EA  0E00               	movlw	0
 40246   00A1EC  6FC3               	movwf	findEvent@chainIdx& (0+255),b
 40247   00A1EE                     l19171:
 40248                           
 40249                           ; BSR set to: 1
 40250                           ;../../VLCBlib_PIC/event_teach_large.c: 1003:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 40251   00A1EE  51C2               	movf	findEvent@hash& (0+255),w,b
 40252   00A1F0  0D14               	mullw	20
 40253   00A1F2  0EC8               	movlw	low _eventChains
 40254   00A1F4  24F3               	addwf	243,w,c
 40255   00A1F6  6FBC               	movwf	??_findEvent& (0+255),b
 40256   00A1F8  0E04               	movlw	high _eventChains
 40257   00A1FA  20F4               	addwfc	prodh,w,c
 40258   00A1FC  6FBD               	movwf	(??_findEvent+1)& (0+255),b
 40259   00A1FE  51C3               	movf	findEvent@chainIdx& (0+255),w,b
 40260   00A200  25BC               	addwf	??_findEvent& (0+255),w,b
 40261   00A202  6ED9               	movwf	fsr2l,c
 40262   00A204  0E00               	movlw	0
 40263   00A206  21BD               	addwfc	(??_findEvent+1)& (0+255),w,b
 40264   00A208  6EDA               	movwf	fsr2h,c
 40265   00A20A  50DF               	movf	indf2,w,c
 40266   00A20C  6FC4               	movwf	findEvent@tableIndex& (0+255),b
 40267                           
 40268                           ; BSR set to: 1
 40269                           ;../../VLCBlib_PIC/event_teach_large.c: 1004:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1005:         if (tableIndex == 0xff) return 0xff;
 40270   00A20E  29C4               	incf	findEvent@tableIndex& (0+255),w,b
 40271   00A210  A4D8               	btfss	status,2,c
 40272   00A212  D002               	goto	l19179
 40273   00A214                     u19100:
 40274                           
 40275                           ; BSR set to: 1
 40276   00A214  0EFF               	movlw	255
 40277   00A216  0012               	return	
 40278   00A218                     l19179:
 40279                           
 40280                           ; BSR set to: 1
 40281                           ;../../VLCBlib_PIC/event_teach_large.c: 1006:         nn = getNN(tableIndex);
 40282   00A218  51C4               	movf	findEvent@tableIndex& (0+255),w,b
 40283   00A21A  ECF1  F048         	call	_getNN
 40284   00A21E  C097  F1BE         	movff	?_getNN,findEvent@nn
 40285   00A222  C098  F1BF         	movff	?_getNN+1,findEvent@nn+1
 40286                           
 40287                           ;../../VLCBlib_PIC/event_teach_large.c: 1007:         en = getEN(tableIndex);
 40288   00A226  0101               	movlb	1	; () banked
 40289   00A228  51C4               	movf	findEvent@tableIndex& (0+255),w,b
 40290   00A22A  ECC9  F054         	call	_getEN
 40291   00A22E  C097  F1C0         	movff	?_getEN,findEvent@en
 40292   00A232  C098  F1C1         	movff	?_getEN+1,findEvent@en+1
 40293                           
 40294                           ;../../VLCBlib_PIC/event_teach_large.c: 1008:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 40295   00A236  0101               	movlb	1	; () banked
 40296   00A238  51B8               	movf	findEvent@nodeNumber& (0+255),w,b
 40297   00A23A  19BE               	xorwf	findEvent@nn& (0+255),w,b
 40298   00A23C  E10D               	bnz	l19189
 40299   00A23E  51B9               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 40300   00A240  19BF               	xorwf	(findEvent@nn+1)& (0+255),w,b
 40301   00A242  A4D8               	btfss	status,2,c
 40302   00A244  D009               	goto	l19189
 40303                           
 40304                           ; BSR set to: 1
 40305   00A246  51BA               	movf	findEvent@eventNumber& (0+255),w,b
 40306   00A248  19C0               	xorwf	findEvent@en& (0+255),w,b
 40307   00A24A  E106               	bnz	l19189
 40308   00A24C  51BB               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 40309   00A24E  19C1               	xorwf	(findEvent@en+1)& (0+255),w,b
 40310   00A250  A4D8               	btfss	status,2,c
 40311   00A252  D002               	goto	l19189
 40312                           
 40313                           ; BSR set to: 1
 40314                           ;../../VLCBlib_PIC/event_teach_large.c: 1009:             return tableIndex;
 40315   00A254  51C4               	movf	findEvent@tableIndex& (0+255),w,b
 40316   00A256  0012               	return	
 40317   00A258                     l19189:
 40318                           
 40319                           ; BSR set to: 1
 40320                           ;../../VLCBlib_PIC/event_teach_large.c: 1011:     }
 40321   00A258  2BC3               	incf	findEvent@chainIdx& (0+255),f,b
 40322                           
 40323                           ; BSR set to: 1
 40324   00A25A  0E13               	movlw	19
 40325   00A25C  65C3               	cpfsgt	findEvent@chainIdx& (0+255),b
 40326   00A25E  D7C7               	goto	l19171
 40327   00A260  D7D9               	goto	u19100
 40328   00A262                     __end_of_findEvent:
 40329                           	callstack 0
 40330                           
 40331 ;; *************** function _getNN *****************
 40332 ;; Defined at:
 40333 ;;		line 1219 in file "../../VLCBlib_PIC/event_teach_large.c"
 40334 ;; Parameters:    Size  Location     Type
 40335 ;;  tableIndex      1    wreg     unsigned char 
 40336 ;; Auto vars:     Size  Location     Type
 40337 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 40338 ;;  lo              2   63[BANK0 ] unsigned short 
 40339 ;;  hi              2   61[BANK0 ] unsigned short 
 40340 ;;  f               1   65[BANK0 ] struct .
 40341 ;; Return value:  Size  Location     Type
 40342 ;;                  2   55[BANK0 ] unsigned short 
 40343 ;; Registers used:
 40344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40345 ;; Tracked objects:
 40346 ;;		On entry : 0/0
 40347 ;;		On exit  : 0/0
 40348 ;;		Unchanged: 0/0
 40349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40351 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40352 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40353 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40354 ;;Total ram usage:       12 bytes
 40355 ;; Hardware stack levels used: 1
 40356 ;; Hardware stack levels required when called: 14
 40357 ;; This function calls:
 40358 ;;		_readNVM
 40359 ;; This function is called by:
 40360 ;;		_nerdCallback
 40361 ;;		_doNenrd
 40362 ;;		_reqevCallback
 40363 ;;		_findEvent
 40364 ;;		_rebuildHashtable
 40365 ;;		_sendProducedEvent
 40366 ;; This function uses a non-reentrant model
 40367 ;;
 40368                           
 40369                           	psect	text172
 40370   0091E2                     __ptext172:
 40371                           	callstack 0
 40372   0091E2                     _getNN:
 40373                           	callstack 13
 40374                           
 40375                           ; BSR set to: 1
 40376                           ;incstack = 0
 40377                           ;getNN@tableIndex stored from wreg
 40378   0091E2  0100               	movlb	0	; () banked
 40379   0091E4  6FA2               	movwf	getNN@tableIndex& (0+255),b
 40380                           
 40381                           ;../../VLCBlib_PIC/event_teach_large.c: 1220:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1221:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1222:     Ev
      +                          entTableFlags f;;../../VLCBlib_PIC/event_teach_large.c: 1224:     f.asByte = (uint8_t)re
      +                          adNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40382   0091E6  0100               	movlb	0	; () banked
 40383   0091E8  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40384   0091EA  6F99               	movwf	??_getNN& (0+255),b
 40385   0091EC  6B9A               	clrf	(??_getNN+1)& (0+255),b
 40386   0091EE  3B99               	swapf	??_getNN& (0+255),f,b
 40387   0091F0  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 40388   0091F2  0EF0               	movlw	240
 40389   0091F4  179A               	andwf	(??_getNN+1)& (0+255),f,b
 40390   0091F6  5199               	movf	??_getNN& (0+255),w,b
 40391   0091F8  0B0F               	andlw	15
 40392   0091FA  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 40393   0091FC  0EF0               	movlw	240
 40394   0091FE  1799               	andwf	??_getNN& (0+255),f,b
 40395   009200  0E80               	movlw	128
 40396   009202  2599               	addwf	??_getNN& (0+255),w,b
 40397   009204  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40398   009206  0EEF               	movlw	239
 40399   009208  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40400   00920A  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40401   00920C  C09B  F091         	movff	??_getNN+2,readNVM@index
 40402   009210  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40403   009214  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40404   009216  0E01               	movlw	1
 40405   009218  ECC2  F058         	call	_readNVM
 40406   00921C  0100               	movlb	0	; () banked
 40407   00921E  5191               	movf	?_readNVM& (0+255),w,b
 40408   009220  6FA1               	movwf	getNN@f& (0+255),b
 40409                           
 40410                           ; BSR set to: 0
 40411                           ;../../VLCBlib_PIC/event_teach_large.c: 1225:     if (f.forceOwnNN) {
 40412   009222  ADA1               	btfss	getNN@f& (0+255),6,b
 40413   009224  D005               	goto	l18655
 40414                           
 40415                           ; BSR set to: 0
 40416                           ;../../VLCBlib_PIC/event_teach_large.c: 1226:         return nn.word;
 40417   009226  C0BF  F097         	movff	_nn,?_getNN
 40418   00922A  C0C0  F098         	movff	_nn+1,?_getNN+1
 40419   00922E  0012               	return	
 40420   009230                     l18655:
 40421                           
 40422                           ; BSR set to: 0
 40423                           ;../../VLCBlib_PIC/event_teach_large.c: 1228:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2);
 40424   009230  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40425   009232  0D10               	mullw	16
 40426   009234  CFF3 F099          	movff	prodl,??_getNN
 40427   009238  CFF4 F09A          	movff	prodh,??_getNN+1
 40428   00923C  0E82               	movlw	130
 40429   00923E  2599               	addwf	??_getNN& (0+255),w,b
 40430   009240  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40431   009242  0EEF               	movlw	239
 40432   009244  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40433   009246  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40434   009248  C09B  F091         	movff	??_getNN+2,readNVM@index
 40435   00924C  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40436   009250  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40437   009252  0E01               	movlw	1
 40438   009254  ECC2  F058         	call	_readNVM
 40439   009258  0100               	movlb	0	; () banked
 40440   00925A  5191               	movf	?_readNVM& (0+255),w,b
 40441   00925C  6F9F               	movwf	getNN@lo& (0+255),b
 40442   00925E  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 40443                           
 40444                           ;../../VLCBlib_PIC/event_teach_large.c: 1229:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2 +1);
 40445   009260  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40446   009262  0D10               	mullw	16
 40447   009264  CFF3 F099          	movff	prodl,??_getNN
 40448   009268  CFF4 F09A          	movff	prodh,??_getNN+1
 40449   00926C  0E83               	movlw	131
 40450   00926E  2599               	addwf	??_getNN& (0+255),w,b
 40451   009270  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40452   009272  0EEF               	movlw	239
 40453   009274  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40454   009276  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40455   009278  C09B  F091         	movff	??_getNN+2,readNVM@index
 40456   00927C  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40457   009280  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40458   009282  0E01               	movlw	1
 40459   009284  ECC2  F058         	call	_readNVM
 40460   009288  0100               	movlb	0	; () banked
 40461   00928A  5191               	movf	?_readNVM& (0+255),w,b
 40462   00928C  6F9D               	movwf	getNN@hi& (0+255),b
 40463   00928E  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 40464                           
 40465                           ; BSR set to: 0
 40466                           ;../../VLCBlib_PIC/event_teach_large.c: 1230:     return lo | (hi << 8);
 40467   009290  519D               	movf	getNN@hi& (0+255),w,b
 40468   009292  6F9A               	movwf	(??_getNN+1)& (0+255),b
 40469   009294  6B99               	clrf	??_getNN& (0+255),b
 40470   009296  519F               	movf	getNN@lo& (0+255),w,b
 40471   009298  1199               	iorwf	??_getNN& (0+255),w,b
 40472   00929A  6F97               	movwf	?_getNN& (0+255),b
 40473   00929C  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 40474   00929E  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 40475   0092A0  6F98               	movwf	(?_getNN+1)& (0+255),b
 40476                           
 40477                           ; BSR set to: 0
 40478   0092A2  0012               	return		;funcret
 40479   0092A4                     __end_of_getNN:
 40480                           	callstack 0
 40481                           
 40482 ;; *************** function _getHash *****************
 40483 ;; Defined at:
 40484 ;;		line 1313 in file "../../VLCBlib_PIC/event_teach_large.c"
 40485 ;; Parameters:    Size  Location     Type
 40486 ;;  nn              2   67[BANK0 ] unsigned short 
 40487 ;;  en              2   69[BANK0 ] unsigned short 
 40488 ;; Auto vars:     Size  Location     Type
 40489 ;;  hash            1   72[BANK0 ] unsigned char 
 40490 ;; Return value:  Size  Location     Type
 40491 ;;                  1    wreg      unsigned char 
 40492 ;; Registers used:
 40493 ;;		wreg, status,2, status,0, prodl, prodh
 40494 ;; Tracked objects:
 40495 ;;		On entry : 0/0
 40496 ;;		On exit  : 0/0
 40497 ;;		Unchanged: 0/0
 40498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40499 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40502 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40503 ;;Total ram usage:        6 bytes
 40504 ;; Hardware stack levels used: 1
 40505 ;; Hardware stack levels required when called: 12
 40506 ;; This function calls:
 40507 ;;		Nothing
 40508 ;; This function is called by:
 40509 ;;		_findEvent
 40510 ;;		_rebuildHashtable
 40511 ;; This function uses a non-reentrant model
 40512 ;;
 40513                           
 40514                           	psect	text173
 40515   00C1A6                     __ptext173:
 40516                           	callstack 0
 40517   00C1A6                     _getHash:
 40518                           	callstack 15
 40519                           
 40520                           ;../../VLCBlib_PIC/event_teach_large.c: 1314:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1316:     hash = (uint8_t)(nn ^ (nn >> 8U));
 40521                           
 40522                           ; BSR set to: 0
 40523                           ;incstack = 0
 40524   00C1A6  0100               	movlb	0	; () banked
 40525   00C1A8  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 40526   00C1AA  19A3               	xorwf	getHash@nn& (0+255),w,b
 40527   00C1AC  6FA8               	movwf	getHash@hash& (0+255),b
 40528                           
 40529                           ; BSR set to: 0
 40530                           ;../../VLCBlib_PIC/event_teach_large.c: 1317:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 40531   00C1AE  51A6               	movf	(getHash@en+1)& (0+255),w,b
 40532   00C1B0  19A5               	xorwf	getHash@en& (0+255),w,b
 40533   00C1B2  6FA7               	movwf	??_getHash& (0+255),b
 40534   00C1B4  51A8               	movf	getHash@hash& (0+255),w,b
 40535   00C1B6  0D07               	mullw	7
 40536   00C1B8  50F3               	movf	243,w,c
 40537   00C1BA  25A7               	addwf	??_getHash& (0+255),w,b
 40538   00C1BC  6FA8               	movwf	getHash@hash& (0+255),b
 40539                           
 40540                           ; BSR set to: 0
 40541                           ;../../VLCBlib_PIC/event_teach_large.c: 1319:     hash %= 32;
 40542   00C1BE  0E1F               	movlw	31
 40543   00C1C0  17A8               	andwf	getHash@hash& (0+255),f,b
 40544                           
 40545                           ; BSR set to: 0
 40546                           ;../../VLCBlib_PIC/event_teach_large.c: 1320:     return hash;
 40547   00C1C2  51A8               	movf	getHash@hash& (0+255),w,b
 40548                           
 40549                           ; BSR set to: 0
 40550   00C1C4  0012               	return		;funcret
 40551   00C1C6                     __end_of_getHash:
 40552                           	callstack 0
 40553                           
 40554 ;; *************** function _getEN *****************
 40555 ;; Defined at:
 40556 ;;		line 1240 in file "../../VLCBlib_PIC/event_teach_large.c"
 40557 ;; Parameters:    Size  Location     Type
 40558 ;;  tableIndex      1    wreg     unsigned char 
 40559 ;; Auto vars:     Size  Location     Type
 40560 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 40561 ;;  lo              2   63[BANK0 ] unsigned short 
 40562 ;;  hi              2   61[BANK0 ] unsigned short 
 40563 ;; Return value:  Size  Location     Type
 40564 ;;                  2   55[BANK0 ] unsigned short 
 40565 ;; Registers used:
 40566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40567 ;; Tracked objects:
 40568 ;;		On entry : 0/0
 40569 ;;		On exit  : 0/0
 40570 ;;		Unchanged: 0/0
 40571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40572 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40573 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40574 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40575 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40576 ;;Total ram usage:       11 bytes
 40577 ;; Hardware stack levels used: 1
 40578 ;; Hardware stack levels required when called: 14
 40579 ;; This function calls:
 40580 ;;		_readNVM
 40581 ;; This function is called by:
 40582 ;;		_nerdCallback
 40583 ;;		_doNenrd
 40584 ;;		_reqevCallback
 40585 ;;		_findEvent
 40586 ;;		_rebuildHashtable
 40587 ;;		_sendProducedEvent
 40588 ;; This function uses a non-reentrant model
 40589 ;;
 40590                           
 40591                           	psect	text174
 40592   00A992                     __ptext174:
 40593                           	callstack 0
 40594   00A992                     _getEN:
 40595                           	callstack 13
 40596                           
 40597                           ; BSR set to: 0
 40598                           ;incstack = 0
 40599                           ;getEN@tableIndex stored from wreg
 40600   00A992  0100               	movlb	0	; () banked
 40601   00A994  6FA1               	movwf	getEN@tableIndex& (0+255),b
 40602                           
 40603                           ;../../VLCBlib_PIC/event_teach_large.c: 1241:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1242:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1244:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 40604   00A996  0100               	movlb	0	; () banked
 40605   00A998  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40606   00A99A  0D10               	mullw	16
 40607   00A99C  CFF3 F099          	movff	prodl,??_getEN
 40608   00A9A0  CFF4 F09A          	movff	prodh,??_getEN+1
 40609   00A9A4  0E84               	movlw	132
 40610   00A9A6  2599               	addwf	??_getEN& (0+255),w,b
 40611   00A9A8  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40612   00A9AA  0EEF               	movlw	239
 40613   00A9AC  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40614   00A9AE  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40615   00A9B0  C09B  F091         	movff	??_getEN+2,readNVM@index
 40616   00A9B4  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40617   00A9B8  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40618   00A9BA  0E01               	movlw	1
 40619   00A9BC  ECC2  F058         	call	_readNVM
 40620   00A9C0  0100               	movlb	0	; () banked
 40621   00A9C2  5191               	movf	?_readNVM& (0+255),w,b
 40622   00A9C4  6F9F               	movwf	getEN@lo& (0+255),b
 40623   00A9C6  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 40624                           
 40625                           ;../../VLCBlib_PIC/event_teach_large.c: 1245:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+4 +1);
 40626   00A9C8  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40627   00A9CA  0D10               	mullw	16
 40628   00A9CC  CFF3 F099          	movff	prodl,??_getEN
 40629   00A9D0  CFF4 F09A          	movff	prodh,??_getEN+1
 40630   00A9D4  0E85               	movlw	133
 40631   00A9D6  2599               	addwf	??_getEN& (0+255),w,b
 40632   00A9D8  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40633   00A9DA  0EEF               	movlw	239
 40634   00A9DC  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40635   00A9DE  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40636   00A9E0  C09B  F091         	movff	??_getEN+2,readNVM@index
 40637   00A9E4  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40638   00A9E8  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40639   00A9EA  0E01               	movlw	1
 40640   00A9EC  ECC2  F058         	call	_readNVM
 40641   00A9F0  0100               	movlb	0	; () banked
 40642   00A9F2  5191               	movf	?_readNVM& (0+255),w,b
 40643   00A9F4  6F9D               	movwf	getEN@hi& (0+255),b
 40644   00A9F6  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 40645                           
 40646                           ; BSR set to: 0
 40647                           ;../../VLCBlib_PIC/event_teach_large.c: 1246:     return lo | (hi << 8);
 40648   00A9F8  519D               	movf	getEN@hi& (0+255),w,b
 40649   00A9FA  6F9A               	movwf	(??_getEN+1)& (0+255),b
 40650   00A9FC  6B99               	clrf	??_getEN& (0+255),b
 40651   00A9FE  519F               	movf	getEN@lo& (0+255),w,b
 40652   00AA00  1199               	iorwf	??_getEN& (0+255),w,b
 40653   00AA02  6F97               	movwf	?_getEN& (0+255),b
 40654   00AA04  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 40655   00AA06  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 40656   00AA08  6F98               	movwf	(?_getEN+1)& (0+255),b
 40657                           
 40658                           ; BSR set to: 0
 40659   00AA0A  0012               	return		;funcret
 40660   00AA0C                     __end_of_getEN:
 40661                           	callstack 0
 40662                           
 40663 ;; *************** function _configIO *****************
 40664 ;; Defined at:
 40665 ;;		line 555 in file "../main.c"
 40666 ;; Parameters:    Size  Location     Type
 40667 ;;  i               1    wreg     unsigned char 
 40668 ;; Auto vars:     Size  Location     Type
 40669 ;;  i               1    9[BANK1 ] unsigned char 
 40670 ;;  type            1    8[BANK1 ] unsigned char 
 40671 ;;  action          1    7[BANK1 ] unsigned char 
 40672 ;; Return value:  Size  Location     Type
 40673 ;;                  1    wreg      void 
 40674 ;; Registers used:
 40675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40676 ;; Tracked objects:
 40677 ;;		On entry : 0/0
 40678 ;;		On exit  : 0/0
 40679 ;;		Unchanged: 0/0
 40680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40682 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40683 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40684 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40685 ;;Total ram usage:        8 bytes
 40686 ;; Hardware stack levels used: 1
 40687 ;; Hardware stack levels required when called: 18
 40688 ;; This function calls:
 40689 ;;		_getNV
 40690 ;;		_readNVM
 40691 ;;		_setDigitalOutput
 40692 ;;		_writeNVM
 40693 ;; This function is called by:
 40694 ;;		_setup
 40695 ;;		_setType
 40696 ;; This function uses a non-reentrant model
 40697 ;;
 40698                           
 40699                           	psect	text175
 40700   004C08                     __ptext175:
 40701                           	callstack 0
 40702   004C08                     _configIO:
 40703                           	callstack 11
 40704                           
 40705                           ; BSR set to: 0
 40706                           ;incstack = 0
 40707                           ;configIO@i stored from wreg
 40708   004C08  0101               	movlb	1	; () banked
 40709   004C0A  6FC1               	movwf	configIO@i& (0+255),b
 40710                           
 40711                           ;../main.c: 556:     uint8_t action;;../main.c: 557:     uint8_t type;;../main.c: 559:  
      +                             if (i >= 16) return;
 40712   004C0C  0E0F               	movlw	15
 40713   004C0E  0101               	movlb	1	; () banked
 40714   004C10  65C1               	cpfsgt	configIO@i& (0+255),b
 40715   004C12  D001               	goto	l19407
 40716   004C14  0012               	return	
 40717   004C16                     l19407:
 40718                           
 40719                           ; BSR set to: 1
 40720                           ;../main.c: 562:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 40721   004C16  51C1               	movf	configIO@i& (0+255),w,b
 40722   004C18  0D07               	mullw	7
 40723   004C1A  50F3               	movf	243,w,c
 40724   004C1C  0F10               	addlw	16
 40725   004C1E  EC21  F05D         	call	_getNV
 40726   004C22  0100               	movlb	0	; () banked
 40727   004C24  518D               	movf	?_getNV& (0+255),w,b
 40728   004C26  0101               	movlb	1	; () banked
 40729   004C28  6FC0               	movwf	configIO@type& (0+255),b
 40730                           
 40731                           ;../main.c: 563:     switch (type) {
 40732   004C2A  D060               	goto	l19431
 40733   004C2C                     l19409:
 40734                           
 40735                           ; BSR set to: 1
 40736                           ;../main.c: 565:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 40737   004C2C  51C1               	movf	configIO@i& (0+255),w,b
 40738   004C2E  0D07               	mullw	7
 40739   004C30  50F3               	movf	243,w,c
 40740   004C32  0F11               	addlw	17
 40741   004C34  EC21  F05D         	call	_getNV
 40742   004C38  0100               	movlb	0	; () banked
 40743   004C3A  A58D               	btfss	?_getNV& (0+255),2,b
 40744   004C3C  D018               	goto	l19413
 40745                           
 40746                           ; BSR set to: 0
 40747                           ;../main.c: 566:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 40748   004C3E  0EDE               	movlw	222
 40749   004C40  0101               	movlb	1	; () banked
 40750   004C42  25C1               	addwf	configIO@i& (0+255),w,b
 40751   004C44  6FBA               	movwf	??_configIO& (0+255),b
 40752   004C46  6BBB               	clrf	(??_configIO+1)& (0+255),b
 40753   004C48  0E03               	movlw	3
 40754   004C4A  23BB               	addwfc	(??_configIO+1)& (0+255),f,b
 40755   004C4C  C1BA  F091         	movff	??_configIO,readNVM@index
 40756   004C50  C1BB  F092         	movff	??_configIO+1,readNVM@index+1
 40757   004C54  0100               	movlb	0	; () banked
 40758   004C56  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40759   004C58  0E00               	movlw	0
 40760   004C5A  ECC2  F058         	call	_readNVM
 40761   004C5E  0100               	movlb	0	; () banked
 40762   004C60  5191               	movf	?_readNVM& (0+255),w,b
 40763   004C62  6F97               	movwf	setDigitalOutput@state& (0+255),b
 40764   004C64  0101               	movlb	1	; () banked
 40765   004C66  51C1               	movf	configIO@i& (0+255),w,b
 40766   004C68  EC78  F051         	call	_setDigitalOutput
 40767                           
 40768                           ;../main.c: 567:             } else {
 40769   004C6C  D122               	goto	l19465
 40770   004C6E                     l19413:
 40771                           
 40772                           ; BSR set to: 0
 40773                           ;../main.c: 568:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 40774   004C6E  0101               	movlb	1	; () banked
 40775   004C70  51C1               	movf	configIO@i& (0+255),w,b
 40776   004C72  0D07               	mullw	7
 40777   004C74  50F3               	movf	243,w,c
 40778   004C76  0F11               	addlw	17
 40779   004C78  EC21  F05D         	call	_getNV
 40780   004C7C  0100               	movlb	0	; () banked
 40781   004C7E  BB8D               	btfsc	?_getNV& (0+255),5,b
 40782   004C80  D005               	goto	l19417
 40783                           
 40784                           ; BSR set to: 0
 40785   004C82  0E00               	movlw	0
 40786   004C84  0101               	movlb	1	; () banked
 40787   004C86  6FBE               	movwf	(_configIO$746+1)& (0+255),b
 40788   004C88  0E02               	movlw	2
 40789   004C8A  D004               	goto	L24
 40790   004C8C                     l19417:
 40791                           
 40792                           ; BSR set to: 0
 40793   004C8C  0E00               	movlw	0
 40794   004C8E  0101               	movlb	1	; () banked
 40795   004C90  6FBE               	movwf	(_configIO$746+1)& (0+255),b
 40796   004C92  0E01               	movlw	1
 40797   004C94                     L24:
 40798   004C94  6FBD               	movwf	_configIO$746& (0+255),b
 40799                           
 40800                           ; BSR set to: 1
 40801   004C96  C1BD  F1BF         	movff	_configIO$746,configIO@action
 40802                           
 40803                           ; BSR set to: 1
 40804                           ;../main.c: 569:                 setDigitalOutput(i, action);
 40805   004C9A  C1BF  F097         	movff	configIO@action,setDigitalOutput@state
 40806   004C9E  51C1               	movf	configIO@i& (0+255),w,b
 40807   004CA0  EC78  F051         	call	_setDigitalOutput
 40808                           
 40809                           ;../main.c: 571:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 40810   004CA4  0EDE               	movlw	222
 40811   004CA6  0101               	movlb	1	; () banked
 40812   004CA8  25C1               	addwf	configIO@i& (0+255),w,b
 40813   004CAA  6FBA               	movwf	??_configIO& (0+255),b
 40814   004CAC  6BBB               	clrf	(??_configIO+1)& (0+255),b
 40815   004CAE  0E03               	movlw	3
 40816   004CB0  23BB               	addwfc	(??_configIO+1)& (0+255),f,b
 40817   004CB2  C1BA  F0A4         	movff	??_configIO,writeNVM@index
 40818   004CB6  C1BB  F0A5         	movff	??_configIO+1,writeNVM@index+1
 40819   004CBA  0100               	movlb	0	; () banked
 40820   004CBC  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40821   004CBE  C1BF  F0A7         	movff	configIO@action,writeNVM@value
 40822   004CC2  0E00               	movlw	0
 40823   004CC4  EC52  F05B         	call	_writeNVM
 40824   004CC8  D0F4               	goto	l19465
 40825   004CCA                     l19425:
 40826                           
 40827                           ; BSR set to: 1
 40828                           ;../main.c: 580:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40829   004CCA  51C1               	movf	configIO@i& (0+255),w,b
 40830   004CCC  0D07               	mullw	7
 40831   004CCE  50F3               	movf	243,w,c
 40832   004CD0  0F11               	addlw	17
 40833   004CD2  EC21  F05D         	call	_getNV
 40834   004CD6  0100               	movlb	0	; () banked
 40835   004CD8  518D               	movf	?_getNV& (0+255),w,b
 40836   004CDA  0B10               	andlw	16
 40837   004CDC  0101               	movlb	1	; () banked
 40838   004CDE  6FBC               	movwf	_configIO$8039& (0+255),b
 40839                           
 40840                           ; BSR set to: 1
 40841                           ;../main.c: 580:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40842   004CE0  C1BC  F097         	movff	_configIO$8039,setDigitalOutput@state
 40843   004CE4  51C1               	movf	configIO@i& (0+255),w,b
 40844   004CE6  EC78  F051         	call	_setDigitalOutput
 40845                           
 40846                           ;../main.c: 581:             break;
 40847   004CEA  D0E3               	goto	l19465
 40848   004CEC                     l19431:
 40849                           
 40850                           ; BSR set to: 1
 40851   004CEC  51C0               	movf	configIO@type& (0+255),w,b
 40852                           
 40853                           ; Switch size 1, requested type "simple"
 40854                           ; Number of cases is 3, Range of values is 1 to 3
 40855                           ; switch strategies available:
 40856                           ; Name         Instructions Cycles
 40857                           ; simple_byte           10     6 (average)
 40858                           ;	Chosen strategy is simple_byte
 40859   004CEE  0A01               	xorlw	1	; case 1
 40860   004CF0  B4D8               	btfsc	status,2,c
 40861   004CF2  D79C               	goto	l19409
 40862   004CF4  0A03               	xorlw	3	; case 2
 40863   004CF6  B4D8               	btfsc	status,2,c
 40864   004CF8  D7E8               	goto	l19425
 40865   004CFA  0A01               	xorlw	1	; case 3
 40866   004CFC  B4D8               	btfsc	status,2,c
 40867   004CFE  D7E5               	goto	l19425
 40868   004D00  D0D8               	goto	l19465
 40869   004D02                     l19433:
 40870                           
 40871                           ; BSR set to: 1
 40872                           ;../main.c: 595:             if ((type == 0) || (type == 5) || (type == 6)) {
 40873   004D02  51C0               	movf	configIO@type& (0+255),w,b
 40874   004D04  B4D8               	btfsc	status,2,c
 40875   004D06  D008               	goto	u19480
 40876                           
 40877                           ; BSR set to: 1
 40878   004D08  0E05               	movlw	5
 40879   004D0A  19C0               	xorwf	configIO@type& (0+255),w,b
 40880   004D0C  B4D8               	btfsc	status,2,c
 40881   004D0E  D004               	goto	u19480
 40882                           
 40883                           ; BSR set to: 1
 40884   004D10  0E06               	movlw	6
 40885   004D12  19C0               	xorwf	configIO@type& (0+255),w,b
 40886   004D14  A4D8               	btfss	status,2,c
 40887   004D16  D01E               	goto	l19441
 40888   004D18                     u19480:
 40889                           
 40890                           ; BSR set to: 1
 40891                           ;../main.c: 596:                 TRISA |= (1 << configs[i].no);
 40892   004D18  51C1               	movf	configIO@i& (0+255),w,b
 40893   004D1A  0D04               	mullw	4
 40894   004D1C  0E02               	movlw	2
 40895   004D1E  26F3               	addwf	243,f,c
 40896   004D20  0E00               	movlw	0
 40897   004D22  22F4               	addwfc	244,f,c
 40898   004D24  0E35               	movlw	low _configs
 40899   004D26  24F3               	addwf	243,w,c
 40900   004D28  6EF6               	movwf	tblptrl,c
 40901   004D2A  0EEE               	movlw	high _configs
 40902   004D2C  20F4               	addwfc	244,w,c
 40903   004D2E  6EF7               	movwf	tblptrh,c
 40904   004D30                     	if	1	;There are 3 active tblptr bytes
 40905   004D30  6AF8               	clrf	tblptru,c
 40906   004D32  0E00               	movlw	low (__mediumconst shr (0+16))
 40907   004D34  22F8               	addwfc	tblptru,f,c
 40908   004D36                     	endif
 40909   004D36  0008               	tblrd		*
 40910   004D38  CFF5 F1BA          	movff	tablat,??_configIO
 40911   004D3C  0E01               	movlw	1
 40912   004D3E  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40913   004D40  2BBA               	incf	??_configIO& (0+255),f,b
 40914   004D42  D002               	goto	u19494
 40915   004D44                     u19495:
 40916   004D44  90D8               	bcf	status,0,c
 40917   004D46  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40918   004D48                     u19494:
 40919   004D48  2FBA               	decfsz	??_configIO& (0+255),f,b
 40920   004D4A  D7FC               	goto	u19495
 40921   004D4C  0101               	movlb	1	; () banked
 40922   004D4E  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40923   004D50  1292               	iorwf	146,f,c	;volatile
 40924                           
 40925                           ;../main.c: 597:             } else {
 40926   004D52  0012               	return	
 40927   004D54                     l19441:
 40928                           
 40929                           ; BSR set to: 1
 40930                           ;../main.c: 598:                 TRISA &= ~(1 << configs[i].no);
 40931   004D54  51C1               	movf	configIO@i& (0+255),w,b
 40932   004D56  0D04               	mullw	4
 40933   004D58  0E02               	movlw	2
 40934   004D5A  26F3               	addwf	243,f,c
 40935   004D5C  0E00               	movlw	0
 40936   004D5E  22F4               	addwfc	244,f,c
 40937   004D60  0E35               	movlw	low _configs
 40938   004D62  24F3               	addwf	243,w,c
 40939   004D64  6EF6               	movwf	tblptrl,c
 40940   004D66  0EEE               	movlw	high _configs
 40941   004D68  20F4               	addwfc	244,w,c
 40942   004D6A  6EF7               	movwf	tblptrh,c
 40943   004D6C                     	if	1	;There are 3 active tblptr bytes
 40944   004D6C  6AF8               	clrf	tblptru,c
 40945   004D6E  0E00               	movlw	low (__mediumconst shr (0+16))
 40946   004D70  22F8               	addwfc	tblptru,f,c
 40947   004D72                     	endif
 40948   004D72  0008               	tblrd		*
 40949   004D74  CFF5 F1BA          	movff	tablat,??_configIO
 40950   004D78  0E01               	movlw	1
 40951   004D7A  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40952   004D7C  2BBA               	incf	??_configIO& (0+255),f,b
 40953   004D7E  D002               	goto	u19504
 40954   004D80                     u19505:
 40955   004D80  90D8               	bcf	status,0,c
 40956   004D82  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40957   004D84                     u19504:
 40958   004D84  2FBA               	decfsz	??_configIO& (0+255),f,b
 40959   004D86  D7FC               	goto	u19505
 40960   004D88  0101               	movlb	1	; () banked
 40961   004D8A  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40962   004D8C  0AFF               	xorlw	255
 40963   004D8E  1692               	andwf	146,f,c	;volatile
 40964   004D90  0012               	return	
 40965   004D92                     l19443:
 40966                           
 40967                           ; BSR set to: 1
 40968                           ;../main.c: 602:             if ((type == 0) || (type == 5) || (type == 6)) {
 40969   004D92  51C0               	movf	configIO@type& (0+255),w,b
 40970   004D94  B4D8               	btfsc	status,2,c
 40971   004D96  D008               	goto	u19530
 40972                           
 40973                           ; BSR set to: 1
 40974   004D98  0E05               	movlw	5
 40975   004D9A  19C0               	xorwf	configIO@type& (0+255),w,b
 40976   004D9C  B4D8               	btfsc	status,2,c
 40977   004D9E  D004               	goto	u19530
 40978                           
 40979                           ; BSR set to: 1
 40980   004DA0  0E06               	movlw	6
 40981   004DA2  19C0               	xorwf	configIO@type& (0+255),w,b
 40982   004DA4  A4D8               	btfss	status,2,c
 40983   004DA6  D01E               	goto	l19451
 40984   004DA8                     u19530:
 40985                           
 40986                           ; BSR set to: 1
 40987                           ;../main.c: 603:                 TRISB |= (1 << configs[i].no);
 40988   004DA8  51C1               	movf	configIO@i& (0+255),w,b
 40989   004DAA  0D04               	mullw	4
 40990   004DAC  0E02               	movlw	2
 40991   004DAE  26F3               	addwf	243,f,c
 40992   004DB0  0E00               	movlw	0
 40993   004DB2  22F4               	addwfc	244,f,c
 40994   004DB4  0E35               	movlw	low _configs
 40995   004DB6  24F3               	addwf	243,w,c
 40996   004DB8  6EF6               	movwf	tblptrl,c
 40997   004DBA  0EEE               	movlw	high _configs
 40998   004DBC  20F4               	addwfc	244,w,c
 40999   004DBE  6EF7               	movwf	tblptrh,c
 41000   004DC0                     	if	1	;There are 3 active tblptr bytes
 41001   004DC0  6AF8               	clrf	tblptru,c
 41002   004DC2  0E00               	movlw	low (__mediumconst shr (0+16))
 41003   004DC4  22F8               	addwfc	tblptru,f,c
 41004   004DC6                     	endif
 41005   004DC6  0008               	tblrd		*
 41006   004DC8  CFF5 F1BA          	movff	tablat,??_configIO
 41007   004DCC  0E01               	movlw	1
 41008   004DCE  6FBB               	movwf	(??_configIO+1)& (0+255),b
 41009   004DD0  2BBA               	incf	??_configIO& (0+255),f,b
 41010   004DD2  D002               	goto	u19544
 41011   004DD4                     u19545:
 41012   004DD4  90D8               	bcf	status,0,c
 41013   004DD6  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 41014   004DD8                     u19544:
 41015   004DD8  2FBA               	decfsz	??_configIO& (0+255),f,b
 41016   004DDA  D7FC               	goto	u19545
 41017   004DDC  0101               	movlb	1	; () banked
 41018   004DDE  51BB               	movf	(??_configIO+1)& (0+255),w,b
 41019   004DE0  1293               	iorwf	147,f,c	;volatile
 41020                           
 41021                           ;../main.c: 604:             } else {
 41022   004DE2  0012               	return	
 41023   004DE4                     l19451:
 41024                           
 41025                           ; BSR set to: 1
 41026                           ;../main.c: 605:                 TRISB &= ~(1 << configs[i].no);
 41027   004DE4  51C1               	movf	configIO@i& (0+255),w,b
 41028   004DE6  0D04               	mullw	4
 41029   004DE8  0E02               	movlw	2
 41030   004DEA  26F3               	addwf	243,f,c
 41031   004DEC  0E00               	movlw	0
 41032   004DEE  22F4               	addwfc	244,f,c
 41033   004DF0  0E35               	movlw	low _configs
 41034   004DF2  24F3               	addwf	243,w,c
 41035   004DF4  6EF6               	movwf	tblptrl,c
 41036   004DF6  0EEE               	movlw	high _configs
 41037   004DF8  20F4               	addwfc	244,w,c
 41038   004DFA  6EF7               	movwf	tblptrh,c
 41039   004DFC                     	if	1	;There are 3 active tblptr bytes
 41040   004DFC  6AF8               	clrf	tblptru,c
 41041   004DFE  0E00               	movlw	low (__mediumconst shr (0+16))
 41042   004E00  22F8               	addwfc	tblptru,f,c
 41043   004E02                     	endif
 41044   004E02  0008               	tblrd		*
 41045   004E04  CFF5 F1BA          	movff	tablat,??_configIO
 41046   004E08  0E01               	movlw	1
 41047   004E0A  6FBB               	movwf	(??_configIO+1)& (0+255),b
 41048   004E0C  2BBA               	incf	??_configIO& (0+255),f,b
 41049   004E0E  D002               	goto	u19554
 41050   004E10                     u19555:
 41051   004E10  90D8               	bcf	status,0,c
 41052   004E12  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 41053   004E14                     u19554:
 41054   004E14  2FBA               	decfsz	??_configIO& (0+255),f,b
 41055   004E16  D7FC               	goto	u19555
 41056   004E18  0101               	movlb	1	; () banked
 41057   004E1A  51BB               	movf	(??_configIO+1)& (0+255),w,b
 41058   004E1C  0AFF               	xorlw	255
 41059   004E1E  1693               	andwf	147,f,c	;volatile
 41060   004E20  0012               	return	
 41061   004E22                     l19453:
 41062                           
 41063                           ; BSR set to: 1
 41064                           ;../main.c: 609:             if ((type == 0) || (type == 5) || (type == 6)) {
 41065   004E22  51C0               	movf	configIO@type& (0+255),w,b
 41066   004E24  B4D8               	btfsc	status,2,c
 41067   004E26  D008               	goto	u19580
 41068                           
 41069                           ; BSR set to: 1
 41070   004E28  0E05               	movlw	5
 41071   004E2A  19C0               	xorwf	configIO@type& (0+255),w,b
 41072   004E2C  B4D8               	btfsc	status,2,c
 41073   004E2E  D004               	goto	u19580
 41074                           
 41075                           ; BSR set to: 1
 41076   004E30  0E06               	movlw	6
 41077   004E32  19C0               	xorwf	configIO@type& (0+255),w,b
 41078   004E34  A4D8               	btfss	status,2,c
 41079   004E36  D01E               	goto	l19461
 41080   004E38                     u19580:
 41081                           
 41082                           ; BSR set to: 1
 41083                           ;../main.c: 610:                 TRISC |= (1 << configs[i].no);
 41084   004E38  51C1               	movf	configIO@i& (0+255),w,b
 41085   004E3A  0D04               	mullw	4
 41086   004E3C  0E02               	movlw	2
 41087   004E3E  26F3               	addwf	243,f,c
 41088   004E40  0E00               	movlw	0
 41089   004E42  22F4               	addwfc	244,f,c
 41090   004E44  0E35               	movlw	low _configs
 41091   004E46  24F3               	addwf	243,w,c
 41092   004E48  6EF6               	movwf	tblptrl,c
 41093   004E4A  0EEE               	movlw	high _configs
 41094   004E4C  20F4               	addwfc	244,w,c
 41095   004E4E  6EF7               	movwf	tblptrh,c
 41096   004E50                     	if	1	;There are 3 active tblptr bytes
 41097   004E50  6AF8               	clrf	tblptru,c
 41098   004E52  0E00               	movlw	low (__mediumconst shr (0+16))
 41099   004E54  22F8               	addwfc	tblptru,f,c
 41100   004E56                     	endif
 41101   004E56  0008               	tblrd		*
 41102   004E58  CFF5 F1BA          	movff	tablat,??_configIO
 41103   004E5C  0E01               	movlw	1
 41104   004E5E  6FBB               	movwf	(??_configIO+1)& (0+255),b
 41105   004E60  2BBA               	incf	??_configIO& (0+255),f,b
 41106   004E62  D002               	goto	u19594
 41107   004E64                     u19595:
 41108   004E64  90D8               	bcf	status,0,c
 41109   004E66  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 41110   004E68                     u19594:
 41111   004E68  2FBA               	decfsz	??_configIO& (0+255),f,b
 41112   004E6A  D7FC               	goto	u19595
 41113   004E6C  0101               	movlb	1	; () banked
 41114   004E6E  51BB               	movf	(??_configIO+1)& (0+255),w,b
 41115   004E70  1294               	iorwf	148,f,c	;volatile
 41116                           
 41117                           ;../main.c: 611:             } else {
 41118   004E72  0012               	return	
 41119   004E74                     l19461:
 41120                           
 41121                           ; BSR set to: 1
 41122                           ;../main.c: 612:                 TRISC &= ~(1 << configs[i].no);
 41123   004E74  51C1               	movf	configIO@i& (0+255),w,b
 41124   004E76  0D04               	mullw	4
 41125   004E78  0E02               	movlw	2
 41126   004E7A  26F3               	addwf	243,f,c
 41127   004E7C  0E00               	movlw	0
 41128   004E7E  22F4               	addwfc	244,f,c
 41129   004E80  0E35               	movlw	low _configs
 41130   004E82  24F3               	addwf	243,w,c
 41131   004E84  6EF6               	movwf	tblptrl,c
 41132   004E86  0EEE               	movlw	high _configs
 41133   004E88  20F4               	addwfc	244,w,c
 41134   004E8A  6EF7               	movwf	tblptrh,c
 41135   004E8C                     	if	1	;There are 3 active tblptr bytes
 41136   004E8C  6AF8               	clrf	tblptru,c
 41137   004E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 41138   004E90  22F8               	addwfc	tblptru,f,c
 41139   004E92                     	endif
 41140   004E92  0008               	tblrd		*
 41141   004E94  CFF5 F1BA          	movff	tablat,??_configIO
 41142   004E98  0E01               	movlw	1
 41143   004E9A  6FBB               	movwf	(??_configIO+1)& (0+255),b
 41144   004E9C  2BBA               	incf	??_configIO& (0+255),f,b
 41145   004E9E  D002               	goto	u19604
 41146   004EA0                     u19605:
 41147   004EA0  90D8               	bcf	status,0,c
 41148   004EA2  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 41149   004EA4                     u19604:
 41150   004EA4  2FBA               	decfsz	??_configIO& (0+255),f,b
 41151   004EA6  D7FC               	goto	u19605
 41152   004EA8  0101               	movlb	1	; () banked
 41153   004EAA  51BB               	movf	(??_configIO+1)& (0+255),w,b
 41154   004EAC  0AFF               	xorlw	255
 41155   004EAE  1694               	andwf	148,f,c	;volatile
 41156   004EB0  0012               	return	
 41157   004EB2                     l19465:
 41158   004EB2  0101               	movlb	1	; () banked
 41159   004EB4  51C1               	movf	configIO@i& (0+255),w,b
 41160   004EB6  0D04               	mullw	4
 41161   004EB8  0E01               	movlw	1
 41162   004EBA  26F3               	addwf	243,f,c
 41163   004EBC  0E00               	movlw	0
 41164   004EBE  22F4               	addwfc	244,f,c
 41165   004EC0  0E35               	movlw	low _configs
 41166   004EC2  24F3               	addwf	243,w,c
 41167   004EC4  6EF6               	movwf	tblptrl,c
 41168   004EC6  0EEE               	movlw	high _configs
 41169   004EC8  20F4               	addwfc	244,w,c
 41170   004ECA  6EF7               	movwf	tblptrh,c
 41171   004ECC                     	if	1	;There are 3 active tblptr bytes
 41172   004ECC  6AF8               	clrf	tblptru,c
 41173   004ECE  0E00               	movlw	low (__mediumconst shr (0+16))
 41174   004ED0  22F8               	addwfc	tblptru,f,c
 41175   004ED2                     	endif
 41176   004ED2  0008               	tblrd		*
 41177   004ED4  50F5               	movf	tablat,w,c
 41178                           
 41179                           ; Switch size 1, requested type "simple"
 41180                           ; Number of cases is 3, Range of values is 65 to 67
 41181                           ; switch strategies available:
 41182                           ; Name         Instructions Cycles
 41183                           ; simple_byte           10     6 (average)
 41184                           ;	Chosen strategy is simple_byte
 41185   004ED6  0A41               	xorlw	65	; case 65
 41186   004ED8  B4D8               	btfsc	status,2,c
 41187   004EDA  D713               	goto	l19433
 41188   004EDC  0A03               	xorlw	3	; case 66
 41189   004EDE  B4D8               	btfsc	status,2,c
 41190   004EE0  D758               	goto	l19443
 41191   004EE2  0A01               	xorlw	1	; case 67
 41192   004EE4  A4D8               	btfss	status,2,c
 41193   004EE6  0012               	return	
 41194   004EE8  D79C               	goto	l19453
 41195   004EEA                     __end_of_configIO:
 41196                           	callstack 0
 41197                           
 41198 ;; *************** function _writeNVM *****************
 41199 ;; Defined at:
 41200 ;;		line 525 in file "../../VLCBlib_PIC/nvm.c"
 41201 ;; Parameters:    Size  Location     Type
 41202 ;;  type            1    wreg     enum E12732
 41203 ;;  index           3   68[BANK0 ] unsigned um
 41204 ;;  value           1   71[BANK0 ] unsigned char 
 41205 ;; Auto vars:     Size  Location     Type
 41206 ;;  type            1   72[BANK0 ] enum E12732
 41207 ;; Return value:  Size  Location     Type
 41208 ;;                  1    wreg      unsigned char 
 41209 ;; Registers used:
 41210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41211 ;; Tracked objects:
 41212 ;;		On entry : 0/0
 41213 ;;		On exit  : 0/0
 41214 ;;		Unchanged: 0/0
 41215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41216 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41218 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41219 ;;      Totals:         0       5       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41220 ;;Total ram usage:        7 bytes
 41221 ;; Hardware stack levels used: 1
 41222 ;; Hardware stack levels required when called: 17
 41223 ;; This function calls:
 41224 ;;		_EEPROM_Write
 41225 ;;		_FLASH_Write
 41226 ;; This function is called by:
 41227 ;;		_configIO
 41228 ;;		_startDigitalOutput
 41229 ;;		_inputScan
 41230 ;;		_pollServos
 41231 ;;		_bootProcessMessage
 41232 ;;		_mnsFactoryReset
 41233 ;;		_mnsProcessMessage
 41234 ;;		_mnsPoll
 41235 ;;		_nvFactoryReset
 41236 ;;		_saveNV
 41237 ;;		_setNV
 41238 ;;		_factoryReset
 41239 ;;		_canFactoryReset
 41240 ;;		_setNewCanId
 41241 ;;		_clearAllEvents
 41242 ;;		_removeTableEntry
 41243 ;;		_addEvent
 41244 ;;		_writeEv
 41245 ;; This function uses a non-reentrant model
 41246 ;;
 41247                           
 41248                           	psect	text176
 41249   00B6A4                     __ptext176:
 41250                           	callstack 0
 41251   00B6A4                     _writeNVM:
 41252                           	callstack 11
 41253                           
 41254                           ; BSR set to: 1
 41255                           ;incstack = 0
 41256                           ;writeNVM@type stored from wreg
 41257   00B6A4  0100               	movlb	0	; () banked
 41258   00B6A6  6FA8               	movwf	writeNVM@type& (0+255),b
 41259                           
 41260                           ;../../VLCBlib_PIC/nvm.c: 526:     switch(type) {
 41261   00B6A8  D012               	goto	l18689
 41262   00B6AA                     l18679:
 41263                           
 41264                           ; BSR set to: 1
 41265                           ;../../VLCBlib_PIC/nvm.c: 528:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 41266   00B6AA  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 41267   00B6AE  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 41268   00B6B2  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 41269   00B6B6  EC01  F057         	call	_EEPROM_Write	;wreg free
 41270   00B6BA  0012               	return	
 41271   00B6BC                     l18683:
 41272                           
 41273                           ; BSR set to: 1
 41274                           ;../../VLCBlib_PIC/nvm.c: 530:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 41275   00B6BC  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 41276   00B6C0  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 41277   00B6C4  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 41278   00B6C8  ECF9  F046         	call	_FLASH_Write	;wreg free
 41279   00B6CC  0012               	return	
 41280   00B6CE                     l18689:
 41281   00B6CE  0100               	movlb	0	; () banked
 41282   00B6D0  51A8               	movf	writeNVM@type& (0+255),w,b
 41283   00B6D2  0101               	movlb	1	; () banked
 41284   00B6D4  6FB8               	movwf	??_writeNVM& (0+255),b
 41285   00B6D6  6BB9               	clrf	(??_writeNVM+1)& (0+255),b
 41286                           
 41287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41288                           ; Switch size 1, requested type "simple"
 41289                           ; Number of cases is 1, Range of values is 0 to 0
 41290                           ; switch strategies available:
 41291                           ; Name         Instructions Cycles
 41292                           ; simple_byte            4     3 (average)
 41293                           ;	Chosen strategy is simple_byte
 41294   00B6D8  51B9               	movf	(??_writeNVM+1)& (0+255),w,b
 41295   00B6DA  0A00               	xorlw	0	; case 0
 41296   00B6DC  A4D8               	btfss	status,2,c
 41297   00B6DE  0012               	return	
 41298                           
 41299                           ; BSR set to: 1
 41300                           ; Switch size 1, requested type "simple"
 41301                           ; Number of cases is 2, Range of values is 0 to 1
 41302                           ; switch strategies available:
 41303                           ; Name         Instructions Cycles
 41304                           ; simple_byte            7     4 (average)
 41305                           ;	Chosen strategy is simple_byte
 41306   00B6E0  51B8               	movf	??_writeNVM& (0+255),w,b
 41307   00B6E2  0A00               	xorlw	0	; case 0
 41308   00B6E4  B4D8               	btfsc	status,2,c
 41309   00B6E6  D7E1               	goto	l18679
 41310   00B6E8  0A01               	xorlw	1	; case 1
 41311   00B6EA  A4D8               	btfss	status,2,c
 41312   00B6EC  0012               	return	
 41313   00B6EE  D7E6               	goto	l18683
 41314   00B6F0                     __end_of_writeNVM:
 41315                           	callstack 0
 41316                           
 41317 ;; *************** function _FLASH_Write *****************
 41318 ;; Defined at:
 41319 ;;		line 479 in file "../../VLCBlib_PIC/nvm.c"
 41320 ;; Parameters:    Size  Location     Type
 41321 ;;  index           2   48[BANK0 ] unsigned short 
 41322 ;;  value           1   50[BANK0 ] unsigned char 
 41323 ;; Auto vars:     Size  Location     Type
 41324 ;;  oldValue        1    0        unsigned char 
 41325 ;; Return value:  Size  Location     Type
 41326 ;;                  1    wreg      unsigned char 
 41327 ;; Registers used:
 41328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41329 ;; Tracked objects:
 41330 ;;		On entry : 0/0
 41331 ;;		On exit  : 0/0
 41332 ;;		Unchanged: 0/0
 41333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41334 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41336 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41337 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41338 ;;Total ram usage:        7 bytes
 41339 ;; Hardware stack levels used: 1
 41340 ;; Hardware stack levels required when called: 16
 41341 ;; This function calls:
 41342 ;;		_eraseFlashBlock
 41343 ;;		_flushFlashBlock
 41344 ;;		_loadFlashBlock
 41345 ;; This function is called by:
 41346 ;;		_writeNVM
 41347 ;; This function uses a non-reentrant model
 41348 ;;
 41349                           
 41350                           	psect	text177
 41351   008DF2                     __ptext177:
 41352                           	callstack 0
 41353   008DF2                     _FLASH_Write:
 41354                           	callstack 11
 41355                           
 41356                           ;../../VLCBlib_PIC/nvm.c: 480:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 495:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 41357                           
 41358                           ;incstack = 0
 41359   008DF2  0EC0               	movlw	192
 41360   008DF4  0100               	movlb	0	; () banked
 41361   008DF6  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41362   008DF8  6F93               	movwf	??_FLASH_Write& (0+255),b
 41363   008DFA  0EFF               	movlw	255
 41364   008DFC  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41365   008DFE  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41366   008E00  51B9               	movf	_flashBlock& (0+255),w,b
 41367   008E02  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 41368   008E04  E104               	bnz	u18380
 41369   008E06  51BA               	movf	(_flashBlock+1)& (0+255),w,b
 41370   008E08  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 41371   008E0A  B4D8               	btfsc	status,2,c
 41372   008E0C  D015               	goto	l18637
 41373   008E0E                     u18380:
 41374                           
 41375                           ; BSR set to: 0
 41376                           ;../../VLCBlib_PIC/nvm.c: 496:         if (flashBlock != 0) {
 41377   008E0E  51B9               	movf	_flashBlock& (0+255),w,b
 41378   008E10  11BA               	iorwf	(_flashBlock+1)& (0+255),w,b
 41379   008E12  B4D8               	btfsc	status,2,c
 41380   008E14  D008               	goto	l18633
 41381                           
 41382                           ; BSR set to: 0
 41383                           ;../../VLCBlib_PIC/nvm.c: 498:             if (flashFlags.eraseNeeded) {
 41384   008E16  A3C4               	btfss	_flashFlags& (0+255),1,b
 41385   008E18  D004               	goto	l18631
 41386                           
 41387                           ; BSR set to: 0
 41388                           ;../../VLCBlib_PIC/nvm.c: 499:                 eraseFlashBlock();
 41389   008E1A  EC78  F05B         	call	_eraseFlashBlock	;wreg free
 41390                           
 41391                           ;../../VLCBlib_PIC/nvm.c: 500:                 flashFlags.eraseNeeded = 0;
 41392   008E1E  0100               	movlb	0	; () banked
 41393   008E20  93C4               	bcf	_flashFlags& (0+255),1,b
 41394   008E22                     l18631:
 41395                           
 41396                           ; BSR set to: 0
 41397                           ;../../VLCBlib_PIC/nvm.c: 503:             flushFlashBlock();
 41398   008E22  EC8D  F052         	call	_flushFlashBlock	;wreg free
 41399   008E26                     l18633:
 41400                           
 41401                           ;../../VLCBlib_PIC/nvm.c: 507:         flashBlock = (index&(~((flash_address_t)64 -1)));
 41402   008E26  0EC0               	movlw	192
 41403   008E28  0100               	movlb	0	; () banked
 41404   008E2A  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41405   008E2C  6FB9               	movwf	_flashBlock& (0+255),b
 41406   008E2E  0EFF               	movlw	255
 41407   008E30  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41408   008E32  6FBA               	movwf	(_flashBlock+1)& (0+255),b
 41409                           
 41410                           ; BSR set to: 0
 41411                           ;../../VLCBlib_PIC/nvm.c: 508:         loadFlashBlock();
 41412   008E34  EC33  F05C         	call	_loadFlashBlock	;wreg free
 41413   008E38                     l18637:
 41414                           
 41415                           ;../../VLCBlib_PIC/nvm.c: 510:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 41416   008E38  0E3F               	movlw	63
 41417   008E3A  0100               	movlb	0	; () banked
 41418   008E3C  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41419   008E3E  6F93               	movwf	??_FLASH_Write& (0+255),b
 41420   008E40  0E00               	movlw	0
 41421   008E42  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41422   008E44  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41423   008E46  0E47               	movlw	low _flashBuffer
 41424   008E48  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41425   008E4A  6ED9               	movwf	fsr2l,c
 41426   008E4C  0E03               	movlw	high _flashBuffer
 41427   008E4E  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41428   008E50  6EDA               	movwf	fsr2h,c
 41429   008E52  50DF               	movf	indf2,w,c
 41430   008E54  0AFF               	xorlw	255
 41431   008E56  1592               	andwf	FLASH_Write@value& (0+255),w,b
 41432   008E58  0900               	iorlw	0
 41433   008E5A  B4D8               	btfsc	status,2,c
 41434   008E5C  D003               	goto	u18410
 41435   008E5E  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 41436   008E60  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 41437   008E62  D002               	goto	u18428
 41438   008E64                     u18410:
 41439   008E64  0100               	movlb	0	; () banked
 41440   008E66  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 41441   008E68                     u18428:
 41442   008E68  31C4               	rrcf	_flashFlags& (0+255),w,b
 41443   008E6A  0B01               	andlw	1
 41444   008E6C  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 41445   008E6E  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 41446   008E70  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 41447   008E72  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 41448   008E74  51C4               	movf	_flashFlags& (0+255),w,b
 41449   008E76  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 41450   008E78  0BFD               	andlw	-3
 41451   008E7A  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 41452   008E7C  6FC4               	movwf	_flashFlags& (0+255),b
 41453                           
 41454                           ; BSR set to: 0
 41455                           ;../../VLCBlib_PIC/nvm.c: 511:     if (flashBuffer[(index&(64 -1))] != value) {
 41456   008E7E  0E3F               	movlw	63
 41457   008E80  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41458   008E82  6F93               	movwf	??_FLASH_Write& (0+255),b
 41459   008E84  0E00               	movlw	0
 41460   008E86  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41461   008E88  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41462   008E8A  0E47               	movlw	low _flashBuffer
 41463   008E8C  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41464   008E8E  6ED9               	movwf	fsr2l,c
 41465   008E90  0E03               	movlw	high _flashBuffer
 41466   008E92  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41467   008E94  6EDA               	movwf	fsr2h,c
 41468   008E96  5192               	movf	FLASH_Write@value& (0+255),w,b
 41469   008E98  18DE               	xorwf	postinc2,w,c
 41470   008E9A  B4D8               	btfsc	status,2,c
 41471   008E9C  D00F               	goto	l18645
 41472                           
 41473                           ; BSR set to: 0
 41474                           ;../../VLCBlib_PIC/nvm.c: 512:         flashFlags.writeNeeded = 1;
 41475   008E9E  81C4               	bsf	_flashFlags& (0+255),0,b
 41476                           
 41477                           ; BSR set to: 0
 41478                           ;../../VLCBlib_PIC/nvm.c: 513:         flashBuffer[(index&(64 -1))] = value;
 41479   008EA0  0E3F               	movlw	63
 41480   008EA2  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41481   008EA4  6F93               	movwf	??_FLASH_Write& (0+255),b
 41482   008EA6  0E00               	movlw	0
 41483   008EA8  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41484   008EAA  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41485   008EAC  0E47               	movlw	low _flashBuffer
 41486   008EAE  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41487   008EB0  6ED9               	movwf	fsr2l,c
 41488   008EB2  0E03               	movlw	high _flashBuffer
 41489   008EB4  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41490   008EB6  6EDA               	movwf	fsr2h,c
 41491   008EB8  C092  FFDF         	movff	FLASH_Write@value,indf2
 41492   008EBC                     l18645:
 41493                           
 41494                           ; BSR set to: 0
 41495                           ;../../VLCBlib_PIC/nvm.c: 515:     return GRSP_OK;
 41496   008EBC  0E00               	movlw	0
 41497                           
 41498                           ; BSR set to: 0
 41499   008EBE  0012               	return		;funcret
 41500   008EC0                     __end_of_FLASH_Write:
 41501                           	callstack 0
 41502                           
 41503 ;; *************** function _loadFlashBlock *****************
 41504 ;; Defined at:
 41505 ;;		line 441 in file "../../VLCBlib_PIC/nvm.c"
 41506 ;; Parameters:    Size  Location     Type
 41507 ;;		None
 41508 ;; Auto vars:     Size  Location     Type
 41509 ;;  i               1   45[BANK0 ] unsigned char 
 41510 ;; Return value:  Size  Location     Type
 41511 ;;                  1    wreg      void 
 41512 ;; Registers used:
 41513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41514 ;; Tracked objects:
 41515 ;;		On entry : 0/0
 41516 ;;		On exit  : 0/0
 41517 ;;		Unchanged: 0/0
 41518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41523 ;;Total ram usage:        1 bytes
 41524 ;; Hardware stack levels used: 1
 41525 ;; Hardware stack levels required when called: 12
 41526 ;; This function calls:
 41527 ;;		Nothing
 41528 ;; This function is called by:
 41529 ;;		_FLASH_Write
 41530 ;; This function uses a non-reentrant model
 41531 ;;
 41532                           
 41533                           	psect	text178
 41534   00B866                     __ptext178:
 41535                           	callstack 0
 41536   00B866                     _loadFlashBlock:
 41537                           	callstack 14
 41538                           
 41539                           ;../../VLCBlib_PIC/nvm.c: 443:     EECON1=0X80;
 41540                           
 41541                           ; BSR set to: 0
 41542                           ;incstack = 0
 41543   00B866  0E80               	movlw	128
 41544   00B868  6E7F               	movwf	127,c	;volsfr
 41545                           
 41546                           ;../../VLCBlib_PIC/nvm.c: 444:     TBLPTR = flashBlock;
 41547   00B86A  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41548   00B86E  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41549   00B872  6AF8               	clrf	248,c	;volatile
 41550                           
 41551                           ;../../VLCBlib_PIC/nvm.c: 445:     TBLPTRU = 0;
 41552   00B874  0E00               	movlw	0
 41553   00B876  6EF8               	movwf	248,c	;volatile
 41554                           
 41555                           ;../../VLCBlib_PIC/nvm.c: 446:     for (uint8_t i=0; i<64; i++) {
 41556   00B878  0E00               	movlw	0
 41557   00B87A  0100               	movlb	0	; () banked
 41558   00B87C  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 41559   00B87E                     l2174:
 41560                           
 41561                           ; BSR set to: 0
 41562   00B87E  0009               	tblrd		*+	;# 
 41563                           
 41564                           ;../../VLCBlib_PIC/nvm.c: 448:         __nop();
 41565   00B880  0000               	nop	
 41566                           
 41567                           ;../../VLCBlib_PIC/nvm.c: 449:         flashBuffer[i] = TABLAT;
 41568   00B882  0E47               	movlw	low _flashBuffer
 41569   00B884  0100               	movlb	0	; () banked
 41570   00B886  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 41571   00B888  6ED9               	movwf	fsr2l,c
 41572   00B88A  6ADA               	clrf	fsr2h,c
 41573   00B88C  0E03               	movlw	high _flashBuffer
 41574   00B88E  22DA               	addwfc	fsr2h,f,c
 41575   00B890  CFF5 FFDF          	movff	tablat,indf2	;volatile
 41576                           
 41577                           ; BSR set to: 0
 41578                           ;../../VLCBlib_PIC/nvm.c: 450:     }
 41579   00B894  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 41580                           
 41581                           ; BSR set to: 0
 41582   00B896  0E3F               	movlw	63
 41583   00B898  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 41584   00B89A  D7F1               	goto	l2174
 41585                           
 41586                           ; BSR set to: 0
 41587                           ;../../VLCBlib_PIC/nvm.c: 451:     TBLPTR = flashBlock;
 41588   00B89C  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41589   00B8A0  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41590   00B8A4  6AF8               	clrf	248,c	;volatile
 41591                           
 41592                           ; BSR set to: 0
 41593                           ;../../VLCBlib_PIC/nvm.c: 452:     TBLPTRU = 0;
 41594   00B8A6  0E00               	movlw	0
 41595   00B8A8  6EF8               	movwf	248,c	;volatile
 41596                           
 41597                           ; BSR set to: 0
 41598                           ;../../VLCBlib_PIC/nvm.c: 468:     flashFlags.asByte = 0;
 41599   00B8AA  0E00               	movlw	0
 41600   00B8AC  6FC4               	movwf	_flashFlags& (0+255),b
 41601                           
 41602                           ; BSR set to: 0
 41603   00B8AE  0012               	return		;funcret
 41604   00B8B0                     __end_of_loadFlashBlock:
 41605                           	callstack 0
 41606                           
 41607 ;; *************** function _flushFlashBlock *****************
 41608 ;; Defined at:
 41609 ;;		line 367 in file "../../VLCBlib_PIC/nvm.c"
 41610 ;; Parameters:    Size  Location     Type
 41611 ;;		None
 41612 ;; Auto vars:     Size  Location     Type
 41613 ;;  i               1   47[BANK0 ] unsigned char 
 41614 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 41615 ;; Return value:  Size  Location     Type
 41616 ;;                  1    wreg      void 
 41617 ;; Registers used:
 41618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41619 ;; Tracked objects:
 41620 ;;		On entry : 0/0
 41621 ;;		On exit  : 0/0
 41622 ;;		Unchanged: 0/0
 41623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41625 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41627 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41628 ;;Total ram usage:        2 bytes
 41629 ;; Hardware stack levels used: 1
 41630 ;; Hardware stack levels required when called: 15
 41631 ;; This function calls:
 41632 ;;		_APP_isSuitableTimeToWriteFlash
 41633 ;;		_eraseFlashBlock
 41634 ;; This function is called by:
 41635 ;;		_APP_factoryReset
 41636 ;;		_deleteActionRange
 41637 ;;		_poll
 41638 ;;		_FLASH_Write
 41639 ;;		_clearAllEvents
 41640 ;;		_removeTableEntry
 41641 ;;		_addEvent
 41642 ;;		_deleteHappeningRange
 41643 ;; This function uses a non-reentrant model
 41644 ;;
 41645                           
 41646                           	psect	text179
 41647   00A51A                     __ptext179:
 41648                           	callstack 0
 41649   00A51A                     _flushFlashBlock:
 41650                           	callstack 11
 41651                           
 41652                           ;../../VLCBlib_PIC/nvm.c: 368:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 37
      +                          0:     TBLPTR = flashBlock;
 41653                           
 41654                           ; BSR set to: 0
 41655                           ;incstack = 0
 41656   00A51A  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41657   00A51E  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41658   00A522  6AF8               	clrf	248,c	;volatile
 41659                           
 41660                           ;../../VLCBlib_PIC/nvm.c: 371:     TBLPTRU = 0;
 41661   00A524  0E00               	movlw	0
 41662   00A526  6EF8               	movwf	248,c	;volatile
 41663                           
 41664                           ;../../VLCBlib_PIC/nvm.c: 376:     if (! flashFlags.writeNeeded) return;
 41665   00A528  0100               	movlb	0	; () banked
 41666   00A52A  A1C4               	btfss	_flashFlags& (0+255),0,b
 41667   00A52C  0012               	return	
 41668   00A52E                     l18447:
 41669                           
 41670                           ;../../VLCBlib_PIC/nvm.c: 379:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 41671   00A52E  ECA1  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41672   00A532  0900               	iorlw	0
 41673   00A534  B4D8               	btfsc	status,2,c
 41674   00A536  D7FB               	goto	l18447
 41675                           
 41676                           ;../../VLCBlib_PIC/nvm.c: 382:     if (flashFlags.eraseNeeded) {
 41677   00A538  0100               	movlb	0	; () banked
 41678   00A53A  B3C4               	btfsc	_flashFlags& (0+255),1,b
 41679                           
 41680                           ; BSR set to: 0
 41681                           ;../../VLCBlib_PIC/nvm.c: 383:         eraseFlashBlock();
 41682   00A53C  EC78  F05B         	call	_eraseFlashBlock	;wreg free
 41683                           
 41684                           ;../../VLCBlib_PIC/nvm.c: 386:     interruptEnabled = (INTCONbits.GIEH);
 41685   00A540  0E00               	movlw	0
 41686   00A542  BEF2               	btfsc	242,7,c	;volatile
 41687   00A544  0E01               	movlw	1
 41688   00A546  0100               	movlb	0	; () banked
 41689   00A548  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 41690                           
 41691                           ; BSR set to: 0
 41692                           ;../../VLCBlib_PIC/nvm.c: 387:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41693   00A54A  9EF2               	bcf	242,7,c	;volatile
 41694                           
 41695                           ; BSR set to: 0
 41696   00A54C  9CF2               	bcf	242,6,c	;volatile
 41697                           
 41698                           ; BSR set to: 0
 41699                           ;../../VLCBlib_PIC/nvm.c: 389:     for (uint8_t i=0; i<64; i++) {
 41700   00A54E  0E00               	movlw	0
 41701   00A550  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 41702   00A552                     l18463:
 41703                           
 41704                           ; BSR set to: 0
 41705                           ;../../VLCBlib_PIC/nvm.c: 390:         TABLAT = flashBuffer[i];
 41706   00A552  0E47               	movlw	low _flashBuffer
 41707   00A554  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 41708   00A556  6ED9               	movwf	fsr2l,c
 41709   00A558  6ADA               	clrf	fsr2h,c
 41710   00A55A  0E03               	movlw	high _flashBuffer
 41711   00A55C  22DA               	addwfc	fsr2h,f,c
 41712   00A55E  50DF               	movf	indf2,w,c
 41713   00A560  6EF5               	movwf	245,c	;volatile
 41714   00A562  000D               	tblwt		*+	;# 
 41715                           
 41716                           ;../../VLCBlib_PIC/nvm.c: 392:     }
 41717   00A564  0100               	movlb	0	; () banked
 41718   00A566  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 41719                           
 41720                           ; BSR set to: 0
 41721   00A568  0E3F               	movlw	63
 41722   00A56A  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 41723   00A56C  D7F2               	goto	l18463
 41724                           
 41725                           ; BSR set to: 0
 41726                           ;../../VLCBlib_PIC/nvm.c: 399:     TBLPTR = flashBlock;
 41727   00A56E  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41728   00A572  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41729   00A576  6AF8               	clrf	248,c	;volatile
 41730                           
 41731                           ; BSR set to: 0
 41732                           ;../../VLCBlib_PIC/nvm.c: 400:     TBLPTRU = 0;
 41733   00A578  0E00               	movlw	0
 41734   00A57A  6EF8               	movwf	248,c	;volatile
 41735                           
 41736                           ; BSR set to: 0
 41737                           ;../../VLCBlib_PIC/nvm.c: 401:     EECON1bits.EEPGD = 1;
 41738   00A57C  8E7F               	bsf	127,7,c	;volsfr
 41739                           
 41740                           ; BSR set to: 0
 41741                           ;../../VLCBlib_PIC/nvm.c: 402:     EECON1bits.CFGS = 0;
 41742   00A57E  9C7F               	bcf	127,6,c	;volsfr
 41743                           
 41744                           ; BSR set to: 0
 41745                           ;../../VLCBlib_PIC/nvm.c: 403:     EECON1bits.FREE = 0;
 41746   00A580  987F               	bcf	127,4,c	;volsfr
 41747                           
 41748                           ; BSR set to: 0
 41749                           ;../../VLCBlib_PIC/nvm.c: 404:     EECON1bits.WREN = 1;
 41750   00A582  847F               	bsf	127,2,c	;volsfr
 41751                           
 41752                           ; BSR set to: 0
 41753                           ;../../VLCBlib_PIC/nvm.c: 406:     EECON2 = 0x55;
 41754   00A584  0E55               	movlw	85
 41755   00A586  6E7E               	movwf	126,c	;volsfr
 41756                           
 41757                           ; BSR set to: 0
 41758                           ;../../VLCBlib_PIC/nvm.c: 407:     EECON2 = 0xAA;
 41759   00A588  0EAA               	movlw	170
 41760   00A58A  6E7E               	movwf	126,c	;volsfr
 41761                           
 41762                           ; BSR set to: 0
 41763                           ;../../VLCBlib_PIC/nvm.c: 408:     EECON1bits.WR = 1;
 41764   00A58C  827F               	bsf	127,1,c	;volsfr
 41765                           
 41766                           ; BSR set to: 0
 41767                           ;../../VLCBlib_PIC/nvm.c: 409:     EECON1bits.WREN = 0;
 41768   00A58E  947F               	bcf	127,2,c	;volsfr
 41769                           
 41770                           ; BSR set to: 0
 41771                           ;../../VLCBlib_PIC/nvm.c: 432:     if (interruptEnabled) {
 41772   00A590  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 41773   00A592  B4D8               	btfsc	status,2,c
 41774   00A594  D002               	goto	l18493
 41775                           
 41776                           ; BSR set to: 0
 41777                           ;../../VLCBlib_PIC/nvm.c: 433:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41778   00A596  8EF2               	bsf	242,7,c	;volatile
 41779   00A598  8CF2               	bsf	242,6,c	;volatile
 41780   00A59A                     l18493:
 41781                           
 41782                           ; BSR set to: 0
 41783                           ;../../VLCBlib_PIC/nvm.c: 435:     flashFlags.asByte = 0;
 41784   00A59A  0E00               	movlw	0
 41785   00A59C  6FC4               	movwf	_flashFlags& (0+255),b
 41786                           
 41787                           ; BSR set to: 0
 41788   00A59E  0012               	return		;funcret
 41789   00A5A0                     __end_of_flushFlashBlock:
 41790                           	callstack 0
 41791                           
 41792 ;; *************** function _eraseFlashBlock *****************
 41793 ;; Defined at:
 41794 ;;		line 316 in file "../../VLCBlib_PIC/nvm.c"
 41795 ;; Parameters:    Size  Location     Type
 41796 ;;		None
 41797 ;; Auto vars:     Size  Location     Type
 41798 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 41799 ;; Return value:  Size  Location     Type
 41800 ;;                  1    wreg      void 
 41801 ;; Registers used:
 41802 ;;		wreg, status,2, cstack
 41803 ;; Tracked objects:
 41804 ;;		On entry : 0/0
 41805 ;;		On exit  : 0/0
 41806 ;;		Unchanged: 0/0
 41807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41809 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41811 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41812 ;;Total ram usage:        1 bytes
 41813 ;; Hardware stack levels used: 1
 41814 ;; Hardware stack levels required when called: 14
 41815 ;; This function calls:
 41816 ;;		_APP_isSuitableTimeToWriteFlash
 41817 ;; This function is called by:
 41818 ;;		_flushFlashBlock
 41819 ;;		_FLASH_Write
 41820 ;; This function uses a non-reentrant model
 41821 ;;
 41822                           
 41823                           	psect	text180
 41824   00B6F0                     __ptext180:
 41825                           	callstack 0
 41826   00B6F0                     _eraseFlashBlock:
 41827                           	callstack 11
 41828                           
 41829                           ;../../VLCBlib_PIC/nvm.c: 320:     while (! APP_isSuitableTimeToWriteFlash())
 41830                           
 41831                           ;../../VLCBlib_PIC/nvm.c: 317:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 32
      +                          0:     while (! APP_isSuitableTimeToWriteFlash())
 41832                           
 41833                           ; BSR set to: 0
 41834                           ;incstack = 0
 41835   00B6F0  ECA1  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41836   00B6F4  0900               	iorlw	0
 41837   00B6F6  B4D8               	btfsc	status,2,c
 41838   00B6F8  D7FB               	goto	__ptext180
 41839                           
 41840                           ;../../VLCBlib_PIC/nvm.c: 323:     interruptEnabled = (INTCONbits.GIEH);
 41841   00B6FA  0E00               	movlw	0
 41842   00B6FC  BEF2               	btfsc	242,7,c	;volatile
 41843   00B6FE  0E01               	movlw	1
 41844   00B700  0100               	movlb	0	; () banked
 41845   00B702  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 41846                           
 41847                           ; BSR set to: 0
 41848                           ;../../VLCBlib_PIC/nvm.c: 325:     TBLPTR = flashBlock;
 41849   00B704  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41850   00B708  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41851   00B70C  6AF8               	clrf	248,c	;volatile
 41852                           
 41853                           ;../../VLCBlib_PIC/nvm.c: 326:     TBLPTRU = 0;
 41854   00B70E  0E00               	movlw	0
 41855   00B710  6EF8               	movwf	248,c	;volatile
 41856                           
 41857                           ; BSR set to: 0
 41858                           ;../../VLCBlib_PIC/nvm.c: 327:     EECON1bits.EEPGD = 1;
 41859   00B712  8E7F               	bsf	127,7,c	;volsfr
 41860                           
 41861                           ; BSR set to: 0
 41862                           ;../../VLCBlib_PIC/nvm.c: 328:     EECON1bits.CFGS = 0;
 41863   00B714  9C7F               	bcf	127,6,c	;volsfr
 41864                           
 41865                           ; BSR set to: 0
 41866                           ;../../VLCBlib_PIC/nvm.c: 329:     EECON1bits.WREN = 1;
 41867   00B716  847F               	bsf	127,2,c	;volsfr
 41868                           
 41869                           ; BSR set to: 0
 41870                           ;../../VLCBlib_PIC/nvm.c: 330:     EECON1bits.FREE = 1;
 41871   00B718  887F               	bsf	127,4,c	;volsfr
 41872                           
 41873                           ; BSR set to: 0
 41874                           ;../../VLCBlib_PIC/nvm.c: 331:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41875   00B71A  9EF2               	bcf	242,7,c	;volatile
 41876                           
 41877                           ; BSR set to: 0
 41878   00B71C  9CF2               	bcf	242,6,c	;volatile
 41879                           
 41880                           ;../../VLCBlib_PIC/nvm.c: 332:     EECON2 = 0x55;
 41881   00B71E  0E55               	movlw	85
 41882   00B720  6E7E               	movwf	126,c	;volsfr
 41883                           
 41884                           ;../../VLCBlib_PIC/nvm.c: 333:     EECON2 = 0xaa;
 41885   00B722  0EAA               	movlw	170
 41886   00B724  6E7E               	movwf	126,c	;volsfr
 41887                           
 41888                           ; BSR set to: 0
 41889                           ;../../VLCBlib_PIC/nvm.c: 334:     EECON1bits.WR = 1;
 41890   00B726  827F               	bsf	127,1,c	;volsfr
 41891   00B728                     l2156:
 41892                           
 41893                           ;../../VLCBlib_PIC/nvm.c: 335:     while(EECON1bits.WR)
 41894   00B728  B27F               	btfsc	127,1,c	;volsfr
 41895   00B72A  D7FE               	goto	l2156
 41896                           
 41897                           ;../../VLCBlib_PIC/nvm.c: 337:     EECON1bits.WREN = 0;
 41898   00B72C  947F               	bcf	127,2,c	;volsfr
 41899                           
 41900                           ;../../VLCBlib_PIC/nvm.c: 357:     if (interruptEnabled) {
 41901   00B72E  0100               	movlb	0	; () banked
 41902   00B730  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 41903   00B732  B4D8               	btfsc	status,2,c
 41904   00B734  0012               	return	
 41905                           
 41906                           ; BSR set to: 0
 41907                           ;../../VLCBlib_PIC/nvm.c: 358:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41908   00B736  8EF2               	bsf	242,7,c	;volatile
 41909   00B738  8CF2               	bsf	242,6,c	;volatile
 41910                           
 41911                           ; BSR set to: 0
 41912   00B73A  0012               	return		;funcret
 41913   00B73C                     __end_of_eraseFlashBlock:
 41914                           	callstack 0
 41915                           
 41916 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 41917 ;; Defined at:
 41918 ;;		line 399 in file "../main.c"
 41919 ;; Parameters:    Size  Location     Type
 41920 ;;		None
 41921 ;; Auto vars:     Size  Location     Type
 41922 ;;		None
 41923 ;; Return value:  Size  Location     Type
 41924 ;;                  1    wreg      enum E12686
 41925 ;; Registers used:
 41926 ;;		wreg, status,2, cstack
 41927 ;; Tracked objects:
 41928 ;;		On entry : 0/0
 41929 ;;		On exit  : 0/0
 41930 ;;		Unchanged: 0/0
 41931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41936 ;;Total ram usage:        0 bytes
 41937 ;; Hardware stack levels used: 1
 41938 ;; Hardware stack levels required when called: 13
 41939 ;; This function calls:
 41940 ;;		_isNoServoPulses
 41941 ;; This function is called by:
 41942 ;;		_eraseFlashBlock
 41943 ;;		_flushFlashBlock
 41944 ;; This function uses a non-reentrant model
 41945 ;;
 41946                           
 41947                           	psect	text181
 41948   00C342                     __ptext181:
 41949                           	callstack 0
 41950   00C342                     _APP_isSuitableTimeToWriteFlash:
 41951                           	callstack 11
 41952                           
 41953                           ;../main.c: 401:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 41954                           
 41955                           ; BSR set to: 0
 41956                           ;incstack = 0
 41957   00C342  ECAA  F061         	call	_isNoServoPulses	;wreg free
 41958   00C346  0900               	iorlw	0
 41959   00C348  B4D8               	btfsc	status,2,c
 41960   00C34A  D002               	goto	u18110
 41961   00C34C  0E01               	movlw	1
 41962   00C34E  0012               	return	
 41963   00C350                     u18110:
 41964   00C350  0E00               	movlw	0
 41965   00C352  0012               	return		;funcret
 41966   00C354                     __end_of_APP_isSuitableTimeToWriteFlash:
 41967                           	callstack 0
 41968                           
 41969 ;; *************** function _isNoServoPulses *****************
 41970 ;; Defined at:
 41971 ;;		line 694 in file "../servo.c"
 41972 ;; Parameters:    Size  Location     Type
 41973 ;;		None
 41974 ;; Auto vars:     Size  Location     Type
 41975 ;;		None
 41976 ;; Return value:  Size  Location     Type
 41977 ;;                  1    wreg      enum E12710
 41978 ;; Registers used:
 41979 ;;		wreg
 41980 ;; Tracked objects:
 41981 ;;		On entry : 0/0
 41982 ;;		On exit  : 0/0
 41983 ;;		Unchanged: 0/0
 41984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41989 ;;Total ram usage:        0 bytes
 41990 ;; Hardware stack levels used: 1
 41991 ;; Hardware stack levels required when called: 12
 41992 ;; This function calls:
 41993 ;;		Nothing
 41994 ;; This function is called by:
 41995 ;;		_APP_isSuitableTimeToWriteFlash
 41996 ;; This function uses a non-reentrant model
 41997 ;;
 41998                           
 41999                           	psect	text182
 42000   00C354                     __ptext182:
 42001                           	callstack 0
 42002   00C354                     _isNoServoPulses:
 42003                           	callstack 11
 42004                           
 42005                           ;../servo.c: 696:     if (T1CONbits.TMR1ON) return FALSE;
 42006                           
 42007                           ;incstack = 0
 42008   00C354  A0CD               	btfss	205,0,c	;volatile
 42009   00C356  D002               	goto	l1175
 42010   00C358                     u18090:
 42011   00C358  0E00               	movlw	0
 42012   00C35A  0012               	return	
 42013   00C35C                     l1175:
 42014                           
 42015                           ;../servo.c: 697:     if (T3CONbits.TMR3ON) return FALSE;
 42016   00C35C  B0B1               	btfsc	177,0,c	;volatile
 42017   00C35E  D7FC               	goto	u18090
 42018                           
 42019                           ;../servo.c: 699:     return TRUE;
 42020   00C360  0E01               	movlw	1
 42021   00C362  0012               	return		;funcret
 42022   00C364                     __end_of_isNoServoPulses:
 42023                           	callstack 0
 42024                           
 42025 ;; *************** function _EEPROM_Write *****************
 42026 ;; Defined at:
 42027 ;;		line 208 in file "../../VLCBlib_PIC/nvm.c"
 42028 ;; Parameters:    Size  Location     Type
 42029 ;;  index           2   47[BANK0 ] unsigned short 
 42030 ;;  value           1   49[BANK0 ] unsigned char 
 42031 ;; Auto vars:     Size  Location     Type
 42032 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 42033 ;; Return value:  Size  Location     Type
 42034 ;;                  1    wreg      unsigned char 
 42035 ;; Registers used:
 42036 ;;		wreg, status,2, status,0, cstack
 42037 ;; Tracked objects:
 42038 ;;		On entry : 0/0
 42039 ;;		On exit  : 0/0
 42040 ;;		Unchanged: 0/0
 42041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42045 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42046 ;;Total ram usage:        4 bytes
 42047 ;; Hardware stack levels used: 1
 42048 ;; Hardware stack levels required when called: 13
 42049 ;; This function calls:
 42050 ;;		_EEPROM_Read
 42051 ;;		_updateModuleErrorStatus
 42052 ;; This function is called by:
 42053 ;;		_writeNVM
 42054 ;; This function uses a non-reentrant model
 42055 ;;
 42056                           
 42057                           	psect	text183
 42058   00AE02                     __ptext183:
 42059                           	callstack 0
 42060   00AE02                     _EEPROM_Write:
 42061                           	callstack 14
 42062                           
 42063                           ;../../VLCBlib_PIC/nvm.c: 209:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 21
      +                          0:     interruptEnabled = (INTCONbits.GIEH);
 42064                           
 42065                           ;incstack = 0
 42066   00AE02  0E00               	movlw	0
 42067   00AE04  BEF2               	btfsc	242,7,c	;volatile
 42068   00AE06  0E01               	movlw	1
 42069   00AE08  0100               	movlb	0	; () banked
 42070   00AE0A  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 42071   00AE0C                     l18583:
 42072                           
 42073                           ;../../VLCBlib_PIC/nvm.c: 213:         EEADRH = (index >> 8)&0xFF;
 42074   00AE0C  0100               	movlb	0	; () banked
 42075   00AE0E  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 42076   00AE10  6E75               	movwf	117,c	;volatile
 42077                           
 42078                           ; BSR set to: 0
 42079                           ;../../VLCBlib_PIC/nvm.c: 214:         EEADR = index & 0xFF;
 42080   00AE12  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 42081                           
 42082                           ; BSR set to: 0
 42083                           ;../../VLCBlib_PIC/nvm.c: 215:         EEDATA = value;
 42084   00AE16  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 42085                           
 42086                           ; BSR set to: 0
 42087                           ;../../VLCBlib_PIC/nvm.c: 216:         EECON1bits.EEPGD = 0;
 42088   00AE1A  9E7F               	bcf	127,7,c	;volsfr
 42089                           
 42090                           ; BSR set to: 0
 42091                           ;../../VLCBlib_PIC/nvm.c: 217:         EECON1bits.CFGS = 0;
 42092   00AE1C  9C7F               	bcf	127,6,c	;volsfr
 42093                           
 42094                           ; BSR set to: 0
 42095                           ;../../VLCBlib_PIC/nvm.c: 218:         EECON1bits.WREN = 1;
 42096   00AE1E  847F               	bsf	127,2,c	;volsfr
 42097                           
 42098                           ; BSR set to: 0
 42099                           ;../../VLCBlib_PIC/nvm.c: 220:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42100   00AE20  9EF2               	bcf	242,7,c	;volatile
 42101                           
 42102                           ; BSR set to: 0
 42103   00AE22  9CF2               	bcf	242,6,c	;volatile
 42104                           
 42105                           ; BSR set to: 0
 42106                           ;../../VLCBlib_PIC/nvm.c: 221:         EECON2 = 0x55;
 42107   00AE24  0E55               	movlw	85
 42108   00AE26  6E7E               	movwf	126,c	;volsfr
 42109                           
 42110                           ; BSR set to: 0
 42111                           ;../../VLCBlib_PIC/nvm.c: 222:         EECON2 = 0xAA;
 42112   00AE28  0EAA               	movlw	170
 42113   00AE2A  6E7E               	movwf	126,c	;volsfr
 42114                           
 42115                           ; BSR set to: 0
 42116                           ;../../VLCBlib_PIC/nvm.c: 223:         EECON1bits.WR = 1;
 42117   00AE2C  827F               	bsf	127,1,c	;volsfr
 42118   00AE2E                     l2136:
 42119                           
 42120                           ;../../VLCBlib_PIC/nvm.c: 224:         while (EECON1bits.WR)
 42121   00AE2E  B27F               	btfsc	127,1,c	;volsfr
 42122   00AE30  D7FE               	goto	l2136
 42123   00AE32                     u18340:
 42124                           
 42125                           ;../../VLCBlib_PIC/nvm.c: 226:         while (!EEIF)
 42126                           
 42127                           ;../../VLCBlib_PIC/nvm.c: 227:             ;
 42128   00AE32  ACB7               	btfss	4023,6,c	;volatile
 42129   00AE34  D7FE               	goto	u18340
 42130                           
 42131                           ;../../VLCBlib_PIC/nvm.c: 228:         EEIF = 0;
 42132   00AE36  9CB7               	bcf	4023,6,c	;volatile
 42133                           
 42134                           ;../../VLCBlib_PIC/nvm.c: 229:         if (interruptEnabled) {
 42135   00AE38  0100               	movlb	0	; () banked
 42136   00AE3A  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 42137   00AE3C  B4D8               	btfsc	status,2,c
 42138   00AE3E  D002               	goto	l2142
 42139                           
 42140                           ; BSR set to: 0
 42141                           ;../../VLCBlib_PIC/nvm.c: 231:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42142   00AE40  8EF2               	bsf	242,7,c	;volatile
 42143   00AE42  8CF2               	bsf	242,6,c	;volatile
 42144   00AE44                     l2142:
 42145                           
 42146                           ; BSR set to: 0
 42147                           ;../../VLCBlib_PIC/nvm.c: 233:         EECON1bits.WREN = 0;
 42148   00AE44  947F               	bcf	127,2,c	;volsfr
 42149                           
 42150                           ; BSR set to: 0
 42151                           ;../../VLCBlib_PIC/nvm.c: 269:         if (EEPROM_Read(index) == value) {
 42152   00AE46  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 42153   00AE4A  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 42154   00AE4E  EC12  F061         	call	_EEPROM_Read	;wreg free
 42155   00AE52  0100               	movlb	0	; () banked
 42156   00AE54  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 42157   00AE56  B4D8               	btfsc	status,2,c
 42158   00AE58  D006               	goto	l18617
 42159                           
 42160                           ; BSR set to: 0
 42161                           ;../../VLCBlib_PIC/nvm.c: 273:         mnsDiagnostics[0x03].asUint++;
 42162   00AE5A  0101               	movlb	1	; () banked
 42163   00AE5C  4B9D               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 42164   00AE5E  2B9E               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 42165                           
 42166                           ; BSR set to: 1
 42167                           ;../../VLCBlib_PIC/nvm.c: 274:         updateModuleErrorStatus();
 42168   00AE60  ECB2  F061         	call	_updateModuleErrorStatus	;wreg free
 42169                           
 42170                           ;../../VLCBlib_PIC/nvm.c: 276:     } while (1);
 42171   00AE64  D7D3               	goto	l18583
 42172   00AE66                     l18617:
 42173                           
 42174                           ; BSR set to: 0
 42175                           ;../../VLCBlib_PIC/nvm.c: 277:     return GRSP_OK;
 42176   00AE66  0E00               	movlw	0
 42177                           
 42178                           ; BSR set to: 0
 42179   00AE68  0012               	return		;funcret
 42180   00AE6A                     __end_of_EEPROM_Write:
 42181                           	callstack 0
 42182                           
 42183 ;; *************** function _updateModuleErrorStatus *****************
 42184 ;; Defined at:
 42185 ;;		line 627 in file "../../VLCBlib_PIC/mns.c"
 42186 ;; Parameters:    Size  Location     Type
 42187 ;;		None
 42188 ;; Auto vars:     Size  Location     Type
 42189 ;;		None
 42190 ;; Return value:  Size  Location     Type
 42191 ;;                  1    wreg      void 
 42192 ;; Registers used:
 42193 ;;		wreg, status,2, status,0
 42194 ;; Tracked objects:
 42195 ;;		On entry : 0/0
 42196 ;;		On exit  : 0/0
 42197 ;;		Unchanged: 0/0
 42198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42203 ;;Total ram usage:        0 bytes
 42204 ;; Hardware stack levels used: 1
 42205 ;; Hardware stack levels required when called: 12
 42206 ;; This function calls:
 42207 ;;		Nothing
 42208 ;; This function is called by:
 42209 ;;		_EEPROM_Write
 42210 ;;		_canSendMessage
 42211 ;;		_processEnumeration
 42212 ;; This function uses a non-reentrant model
 42213 ;;
 42214                           
 42215                           	psect	text184
 42216   00C364                     __ptext184:
 42217                           	callstack 0
 42218   00C364                     _updateModuleErrorStatus:
 42219                           	callstack 14
 42220                           
 42221                           ;../../VLCBlib_PIC/mns.c: 628:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 42222                           
 42223                           ; BSR set to: 0
 42224                           ;incstack = 0
 42225   00C364  0101               	movlb	1	; () banked
 42226   00C366  2997               	incf	_mnsDiagnostics& (0+255),w,b
 42227   00C368  B4D8               	btfsc	status,2,c
 42228   00C36A  0012               	return	
 42229                           
 42230                           ; BSR set to: 1
 42231                           ;../../VLCBlib_PIC/mns.c: 629:         mnsDiagnostics[0x00].asBytes.lo++;
 42232   00C36C  2B97               	incf	_mnsDiagnostics& (0+255),f,b
 42233                           
 42234                           ; BSR set to: 1
 42235   00C36E  0012               	return		;funcret
 42236   00C370                     __end_of_updateModuleErrorStatus:
 42237                           	callstack 0
 42238                           
 42239 ;; *************** function _setDigitalOutput *****************
 42240 ;; Defined at:
 42241 ;;		line 226 in file "../digitalOut.c"
 42242 ;; Parameters:    Size  Location     Type
 42243 ;;  io              1    wreg     unsigned char 
 42244 ;;  state           1   55[BANK0 ] unsigned char 
 42245 ;; Auto vars:     Size  Location     Type
 42246 ;;  io              1   57[BANK0 ] unsigned char 
 42247 ;;  pinState        1   56[BANK0 ] enum E12760
 42248 ;; Return value:  Size  Location     Type
 42249 ;;                  1    wreg      void 
 42250 ;; Registers used:
 42251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42252 ;; Tracked objects:
 42253 ;;		On entry : 0/0
 42254 ;;		On exit  : 0/0
 42255 ;;		Unchanged: 0/0
 42256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42257 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42260 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42261 ;;Total ram usage:        3 bytes
 42262 ;; Hardware stack levels used: 1
 42263 ;; Hardware stack levels required when called: 13
 42264 ;; This function calls:
 42265 ;;		_getNV
 42266 ;;		_setOutputPin
 42267 ;; This function is called by:
 42268 ;;		_configIO
 42269 ;;		_setOutputPosition
 42270 ;; This function uses a non-reentrant model
 42271 ;;
 42272                           
 42273                           	psect	text185
 42274   00A2F0                     __ptext185:
 42275                           	callstack 0
 42276   00A2F0                     _setDigitalOutput:
 42277                           	callstack 14
 42278                           
 42279                           ; BSR set to: 1
 42280                           ;incstack = 0
 42281                           ;setDigitalOutput@io stored from wreg
 42282   00A2F0  0100               	movlb	0	; () banked
 42283   00A2F2  6F99               	movwf	setDigitalOutput@io& (0+255),b
 42284                           
 42285                           ;../digitalOut.c: 227:     Boolean pinState;;../digitalOut.c: 228:     switch (state) {
 42286   00A2F4  D038               	goto	l19313
 42287   00A2F6                     l19297:
 42288                           
 42289                           ; BSR set to: 0
 42290                           ;../digitalOut.c: 230:             state = 2;
 42291   00A2F6  0E02               	movlw	2
 42292   00A2F8  6F97               	movwf	setDigitalOutput@state& (0+255),b
 42293   00A2FA                     l19299:
 42294                           
 42295                           ; BSR set to: 0
 42296                           ;../digitalOut.c: 234:             pinState = (state == 1);
 42297   00A2FA  0597               	decf	setDigitalOutput@state& (0+255),w,b
 42298   00A2FC  A4D8               	btfss	status,2,c
 42299   00A2FE  D002               	goto	u19280
 42300   00A300  0E01               	movlw	1
 42301   00A302  D001               	goto	u19290
 42302   00A304                     u19280:
 42303   00A304  0E00               	movlw	0
 42304   00A306                     u19290:
 42305   00A306  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 42306                           
 42307                           ; BSR set to: 0
 42308                           ;../digitalOut.c: 238:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 42309   00A308  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42310   00A30A  0D07               	mullw	7
 42311   00A30C  50F3               	movf	243,w,c
 42312   00A30E  0F11               	addlw	17
 42313   00A310  EC21  F05D         	call	_getNV
 42314   00A314  0100               	movlb	0	; () banked
 42315   00A316  AB8D               	btfss	?_getNV& (0+255),5,b
 42316   00A318  D00B               	goto	l19305
 42317                           
 42318                           ; BSR set to: 0
 42319                           ;../digitalOut.c: 239:                 setOutputPin(io, ! pinState);
 42320   00A31A  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 42321   00A31C  A4D8               	btfss	status,2,c
 42322   00A31E  D002               	goto	u19310
 42323   00A320  0E01               	movlw	1
 42324   00A322  D001               	goto	u19320
 42325   00A324                     u19310:
 42326   00A324  0E00               	movlw	0
 42327   00A326                     u19320:
 42328   00A326  6F91               	movwf	setOutputPin@state& (0+255),b
 42329   00A328  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42330   00A32A  EC66  F036         	call	_setOutputPin
 42331                           
 42332                           ;../digitalOut.c: 240:             } else {
 42333   00A32E  0012               	return	
 42334   00A330                     l19305:
 42335                           
 42336                           ; BSR set to: 0
 42337                           ;../digitalOut.c: 241:                 setOutputPin(io, pinState);
 42338   00A330  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 42339   00A334  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42340   00A336  EC66  F036         	call	_setOutputPin
 42341   00A33A  0012               	return	
 42342   00A33C                     l19307:
 42343                           
 42344                           ; BSR set to: 0
 42345                           ;../digitalOut.c: 245:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 42346   00A33C  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42347   00A33E  0D07               	mullw	7
 42348   00A340  50F3               	movf	243,w,c
 42349   00A342  0F13               	addlw	19
 42350   00A344  EC21  F05D         	call	_getNV
 42351   00A348  0EC4               	movlw	low _flashDelays
 42352   00A34A  0100               	movlb	0	; () banked
 42353   00A34C  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 42354   00A34E  6ED9               	movwf	fsr2l,c
 42355   00A350  6ADA               	clrf	fsr2h,c
 42356   00A352  0E02               	movlw	high _flashDelays
 42357   00A354  22DA               	addwfc	fsr2h,f,c
 42358   00A356  C08D  FFDF         	movff	?_getNV,indf2
 42359                           
 42360                           ; BSR set to: 0
 42361                           ;../digitalOut.c: 246:             setOutputPin(io, TRUE);
 42362   00A35A  0E01               	movlw	1
 42363   00A35C  6F91               	movwf	setOutputPin@state& (0+255),b
 42364   00A35E  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42365   00A360  EC66  F036         	call	_setOutputPin
 42366                           
 42367                           ;../digitalOut.c: 247:             break;
 42368   00A364  0012               	return	
 42369   00A366                     l19313:
 42370   00A366  0100               	movlb	0	; () banked
 42371   00A368  5197               	movf	setDigitalOutput@state& (0+255),w,b
 42372                           
 42373                           ; Switch size 1, requested type "simple"
 42374                           ; Number of cases is 3, Range of values is 1 to 3
 42375                           ; switch strategies available:
 42376                           ; Name         Instructions Cycles
 42377                           ; simple_byte           10     6 (average)
 42378                           ;	Chosen strategy is simple_byte
 42379   00A36A  0A01               	xorlw	1	; case 1
 42380   00A36C  B4D8               	btfsc	status,2,c
 42381   00A36E  D7C5               	goto	l19299
 42382   00A370  0A03               	xorlw	3	; case 2
 42383   00A372  B4D8               	btfsc	status,2,c
 42384   00A374  D7C2               	goto	l19299
 42385   00A376  0A01               	xorlw	1	; case 3
 42386   00A378  B4D8               	btfsc	status,2,c
 42387   00A37A  D7E0               	goto	l19307
 42388   00A37C  D7BC               	goto	l19297
 42389   00A37E                     __end_of_setDigitalOutput:
 42390                           	callstack 0
 42391                           
 42392 ;; *************** function _setOutputPin *****************
 42393 ;; Defined at:
 42394 ;;		line 256 in file "../digitalOut.c"
 42395 ;; Parameters:    Size  Location     Type
 42396 ;;  io              1    wreg     unsigned char 
 42397 ;;  state           1   49[BANK0 ] enum E12760
 42398 ;; Auto vars:     Size  Location     Type
 42399 ;;  io              1   52[BANK0 ] unsigned char 
 42400 ;; Return value:  Size  Location     Type
 42401 ;;                  1    wreg      void 
 42402 ;; Registers used:
 42403 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 42404 ;; Tracked objects:
 42405 ;;		On entry : 0/0
 42406 ;;		On exit  : 0/0
 42407 ;;		Unchanged: 0/0
 42408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42411 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42412 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42413 ;;Total ram usage:        4 bytes
 42414 ;; Hardware stack levels used: 1
 42415 ;; Hardware stack levels required when called: 12
 42416 ;; This function calls:
 42417 ;;		Nothing
 42418 ;; This function is called by:
 42419 ;;		_startDigitalOutput
 42420 ;;		_processOutputs
 42421 ;;		_setDigitalOutput
 42422 ;;		_setOutputPosition
 42423 ;;		_setupTimer1
 42424 ;;		_setupTimer3
 42425 ;; This function uses a non-reentrant model
 42426 ;;
 42427                           
 42428                           	psect	text186
 42429   006CCC                     __ptext186:
 42430                           	callstack 0
 42431   006CCC                     _setOutputPin:
 42432                           	callstack 15
 42433                           
 42434                           ;incstack = 0
 42435                           ;setOutputPin@io stored from wreg
 42436   006CCC  0100               	movlb	0	; () banked
 42437   006CCE  6F94               	movwf	setOutputPin@io& (0+255),b
 42438                           
 42439                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 42440   006CD0  D0C0               	goto	l19161
 42441   006CD2                     l19141:
 42442                           
 42443                           ; BSR set to: 0
 42444                           ;../digitalOut.c: 259:             if (state) {
 42445   006CD2  5191               	movf	setOutputPin@state& (0+255),w,b
 42446   006CD4  B4D8               	btfsc	status,2,c
 42447   006CD6  D01E               	goto	l19145
 42448                           
 42449                           ; BSR set to: 0
 42450                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 42451   006CD8  5194               	movf	setOutputPin@io& (0+255),w,b
 42452   006CDA  0D04               	mullw	4
 42453   006CDC  0E02               	movlw	2
 42454   006CDE  26F3               	addwf	243,f,c
 42455   006CE0  0E00               	movlw	0
 42456   006CE2  22F4               	addwfc	244,f,c
 42457   006CE4  0E35               	movlw	low _configs
 42458   006CE6  24F3               	addwf	243,w,c
 42459   006CE8  6EF6               	movwf	tblptrl,c
 42460   006CEA  0EEE               	movlw	high _configs
 42461   006CEC  20F4               	addwfc	244,w,c
 42462   006CEE  6EF7               	movwf	tblptrh,c
 42463   006CF0                     	if	1	;There are 3 active tblptr bytes
 42464   006CF0  6AF8               	clrf	tblptru,c
 42465   006CF2  0E00               	movlw	low (__mediumconst shr (0+16))
 42466   006CF4  22F8               	addwfc	tblptru,f,c
 42467   006CF6                     	endif
 42468   006CF6  0008               	tblrd		*
 42469   006CF8  CFF5 F092          	movff	tablat,??_setOutputPin
 42470   006CFC  0E01               	movlw	1
 42471   006CFE  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42472   006D00  2B92               	incf	??_setOutputPin& (0+255),f,b
 42473   006D02  D002               	goto	u19024
 42474   006D04                     u19025:
 42475   006D04  90D8               	bcf	status,0,c
 42476   006D06  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42477   006D08                     u19024:
 42478   006D08  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42479   006D0A  D7FC               	goto	u19025
 42480   006D0C  0100               	movlb	0	; () banked
 42481   006D0E  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42482   006D10  1289               	iorwf	137,f,c	;volatile
 42483                           
 42484                           ;../digitalOut.c: 262:             } else {
 42485   006D12  0012               	return	
 42486   006D14                     l19145:
 42487                           
 42488                           ; BSR set to: 0
 42489                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 42490   006D14  5194               	movf	setOutputPin@io& (0+255),w,b
 42491   006D16  0D04               	mullw	4
 42492   006D18  0E02               	movlw	2
 42493   006D1A  26F3               	addwf	243,f,c
 42494   006D1C  0E00               	movlw	0
 42495   006D1E  22F4               	addwfc	244,f,c
 42496   006D20  0E35               	movlw	low _configs
 42497   006D22  24F3               	addwf	243,w,c
 42498   006D24  6EF6               	movwf	tblptrl,c
 42499   006D26  0EEE               	movlw	high _configs
 42500   006D28  20F4               	addwfc	244,w,c
 42501   006D2A  6EF7               	movwf	tblptrh,c
 42502   006D2C                     	if	1	;There are 3 active tblptr bytes
 42503   006D2C  6AF8               	clrf	tblptru,c
 42504   006D2E  0E00               	movlw	low (__mediumconst shr (0+16))
 42505   006D30  22F8               	addwfc	tblptru,f,c
 42506   006D32                     	endif
 42507   006D32  0008               	tblrd		*
 42508   006D34  CFF5 F092          	movff	tablat,??_setOutputPin
 42509   006D38  0E01               	movlw	1
 42510   006D3A  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42511   006D3C  2B92               	incf	??_setOutputPin& (0+255),f,b
 42512   006D3E  D002               	goto	u19034
 42513   006D40                     u19035:
 42514   006D40  90D8               	bcf	status,0,c
 42515   006D42  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42516   006D44                     u19034:
 42517   006D44  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42518   006D46  D7FC               	goto	u19035
 42519   006D48  0100               	movlb	0	; () banked
 42520   006D4A  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42521   006D4C  0AFF               	xorlw	255
 42522   006D4E  1689               	andwf	137,f,c	;volatile
 42523   006D50  0012               	return	
 42524   006D52                     l19147:
 42525                           
 42526                           ; BSR set to: 0
 42527                           ;../digitalOut.c: 268:             if (state) {
 42528   006D52  5191               	movf	setOutputPin@state& (0+255),w,b
 42529   006D54  B4D8               	btfsc	status,2,c
 42530   006D56  D01E               	goto	l19151
 42531                           
 42532                           ; BSR set to: 0
 42533                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 42534   006D58  5194               	movf	setOutputPin@io& (0+255),w,b
 42535   006D5A  0D04               	mullw	4
 42536   006D5C  0E02               	movlw	2
 42537   006D5E  26F3               	addwf	243,f,c
 42538   006D60  0E00               	movlw	0
 42539   006D62  22F4               	addwfc	244,f,c
 42540   006D64  0E35               	movlw	low _configs
 42541   006D66  24F3               	addwf	243,w,c
 42542   006D68  6EF6               	movwf	tblptrl,c
 42543   006D6A  0EEE               	movlw	high _configs
 42544   006D6C  20F4               	addwfc	244,w,c
 42545   006D6E  6EF7               	movwf	tblptrh,c
 42546   006D70                     	if	1	;There are 3 active tblptr bytes
 42547   006D70  6AF8               	clrf	tblptru,c
 42548   006D72  0E00               	movlw	low (__mediumconst shr (0+16))
 42549   006D74  22F8               	addwfc	tblptru,f,c
 42550   006D76                     	endif
 42551   006D76  0008               	tblrd		*
 42552   006D78  CFF5 F092          	movff	tablat,??_setOutputPin
 42553   006D7C  0E01               	movlw	1
 42554   006D7E  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42555   006D80  2B92               	incf	??_setOutputPin& (0+255),f,b
 42556   006D82  D002               	goto	u19054
 42557   006D84                     u19055:
 42558   006D84  90D8               	bcf	status,0,c
 42559   006D86  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42560   006D88                     u19054:
 42561   006D88  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42562   006D8A  D7FC               	goto	u19055
 42563   006D8C  0100               	movlb	0	; () banked
 42564   006D8E  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42565   006D90  128A               	iorwf	138,f,c	;volatile
 42566                           
 42567                           ;../digitalOut.c: 271:             } else {
 42568   006D92  0012               	return	
 42569   006D94                     l19151:
 42570                           
 42571                           ; BSR set to: 0
 42572                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 42573   006D94  5194               	movf	setOutputPin@io& (0+255),w,b
 42574   006D96  0D04               	mullw	4
 42575   006D98  0E02               	movlw	2
 42576   006D9A  26F3               	addwf	243,f,c
 42577   006D9C  0E00               	movlw	0
 42578   006D9E  22F4               	addwfc	244,f,c
 42579   006DA0  0E35               	movlw	low _configs
 42580   006DA2  24F3               	addwf	243,w,c
 42581   006DA4  6EF6               	movwf	tblptrl,c
 42582   006DA6  0EEE               	movlw	high _configs
 42583   006DA8  20F4               	addwfc	244,w,c
 42584   006DAA  6EF7               	movwf	tblptrh,c
 42585   006DAC                     	if	1	;There are 3 active tblptr bytes
 42586   006DAC  6AF8               	clrf	tblptru,c
 42587   006DAE  0E00               	movlw	low (__mediumconst shr (0+16))
 42588   006DB0  22F8               	addwfc	tblptru,f,c
 42589   006DB2                     	endif
 42590   006DB2  0008               	tblrd		*
 42591   006DB4  CFF5 F092          	movff	tablat,??_setOutputPin
 42592   006DB8  0E01               	movlw	1
 42593   006DBA  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42594   006DBC  2B92               	incf	??_setOutputPin& (0+255),f,b
 42595   006DBE  D002               	goto	u19064
 42596   006DC0                     u19065:
 42597   006DC0  90D8               	bcf	status,0,c
 42598   006DC2  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42599   006DC4                     u19064:
 42600   006DC4  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42601   006DC6  D7FC               	goto	u19065
 42602   006DC8  0100               	movlb	0	; () banked
 42603   006DCA  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42604   006DCC  0AFF               	xorlw	255
 42605   006DCE  168A               	andwf	138,f,c	;volatile
 42606   006DD0  0012               	return	
 42607   006DD2                     l19153:
 42608                           
 42609                           ; BSR set to: 0
 42610                           ;../digitalOut.c: 277:             if (state) {
 42611   006DD2  5191               	movf	setOutputPin@state& (0+255),w,b
 42612   006DD4  B4D8               	btfsc	status,2,c
 42613   006DD6  D01E               	goto	l19157
 42614                           
 42615                           ; BSR set to: 0
 42616                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 42617   006DD8  5194               	movf	setOutputPin@io& (0+255),w,b
 42618   006DDA  0D04               	mullw	4
 42619   006DDC  0E02               	movlw	2
 42620   006DDE  26F3               	addwf	243,f,c
 42621   006DE0  0E00               	movlw	0
 42622   006DE2  22F4               	addwfc	244,f,c
 42623   006DE4  0E35               	movlw	low _configs
 42624   006DE6  24F3               	addwf	243,w,c
 42625   006DE8  6EF6               	movwf	tblptrl,c
 42626   006DEA  0EEE               	movlw	high _configs
 42627   006DEC  20F4               	addwfc	244,w,c
 42628   006DEE  6EF7               	movwf	tblptrh,c
 42629   006DF0                     	if	1	;There are 3 active tblptr bytes
 42630   006DF0  6AF8               	clrf	tblptru,c
 42631   006DF2  0E00               	movlw	low (__mediumconst shr (0+16))
 42632   006DF4  22F8               	addwfc	tblptru,f,c
 42633   006DF6                     	endif
 42634   006DF6  0008               	tblrd		*
 42635   006DF8  CFF5 F092          	movff	tablat,??_setOutputPin
 42636   006DFC  0E01               	movlw	1
 42637   006DFE  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42638   006E00  2B92               	incf	??_setOutputPin& (0+255),f,b
 42639   006E02  D002               	goto	u19084
 42640   006E04                     u19085:
 42641   006E04  90D8               	bcf	status,0,c
 42642   006E06  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42643   006E08                     u19084:
 42644   006E08  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42645   006E0A  D7FC               	goto	u19085
 42646   006E0C  0100               	movlb	0	; () banked
 42647   006E0E  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42648   006E10  128B               	iorwf	139,f,c	;volatile
 42649                           
 42650                           ;../digitalOut.c: 280:             } else {
 42651   006E12  0012               	return	
 42652   006E14                     l19157:
 42653                           
 42654                           ; BSR set to: 0
 42655                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 42656   006E14  5194               	movf	setOutputPin@io& (0+255),w,b
 42657   006E16  0D04               	mullw	4
 42658   006E18  0E02               	movlw	2
 42659   006E1A  26F3               	addwf	243,f,c
 42660   006E1C  0E00               	movlw	0
 42661   006E1E  22F4               	addwfc	244,f,c
 42662   006E20  0E35               	movlw	low _configs
 42663   006E22  24F3               	addwf	243,w,c
 42664   006E24  6EF6               	movwf	tblptrl,c
 42665   006E26  0EEE               	movlw	high _configs
 42666   006E28  20F4               	addwfc	244,w,c
 42667   006E2A  6EF7               	movwf	tblptrh,c
 42668   006E2C                     	if	1	;There are 3 active tblptr bytes
 42669   006E2C  6AF8               	clrf	tblptru,c
 42670   006E2E  0E00               	movlw	low (__mediumconst shr (0+16))
 42671   006E30  22F8               	addwfc	tblptru,f,c
 42672   006E32                     	endif
 42673   006E32  0008               	tblrd		*
 42674   006E34  CFF5 F092          	movff	tablat,??_setOutputPin
 42675   006E38  0E01               	movlw	1
 42676   006E3A  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42677   006E3C  2B92               	incf	??_setOutputPin& (0+255),f,b
 42678   006E3E  D002               	goto	u19094
 42679   006E40                     u19095:
 42680   006E40  90D8               	bcf	status,0,c
 42681   006E42  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42682   006E44                     u19094:
 42683   006E44  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42684   006E46  D7FC               	goto	u19095
 42685   006E48  0100               	movlb	0	; () banked
 42686   006E4A  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42687   006E4C  0AFF               	xorlw	255
 42688   006E4E  168B               	andwf	139,f,c	;volatile
 42689   006E50  0012               	return	
 42690   006E52                     l19161:
 42691   006E52  0100               	movlb	0	; () banked
 42692   006E54  5194               	movf	setOutputPin@io& (0+255),w,b
 42693   006E56  0D04               	mullw	4
 42694   006E58  0E01               	movlw	1
 42695   006E5A  26F3               	addwf	243,f,c
 42696   006E5C  0E00               	movlw	0
 42697   006E5E  22F4               	addwfc	244,f,c
 42698   006E60  0E35               	movlw	low _configs
 42699   006E62  24F3               	addwf	243,w,c
 42700   006E64  6EF6               	movwf	tblptrl,c
 42701   006E66  0EEE               	movlw	high _configs
 42702   006E68  20F4               	addwfc	244,w,c
 42703   006E6A  6EF7               	movwf	tblptrh,c
 42704   006E6C                     	if	1	;There are 3 active tblptr bytes
 42705   006E6C  6AF8               	clrf	tblptru,c
 42706   006E6E  0E00               	movlw	low (__mediumconst shr (0+16))
 42707   006E70  22F8               	addwfc	tblptru,f,c
 42708   006E72                     	endif
 42709   006E72  0008               	tblrd		*
 42710   006E74  50F5               	movf	tablat,w,c
 42711                           
 42712                           ; Switch size 1, requested type "simple"
 42713                           ; Number of cases is 3, Range of values is 65 to 67
 42714                           ; switch strategies available:
 42715                           ; Name         Instructions Cycles
 42716                           ; simple_byte           10     6 (average)
 42717                           ;	Chosen strategy is simple_byte
 42718   006E76  0A41               	xorlw	65	; case 65
 42719   006E78  B4D8               	btfsc	status,2,c
 42720   006E7A  D72B               	goto	l19141
 42721   006E7C  0A03               	xorlw	3	; case 66
 42722   006E7E  B4D8               	btfsc	status,2,c
 42723   006E80  D768               	goto	l19147
 42724   006E82  0A01               	xorlw	1	; case 67
 42725   006E84  A4D8               	btfss	status,2,c
 42726   006E86  0012               	return	
 42727   006E88  D7A4               	goto	l19153
 42728   006E8A                     __end_of_setOutputPin:
 42729                           	callstack 0
 42730                           
 42731 ;; *************** function _getNV *****************
 42732 ;; Defined at:
 42733 ;;		line 181 in file "../../VLCBlib_PIC/nv.c"
 42734 ;; Parameters:    Size  Location     Type
 42735 ;;  index           1    wreg     unsigned char 
 42736 ;; Auto vars:     Size  Location     Type
 42737 ;;  index           1   48[BANK0 ] unsigned char 
 42738 ;; Return value:  Size  Location     Type
 42739 ;;                  2   45[BANK0 ] short 
 42740 ;; Registers used:
 42741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42742 ;; Tracked objects:
 42743 ;;		On entry : 0/0
 42744 ;;		On exit  : 0/0
 42745 ;;		Unchanged: 0/0
 42746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42747 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42748 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42750 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42751 ;;Total ram usage:        4 bytes
 42752 ;; Hardware stack levels used: 1
 42753 ;; Hardware stack levels required when called: 12
 42754 ;; This function calls:
 42755 ;;		Nothing
 42756 ;; This function is called by:
 42757 ;;		_setup
 42758 ;;		_loop
 42759 ;;		_APP_GetEventState
 42760 ;;		_configIO
 42761 ;;		_startDigitalOutput
 42762 ;;		_processOutputs
 42763 ;;		_setDigitalOutput
 42764 ;;		_initInputScan
 42765 ;;		_inputScan
 42766 ;;		_readInput
 42767 ;;		_consumer2QProcessMessage
 42768 ;;		_processActions
 42769 ;;		_sodTRCallback
 42770 ;;		_APP_nvValueChanged
 42771 ;;		_setOutputPosition
 42772 ;;		_initServos
 42773 ;;		_startServos
 42774 ;;		_setupTimer1
 42775 ;;		_setupTimer3
 42776 ;;		_pollServos
 42777 ;;		_startServoOutput
 42778 ;;		_startMultiOutput
 42779 ;;		_setServoState
 42780 ;;		_setBounceState
 42781 ;;		_setMultiState
 42782 ;;		_bounceDown
 42783 ;;		_bounceUp
 42784 ;;		_nvProcessMessage
 42785 ;;		_nvTRnvrdCallback
 42786 ;; This function uses a non-reentrant model
 42787 ;;
 42788                           
 42789                           	psect	text187
 42790   00BA42                     __ptext187:
 42791                           	callstack 0
 42792   00BA42                     _getNV:
 42793                           	callstack 14
 42794                           
 42795                           ; BSR set to: 0
 42796                           ;incstack = 0
 42797                           ;getNV@index stored from wreg
 42798   00BA42  0100               	movlb	0	; () banked
 42799   00BA44  6F90               	movwf	getNV@index& (0+255),b
 42800                           
 42801                           ;../../VLCBlib_PIC/nv.c: 182:     if (index == 0) return (15+7*16);
 42802   00BA46  0100               	movlb	0	; () banked
 42803   00BA48  5190               	movf	getNV@index& (0+255),w,b
 42804   00BA4A  A4D8               	btfss	status,2,c
 42805   00BA4C  D005               	goto	l19129
 42806                           
 42807                           ; BSR set to: 0
 42808   00BA4E  0E00               	movlw	0
 42809   00BA50  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42810   00BA52  0E7F               	movlw	127
 42811   00BA54  6F8D               	movwf	?_getNV& (0+255),b
 42812   00BA56  0012               	return	
 42813   00BA58                     l19129:
 42814                           
 42815                           ; BSR set to: 0
 42816                           ;../../VLCBlib_PIC/nv.c: 183:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 42817   00BA58  0E7F               	movlw	127
 42818   00BA5A  6590               	cpfsgt	getNV@index& (0+255),b
 42819   00BA5C  D005               	goto	l19135
 42820                           
 42821                           ; BSR set to: 0
 42822   00BA5E  0EFF               	movlw	255
 42823   00BA60  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42824   00BA62  0EF6               	movlw	246
 42825   00BA64  6F8D               	movwf	?_getNV& (0+255),b
 42826   00BA66  0012               	return	
 42827   00BA68                     l19135:
 42828                           
 42829                           ; BSR set to: 0
 42830                           ;../../VLCBlib_PIC/nv.c: 185:     return nvCache[index];
 42831   00BA68  0E00               	movlw	low _nvCache
 42832   00BA6A  2590               	addwf	getNV@index& (0+255),w,b
 42833   00BA6C  6ED9               	movwf	fsr2l,c
 42834   00BA6E  6ADA               	clrf	fsr2h,c
 42835   00BA70  0E04               	movlw	high _nvCache
 42836   00BA72  22DA               	addwfc	fsr2h,f,c
 42837   00BA74  50DF               	movf	indf2,w,c
 42838   00BA76  6F8F               	movwf	??_getNV& (0+255),b
 42839   00BA78  518F               	movf	??_getNV& (0+255),w,b
 42840   00BA7A  6F8D               	movwf	?_getNV& (0+255),b
 42841   00BA7C  6B8E               	clrf	(?_getNV+1)& (0+255),b
 42842                           
 42843                           ; BSR set to: 0
 42844   00BA7E  0012               	return		;funcret
 42845   00BA80                     __end_of_getNV:
 42846                           	callstack 0
 42847                           
 42848 ;; *************** function _readNVM *****************
 42849 ;; Defined at:
 42850 ;;		line 542 in file "../../VLCBlib_PIC/nvm.c"
 42851 ;; Parameters:    Size  Location     Type
 42852 ;;  type            1    wreg     enum E12732
 42853 ;;  index           3   49[BANK0 ] unsigned um
 42854 ;; Auto vars:     Size  Location     Type
 42855 ;;  type            1   54[BANK0 ] enum E12732
 42856 ;; Return value:  Size  Location     Type
 42857 ;;                  2   49[BANK0 ] short 
 42858 ;; Registers used:
 42859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42860 ;; Tracked objects:
 42861 ;;		On entry : 0/0
 42862 ;;		On exit  : 0/0
 42863 ;;		Unchanged: 0/0
 42864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42865 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42867 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42868 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42869 ;;Total ram usage:        6 bytes
 42870 ;; Hardware stack levels used: 1
 42871 ;; Hardware stack levels required when called: 13
 42872 ;; This function calls:
 42873 ;;		_EEPROM_Read
 42874 ;;		_FLASH_Read
 42875 ;; This function is called by:
 42876 ;;		_APP_GetEventState
 42877 ;;		_configIO
 42878 ;;		_initInputScan
 42879 ;;		_initServos
 42880 ;;		_mnsPowerUp
 42881 ;;		_loadNvCache
 42882 ;;		_main
 42883 ;;		_canPowerUp
 42884 ;;		_doNnevn
 42885 ;;		_removeTableEntry
 42886 ;;		_addEvent
 42887 ;;		_writeEv
 42888 ;;		_getEv
 42889 ;;		_numEv
 42890 ;;		_getEVs
 42891 ;;		_getNN
 42892 ;;		_getEN
 42893 ;;		_validStart
 42894 ;;		_deleteHappeningRange
 42895 ;; This function uses a non-reentrant model
 42896 ;;
 42897                           
 42898                           	psect	text188
 42899   00B184                     __ptext188:
 42900                           	callstack 0
 42901   00B184                     _readNVM:
 42902                           	callstack 15
 42903                           
 42904                           ; BSR set to: 0
 42905                           ;incstack = 0
 42906                           ;readNVM@type stored from wreg
 42907   00B184  0100               	movlb	0	; () banked
 42908   00B186  6F96               	movwf	readNVM@type& (0+255),b
 42909                           
 42910                           ;../../VLCBlib_PIC/nvm.c: 543:     switch(type) {
 42911   00B188  D01D               	goto	l18407
 42912   00B18A                     l18393:
 42913                           
 42914                           ; BSR set to: 0
 42915                           ;../../VLCBlib_PIC/nvm.c: 545:             return EEPROM_Read((uint16_t)index);
 42916   00B18A  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 42917   00B18E  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 42918   00B192  EC12  F061         	call	_EEPROM_Read	;wreg free
 42919   00B196  0100               	movlb	0	; () banked
 42920   00B198  6F94               	movwf	??_readNVM& (0+255),b
 42921   00B19A  5194               	movf	??_readNVM& (0+255),w,b
 42922   00B19C  6F91               	movwf	?_readNVM& (0+255),b
 42923   00B19E  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42924   00B1A0  0012               	return	
 42925   00B1A2                     l18397:
 42926                           
 42927                           ; BSR set to: 0
 42928                           ;../../VLCBlib_PIC/nvm.c: 548:             return FLASH_Read((uint16_t)index);
 42929   00B1A2  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 42930   00B1A6  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 42931   00B1AA  EC9E  F05B         	call	_FLASH_Read	;wreg free
 42932   00B1AE  0100               	movlb	0	; () banked
 42933   00B1B0  6F94               	movwf	??_readNVM& (0+255),b
 42934   00B1B2  5194               	movf	??_readNVM& (0+255),w,b
 42935   00B1B4  6F91               	movwf	?_readNVM& (0+255),b
 42936   00B1B6  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42937   00B1B8  0012               	return	
 42938   00B1BA                     l18401:
 42939                           
 42940                           ; BSR set to: 0
 42941                           ;../../VLCBlib_PIC/nvm.c: 554:             return -GRSP_UNKNOWN_NVM_TYPE;
 42942   00B1BA  0EFF               	movlw	255
 42943   00B1BC  6F92               	movwf	(?_readNVM+1)& (0+255),b
 42944   00B1BE  0E02               	movlw	2
 42945   00B1C0  6F91               	movwf	?_readNVM& (0+255),b
 42946   00B1C2  0012               	return	
 42947   00B1C4                     l18407:
 42948   00B1C4  0100               	movlb	0	; () banked
 42949   00B1C6  5196               	movf	readNVM@type& (0+255),w,b
 42950   00B1C8  6F94               	movwf	??_readNVM& (0+255),b
 42951   00B1CA  6B95               	clrf	(??_readNVM+1)& (0+255),b
 42952                           
 42953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42954                           ; Switch size 1, requested type "simple"
 42955                           ; Number of cases is 1, Range of values is 0 to 0
 42956                           ; switch strategies available:
 42957                           ; Name         Instructions Cycles
 42958                           ; simple_byte            4     3 (average)
 42959                           ;	Chosen strategy is simple_byte
 42960   00B1CC  5195               	movf	(??_readNVM+1)& (0+255),w,b
 42961   00B1CE  0A00               	xorlw	0	; case 0
 42962   00B1D0  A4D8               	btfss	status,2,c
 42963   00B1D2  D7F3               	goto	l18401
 42964                           
 42965                           ; BSR set to: 0
 42966                           ; Switch size 1, requested type "simple"
 42967                           ; Number of cases is 2, Range of values is 0 to 1
 42968                           ; switch strategies available:
 42969                           ; Name         Instructions Cycles
 42970                           ; simple_byte            7     4 (average)
 42971                           ;	Chosen strategy is simple_byte
 42972   00B1D4  5194               	movf	??_readNVM& (0+255),w,b
 42973   00B1D6  0A00               	xorlw	0	; case 0
 42974   00B1D8  B4D8               	btfsc	status,2,c
 42975   00B1DA  D7D7               	goto	l18393
 42976   00B1DC  0A01               	xorlw	1	; case 1
 42977   00B1DE  B4D8               	btfsc	status,2,c
 42978   00B1E0  D7E0               	goto	l18397
 42979   00B1E2  D7EB               	goto	l18401
 42980   00B1E4                     __end_of_readNVM:
 42981                           	callstack 0
 42982                           
 42983 ;; *************** function _FLASH_Read *****************
 42984 ;; Defined at:
 42985 ;;		line 287 in file "../../VLCBlib_PIC/nvm.c"
 42986 ;; Parameters:    Size  Location     Type
 42987 ;;  address         2   45[BANK0 ] unsigned short 
 42988 ;; Auto vars:     Size  Location     Type
 42989 ;;		None
 42990 ;; Return value:  Size  Location     Type
 42991 ;;                  1    wreg      unsigned char 
 42992 ;; Registers used:
 42993 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42994 ;; Tracked objects:
 42995 ;;		On entry : 0/0
 42996 ;;		On exit  : 0/0
 42997 ;;		Unchanged: 0/0
 42998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43001 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43002 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43003 ;;Total ram usage:        4 bytes
 43004 ;; Hardware stack levels used: 1
 43005 ;; Hardware stack levels required when called: 12
 43006 ;; This function calls:
 43007 ;;		Nothing
 43008 ;; This function is called by:
 43009 ;;		_readNVM
 43010 ;; This function uses a non-reentrant model
 43011 ;;
 43012                           
 43013                           	psect	text189
 43014   00B73C                     __ptext189:
 43015                           	callstack 0
 43016   00B73C                     _FLASH_Read:
 43017                           	callstack 15
 43018                           
 43019                           ;../../VLCBlib_PIC/nvm.c: 289:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 43020                           
 43021                           ; BSR set to: 0
 43022                           ;incstack = 0
 43023   00B73C  0EC0               	movlw	192
 43024   00B73E  0100               	movlb	0	; () banked
 43025   00B740  158D               	andwf	FLASH_Read@address& (0+255),w,b
 43026   00B742  6F8F               	movwf	??_FLASH_Read& (0+255),b
 43027   00B744  0EFF               	movlw	255
 43028   00B746  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 43029   00B748  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 43030   00B74A  51B9               	movf	_flashBlock& (0+255),w,b
 43031   00B74C  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 43032   00B74E  E112               	bnz	l18383
 43033   00B750  51BA               	movf	(_flashBlock+1)& (0+255),w,b
 43034   00B752  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 43035   00B754  A4D8               	btfss	status,2,c
 43036   00B756  D00E               	goto	l18383
 43037                           
 43038                           ; BSR set to: 0
 43039                           ;../../VLCBlib_PIC/nvm.c: 291:         return flashBuffer[(address&(64 -1))];
 43040   00B758  0E3F               	movlw	63
 43041   00B75A  158D               	andwf	FLASH_Read@address& (0+255),w,b
 43042   00B75C  6F8F               	movwf	??_FLASH_Read& (0+255),b
 43043   00B75E  0E00               	movlw	0
 43044   00B760  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 43045   00B762  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 43046   00B764  0E47               	movlw	low _flashBuffer
 43047   00B766  258F               	addwf	??_FLASH_Read& (0+255),w,b
 43048   00B768  6ED9               	movwf	fsr2l,c
 43049   00B76A  0E03               	movlw	high _flashBuffer
 43050   00B76C  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 43051   00B76E  6EDA               	movwf	fsr2h,c
 43052   00B770  50DF               	movf	indf2,w,c
 43053   00B772  0012               	return	
 43054   00B774                     l18383:
 43055                           
 43056                           ; BSR set to: 0
 43057                           ;../../VLCBlib_PIC/nvm.c: 295:         TBLPTR = address;
 43058   00B774  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 43059   00B778  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 43060   00B77C  6AF8               	clrf	248,c	;volatile
 43061                           
 43062                           ; BSR set to: 0
 43063                           ;../../VLCBlib_PIC/nvm.c: 296:         TBLPTRU = 0;
 43064   00B77E  0E00               	movlw	0
 43065   00B780  6EF8               	movwf	248,c	;volatile
 43066   00B782  0008               	tblrd		*	;# 
 43067                           
 43068                           ;../../VLCBlib_PIC/nvm.c: 307:         return TABLAT;
 43069   00B784  50F5               	movf	245,w,c	;volatile
 43070   00B786  0012               	return		;funcret
 43071   00B788                     __end_of_FLASH_Read:
 43072                           	callstack 0
 43073                           
 43074 ;; *************** function _EEPROM_Read *****************
 43075 ;; Defined at:
 43076 ;;		line 163 in file "../../VLCBlib_PIC/nvm.c"
 43077 ;; Parameters:    Size  Location     Type
 43078 ;;  index           2   45[BANK0 ] unsigned short 
 43079 ;; Auto vars:     Size  Location     Type
 43080 ;;		None
 43081 ;; Return value:  Size  Location     Type
 43082 ;;                  1    wreg      unsigned char 
 43083 ;; Registers used:
 43084 ;;		wreg, status,2
 43085 ;; Tracked objects:
 43086 ;;		On entry : 0/0
 43087 ;;		On exit  : 0/0
 43088 ;;		Unchanged: 0/0
 43089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43094 ;;Total ram usage:        2 bytes
 43095 ;; Hardware stack levels used: 1
 43096 ;; Hardware stack levels required when called: 12
 43097 ;; This function calls:
 43098 ;;		Nothing
 43099 ;; This function is called by:
 43100 ;;		_EEPROM_Write
 43101 ;;		_readNVM
 43102 ;; This function uses a non-reentrant model
 43103 ;;
 43104                           
 43105                           	psect	text190
 43106   00C224                     __ptext190:
 43107                           	callstack 0
 43108   00C224                     _EEPROM_Read:
 43109                           	callstack 15
 43110                           
 43111                           ;../../VLCBlib_PIC/nvm.c: 166:     while (EECON1bits.WR)
 43112                           
 43113                           ;../../VLCBlib_PIC/nvm.c: 167:         ;
 43114                           
 43115                           ;incstack = 0
 43116   00C224  B27F               	btfsc	127,1,c	;volsfr
 43117   00C226  D7FE               	goto	__ptext190
 43118                           
 43119                           ;../../VLCBlib_PIC/nvm.c: 169:     EEADRH = (index >> 8)&0xFF;
 43120   00C228  0100               	movlb	0	; () banked
 43121   00C22A  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 43122   00C22C  6E75               	movwf	117,c	;volatile
 43123                           
 43124                           ; BSR set to: 0
 43125                           ;../../VLCBlib_PIC/nvm.c: 170:     EEADR = index & 0xFF;
 43126   00C22E  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 43127                           
 43128                           ; BSR set to: 0
 43129                           ;../../VLCBlib_PIC/nvm.c: 171:     EECON1bits.EEPGD = 0;
 43130   00C232  9E7F               	bcf	127,7,c	;volsfr
 43131                           
 43132                           ; BSR set to: 0
 43133                           ;../../VLCBlib_PIC/nvm.c: 172:     EECON1bits.CFGS = 0;
 43134   00C234  9C7F               	bcf	127,6,c	;volsfr
 43135                           
 43136                           ; BSR set to: 0
 43137                           ;../../VLCBlib_PIC/nvm.c: 173:     EECON1bits.RD = 1;
 43138   00C236  807F               	bsf	127,0,c	;volsfr
 43139   00C238                     l2129:
 43140                           
 43141                           ;../../VLCBlib_PIC/nvm.c: 174:     while (EECON1bits.RD)
 43142   00C238  B07F               	btfsc	127,0,c	;volsfr
 43143   00C23A  D7FE               	goto	l2129
 43144   00C23C  0000               	nop		;# 
 43145                           
 43146                           ;../../VLCBlib_PIC/nvm.c: 179:     return EEDATA;
 43147   00C23E  5073               	movf	115,w,c	;volatile
 43148   00C240  0012               	return		;funcret
 43149   00C242                     __end_of_EEPROM_Read:
 43150                           	callstack 0
 43151                           
 43152 ;; *************** function _factoryResetGlobalEvents *****************
 43153 ;; Defined at:
 43154 ;;		line 100 in file "../universalEvents.c"
 43155 ;; Parameters:    Size  Location     Type
 43156 ;;		None
 43157 ;; Auto vars:     Size  Location     Type
 43158 ;;		None
 43159 ;; Return value:  Size  Location     Type
 43160 ;;                  1    wreg      void 
 43161 ;; Registers used:
 43162 ;;		None
 43163 ;; Tracked objects:
 43164 ;;		On entry : 0/0
 43165 ;;		On exit  : 0/0
 43166 ;;		Unchanged: 0/0
 43167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43172 ;;Total ram usage:        0 bytes
 43173 ;; Hardware stack levels used: 1
 43174 ;; Hardware stack levels required when called: 12
 43175 ;; This function calls:
 43176 ;;		Nothing
 43177 ;; This function is called by:
 43178 ;;		_APP_factoryReset
 43179 ;; This function uses a non-reentrant model
 43180 ;;
 43181                           
 43182                           	psect	text191
 43183   00C3DC                     __ptext191:
 43184                           	callstack 0
 43185   00C3DC                     _factoryResetGlobalEvents:
 43186                           	callstack 14
 43187                           
 43188                           ;incstack = 0
 43189   00C3DC  0012               	return		;funcret
 43190   00C3DE                     __end_of_factoryResetGlobalEvents:
 43191                           	callstack 0
 43192                           
 43193 ;; *************** function _APP_testMode *****************
 43194 ;; Defined at:
 43195 ;;		line 229 in file "../main.c"
 43196 ;; Parameters:    Size  Location     Type
 43197 ;;		None
 43198 ;; Auto vars:     Size  Location     Type
 43199 ;;		None
 43200 ;; Return value:  Size  Location     Type
 43201 ;;                  1    wreg      void 
 43202 ;; Registers used:
 43203 ;;		None
 43204 ;; Tracked objects:
 43205 ;;		On entry : 0/0
 43206 ;;		On exit  : 0/0
 43207 ;;		Unchanged: 0/0
 43208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43213 ;;Total ram usage:        0 bytes
 43214 ;; Hardware stack levels used: 1
 43215 ;; Hardware stack levels required when called: 12
 43216 ;; This function calls:
 43217 ;;		Nothing
 43218 ;; This function is called by:
 43219 ;;		_checkPowerOnPb
 43220 ;; This function uses a non-reentrant model
 43221 ;;
 43222                           
 43223                           	psect	text192
 43224   00C3DE                     __ptext192:
 43225                           	callstack 0
 43226   00C3DE                     _APP_testMode:
 43227                           	callstack 17
 43228                           
 43229                           ;incstack = 0
 43230   00C3DE  0012               	return		;funcret
 43231   00C3E0                     __end_of_APP_testMode:
 43232                           	callstack 0
 43233                           
 43234 ;; *************** function _isrLow *****************
 43235 ;; Defined at:
 43236 ;;		line 1330 in file "../../VLCBlib_PIC/vlcb.c"
 43237 ;; Parameters:    Size  Location     Type
 43238 ;;		None
 43239 ;; Auto vars:     Size  Location     Type
 43240 ;;		None
 43241 ;; Return value:  Size  Location     Type
 43242 ;;                  1    wreg      void 
 43243 ;; Registers used:
 43244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43245 ;; Tracked objects:
 43246 ;;		On entry : 0/0
 43247 ;;		On exit  : 0/0
 43248 ;;		Unchanged: 0/0
 43249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43252 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43253 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43254 ;;Total ram usage:       15 bytes
 43255 ;; Hardware stack levels used: 1
 43256 ;; Hardware stack levels required when called: 11
 43257 ;; This function calls:
 43258 ;;		_lowIsr
 43259 ;; This function is called by:
 43260 ;;		Interrupt level 1
 43261 ;; This function uses a non-reentrant model
 43262 ;;
 43263                           
 43264 ;; *************** function _isrHigh *****************
 43265 ;; Defined at:
 43266 ;;		line 1323 in file "../../VLCBlib_PIC/vlcb.c"
 43267 ;; Parameters:    Size  Location     Type
 43268 ;;		None
 43269 ;; Auto vars:     Size  Location     Type
 43270 ;;		None
 43271 ;; Return value:  Size  Location     Type
 43272 ;;                  1    wreg      void 
 43273 ;; Registers used:
 43274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43275 ;; Tracked objects:
 43276 ;;		On entry : 0/0
 43277 ;;		On exit  : 0/0
 43278 ;;		Unchanged: 0/0
 43279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43282 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43283 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43284 ;;Total ram usage:       12 bytes
 43285 ;; Hardware stack levels used: 1
 43286 ;; Hardware stack levels required when called: 5
 43287 ;; This function calls:
 43288 ;;		_highIsr
 43289 ;; This function is called by:
 43290 ;;		Interrupt level 2
 43291 ;; This function uses a non-reentrant model
 43292 ;;
 43293                           
 43294                           	psect	mainSec
 43295   0082C0                     __pmainSec:
 43296                           	callstack 0
 43297   0082C0                     _isrLow:
 43298                           	callstack 2
 43299                           
 43300                           ;incstack = 0
 43301   0082C0  8052               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 43302   0082C2  CFD8 F07E          	movff	status,??_isrLow
 43303   0082C6  CFE8 F07F          	movff	wreg,??_isrLow+1
 43304   0082CA  CFE0 F080          	movff	bsr,??_isrLow+2
 43305   0082CE  CFFA F081          	movff	pclath,??_isrLow+3
 43306   0082D2  CFFB F082          	movff	pclatu,??_isrLow+4
 43307   0082D6  CFE1 F083          	movff	fsr1l,??_isrLow+5
 43308   0082DA  CFE2 F084          	movff	fsr1h,??_isrLow+6
 43309   0082DE  CFD9 F085          	movff	fsr2l,??_isrLow+7
 43310   0082E2  CFDA F086          	movff	fsr2h,??_isrLow+8
 43311   0082E6  CFF3 F087          	movff	prodl,??_isrLow+9
 43312   0082EA  CFF4 F088          	movff	prodh,??_isrLow+10
 43313   0082EE  CFF6 F089          	movff	tblptrl,??_isrLow+11
 43314   0082F2  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 43315   0082F6  CFF8 F08B          	movff	tblptru,??_isrLow+13
 43316   0082FA  CFF5 F08C          	movff	tablat,??_isrLow+14
 43317   0082FE                     
 43318                           ;../../VLCBlib_PIC/vlcb.c: 1331:     lowIsr();
 43319   0082FE  EC60  F047         	call	_lowIsr	;wreg free
 43320   008302  C08C  FFF5         	movff	??_isrLow+14,tablat
 43321   008306  C08B  FFF8         	movff	??_isrLow+13,tblptru
 43322   00830A  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 43323   00830E  C089  FFF6         	movff	??_isrLow+11,tblptrl
 43324   008312  C088  FFF4         	movff	??_isrLow+10,prodh
 43325   008316  C087  FFF3         	movff	??_isrLow+9,prodl
 43326   00831A  C086  FFDA         	movff	??_isrLow+8,fsr2h
 43327   00831E  C085  FFD9         	movff	??_isrLow+7,fsr2l
 43328   008322  C084  FFE2         	movff	??_isrLow+6,fsr1h
 43329   008326  C083  FFE1         	movff	??_isrLow+5,fsr1l
 43330   00832A  C082  FFFB         	movff	??_isrLow+4,pclatu
 43331   00832E  C081  FFFA         	movff	??_isrLow+3,pclath
 43332   008332  C080  FFE0         	movff	??_isrLow+2,bsr
 43333   008336  C07F  FFE8         	movff	??_isrLow+1,wreg
 43334   00833A  C07E  FFD8         	movff	??_isrLow,status
 43335   00833E  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 43336   008340  0010               	retfie	
 43337   008342                     __end_of_isrLow:
 43338                           	callstack 0
 43339   008342                     _isrHigh:
 43340                           	callstack 2
 43341                           
 43342                           ;incstack = 0
 43343   008342  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 43344   008344  CFFA F01F          	movff	pclath,??_isrHigh
 43345   008348  CFFB F020          	movff	pclatu,??_isrHigh+1
 43346   00834C  CFE1 F021          	movff	fsr1l,??_isrHigh+2
 43347   008350  CFE2 F022          	movff	fsr1h,??_isrHigh+3
 43348   008354  CFD9 F023          	movff	fsr2l,??_isrHigh+4
 43349   008358  CFDA F024          	movff	fsr2h,??_isrHigh+5
 43350   00835C  CFF3 F025          	movff	prodl,??_isrHigh+6
 43351   008360  CFF4 F026          	movff	prodh,??_isrHigh+7
 43352   008364  CFF6 F027          	movff	tblptrl,??_isrHigh+8
 43353   008368  CFF7 F028          	movff	tblptrh,??_isrHigh+9
 43354   00836C  CFF8 F029          	movff	tblptru,??_isrHigh+10
 43355   008370  CFF5 F02A          	movff	tablat,??_isrHigh+11
 43356   008374                     
 43357                           ;../../VLCBlib_PIC/vlcb.c: 1324:     highIsr();
 43358   008374  ECC7  F047         	call	_highIsr	;wreg free
 43359   008378  C02A  FFF5         	movff	??_isrHigh+11,tablat
 43360   00837C  C029  FFF8         	movff	??_isrHigh+10,tblptru
 43361   008380  C028  FFF7         	movff	??_isrHigh+9,tblptrh
 43362   008384  C027  FFF6         	movff	??_isrHigh+8,tblptrl
 43363   008388  C026  FFF4         	movff	??_isrHigh+7,prodh
 43364   00838C  C025  FFF3         	movff	??_isrHigh+6,prodl
 43365   008390  C024  FFDA         	movff	??_isrHigh+5,fsr2h
 43366   008394  C023  FFD9         	movff	??_isrHigh+4,fsr2l
 43367   008398  C022  FFE2         	movff	??_isrHigh+3,fsr1h
 43368   00839C  C021  FFE1         	movff	??_isrHigh+2,fsr1l
 43369   0083A0  C020  FFFB         	movff	??_isrHigh+1,pclatu
 43370   0083A4  C01F  FFFA         	movff	??_isrHigh,pclath
 43371   0083A8  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 43372   0083AA  0011               	retfie		f
 43373   0083AC                     __end_of_isrHigh:
 43374                           	callstack 0
 43375                           
 43376                           	psect	intcodelo
 43377   000818                     __pintcodelo:
 43378                           	callstack 2
 43379   000818  EF60  F041         	goto	_isrLow
 43380                           
 43381 ;; *************** function _lowIsr *****************
 43382 ;; Defined at:
 43383 ;;		line 1075 in file "../../VLCBlib_PIC/vlcb.c"
 43384 ;; Parameters:    Size  Location     Type
 43385 ;;		None
 43386 ;; Auto vars:     Size  Location     Type
 43387 ;;  i               1   29[BANK0 ] unsigned char 
 43388 ;; Return value:  Size  Location     Type
 43389 ;;                  1    wreg      void 
 43390 ;; Registers used:
 43391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43392 ;; Tracked objects:
 43393 ;;		On entry : 0/0
 43394 ;;		On exit  : 0/0
 43395 ;;		Unchanged: 0/0
 43396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43399 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43400 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43401 ;;Total ram usage:        5 bytes
 43402 ;; Hardware stack levels used: 1
 43403 ;; Hardware stack levels required when called: 10
 43404 ;; This function calls:
 43405 ;;		NULL
 43406 ;;		_APP_lowIsr
 43407 ;;		_canIsr
 43408 ;;		_mnsLowIsr
 43409 ;; This function is called by:
 43410 ;;		_isrLow
 43411 ;; This function uses a non-reentrant model
 43412 ;;
 43413                           
 43414                           	psect	text194
 43415   008EC0                     __ptext194:
 43416                           	callstack 0
 43417   008EC0                     _lowIsr:
 43418                           	callstack 2
 43419                           
 43420                           ;../../VLCBlib_PIC/vlcb.c: 1076:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1078:     for 
      +                          (i=0; i<9; i++) {
 43421                           
 43422                           ;incstack = 0
 43423   008EC0  0E00               	movlw	0
 43424   008EC2  0100               	movlb	0	; () banked
 43425   008EC4  6F7D               	movwf	lowIsr@i& (0+255),b
 43426   008EC6                     i1l24549:
 43427                           
 43428                           ; BSR set to: 0
 43429                           ;../../VLCBlib_PIC/vlcb.c: 1079:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 43430   008EC6  517D               	movf	lowIsr@i& (0+255),w,b
 43431   008EC8  0D02               	mullw	2
 43432   008ECA  0E75               	movlw	low _services
 43433   008ECC  24F3               	addwf	243,w,c
 43434   008ECE  6EF6               	movwf	tblptrl,c
 43435   008ED0  0EEE               	movlw	high _services
 43436   008ED2  20F4               	addwfc	244,w,c
 43437   008ED4  6EF7               	movwf	tblptrh,c
 43438   008ED6                     	if	1	;There are 3 active tblptr bytes
 43439   008ED6  6AF8               	clrf	tblptru,c
 43440   008ED8  0E00               	movlw	low (__mediumconst shr (0+16))
 43441   008EDA  22F8               	addwfc	tblptru,f,c
 43442   008EDC                     	endif
 43443   008EDC  0009               	tblrd		*+
 43444   008EDE  50F5               	movf	tablat,w,c
 43445   008EE0  0009               	tblrd		*+
 43446   008EE2  10F5               	iorwf	tablat,w,c
 43447   008EE4  B4D8               	btfsc	status,2,c
 43448   008EE6  D04B               	goto	i1u2660_29
 43449                           
 43450                           ; BSR set to: 0
 43451   008EE8  517D               	movf	lowIsr@i& (0+255),w,b
 43452   008EEA  0D02               	mullw	2
 43453   008EEC  0E75               	movlw	low _services
 43454   008EEE  24F3               	addwf	243,w,c
 43455   008EF0  6EF6               	movwf	tblptrl,c
 43456   008EF2  0EEE               	movlw	high _services
 43457   008EF4  20F4               	addwfc	244,w,c
 43458   008EF6  6EF7               	movwf	tblptrh,c
 43459   008EF8                     	if	1	;There are 3 active tblptr bytes
 43460   008EF8  6AF8               	clrf	tblptru,c
 43461   008EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 43462   008EFC  22F8               	addwfc	tblptru,f,c
 43463   008EFE                     	endif
 43464   008EFE  0009               	tblrd		*+
 43465   008F00  CFF5 F079          	movff	tablat,??_lowIsr
 43466   008F04  0009               	tblrd		*+
 43467   008F06  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43468   008F0A  0E0C               	movlw	12
 43469   008F0C  2779               	addwf	??_lowIsr& (0+255),f,b
 43470   008F0E  0E00               	movlw	0
 43471   008F10  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43472   008F12  C079  FFF6         	movff	??_lowIsr,tblptrl
 43473   008F16  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43474   008F1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43475   008F1A  6AF8               	clrf	tblptru,c
 43476   008F1C                     	endif
 43477   008F1C                     	if	0	;tblptru may be non-zero
 43478   008F1C                     	endif
 43479   008F1C  0009               	tblrd		*+
 43480   008F1E  50F5               	movf	tablat,w,c
 43481   008F20  0009               	tblrd		*+
 43482   008F22  10F5               	iorwf	tablat,w,c
 43483   008F24  B4D8               	btfsc	status,2,c
 43484   008F26  D02B               	goto	i1u2660_29
 43485                           
 43486                           ; BSR set to: 0
 43487                           ;../../VLCBlib_PIC/vlcb.c: 1080:             services[i]->lowIsr();
 43488   008F28  517D               	movf	lowIsr@i& (0+255),w,b
 43489   008F2A  0D02               	mullw	2
 43490   008F2C  0E75               	movlw	low _services
 43491   008F2E  24F3               	addwf	243,w,c
 43492   008F30  6EF6               	movwf	tblptrl,c
 43493   008F32  0EEE               	movlw	high _services
 43494   008F34  20F4               	addwfc	244,w,c
 43495   008F36  6EF7               	movwf	tblptrh,c
 43496   008F38                     	if	1	;There are 3 active tblptr bytes
 43497   008F38  6AF8               	clrf	tblptru,c
 43498   008F3A  0E00               	movlw	low (__mediumconst shr (0+16))
 43499   008F3C  22F8               	addwfc	tblptru,f,c
 43500   008F3E                     	endif
 43501   008F3E  0009               	tblrd		*+
 43502   008F40  CFF5 F079          	movff	tablat,??_lowIsr
 43503   008F44  0009               	tblrd		*+
 43504   008F46  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43505   008F4A  0E0C               	movlw	12
 43506   008F4C  2779               	addwf	??_lowIsr& (0+255),f,b
 43507   008F4E  0E00               	movlw	0
 43508   008F50  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43509   008F52  C079  FFF6         	movff	??_lowIsr,tblptrl
 43510   008F56  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43511   008F5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43512   008F5A  6AF8               	clrf	tblptru,c
 43513   008F5C                     	endif
 43514   008F5C                     	if	0	;tblptru may be non-zero
 43515   008F5C                     	endif
 43516   008F5C  0009               	tblrd		*+
 43517   008F5E  CFF5 F07B          	movff	tablat,??_lowIsr+2
 43518   008F62  0009               	tblrd		*+
 43519   008F64  CFF5 F07C          	movff	tablat,??_lowIsr+3
 43520   008F68  D801               	call	i1u2660_28
 43521   008F6A  D009               	goto	i1u2660_29
 43522   008F6C                     i1u2660_28:
 43523   008F6C  0005               	push	
 43524   008F6E  6EFA               	movwf	pclath,c
 43525   008F70  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 43526   008F72  6EFD               	movwf	tosl,c
 43527   008F74  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 43528   008F76  6EFE               	movwf	tosh,c
 43529   008F78  6AFF               	clrf	tosu,c
 43530   008F7A  50FA               	movf	pclath,w,c
 43531   008F7C  0012               	return		;indir
 43532   008F7E                     i1u2660_29:
 43533                           
 43534                           ;../../VLCBlib_PIC/vlcb.c: 1082:     }
 43535   008F7E  0100               	movlb	0	; () banked
 43536   008F80  2B7D               	incf	lowIsr@i& (0+255),f,b
 43537                           
 43538                           ; BSR set to: 0
 43539   008F82  0E08               	movlw	8
 43540   008F84  657D               	cpfsgt	lowIsr@i& (0+255),b
 43541   008F86  D79F               	goto	i1l24549
 43542                           
 43543                           ; BSR set to: 0
 43544                           ;../../VLCBlib_PIC/vlcb.c: 1083:     APP_lowIsr();
 43545   008F88  ECF0  F061         	call	_APP_lowIsr	;wreg free
 43546   008F8C  0012               	return		;funcret
 43547   008F8E                     __end_of_lowIsr:
 43548                           	callstack 0
 43549                           
 43550 ;; *************** function _canIsr *****************
 43551 ;; Defined at:
 43552 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 43553 ;; Parameters:    Size  Location     Type
 43554 ;;		None
 43555 ;; Auto vars:     Size  Location     Type
 43556 ;;		None
 43557 ;; Return value:  Size  Location     Type
 43558 ;;                  1    wreg      void 
 43559 ;; Registers used:
 43560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43561 ;; Tracked objects:
 43562 ;;		On entry : 0/0
 43563 ;;		On exit  : 0/0
 43564 ;;		Unchanged: 0/0
 43565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43570 ;;Total ram usage:        0 bytes
 43571 ;; Hardware stack levels used: 1
 43572 ;; Hardware stack levels required when called: 9
 43573 ;; This function calls:
 43574 ;;		_canFillRxFifo
 43575 ;;		_canTxError
 43576 ;;		_checkCANTimeout
 43577 ;;		_checkTxFifo
 43578 ;; This function is called by:
 43579 ;;		_highIsr
 43580 ;;		_lowIsr
 43581 ;; This function uses a non-reentrant model
 43582 ;;
 43583                           
 43584                           	psect	text195
 43585   00C1C6                     __ptext195:
 43586                           	callstack 0
 43587   00C1C6                     _canIsr:
 43588                           	callstack 0
 43589                           
 43590                           ;Skip over the trampoline to the duplicate function for level 2
 43591   00C1C6  A252               	btfss	btemp,1,c
 43592   00C1C8  D002               	goto	_canIsr$intlevel1
 43593   00C1CA  EF6D  F061         	goto	i2_canIsr
 43594   00C1CE                     _canIsr$intlevel1:
 43595                           	callstack 2
 43596                           
 43597                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 43598                           
 43599                           ;incstack = 0
 43600   00C1CE  B077               	btfsc	119,0,c	;volatile
 43601                           
 43602                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 43603   00C1D0  ECF3  F038         	call	_canFillRxFifo	;wreg free
 43604                           
 43605                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 43606   00C1D4  BA77               	btfsc	119,5,c	;volatile
 43607                           
 43608                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 43609   00C1D6  EC00  F058         	call	_canTxError	;wreg free
 43610                           
 43611                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 43612   00C1DA  B877               	btfsc	119,4,c	;volatile
 43613                           
 43614                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 43615   00C1DC  ECE3  F028         	call	_checkTxFifo	;wreg free
 43616                           
 43617                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 43618                           
 43619                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 43620   00C1E0  ECAF  F05A         	call	_checkCANTimeout	;wreg free
 43621   00C1E4  0012               	return		;funcret
 43622   00C1E6                     __end_of_canIsr:
 43623                           	callstack 0
 43624                           
 43625 ;; *************** function _mnsLowIsr *****************
 43626 ;; Defined at:
 43627 ;;		line 762 in file "../../VLCBlib_PIC/mns.c"
 43628 ;; Parameters:    Size  Location     Type
 43629 ;;		None
 43630 ;; Auto vars:     Size  Location     Type
 43631 ;;		None
 43632 ;; Return value:  Size  Location     Type
 43633 ;;                  1    wreg      void 
 43634 ;; Registers used:
 43635 ;;		wreg, status,2, status,0
 43636 ;; Tracked objects:
 43637 ;;		On entry : 0/0
 43638 ;;		On exit  : 0/0
 43639 ;;		Unchanged: 0/0
 43640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43645 ;;Total ram usage:        0 bytes
 43646 ;; Hardware stack levels used: 1
 43647 ;; Hardware stack levels required when called: 6
 43648 ;; This function calls:
 43649 ;;		Nothing
 43650 ;; This function is called by:
 43651 ;;		_lowIsr
 43652 ;; This function uses a non-reentrant model
 43653 ;;
 43654                           
 43655                           	psect	text196
 43656   00C31C                     __ptext196:
 43657                           	callstack 0
 43658   00C31C                     _mnsLowIsr:
 43659                           	callstack 5
 43660                           
 43661                           ;../../VLCBlib_PIC/mns.c: 765:     if(INTCONbits.TMR0IF) {
 43662                           
 43663                           ;incstack = 0
 43664   00C31C  A4F2               	btfss	242,2,c	;volatile
 43665   00C31E  0012               	return	
 43666                           
 43667                           ;../../VLCBlib_PIC/mns.c: 767:         INTCONbits.TMR0IF = 0;
 43668   00C320  94F2               	bcf	242,2,c	;volatile
 43669                           
 43670                           ;../../VLCBlib_PIC/mns.c: 768:         timerExtension1++;
 43671   00C322  0100               	movlb	0	; () banked
 43672   00C324  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 43673                           
 43674                           ; BSR set to: 0
 43675                           ;../../VLCBlib_PIC/mns.c: 769:         if(timerExtension1 == 0) {
 43676   00C326  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 43677   00C328  A4D8               	btfss	status,2,c
 43678   00C32A  0012               	return	
 43679                           
 43680                           ; BSR set to: 0
 43681                           ;../../VLCBlib_PIC/mns.c: 770:             timerExtension2++;
 43682   00C32C  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 43683   00C32E  0012               	return		;funcret
 43684   00C330                     __end_of_mnsLowIsr:
 43685                           	callstack 0
 43686                           
 43687 ;; *************** function _checkCANTimeout *****************
 43688 ;; Defined at:
 43689 ;;		line 701 in file "../../VLCBlib_PIC/can18_ecan.c"
 43690 ;; Parameters:    Size  Location     Type
 43691 ;;		None
 43692 ;; Auto vars:     Size  Location     Type
 43693 ;;		None
 43694 ;; Return value:  Size  Location     Type
 43695 ;;                  1    wreg      void 
 43696 ;; Registers used:
 43697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43698 ;; Tracked objects:
 43699 ;;		On entry : 0/0
 43700 ;;		On exit  : 0/0
 43701 ;;		Unchanged: 0/0
 43702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43705 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43706 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43707 ;;Total ram usage:        4 bytes
 43708 ;; Hardware stack levels used: 1
 43709 ;; Hardware stack levels required when called: 8
 43710 ;; This function calls:
 43711 ;;		_checkTxFifo
 43712 ;;		i1_tickGet
 43713 ;;		i1_updateModuleErrorStatus
 43714 ;; This function is called by:
 43715 ;;		_canIsr
 43716 ;; This function uses a non-reentrant model
 43717 ;;
 43718                           
 43719                           	psect	text197
 43720   00B55E                     __ptext197:
 43721                           	callstack 0
 43722   00B55E                     _checkCANTimeout:
 43723                           	callstack 2
 43724                           
 43725                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (canTransmitTimeout.val != 0) {
 43726                           
 43727                           ;incstack = 0
 43728   00B55E  502F               	movf	_canTransmitTimeout^0,w,c
 43729   00B560  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 43730   00B562  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 43731   00B564  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 43732   00B566  B4D8               	btfsc	status,2,c
 43733   00B568  0012               	return	
 43734                           
 43735                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 43736   00B56A  EC2E  F05A         	call	i1_tickGet	;wreg free
 43737   00B56E  502F               	movf	_canTransmitTimeout^0,w,c
 43738   00B570  0100               	movlb	0	; () banked
 43739   00B572  5D60               	subwf	?i1_tickGet& (0+255),w,b
 43740   00B574  6F75               	movwf	??_checkCANTimeout& (0+255),b
 43741   00B576  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 43742   00B578  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 43743   00B57A  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 43744   00B57C  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 43745   00B57E  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 43746   00B580  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 43747   00B582  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 43748   00B584  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 43749   00B586  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 43750   00B588  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 43751   00B58A  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 43752   00B58C  E106               	bnz	i1u2322_20
 43753   00B58E  0E25               	movlw	37
 43754   00B590  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 43755   00B592  0EF4               	movlw	244
 43756   00B594  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 43757   00B596  A0D8               	btfss	status,0,c
 43758   00B598  0012               	return	
 43759   00B59A                     i1u2322_20:
 43760                           
 43761                           ; BSR set to: 0
 43762                           ;../../VLCBlib_PIC/can18_ecan.c: 704:             canTransmitFailed = 1;
 43763   00B59A  0E01               	movlw	1
 43764   00B59C  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43765                           
 43766                           ; BSR set to: 0
 43767                           ;../../VLCBlib_PIC/can18_ecan.c: 705:             TXB0CONbits.TXREQ = 0;
 43768   00B59E  010F               	movlb	15	; () banked
 43769   00B5A0  9720               	bcf	32,3,b	;volatile
 43770                           
 43771                           ; BSR set to: 15
 43772                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             checkTxFifo();
 43773   00B5A2  ECE3  F028         	call	_checkTxFifo	;wreg free
 43774                           
 43775                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             canDiagnostics[0x01].asUint++;
 43776   00B5A6  0101               	movlb	1	; () banked
 43777   00B5A8  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43778   00B5AA  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 43779                           
 43780                           ; BSR set to: 1
 43781                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             updateModuleErrorStatus();
 43782   00B5AC  ECB8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43783   00B5B0  0012               	return		;funcret
 43784   00B5B2                     __end_of_checkCANTimeout:
 43785                           	callstack 0
 43786                           
 43787 ;; *************** function _canTxError *****************
 43788 ;; Defined at:
 43789 ;;		line 720 in file "../../VLCBlib_PIC/can18_ecan.c"
 43790 ;; Parameters:    Size  Location     Type
 43791 ;;		None
 43792 ;; Auto vars:     Size  Location     Type
 43793 ;;		None
 43794 ;; Return value:  Size  Location     Type
 43795 ;;                  1    wreg      void 
 43796 ;; Registers used:
 43797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43798 ;; Tracked objects:
 43799 ;;		On entry : 0/0
 43800 ;;		On exit  : 0/0
 43801 ;;		Unchanged: 0/0
 43802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43807 ;;Total ram usage:        0 bytes
 43808 ;; Hardware stack levels used: 1
 43809 ;; Hardware stack levels required when called: 8
 43810 ;; This function calls:
 43811 ;;		_checkTxFifo
 43812 ;;		i1_updateModuleErrorStatus
 43813 ;; This function is called by:
 43814 ;;		_canIsr
 43815 ;; This function uses a non-reentrant model
 43816 ;;
 43817                           
 43818                           	psect	text198
 43819   00B000                     __ptext198:
 43820                           	callstack 0
 43821   00B000                     _canTxError:
 43822                           	callstack 2
 43823                           
 43824                           ;../../VLCBlib_PIC/can18_ecan.c: 721:     if (TXB0CONbits.TXLARB) {
 43825                           
 43826                           ;incstack = 0
 43827   00B000  010F               	movlb	15	; () banked
 43828   00B002  AB20               	btfss	32,5,b	;volatile
 43829   00B004  D012               	goto	i1l21929
 43830                           
 43831                           ; BSR set to: 15
 43832                           ;../../VLCBlib_PIC/can18_ecan.c: 722:         canTransmitFailed = 1;
 43833   00B006  0E01               	movlw	1
 43834   00B008  0100               	movlb	0	; () banked
 43835   00B00A  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43836                           
 43837                           ;../../VLCBlib_PIC/can18_ecan.c: 723:         canTransmitTimeout.val = 0;
 43838   00B00C  0E00               	movlw	0
 43839   00B00E  6E2F               	movwf	_canTransmitTimeout^0,c
 43840   00B010  0E00               	movlw	0
 43841   00B012  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 43842   00B014  0E00               	movlw	0
 43843   00B016  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 43844   00B018  0E00               	movlw	0
 43845   00B01A  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 43846                           
 43847                           ; BSR set to: 0
 43848                           ;../../VLCBlib_PIC/can18_ecan.c: 724:         TXB0CONbits.TXREQ = 0;
 43849   00B01C  010F               	movlb	15	; () banked
 43850   00B01E  9720               	bcf	32,3,b	;volatile
 43851                           
 43852                           ; BSR set to: 15
 43853                           ;../../VLCBlib_PIC/can18_ecan.c: 726:         canDiagnostics[0x0B].asUint++;
 43854   00B020  0101               	movlb	1	; () banked
 43855   00B022  4B8D               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 43856   00B024  2B8E               	incf	(_canDiagnostics+23)& (0+255),f,b
 43857                           
 43858                           ; BSR set to: 1
 43859                           ;../../VLCBlib_PIC/can18_ecan.c: 727:         updateModuleErrorStatus();
 43860   00B026  ECB8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43861   00B02A                     i1l21929:
 43862                           
 43863                           ;../../VLCBlib_PIC/can18_ecan.c: 730:     if (TXB0CONbits.TXERR) {
 43864   00B02A  010F               	movlb	15	; () banked
 43865   00B02C  A920               	btfss	32,4,b	;volatile
 43866   00B02E  D012               	goto	i1l21939
 43867                           
 43868                           ; BSR set to: 15
 43869                           ;../../VLCBlib_PIC/can18_ecan.c: 731:         canTransmitFailed = 1;
 43870   00B030  0E01               	movlw	1
 43871   00B032  0100               	movlb	0	; () banked
 43872   00B034  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43873                           
 43874                           ;../../VLCBlib_PIC/can18_ecan.c: 732:         canTransmitTimeout.val = 0;
 43875   00B036  0E00               	movlw	0
 43876   00B038  6E2F               	movwf	_canTransmitTimeout^0,c
 43877   00B03A  0E00               	movlw	0
 43878   00B03C  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 43879   00B03E  0E00               	movlw	0
 43880   00B040  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 43881   00B042  0E00               	movlw	0
 43882   00B044  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 43883                           
 43884                           ; BSR set to: 0
 43885                           ;../../VLCBlib_PIC/can18_ecan.c: 733:         TXB0CONbits.TXREQ = 0;
 43886   00B046  010F               	movlb	15	; () banked
 43887   00B048  9720               	bcf	32,3,b	;volatile
 43888                           
 43889                           ; BSR set to: 15
 43890                           ;../../VLCBlib_PIC/can18_ecan.c: 735:         canDiagnostics[0x01].asUint++;
 43891   00B04A  0101               	movlb	1	; () banked
 43892   00B04C  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43893   00B04E  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 43894                           
 43895                           ; BSR set to: 1
 43896                           ;../../VLCBlib_PIC/can18_ecan.c: 736:         updateModuleErrorStatus();
 43897   00B050  ECB8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43898   00B054                     i1l21939:
 43899                           
 43900                           ;../../VLCBlib_PIC/can18_ecan.c: 739:     if (canTransmitFailed) {
 43901   00B054  0100               	movlb	0	; () banked
 43902   00B056  51C2               	movf	_canTransmitFailed& (0+255),w,b
 43903   00B058  A4D8               	btfss	status,2,c
 43904                           
 43905                           ; BSR set to: 0
 43906                           ;../../VLCBlib_PIC/can18_ecan.c: 740:         checkTxFifo();
 43907   00B05A  ECE3  F028         	call	_checkTxFifo	;wreg free
 43908                           
 43909                           ;../../VLCBlib_PIC/can18_ecan.c: 742:     PIR5bits.ERRIF = 0;
 43910   00B05E  9A77               	bcf	119,5,c	;volatile
 43911   00B060  0012               	return		;funcret
 43912   00B062                     __end_of_canTxError:
 43913                           	callstack 0
 43914                           
 43915 ;; *************** function _checkTxFifo *****************
 43916 ;; Defined at:
 43917 ;;		line 630 in file "../../VLCBlib_PIC/can18_ecan.c"
 43918 ;; Parameters:    Size  Location     Type
 43919 ;;		None
 43920 ;; Auto vars:     Size  Location     Type
 43921 ;;  mp              2   19[BANK0 ] PTR struct Message
 43922 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43923 ;;  m               2   17[BANK0 ] PTR struct Message
 43924 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43925 ;; Return value:  Size  Location     Type
 43926 ;;                  1    wreg      void 
 43927 ;; Registers used:
 43928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43929 ;; Tracked objects:
 43930 ;;		On entry : 0/0
 43931 ;;		On exit  : 0/0
 43932 ;;		Unchanged: 0/0
 43933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43935 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43936 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43937 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43938 ;;Total ram usage:        9 bytes
 43939 ;; Hardware stack levels used: 1
 43940 ;; Hardware stack levels required when called: 7
 43941 ;; This function calls:
 43942 ;;		i1_getNextWriteMessage
 43943 ;;		i1_isEvent
 43944 ;;		i1_pop
 43945 ;;		i1_tickGet
 43946 ;;		i1_updateModuleErrorStatus
 43947 ;; This function is called by:
 43948 ;;		_canIsr
 43949 ;;		_checkCANTimeout
 43950 ;;		_canTxError
 43951 ;; This function uses a non-reentrant model
 43952 ;;
 43953                           
 43954                           	psect	text199
 43955   0051C6                     __ptext199:
 43956                           	callstack 0
 43957   0051C6                     _checkTxFifo:
 43958                           	callstack 3
 43959                           
 43960                           ;../../VLCBlib_PIC/can18_ecan.c: 631:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          633:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 636:     PIR5bits.TXBnIF = 0;
 43961                           
 43962                           ;incstack = 0
 43963   0051C6  9877               	bcf	119,4,c	;volatile
 43964                           
 43965                           ;../../VLCBlib_PIC/can18_ecan.c: 637:     if (!TXB0CONbits.TXREQ) {
 43966   0051C8  010F               	movlb	15	; () banked
 43967   0051CA  B720               	btfsc	32,3,b	;volatile
 43968   0051CC  D158               	goto	i1l2483
 43969                           
 43970                           ; BSR set to: 15
 43971                           ;../../VLCBlib_PIC/can18_ecan.c: 638:         mp = pop(&txQueue);
 43972   0051CE  0E48               	movlw	low _txQueue
 43973   0051D0  0100               	movlb	0	; () banked
 43974   0051D2  6F60               	movwf	i1pop@q& (0+255),b
 43975   0051D4  ECB4  F04D         	call	i1_pop	;wreg free
 43976   0051D8  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 43977   0051DC  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 43978                           
 43979                           ;../../VLCBlib_PIC/can18_ecan.c: 639:         if (mp != ((void*)0)) {
 43980   0051E0  0100               	movlb	0	; () banked
 43981   0051E2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43982   0051E4  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 43983   0051E6  B4D8               	btfsc	status,2,c
 43984   0051E8  D13C               	goto	i1l20811
 43985                           
 43986                           ; BSR set to: 0
 43987                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 43988   0051EA  EE20 F001          	lfsr	2,1
 43989   0051EE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43990   0051F0  26D9               	addwf	fsr2l,f,c
 43991   0051F2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43992   0051F4  22DA               	addwfc	fsr2h,f,c
 43993   0051F6  50DF               	movf	indf2,w,c
 43994   0051F8  6F6C               	movwf	??_checkTxFifo& (0+255),b
 43995   0051FA  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 43996   0051FC  0E35               	movlw	low _priorities
 43997   0051FE  256C               	addwf	??_checkTxFifo& (0+255),w,b
 43998   005200  6EF6               	movwf	tblptrl,c
 43999   005202  0EED               	movlw	high _priorities
 44000   005204  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 44001   005206  6EF7               	movwf	tblptrh,c
 44002   005208                     	if	1	;There are 3 active tblptr bytes
 44003   005208  6AF8               	clrf	tblptru,c
 44004   00520A  0E00               	movlw	low (__mediumconst shr (0+16))
 44005   00520C  22F8               	addwfc	tblptru,f,c
 44006   00520E                     	endif
 44007   00520E  0008               	tblrd		*
 44008   005210  50F5               	movf	tablat,w,c
 44009   005212  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 44010   005214  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 44011   005216  0E87               	movlw	low _canPri
 44012   005218  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 44013   00521A  6EF6               	movwf	tblptrl,c
 44014   00521C  0EEE               	movlw	high _canPri
 44015   00521E  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 44016   005220  6EF7               	movwf	tblptrh,c
 44017   005222                     	if	1	;There are 3 active tblptr bytes
 44018   005222  6AF8               	clrf	tblptru,c
 44019   005224  0E00               	movlw	low (__mediumconst shr (0+16))
 44020   005226  22F8               	addwfc	tblptru,f,c
 44021   005228                     	endif
 44022   005228  0008               	tblrd		*
 44023   00522A  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 44024   00522E  39C3               	swapf	_canId& (0+255),w,b
 44025   005230  46E8               	rlncf	wreg,f,c
 44026   005232  0B1F               	andlw	31
 44027   005234  0B0F               	andlw	15
 44028   005236  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 44029   005238  010F               	movlb	15	; () banked
 44030   00523A  6F21               	movwf	33,b	;volatile
 44031                           
 44032                           ; BSR set to: 15
 44033                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 44034   00523C  C0C3  F06C         	movff	_canId,??_checkTxFifo
 44035   005240  0E07               	movlw	7
 44036   005242  0100               	movlb	0	; () banked
 44037   005244  176C               	andwf	??_checkTxFifo& (0+255),f,b
 44038   005246  0E05               	movlw	5
 44039   005248  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 44040   00524A                     i1u2154_25:
 44041   00524A  90D8               	bcf	status,0,c
 44042   00524C  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 44043   00524E  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 44044   005250  D7FC               	goto	i1u2154_25
 44045   005252  516C               	movf	??_checkTxFifo& (0+255),w,b
 44046   005254  010F               	movlb	15	; () banked
 44047   005256  6F22               	movwf	34,b	;volatile
 44048                           
 44049                           ; BSR set to: 15
 44050                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             TXB0D0 = mp->opc;
 44051   005258  0100               	movlb	0	; () banked
 44052   00525A  EE20 F001          	lfsr	2,1
 44053   00525E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44054   005260  26D9               	addwf	fsr2l,f,c
 44055   005262  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44056   005264  22DA               	addwfc	fsr2h,f,c
 44057   005266  50DF               	movf	indf2,w,c
 44058   005268  010F               	movlb	15	; () banked
 44059   00526A  6F26               	movwf	38,b	;volatile
 44060                           
 44061                           ; BSR set to: 15
 44062                           ;../../VLCBlib_PIC/can18_ecan.c: 644:             TXB0D1 = mp->bytes[0];
 44063   00526C  0100               	movlb	0	; () banked
 44064   00526E  EE20 F002          	lfsr	2,2
 44065   005272  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44066   005274  26D9               	addwf	fsr2l,f,c
 44067   005276  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44068   005278  22DA               	addwfc	fsr2h,f,c
 44069   00527A  50DF               	movf	indf2,w,c
 44070   00527C  010F               	movlb	15	; () banked
 44071   00527E  6F27               	movwf	39,b	;volatile
 44072                           
 44073                           ; BSR set to: 15
 44074                           ;../../VLCBlib_PIC/can18_ecan.c: 645:             TXB0D2 = mp->bytes[1];
 44075   005280  0100               	movlb	0	; () banked
 44076   005282  EE20 F003          	lfsr	2,3
 44077   005286  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44078   005288  26D9               	addwf	fsr2l,f,c
 44079   00528A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44080   00528C  22DA               	addwfc	fsr2h,f,c
 44081   00528E  50DF               	movf	indf2,w,c
 44082   005290  010F               	movlb	15	; () banked
 44083   005292  6F28               	movwf	40,b	;volatile
 44084                           
 44085                           ; BSR set to: 15
 44086                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             TXB0D3 = mp->bytes[2];
 44087   005294  0100               	movlb	0	; () banked
 44088   005296  EE20 F004          	lfsr	2,4
 44089   00529A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44090   00529C  26D9               	addwf	fsr2l,f,c
 44091   00529E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44092   0052A0  22DA               	addwfc	fsr2h,f,c
 44093   0052A2  50DF               	movf	indf2,w,c
 44094   0052A4  010F               	movlb	15	; () banked
 44095   0052A6  6F29               	movwf	41,b	;volatile
 44096                           
 44097                           ; BSR set to: 15
 44098                           ;../../VLCBlib_PIC/can18_ecan.c: 647:             TXB0D4 = mp->bytes[3];
 44099   0052A8  0100               	movlb	0	; () banked
 44100   0052AA  EE20 F005          	lfsr	2,5
 44101   0052AE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44102   0052B0  26D9               	addwf	fsr2l,f,c
 44103   0052B2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44104   0052B4  22DA               	addwfc	fsr2h,f,c
 44105   0052B6  50DF               	movf	indf2,w,c
 44106   0052B8  010F               	movlb	15	; () banked
 44107   0052BA  6F2A               	movwf	42,b	;volatile
 44108                           
 44109                           ; BSR set to: 15
 44110                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             TXB0D5 = mp->bytes[4];
 44111   0052BC  0100               	movlb	0	; () banked
 44112   0052BE  EE20 F006          	lfsr	2,6
 44113   0052C2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44114   0052C4  26D9               	addwf	fsr2l,f,c
 44115   0052C6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44116   0052C8  22DA               	addwfc	fsr2h,f,c
 44117   0052CA  50DF               	movf	indf2,w,c
 44118   0052CC  010F               	movlb	15	; () banked
 44119   0052CE  6F2B               	movwf	43,b	;volatile
 44120                           
 44121                           ; BSR set to: 15
 44122                           ;../../VLCBlib_PIC/can18_ecan.c: 649:             TXB0D6 = mp->bytes[5];
 44123   0052D0  0100               	movlb	0	; () banked
 44124   0052D2  EE20 F007          	lfsr	2,7
 44125   0052D6  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44126   0052D8  26D9               	addwf	fsr2l,f,c
 44127   0052DA  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44128   0052DC  22DA               	addwfc	fsr2h,f,c
 44129   0052DE  50DF               	movf	indf2,w,c
 44130   0052E0  010F               	movlb	15	; () banked
 44131   0052E2  6F2C               	movwf	44,b	;volatile
 44132                           
 44133                           ; BSR set to: 15
 44134                           ;../../VLCBlib_PIC/can18_ecan.c: 650:             TXB0D7 = mp->bytes[6];
 44135   0052E4  0100               	movlb	0	; () banked
 44136   0052E6  EE20 F008          	lfsr	2,8
 44137   0052EA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44138   0052EC  26D9               	addwf	fsr2l,f,c
 44139   0052EE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44140   0052F0  22DA               	addwfc	fsr2h,f,c
 44141   0052F2  50DF               	movf	indf2,w,c
 44142   0052F4  010F               	movlb	15	; () banked
 44143   0052F6  6F2D               	movwf	45,b	;volatile
 44144                           
 44145                           ; BSR set to: 15
 44146                           ;../../VLCBlib_PIC/can18_ecan.c: 651:             TXB0DLC = mp->len;
 44147   0052F8  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 44148   0052FC  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 44149   005300  50DF               	movf	indf2,w,c
 44150   005302  6F25               	movwf	37,b	;volatile
 44151                           
 44152                           ; BSR set to: 15
 44153                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             canTransmitTimeout.val = tickGet();
 44154   005304  EC2E  F05A         	call	i1_tickGet	;wreg free
 44155   005308  C060  F02F         	movff	?i1_tickGet,_canTransmitTimeout
 44156   00530C  C061  F030         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 44157   005310  C062  F031         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 44158   005314  C063  F032         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 44159                           
 44160                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             canTransmitFailed = 0;
 44161   005318  0E00               	movlw	0
 44162   00531A  0100               	movlb	0	; () banked
 44163   00531C  6FC2               	movwf	_canTransmitFailed& (0+255),b
 44164                           
 44165                           ; BSR set to: 0
 44166                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             TXB0CONbits.TXREQ = 1;
 44167   00531E  010F               	movlb	15	; () banked
 44168   005320  8720               	bsf	32,3,b	;volatile
 44169                           
 44170                           ; BSR set to: 15
 44171                           ;../../VLCBlib_PIC/can18_ecan.c: 656:             PIE5bits.TXBnIE = 1;
 44172   005322  8876               	bsf	118,4,c	;volatile
 44173                           
 44174                           ; BSR set to: 15
 44175                           ;../../VLCBlib_PIC/can18_ecan.c: 657:             canDiagnostics[0x05].asUint++;
 44176   005324  0101               	movlb	1	; () banked
 44177   005326  4B81               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 44178   005328  2B82               	incf	(_canDiagnostics+11)& (0+255),f,b
 44179                           
 44180                           ; BSR set to: 1
 44181                           ;../../VLCBlib_PIC/can18_ecan.c: 660:             if (isEvent(mp->opc)) {
 44182   00532A  0100               	movlb	0	; () banked
 44183   00532C  EE20 F001          	lfsr	2,1
 44184   005330  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44185   005332  26D9               	addwf	fsr2l,f,c
 44186   005334  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44187   005336  22DA               	addwfc	fsr2h,f,c
 44188   005338  50DF               	movf	indf2,w,c
 44189   00533A  EC22  F060         	call	i1_isEvent
 44190   00533E  0900               	iorlw	0
 44191   005340  B4D8               	btfsc	status,2,c
 44192   005342  0012               	return	
 44193                           
 44194                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                 m = getNextWriteMessage(&rxQueue);
 44195   005344  0E4D               	movlw	low _rxQueue
 44196   005346  0100               	movlb	0	; () banked
 44197   005348  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44198   00534A  EC28  F046         	call	i1_getNextWriteMessage	;wreg free
 44199   00534E  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 44200   005352  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 44201                           
 44202                           ;../../VLCBlib_PIC/can18_ecan.c: 663:                 if (m == ((void*)0)) {
 44203   005356  0100               	movlb	0	; () banked
 44204   005358  5171               	movf	checkTxFifo@m& (0+255),w,b
 44205   00535A  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 44206   00535C  A4D8               	btfss	status,2,c
 44207   00535E  D006               	goto	i1l20793
 44208                           
 44209                           ; BSR set to: 0
 44210                           ;../../VLCBlib_PIC/can18_ecan.c: 665:                     canDiagnostics[0x07].asUint++;
 44211   005360  0101               	movlb	1	; () banked
 44212   005362  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 44213   005364  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 44214                           
 44215                           ; BSR set to: 1
 44216                           ;../../VLCBlib_PIC/can18_ecan.c: 666:                     updateModuleErrorStatus();
 44217   005366  ECB8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 44218                           
 44219                           ;../../VLCBlib_PIC/can18_ecan.c: 668:                 } else {
 44220   00536A  0012               	return	
 44221   00536C                     i1l20793:
 44222                           
 44223                           ; BSR set to: 0
 44224                           ;../../VLCBlib_PIC/can18_ecan.c: 670:                     m->opc = mp->opc;
 44225   00536C  EE20 F001          	lfsr	2,1
 44226   005370  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44227   005372  26D9               	addwf	fsr2l,f,c
 44228   005374  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44229   005376  22DA               	addwfc	fsr2h,f,c
 44230   005378  EE10 F001          	lfsr	1,1
 44231   00537C  5171               	movf	checkTxFifo@m& (0+255),w,b
 44232   00537E  26E1               	addwf	fsr1l,f,c
 44233   005380  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44234   005382  22E2               	addwfc	fsr1h,f,c
 44235   005384  CFDF FFE7          	movff	indf2,indf1
 44236                           
 44237                           ; BSR set to: 0
 44238                           ;../../VLCBlib_PIC/can18_ecan.c: 671:                     m->len = mp->len;
 44239   005388  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 44240   00538C  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 44241   005390  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 44242   005394  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 44243   005398  CFDF FFE7          	movff	indf2,indf1
 44244                           
 44245                           ; BSR set to: 0
 44246                           ;../../VLCBlib_PIC/can18_ecan.c: 672:                     m->bytes[0] = mp->bytes[0];
 44247   00539C  EE20 F002          	lfsr	2,2
 44248   0053A0  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44249   0053A2  26D9               	addwf	fsr2l,f,c
 44250   0053A4  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44251   0053A6  22DA               	addwfc	fsr2h,f,c
 44252   0053A8  EE10 F002          	lfsr	1,2
 44253   0053AC  5171               	movf	checkTxFifo@m& (0+255),w,b
 44254   0053AE  26E1               	addwf	fsr1l,f,c
 44255   0053B0  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44256   0053B2  22E2               	addwfc	fsr1h,f,c
 44257   0053B4  CFDF FFE7          	movff	indf2,indf1
 44258                           
 44259                           ; BSR set to: 0
 44260                           ;../../VLCBlib_PIC/can18_ecan.c: 673:                     m->bytes[1] = mp->bytes[1];
 44261   0053B8  EE20 F003          	lfsr	2,3
 44262   0053BC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44263   0053BE  26D9               	addwf	fsr2l,f,c
 44264   0053C0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44265   0053C2  22DA               	addwfc	fsr2h,f,c
 44266   0053C4  EE10 F003          	lfsr	1,3
 44267   0053C8  5171               	movf	checkTxFifo@m& (0+255),w,b
 44268   0053CA  26E1               	addwf	fsr1l,f,c
 44269   0053CC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44270   0053CE  22E2               	addwfc	fsr1h,f,c
 44271   0053D0  CFDF FFE7          	movff	indf2,indf1
 44272                           
 44273                           ; BSR set to: 0
 44274                           ;../../VLCBlib_PIC/can18_ecan.c: 674:                     m->bytes[2] = mp->bytes[2];
 44275   0053D4  EE20 F004          	lfsr	2,4
 44276   0053D8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44277   0053DA  26D9               	addwf	fsr2l,f,c
 44278   0053DC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44279   0053DE  22DA               	addwfc	fsr2h,f,c
 44280   0053E0  EE10 F004          	lfsr	1,4
 44281   0053E4  5171               	movf	checkTxFifo@m& (0+255),w,b
 44282   0053E6  26E1               	addwf	fsr1l,f,c
 44283   0053E8  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44284   0053EA  22E2               	addwfc	fsr1h,f,c
 44285   0053EC  CFDF FFE7          	movff	indf2,indf1
 44286                           
 44287                           ; BSR set to: 0
 44288                           ;../../VLCBlib_PIC/can18_ecan.c: 675:                     m->bytes[3] = mp->bytes[3];
 44289   0053F0  EE20 F005          	lfsr	2,5
 44290   0053F4  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44291   0053F6  26D9               	addwf	fsr2l,f,c
 44292   0053F8  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44293   0053FA  22DA               	addwfc	fsr2h,f,c
 44294   0053FC  EE10 F005          	lfsr	1,5
 44295   005400  5171               	movf	checkTxFifo@m& (0+255),w,b
 44296   005402  26E1               	addwf	fsr1l,f,c
 44297   005404  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44298   005406  22E2               	addwfc	fsr1h,f,c
 44299   005408  CFDF FFE7          	movff	indf2,indf1
 44300                           
 44301                           ; BSR set to: 0
 44302                           ;../../VLCBlib_PIC/can18_ecan.c: 676:                     m->bytes[4] = mp->bytes[4];
 44303   00540C  EE20 F006          	lfsr	2,6
 44304   005410  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44305   005412  26D9               	addwf	fsr2l,f,c
 44306   005414  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44307   005416  22DA               	addwfc	fsr2h,f,c
 44308   005418  EE10 F006          	lfsr	1,6
 44309   00541C  5171               	movf	checkTxFifo@m& (0+255),w,b
 44310   00541E  26E1               	addwf	fsr1l,f,c
 44311   005420  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44312   005422  22E2               	addwfc	fsr1h,f,c
 44313   005424  CFDF FFE7          	movff	indf2,indf1
 44314                           
 44315                           ; BSR set to: 0
 44316                           ;../../VLCBlib_PIC/can18_ecan.c: 677:                     m->bytes[5] = mp->bytes[5];
 44317   005428  EE20 F007          	lfsr	2,7
 44318   00542C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44319   00542E  26D9               	addwf	fsr2l,f,c
 44320   005430  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44321   005432  22DA               	addwfc	fsr2h,f,c
 44322   005434  EE10 F007          	lfsr	1,7
 44323   005438  5171               	movf	checkTxFifo@m& (0+255),w,b
 44324   00543A  26E1               	addwf	fsr1l,f,c
 44325   00543C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44326   00543E  22E2               	addwfc	fsr1h,f,c
 44327   005440  CFDF FFE7          	movff	indf2,indf1
 44328                           
 44329                           ; BSR set to: 0
 44330                           ;../../VLCBlib_PIC/can18_ecan.c: 678:                     m->bytes[6] = mp->bytes[6];
 44331   005444  EE20 F008          	lfsr	2,8
 44332   005448  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44333   00544A  26D9               	addwf	fsr2l,f,c
 44334   00544C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44335   00544E  22DA               	addwfc	fsr2h,f,c
 44336   005450  EE10 F008          	lfsr	1,8
 44337   005454  5171               	movf	checkTxFifo@m& (0+255),w,b
 44338   005456  26E1               	addwf	fsr1l,f,c
 44339   005458  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44340   00545A  22E2               	addwfc	fsr1h,f,c
 44341   00545C  CFDF FFE7          	movff	indf2,indf1
 44342   005460  0012               	return	
 44343   005462                     i1l20811:
 44344                           
 44345                           ; BSR set to: 0
 44346                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             canTransmitTimeout.val = 0;
 44347   005462  0E00               	movlw	0
 44348   005464  6E2F               	movwf	_canTransmitTimeout^0,c
 44349   005466  0E00               	movlw	0
 44350   005468  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 44351   00546A  0E00               	movlw	0
 44352   00546C  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 44353   00546E  0E00               	movlw	0
 44354   005470  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 44355                           
 44356                           ;../../VLCBlib_PIC/can18_ecan.c: 685:             TXB0CON = 0;
 44357   005472  0E00               	movlw	0
 44358   005474  010F               	movlb	15	; () banked
 44359   005476  6F20               	movwf	32,b	;volatile
 44360                           
 44361                           ; BSR set to: 15
 44362                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             PIR5bits.TXBnIF = 0;
 44363   005478  9877               	bcf	119,4,c	;volatile
 44364                           
 44365                           ; BSR set to: 15
 44366                           ;../../VLCBlib_PIC/can18_ecan.c: 687:             PIE5bits.TXBnIE = 0;
 44367   00547A  9876               	bcf	118,4,c	;volatile
 44368   00547C  0012               	return	
 44369   00547E                     i1l2483:
 44370                           
 44371                           ; BSR set to: 15
 44372                           ;../../VLCBlib_PIC/can18_ecan.c: 691:         PIR5bits.TXBnIF = 0;
 44373   00547E  9877               	bcf	119,4,c	;volatile
 44374                           
 44375                           ;../../VLCBlib_PIC/can18_ecan.c: 692:         PIE5bits.TXBnIE = 1;
 44376   005480  8876               	bsf	118,4,c	;volatile
 44377   005482  0012               	return		;funcret
 44378   005484                     __end_of_checkTxFifo:
 44379                           	callstack 0
 44380                           
 44381 ;; *************** function i1_tickGet *****************
 44382 ;; Defined at:
 44383 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 44384 ;; Parameters:    Size  Location     Type
 44385 ;;		None
 44386 ;; Auto vars:     Size  Location     Type
 44387 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 44388 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 44389 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 44390 ;; Return value:  Size  Location     Type
 44391 ;;                  4    0[BANK0 ] unsigned long 
 44392 ;; Registers used:
 44393 ;;		wreg, status,2, status,0
 44394 ;; Tracked objects:
 44395 ;;		On entry : 0/0
 44396 ;;		On exit  : 0/0
 44397 ;;		Unchanged: 0/0
 44398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44399 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44400 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44402 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44403 ;;Total ram usage:       10 bytes
 44404 ;; Hardware stack levels used: 1
 44405 ;; Hardware stack levels required when called: 6
 44406 ;; This function calls:
 44407 ;;		Nothing
 44408 ;; This function is called by:
 44409 ;;		_checkTxFifo
 44410 ;;		_checkCANTimeout
 44411 ;; This function uses a non-reentrant model
 44412 ;;
 44413                           
 44414                           	psect	text200
 44415   00B45C                     __ptext200:
 44416                           	callstack 0
 44417   00B45C                     i1_tickGet:
 44418                           	callstack 3
 44419                           
 44420                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 44421                           
 44422                           ;incstack = 0
 44423   00B45C  0E00               	movlw	0
 44424   00B45E  0100               	movlb	0	; () banked
 44425   00B460  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 44426                           
 44427                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 44428   00B462  0E00               	movlw	0
 44429   00B464  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 44430                           
 44431                           ; BSR set to: 0
 44432                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 44433   00B466  9AF2               	bcf	242,5,c	;volatile
 44434   00B468                     i1l19901:
 44435                           
 44436                           ; BSR set to: 0
 44437                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 44438   00B468  0E00               	movlw	0
 44439   00B46A  B4F2               	btfsc	242,2,c	;volatile
 44440   00B46C  0E01               	movlw	1
 44441   00B46E  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 44442                           
 44443                           ; BSR set to: 0
 44444                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 44445   00B470  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 44446                           
 44447                           ; BSR set to: 0
 44448                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 44449   00B474  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 44450                           
 44451                           ; BSR set to: 0
 44452                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 44453   00B478  0E00               	movlw	0
 44454   00B47A  B4F2               	btfsc	242,2,c	;volatile
 44455   00B47C  0E01               	movlw	1
 44456   00B47E  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 44457                           
 44458                           ; BSR set to: 0
 44459                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 44460   00B480  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 44461   00B482  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 44462   00B484  A4D8               	btfss	status,2,c
 44463   00B486  D7F0               	goto	i1l19901
 44464                           
 44465                           ; BSR set to: 0
 44466                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 44467   00B488  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 44468   00B48A  B4D8               	btfsc	status,2,c
 44469   00B48C  D005               	goto	i1l19921
 44470                           
 44471                           ; BSR set to: 0
 44472                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 44473   00B48E  94F2               	bcf	242,2,c	;volatile
 44474                           
 44475                           ; BSR set to: 0
 44476                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 44477   00B490  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 44478                           
 44479                           ; BSR set to: 0
 44480                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 44481   00B492  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 44482   00B494  B4D8               	btfsc	status,2,c
 44483                           
 44484                           ; BSR set to: 0
 44485                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44486   00B496  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 44487   00B498                     i1l19921:
 44488                           
 44489                           ; BSR set to: 0
 44490                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44491   00B498  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 44492   00B49A  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 44493                           
 44494                           ; BSR set to: 0
 44495                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44496   00B49C  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 44497   00B49E  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 44498                           
 44499                           ; BSR set to: 0
 44500                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 44501   00B4A0  8AF2               	bsf	242,5,c	;volatile
 44502                           
 44503                           ; BSR set to: 0
 44504                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44505   00B4A2  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 44506   00B4A6  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 44507   00B4AA  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 44508   00B4AE  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 44509                           
 44510                           ; BSR set to: 0
 44511   00B4B2  0012               	return		;funcret
 44512   00B4B4                     __end_ofi1_tickGet:
 44513                           	callstack 0
 44514                           
 44515 ;; *************** function i1_pop *****************
 44516 ;; Defined at:
 44517 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 44518 ;; Parameters:    Size  Location     Type
 44519 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44520 ;;		 -> txQueue(5), rxQueue(5), 
 44521 ;; Auto vars:     Size  Location     Type
 44522 ;;  ret             2    7[BANK0 ] PTR struct Message
 44523 ;;		 -> txBuffers(72), rxBuffers(288), 
 44524 ;; Return value:  Size  Location     Type
 44525 ;;                  2    0[BANK0 ] PTR struct Message
 44526 ;; Registers used:
 44527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44528 ;; Tracked objects:
 44529 ;;		On entry : 0/0
 44530 ;;		On exit  : 0/0
 44531 ;;		Unchanged: 0/0
 44532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44534 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44535 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44536 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44537 ;;Total ram usage:        9 bytes
 44538 ;; Hardware stack levels used: 1
 44539 ;; Hardware stack levels required when called: 6
 44540 ;; This function calls:
 44541 ;;		Nothing
 44542 ;; This function is called by:
 44543 ;;		_checkTxFifo
 44544 ;; This function uses a non-reentrant model
 44545 ;;
 44546                           
 44547                           	psect	text201
 44548   009B68                     __ptext201:
 44549                           	callstack 0
 44550   009B68                     i1_pop:
 44551                           	callstack 3
 44552                           
 44553                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 44554                           
 44555                           ; BSR set to: 0
 44556                           ;incstack = 0
 44557   009B68  0100               	movlb	0	; () banked
 44558   009B6A  5160               	movf	i1pop@q& (0+255),w,b
 44559   009B6C  6ED9               	movwf	fsr2l,c
 44560   009B6E  6ADA               	clrf	fsr2h,c
 44561   009B70  0E02               	movlw	2
 44562   009B72  26D9               	addwf	fsr2l,f,c
 44563   009B74  5160               	movf	i1pop@q& (0+255),w,b
 44564   009B76  6EE1               	movwf	fsr1l,c
 44565   009B78  6AE2               	clrf	fsr1h,c
 44566   009B7A  0E03               	movlw	3
 44567   009B7C  26E1               	addwf	fsr1l,f,c
 44568   009B7E  50DE               	movf	postinc2,w,c
 44569   009B80  18E6               	xorwf	postinc1,w,c
 44570   009B82  A4D8               	btfss	status,2,c
 44571   009B84  D005               	goto	i1l19963
 44572                           
 44573                           ; BSR set to: 0
 44574                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 44575   009B86  0E00               	movlw	0
 44576   009B88  6F60               	movwf	?i1_pop& (0+255),b
 44577   009B8A  0E00               	movlw	0
 44578   009B8C  6F61               	movwf	(?i1_pop+1)& (0+255),b
 44579   009B8E  0012               	return	
 44580   009B90                     i1l19963:
 44581                           
 44582                           ; BSR set to: 0
 44583                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 44584   009B90  5160               	movf	i1pop@q& (0+255),w,b
 44585   009B92  6ED9               	movwf	fsr2l,c
 44586   009B94  6ADA               	clrf	fsr2h,c
 44587   009B96  0E02               	movlw	2
 44588   009B98  26D9               	addwf	fsr2l,f,c
 44589   009B9A  50DF               	movf	indf2,w,c
 44590   009B9C  6F62               	movwf	??i1_pop& (0+255),b
 44591   009B9E  5162               	movf	??i1_pop& (0+255),w,b
 44592   009BA0  0D09               	mullw	9
 44593   009BA2  CFF3 F063          	movff	prodl,??i1_pop+1
 44594   009BA6  CFF4 F064          	movff	prodh,??i1_pop+2
 44595   009BAA  5160               	movf	i1pop@q& (0+255),w,b
 44596   009BAC  6ED9               	movwf	fsr2l,c
 44597   009BAE  6ADA               	clrf	fsr2h,c
 44598   009BB0  CFDE F065          	movff	postinc2,??i1_pop+3
 44599   009BB4  CFDD F066          	movff	postdec2,??i1_pop+4
 44600   009BB8  5163               	movf	(??i1_pop+1)& (0+255),w,b
 44601   009BBA  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 44602   009BBC  6F67               	movwf	i1pop@ret& (0+255),b
 44603   009BBE  5164               	movf	(??i1_pop+2)& (0+255),w,b
 44604   009BC0  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 44605   009BC2  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 44606                           
 44607                           ; BSR set to: 0
 44608   009BC4  5160               	movf	i1pop@q& (0+255),w,b
 44609   009BC6  6ED9               	movwf	fsr2l,c
 44610   009BC8  6ADA               	clrf	fsr2h,c
 44611   009BCA  0E02               	movlw	2
 44612   009BCC  26D9               	addwf	fsr2l,f,c
 44613   009BCE  2ADF               	incf	indf2,f,c
 44614                           
 44615                           ; BSR set to: 0
 44616                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 44617   009BD0  5160               	movf	i1pop@q& (0+255),w,b
 44618   009BD2  6ED9               	movwf	fsr2l,c
 44619   009BD4  6ADA               	clrf	fsr2h,c
 44620   009BD6  0E04               	movlw	4
 44621   009BD8  26D9               	addwf	fsr2l,f,c
 44622   009BDA  5160               	movf	i1pop@q& (0+255),w,b
 44623   009BDC  6EE1               	movwf	fsr1l,c
 44624   009BDE  6AE2               	clrf	fsr1h,c
 44625   009BE0  0E02               	movlw	2
 44626   009BE2  26E1               	addwf	fsr1l,f,c
 44627   009BE4  50DE               	movf	postinc2,w,c
 44628   009BE6  5CE6               	subwf	postinc1,w,c
 44629   009BE8  A0D8               	btfss	status,0,c
 44630   009BEA  D006               	goto	i1l19971
 44631                           
 44632                           ; BSR set to: 0
 44633   009BEC  5160               	movf	i1pop@q& (0+255),w,b
 44634   009BEE  6ED9               	movwf	fsr2l,c
 44635   009BF0  6ADA               	clrf	fsr2h,c
 44636   009BF2  0E02               	movlw	2
 44637   009BF4  26D9               	addwf	fsr2l,f,c
 44638   009BF6  6ADF               	clrf	indf2,c
 44639   009BF8                     i1l19971:
 44640                           
 44641                           ; BSR set to: 0
 44642                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 44643   009BF8  C067  F060         	movff	i1pop@ret,?i1_pop
 44644   009BFC  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 44645                           
 44646                           ; BSR set to: 0
 44647   009C00  0012               	return		;funcret
 44648   009C02                     __end_ofi1_pop:
 44649                           	callstack 0
 44650                           
 44651 ;; *************** function i1_isEvent *****************
 44652 ;; Defined at:
 44653 ;;		line 1116 in file "../../VLCBlib_PIC/vlcb.c"
 44654 ;; Parameters:    Size  Location     Type
 44655 ;;  opc             1    wreg     unsigned char 
 44656 ;; Auto vars:     Size  Location     Type
 44657 ;;  opc             1    1[BANK0 ] unsigned char 
 44658 ;; Return value:  Size  Location     Type
 44659 ;;                  1    wreg      enum E12760
 44660 ;; Registers used:
 44661 ;;		wreg, status,2, status,0
 44662 ;; Tracked objects:
 44663 ;;		On entry : 0/0
 44664 ;;		On exit  : 0/0
 44665 ;;		Unchanged: 0/0
 44666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44668 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44670 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44671 ;;Total ram usage:        2 bytes
 44672 ;; Hardware stack levels used: 1
 44673 ;; Hardware stack levels required when called: 6
 44674 ;; This function calls:
 44675 ;;		Nothing
 44676 ;; This function is called by:
 44677 ;;		_checkTxFifo
 44678 ;; This function uses a non-reentrant model
 44679 ;;
 44680                           
 44681                           	psect	text202
 44682   00C044                     __ptext202:
 44683                           	callstack 0
 44684   00C044                     i1_isEvent:
 44685                           	callstack 3
 44686                           
 44687                           ; BSR set to: 0
 44688                           ;incstack = 0
 44689                           ;i1isEvent@opc stored from wreg
 44690   00C044  0100               	movlb	0	; () banked
 44691   00C046  6F61               	movwf	i1isEvent@opc& (0+255),b
 44692                           
 44693                           ;../../VLCBlib_PIC/vlcb.c: 1117:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 44694   00C048  0E00               	movlw	0
 44695   00C04A  0100               	movlb	0	; () banked
 44696   00C04C  6F60               	movwf	i1_isEvent$4861& (0+255),b
 44697                           
 44698                           ; BSR set to: 0
 44699   00C04E  5161               	movf	i1isEvent@opc& (0+255),w,b
 44700   00C050  0B90               	andlw	144
 44701   00C052  0A90               	xorlw	144
 44702   00C054  A4D8               	btfss	status,2,c
 44703   00C056  D008               	goto	i1l2011
 44704                           
 44705                           ; BSR set to: 0
 44706   00C058  5161               	movf	i1isEvent@opc& (0+255),w,b
 44707   00C05A  0AFF               	xorlw	255
 44708   00C05C  0B06               	andlw	6
 44709   00C05E  0A06               	xorlw	6
 44710   00C060  A4D8               	btfss	status,2,c
 44711   00C062  D002               	goto	i1l2011
 44712                           
 44713                           ; BSR set to: 0
 44714   00C064  0E01               	movlw	1
 44715   00C066  6F60               	movwf	i1_isEvent$4861& (0+255),b
 44716   00C068                     i1l2011:
 44717                           
 44718                           ; BSR set to: 0
 44719   00C068  5160               	movf	i1_isEvent$4861& (0+255),w,b
 44720                           
 44721                           ; BSR set to: 0
 44722   00C06A  0012               	return		;funcret
 44723   00C06C                     __end_ofi1_isEvent:
 44724                           	callstack 0
 44725                           
 44726 ;; *************** function _canFillRxFifo *****************
 44727 ;; Defined at:
 44728 ;;		line 783 in file "../../VLCBlib_PIC/can18_ecan.c"
 44729 ;; Parameters:    Size  Location     Type
 44730 ;;		None
 44731 ;; Auto vars:     Size  Location     Type
 44732 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 44733 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 44734 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 44735 ;;		 -> NULL(0), 
 44736 ;;  m               2   12[BANK0 ] PTR struct Message
 44737 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44738 ;;  hiIndex         1    0        unsigned char 
 44739 ;; Return value:  Size  Location     Type
 44740 ;;                  1    wreg      void 
 44741 ;; Registers used:
 44742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44743 ;; Tracked objects:
 44744 ;;		On entry : 0/0
 44745 ;;		On exit  : 0/0
 44746 ;;		Unchanged: 0/0
 44747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44749 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44751 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44752 ;;Total ram usage:        4 bytes
 44753 ;; Hardware stack levels used: 1
 44754 ;; Hardware stack levels required when called: 7
 44755 ;; This function calls:
 44756 ;;		i1_getBufferPointer
 44757 ;;		i1_getNextWriteMessage
 44758 ;;		i1_updateModuleErrorStatus
 44759 ;; This function is called by:
 44760 ;;		_canIsr
 44761 ;; This function uses a non-reentrant model
 44762 ;;
 44763                           
 44764                           	psect	text203
 44765   0071E6                     __ptext203:
 44766                           	callstack 0
 44767   0071E6                     _canFillRxFifo:
 44768                           	callstack 3
 44769                           
 44770                           ;../../VLCBlib_PIC/can18_ecan.c: 784:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          785:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 786:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44771                           
 44772                           ; BSR set to: 0
 44773                           ;incstack = 0
 44774   0071E6  D0B0               	goto	i1l21917
 44775   0071E8                     i1l21881:
 44776                           
 44777                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         ptr = getBufferPointer(CANCON & 0x07U);
 44778   0071E8  506F               	movf	111,w,c	;volatile
 44779   0071EA  0B07               	andlw	7
 44780   0071EC  EC2F  F04F         	call	i1_getBufferPointer
 44781   0071F0  C060  F06E         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 44782   0071F4  C061  F06F         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 44783                           
 44784                           ;../../VLCBlib_PIC/can18_ecan.c: 790:         PIR5bits.RXBnIF = 0;
 44785   0071F8  9277               	bcf	119,1,c	;volatile
 44786                           
 44787                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         if (COMSTATbits.RXB1OVFL) {
 44788   0071FA  BC71               	btfsc	113,6,c	;volatile
 44789                           
 44790                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             COMSTATbits.RXB1OVFL = 0;
 44791   0071FC  9C71               	bcf	113,6,c	;volatile
 44792                           
 44793                           ;../../VLCBlib_PIC/can18_ecan.c: 794:         if ((ptr[2] & 0x08) == 0) {
 44794   0071FE  0100               	movlb	0	; () banked
 44795   007200  EE20 F002          	lfsr	2,2
 44796   007204  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44797   007206  26D9               	addwf	fsr2l,f,c
 44798   007208  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44799   00720A  22DA               	addwfc	fsr2h,f,c
 44800   00720C  B6DF               	btfsc	indf2,3,c
 44801   00720E  D093               	goto	i1l21909
 44802                           
 44803                           ; BSR set to: 0
 44804                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             m = getNextWriteMessage(&rxQueue);
 44805   007210  0E4D               	movlw	low _rxQueue
 44806   007212  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44807   007214  EC28  F046         	call	i1_getNextWriteMessage	;wreg free
 44808   007218  C060  F06C         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 44809   00721C  C061  F06D         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 44810                           
 44811                           ;../../VLCBlib_PIC/can18_ecan.c: 798:             if (m == ((void*)0)) {
 44812   007220  0100               	movlb	0	; () banked
 44813   007222  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44814   007224  116D               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 44815   007226  A4D8               	btfss	status,2,c
 44816   007228  D009               	goto	i1l21905
 44817                           
 44818                           ; BSR set to: 0
 44819                           ;../../VLCBlib_PIC/can18_ecan.c: 800:                 canDiagnostics[0x07].asUint++;
 44820   00722A  0101               	movlb	1	; () banked
 44821   00722C  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 44822   00722E  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 44823                           
 44824                           ; BSR set to: 1
 44825                           ;../../VLCBlib_PIC/can18_ecan.c: 801:                 updateModuleErrorStatus();
 44826   007230  ECB8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 44827                           
 44828                           ;../../VLCBlib_PIC/can18_ecan.c: 804:                 if (PIR5bits.IRXIF) {
 44829   007234  AE77               	btfss	119,7,c	;volatile
 44830   007236  0012               	return	
 44831                           
 44832                           ;../../VLCBlib_PIC/can18_ecan.c: 805:                     PIR5bits.IRXIF = 0;
 44833   007238  9E77               	bcf	119,7,c	;volatile
 44834   00723A  0012               	return	
 44835   00723C                     i1l21905:
 44836                           
 44837                           ; BSR set to: 0
 44838                           ;../../VLCBlib_PIC/can18_ecan.c: 810:                 m->opc = ptr[6];
 44839   00723C  EE20 F006          	lfsr	2,6
 44840   007240  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44841   007242  26D9               	addwf	fsr2l,f,c
 44842   007244  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44843   007246  22DA               	addwfc	fsr2h,f,c
 44844   007248  EE10 F001          	lfsr	1,1
 44845   00724C  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44846   00724E  26E1               	addwf	fsr1l,f,c
 44847   007250  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44848   007252  22E2               	addwfc	fsr1h,f,c
 44849   007254  CFDF FFE7          	movff	indf2,indf1
 44850                           
 44851                           ;../../VLCBlib_PIC/can18_ecan.c: 811:                 m->bytes[0] = ptr[7];
 44852   007258  EE20 F007          	lfsr	2,7
 44853   00725C  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44854   00725E  26D9               	addwf	fsr2l,f,c
 44855   007260  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44856   007262  22DA               	addwfc	fsr2h,f,c
 44857   007264  EE10 F002          	lfsr	1,2
 44858   007268  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44859   00726A  26E1               	addwf	fsr1l,f,c
 44860   00726C  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44861   00726E  22E2               	addwfc	fsr1h,f,c
 44862   007270  CFDF FFE7          	movff	indf2,indf1
 44863                           
 44864                           ;../../VLCBlib_PIC/can18_ecan.c: 812:                 m->bytes[1] = ptr[8];
 44865   007274  EE20 F008          	lfsr	2,8
 44866   007278  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44867   00727A  26D9               	addwf	fsr2l,f,c
 44868   00727C  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44869   00727E  22DA               	addwfc	fsr2h,f,c
 44870   007280  EE10 F003          	lfsr	1,3
 44871   007284  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44872   007286  26E1               	addwf	fsr1l,f,c
 44873   007288  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44874   00728A  22E2               	addwfc	fsr1h,f,c
 44875   00728C  CFDF FFE7          	movff	indf2,indf1
 44876                           
 44877                           ;../../VLCBlib_PIC/can18_ecan.c: 813:                 m->bytes[2] = ptr[9];
 44878   007290  EE20 F009          	lfsr	2,9
 44879   007294  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44880   007296  26D9               	addwf	fsr2l,f,c
 44881   007298  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44882   00729A  22DA               	addwfc	fsr2h,f,c
 44883   00729C  EE10 F004          	lfsr	1,4
 44884   0072A0  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44885   0072A2  26E1               	addwf	fsr1l,f,c
 44886   0072A4  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44887   0072A6  22E2               	addwfc	fsr1h,f,c
 44888   0072A8  CFDF FFE7          	movff	indf2,indf1
 44889                           
 44890                           ;../../VLCBlib_PIC/can18_ecan.c: 814:                 m->bytes[3] = ptr[10];
 44891   0072AC  EE20 F00A          	lfsr	2,10
 44892   0072B0  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44893   0072B2  26D9               	addwf	fsr2l,f,c
 44894   0072B4  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44895   0072B6  22DA               	addwfc	fsr2h,f,c
 44896   0072B8  EE10 F005          	lfsr	1,5
 44897   0072BC  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44898   0072BE  26E1               	addwf	fsr1l,f,c
 44899   0072C0  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44900   0072C2  22E2               	addwfc	fsr1h,f,c
 44901   0072C4  CFDF FFE7          	movff	indf2,indf1
 44902                           
 44903                           ;../../VLCBlib_PIC/can18_ecan.c: 815:                 m->bytes[4] = ptr[11];
 44904   0072C8  EE20 F00B          	lfsr	2,11
 44905   0072CC  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44906   0072CE  26D9               	addwf	fsr2l,f,c
 44907   0072D0  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44908   0072D2  22DA               	addwfc	fsr2h,f,c
 44909   0072D4  EE10 F006          	lfsr	1,6
 44910   0072D8  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44911   0072DA  26E1               	addwf	fsr1l,f,c
 44912   0072DC  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44913   0072DE  22E2               	addwfc	fsr1h,f,c
 44914   0072E0  CFDF FFE7          	movff	indf2,indf1
 44915                           
 44916                           ;../../VLCBlib_PIC/can18_ecan.c: 816:                 m->bytes[5] = ptr[12];
 44917   0072E4  EE20 F00C          	lfsr	2,12
 44918   0072E8  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44919   0072EA  26D9               	addwf	fsr2l,f,c
 44920   0072EC  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44921   0072EE  22DA               	addwfc	fsr2h,f,c
 44922   0072F0  EE10 F007          	lfsr	1,7
 44923   0072F4  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44924   0072F6  26E1               	addwf	fsr1l,f,c
 44925   0072F8  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44926   0072FA  22E2               	addwfc	fsr1h,f,c
 44927   0072FC  CFDF FFE7          	movff	indf2,indf1
 44928                           
 44929                           ;../../VLCBlib_PIC/can18_ecan.c: 817:                 m->bytes[6] = ptr[13];
 44930   007300  EE20 F00D          	lfsr	2,13
 44931   007304  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44932   007306  26D9               	addwf	fsr2l,f,c
 44933   007308  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44934   00730A  22DA               	addwfc	fsr2h,f,c
 44935   00730C  EE10 F008          	lfsr	1,8
 44936   007310  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44937   007312  26E1               	addwf	fsr1l,f,c
 44938   007314  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44939   007316  22E2               	addwfc	fsr1h,f,c
 44940   007318  CFDF FFE7          	movff	indf2,indf1
 44941                           
 44942                           ; BSR set to: 0
 44943                           ;../../VLCBlib_PIC/can18_ecan.c: 818:                 m->len = ptr[5]&0xF;
 44944   00731C  EE20 F005          	lfsr	2,5
 44945   007320  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44946   007322  26D9               	addwf	fsr2l,f,c
 44947   007324  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44948   007326  22DA               	addwfc	fsr2h,f,c
 44949   007328  50DF               	movf	indf2,w,c
 44950   00732A  0B0F               	andlw	15
 44951   00732C  C06C  FFD9         	movff	canFillRxFifo@m,fsr2l
 44952   007330  C06D  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 44953   007334  6EDF               	movwf	indf2,c
 44954   007336                     i1l21909:
 44955                           
 44956                           ; BSR set to: 0
 44957                           ;../../VLCBlib_PIC/can18_ecan.c: 822:         if (PIR5bits.IRXIF) {
 44958   007336  BE77               	btfsc	119,7,c	;volatile
 44959                           
 44960                           ; BSR set to: 0
 44961                           ;../../VLCBlib_PIC/can18_ecan.c: 823:             PIR5bits.IRXIF = 0;
 44962   007338  9E77               	bcf	119,7,c	;volatile
 44963                           
 44964                           ; BSR set to: 0
 44965                           ;../../VLCBlib_PIC/can18_ecan.c: 826:         ptr[0] &= 0x7f;
 44966   00733A  C06E  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 44967   00733E  C06F  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 44968   007342  0E7F               	movlw	127
 44969   007344  16DF               	andwf	indf2,f,c
 44970                           
 44971                           ; BSR set to: 0
 44972                           ;../../VLCBlib_PIC/can18_ecan.c: 827:         PIR5bits.FIFOWMIF = 0;
 44973   007346  9077               	bcf	119,0,c	;volatile
 44974   007348                     i1l21917:
 44975                           
 44976                           ;../../VLCBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44977   007348  AE71               	btfss	113,7,c	;volatile
 44978   00734A  0012               	return	
 44979   00734C  D74D               	goto	i1l21881
 44980   00734E                     __end_of_canFillRxFifo:
 44981                           	callstack 0
 44982                           
 44983 ;; *************** function i1_updateModuleErrorStatus *****************
 44984 ;; Defined at:
 44985 ;;		line 627 in file "../../VLCBlib_PIC/mns.c"
 44986 ;; Parameters:    Size  Location     Type
 44987 ;;		None
 44988 ;; Auto vars:     Size  Location     Type
 44989 ;;		None
 44990 ;; Return value:  Size  Location     Type
 44991 ;;                  1    wreg      void 
 44992 ;; Registers used:
 44993 ;;		wreg, status,2, status,0
 44994 ;; Tracked objects:
 44995 ;;		On entry : 0/0
 44996 ;;		On exit  : 0/0
 44997 ;;		Unchanged: 0/0
 44998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45003 ;;Total ram usage:        0 bytes
 45004 ;; Hardware stack levels used: 1
 45005 ;; Hardware stack levels required when called: 6
 45006 ;; This function calls:
 45007 ;;		Nothing
 45008 ;; This function is called by:
 45009 ;;		_checkTxFifo
 45010 ;;		_checkCANTimeout
 45011 ;;		_canTxError
 45012 ;;		_canFillRxFifo
 45013 ;; This function uses a non-reentrant model
 45014 ;;
 45015                           
 45016                           	psect	text204
 45017   00C370                     __ptext204:
 45018                           	callstack 0
 45019   00C370                     i1_updateModuleErrorStatus:
 45020                           	callstack 3
 45021                           
 45022                           ;../../VLCBlib_PIC/mns.c: 628:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 45023                           
 45024                           ;incstack = 0
 45025   00C370  0101               	movlb	1	; () banked
 45026   00C372  2997               	incf	_mnsDiagnostics& (0+255),w,b
 45027   00C374  B4D8               	btfsc	status,2,c
 45028   00C376  0012               	return	
 45029                           
 45030                           ; BSR set to: 1
 45031                           ;../../VLCBlib_PIC/mns.c: 629:         mnsDiagnostics[0x00].asBytes.lo++;
 45032   00C378  2B97               	incf	_mnsDiagnostics& (0+255),f,b
 45033                           
 45034                           ; BSR set to: 1
 45035   00C37A  0012               	return		;funcret
 45036   00C37C                     __end_ofi1_updateModuleErrorStatus:
 45037                           	callstack 0
 45038                           
 45039 ;; *************** function i1_getNextWriteMessage *****************
 45040 ;; Defined at:
 45041 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 45042 ;; Parameters:    Size  Location     Type
 45043 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 45044 ;;		 -> rxQueue(5), 
 45045 ;; Auto vars:     Size  Location     Type
 45046 ;;  wr              1   11[BANK0 ] unsigned char 
 45047 ;; Return value:  Size  Location     Type
 45048 ;;                  2    0[BANK0 ] PTR struct Message
 45049 ;; Registers used:
 45050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45051 ;; Tracked objects:
 45052 ;;		On entry : 0/0
 45053 ;;		On exit  : 0/0
 45054 ;;		Unchanged: 0/0
 45055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45058 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45059 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45060 ;;Total ram usage:       12 bytes
 45061 ;; Hardware stack levels used: 1
 45062 ;; Hardware stack levels required when called: 6
 45063 ;; This function calls:
 45064 ;;		Nothing
 45065 ;; This function is called by:
 45066 ;;		_checkTxFifo
 45067 ;;		_canFillRxFifo
 45068 ;; This function uses a non-reentrant model
 45069 ;;
 45070                           
 45071                           	psect	text205
 45072   008C50                     __ptext205:
 45073                           	callstack 0
 45074   008C50                     i1_getNextWriteMessage:
 45075                           	callstack 3
 45076                           
 45077                           ; BSR set to: 1
 45078                           ;incstack = 0
 45079   008C50  0100               	movlb	0	; () banked
 45080   008C52  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45081   008C54  6ED9               	movwf	fsr2l,c
 45082   008C56  6ADA               	clrf	fsr2h,c
 45083   008C58  0E02               	movlw	2
 45084   008C5A  26D9               	addwf	fsr2l,f,c
 45085   008C5C  50DF               	movf	indf2,w,c
 45086   008C5E  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 45087   008C60  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 45088   008C62  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45089   008C64  6ED9               	movwf	fsr2l,c
 45090   008C66  6ADA               	clrf	fsr2h,c
 45091   008C68  0E04               	movlw	4
 45092   008C6A  26D9               	addwf	fsr2l,f,c
 45093   008C6C  50DF               	movf	indf2,w,c
 45094   008C6E  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 45095   008C70  0EFF               	movlw	255
 45096   008C72  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 45097   008C74  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 45098   008C76  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 45099   008C78  0EFF               	movlw	255
 45100   008C7A  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 45101   008C7C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45102   008C7E  6ED9               	movwf	fsr2l,c
 45103   008C80  6ADA               	clrf	fsr2h,c
 45104   008C82  0E03               	movlw	3
 45105   008C84  26D9               	addwf	fsr2l,f,c
 45106   008C86  50DF               	movf	indf2,w,c
 45107   008C88  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 45108   008C8A  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 45109   008C8C  0E01               	movlw	1
 45110   008C8E  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 45111   008C90  0E00               	movlw	0
 45112   008C92  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 45113   008C94  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 45114   008C96  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 45115   008C98  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 45116   008C9A  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 45117   008C9C  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 45118   008C9E  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 45119   008CA0  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 45120   008CA2  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 45121   008CA4  E109               	bnz	i1l19947
 45122   008CA6  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 45123   008CA8  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 45124   008CAA  A4D8               	btfss	status,2,c
 45125   008CAC  D005               	goto	i1l19947
 45126                           
 45127                           ; BSR set to: 0
 45128   008CAE  0E00               	movlw	0
 45129   008CB0  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 45130   008CB2  0E00               	movlw	0
 45131   008CB4  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 45132   008CB6  0012               	return	
 45133   008CB8                     i1l19947:
 45134                           
 45135                           ; BSR set to: 0
 45136   008CB8  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45137   008CBA  6ED9               	movwf	fsr2l,c
 45138   008CBC  6ADA               	clrf	fsr2h,c
 45139   008CBE  0E03               	movlw	3
 45140   008CC0  26D9               	addwf	fsr2l,f,c
 45141   008CC2  50DF               	movf	indf2,w,c
 45142   008CC4  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 45143   008CC6  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45144   008CC8  6ED9               	movwf	fsr2l,c
 45145   008CCA  6ADA               	clrf	fsr2h,c
 45146   008CCC  0E03               	movlw	3
 45147   008CCE  26D9               	addwf	fsr2l,f,c
 45148   008CD0  2ADF               	incf	indf2,f,c
 45149                           
 45150                           ; BSR set to: 0
 45151   008CD2  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45152   008CD4  6ED9               	movwf	fsr2l,c
 45153   008CD6  6ADA               	clrf	fsr2h,c
 45154   008CD8  0E04               	movlw	4
 45155   008CDA  26D9               	addwf	fsr2l,f,c
 45156   008CDC  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45157   008CDE  6EE1               	movwf	fsr1l,c
 45158   008CE0  6AE2               	clrf	fsr1h,c
 45159   008CE2  0E03               	movlw	3
 45160   008CE4  26E1               	addwf	fsr1l,f,c
 45161   008CE6  50DE               	movf	postinc2,w,c
 45162   008CE8  5CE6               	subwf	postinc1,w,c
 45163   008CEA  A0D8               	btfss	status,0,c
 45164   008CEC  D006               	goto	i1l19953
 45165                           
 45166                           ; BSR set to: 0
 45167   008CEE  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45168   008CF0  6ED9               	movwf	fsr2l,c
 45169   008CF2  6ADA               	clrf	fsr2h,c
 45170   008CF4  0E03               	movlw	3
 45171   008CF6  26D9               	addwf	fsr2l,f,c
 45172   008CF8  6ADF               	clrf	indf2,c
 45173   008CFA                     i1l19953:
 45174                           
 45175                           ; BSR set to: 0
 45176   008CFA  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 45177   008CFC  0D09               	mullw	9
 45178   008CFE  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 45179   008D02  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 45180   008D06  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45181   008D08  6ED9               	movwf	fsr2l,c
 45182   008D0A  6ADA               	clrf	fsr2h,c
 45183   008D0C  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 45184   008D10  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 45185   008D14  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 45186   008D16  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 45187   008D18  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 45188   008D1A  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 45189   008D1C  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 45190   008D1E  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 45191                           
 45192                           ; BSR set to: 0
 45193   008D20  0012               	return		;funcret
 45194   008D22                     __end_ofi1_getNextWriteMessage:
 45195                           	callstack 0
 45196                           
 45197 ;; *************** function i1_getBufferPointer *****************
 45198 ;; Defined at:
 45199 ;;		line 602 in file "../../VLCBlib_PIC/can18_ecan.c"
 45200 ;; Parameters:    Size  Location     Type
 45201 ;;  b               1    wreg     unsigned char 
 45202 ;; Auto vars:     Size  Location     Type
 45203 ;;  b               1    2[BANK0 ] unsigned char 
 45204 ;; Return value:  Size  Location     Type
 45205 ;;                  2    0[BANK0 ] PTR unsigned char 
 45206 ;; Registers used:
 45207 ;;		wreg, status,2, status,0
 45208 ;; Tracked objects:
 45209 ;;		On entry : 0/0
 45210 ;;		On exit  : 0/0
 45211 ;;		Unchanged: 0/0
 45212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45216 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45217 ;;Total ram usage:        3 bytes
 45218 ;; Hardware stack levels used: 1
 45219 ;; Hardware stack levels required when called: 6
 45220 ;; This function calls:
 45221 ;;		Nothing
 45222 ;; This function is called by:
 45223 ;;		_canFillRxFifo
 45224 ;; This function uses a non-reentrant model
 45225 ;;
 45226                           
 45227                           	psect	text206
 45228   009E5E                     __ptext206:
 45229                           	callstack 0
 45230   009E5E                     i1_getBufferPointer:
 45231                           	callstack 3
 45232                           
 45233                           ; BSR set to: 0
 45234                           ;incstack = 0
 45235                           ;i1getBufferPointer@b stored from wreg
 45236   009E5E  0100               	movlb	0	; () banked
 45237   009E60  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 45238                           
 45239                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     switch (b) {
 45240   009E62  D02D               	goto	i1l20975
 45241   009E64                     i1l20937:
 45242                           
 45243                           ; BSR set to: 0
 45244                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & RXB0CON;
 45245   009E64  0E60               	movlw	96
 45246   009E66  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45247   009E68  0E0F               	movlw	15
 45248   009E6A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45249   009E6C  0012               	return	
 45250   009E6E                     i1l20941:
 45251                           
 45252                           ; BSR set to: 0
 45253                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return (uint8_t*) & RXB1CON;
 45254   009E6E  0E30               	movlw	48
 45255   009E70  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45256   009E72  0E0F               	movlw	15
 45257   009E74  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45258   009E76  0012               	return	
 45259   009E78                     i1l20945:
 45260                           
 45261                           ; BSR set to: 0
 45262                           ;../../VLCBlib_PIC/can18_ecan.c: 609:             return (uint8_t*) & B0CON;
 45263   009E78  0E80               	movlw	128
 45264   009E7A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45265   009E7C  0E0E               	movlw	14
 45266   009E7E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45267   009E80  0012               	return	
 45268   009E82                     i1l20949:
 45269                           
 45270                           ; BSR set to: 0
 45271                           ;../../VLCBlib_PIC/can18_ecan.c: 611:             return (uint8_t*) & B1CON;
 45272   009E82  0E90               	movlw	144
 45273   009E84  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45274   009E86  0E0E               	movlw	14
 45275   009E88  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45276   009E8A  0012               	return	
 45277   009E8C                     i1l20953:
 45278                           
 45279                           ; BSR set to: 0
 45280                           ;../../VLCBlib_PIC/can18_ecan.c: 613:             return (uint8_t*) & B2CON;
 45281   009E8C  0EA0               	movlw	160
 45282   009E8E  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45283   009E90  0E0E               	movlw	14
 45284   009E92  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45285   009E94  0012               	return	
 45286   009E96                     i1l20957:
 45287                           
 45288                           ; BSR set to: 0
 45289                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             return (uint8_t*) & B3CON;
 45290   009E96  0EB0               	movlw	176
 45291   009E98  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45292   009E9A  0E0E               	movlw	14
 45293   009E9C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45294   009E9E  0012               	return	
 45295   009EA0                     i1l20961:
 45296                           
 45297                           ; BSR set to: 0
 45298                           ;../../VLCBlib_PIC/can18_ecan.c: 617:             return (uint8_t*) & B4CON;
 45299   009EA0  0EC0               	movlw	192
 45300   009EA2  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45301   009EA4  0E0E               	movlw	14
 45302   009EA6  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45303   009EA8  0012               	return	
 45304   009EAA                     i1l20965:
 45305                           
 45306                           ; BSR set to: 0
 45307                           ;../../VLCBlib_PIC/can18_ecan.c: 619:             return (uint8_t*) & B5CON;
 45308   009EAA  0ED0               	movlw	208
 45309   009EAC  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45310   009EAE  0E0E               	movlw	14
 45311   009EB0  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45312   009EB2  0012               	return	
 45313   009EB4                     i1l20969:
 45314                           
 45315                           ; BSR set to: 0
 45316                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             return ((void*)0);
 45317   009EB4  0E00               	movlw	0
 45318   009EB6  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45319   009EB8  0E00               	movlw	0
 45320   009EBA  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45321   009EBC  0012               	return	
 45322   009EBE                     i1l20975:
 45323   009EBE  0100               	movlb	0	; () banked
 45324   009EC0  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 45325                           
 45326                           ; Switch size 1, requested type "simple"
 45327                           ; Number of cases is 8, Range of values is 0 to 7
 45328                           ; switch strategies available:
 45329                           ; Name         Instructions Cycles
 45330                           ; simple_byte           25    13 (average)
 45331                           ;	Chosen strategy is simple_byte
 45332   009EC2  0A00               	xorlw	0	; case 0
 45333   009EC4  B4D8               	btfsc	status,2,c
 45334   009EC6  D7CE               	goto	i1l20937
 45335   009EC8  0A01               	xorlw	1	; case 1
 45336   009ECA  B4D8               	btfsc	status,2,c
 45337   009ECC  D7D0               	goto	i1l20941
 45338   009ECE  0A03               	xorlw	3	; case 2
 45339   009ED0  B4D8               	btfsc	status,2,c
 45340   009ED2  D7D2               	goto	i1l20945
 45341   009ED4  0A01               	xorlw	1	; case 3
 45342   009ED6  B4D8               	btfsc	status,2,c
 45343   009ED8  D7D4               	goto	i1l20949
 45344   009EDA  0A07               	xorlw	7	; case 4
 45345   009EDC  B4D8               	btfsc	status,2,c
 45346   009EDE  D7D6               	goto	i1l20953
 45347   009EE0  0A01               	xorlw	1	; case 5
 45348   009EE2  B4D8               	btfsc	status,2,c
 45349   009EE4  D7D8               	goto	i1l20957
 45350   009EE6  0A03               	xorlw	3	; case 6
 45351   009EE8  B4D8               	btfsc	status,2,c
 45352   009EEA  D7DA               	goto	i1l20961
 45353   009EEC  0A01               	xorlw	1	; case 7
 45354   009EEE  B4D8               	btfsc	status,2,c
 45355   009EF0  D7DC               	goto	i1l20965
 45356   009EF2  D7E0               	goto	i1l20969
 45357   009EF4                     __end_ofi1_getBufferPointer:
 45358                           	callstack 0
 45359                           
 45360 ;; *************** function _APP_lowIsr *****************
 45361 ;; Defined at:
 45362 ;;		line 704 in file "../main.c"
 45363 ;; Parameters:    Size  Location     Type
 45364 ;;		None
 45365 ;; Auto vars:     Size  Location     Type
 45366 ;;		None
 45367 ;; Return value:  Size  Location     Type
 45368 ;;                  1    wreg      void 
 45369 ;; Registers used:
 45370 ;;		None
 45371 ;; Tracked objects:
 45372 ;;		On entry : 0/0
 45373 ;;		On exit  : 0/0
 45374 ;;		Unchanged: 0/0
 45375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45380 ;;Total ram usage:        0 bytes
 45381 ;; Hardware stack levels used: 1
 45382 ;; Hardware stack levels required when called: 6
 45383 ;; This function calls:
 45384 ;;		Nothing
 45385 ;; This function is called by:
 45386 ;;		_lowIsr
 45387 ;; This function uses a non-reentrant model
 45388 ;;
 45389                           
 45390                           	psect	text207
 45391   00C3E0                     __ptext207:
 45392                           	callstack 0
 45393   00C3E0                     _APP_lowIsr:
 45394                           	callstack 5
 45395                           
 45396                           ; BSR set to: 0
 45397                           ;incstack = 0
 45398   00C3E0  0012               	return		;funcret
 45399   00C3E2                     __end_of_APP_lowIsr:
 45400                           	callstack 0
 45401                           
 45402                           	psect	intcode
 45403   000808                     __pintcode:
 45404                           	callstack 2
 45405   000808  EFA1  F041         	goto	_isrHigh
 45406                           
 45407 ;; *************** function _highIsr *****************
 45408 ;; Defined at:
 45409 ;;		line 1055 in file "../../VLCBlib_PIC/vlcb.c"
 45410 ;; Parameters:    Size  Location     Type
 45411 ;;		None
 45412 ;; Auto vars:     Size  Location     Type
 45413 ;;  i               1   29[COMRAM] unsigned char 
 45414 ;; Return value:  Size  Location     Type
 45415 ;;                  1    wreg      void 
 45416 ;; Registers used:
 45417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 45418 ;; Tracked objects:
 45419 ;;		On entry : 0/0
 45420 ;;		On exit  : 0/0
 45421 ;;		Unchanged: 0/0
 45422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45425 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45426 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45427 ;;Total ram usage:        5 bytes
 45428 ;; Hardware stack levels used: 1
 45429 ;; Hardware stack levels required when called: 4
 45430 ;; This function calls:
 45431 ;;		NULL
 45432 ;;		_APP_highIsr
 45433 ;;		i2_canIsr
 45434 ;; This function is called by:
 45435 ;;		_isrHigh
 45436 ;; This function uses a non-reentrant model
 45437 ;;
 45438                           
 45439                           	psect	text209
 45440   008F8E                     __ptext209:
 45441                           	callstack 0
 45442   008F8E                     _highIsr:
 45443                           	callstack 2
 45444                           
 45445                           ;../../VLCBlib_PIC/vlcb.c: 1056:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1058:     for 
      +                          (i=0; i<9; i++) {
 45446                           
 45447                           ;incstack = 0
 45448   008F8E  0E00               	movlw	0
 45449   008F90  6E1E               	movwf	highIsr@i^0,c
 45450   008F92                     i2l24531:
 45451                           
 45452                           ;../../VLCBlib_PIC/vlcb.c: 1059:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 45453   008F92  501E               	movf	highIsr@i^0,w,c
 45454   008F94  0D02               	mullw	2
 45455   008F96  0E75               	movlw	low _services
 45456   008F98  24F3               	addwf	243,w,c
 45457   008F9A  6EF6               	movwf	tblptrl,c
 45458   008F9C  0EEE               	movlw	high _services
 45459   008F9E  20F4               	addwfc	244,w,c
 45460   008FA0  6EF7               	movwf	tblptrh,c
 45461   008FA2                     	if	1	;There are 3 active tblptr bytes
 45462   008FA2  6AF8               	clrf	tblptru,c
 45463   008FA4  0E00               	movlw	low (__mediumconst shr (0+16))
 45464   008FA6  22F8               	addwfc	tblptru,f,c
 45465   008FA8                     	endif
 45466   008FA8  0009               	tblrd		*+
 45467   008FAA  50F5               	movf	tablat,w,c
 45468   008FAC  0009               	tblrd		*+
 45469   008FAE  10F5               	iorwf	tablat,w,c
 45470   008FB0  B4D8               	btfsc	status,2,c
 45471   008FB2  D04B               	goto	i2u2656_49
 45472   008FB4  501E               	movf	highIsr@i^0,w,c
 45473   008FB6  0D02               	mullw	2
 45474   008FB8  0E75               	movlw	low _services
 45475   008FBA  24F3               	addwf	243,w,c
 45476   008FBC  6EF6               	movwf	tblptrl,c
 45477   008FBE  0EEE               	movlw	high _services
 45478   008FC0  20F4               	addwfc	244,w,c
 45479   008FC2  6EF7               	movwf	tblptrh,c
 45480   008FC4                     	if	1	;There are 3 active tblptr bytes
 45481   008FC4  6AF8               	clrf	tblptru,c
 45482   008FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 45483   008FC8  22F8               	addwfc	tblptru,f,c
 45484   008FCA                     	endif
 45485   008FCA  0009               	tblrd		*+
 45486   008FCC  CFF5 F01A          	movff	tablat,??_highIsr
 45487   008FD0  0009               	tblrd		*+
 45488   008FD2  CFF5 F01B          	movff	tablat,??_highIsr+1
 45489   008FD6  0E0A               	movlw	10
 45490   008FD8  261A               	addwf	??_highIsr^0,f,c
 45491   008FDA  0E00               	movlw	0
 45492   008FDC  221B               	addwfc	(??_highIsr+1)^0,f,c
 45493   008FDE  C01A  FFF6         	movff	??_highIsr,tblptrl
 45494   008FE2  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 45495   008FE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45496   008FE6  6AF8               	clrf	tblptru,c
 45497   008FE8                     	endif
 45498   008FE8                     	if	0	;tblptru may be non-zero
 45499   008FE8                     	endif
 45500   008FE8  0009               	tblrd		*+
 45501   008FEA  50F5               	movf	tablat,w,c
 45502   008FEC  0009               	tblrd		*+
 45503   008FEE  10F5               	iorwf	tablat,w,c
 45504   008FF0  B4D8               	btfsc	status,2,c
 45505   008FF2  D02B               	goto	i2u2656_49
 45506                           
 45507                           ;../../VLCBlib_PIC/vlcb.c: 1060:             services[i]->highIsr();
 45508   008FF4  501E               	movf	highIsr@i^0,w,c
 45509   008FF6  0D02               	mullw	2
 45510   008FF8  0E75               	movlw	low _services
 45511   008FFA  24F3               	addwf	243,w,c
 45512   008FFC  6EF6               	movwf	tblptrl,c
 45513   008FFE  0EEE               	movlw	high _services
 45514   009000  20F4               	addwfc	244,w,c
 45515   009002  6EF7               	movwf	tblptrh,c
 45516   009004                     	if	1	;There are 3 active tblptr bytes
 45517   009004  6AF8               	clrf	tblptru,c
 45518   009006  0E00               	movlw	low (__mediumconst shr (0+16))
 45519   009008  22F8               	addwfc	tblptru,f,c
 45520   00900A                     	endif
 45521   00900A  0009               	tblrd		*+
 45522   00900C  CFF5 F01A          	movff	tablat,??_highIsr
 45523   009010  0009               	tblrd		*+
 45524   009012  CFF5 F01B          	movff	tablat,??_highIsr+1
 45525   009016  0E0A               	movlw	10
 45526   009018  261A               	addwf	??_highIsr^0,f,c
 45527   00901A  0E00               	movlw	0
 45528   00901C  221B               	addwfc	(??_highIsr+1)^0,f,c
 45529   00901E  C01A  FFF6         	movff	??_highIsr,tblptrl
 45530   009022  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 45531   009026                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45532   009026  6AF8               	clrf	tblptru,c
 45533   009028                     	endif
 45534   009028                     	if	0	;tblptru may be non-zero
 45535   009028                     	endif
 45536   009028  0009               	tblrd		*+
 45537   00902A  CFF5 F01C          	movff	tablat,??_highIsr+2
 45538   00902E  0009               	tblrd		*+
 45539   009030  CFF5 F01D          	movff	tablat,??_highIsr+3
 45540   009034  D801               	call	i2u2656_48
 45541   009036  D009               	goto	i2u2656_49
 45542   009038                     i2u2656_48:
 45543   009038  0005               	push	
 45544   00903A  6EFA               	movwf	pclath,c
 45545   00903C  501C               	movf	(??_highIsr+2)^0,w,c
 45546   00903E  6EFD               	movwf	tosl,c
 45547   009040  501D               	movf	(??_highIsr+3)^0,w,c
 45548   009042  6EFE               	movwf	tosh,c
 45549   009044  6AFF               	clrf	tosu,c
 45550   009046  50FA               	movf	pclath,w,c
 45551   009048  0012               	return		;indir
 45552   00904A                     i2u2656_49:
 45553                           
 45554                           ;../../VLCBlib_PIC/vlcb.c: 1062:     }
 45555   00904A  2A1E               	incf	highIsr@i^0,f,c
 45556   00904C  0E08               	movlw	8
 45557   00904E  641E               	cpfsgt	highIsr@i^0,c
 45558   009050  D7A0               	goto	i2l24531
 45559                           
 45560                           ;../../VLCBlib_PIC/vlcb.c: 1063:     APP_highIsr();
 45561   009052  EC79  F061         	call	_APP_highIsr	;wreg free
 45562   009056  0012               	return		;funcret
 45563   009058                     __end_of_highIsr:
 45564                           	callstack 0
 45565                           
 45566 ;; *************** function i2_canIsr *****************
 45567 ;; Defined at:
 45568 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 45569 ;; Parameters:    Size  Location     Type
 45570 ;;		None
 45571 ;; Auto vars:     Size  Location     Type
 45572 ;;		None
 45573 ;; Return value:  Size  Location     Type
 45574 ;;                  1    wreg      void 
 45575 ;; Registers used:
 45576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45577 ;; Tracked objects:
 45578 ;;		On entry : 0/0
 45579 ;;		On exit  : 0/0
 45580 ;;		Unchanged: 0/0
 45581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45586 ;;Total ram usage:        0 bytes
 45587 ;; Hardware stack levels used: 1
 45588 ;; Hardware stack levels required when called: 3
 45589 ;; This function calls:
 45590 ;;		i2_canFillRxFifo
 45591 ;;		i2_canTxError
 45592 ;;		i2_checkCANTimeout
 45593 ;;		i2_checkTxFifo
 45594 ;; This function is called by:
 45595 ;;		_highIsr
 45596 ;;		_lowIsr
 45597 ;; This function uses a non-reentrant model
 45598 ;;
 45599                           
 45600                           	psect	text210
 45601   00C2DA                     __ptext210:
 45602                           	callstack 0
 45603   00C2DA                     i2_canIsr:
 45604                           	callstack 2
 45605                           
 45606                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 45607                           
 45608                           ;incstack = 0
 45609   00C2DA  B077               	btfsc	119,0,c	;volatile
 45610                           
 45611                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 45612   00C2DC  ECA7  F039         	call	i2_canFillRxFifo	;wreg free
 45613                           
 45614                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 45615   00C2E0  BA77               	btfsc	119,5,c	;volatile
 45616                           
 45617                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 45618   00C2E2  EC31  F058         	call	i2_canTxError	;wreg free
 45619                           
 45620                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 45621   00C2E6  B877               	btfsc	119,4,c	;volatile
 45622                           
 45623                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 45624   00C2E8  EC9D  F02B         	call	i2_checkTxFifo	;wreg free
 45625                           
 45626                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 45627                           
 45628                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 45629   00C2EC  ECD9  F05A         	call	i2_checkCANTimeout	;wreg free
 45630   00C2F0  0012               	return		;funcret
 45631   00C2F2                     __end_ofi2_canIsr:
 45632                           	callstack 0
 45633                           
 45634 ;; *************** function i2_checkCANTimeout *****************
 45635 ;; Defined at:
 45636 ;;		line 701 in file "../../VLCBlib_PIC/can18_ecan.c"
 45637 ;; Parameters:    Size  Location     Type
 45638 ;;		None
 45639 ;; Auto vars:     Size  Location     Type
 45640 ;;		None
 45641 ;; Return value:  Size  Location     Type
 45642 ;;                  1    wreg      void 
 45643 ;; Registers used:
 45644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45645 ;; Tracked objects:
 45646 ;;		On entry : 0/0
 45647 ;;		On exit  : 0/0
 45648 ;;		Unchanged: 0/0
 45649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45654 ;;Total ram usage:        4 bytes
 45655 ;; Hardware stack levels used: 1
 45656 ;; Hardware stack levels required when called: 2
 45657 ;; This function calls:
 45658 ;;		i2_checkTxFifo
 45659 ;;		i2_tickGet
 45660 ;;		i2_updateModuleErrorStatus
 45661 ;; This function is called by:
 45662 ;;		i2_canIsr
 45663 ;; This function uses a non-reentrant model
 45664 ;;
 45665                           
 45666                           	psect	text211
 45667   00B5B2                     __ptext211:
 45668                           	callstack 0
 45669   00B5B2                     i2_checkCANTimeout:
 45670                           	callstack 2
 45671                           
 45672                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (canTransmitTimeout.val != 0) {
 45673                           
 45674                           ;incstack = 0
 45675   00B5B2  502F               	movf	_canTransmitTimeout^0,w,c
 45676   00B5B4  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 45677   00B5B6  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 45678   00B5B8  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 45679   00B5BA  B4D8               	btfsc	status,2,c
 45680   00B5BC  0012               	return	
 45681                           
 45682                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 45683   00B5BE  EC7D  F059         	call	i2_tickGet	;wreg free
 45684   00B5C2  502F               	movf	_canTransmitTimeout^0,w,c
 45685   00B5C4  5C01               	subwf	?i2_tickGet^0,w,c
 45686   00B5C6  6E16               	movwf	??i2_checkCANTimeout^0,c
 45687   00B5C8  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 45688   00B5CA  5802               	subwfb	(?i2_tickGet+1)^0,w,c
 45689   00B5CC  6E17               	movwf	(??i2_checkCANTimeout+1)^0,c
 45690   00B5CE  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 45691   00B5D0  5803               	subwfb	(?i2_tickGet+2)^0,w,c
 45692   00B5D2  6E18               	movwf	(??i2_checkCANTimeout+2)^0,c
 45693   00B5D4  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 45694   00B5D6  5804               	subwfb	(?i2_tickGet+3)^0,w,c
 45695   00B5D8  6E19               	movwf	(??i2_checkCANTimeout+3)^0,c
 45696   00B5DA  5019               	movf	(??i2_checkCANTimeout+3)^0,w,c
 45697   00B5DC  1018               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 45698   00B5DE  E106               	bnz	i2u1493_40
 45699   00B5E0  0E25               	movlw	37
 45700   00B5E2  5C16               	subwf	??i2_checkCANTimeout^0,w,c
 45701   00B5E4  0EF4               	movlw	244
 45702   00B5E6  5817               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 45703   00B5E8  A0D8               	btfss	status,0,c
 45704   00B5EA  0012               	return	
 45705   00B5EC                     i2u1493_40:
 45706                           
 45707                           ;../../VLCBlib_PIC/can18_ecan.c: 704:             canTransmitFailed = 1;
 45708   00B5EC  0E01               	movlw	1
 45709   00B5EE  0100               	movlb	0	; () banked
 45710   00B5F0  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45711                           
 45712                           ; BSR set to: 0
 45713                           ;../../VLCBlib_PIC/can18_ecan.c: 705:             TXB0CONbits.TXREQ = 0;
 45714   00B5F2  010F               	movlb	15	; () banked
 45715   00B5F4  9720               	bcf	32,3,b	;volatile
 45716                           
 45717                           ; BSR set to: 15
 45718                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             checkTxFifo();
 45719   00B5F6  EC9D  F02B         	call	i2_checkTxFifo	;wreg free
 45720                           
 45721                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             canDiagnostics[0x01].asUint++;
 45722   00B5FA  0101               	movlb	1	; () banked
 45723   00B5FC  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45724   00B5FE  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 45725                           
 45726                           ; BSR set to: 1
 45727                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             updateModuleErrorStatus();
 45728   00B600  ECBE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45729   00B604  0012               	return		;funcret
 45730   00B606                     __end_ofi2_checkCANTimeout:
 45731                           	callstack 0
 45732                           
 45733 ;; *************** function i2_canTxError *****************
 45734 ;; Defined at:
 45735 ;;		line 720 in file "../../VLCBlib_PIC/can18_ecan.c"
 45736 ;; Parameters:    Size  Location     Type
 45737 ;;		None
 45738 ;; Auto vars:     Size  Location     Type
 45739 ;;		None
 45740 ;; Return value:  Size  Location     Type
 45741 ;;                  1    wreg      void 
 45742 ;; Registers used:
 45743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45744 ;; Tracked objects:
 45745 ;;		On entry : 0/0
 45746 ;;		On exit  : 0/0
 45747 ;;		Unchanged: 0/0
 45748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45753 ;;Total ram usage:        0 bytes
 45754 ;; Hardware stack levels used: 1
 45755 ;; Hardware stack levels required when called: 2
 45756 ;; This function calls:
 45757 ;;		i2_checkTxFifo
 45758 ;;		i2_updateModuleErrorStatus
 45759 ;; This function is called by:
 45760 ;;		i2_canIsr
 45761 ;; This function uses a non-reentrant model
 45762 ;;
 45763                           
 45764                           	psect	text212
 45765   00B062                     __ptext212:
 45766                           	callstack 0
 45767   00B062                     i2_canTxError:
 45768                           	callstack 2
 45769                           
 45770                           ;../../VLCBlib_PIC/can18_ecan.c: 721:     if (TXB0CONbits.TXLARB) {
 45771                           
 45772                           ;incstack = 0
 45773   00B062  010F               	movlb	15	; () banked
 45774   00B064  AB20               	btfss	32,5,b	;volatile
 45775   00B066  D012               	goto	i2l15307
 45776                           
 45777                           ; BSR set to: 15
 45778                           ;../../VLCBlib_PIC/can18_ecan.c: 722:         canTransmitFailed = 1;
 45779   00B068  0E01               	movlw	1
 45780   00B06A  0100               	movlb	0	; () banked
 45781   00B06C  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45782                           
 45783                           ;../../VLCBlib_PIC/can18_ecan.c: 723:         canTransmitTimeout.val = 0;
 45784   00B06E  0E00               	movlw	0
 45785   00B070  6E2F               	movwf	_canTransmitTimeout^0,c
 45786   00B072  0E00               	movlw	0
 45787   00B074  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 45788   00B076  0E00               	movlw	0
 45789   00B078  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 45790   00B07A  0E00               	movlw	0
 45791   00B07C  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 45792                           
 45793                           ; BSR set to: 0
 45794                           ;../../VLCBlib_PIC/can18_ecan.c: 724:         TXB0CONbits.TXREQ = 0;
 45795   00B07E  010F               	movlb	15	; () banked
 45796   00B080  9720               	bcf	32,3,b	;volatile
 45797                           
 45798                           ; BSR set to: 15
 45799                           ;../../VLCBlib_PIC/can18_ecan.c: 726:         canDiagnostics[0x0B].asUint++;
 45800   00B082  0101               	movlb	1	; () banked
 45801   00B084  4B8D               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 45802   00B086  2B8E               	incf	(_canDiagnostics+23)& (0+255),f,b
 45803                           
 45804                           ; BSR set to: 1
 45805                           ;../../VLCBlib_PIC/can18_ecan.c: 727:         updateModuleErrorStatus();
 45806   00B088  ECBE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45807   00B08C                     i2l15307:
 45808                           
 45809                           ;../../VLCBlib_PIC/can18_ecan.c: 730:     if (TXB0CONbits.TXERR) {
 45810   00B08C  010F               	movlb	15	; () banked
 45811   00B08E  A920               	btfss	32,4,b	;volatile
 45812   00B090  D012               	goto	i2l15317
 45813                           
 45814                           ; BSR set to: 15
 45815                           ;../../VLCBlib_PIC/can18_ecan.c: 731:         canTransmitFailed = 1;
 45816   00B092  0E01               	movlw	1
 45817   00B094  0100               	movlb	0	; () banked
 45818   00B096  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45819                           
 45820                           ;../../VLCBlib_PIC/can18_ecan.c: 732:         canTransmitTimeout.val = 0;
 45821   00B098  0E00               	movlw	0
 45822   00B09A  6E2F               	movwf	_canTransmitTimeout^0,c
 45823   00B09C  0E00               	movlw	0
 45824   00B09E  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 45825   00B0A0  0E00               	movlw	0
 45826   00B0A2  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 45827   00B0A4  0E00               	movlw	0
 45828   00B0A6  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 45829                           
 45830                           ; BSR set to: 0
 45831                           ;../../VLCBlib_PIC/can18_ecan.c: 733:         TXB0CONbits.TXREQ = 0;
 45832   00B0A8  010F               	movlb	15	; () banked
 45833   00B0AA  9720               	bcf	32,3,b	;volatile
 45834                           
 45835                           ; BSR set to: 15
 45836                           ;../../VLCBlib_PIC/can18_ecan.c: 735:         canDiagnostics[0x01].asUint++;
 45837   00B0AC  0101               	movlb	1	; () banked
 45838   00B0AE  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45839   00B0B0  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 45840                           
 45841                           ; BSR set to: 1
 45842                           ;../../VLCBlib_PIC/can18_ecan.c: 736:         updateModuleErrorStatus();
 45843   00B0B2  ECBE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45844   00B0B6                     i2l15317:
 45845                           
 45846                           ;../../VLCBlib_PIC/can18_ecan.c: 739:     if (canTransmitFailed) {
 45847   00B0B6  0100               	movlb	0	; () banked
 45848   00B0B8  51C2               	movf	_canTransmitFailed& (0+255),w,b
 45849   00B0BA  A4D8               	btfss	status,2,c
 45850                           
 45851                           ; BSR set to: 0
 45852                           ;../../VLCBlib_PIC/can18_ecan.c: 740:         checkTxFifo();
 45853   00B0BC  EC9D  F02B         	call	i2_checkTxFifo	;wreg free
 45854                           
 45855                           ;../../VLCBlib_PIC/can18_ecan.c: 742:     PIR5bits.ERRIF = 0;
 45856   00B0C0  9A77               	bcf	119,5,c	;volatile
 45857   00B0C2  0012               	return		;funcret
 45858   00B0C4                     __end_ofi2_canTxError:
 45859                           	callstack 0
 45860                           
 45861 ;; *************** function i2_checkTxFifo *****************
 45862 ;; Defined at:
 45863 ;;		line 630 in file "../../VLCBlib_PIC/can18_ecan.c"
 45864 ;; Parameters:    Size  Location     Type
 45865 ;;		None
 45866 ;; Auto vars:     Size  Location     Type
 45867 ;;  mp              2   19[COMRAM] PTR struct Message
 45868 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45869 ;;  m               2   17[COMRAM] PTR struct Message
 45870 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45871 ;; Return value:  Size  Location     Type
 45872 ;;                  1    wreg      void 
 45873 ;; Registers used:
 45874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45875 ;; Tracked objects:
 45876 ;;		On entry : 0/0
 45877 ;;		On exit  : 0/0
 45878 ;;		Unchanged: 0/0
 45879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45881 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45882 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45883 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45884 ;;Total ram usage:        9 bytes
 45885 ;; Hardware stack levels used: 1
 45886 ;; Hardware stack levels required when called: 1
 45887 ;; This function calls:
 45888 ;;		i2_getNextWriteMessage
 45889 ;;		i2_isEvent
 45890 ;;		i2_pop
 45891 ;;		i2_tickGet
 45892 ;;		i2_updateModuleErrorStatus
 45893 ;; This function is called by:
 45894 ;;		i2_canIsr
 45895 ;;		i2_checkCANTimeout
 45896 ;;		i2_canTxError
 45897 ;; This function uses a non-reentrant model
 45898 ;;
 45899                           
 45900                           	psect	text213
 45901   00573A                     __ptext213:
 45902                           	callstack 0
 45903   00573A                     i2_checkTxFifo:
 45904                           	callstack 3
 45905                           
 45906                           ;../../VLCBlib_PIC/can18_ecan.c: 631:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          633:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 636:     PIR5bits.TXBnIF = 0;
 45907                           
 45908                           ;incstack = 0
 45909   00573A  9877               	bcf	119,4,c	;volatile
 45910                           
 45911                           ;../../VLCBlib_PIC/can18_ecan.c: 637:     if (!TXB0CONbits.TXREQ) {
 45912   00573C  010F               	movlb	15	; () banked
 45913   00573E  B720               	btfsc	32,3,b	;volatile
 45914   005740  D142               	goto	i2l2483
 45915                           
 45916                           ; BSR set to: 15
 45917                           ;../../VLCBlib_PIC/can18_ecan.c: 638:         mp = pop(&txQueue);
 45918   005742  0E48               	movlw	low _txQueue
 45919   005744  6E01               	movwf	i2pop@q^0,c
 45920   005746  EC4D  F04E         	call	i2_pop	;wreg free
 45921   00574A  C001  F014         	movff	?i2_pop,i2checkTxFifo@mp
 45922   00574E  C002  F015         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 45923                           
 45924                           ;../../VLCBlib_PIC/can18_ecan.c: 639:         if (mp != ((void*)0)) {
 45925   005752  5014               	movf	i2checkTxFifo@mp^0,w,c
 45926   005754  1015               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 45927   005756  B4D8               	btfsc	status,2,c
 45928   005758  D128               	goto	i2l13865
 45929                           
 45930                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 45931   00575A  EE20 F001          	lfsr	2,1
 45932   00575E  5014               	movf	i2checkTxFifo@mp^0,w,c
 45933   005760  26D9               	addwf	fsr2l,f,c
 45934   005762  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45935   005764  22DA               	addwfc	fsr2h,f,c
 45936   005766  50DF               	movf	indf2,w,c
 45937   005768  6E0D               	movwf	??i2_checkTxFifo^0,c
 45938   00576A  6A0E               	clrf	(??i2_checkTxFifo+1)^0,c
 45939   00576C  0E35               	movlw	low _priorities
 45940   00576E  240D               	addwf	??i2_checkTxFifo^0,w,c
 45941   005770  6EF6               	movwf	tblptrl,c
 45942   005772  0EED               	movlw	high _priorities
 45943   005774  200E               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 45944   005776  6EF7               	movwf	tblptrh,c
 45945   005778                     	if	1	;There are 3 active tblptr bytes
 45946   005778  6AF8               	clrf	tblptru,c
 45947   00577A  0E00               	movlw	low (__mediumconst shr (0+16))
 45948   00577C  22F8               	addwfc	tblptru,f,c
 45949   00577E                     	endif
 45950   00577E  0008               	tblrd		*
 45951   005780  50F5               	movf	tablat,w,c
 45952   005782  6E0F               	movwf	(??i2_checkTxFifo+2)^0,c
 45953   005784  6A10               	clrf	(??i2_checkTxFifo+3)^0,c
 45954   005786  0E87               	movlw	low _canPri
 45955   005788  240F               	addwf	(??i2_checkTxFifo+2)^0,w,c
 45956   00578A  6EF6               	movwf	tblptrl,c
 45957   00578C  0EEE               	movlw	high _canPri
 45958   00578E  2010               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 45959   005790  6EF7               	movwf	tblptrh,c
 45960   005792                     	if	1	;There are 3 active tblptr bytes
 45961   005792  6AF8               	clrf	tblptru,c
 45962   005794  0E00               	movlw	low (__mediumconst shr (0+16))
 45963   005796  22F8               	addwfc	tblptru,f,c
 45964   005798                     	endif
 45965   005798  0008               	tblrd		*
 45966   00579A  CFF5 F011          	movff	tablat,??i2_checkTxFifo+4
 45967   00579E  0100               	movlb	0	; () banked
 45968   0057A0  39C3               	swapf	_canId& (0+255),w,b
 45969   0057A2  46E8               	rlncf	wreg,f,c
 45970   0057A4  0B1F               	andlw	31
 45971   0057A6  0B0F               	andlw	15
 45972   0057A8  1011               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 45973   0057AA  010F               	movlb	15	; () banked
 45974   0057AC  6F21               	movwf	33,b	;volatile
 45975                           
 45976                           ; BSR set to: 15
 45977                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 45978   0057AE  C0C3  F00D         	movff	_canId,??i2_checkTxFifo
 45979   0057B2  0E07               	movlw	7
 45980   0057B4  160D               	andwf	??i2_checkTxFifo^0,f,c
 45981   0057B6  0E05               	movlw	5
 45982   0057B8  6E0E               	movwf	(??i2_checkTxFifo+1)^0,c
 45983   0057BA                     i2u1291_45:
 45984   0057BA  90D8               	bcf	status,0,c
 45985   0057BC  360D               	rlcf	??i2_checkTxFifo^0,f,c
 45986   0057BE  2E0E               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 45987   0057C0  D7FC               	goto	i2u1291_45
 45988   0057C2  500D               	movf	??i2_checkTxFifo^0,w,c
 45989   0057C4  6F22               	movwf	34,b	;volatile
 45990                           
 45991                           ; BSR set to: 15
 45992                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             TXB0D0 = mp->opc;
 45993   0057C6  EE20 F001          	lfsr	2,1
 45994   0057CA  5014               	movf	i2checkTxFifo@mp^0,w,c
 45995   0057CC  26D9               	addwf	fsr2l,f,c
 45996   0057CE  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45997   0057D0  22DA               	addwfc	fsr2h,f,c
 45998   0057D2  50DF               	movf	indf2,w,c
 45999   0057D4  6F26               	movwf	38,b	;volatile
 46000                           
 46001                           ; BSR set to: 15
 46002                           ;../../VLCBlib_PIC/can18_ecan.c: 644:             TXB0D1 = mp->bytes[0];
 46003   0057D6  EE20 F002          	lfsr	2,2
 46004   0057DA  5014               	movf	i2checkTxFifo@mp^0,w,c
 46005   0057DC  26D9               	addwf	fsr2l,f,c
 46006   0057DE  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46007   0057E0  22DA               	addwfc	fsr2h,f,c
 46008   0057E2  50DF               	movf	indf2,w,c
 46009   0057E4  6F27               	movwf	39,b	;volatile
 46010                           
 46011                           ; BSR set to: 15
 46012                           ;../../VLCBlib_PIC/can18_ecan.c: 645:             TXB0D2 = mp->bytes[1];
 46013   0057E6  EE20 F003          	lfsr	2,3
 46014   0057EA  5014               	movf	i2checkTxFifo@mp^0,w,c
 46015   0057EC  26D9               	addwf	fsr2l,f,c
 46016   0057EE  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46017   0057F0  22DA               	addwfc	fsr2h,f,c
 46018   0057F2  50DF               	movf	indf2,w,c
 46019   0057F4  6F28               	movwf	40,b	;volatile
 46020                           
 46021                           ; BSR set to: 15
 46022                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             TXB0D3 = mp->bytes[2];
 46023   0057F6  EE20 F004          	lfsr	2,4
 46024   0057FA  5014               	movf	i2checkTxFifo@mp^0,w,c
 46025   0057FC  26D9               	addwf	fsr2l,f,c
 46026   0057FE  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46027   005800  22DA               	addwfc	fsr2h,f,c
 46028   005802  50DF               	movf	indf2,w,c
 46029   005804  6F29               	movwf	41,b	;volatile
 46030                           
 46031                           ; BSR set to: 15
 46032                           ;../../VLCBlib_PIC/can18_ecan.c: 647:             TXB0D4 = mp->bytes[3];
 46033   005806  EE20 F005          	lfsr	2,5
 46034   00580A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46035   00580C  26D9               	addwf	fsr2l,f,c
 46036   00580E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46037   005810  22DA               	addwfc	fsr2h,f,c
 46038   005812  50DF               	movf	indf2,w,c
 46039   005814  6F2A               	movwf	42,b	;volatile
 46040                           
 46041                           ; BSR set to: 15
 46042                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             TXB0D5 = mp->bytes[4];
 46043   005816  EE20 F006          	lfsr	2,6
 46044   00581A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46045   00581C  26D9               	addwf	fsr2l,f,c
 46046   00581E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46047   005820  22DA               	addwfc	fsr2h,f,c
 46048   005822  50DF               	movf	indf2,w,c
 46049   005824  6F2B               	movwf	43,b	;volatile
 46050                           
 46051                           ; BSR set to: 15
 46052                           ;../../VLCBlib_PIC/can18_ecan.c: 649:             TXB0D6 = mp->bytes[5];
 46053   005826  EE20 F007          	lfsr	2,7
 46054   00582A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46055   00582C  26D9               	addwf	fsr2l,f,c
 46056   00582E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46057   005830  22DA               	addwfc	fsr2h,f,c
 46058   005832  50DF               	movf	indf2,w,c
 46059   005834  6F2C               	movwf	44,b	;volatile
 46060                           
 46061                           ; BSR set to: 15
 46062                           ;../../VLCBlib_PIC/can18_ecan.c: 650:             TXB0D7 = mp->bytes[6];
 46063   005836  EE20 F008          	lfsr	2,8
 46064   00583A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46065   00583C  26D9               	addwf	fsr2l,f,c
 46066   00583E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46067   005840  22DA               	addwfc	fsr2h,f,c
 46068   005842  50DF               	movf	indf2,w,c
 46069   005844  6F2D               	movwf	45,b	;volatile
 46070                           
 46071                           ; BSR set to: 15
 46072                           ;../../VLCBlib_PIC/can18_ecan.c: 651:             TXB0DLC = mp->len;
 46073   005846  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 46074   00584A  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 46075   00584E  50DF               	movf	indf2,w,c
 46076   005850  6F25               	movwf	37,b	;volatile
 46077                           
 46078                           ; BSR set to: 15
 46079                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             canTransmitTimeout.val = tickGet();
 46080   005852  EC7D  F059         	call	i2_tickGet	;wreg free
 46081   005856  C001  F02F         	movff	?i2_tickGet,_canTransmitTimeout
 46082   00585A  C002  F030         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 46083   00585E  C003  F031         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 46084   005862  C004  F032         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 46085                           
 46086                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             canTransmitFailed = 0;
 46087   005866  0E00               	movlw	0
 46088   005868  0100               	movlb	0	; () banked
 46089   00586A  6FC2               	movwf	_canTransmitFailed& (0+255),b
 46090                           
 46091                           ; BSR set to: 0
 46092                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             TXB0CONbits.TXREQ = 1;
 46093   00586C  010F               	movlb	15	; () banked
 46094   00586E  8720               	bsf	32,3,b	;volatile
 46095                           
 46096                           ; BSR set to: 15
 46097                           ;../../VLCBlib_PIC/can18_ecan.c: 656:             PIE5bits.TXBnIE = 1;
 46098   005870  8876               	bsf	118,4,c	;volatile
 46099                           
 46100                           ; BSR set to: 15
 46101                           ;../../VLCBlib_PIC/can18_ecan.c: 657:             canDiagnostics[0x05].asUint++;
 46102   005872  0101               	movlb	1	; () banked
 46103   005874  4B81               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 46104   005876  2B82               	incf	(_canDiagnostics+11)& (0+255),f,b
 46105                           
 46106                           ; BSR set to: 1
 46107                           ;../../VLCBlib_PIC/can18_ecan.c: 660:             if (isEvent(mp->opc)) {
 46108   005878  EE20 F001          	lfsr	2,1
 46109   00587C  5014               	movf	i2checkTxFifo@mp^0,w,c
 46110   00587E  26D9               	addwf	fsr2l,f,c
 46111   005880  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46112   005882  22DA               	addwfc	fsr2h,f,c
 46113   005884  50DF               	movf	indf2,w,c
 46114   005886  EC90  F060         	call	i2_isEvent
 46115   00588A  0900               	iorlw	0
 46116   00588C  B4D8               	btfsc	status,2,c
 46117   00588E  0012               	return	
 46118                           
 46119                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                 m = getNextWriteMessage(&rxQueue);
 46120   005890  0E4D               	movlw	low _rxQueue
 46121   005892  6E01               	movwf	i2getNextWriteMessage@q^0,c
 46122   005894  EC91  F046         	call	i2_getNextWriteMessage	;wreg free
 46123   005898  C001  F012         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 46124   00589C  C002  F013         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 46125                           
 46126                           ;../../VLCBlib_PIC/can18_ecan.c: 663:                 if (m == ((void*)0)) {
 46127   0058A0  5012               	movf	i2checkTxFifo@m^0,w,c
 46128   0058A2  1013               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 46129   0058A4  A4D8               	btfss	status,2,c
 46130   0058A6  D006               	goto	i2l13847
 46131                           
 46132                           ;../../VLCBlib_PIC/can18_ecan.c: 665:                     canDiagnostics[0x07].asUint++;
 46133   0058A8  0101               	movlb	1	; () banked
 46134   0058AA  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 46135   0058AC  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 46136                           
 46137                           ; BSR set to: 1
 46138                           ;../../VLCBlib_PIC/can18_ecan.c: 666:                     updateModuleErrorStatus();
 46139   0058AE  ECBE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 46140                           
 46141                           ;../../VLCBlib_PIC/can18_ecan.c: 668:                 } else {
 46142   0058B2  0012               	return	
 46143   0058B4                     i2l13847:
 46144                           
 46145                           ;../../VLCBlib_PIC/can18_ecan.c: 670:                     m->opc = mp->opc;
 46146   0058B4  EE20 F001          	lfsr	2,1
 46147   0058B8  5014               	movf	i2checkTxFifo@mp^0,w,c
 46148   0058BA  26D9               	addwf	fsr2l,f,c
 46149   0058BC  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46150   0058BE  22DA               	addwfc	fsr2h,f,c
 46151   0058C0  EE10 F001          	lfsr	1,1
 46152   0058C4  5012               	movf	i2checkTxFifo@m^0,w,c
 46153   0058C6  26E1               	addwf	fsr1l,f,c
 46154   0058C8  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46155   0058CA  22E2               	addwfc	fsr1h,f,c
 46156   0058CC  CFDF FFE7          	movff	indf2,indf1
 46157                           
 46158                           ;../../VLCBlib_PIC/can18_ecan.c: 671:                     m->len = mp->len;
 46159   0058D0  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 46160   0058D4  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 46161   0058D8  C012  FFE1         	movff	i2checkTxFifo@m,fsr1l
 46162   0058DC  C013  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 46163   0058E0  CFDF FFE7          	movff	indf2,indf1
 46164                           
 46165                           ;../../VLCBlib_PIC/can18_ecan.c: 672:                     m->bytes[0] = mp->bytes[0];
 46166   0058E4  EE20 F002          	lfsr	2,2
 46167   0058E8  5014               	movf	i2checkTxFifo@mp^0,w,c
 46168   0058EA  26D9               	addwf	fsr2l,f,c
 46169   0058EC  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46170   0058EE  22DA               	addwfc	fsr2h,f,c
 46171   0058F0  EE10 F002          	lfsr	1,2
 46172   0058F4  5012               	movf	i2checkTxFifo@m^0,w,c
 46173   0058F6  26E1               	addwf	fsr1l,f,c
 46174   0058F8  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46175   0058FA  22E2               	addwfc	fsr1h,f,c
 46176   0058FC  CFDF FFE7          	movff	indf2,indf1
 46177                           
 46178                           ;../../VLCBlib_PIC/can18_ecan.c: 673:                     m->bytes[1] = mp->bytes[1];
 46179   005900  EE20 F003          	lfsr	2,3
 46180   005904  5014               	movf	i2checkTxFifo@mp^0,w,c
 46181   005906  26D9               	addwf	fsr2l,f,c
 46182   005908  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46183   00590A  22DA               	addwfc	fsr2h,f,c
 46184   00590C  EE10 F003          	lfsr	1,3
 46185   005910  5012               	movf	i2checkTxFifo@m^0,w,c
 46186   005912  26E1               	addwf	fsr1l,f,c
 46187   005914  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46188   005916  22E2               	addwfc	fsr1h,f,c
 46189   005918  CFDF FFE7          	movff	indf2,indf1
 46190                           
 46191                           ;../../VLCBlib_PIC/can18_ecan.c: 674:                     m->bytes[2] = mp->bytes[2];
 46192   00591C  EE20 F004          	lfsr	2,4
 46193   005920  5014               	movf	i2checkTxFifo@mp^0,w,c
 46194   005922  26D9               	addwf	fsr2l,f,c
 46195   005924  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46196   005926  22DA               	addwfc	fsr2h,f,c
 46197   005928  EE10 F004          	lfsr	1,4
 46198   00592C  5012               	movf	i2checkTxFifo@m^0,w,c
 46199   00592E  26E1               	addwf	fsr1l,f,c
 46200   005930  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46201   005932  22E2               	addwfc	fsr1h,f,c
 46202   005934  CFDF FFE7          	movff	indf2,indf1
 46203                           
 46204                           ;../../VLCBlib_PIC/can18_ecan.c: 675:                     m->bytes[3] = mp->bytes[3];
 46205   005938  EE20 F005          	lfsr	2,5
 46206   00593C  5014               	movf	i2checkTxFifo@mp^0,w,c
 46207   00593E  26D9               	addwf	fsr2l,f,c
 46208   005940  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46209   005942  22DA               	addwfc	fsr2h,f,c
 46210   005944  EE10 F005          	lfsr	1,5
 46211   005948  5012               	movf	i2checkTxFifo@m^0,w,c
 46212   00594A  26E1               	addwf	fsr1l,f,c
 46213   00594C  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46214   00594E  22E2               	addwfc	fsr1h,f,c
 46215   005950  CFDF FFE7          	movff	indf2,indf1
 46216                           
 46217                           ;../../VLCBlib_PIC/can18_ecan.c: 676:                     m->bytes[4] = mp->bytes[4];
 46218   005954  EE20 F006          	lfsr	2,6
 46219   005958  5014               	movf	i2checkTxFifo@mp^0,w,c
 46220   00595A  26D9               	addwf	fsr2l,f,c
 46221   00595C  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46222   00595E  22DA               	addwfc	fsr2h,f,c
 46223   005960  EE10 F006          	lfsr	1,6
 46224   005964  5012               	movf	i2checkTxFifo@m^0,w,c
 46225   005966  26E1               	addwf	fsr1l,f,c
 46226   005968  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46227   00596A  22E2               	addwfc	fsr1h,f,c
 46228   00596C  CFDF FFE7          	movff	indf2,indf1
 46229                           
 46230                           ;../../VLCBlib_PIC/can18_ecan.c: 677:                     m->bytes[5] = mp->bytes[5];
 46231   005970  EE20 F007          	lfsr	2,7
 46232   005974  5014               	movf	i2checkTxFifo@mp^0,w,c
 46233   005976  26D9               	addwf	fsr2l,f,c
 46234   005978  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46235   00597A  22DA               	addwfc	fsr2h,f,c
 46236   00597C  EE10 F007          	lfsr	1,7
 46237   005980  5012               	movf	i2checkTxFifo@m^0,w,c
 46238   005982  26E1               	addwf	fsr1l,f,c
 46239   005984  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46240   005986  22E2               	addwfc	fsr1h,f,c
 46241   005988  CFDF FFE7          	movff	indf2,indf1
 46242                           
 46243                           ;../../VLCBlib_PIC/can18_ecan.c: 678:                     m->bytes[6] = mp->bytes[6];
 46244   00598C  EE20 F008          	lfsr	2,8
 46245   005990  5014               	movf	i2checkTxFifo@mp^0,w,c
 46246   005992  26D9               	addwf	fsr2l,f,c
 46247   005994  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46248   005996  22DA               	addwfc	fsr2h,f,c
 46249   005998  EE10 F008          	lfsr	1,8
 46250   00599C  5012               	movf	i2checkTxFifo@m^0,w,c
 46251   00599E  26E1               	addwf	fsr1l,f,c
 46252   0059A0  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46253   0059A2  22E2               	addwfc	fsr1h,f,c
 46254   0059A4  CFDF FFE7          	movff	indf2,indf1
 46255   0059A8  0012               	return	
 46256   0059AA                     i2l13865:
 46257                           
 46258                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             canTransmitTimeout.val = 0;
 46259   0059AA  0E00               	movlw	0
 46260   0059AC  6E2F               	movwf	_canTransmitTimeout^0,c
 46261   0059AE  0E00               	movlw	0
 46262   0059B0  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 46263   0059B2  0E00               	movlw	0
 46264   0059B4  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 46265   0059B6  0E00               	movlw	0
 46266   0059B8  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 46267                           
 46268                           ;../../VLCBlib_PIC/can18_ecan.c: 685:             TXB0CON = 0;
 46269   0059BA  0E00               	movlw	0
 46270   0059BC  010F               	movlb	15	; () banked
 46271   0059BE  6F20               	movwf	32,b	;volatile
 46272                           
 46273                           ; BSR set to: 15
 46274                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             PIR5bits.TXBnIF = 0;
 46275   0059C0  9877               	bcf	119,4,c	;volatile
 46276                           
 46277                           ; BSR set to: 15
 46278                           ;../../VLCBlib_PIC/can18_ecan.c: 687:             PIE5bits.TXBnIE = 0;
 46279   0059C2  9876               	bcf	118,4,c	;volatile
 46280   0059C4  0012               	return	
 46281   0059C6                     i2l2483:
 46282                           
 46283                           ; BSR set to: 15
 46284                           ;../../VLCBlib_PIC/can18_ecan.c: 691:         PIR5bits.TXBnIF = 0;
 46285   0059C6  9877               	bcf	119,4,c	;volatile
 46286                           
 46287                           ;../../VLCBlib_PIC/can18_ecan.c: 692:         PIE5bits.TXBnIE = 1;
 46288   0059C8  8876               	bsf	118,4,c	;volatile
 46289   0059CA  0012               	return		;funcret
 46290   0059CC                     __end_ofi2_checkTxFifo:
 46291                           	callstack 0
 46292                           
 46293 ;; *************** function i2_tickGet *****************
 46294 ;; Defined at:
 46295 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 46296 ;; Parameters:    Size  Location     Type
 46297 ;;		None
 46298 ;; Auto vars:     Size  Location     Type
 46299 ;;  currentTime     4    6[COMRAM] struct _TickValue
 46300 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 46301 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 46302 ;; Return value:  Size  Location     Type
 46303 ;;                  4    0[COMRAM] unsigned long 
 46304 ;; Registers used:
 46305 ;;		wreg, status,2, status,0
 46306 ;; Tracked objects:
 46307 ;;		On entry : 0/0
 46308 ;;		On exit  : 0/0
 46309 ;;		Unchanged: 0/0
 46310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46312 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46314 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46315 ;;Total ram usage:       10 bytes
 46316 ;; Hardware stack levels used: 1
 46317 ;; This function calls:
 46318 ;;		Nothing
 46319 ;; This function is called by:
 46320 ;;		i2_checkTxFifo
 46321 ;;		i2_checkCANTimeout
 46322 ;; This function uses a non-reentrant model
 46323 ;;
 46324                           
 46325                           	psect	text214
 46326   00B2FA                     __ptext214:
 46327                           	callstack 0
 46328   00B2FA                     i2_tickGet:
 46329                           	callstack 3
 46330                           
 46331                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 46332                           
 46333                           ;incstack = 0
 46334   00B2FA  0E00               	movlw	0
 46335   00B2FC  6E09               	movwf	(i2tickGet@currentTime+2)^0,c
 46336                           
 46337                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 46338   00B2FE  0E00               	movlw	0
 46339   00B300  6E0A               	movwf	(i2tickGet@currentTime+3)^0,c
 46340                           
 46341                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 46342   00B302  9AF2               	bcf	242,5,c	;volatile
 46343   00B304                     i2l12597:
 46344                           
 46345                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 46346   00B304  0E00               	movlw	0
 46347   00B306  B4F2               	btfsc	242,2,c	;volatile
 46348   00B308  0E01               	movlw	1
 46349   00B30A  6E06               	movwf	i2tickGet@IntFlag1^0,c
 46350                           
 46351                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 46352   00B30C  CFD6 F007          	movff	4054,i2tickGet@currentTime	;volatile
 46353                           
 46354                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 46355   00B310  CFD7 F008          	movff	4055,i2tickGet@currentTime+1	;volatile
 46356                           
 46357                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 46358   00B314  0E00               	movlw	0
 46359   00B316  B4F2               	btfsc	242,2,c	;volatile
 46360   00B318  0E01               	movlw	1
 46361   00B31A  6E05               	movwf	i2tickGet@IntFlag2^0,c
 46362                           
 46363                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 46364   00B31C  5005               	movf	i2tickGet@IntFlag2^0,w,c
 46365   00B31E  1806               	xorwf	i2tickGet@IntFlag1^0,w,c
 46366   00B320  A4D8               	btfss	status,2,c
 46367   00B322  D7F0               	goto	i2l12597
 46368                           
 46369                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 46370   00B324  5006               	movf	i2tickGet@IntFlag1^0,w,c
 46371   00B326  B4D8               	btfsc	status,2,c
 46372   00B328  D006               	goto	i2l12617
 46373                           
 46374                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 46375   00B32A  94F2               	bcf	242,2,c	;volatile
 46376                           
 46377                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 46378   00B32C  0100               	movlb	0	; () banked
 46379   00B32E  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 46380                           
 46381                           ; BSR set to: 0
 46382                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 46383   00B330  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 46384   00B332  B4D8               	btfsc	status,2,c
 46385                           
 46386                           ; BSR set to: 0
 46387                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 46388   00B334  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 46389   00B336                     i2l12617:
 46390                           
 46391                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 46392   00B336  0100               	movlb	0	; () banked
 46393   00B338  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 46394   00B33A  2609               	addwf	(i2tickGet@currentTime+2)^0,f,c
 46395                           
 46396                           ; BSR set to: 0
 46397                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 46398   00B33C  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 46399   00B33E  260A               	addwf	(i2tickGet@currentTime+3)^0,f,c
 46400                           
 46401                           ; BSR set to: 0
 46402                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 46403   00B340  8AF2               	bsf	242,5,c	;volatile
 46404                           
 46405                           ; BSR set to: 0
 46406                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 46407   00B342  C007  F001         	movff	i2tickGet@currentTime,?i2_tickGet
 46408   00B346  C008  F002         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 46409   00B34A  C009  F003         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 46410   00B34E  C00A  F004         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 46411                           
 46412                           ; BSR set to: 0
 46413   00B352  0012               	return		;funcret
 46414   00B354                     __end_ofi2_tickGet:
 46415                           	callstack 0
 46416                           
 46417 ;; *************** function i2_pop *****************
 46418 ;; Defined at:
 46419 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 46420 ;; Parameters:    Size  Location     Type
 46421 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46422 ;;		 -> txQueue(5), rxQueue(5), 
 46423 ;; Auto vars:     Size  Location     Type
 46424 ;;  ret             2    7[COMRAM] PTR struct Message
 46425 ;;		 -> txBuffers(72), rxBuffers(288), 
 46426 ;; Return value:  Size  Location     Type
 46427 ;;                  2    0[COMRAM] PTR struct Message
 46428 ;; Registers used:
 46429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46430 ;; Tracked objects:
 46431 ;;		On entry : 0/0
 46432 ;;		On exit  : 0/0
 46433 ;;		Unchanged: 0/0
 46434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46437 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46438 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46439 ;;Total ram usage:        9 bytes
 46440 ;; Hardware stack levels used: 1
 46441 ;; This function calls:
 46442 ;;		Nothing
 46443 ;; This function is called by:
 46444 ;;		i2_checkTxFifo
 46445 ;; This function uses a non-reentrant model
 46446 ;;
 46447                           
 46448                           	psect	text215
 46449   009C9A                     __ptext215:
 46450                           	callstack 0
 46451   009C9A                     i2_pop:
 46452                           	callstack 3
 46453                           
 46454                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 46455                           
 46456                           ; BSR set to: 0
 46457                           ;incstack = 0
 46458   009C9A  5001               	movf	i2pop@q^0,w,c
 46459   009C9C  6ED9               	movwf	fsr2l,c
 46460   009C9E  6ADA               	clrf	fsr2h,c
 46461   009CA0  0E02               	movlw	2
 46462   009CA2  26D9               	addwf	fsr2l,f,c
 46463   009CA4  5001               	movf	i2pop@q^0,w,c
 46464   009CA6  6EE1               	movwf	fsr1l,c
 46465   009CA8  6AE2               	clrf	fsr1h,c
 46466   009CAA  0E03               	movlw	3
 46467   009CAC  26E1               	addwf	fsr1l,f,c
 46468   009CAE  50DE               	movf	postinc2,w,c
 46469   009CB0  18E6               	xorwf	postinc1,w,c
 46470   009CB2  A4D8               	btfss	status,2,c
 46471   009CB4  D005               	goto	i2l12703
 46472                           
 46473                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 46474   009CB6  0E00               	movlw	0
 46475   009CB8  6E01               	movwf	?i2_pop^0,c
 46476   009CBA  0E00               	movlw	0
 46477   009CBC  6E02               	movwf	(?i2_pop+1)^0,c
 46478   009CBE  0012               	return	
 46479   009CC0                     i2l12703:
 46480                           
 46481                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 46482   009CC0  5001               	movf	i2pop@q^0,w,c
 46483   009CC2  6ED9               	movwf	fsr2l,c
 46484   009CC4  6ADA               	clrf	fsr2h,c
 46485   009CC6  0E02               	movlw	2
 46486   009CC8  26D9               	addwf	fsr2l,f,c
 46487   009CCA  50DF               	movf	indf2,w,c
 46488   009CCC  6E03               	movwf	??i2_pop^0,c
 46489   009CCE  5003               	movf	??i2_pop^0,w,c
 46490   009CD0  0D09               	mullw	9
 46491   009CD2  CFF3 F004          	movff	prodl,??i2_pop+1
 46492   009CD6  CFF4 F005          	movff	prodh,??i2_pop+2
 46493   009CDA  5001               	movf	i2pop@q^0,w,c
 46494   009CDC  6ED9               	movwf	fsr2l,c
 46495   009CDE  6ADA               	clrf	fsr2h,c
 46496   009CE0  CFDE F006          	movff	postinc2,??i2_pop+3
 46497   009CE4  CFDD F007          	movff	postdec2,??i2_pop+4
 46498   009CE8  5004               	movf	(??i2_pop+1)^0,w,c
 46499   009CEA  2406               	addwf	(??i2_pop+3)^0,w,c
 46500   009CEC  6E08               	movwf	i2pop@ret^0,c
 46501   009CEE  5005               	movf	(??i2_pop+2)^0,w,c
 46502   009CF0  2007               	addwfc	(??i2_pop+4)^0,w,c
 46503   009CF2  6E09               	movwf	(i2pop@ret+1)^0,c
 46504   009CF4  5001               	movf	i2pop@q^0,w,c
 46505   009CF6  6ED9               	movwf	fsr2l,c
 46506   009CF8  6ADA               	clrf	fsr2h,c
 46507   009CFA  0E02               	movlw	2
 46508   009CFC  26D9               	addwf	fsr2l,f,c
 46509   009CFE  2ADF               	incf	indf2,f,c
 46510                           
 46511                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 46512   009D00  5001               	movf	i2pop@q^0,w,c
 46513   009D02  6ED9               	movwf	fsr2l,c
 46514   009D04  6ADA               	clrf	fsr2h,c
 46515   009D06  0E04               	movlw	4
 46516   009D08  26D9               	addwf	fsr2l,f,c
 46517   009D0A  5001               	movf	i2pop@q^0,w,c
 46518   009D0C  6EE1               	movwf	fsr1l,c
 46519   009D0E  6AE2               	clrf	fsr1h,c
 46520   009D10  0E02               	movlw	2
 46521   009D12  26E1               	addwf	fsr1l,f,c
 46522   009D14  50DE               	movf	postinc2,w,c
 46523   009D16  5CE6               	subwf	postinc1,w,c
 46524   009D18  A0D8               	btfss	status,0,c
 46525   009D1A  D006               	goto	i2l12711
 46526   009D1C  5001               	movf	i2pop@q^0,w,c
 46527   009D1E  6ED9               	movwf	fsr2l,c
 46528   009D20  6ADA               	clrf	fsr2h,c
 46529   009D22  0E02               	movlw	2
 46530   009D24  26D9               	addwf	fsr2l,f,c
 46531   009D26  6ADF               	clrf	indf2,c
 46532   009D28                     i2l12711:
 46533                           
 46534                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 46535   009D28  C008  F001         	movff	i2pop@ret,?i2_pop
 46536   009D2C  C009  F002         	movff	i2pop@ret+1,?i2_pop+1
 46537   009D30  0012               	return		;funcret
 46538   009D32                     __end_ofi2_pop:
 46539                           	callstack 0
 46540                           
 46541 ;; *************** function i2_isEvent *****************
 46542 ;; Defined at:
 46543 ;;		line 1116 in file "../../VLCBlib_PIC/vlcb.c"
 46544 ;; Parameters:    Size  Location     Type
 46545 ;;  opc             1    wreg     unsigned char 
 46546 ;; Auto vars:     Size  Location     Type
 46547 ;;  opc             1    1[COMRAM] unsigned char 
 46548 ;; Return value:  Size  Location     Type
 46549 ;;                  1    wreg      enum E12760
 46550 ;; Registers used:
 46551 ;;		wreg, status,2, status,0
 46552 ;; Tracked objects:
 46553 ;;		On entry : 0/0
 46554 ;;		On exit  : 0/0
 46555 ;;		Unchanged: 0/0
 46556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46561 ;;Total ram usage:        2 bytes
 46562 ;; Hardware stack levels used: 1
 46563 ;; This function calls:
 46564 ;;		Nothing
 46565 ;; This function is called by:
 46566 ;;		i2_checkTxFifo
 46567 ;; This function uses a non-reentrant model
 46568 ;;
 46569                           
 46570                           	psect	text216
 46571   00C120                     __ptext216:
 46572                           	callstack 0
 46573   00C120                     i2_isEvent:
 46574                           	callstack 3
 46575                           
 46576                           ;incstack = 0
 46577                           ;i2isEvent@opc stored from wreg
 46578   00C120  6E02               	movwf	i2isEvent@opc^0,c
 46579                           
 46580                           ;../../VLCBlib_PIC/vlcb.c: 1117:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 46581   00C122  0E00               	movlw	0
 46582   00C124  6E01               	movwf	i2_isEvent$4861^0,c
 46583   00C126  5002               	movf	i2isEvent@opc^0,w,c
 46584   00C128  0B90               	andlw	144
 46585   00C12A  0A90               	xorlw	144
 46586   00C12C  A4D8               	btfss	status,2,c
 46587   00C12E  D008               	goto	i2l2011
 46588   00C130  5002               	movf	i2isEvent@opc^0,w,c
 46589   00C132  0AFF               	xorlw	255
 46590   00C134  0B06               	andlw	6
 46591   00C136  0A06               	xorlw	6
 46592   00C138  A4D8               	btfss	status,2,c
 46593   00C13A  D002               	goto	i2l2011
 46594   00C13C  0E01               	movlw	1
 46595   00C13E  6E01               	movwf	i2_isEvent$4861^0,c
 46596   00C140                     i2l2011:
 46597   00C140  5001               	movf	i2_isEvent$4861^0,w,c
 46598   00C142  0012               	return		;funcret
 46599   00C144                     __end_ofi2_isEvent:
 46600                           	callstack 0
 46601                           
 46602 ;; *************** function i2_canFillRxFifo *****************
 46603 ;; Defined at:
 46604 ;;		line 783 in file "../../VLCBlib_PIC/can18_ecan.c"
 46605 ;; Parameters:    Size  Location     Type
 46606 ;;		None
 46607 ;; Auto vars:     Size  Location     Type
 46608 ;;  ptr             2   14[COMRAM] PTR unsigned char 
 46609 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 46610 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 46611 ;;		 -> NULL(0), 
 46612 ;;  m               2   12[COMRAM] PTR struct Message
 46613 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46614 ;;  hiIndex         1    0        unsigned char 
 46615 ;; Return value:  Size  Location     Type
 46616 ;;                  1    wreg      void 
 46617 ;; Registers used:
 46618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46619 ;; Tracked objects:
 46620 ;;		On entry : 0/0
 46621 ;;		On exit  : 0/0
 46622 ;;		Unchanged: 0/0
 46623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46625 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46628 ;;Total ram usage:        4 bytes
 46629 ;; Hardware stack levels used: 1
 46630 ;; Hardware stack levels required when called: 1
 46631 ;; This function calls:
 46632 ;;		i2_getBufferPointer
 46633 ;;		i2_getNextWriteMessage
 46634 ;;		i2_updateModuleErrorStatus
 46635 ;; This function is called by:
 46636 ;;		i2_canIsr
 46637 ;; This function uses a non-reentrant model
 46638 ;;
 46639                           
 46640                           	psect	text217
 46641   00734E                     __ptext217:
 46642                           	callstack 0
 46643   00734E                     i2_canFillRxFifo:
 46644                           	callstack 3
 46645                           
 46646                           ;../../VLCBlib_PIC/can18_ecan.c: 784:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          785:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 786:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46647                           
 46648                           ;incstack = 0
 46649   00734E  D0AE               	goto	i2l15361
 46650   007350                     i2l15325:
 46651                           
 46652                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         ptr = getBufferPointer(CANCON & 0x07U);
 46653   007350  506F               	movf	111,w,c	;volatile
 46654   007352  0B07               	andlw	7
 46655   007354  ECA0  F050         	call	i2_getBufferPointer
 46656   007358  C001  F00F         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 46657   00735C  C002  F010         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 46658                           
 46659                           ;../../VLCBlib_PIC/can18_ecan.c: 790:         PIR5bits.RXBnIF = 0;
 46660   007360  9277               	bcf	119,1,c	;volatile
 46661                           
 46662                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         if (COMSTATbits.RXB1OVFL) {
 46663   007362  BC71               	btfsc	113,6,c	;volatile
 46664                           
 46665                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             COMSTATbits.RXB1OVFL = 0;
 46666   007364  9C71               	bcf	113,6,c	;volatile
 46667                           
 46668                           ;../../VLCBlib_PIC/can18_ecan.c: 794:         if ((ptr[2] & 0x08) == 0) {
 46669   007366  EE20 F002          	lfsr	2,2
 46670   00736A  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46671   00736C  26D9               	addwf	fsr2l,f,c
 46672   00736E  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46673   007370  22DA               	addwfc	fsr2h,f,c
 46674   007372  B6DF               	btfsc	indf2,3,c
 46675   007374  D092               	goto	i2l15353
 46676                           
 46677                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             m = getNextWriteMessage(&rxQueue);
 46678   007376  0E4D               	movlw	low _rxQueue
 46679   007378  6E01               	movwf	i2getNextWriteMessage@q^0,c
 46680   00737A  EC91  F046         	call	i2_getNextWriteMessage	;wreg free
 46681   00737E  C001  F00D         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 46682   007382  C002  F00E         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 46683                           
 46684                           ;../../VLCBlib_PIC/can18_ecan.c: 798:             if (m == ((void*)0)) {
 46685   007386  500D               	movf	i2canFillRxFifo@m^0,w,c
 46686   007388  100E               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 46687   00738A  A4D8               	btfss	status,2,c
 46688   00738C  D009               	goto	i2l15349
 46689                           
 46690                           ;../../VLCBlib_PIC/can18_ecan.c: 800:                 canDiagnostics[0x07].asUint++;
 46691   00738E  0101               	movlb	1	; () banked
 46692   007390  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 46693   007392  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 46694                           
 46695                           ; BSR set to: 1
 46696                           ;../../VLCBlib_PIC/can18_ecan.c: 801:                 updateModuleErrorStatus();
 46697   007394  ECBE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 46698                           
 46699                           ;../../VLCBlib_PIC/can18_ecan.c: 804:                 if (PIR5bits.IRXIF) {
 46700   007398  AE77               	btfss	119,7,c	;volatile
 46701   00739A  0012               	return	
 46702                           
 46703                           ;../../VLCBlib_PIC/can18_ecan.c: 805:                     PIR5bits.IRXIF = 0;
 46704   00739C  9E77               	bcf	119,7,c	;volatile
 46705   00739E  0012               	return	
 46706   0073A0                     i2l15349:
 46707                           
 46708                           ;../../VLCBlib_PIC/can18_ecan.c: 810:                 m->opc = ptr[6];
 46709   0073A0  EE20 F006          	lfsr	2,6
 46710   0073A4  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46711   0073A6  26D9               	addwf	fsr2l,f,c
 46712   0073A8  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46713   0073AA  22DA               	addwfc	fsr2h,f,c
 46714   0073AC  EE10 F001          	lfsr	1,1
 46715   0073B0  500D               	movf	i2canFillRxFifo@m^0,w,c
 46716   0073B2  26E1               	addwf	fsr1l,f,c
 46717   0073B4  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46718   0073B6  22E2               	addwfc	fsr1h,f,c
 46719   0073B8  CFDF FFE7          	movff	indf2,indf1
 46720                           
 46721                           ;../../VLCBlib_PIC/can18_ecan.c: 811:                 m->bytes[0] = ptr[7];
 46722   0073BC  EE20 F007          	lfsr	2,7
 46723   0073C0  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46724   0073C2  26D9               	addwf	fsr2l,f,c
 46725   0073C4  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46726   0073C6  22DA               	addwfc	fsr2h,f,c
 46727   0073C8  EE10 F002          	lfsr	1,2
 46728   0073CC  500D               	movf	i2canFillRxFifo@m^0,w,c
 46729   0073CE  26E1               	addwf	fsr1l,f,c
 46730   0073D0  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46731   0073D2  22E2               	addwfc	fsr1h,f,c
 46732   0073D4  CFDF FFE7          	movff	indf2,indf1
 46733                           
 46734                           ;../../VLCBlib_PIC/can18_ecan.c: 812:                 m->bytes[1] = ptr[8];
 46735   0073D8  EE20 F008          	lfsr	2,8
 46736   0073DC  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46737   0073DE  26D9               	addwf	fsr2l,f,c
 46738   0073E0  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46739   0073E2  22DA               	addwfc	fsr2h,f,c
 46740   0073E4  EE10 F003          	lfsr	1,3
 46741   0073E8  500D               	movf	i2canFillRxFifo@m^0,w,c
 46742   0073EA  26E1               	addwf	fsr1l,f,c
 46743   0073EC  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46744   0073EE  22E2               	addwfc	fsr1h,f,c
 46745   0073F0  CFDF FFE7          	movff	indf2,indf1
 46746                           
 46747                           ;../../VLCBlib_PIC/can18_ecan.c: 813:                 m->bytes[2] = ptr[9];
 46748   0073F4  EE20 F009          	lfsr	2,9
 46749   0073F8  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46750   0073FA  26D9               	addwf	fsr2l,f,c
 46751   0073FC  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46752   0073FE  22DA               	addwfc	fsr2h,f,c
 46753   007400  EE10 F004          	lfsr	1,4
 46754   007404  500D               	movf	i2canFillRxFifo@m^0,w,c
 46755   007406  26E1               	addwf	fsr1l,f,c
 46756   007408  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46757   00740A  22E2               	addwfc	fsr1h,f,c
 46758   00740C  CFDF FFE7          	movff	indf2,indf1
 46759                           
 46760                           ;../../VLCBlib_PIC/can18_ecan.c: 814:                 m->bytes[3] = ptr[10];
 46761   007410  EE20 F00A          	lfsr	2,10
 46762   007414  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46763   007416  26D9               	addwf	fsr2l,f,c
 46764   007418  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46765   00741A  22DA               	addwfc	fsr2h,f,c
 46766   00741C  EE10 F005          	lfsr	1,5
 46767   007420  500D               	movf	i2canFillRxFifo@m^0,w,c
 46768   007422  26E1               	addwf	fsr1l,f,c
 46769   007424  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46770   007426  22E2               	addwfc	fsr1h,f,c
 46771   007428  CFDF FFE7          	movff	indf2,indf1
 46772                           
 46773                           ;../../VLCBlib_PIC/can18_ecan.c: 815:                 m->bytes[4] = ptr[11];
 46774   00742C  EE20 F00B          	lfsr	2,11
 46775   007430  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46776   007432  26D9               	addwf	fsr2l,f,c
 46777   007434  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46778   007436  22DA               	addwfc	fsr2h,f,c
 46779   007438  EE10 F006          	lfsr	1,6
 46780   00743C  500D               	movf	i2canFillRxFifo@m^0,w,c
 46781   00743E  26E1               	addwf	fsr1l,f,c
 46782   007440  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46783   007442  22E2               	addwfc	fsr1h,f,c
 46784   007444  CFDF FFE7          	movff	indf2,indf1
 46785                           
 46786                           ;../../VLCBlib_PIC/can18_ecan.c: 816:                 m->bytes[5] = ptr[12];
 46787   007448  EE20 F00C          	lfsr	2,12
 46788   00744C  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46789   00744E  26D9               	addwf	fsr2l,f,c
 46790   007450  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46791   007452  22DA               	addwfc	fsr2h,f,c
 46792   007454  EE10 F007          	lfsr	1,7
 46793   007458  500D               	movf	i2canFillRxFifo@m^0,w,c
 46794   00745A  26E1               	addwf	fsr1l,f,c
 46795   00745C  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46796   00745E  22E2               	addwfc	fsr1h,f,c
 46797   007460  CFDF FFE7          	movff	indf2,indf1
 46798                           
 46799                           ;../../VLCBlib_PIC/can18_ecan.c: 817:                 m->bytes[6] = ptr[13];
 46800   007464  EE20 F00D          	lfsr	2,13
 46801   007468  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46802   00746A  26D9               	addwf	fsr2l,f,c
 46803   00746C  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46804   00746E  22DA               	addwfc	fsr2h,f,c
 46805   007470  EE10 F008          	lfsr	1,8
 46806   007474  500D               	movf	i2canFillRxFifo@m^0,w,c
 46807   007476  26E1               	addwf	fsr1l,f,c
 46808   007478  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46809   00747A  22E2               	addwfc	fsr1h,f,c
 46810   00747C  CFDF FFE7          	movff	indf2,indf1
 46811                           
 46812                           ;../../VLCBlib_PIC/can18_ecan.c: 818:                 m->len = ptr[5]&0xF;
 46813   007480  EE20 F005          	lfsr	2,5
 46814   007484  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46815   007486  26D9               	addwf	fsr2l,f,c
 46816   007488  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46817   00748A  22DA               	addwfc	fsr2h,f,c
 46818   00748C  50DF               	movf	indf2,w,c
 46819   00748E  0B0F               	andlw	15
 46820   007490  C00D  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 46821   007494  C00E  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 46822   007498  6EDF               	movwf	indf2,c
 46823   00749A                     i2l15353:
 46824                           
 46825                           ;../../VLCBlib_PIC/can18_ecan.c: 822:         if (PIR5bits.IRXIF) {
 46826   00749A  BE77               	btfsc	119,7,c	;volatile
 46827                           
 46828                           ;../../VLCBlib_PIC/can18_ecan.c: 823:             PIR5bits.IRXIF = 0;
 46829   00749C  9E77               	bcf	119,7,c	;volatile
 46830                           
 46831                           ;../../VLCBlib_PIC/can18_ecan.c: 826:         ptr[0] &= 0x7f;
 46832   00749E  C00F  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 46833   0074A2  C010  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 46834   0074A6  0E7F               	movlw	127
 46835   0074A8  16DF               	andwf	indf2,f,c
 46836                           
 46837                           ;../../VLCBlib_PIC/can18_ecan.c: 827:         PIR5bits.FIFOWMIF = 0;
 46838   0074AA  9077               	bcf	119,0,c	;volatile
 46839   0074AC                     i2l15361:
 46840                           
 46841                           ;../../VLCBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46842   0074AC  AE71               	btfss	113,7,c	;volatile
 46843   0074AE  0012               	return	
 46844   0074B0  D74F               	goto	i2l15325
 46845   0074B2                     __end_ofi2_canFillRxFifo:
 46846                           	callstack 0
 46847                           
 46848 ;; *************** function i2_updateModuleErrorStatus *****************
 46849 ;; Defined at:
 46850 ;;		line 627 in file "../../VLCBlib_PIC/mns.c"
 46851 ;; Parameters:    Size  Location     Type
 46852 ;;		None
 46853 ;; Auto vars:     Size  Location     Type
 46854 ;;		None
 46855 ;; Return value:  Size  Location     Type
 46856 ;;                  1    wreg      void 
 46857 ;; Registers used:
 46858 ;;		wreg, status,2, status,0
 46859 ;; Tracked objects:
 46860 ;;		On entry : 0/0
 46861 ;;		On exit  : 0/0
 46862 ;;		Unchanged: 0/0
 46863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46868 ;;Total ram usage:        0 bytes
 46869 ;; Hardware stack levels used: 1
 46870 ;; This function calls:
 46871 ;;		Nothing
 46872 ;; This function is called by:
 46873 ;;		i2_checkTxFifo
 46874 ;;		i2_checkCANTimeout
 46875 ;;		i2_canTxError
 46876 ;;		i2_canFillRxFifo
 46877 ;; This function uses a non-reentrant model
 46878 ;;
 46879                           
 46880                           	psect	text218
 46881   00C37C                     __ptext218:
 46882                           	callstack 0
 46883   00C37C                     i2_updateModuleErrorStatus:
 46884                           	callstack 3
 46885                           
 46886                           ;../../VLCBlib_PIC/mns.c: 628:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 46887                           
 46888                           ;incstack = 0
 46889   00C37C  0101               	movlb	1	; () banked
 46890   00C37E  2997               	incf	_mnsDiagnostics& (0+255),w,b
 46891   00C380  B4D8               	btfsc	status,2,c
 46892   00C382  0012               	return	
 46893                           
 46894                           ; BSR set to: 1
 46895                           ;../../VLCBlib_PIC/mns.c: 629:         mnsDiagnostics[0x00].asBytes.lo++;
 46896   00C384  2B97               	incf	_mnsDiagnostics& (0+255),f,b
 46897                           
 46898                           ; BSR set to: 1
 46899   00C386  0012               	return		;funcret
 46900   00C388                     __end_ofi2_updateModuleErrorStatus:
 46901                           	callstack 0
 46902                           
 46903 ;; *************** function i2_getNextWriteMessage *****************
 46904 ;; Defined at:
 46905 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 46906 ;; Parameters:    Size  Location     Type
 46907 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46908 ;;		 -> rxQueue(5), 
 46909 ;; Auto vars:     Size  Location     Type
 46910 ;;  wr              1   11[COMRAM] unsigned char 
 46911 ;; Return value:  Size  Location     Type
 46912 ;;                  2    0[COMRAM] PTR struct Message
 46913 ;; Registers used:
 46914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46915 ;; Tracked objects:
 46916 ;;		On entry : 0/0
 46917 ;;		On exit  : 0/0
 46918 ;;		Unchanged: 0/0
 46919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46922 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46923 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46924 ;;Total ram usage:       12 bytes
 46925 ;; Hardware stack levels used: 1
 46926 ;; This function calls:
 46927 ;;		Nothing
 46928 ;; This function is called by:
 46929 ;;		i2_checkTxFifo
 46930 ;;		i2_canFillRxFifo
 46931 ;; This function uses a non-reentrant model
 46932 ;;
 46933                           
 46934                           	psect	text219
 46935   008D22                     __ptext219:
 46936                           	callstack 0
 46937   008D22                     i2_getNextWriteMessage:
 46938                           	callstack 3
 46939                           
 46940                           ; BSR set to: 1
 46941                           ;incstack = 0
 46942   008D22  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46943   008D24  6ED9               	movwf	fsr2l,c
 46944   008D26  6ADA               	clrf	fsr2h,c
 46945   008D28  0E02               	movlw	2
 46946   008D2A  26D9               	addwf	fsr2l,f,c
 46947   008D2C  50DF               	movf	indf2,w,c
 46948   008D2E  6E03               	movwf	??i2_getNextWriteMessage^0,c
 46949   008D30  6A04               	clrf	(??i2_getNextWriteMessage+1)^0,c
 46950   008D32  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46951   008D34  6ED9               	movwf	fsr2l,c
 46952   008D36  6ADA               	clrf	fsr2h,c
 46953   008D38  0E04               	movlw	4
 46954   008D3A  26D9               	addwf	fsr2l,f,c
 46955   008D3C  50DF               	movf	indf2,w,c
 46956   008D3E  6E05               	movwf	(??i2_getNextWriteMessage+2)^0,c
 46957   008D40  0EFF               	movlw	255
 46958   008D42  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46959   008D44  6E06               	movwf	(??i2_getNextWriteMessage+3)^0,c
 46960   008D46  6A07               	clrf	(??i2_getNextWriteMessage+4)^0,c
 46961   008D48  0EFF               	movlw	255
 46962   008D4A  2207               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 46963   008D4C  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46964   008D4E  6ED9               	movwf	fsr2l,c
 46965   008D50  6ADA               	clrf	fsr2h,c
 46966   008D52  0E03               	movlw	3
 46967   008D54  26D9               	addwf	fsr2l,f,c
 46968   008D56  50DF               	movf	indf2,w,c
 46969   008D58  6E08               	movwf	(??i2_getNextWriteMessage+5)^0,c
 46970   008D5A  6A09               	clrf	(??i2_getNextWriteMessage+6)^0,c
 46971   008D5C  0E01               	movlw	1
 46972   008D5E  2608               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 46973   008D60  0E00               	movlw	0
 46974   008D62  2209               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 46975   008D64  5006               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 46976   008D66  1408               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 46977   008D68  6E0A               	movwf	(??i2_getNextWriteMessage+7)^0,c
 46978   008D6A  5007               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 46979   008D6C  1409               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 46980   008D6E  6E0B               	movwf	(??i2_getNextWriteMessage+8)^0,c
 46981   008D70  5003               	movf	??i2_getNextWriteMessage^0,w,c
 46982   008D72  180A               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 46983   008D74  E109               	bnz	i2l12669
 46984   008D76  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46985   008D78  180B               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 46986   008D7A  A4D8               	btfss	status,2,c
 46987   008D7C  D005               	goto	i2l12669
 46988   008D7E  0E00               	movlw	0
 46989   008D80  6E01               	movwf	?i2_getNextWriteMessage^0,c
 46990   008D82  0E00               	movlw	0
 46991   008D84  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46992   008D86  0012               	return	
 46993   008D88                     i2l12669:
 46994   008D88  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46995   008D8A  6ED9               	movwf	fsr2l,c
 46996   008D8C  6ADA               	clrf	fsr2h,c
 46997   008D8E  0E03               	movlw	3
 46998   008D90  26D9               	addwf	fsr2l,f,c
 46999   008D92  50DF               	movf	indf2,w,c
 47000   008D94  6E0C               	movwf	i2getNextWriteMessage@wr^0,c
 47001   008D96  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47002   008D98  6ED9               	movwf	fsr2l,c
 47003   008D9A  6ADA               	clrf	fsr2h,c
 47004   008D9C  0E03               	movlw	3
 47005   008D9E  26D9               	addwf	fsr2l,f,c
 47006   008DA0  2ADF               	incf	indf2,f,c
 47007   008DA2  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47008   008DA4  6ED9               	movwf	fsr2l,c
 47009   008DA6  6ADA               	clrf	fsr2h,c
 47010   008DA8  0E04               	movlw	4
 47011   008DAA  26D9               	addwf	fsr2l,f,c
 47012   008DAC  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47013   008DAE  6EE1               	movwf	fsr1l,c
 47014   008DB0  6AE2               	clrf	fsr1h,c
 47015   008DB2  0E03               	movlw	3
 47016   008DB4  26E1               	addwf	fsr1l,f,c
 47017   008DB6  50DE               	movf	postinc2,w,c
 47018   008DB8  5CE6               	subwf	postinc1,w,c
 47019   008DBA  A0D8               	btfss	status,0,c
 47020   008DBC  D006               	goto	i2l12675
 47021   008DBE  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47022   008DC0  6ED9               	movwf	fsr2l,c
 47023   008DC2  6ADA               	clrf	fsr2h,c
 47024   008DC4  0E03               	movlw	3
 47025   008DC6  26D9               	addwf	fsr2l,f,c
 47026   008DC8  6ADF               	clrf	indf2,c
 47027   008DCA                     i2l12675:
 47028   008DCA  500C               	movf	i2getNextWriteMessage@wr^0,w,c
 47029   008DCC  0D09               	mullw	9
 47030   008DCE  CFF3 F003          	movff	prodl,??i2_getNextWriteMessage
 47031   008DD2  CFF4 F004          	movff	prodh,??i2_getNextWriteMessage+1
 47032   008DD6  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47033   008DD8  6ED9               	movwf	fsr2l,c
 47034   008DDA  6ADA               	clrf	fsr2h,c
 47035   008DDC  CFDE F005          	movff	postinc2,??i2_getNextWriteMessage+2
 47036   008DE0  CFDD F006          	movff	postdec2,??i2_getNextWriteMessage+3
 47037   008DE4  5003               	movf	??i2_getNextWriteMessage^0,w,c
 47038   008DE6  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 47039   008DE8  6E01               	movwf	?i2_getNextWriteMessage^0,c
 47040   008DEA  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 47041   008DEC  2006               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 47042   008DEE  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 47043   008DF0  0012               	return		;funcret
 47044   008DF2                     __end_ofi2_getNextWriteMessage:
 47045                           	callstack 0
 47046                           
 47047 ;; *************** function i2_getBufferPointer *****************
 47048 ;; Defined at:
 47049 ;;		line 602 in file "../../VLCBlib_PIC/can18_ecan.c"
 47050 ;; Parameters:    Size  Location     Type
 47051 ;;  b               1    wreg     unsigned char 
 47052 ;; Auto vars:     Size  Location     Type
 47053 ;;  b               1    2[COMRAM] unsigned char 
 47054 ;; Return value:  Size  Location     Type
 47055 ;;                  2    0[COMRAM] PTR unsigned char 
 47056 ;; Registers used:
 47057 ;;		wreg, status,2, status,0
 47058 ;; Tracked objects:
 47059 ;;		On entry : 0/0
 47060 ;;		On exit  : 0/0
 47061 ;;		Unchanged: 0/0
 47062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47066 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47067 ;;Total ram usage:        3 bytes
 47068 ;; Hardware stack levels used: 1
 47069 ;; This function calls:
 47070 ;;		Nothing
 47071 ;; This function is called by:
 47072 ;;		i2_canFillRxFifo
 47073 ;; This function uses a non-reentrant model
 47074 ;;
 47075                           
 47076                           	psect	text220
 47077   00A140                     __ptext220:
 47078                           	callstack 0
 47079   00A140                     i2_getBufferPointer:
 47080                           	callstack 3
 47081                           
 47082                           ;incstack = 0
 47083                           ;i2getBufferPointer@b stored from wreg
 47084   00A140  6E03               	movwf	i2getBufferPointer@b^0,c
 47085                           
 47086                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     switch (b) {
 47087   00A142  D02D               	goto	i2l13797
 47088   00A144                     i2l13759:
 47089                           
 47090                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & RXB0CON;
 47091   00A144  0E60               	movlw	96
 47092   00A146  6E01               	movwf	?i2_getBufferPointer^0,c
 47093   00A148  0E0F               	movlw	15
 47094   00A14A  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47095   00A14C  0012               	return	
 47096   00A14E                     i2l13763:
 47097                           
 47098                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return (uint8_t*) & RXB1CON;
 47099   00A14E  0E30               	movlw	48
 47100   00A150  6E01               	movwf	?i2_getBufferPointer^0,c
 47101   00A152  0E0F               	movlw	15
 47102   00A154  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47103   00A156  0012               	return	
 47104   00A158                     i2l13767:
 47105                           
 47106                           ;../../VLCBlib_PIC/can18_ecan.c: 609:             return (uint8_t*) & B0CON;
 47107   00A158  0E80               	movlw	128
 47108   00A15A  6E01               	movwf	?i2_getBufferPointer^0,c
 47109   00A15C  0E0E               	movlw	14
 47110   00A15E  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47111   00A160  0012               	return	
 47112   00A162                     i2l13771:
 47113                           
 47114                           ;../../VLCBlib_PIC/can18_ecan.c: 611:             return (uint8_t*) & B1CON;
 47115   00A162  0E90               	movlw	144
 47116   00A164  6E01               	movwf	?i2_getBufferPointer^0,c
 47117   00A166  0E0E               	movlw	14
 47118   00A168  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47119   00A16A  0012               	return	
 47120   00A16C                     i2l13775:
 47121                           
 47122                           ;../../VLCBlib_PIC/can18_ecan.c: 613:             return (uint8_t*) & B2CON;
 47123   00A16C  0EA0               	movlw	160
 47124   00A16E  6E01               	movwf	?i2_getBufferPointer^0,c
 47125   00A170  0E0E               	movlw	14
 47126   00A172  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47127   00A174  0012               	return	
 47128   00A176                     i2l13779:
 47129                           
 47130                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             return (uint8_t*) & B3CON;
 47131   00A176  0EB0               	movlw	176
 47132   00A178  6E01               	movwf	?i2_getBufferPointer^0,c
 47133   00A17A  0E0E               	movlw	14
 47134   00A17C  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47135   00A17E  0012               	return	
 47136   00A180                     i2l13783:
 47137                           
 47138                           ;../../VLCBlib_PIC/can18_ecan.c: 617:             return (uint8_t*) & B4CON;
 47139   00A180  0EC0               	movlw	192
 47140   00A182  6E01               	movwf	?i2_getBufferPointer^0,c
 47141   00A184  0E0E               	movlw	14
 47142   00A186  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47143   00A188  0012               	return	
 47144   00A18A                     i2l13787:
 47145                           
 47146                           ;../../VLCBlib_PIC/can18_ecan.c: 619:             return (uint8_t*) & B5CON;
 47147   00A18A  0ED0               	movlw	208
 47148   00A18C  6E01               	movwf	?i2_getBufferPointer^0,c
 47149   00A18E  0E0E               	movlw	14
 47150   00A190  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47151   00A192  0012               	return	
 47152   00A194                     i2l13791:
 47153                           
 47154                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             return ((void*)0);
 47155   00A194  0E00               	movlw	0
 47156   00A196  6E01               	movwf	?i2_getBufferPointer^0,c
 47157   00A198  0E00               	movlw	0
 47158   00A19A  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47159   00A19C  0012               	return	
 47160   00A19E                     i2l13797:
 47161   00A19E  5003               	movf	i2getBufferPointer@b^0,w,c
 47162                           
 47163                           ; Switch size 1, requested type "simple"
 47164                           ; Number of cases is 8, Range of values is 0 to 7
 47165                           ; switch strategies available:
 47166                           ; Name         Instructions Cycles
 47167                           ; simple_byte           25    13 (average)
 47168                           ;	Chosen strategy is simple_byte
 47169   00A1A0  0A00               	xorlw	0	; case 0
 47170   00A1A2  B4D8               	btfsc	status,2,c
 47171   00A1A4  D7CF               	goto	i2l13759
 47172   00A1A6  0A01               	xorlw	1	; case 1
 47173   00A1A8  B4D8               	btfsc	status,2,c
 47174   00A1AA  D7D1               	goto	i2l13763
 47175   00A1AC  0A03               	xorlw	3	; case 2
 47176   00A1AE  B4D8               	btfsc	status,2,c
 47177   00A1B0  D7D3               	goto	i2l13767
 47178   00A1B2  0A01               	xorlw	1	; case 3
 47179   00A1B4  B4D8               	btfsc	status,2,c
 47180   00A1B6  D7D5               	goto	i2l13771
 47181   00A1B8  0A07               	xorlw	7	; case 4
 47182   00A1BA  B4D8               	btfsc	status,2,c
 47183   00A1BC  D7D7               	goto	i2l13775
 47184   00A1BE  0A01               	xorlw	1	; case 5
 47185   00A1C0  B4D8               	btfsc	status,2,c
 47186   00A1C2  D7D9               	goto	i2l13779
 47187   00A1C4  0A03               	xorlw	3	; case 6
 47188   00A1C6  B4D8               	btfsc	status,2,c
 47189   00A1C8  D7DB               	goto	i2l13783
 47190   00A1CA  0A01               	xorlw	1	; case 7
 47191   00A1CC  B4D8               	btfsc	status,2,c
 47192   00A1CE  D7DD               	goto	i2l13787
 47193   00A1D0  D7E1               	goto	i2l13791
 47194   00A1D2                     __end_ofi2_getBufferPointer:
 47195                           	callstack 0
 47196                           
 47197 ;; *************** function _APP_highIsr *****************
 47198 ;; Defined at:
 47199 ;;		line 708 in file "../main.c"
 47200 ;; Parameters:    Size  Location     Type
 47201 ;;		None
 47202 ;; Auto vars:     Size  Location     Type
 47203 ;;		None
 47204 ;; Return value:  Size  Location     Type
 47205 ;;                  1    wreg      void 
 47206 ;; Registers used:
 47207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47208 ;; Tracked objects:
 47209 ;;		On entry : 0/0
 47210 ;;		On exit  : 0/0
 47211 ;;		Unchanged: 0/0
 47212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47217 ;;Total ram usage:        0 bytes
 47218 ;; Hardware stack levels used: 1
 47219 ;; Hardware stack levels required when called: 2
 47220 ;; This function calls:
 47221 ;;		_timer1DoneInterruptHandler
 47222 ;;		_timer3DoneInterruptHandler
 47223 ;; This function is called by:
 47224 ;;		_highIsr
 47225 ;; This function uses a non-reentrant model
 47226 ;;
 47227                           
 47228                           	psect	text221
 47229   00C2F2                     __ptext221:
 47230                           	callstack 0
 47231   00C2F2                     _APP_highIsr:
 47232                           	callstack 3
 47233                           
 47234                           ;../main.c: 711:     if (PIR1bits.TMR1IF) {
 47235                           
 47236                           ;incstack = 0
 47237   00C2F2  A09E               	btfss	158,0,c	;volatile
 47238   00C2F4  D003               	goto	i2l15715
 47239                           
 47240                           ;../main.c: 712:         timer1DoneInterruptHandler();
 47241   00C2F6  ECF3  F060         	call	_timer1DoneInterruptHandler	;wreg free
 47242                           
 47243                           ;../main.c: 713:         PIR1bits.TMR1IF = 0;
 47244   00C2FA  909E               	bcf	158,0,c	;volatile
 47245   00C2FC                     i2l15715:
 47246                           
 47247                           ;../main.c: 715:     if (PIR2bits.TMR3IF) {
 47248   00C2FC  A2A1               	btfss	161,1,c	;volatile
 47249   00C2FE  0012               	return	
 47250                           
 47251                           ;../main.c: 716:         timer3DoneInterruptHandler();
 47252   00C300  ECA2  F060         	call	_timer3DoneInterruptHandler	;wreg free
 47253                           
 47254                           ;../main.c: 717:         PIR2bits.TMR3IF = 0;
 47255   00C304  92A1               	bcf	161,1,c	;volatile
 47256   00C306  0012               	return		;funcret
 47257   00C308                     __end_of_APP_highIsr:
 47258                           	callstack 0
 47259                           
 47260 ;; *************** function _timer3DoneInterruptHandler *****************
 47261 ;; Defined at:
 47262 ;;		line 240 in file "../servo.c"
 47263 ;; Parameters:    Size  Location     Type
 47264 ;;		None
 47265 ;; Auto vars:     Size  Location     Type
 47266 ;;		None
 47267 ;; Return value:  Size  Location     Type
 47268 ;;                  1    wreg      void 
 47269 ;; Registers used:
 47270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47271 ;; Tracked objects:
 47272 ;;		On entry : 0/0
 47273 ;;		On exit  : 0/0
 47274 ;;		Unchanged: 0/0
 47275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47280 ;;Total ram usage:        0 bytes
 47281 ;; Hardware stack levels used: 1
 47282 ;; Hardware stack levels required when called: 1
 47283 ;; This function calls:
 47284 ;;		i2_getNV
 47285 ;;		i2_setOutputPin
 47286 ;; This function is called by:
 47287 ;;		_APP_highIsr
 47288 ;; This function uses a non-reentrant model
 47289 ;;
 47290                           
 47291                           	psect	text222
 47292   00C144                     __ptext222:
 47293                           	callstack 0
 47294   00C144                     _timer3DoneInterruptHandler:
 47295                           	callstack 3
 47296                           
 47297                           ;../servo.c: 241:     T3CONbits.TMR3ON = 0;
 47298                           
 47299                           ;incstack = 0
 47300   00C144  90B1               	bcf	177,0,c	;volatile
 47301                           
 47302                           ;../servo.c: 242:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 47303   00C146  0100               	movlb	0	; () banked
 47304   00C148  51CB               	movf	_servoInBlock& (0+255),w,b
 47305   00C14A  0D07               	mullw	7
 47306   00C14C  50F3               	movf	243,w,c
 47307   00C14E  0F49               	addlw	73
 47308   00C150  EC7B  F05D         	call	i2_getNV
 47309   00C154  5001               	movf	?i2_getNV^0,w,c
 47310   00C156  0B20               	andlw	32
 47311   00C158  6E05               	movwf	i2setOutputPin@state^0,c
 47312   00C15A  0100               	movlb	0	; () banked
 47313   00C15C  51CB               	movf	_servoInBlock& (0+255),w,b
 47314   00C15E  0F08               	addlw	8
 47315   00C160  EC1C  F038         	call	i2_setOutputPin
 47316   00C164  0012               	return		;funcret
 47317   00C166                     __end_of_timer3DoneInterruptHandler:
 47318                           	callstack 0
 47319                           
 47320 ;; *************** function _timer1DoneInterruptHandler *****************
 47321 ;; Defined at:
 47322 ;;		line 235 in file "../servo.c"
 47323 ;; Parameters:    Size  Location     Type
 47324 ;;		None
 47325 ;; Auto vars:     Size  Location     Type
 47326 ;;		None
 47327 ;; Return value:  Size  Location     Type
 47328 ;;                  1    wreg      void 
 47329 ;; Registers used:
 47330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47331 ;; Tracked objects:
 47332 ;;		On entry : 0/0
 47333 ;;		On exit  : 0/0
 47334 ;;		Unchanged: 0/0
 47335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47340 ;;Total ram usage:        0 bytes
 47341 ;; Hardware stack levels used: 1
 47342 ;; Hardware stack levels required when called: 1
 47343 ;; This function calls:
 47344 ;;		i2_getNV
 47345 ;;		i2_setOutputPin
 47346 ;; This function is called by:
 47347 ;;		_APP_highIsr
 47348 ;; This function uses a non-reentrant model
 47349 ;;
 47350                           
 47351                           	psect	text223
 47352   00C1E6                     __ptext223:
 47353                           	callstack 0
 47354   00C1E6                     _timer1DoneInterruptHandler:
 47355                           	callstack 3
 47356                           
 47357                           ;../servo.c: 236:     T1CONbits.TMR1ON = 0;
 47358                           
 47359                           ;incstack = 0
 47360   00C1E6  90CD               	bcf	205,0,c	;volatile
 47361                           
 47362                           ;../servo.c: 237:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 47363   00C1E8  0100               	movlb	0	; () banked
 47364   00C1EA  51CB               	movf	_servoInBlock& (0+255),w,b
 47365   00C1EC  0D07               	mullw	7
 47366   00C1EE  50F3               	movf	243,w,c
 47367   00C1F0  0F11               	addlw	17
 47368   00C1F2  EC7B  F05D         	call	i2_getNV
 47369   00C1F6  5001               	movf	?i2_getNV^0,w,c
 47370   00C1F8  0B20               	andlw	32
 47371   00C1FA  6E05               	movwf	i2setOutputPin@state^0,c
 47372   00C1FC  0100               	movlb	0	; () banked
 47373   00C1FE  51CB               	movf	_servoInBlock& (0+255),w,b
 47374   00C200  EC1C  F038         	call	i2_setOutputPin
 47375   00C204  0012               	return		;funcret
 47376   00C206                     __end_of_timer1DoneInterruptHandler:
 47377                           	callstack 0
 47378                           
 47379 ;; *************** function i2_setOutputPin *****************
 47380 ;; Defined at:
 47381 ;;		line 256 in file "../digitalOut.c"
 47382 ;; Parameters:    Size  Location     Type
 47383 ;;  io              1    wreg     unsigned char 
 47384 ;;  state           1    4[COMRAM] enum E12760
 47385 ;; Auto vars:     Size  Location     Type
 47386 ;;  io              1    7[COMRAM] unsigned char 
 47387 ;; Return value:  Size  Location     Type
 47388 ;;                  1    wreg      void 
 47389 ;; Registers used:
 47390 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 47391 ;; Tracked objects:
 47392 ;;		On entry : 0/0
 47393 ;;		On exit  : 0/0
 47394 ;;		Unchanged: 0/0
 47395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47396 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47399 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47400 ;;Total ram usage:        4 bytes
 47401 ;; Hardware stack levels used: 1
 47402 ;; This function calls:
 47403 ;;		Nothing
 47404 ;; This function is called by:
 47405 ;;		_timer1DoneInterruptHandler
 47406 ;;		_timer3DoneInterruptHandler
 47407 ;; This function uses a non-reentrant model
 47408 ;;
 47409                           
 47410                           	psect	text224
 47411   007038                     __ptext224:
 47412                           	callstack 0
 47413   007038                     i2_setOutputPin:
 47414                           	callstack 3
 47415                           
 47416                           ;incstack = 0
 47417                           ;i2setOutputPin@io stored from wreg
 47418   007038  6E08               	movwf	i2setOutputPin@io^0,c
 47419                           
 47420                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 47421   00703A  D0BA               	goto	i2l13697
 47422   00703C                     i2l13677:
 47423                           
 47424                           ;../digitalOut.c: 259:             if (state) {
 47425   00703C  5005               	movf	i2setOutputPin@state^0,w,c
 47426   00703E  B4D8               	btfsc	status,2,c
 47427   007040  D01D               	goto	i2l13681
 47428                           
 47429                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 47430   007042  5008               	movf	i2setOutputPin@io^0,w,c
 47431   007044  0D04               	mullw	4
 47432   007046  0E02               	movlw	2
 47433   007048  26F3               	addwf	243,f,c
 47434   00704A  0E00               	movlw	0
 47435   00704C  22F4               	addwfc	244,f,c
 47436   00704E  0E35               	movlw	low _configs
 47437   007050  24F3               	addwf	243,w,c
 47438   007052  6EF6               	movwf	tblptrl,c
 47439   007054  0EEE               	movlw	high _configs
 47440   007056  20F4               	addwfc	244,w,c
 47441   007058  6EF7               	movwf	tblptrh,c
 47442   00705A                     	if	1	;There are 3 active tblptr bytes
 47443   00705A  6AF8               	clrf	tblptru,c
 47444   00705C  0E00               	movlw	low (__mediumconst shr (0+16))
 47445   00705E  22F8               	addwfc	tblptru,f,c
 47446   007060                     	endif
 47447   007060  0008               	tblrd		*
 47448   007062  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47449   007066  0E01               	movlw	1
 47450   007068  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47451   00706A  2A06               	incf	??i2_setOutputPin^0,f,c
 47452   00706C  D002               	goto	i2u1279_44
 47453   00706E                     i2u1279_45:
 47454   00706E  90D8               	bcf	status,0,c
 47455   007070  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47456   007072                     i2u1279_44:
 47457   007072  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47458   007074  D7FC               	goto	i2u1279_45
 47459   007076  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47460   007078  1289               	iorwf	137,f,c	;volatile
 47461                           
 47462                           ;../digitalOut.c: 262:             } else {
 47463   00707A  0012               	return	
 47464   00707C                     i2l13681:
 47465                           
 47466                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 47467   00707C  5008               	movf	i2setOutputPin@io^0,w,c
 47468   00707E  0D04               	mullw	4
 47469   007080  0E02               	movlw	2
 47470   007082  26F3               	addwf	243,f,c
 47471   007084  0E00               	movlw	0
 47472   007086  22F4               	addwfc	244,f,c
 47473   007088  0E35               	movlw	low _configs
 47474   00708A  24F3               	addwf	243,w,c
 47475   00708C  6EF6               	movwf	tblptrl,c
 47476   00708E  0EEE               	movlw	high _configs
 47477   007090  20F4               	addwfc	244,w,c
 47478   007092  6EF7               	movwf	tblptrh,c
 47479   007094                     	if	1	;There are 3 active tblptr bytes
 47480   007094  6AF8               	clrf	tblptru,c
 47481   007096  0E00               	movlw	low (__mediumconst shr (0+16))
 47482   007098  22F8               	addwfc	tblptru,f,c
 47483   00709A                     	endif
 47484   00709A  0008               	tblrd		*
 47485   00709C  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47486   0070A0  0E01               	movlw	1
 47487   0070A2  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47488   0070A4  2A06               	incf	??i2_setOutputPin^0,f,c
 47489   0070A6  D002               	goto	i2u1280_44
 47490   0070A8                     i2u1280_45:
 47491   0070A8  90D8               	bcf	status,0,c
 47492   0070AA  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47493   0070AC                     i2u1280_44:
 47494   0070AC  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47495   0070AE  D7FC               	goto	i2u1280_45
 47496   0070B0  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47497   0070B2  0AFF               	xorlw	255
 47498   0070B4  1689               	andwf	137,f,c	;volatile
 47499   0070B6  0012               	return	
 47500   0070B8                     i2l13683:
 47501                           
 47502                           ;../digitalOut.c: 268:             if (state) {
 47503   0070B8  5005               	movf	i2setOutputPin@state^0,w,c
 47504   0070BA  B4D8               	btfsc	status,2,c
 47505   0070BC  D01D               	goto	i2l13687
 47506                           
 47507                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 47508   0070BE  5008               	movf	i2setOutputPin@io^0,w,c
 47509   0070C0  0D04               	mullw	4
 47510   0070C2  0E02               	movlw	2
 47511   0070C4  26F3               	addwf	243,f,c
 47512   0070C6  0E00               	movlw	0
 47513   0070C8  22F4               	addwfc	244,f,c
 47514   0070CA  0E35               	movlw	low _configs
 47515   0070CC  24F3               	addwf	243,w,c
 47516   0070CE  6EF6               	movwf	tblptrl,c
 47517   0070D0  0EEE               	movlw	high _configs
 47518   0070D2  20F4               	addwfc	244,w,c
 47519   0070D4  6EF7               	movwf	tblptrh,c
 47520   0070D6                     	if	1	;There are 3 active tblptr bytes
 47521   0070D6  6AF8               	clrf	tblptru,c
 47522   0070D8  0E00               	movlw	low (__mediumconst shr (0+16))
 47523   0070DA  22F8               	addwfc	tblptru,f,c
 47524   0070DC                     	endif
 47525   0070DC  0008               	tblrd		*
 47526   0070DE  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47527   0070E2  0E01               	movlw	1
 47528   0070E4  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47529   0070E6  2A06               	incf	??i2_setOutputPin^0,f,c
 47530   0070E8  D002               	goto	i2u1282_44
 47531   0070EA                     i2u1282_45:
 47532   0070EA  90D8               	bcf	status,0,c
 47533   0070EC  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47534   0070EE                     i2u1282_44:
 47535   0070EE  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47536   0070F0  D7FC               	goto	i2u1282_45
 47537   0070F2  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47538   0070F4  128A               	iorwf	138,f,c	;volatile
 47539                           
 47540                           ;../digitalOut.c: 271:             } else {
 47541   0070F6  0012               	return	
 47542   0070F8                     i2l13687:
 47543                           
 47544                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 47545   0070F8  5008               	movf	i2setOutputPin@io^0,w,c
 47546   0070FA  0D04               	mullw	4
 47547   0070FC  0E02               	movlw	2
 47548   0070FE  26F3               	addwf	243,f,c
 47549   007100  0E00               	movlw	0
 47550   007102  22F4               	addwfc	244,f,c
 47551   007104  0E35               	movlw	low _configs
 47552   007106  24F3               	addwf	243,w,c
 47553   007108  6EF6               	movwf	tblptrl,c
 47554   00710A  0EEE               	movlw	high _configs
 47555   00710C  20F4               	addwfc	244,w,c
 47556   00710E  6EF7               	movwf	tblptrh,c
 47557   007110                     	if	1	;There are 3 active tblptr bytes
 47558   007110  6AF8               	clrf	tblptru,c
 47559   007112  0E00               	movlw	low (__mediumconst shr (0+16))
 47560   007114  22F8               	addwfc	tblptru,f,c
 47561   007116                     	endif
 47562   007116  0008               	tblrd		*
 47563   007118  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47564   00711C  0E01               	movlw	1
 47565   00711E  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47566   007120  2A06               	incf	??i2_setOutputPin^0,f,c
 47567   007122  D002               	goto	i2u1283_44
 47568   007124                     i2u1283_45:
 47569   007124  90D8               	bcf	status,0,c
 47570   007126  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47571   007128                     i2u1283_44:
 47572   007128  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47573   00712A  D7FC               	goto	i2u1283_45
 47574   00712C  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47575   00712E  0AFF               	xorlw	255
 47576   007130  168A               	andwf	138,f,c	;volatile
 47577   007132  0012               	return	
 47578   007134                     i2l13689:
 47579                           
 47580                           ;../digitalOut.c: 277:             if (state) {
 47581   007134  5005               	movf	i2setOutputPin@state^0,w,c
 47582   007136  B4D8               	btfsc	status,2,c
 47583   007138  D01D               	goto	i2l13693
 47584                           
 47585                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 47586   00713A  5008               	movf	i2setOutputPin@io^0,w,c
 47587   00713C  0D04               	mullw	4
 47588   00713E  0E02               	movlw	2
 47589   007140  26F3               	addwf	243,f,c
 47590   007142  0E00               	movlw	0
 47591   007144  22F4               	addwfc	244,f,c
 47592   007146  0E35               	movlw	low _configs
 47593   007148  24F3               	addwf	243,w,c
 47594   00714A  6EF6               	movwf	tblptrl,c
 47595   00714C  0EEE               	movlw	high _configs
 47596   00714E  20F4               	addwfc	244,w,c
 47597   007150  6EF7               	movwf	tblptrh,c
 47598   007152                     	if	1	;There are 3 active tblptr bytes
 47599   007152  6AF8               	clrf	tblptru,c
 47600   007154  0E00               	movlw	low (__mediumconst shr (0+16))
 47601   007156  22F8               	addwfc	tblptru,f,c
 47602   007158                     	endif
 47603   007158  0008               	tblrd		*
 47604   00715A  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47605   00715E  0E01               	movlw	1
 47606   007160  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47607   007162  2A06               	incf	??i2_setOutputPin^0,f,c
 47608   007164  D002               	goto	i2u1285_44
 47609   007166                     i2u1285_45:
 47610   007166  90D8               	bcf	status,0,c
 47611   007168  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47612   00716A                     i2u1285_44:
 47613   00716A  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47614   00716C  D7FC               	goto	i2u1285_45
 47615   00716E  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47616   007170  128B               	iorwf	139,f,c	;volatile
 47617                           
 47618                           ;../digitalOut.c: 280:             } else {
 47619   007172  0012               	return	
 47620   007174                     i2l13693:
 47621                           
 47622                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 47623   007174  5008               	movf	i2setOutputPin@io^0,w,c
 47624   007176  0D04               	mullw	4
 47625   007178  0E02               	movlw	2
 47626   00717A  26F3               	addwf	243,f,c
 47627   00717C  0E00               	movlw	0
 47628   00717E  22F4               	addwfc	244,f,c
 47629   007180  0E35               	movlw	low _configs
 47630   007182  24F3               	addwf	243,w,c
 47631   007184  6EF6               	movwf	tblptrl,c
 47632   007186  0EEE               	movlw	high _configs
 47633   007188  20F4               	addwfc	244,w,c
 47634   00718A  6EF7               	movwf	tblptrh,c
 47635   00718C                     	if	1	;There are 3 active tblptr bytes
 47636   00718C  6AF8               	clrf	tblptru,c
 47637   00718E  0E00               	movlw	low (__mediumconst shr (0+16))
 47638   007190  22F8               	addwfc	tblptru,f,c
 47639   007192                     	endif
 47640   007192  0008               	tblrd		*
 47641   007194  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47642   007198  0E01               	movlw	1
 47643   00719A  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47644   00719C  2A06               	incf	??i2_setOutputPin^0,f,c
 47645   00719E  D002               	goto	i2u1286_44
 47646   0071A0                     i2u1286_45:
 47647   0071A0  90D8               	bcf	status,0,c
 47648   0071A2  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47649   0071A4                     i2u1286_44:
 47650   0071A4  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47651   0071A6  D7FC               	goto	i2u1286_45
 47652   0071A8  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47653   0071AA  0AFF               	xorlw	255
 47654   0071AC  168B               	andwf	139,f,c	;volatile
 47655   0071AE  0012               	return	
 47656   0071B0                     i2l13697:
 47657   0071B0  5008               	movf	i2setOutputPin@io^0,w,c
 47658   0071B2  0D04               	mullw	4
 47659   0071B4  0E01               	movlw	1
 47660   0071B6  26F3               	addwf	243,f,c
 47661   0071B8  0E00               	movlw	0
 47662   0071BA  22F4               	addwfc	244,f,c
 47663   0071BC  0E35               	movlw	low _configs
 47664   0071BE  24F3               	addwf	243,w,c
 47665   0071C0  6EF6               	movwf	tblptrl,c
 47666   0071C2  0EEE               	movlw	high _configs
 47667   0071C4  20F4               	addwfc	244,w,c
 47668   0071C6  6EF7               	movwf	tblptrh,c
 47669   0071C8                     	if	1	;There are 3 active tblptr bytes
 47670   0071C8  6AF8               	clrf	tblptru,c
 47671   0071CA  0E00               	movlw	low (__mediumconst shr (0+16))
 47672   0071CC  22F8               	addwfc	tblptru,f,c
 47673   0071CE                     	endif
 47674   0071CE  0008               	tblrd		*
 47675   0071D0  50F5               	movf	tablat,w,c
 47676                           
 47677                           ; Switch size 1, requested type "simple"
 47678                           ; Number of cases is 3, Range of values is 65 to 67
 47679                           ; switch strategies available:
 47680                           ; Name         Instructions Cycles
 47681                           ; simple_byte           10     6 (average)
 47682                           ;	Chosen strategy is simple_byte
 47683   0071D2  0A41               	xorlw	65	; case 65
 47684   0071D4  B4D8               	btfsc	status,2,c
 47685   0071D6  D732               	goto	i2l13677
 47686   0071D8  0A03               	xorlw	3	; case 66
 47687   0071DA  B4D8               	btfsc	status,2,c
 47688   0071DC  D76D               	goto	i2l13683
 47689   0071DE  0A01               	xorlw	1	; case 67
 47690   0071E0  A4D8               	btfss	status,2,c
 47691   0071E2  0012               	return	
 47692   0071E4  D7A7               	goto	i2l13689
 47693   0071E6                     __end_ofi2_setOutputPin:
 47694                           	callstack 0
 47695                           
 47696 ;; *************** function i2_getNV *****************
 47697 ;; Defined at:
 47698 ;;		line 181 in file "../../VLCBlib_PIC/nv.c"
 47699 ;; Parameters:    Size  Location     Type
 47700 ;;  index           1    wreg     unsigned char 
 47701 ;; Auto vars:     Size  Location     Type
 47702 ;;  index           1    3[COMRAM] unsigned char 
 47703 ;; Return value:  Size  Location     Type
 47704 ;;                  2    0[COMRAM] short 
 47705 ;; Registers used:
 47706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47707 ;; Tracked objects:
 47708 ;;		On entry : 0/0
 47709 ;;		On exit  : 0/0
 47710 ;;		Unchanged: 0/0
 47711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47714 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47715 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47716 ;;Total ram usage:        4 bytes
 47717 ;; Hardware stack levels used: 1
 47718 ;; This function calls:
 47719 ;;		Nothing
 47720 ;; This function is called by:
 47721 ;;		_timer1DoneInterruptHandler
 47722 ;;		_timer3DoneInterruptHandler
 47723 ;; This function uses a non-reentrant model
 47724 ;;
 47725                           
 47726                           	psect	text225
 47727   00BAF6                     __ptext225:
 47728                           	callstack 0
 47729   00BAF6                     i2_getNV:
 47730                           	callstack 3
 47731                           
 47732                           ;incstack = 0
 47733                           ;i2getNV@index stored from wreg
 47734   00BAF6  6E04               	movwf	i2getNV@index^0,c
 47735                           
 47736                           ;../../VLCBlib_PIC/nv.c: 182:     if (index == 0) return (15+7*16);
 47737   00BAF8  5004               	movf	i2getNV@index^0,w,c
 47738   00BAFA  A4D8               	btfss	status,2,c
 47739   00BAFC  D005               	goto	i2l13705
 47740   00BAFE  0E00               	movlw	0
 47741   00BB00  6E02               	movwf	(?i2_getNV+1)^0,c
 47742   00BB02  0E7F               	movlw	127
 47743   00BB04  6E01               	movwf	?i2_getNV^0,c
 47744   00BB06  0012               	return	
 47745   00BB08                     i2l13705:
 47746                           
 47747                           ;../../VLCBlib_PIC/nv.c: 183:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 47748   00BB08  0E7F               	movlw	127
 47749   00BB0A  6404               	cpfsgt	i2getNV@index^0,c
 47750   00BB0C  D005               	goto	i2l13711
 47751   00BB0E  0EFF               	movlw	255
 47752   00BB10  6E02               	movwf	(?i2_getNV+1)^0,c
 47753   00BB12  0EF6               	movlw	246
 47754   00BB14  6E01               	movwf	?i2_getNV^0,c
 47755   00BB16  0012               	return	
 47756   00BB18                     i2l13711:
 47757                           
 47758                           ;../../VLCBlib_PIC/nv.c: 185:     return nvCache[index];
 47759   00BB18  0E00               	movlw	low _nvCache
 47760   00BB1A  2404               	addwf	i2getNV@index^0,w,c
 47761   00BB1C  6ED9               	movwf	fsr2l,c
 47762   00BB1E  6ADA               	clrf	fsr2h,c
 47763   00BB20  0E04               	movlw	high _nvCache
 47764   00BB22  22DA               	addwfc	fsr2h,f,c
 47765   00BB24  50DF               	movf	indf2,w,c
 47766   00BB26  6E03               	movwf	??i2_getNV^0,c
 47767   00BB28  5003               	movf	??i2_getNV^0,w,c
 47768   00BB2A  6E01               	movwf	?i2_getNV^0,c
 47769   00BB2C  6A02               	clrf	(?i2_getNV+1)^0,c
 47770   00BB2E  0012               	return		;funcret
 47771   00BB30                     __end_ofi2_getNV:
 47772                           	callstack 0
 47773                           
 47774                           	psect	rparam
 47775   000000                     
 47776                           	psect	temp
 47777   000052                     btemp:
 47778                           	callstack 0
 47779   000052                     	ds	1
 47780   000000                     int$flags	set	btemp
 47781   000000                     wtemp8	set	btemp+1
 47782   000000                     ttemp5	set	btemp+1
 47783   000000                     ttemp6	set	btemp+4
 47784   000000                     ttemp7	set	btemp+8
 47785                           
 47786                           	psect	config
 47787                           
 47788                           ;Config register CONFIG1L @ 0x300000
 47789                           ;	VREG Sleep Enable bit
 47790                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 47791                           ;	LF-INTOSC Low-power Enable bit
 47792                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 47793                           ;	SOSC Power Selection and mode Configuration bits
 47794                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 47795                           ;	Extended Instruction Set
 47796                           ;	XINST = OFF, Disabled
 47797   300000                     	org	3145728
 47798   300000  15                 	db	21
 47799                           
 47800                           ;Config register CONFIG1H @ 0x300001
 47801                           ;	Oscillator
 47802                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 47803                           ;	PLL x4 Enable bit
 47804                           ;	PLLCFG = OFF, Disabled
 47805                           ;	Fail-Safe Clock Monitor
 47806                           ;	FCMEN = OFF, Disabled
 47807                           ;	Internal External Oscillator Switch Over Mode
 47808                           ;	IESO = OFF, Disabled
 47809   300001                     	org	3145729
 47810   300001  03                 	db	3
 47811                           
 47812                           ;Config register CONFIG2L @ 0x300002
 47813                           ;	Power Up Timer
 47814                           ;	PWRTEN = ON, Enabled
 47815                           ;	Brown Out Detect
 47816                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 47817                           ;	Brown-out Reset Voltage bits
 47818                           ;	BORV = 0, 3.0V
 47819                           ;	BORMV Power level
 47820                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 47821   300002                     	org	3145730
 47822   300002  66                 	db	102
 47823                           
 47824                           ;Config register CONFIG2H @ 0x300003
 47825                           ;	Watchdog Timer
 47826                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 47827                           ;	Watchdog Postscaler
 47828                           ;	WDTPS = 1048576, 1:1048576
 47829   300003                     	org	3145731
 47830   300003  50                 	db	80
 47831                           
 47832                           ; Padding undefined space
 47833   300004                     	org	3145732
 47834   300004  FF                 	db	255
 47835                           
 47836                           ;Config register CONFIG3H @ 0x300005
 47837                           ;	ECAN Mux bit
 47838                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 47839                           ;	MSSP address masking
 47840                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 47841                           ;	Master Clear Enable
 47842                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 47843   300005                     	org	3145733
 47844   300005  89                 	db	137
 47845                           
 47846                           ;Config register CONFIG4L @ 0x300006
 47847                           ;	Stack Overflow Reset
 47848                           ;	STVREN = ON, Enabled
 47849                           ;	Boot Block Size
 47850                           ;	BBSIZ = BB1K, 1K word Boot Block size
 47851                           ;	Background Debugger
 47852                           ;	DEBUG = 0x1, unprogrammed default
 47853   300006                     	org	3145734
 47854   300006  81                 	db	129
 47855                           
 47856                           ; Padding undefined space
 47857   300007                     	org	3145735
 47858   300007  FF                 	db	255
 47859                           
 47860                           ;Config register CONFIG5L @ 0x300008
 47861                           ;	Code Protect 00800-03FFF
 47862                           ;	CP0 = OFF, Disabled
 47863                           ;	Code Protect 04000-07FFF
 47864                           ;	CP1 = OFF, Disabled
 47865                           ;	Code Protect 08000-0BFFF
 47866                           ;	CP2 = OFF, Disabled
 47867                           ;	Code Protect 0C000-0FFFF
 47868                           ;	CP3 = OFF, Disabled
 47869   300008                     	org	3145736
 47870   300008  0F                 	db	15
 47871                           
 47872                           ;Config register CONFIG5H @ 0x300009
 47873                           ;	Code Protect Boot
 47874                           ;	CPB = OFF, Disabled
 47875                           ;	Data EE Read Protect
 47876                           ;	CPD = OFF, Disabled
 47877   300009                     	org	3145737
 47878   300009  C0                 	db	192
 47879                           
 47880                           ;Config register CONFIG6L @ 0x30000A
 47881                           ;	Table Write Protect 00800-03FFF
 47882                           ;	WRT0 = OFF, Disabled
 47883                           ;	Table Write Protect 04000-07FFF
 47884                           ;	WRT1 = OFF, Disabled
 47885                           ;	Table Write Protect 08000-0BFFF
 47886                           ;	WRT2 = OFF, Disabled
 47887                           ;	Table Write Protect 0C000-0FFFF
 47888                           ;	WRT3 = OFF, Disabled
 47889   30000A                     	org	3145738
 47890   30000A  0F                 	db	15
 47891                           
 47892                           ;Config register CONFIG6H @ 0x30000B
 47893                           ;	Config. Write Protect
 47894                           ;	WRTC = OFF, Disabled
 47895                           ;	Table Write Protect Boot
 47896                           ;	WRTB = OFF, Disabled
 47897                           ;	Data EE Write Protect
 47898                           ;	WRTD = OFF, Disabled
 47899   30000B                     	org	3145739
 47900   30000B  E0                 	db	224
 47901                           
 47902                           ;Config register CONFIG7L @ 0x30000C
 47903                           ;	Table Read Protect 00800-03FFF
 47904                           ;	EBTR0 = OFF, Disabled
 47905                           ;	Table Read Protect 04000-07FFF
 47906                           ;	EBTR1 = OFF, Disabled
 47907                           ;	Table Read Protect 08000-0BFFF
 47908                           ;	EBTR2 = OFF, Disabled
 47909                           ;	Table Read Protect 0C000-0FFFF
 47910                           ;	EBTR3 = OFF, Disabled
 47911   30000C                     	org	3145740
 47912   30000C  0F                 	db	15
 47913                           
 47914                           ;Config register CONFIG7H @ 0x30000D
 47915                           ;	Table Read Protect Boot
 47916                           ;	EBTRB = OFF, Disabled
 47917   30000D                     	org	3145741
 47918   30000D  40                 	db	64
 47919                           tosu	equ	0xFFF
 47920                           tosh	equ	0xFFE
 47921                           tosl	equ	0xFFD
 47922                           stkptr	equ	0xFFC
 47923                           pclatu	equ	0xFFB
 47924                           pclath	equ	0xFFA
 47925                           pcl	equ	0xFF9
 47926                           tblptru	equ	0xFF8
 47927                           tblptrh	equ	0xFF7
 47928                           tblptrl	equ	0xFF6
 47929                           tablat	equ	0xFF5
 47930                           prodh	equ	0xFF4
 47931                           prodl	equ	0xFF3
 47932                           indf0	equ	0xFEF
 47933                           postinc0	equ	0xFEE
 47934                           postdec0	equ	0xFED
 47935                           preinc0	equ	0xFEC
 47936                           plusw0	equ	0xFEB
 47937                           fsr0h	equ	0xFEA
 47938                           fsr0l	equ	0xFE9
 47939                           wreg	equ	0xFE8
 47940                           indf1	equ	0xFE7
 47941                           postinc1	equ	0xFE6
 47942                           postdec1	equ	0xFE5
 47943                           preinc1	equ	0xFE4
 47944                           plusw1	equ	0xFE3
 47945                           fsr1h	equ	0xFE2
 47946                           fsr1l	equ	0xFE1
 47947                           bsr	equ	0xFE0
 47948                           indf2	equ	0xFDF
 47949                           postinc2	equ	0xFDE
 47950                           postdec2	equ	0xFDD
 47951                           preinc2	equ	0xFDC
 47952                           plusw2	equ	0xFDB
 47953                           fsr2h	equ	0xFDA
 47954                           fsr2l	equ	0xFD9
 47955                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    586
    Data        0
    BSS         1844
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      81
    BANK0           160     73     115
    BANK1           256     71     255
    BANK2           256      4     256
    BANK3           256     45     244
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8052	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    poll$8053	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8054	const PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8054$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    pop@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    quantity@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    S5101MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12922 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12922 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _setup->_initServos
    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _teachProcessMessage->_sendMessage3
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _producerProcessMessage->_sendMessage4
    _APP_GetEventState->___awdiv
    _numEv->_validStart
    _nvTRnvrdCallback->_sendMessage4
    _mnsTRrqnpnCallback->_sendMessage4
    _nvProcessMessage->_sendMessage3
    _nvProcessMessage->_sendMessage4
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awdiv
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_sendMessage4
    _mnsProcessMessage->_writeNVM
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _doSOD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_push
    _readInput->_getNV
    _checkPowerOnPb->_pbDownTimer
    _checkPowerOnPb->_pbUpTimer
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _poll->_producerProcessMessage
    _poll->_teachProcessMessage
    _teachCheckLen->_checkLen
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_sendInvertedProducedEvent
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _poll->_producerProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 4049709
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   31895
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0    9755
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4743
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4468
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   37523
                                             10 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   23142
                                              9 BANK1      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4322
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    4736
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4510
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2598635
                                             30 BANK3     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  863928
                                             63 BANK1      8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   61265
                                             71 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   19374
                                              8 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   65705
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   86855
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   19312
                                              8 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   73062
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   56344
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  107959
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   52528
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  326854
                                             52 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         8     1      7  270787
                                             44 BANK1      8     1      7
                           _addEvent
              _checkRemoveTableEntry
                   _rebuildHashtable
                            _writeEv
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              12    10      2   60372
                                             63 BANK1      8     6      2
                                              0 BANK2      4     4      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  178721
                                             40 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                       14    12      2   45216
                                             25 BANK1     13    11      2
                  _APP_GetEventState
                            ___awdiv
                              _getNV
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                   11    11      0   11334
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   38694
                                             25 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8418
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13326
                                             25 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   26175
                                             25 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   28530
                                             25 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   13607
                                             25 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   13139
                                             25 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  589026
                                             63 BANK1      6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  518036
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  498723
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    9015
                                             63 BANK0      2     1      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   37    35      2  700697
                                             63 BANK1      6     4      2
                                              0 BANK3     30    30      0
                                NULL *
                   _ackGetDiagnostic *
                         _canEsdData *
                   _canGetDiagnostic *
                  _consumer2QEsdData *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   12237
                                             69 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15114
                                             69 BANK0      4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     439
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     247
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _consumer2QEsdData                                    1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   50102
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   11573
                                             69 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            20    18      2   30238
                                             63 BANK1      5     3      2
                                              0 BANK3     14    14      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                    9     7      2   13180
                                             10 BANK1      8     6      2
                   _getBufferPointer
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              3 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              2 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   28561
                                             63 BANK1      4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   63651
                                             63 BANK1      4     2      2
                                              0 BANK3      7     7      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                              _getEv
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13348
                                             69 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                         _canEsdData (ARG) *
                  _consumer2QEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   29405
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29163
                                             70 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   28406
                                             69 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  220517
                                             45 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   72236
                                             29 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   68251
                                             17 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    8078
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12774
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       2     2      0   26783
                                             17 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   60963
                                             36 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                     _finaliseOutput
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   41442
                                             33 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   38790
                                             25 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   26075
                                             17 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _finaliseOutput                                       2     1      1     211
                                             45 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1626
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   34632
                                             17 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendProducedEvent                                    8     7      1   24316
                                              9 BANK1      8     7      1
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13075
                                             69 BANK0      4     0      4
                                              8 BANK1      1     1      0
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9320
                                             66 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                       9     7      2    3281
                                             57 BANK0      9     7      2
                _getNextWriteMessage
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _quantity                                             5     4      1     183
                                             45 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (7) _push                                                12     9      3    1234
                                             45 BANK0     12     9      3
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  587918
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    7243
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  569193
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   33083
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   33083
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   23401
                                              2 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   13497
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    6925
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  483226
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  482892
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14583
                                              6 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              2 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4223
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        5     4      1  440536
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  317492
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  156300
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  161099
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  122424
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _writeEv                                             12    10      2   70117
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _checkRemoveTableEntry                                2     2      0   54347
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   41393
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   23043
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9076
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (7) _getEVs                                               8     8      0    8638
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4124
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   10828
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4223
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4158
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17140
                                              2 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      5     1      4
                                              0 BANK1      2     2      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2269
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1500
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4028
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7802
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7802
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7641
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1071
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    6190
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    6190
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    5353
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    1672
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1461
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1461
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     225
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     759
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _rebuildHashtable
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         _findServiceIndex
         _startTimedResponse
           _findServiceIndex (ARG)
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _finaliseOutput
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _canEsdData (ARG) *
         _consumer2QEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _producerEsdData (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _canEsdData *
       _canGetDiagnostic *
       _consumer2QEsdData *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerEsdData *
       _producerGetDiagnostic *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awdiv
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
       _sodTRCallback *
         _APP_GetEventState
           ___awdiv
           _getNV
           _readNVM
         ___awdiv
         _getNV
         _sendInvertedProducedEvent
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
           _checkRemoveTableEntry
           _rebuildHashtable
           _writeEv
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      70       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      68        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      67        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      66        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      65        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      64        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      63        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      62        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      61        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      60        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     2D      F4      11       95.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      4     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     47      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      51       1       86.2%
BITBANK14           41      0       0      69        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlllhl      2A      0       0      57        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      48        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRllhllh      F      0       0      54        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlllhhl      7      0       0      56        0.0%
BITBIGSFRhh          7      0       0      24        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRllhhll      4      0       0      47        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlllhhh      3      0       0      55        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      58        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     47F      59        0.0%
DATA                 0      0     81F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 01 15:33:53 2024

                   nerdCallback@nodeNumber 01D3                        findEvent@tableIndex 01C4  
                __end_of_pollTimedResponse A89C                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 01BA                           sendMessage@data1 01B9  
                         sendMessage@data2 01BA                           sendMessage@data3 01BB  
                         sendMessage@data4 01BC                           sendMessage@data5 01BD  
                         sendMessage@data6 01BE                           sendMessage@data7 01BF  
                      findEvent@nodeNumber 01B8              __end_of_setTimedResponseDelay C3A6  
            __end_of_producerGetDiagnostic BBD6                          ackEventCheckLen@m 01C9  
                           _completed$1536 0091                              ?_APP_addEvent 01E4  
                    _timedResponseCallback 003F                               ___awdiv@sign 009C  
                          _normalReadIndex 00CF                                         _io 00D1  
                                       _nn 00BF                                         bsr 0FE0  
                              ?_APP_lowIsr 0001                        ___wmul@multiplicand 0093  
                             configIO@type 01C0                         i2_getBufferPointer A140  
           _sendInvertedProducedEvent$1395 01CE                           ?_flushFlashBlock 0001  
                   _eventConsumer2QService EF0F                               ?_APP_highIsr 0001  
                  __end_of_eraseFlashBlock B73C                __end_of_universalEventsInit C342  
                ?_consumer2QProcessMessage 01F7                                _startServos 98EE  
                           ??_getTwoAction 008F                  __end_of_deleteActionRange 958C  
                                      l352 4A0E                                        l281 6938  
                                      l259 5580                                        l444 355C  
                                      l541 A43A                                        l461 3760  
                                      l453 3572                                        l550 A748  
                                      l279 68A2                                        l640 74F6  
                                      l545 A47C                                        l465 3754  
                                      l449 3566                                        l458 357C  
                                      l555 A78A                                _startOutput B2A0  
                                      l814 AB64                                        l486 3892  
                                      l911 9FF4                                        l808 3186  
                                      l648 AD78                                        l496 3838  
                                      l497 3844                            checkPowerOnPb@i 01F1  
                       _enumerationResults 0254                      deleteHappeningRange@h 01DC  
          ?_APP_isSuitableTimeToWriteFlash 0001           ??_APP_isSuitableTimeToWriteFlash 008D  
                      _expeditedWriteIndex 00CC                            _initServos$8040 00A7  
                          _initServos$8041 00A6                                        _evs 0240  
                                      _pop 9ACE                              _APP_nvDefault 8B7E  
                             ___awmod@sign 0092                                        prod 0FF3  
                  i2getNextWriteMessage@wr 000C                                        tosl 0FFD  
                                      wreg 0FE8               tableIndexToEvtIdx@tableIndex 008D  
                      ?i2_getBufferPointer 0001       sendInvertedProducedEvent@can_send_on 01CB  
                  APP_nvValueChanged@index 01F0               APP_GetEventState@disable_off 01B9  
                  APP_nvValueChanged@value 01EB        __end_of_mnsTRallDiagnosticsCallback 8492  
              _mnsTRallDiagnosticsCallback 83AC                                       l2011 C018  
                                     l3001 5D46                                       l1402 7DD0  
                                     l1091 13B2                                       l2142 AE44  
                                     l1406 7E1C                                       l1175 C35C  
                                     l1503 4408                                       l2136 AE2E  
                                     l1408 7E48                                       l2129 C238  
                                     l2401 6EDA                                       l1515 456A  
                                     l1275 660A                                       l2156 B728  
                                     l1508 4494                                       l1444 1A70  
                                     l2405 6F1C                                       l2174 B87E  
                                     l2408 6F8C                                       l3073 A612  
                                     l1731 5FD2                                       l1716 5F22  
                                     l1476 21AE                                       l1733 5FD8  
                                     l1725 5FAA                                       l2461 69AE  
                                     l1718 5F2A                                       l2454 51C2  
                                     l1751 60DA                                       l1727 5FBA  
                                     l1736 602E                                       l1753 60E4  
                                     l1745 60B0                                       l1729 5FCC  
                                     l2457 698A                                       l1738 6036  
                                     l1747 60C0                                       l1749 60D0  
                                     l1766 859C                                       l2680 230A  
                                     l1955 9600                                       l1948 96B0  
                                     l1980 3C06                                       l2778 BB4A  
                                     l2878 77DA              __end_ofi2_getNextWriteMessage 8DF2  
                                     _BIE0 0E7E                         doEvuln@eventNumber 01CE  
                                     ?_pop 008D                           setOutputState@io 0095  
                                     _EEIF 7DBE                     __end_of_checkPowerOnPb B2A0  
                                     _LATA 0F89                                       _LATB 0F8A  
                                     _LATC 0F8B                                       _IPR5 0F78  
                        doEvuln@nodeNumber 01CC                      __end_of_sodTRCallback 82C0  
                           configIO@action 01BF                                       _WPUB 0F5B  
                        setOutputPin@state 0091                             i2_setOutputPin 7038  
                              _outputState 02E4                              _pushTwoAction B1E4  
                    i1_getNextWriteMessage 8C50                                       _have ABDA  
                                     _main B788                                       _name 0848  
                                     _loop 6B08                                       _poll 38A6  
               __end_of_mnsTRrqnpnCallback BDAA                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       _push 3F76  
                      setMultiState@action 0091                                       btemp 0052  
                         ?_producerEsdData 0001                          ?_removeTableEntry 0001  
              sodTRCallback@happeningIndex 01D8                                       pop@q 008D  
                                     prodh 0FF4                                       prodl 0FF3  
                          __end_ofi2_getNV BB30                                       start 081C  
                             ?_loadNvCache 0001                         bounceDown@reversed 01B8  
          APP_GetEventState@happeningIndex 01BB                              setupTimer1@io 009C  
                      _setExpeditedActions C3C2                              setupTimer3@io 009C  
               __end_of_startDigitalOutput 573A                             _setBounceState 941E  
              consumer2QProcessMessage@end 03C7                consumer2QProcessMessage@enn 03CA  
                     ??i2_getBufferPointer 0003                consumer2QProcessMessage@opc 03C9  
                       ??_removeTableEntry 01C1                              ?_APP_testMode 0001  
                          getEN@tableIndex 00A1                               ___param_bank 0000  
                           ??_APP_addEvent 00A9                      __end_of_defaultEvents 7614  
                         ?_producerPowerUp 0001                          findServiceIndex@i 0090  
                              completed@io 0092                       __end_of_EEPROM_Write AE6A  
                              _uptimeTimer 015C                                      ??_pop 008F  
                                    l20001 B3B8                                      l20021 B3E8  
                                    _B0CON 0E80                                      l20113 3F26  
                                    l20105 3ED4                                      l20045 3C6E  
                                    l20117 3F44                                      l20207 A42C  
                                    l20151 55B2                                      l20071 3D24  
                                    l20039 3C46                                      _B1CON 0E90  
                                    l21113 B4D2                                      l21105 B4BA  
                                    l20161 562A                                      l20137 5542  
                                    l22001 76DE                                      l21017 B218  
                                    l20321 2DBA                                      l20313 2D6A  
                                    l20081 3DD0                                      l20065 3CF0  
                                    l20057 3CAC                                      l20049 3C8A  
                                    l20219 A452                                      l21131 A648  
                                    l21123 A62A                                      l20171 5674  
                                    l22011 7718                                      l22003 76E0  
                                    l21051 C194                                      l20411 AB42  
                                    l20091 3E1A                                      l20083 3DE8  
                                    l20075 3D4C                                      l20067 3CFC  
                                    l20059 3CBE                                      l21109 B4C6  
                                    l20501 2AD2                                      l21045 C190  
                                    l21037 C18C                                      l20405 AB3E  
                                    l20341 2EC4                                      l20333 2E38  
                                    l20309 2D5A                                      l21127 A62E  
                                    l21143 A680                                      l21119 B4DE  
                                    l20167 564A                                      l21151 B2A6  
                                    l20511 2C9C                                      l20423 5A08  
                                    l21311 09F6                                      l21303 0970  
                                    l22015 771E                                      l20327 2DFA  
                                    l20095 3E4E                                      l21215 81E8  
                                    _B2CON 0EA0                                      l20185 56FE  
                                    l20177 569C                                      l20505 2B2A  
                                    l21321 0A70                                      l22033 7744  
                                    l22025 773C                                      l20601 867A  
                                    l20345 2F04                                      l20089 3E0E  
                                    l21233 8228                                      l20275 ABCE  
                                    l20267 AB72                                      l21163 B2CA  
                                    l21155 B2B2                                      l20515 2CF2  
                                    l20443 5B10                                      l20435 5AA8  
                                    l21411 0F3E                                      l22115 8070  
                                    l22107 7FE6                                      l20195 BCCA  
                                    l20363 3010                                      l20099 3E82  
                                    l21243 8258                                      l20701 85DC  
                                    l21181 9FAC                                      l21173 9F8E  
                                    l21069 A760                                      l20293 B9F2  
                                    l20461 5BC2                                      l21501 151A  
                                    l21341 0B64                                      l21333 0AE0  
                                    l21317 0A3C                                      l21309 09D8  
                                    l22061 9DD8                                      l22125 809C  
                                    l22045 B950                                      l22053 B970  
                                    l22037 774C                                      l20613 8688  
                                    l20605 867E                                      l22301 C0DE  
                                    l20381 30CA                                      l20357 2FD0  
                                    l20349 2F42                                      l21253 8270  
                                    l22141 B10A                                      l21095 A3A0  
                                    l21159 B2BE                                      l20519 2CF6  
                                    l20447 5B38                                      l21431 107E  
                                    l21351 0BDE                                      l21327 0AB0  
                                    l20535 A71C                                      l20551 BC94  
                                    l20375 308C                                      l20391 3158  
                                    l21255 8298                                      l21239 8240  
                                    l22215 7B38                                      l22207 7AE6  
                                    l23103 184E                                      _B3CON 0EB0  
                                    l20705 85E8                                      l21177 9F92  
                                    l20289 B9DE                                      l21169 B2D6  
                                    l20449 5B50                                      l20473 5C1C  
                                    l21505 1576                                      l21425 0FF2  
                                    l21513 15E0                                      l21601 9C0C  
                                    l22081 9E0A                                      l22073 9DF6  
                                    l22065 9DE2                                      l22057 9DCE  
                                    l20609 8684                                      l22305 C0E2  
                                    l20369 304E                                      l21249 8264  
                                    l22233 ADA4                                      l22137 B106  
                                    l22145 B10E                                      l23105 1886  
                                    l23033 7E20                                      l21265 AA8A  
                                    l20723 BA86                                      l21195 9FF8  
                                    l20491 291C                                      l20475 5C4C  
                                    l21515 160E                                      l21443 1180  
                                    l21435 10D4                                      l21427 102A  
                                    l21523 1692                                      l21347 0BAA  
                                    l21339 0B46                                      l20539 A720  
                                    l20643 86B2                                      l20627 869C  
                                    l20619 8698                                      l22315 C0EA  
                                    l22323 AEDC                                      l23123 18D8  
                                    l23115 18AC                                      l23027 7DF8  
                                    l20709 85FA                                      l21525 16C2  
                                    l21509 15A8                                      l21461 127A  
                                    l21453 1216                                      l21445 1192  
                                    l21381 0D8C                                      l21357 0C16  
                                    l21293 090C                                      l21373 0D28  
                                    l21285 085A                                      l22085 9E14  
                                    l22077 9E00                                      l22069 9DEC  
                                    l21621 BF2C                                      l20581 866A  
                                    l20573 8662                                      l20661 86C4  
                                    l22309 C0E6                                      l22341 9D6E  
                                    l22165 90EE                                      l22157 9094  
                                    l22181 A966                                      l23109 188A  
                                    l21269 AA96                                      l21277 AACA  
                                    l21455 1234                                      l21439 112A  
                                    l21375 0D66                                      l21367 0CCC  
                                    l21295 092E                                      l22095 9E28  
                                    l21623 BF34                                      l20639 86A0  
                                    l22191 7A68                                      l24023 22D2  
                                    l23231 1B98                                      l23215 1AC2  
                                    l23207 1A96                                      l23151 1952  
                                    l23063 1704                                      l23047 7E6A  
                                    l23039 7E4C                                      l22431 988C  
                                    l22423 9852                                      _B4CON 0EC0  
                                    l21801 5FDE                                      l20681 8588  
                                    l22601 625C                                      l21481 1396  
                                    l21473 1332                                      l21465 12B0  
                                    l21369 0CF4                                      l21297 0940  
                                    l21289 08B6                                      l21609 9C88  
                                    l22089 9E1E                                      l20585 866E  
                                    l20577 8666                                      l20673 BC5E  
                                    l20737 BC28                                      l20825 BBF2  
                                    l20921 BBBC                                      l21721 C280  
                                    l22361 C170                                      l22353 C16C  
                                    l21705 A8C0                                      l22329 AF32  
                                    l22265 ACF0                                      l22249 BB3A  
                                    l24201 26A6                                      l24121 2556  
                                    l24025 22D6                                      l23241 1BCE  
                                    l21635 8498                                      l20931 B42A  
                                    l21803 6030                                      l20683 8592  
                                    l22531 4B6A                                      l22515 4ACE  
                                    l22507 4A58                                      l22603 6264  
                                    l21475 1350                                      l21395 0E5A  
                                    l21563 A0E8                                      l22451 9900  
                                    l21619 BF24                                      l21627 BF3C  
                                    l23411 4356                                      l22347 9DC4  
                                    l23315 20D0                                      l23227 1B1A  
                                    l23219 1AEC                                      l23139 191A  
                                    l23083 1780                                      l23059 16D8  
                                    l22419 984A                                      l21813 6064  
                                    l20693 85C4                                      l22525 4B2C  
                                    l22533 4B80                                      l22517 4ADE  
                                    l22541 4BF2                                      l21493 1462  
                                    l23405 433A                                      l20597 8676  
                                    l20589 8672                                      l21717 C27C  
                                    l20909 BF9A                                      l22197 7AA0  
                                    l22293 9334                                      l22285 9300  
                                    l22277 92D0                                      l24221 2716  
                                    l24141 25A6                                      l24029 22DA  
                                    l23261 1CFC                                      l23253 1CD0  
                                    l23157 1962                                      l23077 1778  
                                    l23149 1926                                      l24301 5DC6  
                                    l22437 98DC                                      l22381 7B90  
                                    l20927 B416                                      l21807 603A  
                                    l20687 85A6                                      l20679 857E  
                                    l22527 4B42                                      l22543 4C02  
                                    l22463 9948                                      l23423 43A0  
                                    l21727 C284                                      l22367 C174  
                                    l21655 A26E                                      l21735 B990  
                                    l22287 9312                                      l24119 2550  
                                    l24063 23FC                                      l24047 2386  
                                    l23351 2184                                      l23247 1C84  
                                    l23095 182C                                      l23079 177C  
                                    l24303 5E1E                                      l22375 7B5E  
                                    _B5CON 0ED0                                      l21761 5F2E  
                                    l20697 85D0                                      l20689 85B8  
                                    l22537 4BBE                                      l22481 4932  
                                    l21497 14BE                                      l23417 437C  
                                    l20881 8A2C                                      l22297 934C  
                                    l24161 25F6                                      l22801 378A  
                                    l23337 2148                                      l23281 1E54  
                                    l23185 1A08                                      l23177 19C2  
                                    l23169 1996                                      l23089 17A6  
                                    l22393 7C3A                                      l15267 A5C4  
                                    l21819 608A                                      l22539 4BE0  
                                    l22635 633A                                      l22563 6158  
                                    l22555 614C                                      l21579 A056  
                                    l23435 4422                                      l20859 BD00  
                                    l21667 83F2                                      l24243 27D8  
                                    l22723 3584                                      l23339 215A  
                                    l23267 1D40                                      l23371 21B4  
                                    l23523 4612                                      l24307 5E64  
                                    l24315 5E9C                                      l15419 BEFC  
                                    l22379 7B82                                      l15269 A5D0  
                                    l21773 5F82                                      l21757 5F24  
                                    l20981 7ECC                                      l22477 492A  
                                    l22629 6310                                      l22637 633E  
                                    l22645 636A                                      l22581 61A0  
                                    l22653 6778                                      l23461 4506  
                                    l20893 8A9E                                      l24181 2646  
                                    l22725 3604                                      l22709 352E  
                                    l22901 9F3E                                      l23277 1D6E  
                                    l23541 4688                                      l24317 5EC6  
                                    l23509 BFD2                                      l24413 8834  
                                    l22389 7C08                                      l15279 A604  
                                    l21767 5F5A                                      l21847 60EA  
                                    l22495 49BE                                      l22575 6188  
                                    l22663 6800                                      l20879 89EE  
                                    l21687 BD86                                      l23703 A86E  
                                    l24079 2482                                      l23295 2076  
                                    l23287 2048                                      l23631 48C6  
                                    l23607 4806                                      l23535 4644  
                                    l24271 5C74                                      l24351 97E6  
                                    l20985 7F08                                      l22569 6170  
                                    l22673 687E                                      l21961 C262  
                                    l23705 A874                                      l22825 37C6  
                                    l22761 36E4                                      l22745 3666  
                                    l22913 9F5C                                      l23545 468C  
                                    l24513 3BE4                                      l24505 3B12  
                                    l23731 95A6                                      l20995 7F80  
                                    l22587 61B8                                      l22683 68F4  
                                    l21875 9B5E                                      l21867 9AF6  
                                    l23467 455C                                      l23459 4500  
                                    l21971 C26A                                      l21699 A8AC  
                                    l24099 24CE                                      l22843 384E  
                                    l22835 382C                                      l22827 380C  
                                    l23299 2092                                      l23619 4870  
                                    l23539 4682                                      l24275 5C78  
                                    l24267 5C52                                      l24259 C072  
                                    l24347 97DE                                      l20989 7F44  
                                    l20997 7FB4                                      l22685 6900  
                                    l22669 6856                                      l21965 C266  
                                    l23709 A878                                      l22845 3854  
                                    l22853 3862                                      l22773 370E  
                                    l22765 36FA                                      l22781 3724  
                                    l23557 46E2                                      l23645 48F2  
                                    l24461 3938                                      l22925 C096  
                                    l24357 97F2                                      l19007 3422  
                                    l23719 9656                                      l24439 B268  
                                    l21983 7658                                      l21975 7616  
                                    l23903 69AA                                      l22791 3768  
                                    l22759 369E                                      l23591 47B0  
                                    l23823 99A6                                      l24279 5CE2  
                                    l18401 B1BA                                      l19009 3424  
                                    l19017 3436                                      l19113 519C  
                                    l24393 6C6E                                      l24385 6C0E  
                                    l23489 45EE                                      l22777 371A  
                                    l22953 65EE                                      l22961 6606  
                                    l23569 4738                                      l24473 399C  
                                    l19203 94E4                                      l24379 6BB8  
                                    l22939 65A4                                      l23579 4762  
                                    l23835 99D8                                      l24467 3996  
                                    l23667 B906                                      l19141 6CD2  
                                    l19029 350C                                      l21997 769A  
                                    l23925 6A28                                      l23941 6AF0  
                                    l23693 A836                                      l22981 662E  
                                    l23597 47DC                                      l23853 9A06  
                                    l23765 6EE6                                      l18407 B1C4  
                                    l19135 BA68                                      l19151 6D94  
                                    l19055 4F34                                      l23695 A85C  
                                    l22895 9F2A                                      l22983 6680  
                                    l23839 99DC                                      l23759 6EDE  
                                    l19129 BA58                                      l19153 6DD2  
                                    l19145 6D14                                      l19161 6E52  
                                    l19305 A330                                      l19313 A366  
                                    l19225 9564                                      l19217 9508  
                                    l19233 9578                                      l19049 4F18  
                                    l22889 9F10                                      l22985 6696  
                                    l22993 66B0                                      l19147 6D52  
                                    l19307 A33C                                      l19171 A1EE  
                                    l18507 B6A0                                      l22995 66E8  
                                    l19157 6E14                                      l19413 4C6E  
                                    l19333 63A0                                      l19093 50A6  
                                    l24597 B7C8                                      l18383 B774  
                                    l18463 A552                                      l18447 A52E  
                                    l18631 8E22                                      l19431 4CEC  
                                    l19407 4C16                                      l18551 779E  
                                    l18703 7C86                                      l19351 64FA  
                                    l19327 6398                                      l19247 8902  
                                    l23983 2220                                      l23967 BF58  
                                    l18393 B18A                                      l18617 AE66  
                                    l18633 8E26                                      l19441 4D54  
                                    l19433 4D02                                      l19425 4CCA  
                                    l19417 4C8C                                      l19409 4C2C  
                                    l18545 778C                                      l18721 7CA6  
                                    l19601 AC6E                                      l23977 2202  
                                    l19451 4DE4                                      l19443 4D92  
                                    l19179 A218                                      l18811 8182  
                                    l18715 7CA2                                      l19259 89C0  
                                    l19531 7520                                      l23995 225C  
                                    l18397 B1A2                                      l18493 A59A  
                                    l18645 8EBC                                      l18637 8E38  
                                    l19461 4E74                                      l19453 4E22  
                                    l19189 A258                                      l18805 8170  
                                    l18557 77E8                                      l19533 7548  
                                    l19517 B610                                      l19621 ACB4  
                                    l19613 AC9C                                      l19605 AC7C  
                                    l23989 2256                                      l18583 AE0C  
                                    l18655 9230                                      l18815 8186  
                                    l18751 7D22                                      l19375 656A  
                                    l19359 6540                                      l19607 AC84  
                                    l19711 8B98                                      l19703 8B90  
                                    l19297 A2F6                                      l19465 4EB2  
                                    l18569 785A                                      l18737 7CDA  
                                    l18833 7952                                      l19369 6552  
                                    l19529 74CC                                      l19537 75F4  
                                    l19641 B178                                      l19553 A4AA  
                                    l19617 ACA6                                      l19299 A2FA  
                                    l18683 B6BC                                      l18763 7D90  
                                    l18843 79CC                                      l18851 7A14  
                                    l19715 8B9C                                      l19707 8B94  
                                    l19731 8BDE                                      l18923 42CC  
                                    l18915 3FD8                                      l19475 9702  
                                    l19811 AF7C                                      l19803 AF3C  
                                    l18845 7A06                                      l19397 B85C  
                                    l19389 B822                                      l19565 A4D0  
                                    l19581 A502                                      l18933 8B14  
                                    l19493 976C                                      l19805 AF52  
                                    l18679 B6AA                                      l18783 80DA  
                                    l18759 7D4C                                      l19567 A4D8  
                                    l19559 A4BA                                      l19719 8BA0  
                                    l19823 87C0                                      l19815 8742  
                                    l19743 9368                                      l18689 B6CE  
                                    l18777 80D4                                      l19585 A510  
                                    l19577 A4F8                                      l19729 8BA4  
                                    l19497 9776                                      l19489 975E  
                                    l19817 8762                                      l19753 93EC  
                                    l19809 AF6C                                      l19649 B7E4  
                                    l19761 9124                                      l18867 B8D6  
                                    l18955 319C                                      l18939 8B56  
                                    l18891 AC40                                      l18883 ABE4  
                                    l19499 977A                                      l19819 8782  
                                    l19747 939A                                      l19763 9132  
                                    l18789 80DE                                      l19597 AC62  
                                    l19677 BEB2                                      l19829 87FE  
                                    l19749 93BA                                      l19757 940C  
                                    l19837 9A7C                                      l19773 9190  
                                    l19853 B36A                                      l18975 3228  
                                    l19695 8B8C                                      l19791 9476  
                                    l19767 9152                                      l18993 3370  
                                    l18969 321E                                      l19785 9424  
                                    l19769 9162                                      l19865 B394  
                                    l19857 B37A                                      l18979 322E  
                                    l19883 B510                                      l19795 94A8  
                                    l19789 9456                                      l19869 B39E  
                                    l19983 C106                                      l19799 94C8  
                                    ?_have 0001                                      ?_main 0001  
                ??_consumer2QGetDiagnostic 008F                               ?_initOutputs 0001  
                      processEnumeration@i 01C1                            __end_of___awdiv A51A  
                                    _EEADR 0F74                                      ?_loop 0001  
                        setOutputState@act 0093                            __end_of___awmod ACBE  
                                    ?_poll 0001                                      ?_push 008D  
                                    _BSEL0 0E7D                            __end_of___lldiv A624  
                                    u20000 87A0                                      u20010 87DE  
                                    _T0CON 0FD5                                      u21011 2E56  
                                    u20300 3CEC                            ___awdiv@divisor 0099  
                                    u20400 3E4A                                      u20320 3D20  
                                    u20240 3C42                                      u20250 3C86  
                                    u21300 291C                                      u20420 3E7E  
                                    u20340 3D48                                      u21061 2F60  
                                    u20510 54E0                                      u21310 294E  
                                    u20520 54E2                                      u21320 2950  
                                    u20440 3EA2                                      u20360 3DCC  
                                    u20280 3CA8                                      u22040 8260  
                                    u20530 555A                                      u21250 5BAE  
                                    u21410 BC8A                                      u20450 3ED0  
                                    u20700 56D0                                      u20540 555C  
                                    u21180 5A02                                      u22300 0CBA  
                                    u21420 8694                                      u22060 AABE  
                                    u20710 570A                                      u21190 5A04  
                                    u22310 0CE2                                      u21510 BC1E  
                                    u20470 3EF4                                      u22070 AAC0  
                                    u20720 570C                                      u20560 557C  
                                    u22320 0CE4                                      u21440 BC54  
                                    u20480 3F22                                      u23050 60B6  
                                    u20650 5698                                      u20570 557E  
                                    u21290 28FA                                      u22170 0A9C  
                                    u23060 60C6                                      u20660 569A  
                                    u22340 0E14                                      u22180 0A9E  
                                    u21620 BCF6                                      u20740 BCC0  
                                    u24030 4BA8                                      u22350 0E16  
                                    u23230 7654                                      u21630 89EA  
                                    u24040 4BAA                                      u20760 A428  
                                    u22600 14AC                                      u23400 80BA  
                                    u20930 B9EE                                      u20690 56CE  
                                    u24050 6146                                      u22610 14AE  
                                    u22290 0CB8                                      u23250 76D8  
                                    u21724 7EFC                                      u22380 0EFA  
                                    u21580 BBE8                                      u21725 7EF8  
                                    u21734 7F38                                      u24230 6828  
                                    u22630 1508                                      u22390 0EFC  
                                    u23270 76F8                                      u21735 7F34  
                                    u21744 7F74                                      u21920 A67C  
                                    u24240 682A                                      u22640 150A  
                                    u22720 A132                                      u23360 803A  
                                    u21680 BBB2                                      u24320 352A  
                                    u25008 1F2A                                      u21745 7F70  
                                    u23345 7FFA                                      u25009 1F3E  
                                    u22570 1450                                      u22490 1296  
                                    u22730 A134                                      u25210 4544  
                                    u25018 1FA8                                      u25019 1FBC  
                                    u14900 A5D4                                      u21940 9FA8  
                                    u24180 6344                                      u22660 1564  
                                    u22580 1452                                      u25140 43E0  
                                    u25028 2026                                      u25029 203A  
                   APP_GetEventState@flags 01B8                                      u18110 C350  
                                    u22670 1566                                      u22750 A0A0  
                                    u23374 804E                                      u22910 B98C  
                                    u23710 9888                                      u23375 804A  
                                    u22760 A0A2                                      u25240 45AE  
                                    u25160 440C                                      u24600 65A0  
                                    u23720 988A                                      u22930 5F08  
                                    u21890 A644                                      u22690 1682  
                                    u23810 9976                                      u26210 6C56  
                                    u25170 4462                                      u25090 431A  
                                    u22850 83EE                                      u19100 A214  
                                    u18300 77DE                                      u22828 853E  
                                    u21980 9FF0                                      u26220 6CAE  
                                    u25420 A830                                      u24540 389C  
                                    u24700 7DC6                                      u22829 8550  
                                    u25405 B92A                                      u25190 44D8  
                                    u24550 9F0C                                      u25350 479C  
                                    u25406 B92C                                      u25510 6F10  
                                    u19024 6D08                                      u23920 4A54  
                                    u25280 460E                                      u19025 6D04  
                                    u19034 6D44                                      u18090 C358  
                                    u18410 8E64                                      u23930 4A56  
                                    u23770 992E                                      u25370 4840  
                                    u19035 6D40                                      u18340 AE32  
                                    u22868 8436                                      u25540 99A2  
                                    u22869 844A                                      u19054 6D88  
                                    u19310 A324                                      u26190 6BF6  
                                    u25630 69A8                                      u25438 A83A  
                                    u25710 2250                                      u26510 3BEE  
                                    u19055 6D84                                      u25439 A856  
                                    u19064 6DC4                                      u19320 A326  
                                    u18280 7780                                      u23960 4A98  
                                    u26360 397E                                      u19065 6DC0  
                                    u18530 7D98                                      u23970 4A9A  
                                    u26258 88DA                                      u26259 88EC  
                                    u19084 6E08                                      u18428 8E68  
                                    u18380 8E0E                                      u19340 6394  
                                    u19085 6E04                                      u19094 6E44  
                                    u18550 80D0                                      u26438 3AD0  
                                    u19095 6E40                                      u26439 3AE2  
                                    u19280 A304                                      u19504 4D84  
                                    u18800 3224                                      u19505 4D80  
                                    u19290 A306                                      u19530 4DA8  
                                    u18570 8168                                      u25690 221C  
                                    u19604 4EA4                                      u19380 6548  
                                    u19620 96FE                                      u24948 1C34  
                                    u19605 4EA0                                      u19365 64B6  
                                    u24949 1C56                                      u19366 64BA  
                                    u19710 A4DC                                      u19278 A80E  
                                    u26398 3A42                                      u26399 3A54  
                                    u19544 4DD8                                      u19480 4D18  
                                    u18840 342A                                      u19545 4DD4  
                                    u19554 4E14                                      u26498 3BC4  
                          reqevCallback@ev 01D9                                      u19555 4E10  
                     __end_of_factoryReset 8578                                      u26499 3BD6  
                                    u19580 4E38                                      u19820 B16C  
                                    u19494 4D48                                      u19495 4D44  
                                    u19840 B7EE                                      u18945 4F94  
                                    u19594 4E68                                      u19770 AC88  
                                    u19850 B7F0                                      u19595 4E64  
                                    u19870 B804                          _initTimedResponse C3B6  
                                    u19890 B810                             ?_APP_nvDefault 0001  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                 __end_of_nvTRnvrdCallback B9C6                               i2_canTxError B062  
         __end_of_factoryResetGlobalEvents C3DE                             _APP_nvValidate AAF6  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0008  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 911E  
                          __end_of_doNenrd AD2E                       ?_setExpeditedActions 0001  
             nvProcessMessage@valueOrError 01FB                            __end_of_doEvuln A992  
                           _ackDiagnostics 01B4                            __end_of_doNnclr BD7A  
                          __end_of_doNnevn AE02         sendInvertedProducedEvent@happening 01CD  
                          __end_of_doReqev 7B58                            __end_of_doReval 9362  
                                    i1_pop 9B68                                      i2_pop 9C9A  
                          __end_of_doRqevn BB68                            __end_of_getHash C1C6  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 002F  
                       ?_initTimedResponse 0001                         __p_paramBlock_text 0820  
                          __end_of_highIsr 9058                              ?_leds_powerUp 0001  
                          __end_of_isEvent C01C                            __end_of_configs EE75  
                                    _canId 00C3                                      _doSOD C290  
              ??_sendInvertedProducedEvent 00A9                                      _getEN A992  
                                    _getNN 91E2                                      _getNV BA42  
                                    _getEv 776E                           needsStarting@act 008D  
                     _enumerationStartTime 002B                            __end_of_readNVM B1E4  
                          __end_of_isrHigh 83AC                                      _setNV A89C  
                   __end_ofi2_setOutputPin 71E6                                      _numEv 89D4  
                                    have@i 0090                                      _speed 0100  
                                    _setup 979A                        canReceiveMessage@mp 01C6  
                          __end_of_mnsPoll 4600                              setNV@oldValue 01F5  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B404  
                          ?_checkPowerOnPb 0001                            __end_of_setType B184  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 0001  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01D2            mnsTRallDiagnosticsCallback@type 0001  
                                    poll@i 03EA                                      poll@m 03EB  
                         __end_ofi2_canIsr C2F2                            __end_of_powerUp 88F8  
                                    plusw2 0FDB                                      push@m 008E  
                                    push@q 008D                    reqevCallback@tableIndex 01DF  
                                    ttemp5 0053                                      ttemp6 0056  
                                    ttemp7 005A                           _setServoPosition C0B4  
                                    status 0FD8                                      wtemp8 0053  
                            ?_nvGetESDdata 0001                     __end_of_setBounceState 94DA  
                  reqevCallback@nodeNumber 01DB                            __end_of_writeEv 351C  
                 ?_updateModuleErrorStatus 0001                 __end_of_startTimedResponse BA04  
                             bounceDown@io 01BB                           ?_nvGetDiagnostic 008D  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01BF                            __initialization AE6A  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have AC4C                               __end_of_main B7D2  
                             __end_of_name 0850                               __end_of_loop 6CCC  
                             __end_of_poll 3C16                               __end_of_push 42D0  
                            ?_nerdCallback 01D1                           i2canFillRxFifo@m 000D  
                         _setupTimer1$1922 0098                           _setupTimer3$1926 0098  
                     __end_of_getParameter 873C                  __end_of_initTimedResponse C3BC  
                   __end_of_APP_nvValidate AB68                                     ??_have 008D  
                             ?_setNewCanId 0001                                     ??_main 00A9  
                         ?_eraseFlashBlock 0001                                     ??_loop 01E5  
                             ?_sendMessage 01B8                                     ??_poll 03E5  
                                   ??_push 0090                      __end_of_reqevCallback 9DC8  
                 __end_of_ackEventCheckLen C2DA                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01F7                          _pollsPerStepSpeed 0294  
                                   ?i1_pop 0060                                     ?i2_pop 0001  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00CE  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 881C                                     ?_doSOD 0001  
                    __end_of_setServoState 941E                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 016C                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 6574  
                                   ?_setNV 01F2                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7B                                     ?_numEv 0001  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 0005  
                                   _CIOCON 0F70                                     ?_setup 0001  
                      APP_nvValidate@index 00A0        consumer2QProcessMessage@firstAction 03CE  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 009F  
                       setOutputState@type 0094                                  ??i2_getNV 0003  
                                   i1l2011 C068                     ?i1_getNextWriteMessage 0060  
                                   i1l2060 8302                           reqevCallback@nEv 01D8  
                                   i2l2011 C140                                     i1l2483 547E  
                                   i2l2055 8378                                     i2l2483 59C6  
                                   _TABLAT 0FF5                         rebuildHashtable@ev 01BB  
                   _producerProcessMessage 5C50                    ackEventProcessMessage@m 01F7  
                                   _TBLPTR 0FF6                             ??_nvGetESDdata 008D  
                            _needsStarting A624            __end_of_consumer2QGetDiagnostic BCE4  
                                   _TXB0D0 0F26                                     _TXB0D1 0F27  
                                   _TXB0D2 0F28                                     _TXB0D3 0F29  
                                   _TXB0D4 0F2A                                     _TXB0D5 0F2B  
                                   _TXB0D6 0F2C                                     _TXB0D7 0F2D  
                         __end_of_checkLen A724                               ?_removeEvent 01C7  
                          ?_setBounceState 0091                        setServoPosition@pos 009F  
                           _clearAllEvents B50A                   __end_of_APP_factoryReset C120  
                     __end_of_getTwoAction C3AE                        setServoState@action 0091  
                          setMultiState@io 0092                              _canFillRxFifo 71E6  
                              initTicker@i 008F                          ?_findServiceIndex 0001  
                         _rebuildHashtable 7C80                           ??_processActions 00A9  
                        _canProcessMessage 9994                                     i1pop@q 0060  
                            teachPowerUp@i 01C1                                     i2pop@q 0001  
                          completed@action 008D                         finaliseOutput@type 008D  
                 reqevCallback@eventNumber 01DD                 __end_of_APP_nvValueChanged 3188  
                          setServoState@io 0092                           __end_of_configIO 4EEA  
                       ??_findServiceIndex 008D                  _sendInvertedProducedEvent B7D2  
                       _processEnumeration 7614                                readInput@io 0093  
                       ?_canProcessMessage 01F7                           pollServos@midway 01D3  
               startDigitalOutput@pinState 01D6                             teachCheckLen@m 01C9  
             ??_timer3DoneInterruptHandler 0009                           __end_of_bounceUp 5C50  
                         pollServos@target 01D1                                     ___lmul B404  
                 __end_of_mnsGetDiagnostic BC78                             ??_nerdCallback 00A9  
                                   _canIsr C1C6            checkRemoveTableEntry@tableIndex 01C7  
                                   _canPri EE87                                     ___wmul C01C  
                                ??___awdiv 009B                                     _doNerd C242  
                                ??___awmod 0091                      _APP_preProcessMessage C3D4  
                                   _doWait A37E                           ??_finaliseOutput 008E  
                                   _getEVs 80BE                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                            sodTRCallback@io 01DD  
                            _nvDiagnostics 01AC                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy B93E  
                                ??_doEvlrn 00A9                                  ??_doNenrd 00A9  
                                   _isrLow 82C0                                  ??_doEvuln 00A9  
                                   getNN@f 00A1                                  ??_doNnclr 00A9  
                                   clear_0 AE72                                     clear_1 AE84  
                                   clear_2 AE90                                  ??_doNnevn 01C0  
                                   clear_3 AE9C                                     clear_4 AEA8  
                                   clear_5 AEB4                                     clear_6 AEC0  
                                ??_doReqev 00A9                                  ??_doReval 01C6  
                                   _lowIsr 8EC0                                     _saveNV BABC  
                         ___awdiv@quotient 009D                                     getEv@f 00A4  
                 __end_of_setDigitalOutput A37E                            ___awmod@divisor 008F  
                                ??_doRqevn 00A9                           flushFlashBlock@i 008F  
                      ?_processEnumeration 0001                                     have@id 008F  
                                ??_getHash 00A7                            ??_APP_nvDefault 009F  
                      ??_canProcessMessage 01F9                                     isa$std 0001  
                          ___awmod@counter 0091                            ?_APP_nvValidate 009F  
                         ??_processOutputs 01C9                                  ??_highIsr 001A  
                                ??_isEvent 008D             __end_of_ackEventProcessMessage 6772  
                 __end_of_setNormalActions C3C2                producerProcessMessage@index 02FF  
                                ??_readNVM 0094                   nerdCallback@serviceIndex 01D1  
                                ??_isrHigh 001F                              i2_checkTxFifo 573A  
                    ackGetDiagnostic@index 0091                          _canReceiveMessage 6944  
               __end_of_teachGetDiagnostic BD1A                           _nvProcessMessage 4600  
                                   numEv@f 00A2                                  ??_mnsPoll 01C5  
                                   pop@ret 0094                           canFillRxFifo@ptr 006E  
                        ??_mnsFactoryReset 00A9                               __mediumconst ED34  
                                ??_tickGet 0091                           __end_of_services EE87  
                       _tableIndexToEvtIdx C392                findServiceIndex@serviceType 008F  
                                ??_setType 00A9                                     tblptrh 0FF7  
                                   tblptrl 0FF6                          doEvlrn@nodeNumber 01EC  
                                   tblptru 0FF8                               ??_FLASH_Read 008F  
                            _initInputScan 9844                           __end_of_quantity BBA0  
                        nvProcessMessage@m 01F7                         ?_canReceiveMessage 01C2  
                                ??_powerUp 01C2                          __end_ofi1_isEvent C06C  
                             i2getNV@index 0004                 __end_of_peekTwoActionQueue A494  
                   getParameterFlags@flags 0091                               ?_setupTimer1 0001  
        mnsTRserviceDiscoveryCallback@step 01D2                               ?_setupTimer3 0001  
                          ??_pushTwoAction 008D          mnsTRserviceDiscoveryCallback@type 0001  
                            checkTxFifo@mp 0073                          __end_ofi2_isEvent C144  
                        i2_checkCANTimeout B5B2                       __end_of_APP_addEvent AD9A  
                                ??_writeEv 01CB                               __p_name_text 0848  
                    _checkRemoveTableEntry B8B0                        addEvent@eventNumber 01D7  
                        _expeditedQueueBuf 02F4               nvTRnvrdCallback@valueOrError 01D3  
                         __end_of_writeNVM B6F0                             ?_needsStarting 008D  
                      ?_tableIndexToEvtIdx 0001                     __end_of_clearAllEvents B55E  
                    mnsGetDiagnostic@index 0091                          __end_ofi1_tickGet B4B4  
                   startServoOutput@action 0091                       ??_processEnumeration 01BB  
                       ?i2_checkCANTimeout 0001                                 __accesstop 0060  
                  __end_of__initialization AEC6                  __end_of_canProcessMessage 9A32  
                        __end_ofi2_tickGet B354                              bounceDown@tmp 01B9  
                      ??_canReceiveMessage 01C4                          EEPROM_Write@index 008F  
                           nvGetESDdata@id 008D                          EEPROM_Write@value 0091  
                           ?_canFillRxFifo 0001                             setOutputPin@io 0094  
                   checkRemoveTableEntry@e 01C8                              doEvuln@result 01D0  
                            ___rparam_used 0001                         teachCheckLen@learn 01CC  
                               _eeBootFlag 0042                          i1tickGet@IntFlag1 0065  
                        i1tickGet@IntFlag2 0064                    ??_handleSelfEnumeration 0099  
                ?_factoryResetGlobalEvents 0001                              ?_teachPowerUp 0001  
                         FLASH_Write@index 0090                          _getParameterFlags B354  
                            __end_ofi1_pop 9C02                           FLASH_Write@value 0092  
                            __end_ofi2_pop 9D32                        ??i2_checkCANTimeout 0016  
                           __pcstackCOMRAM 0001                 ?i1_updateModuleErrorStatus 0001  
mnsTRserviceDiscoveryCallback@serviceIndex 01D1                             _io@inputs$F849 00D0  
                               _canEsdData C25C                              __end_of_doSOD C2AA  
                       ?_getParameterFlags 0001                              __end_of_getEN AA0C  
                            __end_of_getNN 92A4                              __end_of_getNV BA80  
                            __end_of_getEv 78C4                         __end_of_FLASH_Read B788  
                               _ackPowerUp C090                     ackEventCheckLen@needed 01CB  
                            __end_of_setNV A918                              __end_of_numEv 8AAC  
                            __end_of_setup 9844                       ??_tableIndexToEvtIdx 008D  
                             i1isEvent@opc 0061                               ??_APP_lowIsr 0060  
                   consumer2QEsdData@index 008D                         APP_factoryReset@io 01EB  
                             ?_startServos 0001                  __end_of_canReceiveMessage 6B08  
                             ?_startOutput 01D9               nvTRnvrdCallback@serviceIndex 01D1  
               __end_of_bootProcessMessage 9F88                                  ?i2_canIsr 0001  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 0001  
                               _canTxError B000                                 _canService EF69  
                               _canPowerUp 6E8A                    producerProcessMessage@h 02FE  
                  producerProcessMessage@m 01F7                                    ??i1_pop 0062  
                                  ??i2_pop 0003                             ?_initInputScan 0001  
                reqevCallback@serviceIndex 01D1                       __end_of_APP_testMode C3E0  
               rebuildHashtable@tableIndex 01C0               __end_of_deleteHappeningRange 89D4  
                __end_ofi2_checkCANTimeout B606               consumer2QGetDiagnostic@index 0091  
                                  ??_doSOD 0095                              completed@type 008E  
                                  ??_getEN 0099                                    ??_getNN 0099  
                                  ??_getNV 008F                                    ??_getEv 009F  
                  startDigitalOutput@state 01D1                                saveNV@index 01BD  
                           canFillRxFifo@m 006C                                    ??_setNV 01F3  
                            ?_sendMessage2 00A5                              ?_sendMessage3 00A5  
                            ?_sendMessage4 00A5                              ?_sendMessage5 01C0  
                            ?_sendMessage6 01C0                              ?_sendMessage7 01C0  
                                  ??_numEv 009D                      _setupModePreviousMode 0175  
                                  ??_setup 00A9                               canEsdData@id 008D  
                              saveNV@value 01BA                               readNVM@index 0091  
                 mnsProcessMessage@newMode 01FC                          initTicker@divider 008E  
                             _EEPROM_Write AE02                                 __pbssBANK0 00A9  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               __pbssBANK3 0300                                 __pbssBANK4 0400  
                             loadNvCache@i 009B                               i2isEvent@opc 0002  
                          ?_clearAllEvents 0001                 startTimedResponse@callback 0092  
                          canSendMessage@m 00A0                                 _defaultNVs B606  
                       __end_of_APP_lowIsr C3E2                        setNewCanId@newCanId 01BA  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B3AC  
                               _delayCount 02A4                             _loadFlashBlock B866  
                             _factoryReset 8492                             ??_teachPowerUp 00A9  
                            _setLEDsByMode BF22                              addEvent@evVal 01DA  
                            addEvent@evNum 01D9                             _canDiagnostics 0177  
                            addEvent@error 01E0             __end_of_eventConsumer2QService EF21  
                   processActions@ioAction 01E1                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 01FA                         mnsProcessMessage@i 01F9  
                       mnsProcessMessage@m 01F7                       __end_of_leds_powerUp BD4A  
                   ?_APP_preProcessMessage 008D                                    ?___lmul 0091  
                                  ?_canIsr 0001                       i2tickGet@currentTime 0007  
                                  ?___wmul 0091                               initBounce@io 008D  
                                  ?_doNerd 0001                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C37C                                    ?_getEVs 0001  
                        i2tickGet@IntFlag1 0006                          i2tickGet@IntFlag2 0005  
                                  ?_memcpy 008D                                  ?_addEvent 01D5  
                                  _ECANCON 0F72                                    ?_isrLow 0001  
                       _mnsTRrqnpnCallback BD7A                             ___lmul@product 0099  
                      i1getBufferPointer@b 0062                                    ?_lowIsr 0001  
                                  ?_saveNV 01BA                        setOutputPosition@io 00A3  
                    _setTimedResponseDelay C39C                      _producerGetDiagnostic BBA0  
                                  _BRGCON1 0E43                                    _BRGCON2 0E44  
                                  _BRGCON3 0E45                     processActions@peekItem 01DD  
                 __end_of_setServoPosition C0D8                       __end_of_nvGetESDdata C290  
                               ??i2_canIsr 001A                         _startDigitalOutput 5484  
                         _canGetDiagnostic BBD6                                 _flashBlock 00B9  
                               _flashFlags 00C4                                    i1l20811 5462  
                                  i1l20941 9E6E                                    i1l20961 9EA0  
                                  i1l20953 9E8C                                    i1l20945 9E78  
                                  i1l20937 9E64                                    i1l21905 723C  
                                  i1l20793 536C                                    i1l20965 9EAA  
                                  i1l20957 9E96                                    i1l20949 9E82  
                                  i1l21909 7336                                    i1l21917 7348  
                                  i1l20975 9EBE                                    i1l20969 9EB4  
                                  i1l21881 71E8                                    i1l21929 B02A  
                                  i1l21939 B054                                    i1l24603 82FE  
                                  i1l24549 8EC6                                    i1l19901 B468  
                                  i2l12711 9D28                                    i2l12703 9CC0  
                                  i2l12617 B336                                    i1l19921 B498  
                                  i2l13711 BB18                                    i2l13705 BB08  
                                  i1l19953 8CFA                                    i2l12675 8DCA  
                                  i2l15307 B08C                                    i1l19947 8CB8  
                                  i1l19971 9BF8                                    i1l19963 9B90  
                                  i2l12669 8D88                                    i2l15325 7350  
                                  i2l12597 B304                                    i2l15317 B0B6  
                                  i2l13681 707C                                    i2l15353 749A  
                                  i2l15361 74AC                                    i2l13683 70B8  
                                  i2l13771 A162                                    i2l13763 A14E  
                                  i2l13693 7174                                    i2l13677 703C  
                                  i2l15349 73A0                                    i2l13687 70F8  
                                  i2l13791 A194                                    i2l13783 A180  
                                  i2l13775 A16C                                    i2l13767 A158  
                                  i2l13759 A144                                    i2l13847 58B4  
                                  i2l13689 7134                                    i2l13697 71B0  
                                  i2l13865 59AA                                    i2l24601 8374  
                                  i2l15715 C2FC                                    i2l13787 A18A  
                                  i2l13779 A176                                    i2l24531 8F92  
                                  i2l13797 A19E                                  ?_checkLen 01C5  
                           _setOutputState B4B4                          ?_nvTRnvrdCallback 01D1  
                        reqevCallback@step 01D2                     processActions@nextType 01DE  
                      ?_mnsTRrqnpnCallback 01D1                           ??_checkPowerOnPb 00A9  
                 ackEventProcessMessage@ev 03C7                          ??i2_canFillRxFifo 000D  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00A9                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A7  
                           ??_sendMessage3 00A8                             ??_sendMessage4 00A9  
                           ??_sendMessage5 00A5                             ??_sendMessage6 00A5  
                           ??_sendMessage7 00A5                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01D1                     ?_checkRemoveTableEntry 0001  
                                  _RXFCON0 0E46                           _teachDiagnostics 01B2  
                          ??_needsStarting 008F                                  ?_configIO 0001  
                               _bounceDown 2846                       __end_of_nerdCallback AF36  
                           inputScan@input 01CC                                  ?_bounceUp 0001  
                                  i2_getNV BAF6                            loadFlashBlock@i 008D  
                          ??_canFillRxFifo 006C                             checkLen@needed 01C7  
                             _getParameter 865C                     __end_of_loadFlashBlock B8B0  
                        _sendProducedEvent 96EC                      i2_getNextWriteMessage 8D22  
                          _timerExtension1 00CA                            _timerExtension2 00C9  
                           ?_setLEDsByMode 0001                     mnsTRrqnpnCallback@step 01D2  
                   mnsTRrqnpnCallback@type 0001                         ?_sendProducedEvent 01C1  
                              poll@handled 03E9                       ??_mnsTRrqnpnCallback 00A9  
                        __end_of_findEvent A262                                    __Hparam 0000  
                             initServos@io 00A8                      setOutputPosition@type 00A2  
                            ?_popTwoAction 0001                                    __Lparam 0000  
       __end_of_timer3DoneInterruptHandler C166                 _timer3DoneInterruptHandler C144  
                               _initBounce BFA2                     _APP_postProcessMessage C3D8  
                               _eventTable EF80                       ??_startDigitalOutput 01D2  
                       pbDownTimer@timeout 00A8                                ?_canEsdData 0001  
                        __end_of_pbUpTimer 963C                           pbUpTimer@timeout 00A8  
                               _initTicker B8F8                                    ___awdiv A494  
                               _initRomOps C308                                    ___awmod AC4C  
                 _consumer2QProcessMessage 351C                           _ackGetDiagnostic BC78  
                               _initServos 7B58                                  ?_quantity 008D  
                                  ___lldiv A5A0                        ??_sendProducedEvent 01C2  
                        __end_of_completed A01C                                ?_ackPowerUp 0001  
                              validStart@f 009C               EEPROM_Write@interruptEnabled 0092  
                     startDigitalOutput@io 01D8                                 ??_addEvent 01DC  
                               _currentPos 00A9                                    _doEvlrn 9058  
                               _paramBlock 0820                                    _doNenrd ACBE  
                       canProcessMessage@m 01F7                                    _doEvuln A918  
                                  _doNnclr BD4A                   sodTRCallback@disable_off 01D9  
                                  _doNnevn AD9A                                    _doReqev 7A18  
                                  _doReval 92A4                                    __pcinit AE6A  
                          ??i2_checkTxFifo 000D                                setType@type 01E8  
                            _teachCheckLen B0C4                                    _doRqevn BB30  
                        __end_of_leds_poll 6138                         _startTimedResponse B9C6  
                                  __ramtop 0F00                                    _getHash C1A6  
                                ?_writeNVM 00A4                         doEvlrn@eventNumber 01EE  
                            ??_checkTxFifo 006C                                    __ptext0 B788  
                                  __ptext1 979A                                    __ptext2 C330  
                                  __ptext3 7B58                                    __ptext4 AA84  
                                  __ptext5 BEF6                                    __ptext6 9844  
                                  __ptext7 881C                                    __ptext8 C06C  
                                  __ptext9 6E8A                     __end_of_setOutputState B50A  
                                  _highIsr 8F8E                                    _isEvent BFF4  
                                  _configs EE35                                    _pbTimer 0033  
                                _T0CONbits 0FD5                         APP_nvDefault@index 00A3  
                          getEv@tableIndex 00A5                                ?_canTxError 0001  
                         _EnumerationState 0041                          ??_canFactoryReset 00A9  
                        _mnsProcessMessage 16CE                                    _nvCache 0400  
                          ??_initInputScan 0097                                 _mode_flags 0176  
                                _T1CONbits 0FCD                                ?_canPowerUp 0001  
                                  _readNVM B184                          __end_of_readInput 7FB8  
                           _nvFactoryReset BA80                               _getTwoAction C3A6  
                                  getEN@hi 009D                                    getEN@lo 009F  
                        ?_ackEventCheckLen 01C9                                    _isrHigh 8342  
                        ??_teachGetESDdata 008D                   __end_of_rebuildHashtable 7DA4  
                               ??_checkLen 00A6                           ??i2_setOutputPin 0006  
                                _T3CONbits 0FB1                                    getNN@hi 009D  
                                  getNN@lo 009F                                 _mode_state 00C8  
                                  getEVs@f 00A1                           ___awmod@dividend 008D  
                             _configIO$746 01BD                         doReqev@eventNumber 01C8  
                                  _mnsPoll 42D0                         ?_mnsProcessMessage 01F7  
                                  _tickGet B3AC                               _flashCounter 00BB  
                        doNenrd@tableIndex 01CA                        ?_startTimedResponse 0091  
                                  _setType B124                               _isEvent$4861 008D  
                       ??_ackEventCheckLen 00A7                             ??_setOutputPin 0092  
                  ??i1_getNextWriteMessage 0062                                 getNV@index 0090  
                               _inputState 02B4                                    _rxQueue 004D  
                        doNenrd@nodeNumber 01C6                   processActions@nextAction 01E2  
                                  _powerUp 881C                          __end_of_inputScan 4C08  
                        __end_of_mnsLowIsr C330                          _consumer2QEsdData C186  
                                  _txQueue 0048                    ?_producerProcessMessage 01F7  
                          defaultEvents@en 01E5                            defaultEvents@io 01E7  
                                  _started 00D2                                 ??_configIO 01BA  
                               _mnsService EF57                          __end_of_nvService EF57  
                         ??_setBounceState 0092                                 _mnsPowerUp 7DA4  
                        __end_of_nvPowerUp BFF4                                    _writeEv 3188  
                __end_of_sendProducedEvent 979A                                 ??_bounceUp 009F  
                     end_of_initialization AEC6                         _expeditedReadIndex 00CD  
                            startOutput@io 01DB                         ?_consumer2QEsdData 0001  
                      ??_mnsProcessMessage 03C7                               writeNVM@type 00A8  
                               getEv@evNum 009D                           producerPowerUp@i 008D  
                                  memcpy@d 0094                                    memcpy@n 0091  
                                  memcpy@s 0096                 APP_nvValueChanged@oldValue 01EC  
                              ?_defaultNVs 01BE                              ??_EEPROM_Read 008F  
                          ?_loadFlashBlock 0001                              ??_clearEvents 00A9  
                                i1u2322_20 B59A                                  i1u2154_25 524A  
                    __end_of_doneTwoAction C3CE                                  i1u2660_28 8F6C  
                                i1u2660_29 8F7E                                    lowIsr@i 007D  
                        _consumer2QPowerUp C2AA                                  i2u1280_44 70AC  
                                i2u1280_45 70A8                                  i2u1282_44 70EE  
                                i2u1282_45 70EA                                  i2u1283_44 7128  
                                i2u1283_45 7124                                  i2u1291_45 57BA  
                                i2u1285_44 716A                                  i2u1285_45 7166  
                                i2u1286_44 71A4                                  i2u1286_45 71A0  
                                i2u1279_44 7072                                  i2u1279_45 706E  
                                i2u1493_40 B5EC                          ?_APP_factoryReset 0001  
                           ??_popTwoAction 008D                                 _validStart B656  
                                i2u2656_48 9038                                  i2u2656_49 904A  
                          ___lldiv@divisor 009B                        ??_consumer2QEsdData 008D  
                             writeEv@evVal 01CA                   __end_of_nvProcessMessage 4924  
                             writeEv@evNum 01C9                            ___lldiv@counter 00A3  
                     ??_startTimedResponse 0094                         ?_consumer2QPowerUp 0001  
                             writeEv@nextF 01D0                    pollTimedResponse@result 01E2  
                       ??_APP_factoryReset 00A9            eraseFlashBlock@interruptEnabled 008D  
                               _pollServos 0850                     pollServos@beforeMidway 01D2  
                         ??_APP_nvValidate 00A0                  consumer2QProcessMessage@e 03D3  
                consumer2QProcessMessage@m 01F7                       _deleteHappeningRange 88F8  
                            ??_FLASH_Write 0093                       nvGetDiagnostic@index 0091  
                                  postdec1 0FE5                                    postdec2 0FDD  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 008D  
                          _mnsFactoryReset AA0C                          ?_mnsGetDiagnostic 008D  
                               ??_quantity 008E                __end_of_setExpeditedActions C3C8  
                   ?_setTimedResponseDelay 0001                               _APP_addEvent AD2E  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 008D  
                           ?_teachCheckLen 01C9                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 2200                                 _tmpMessage 01A3  
                       ??_mnsGetDiagnostic 008F             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset BABC                                 _servoState 0130  
                               ??_writeNVM 01B8                                 _showStatus 8578  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0170  
           deleteHappeningRange@tableIndex 01DD                          ?_setNormalActions 0001  
                       _APP_nvValueChanged 2CFA                  _timedResponseServiceIndex 00C6  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01DD                                 _priorities ED35  
                       _lastActionPollTime 0164                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent B81C                            sendMessage2@opc 00A7  
                     __end_of_teachPowerUp BF78                            sendMessage3@opc 00A8  
                __end_of_consumer2QEsdData C1A6                            sendMessage4@opc 01C0  
                          sendMessage5@opc 00A5                            sendMessage6@opc 00A5  
                          sendMessage7@opc 00A5                         _sodTRCallback$1415 01D6  
                       _sodTRCallback$1416 01D7                          _eventTeachService EF21  
           __end_of_producerProcessMessage 5ECA                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01C5                           setupTimer3@ticks 009A  
                       _timedResponseDelay 0174                        __end_of_checkTxFifo 5484  
                     APP_nvValueChanged@io 01F1                                showStatus@s 008F  
                            ??_findService 008F                            loadNvCache@temp 0099  
                              ?_bounceDown 0001                             i1_isEvent$4861 0060  
                      ?_APP_nvValueChanged 01EB                              clearEvents@io 01DF  
                               isEvent@opc 008E                     ?i2_getNextWriteMessage 0001  
                  peekTwoActionQueue@index 008E                     i2getNextWriteMessage@q 0001  
                          ??_setLEDsByMode 0090                  __end_of_consumer2QPowerUp C2C2  
                            _sodTRCallback 81C2                                  i1_isEvent C044  
                      teachCheckLen@needed 01CB            ??_mnsTRserviceDiscoveryCallback 01D3  
                        ??_flushFlashBlock 008E                                  i2_isEvent C120  
                       _teachGetDiagnostic BCE4     sendInvertedProducedEvent@state_to_send 01D0  
               deleteHappeningRange@number 01D5                          _heartbeatSequence 0045  
                      _teachProcessMessage 2200           sendProducedEvent@producedEventEN 01C4  
         sendProducedEvent@producedEventNN 01C6                                  i1_tickGet B45C  
                        removeTableEntry@f 01C5                             bounceUp@midway 00A6  
                           _normalQueueBuf 0387                         _peekTwoActionQueue A40A  
               consumer2QProcessMessage@ca 03D2                                  i2_tickGet B2FA  
               consumer2QProcessMessage@io 03D0                                 bounceUp@io 00A7  
                              ?_initBounce 0001          sodTRCallback@disable_SOD_response 01D3  
                             _APP_testMode C3DE                      ?_deleteHappeningRange 01D5  
            __end_of_handleSelfEnumeration 80BE               ??_timer1DoneInterruptHandler 0009  
                      __end_of_EEPROM_Read C242                        ?_teachGetDiagnostic 008D  
                      __end_of_clearEvents BA42                          _canTransmitFailed 00C2  
              ??i1_updateModuleErrorStatus 0060                                ?_initTicker 0001  
                              ?_initRomOps 0001                       ??_APP_nvValueChanged 01ED  
                              ?_initServos 0001                       __end_of_sendMessage2 BE3A  
                     __end_of_sendMessage3 BE0A                       __end_of_sendMessage4 BEF6  
                     __end_of_sendMessage5 BE9A                       __end_of_sendMessage6 BDDA  
                     __end_of_sendMessage7 BE6A                             __end_of___lmul B45C  
                            _defaultEvents 74B2                             __end_of_canIsr C1E6  
                           __end_of_canPri EE8C                             __end_of___wmul C044  
                      ?_peekTwoActionQueue 0001                             __end_of_doNerd C25C  
               removeTableEntry@tableIndex 01C6                             __end_of_doWait A40A  
                           __end_of_getEVs 81C2                              ??_APP_highIsr 0009  
                          ?_nvFactoryReset 0001                           _removeTableEntry 78C4  
                          needsStarting@io 0091                             __end_of_memcpy B984  
                           __end_of_isrLow 8342                         canReceiveMessage@m 01C2  
                       canReceiveMessage@p 01C8                             __end_of_lowIsr 8F8E  
                           __end_of_saveNV BAF6                 __end_ofi1_getBufferPointer 9EF4  
                     ?_teachProcessMessage 01F7                  __end_of_eventTeachService EF33  
                      __end_of_FLASH_Write 8EC0                      __end_of_APP_nvDefault 8C50  
                           _canSendMessage 4EEA                          ??_producerEsdData 008D  
                             _name_absaddr 0848                        start_initialization AE6A  
                         ??_clearAllEvents 01C1                            _checkCANTimeout B55E  
                             _leds_powerUp BD1A                       ??_teachGetDiagnostic 008F  
                              __end_of_pop 9B68                              factoryReset@i 01F0  
                              ?_mnsPowerUp 0001               ?_mnsTRallDiagnosticsCallback 01D1  
                     setBounceState@action 0091                   setDigitalOutput@pinState 0098  
                        ??_producerPowerUp 008D                       ??_peekTwoActionQueue 008D  
                              _CANSTATbits 0F6E                             ?_sodTRCallback 01D1  
                       i2canFillRxFifo@ptr 000F                      __end_of_pushTwoAction B242  
                      __end_of_pbDownTimer 96EC                         _bootProcessMessage 9EF4  
                               ?i1_isEvent 0001                   producerProcessMessage@ev 02FC  
                      _getNextWriteMessage 8AAC                                 ?i2_isEvent 0001  
                             _nvGetESDdata C276                   __end_of_canGetDiagnostic BC0C  
                  ??_APP_preProcessMessage 008F                    __end_of_mnsFactoryReset AA84  
                      __end_of_findService 9C9A                              ??_loadNvCache 0097  
                               ?i1_tickGet 0060                                ?_validStart 0001  
                       setServoPosition@io 00A0                        ?_bootProcessMessage 01F7  
                               ?i2_tickGet 0001                               doEvlrn@evVal 01F1  
                             doEvlrn@evNum 01F0                            numEv@tableIndex 00A3  
                   startTimedResponse@type 0094               __end_of_deleteTwoActionQueue A7A2  
                             doEvlrn@error 01F2                                ?_pollServos 0001  
               __end_of_evtIdxToTableIndex C392                   rebuildHashtable@chainIdx 01BF  
                     __end_of_setOutputPin 6E8A                                   ??___lmul 0099  
                          ??_teachCheckLen 00A7                                   ??_canIsr 0079  
                      _universalEventsInit C330                                   ??___wmul 0095  
                             doNenrd@index 01C5                                   ??_doNerd 0095  
                                 ??_doWait 009F                                   ??_getEVs 009D  
                           ?_defaultEvents 01E4                        bootProcessMessage@m 01F7  
                       addEvent@forceOwnNN 01DB                               _nerdCallback AED0  
                          i2_canFillRxFifo 734E                 ?i2_updateModuleErrorStatus 0001  
                  _updateModuleErrorStatus C364                        __end_of_bootService EF45  
                                 ??_memcpy 0093                                   ??_isrLow 007E  
                                 ??_lowIsr 0079                                   ??_saveNV 01BB  
                   __end_of_canSendMessage 51C6                                ?_showStatus 0001  
                            ??_initOutputs 008D                   sodTRCallback@send_off_ok 01D5  
                     ?_getNextWriteMessage 008D                      ??_teachProcessMessage 01F9  
                             checkTxFifo@m 0071                                _checkTxFifo 51C6  
                         _startMultiOutput 9A32                          ?_setServoPosition 009F  
                            ?i2_canTxError 0001                         startMultiOutput@io 0093  
                         _startServoOutput 911E                                __pbssBIGRAM 04C8  
                            _reqevCallback 9D32         consumer2QProcessMessage@tableIndex 03CC  
                  ??_checkRemoveTableEntry 00A9      consumer2QProcessMessage@masked_action 03D1  
                     ??_bootProcessMessage 01F9                                __pbssCOMRAM 002B  
                    peekTwoActionQueue@qty 008D                          ??_nvGetDiagnostic 008F  
                     __end_of_popTwoAction BEC8                         ??_setServoPosition 00A0  
                         canSendMessage@mp 0099                              __pcstackBANK0 0060  
                            __pcstackBANK1 01B8                              __pcstackBANK2 02FC  
                            __pcstackBANK3 03C7                        __end_of_APP_highIsr C308  
                i1_updateModuleErrorStatus C370         consumer2QProcessMessage@nextAction 03CD  
                     ?_universalEventsInit 0001                                 setNV@index 01F6  
                            _setMultiState 873C                            _happening2Event 0300  
                            _setServoState 9362                                 setNV@value 01F2  
                       startServoOutput@io 0093                         addEvent@tableIndex 01E3  
                 __end_of_ackGetDiagnostic BCAE                             i2_isEvent$4861 0001  
               setTimedResponseDelay@delay 008D                                  addEvent@e 01E2  
                                addEvent@f 01E1                                   ?i2_getNV 0001  
                       addEvent@nodeNumber 01D5              ??_mnsTRallDiagnosticsCallback 01D3  
                 _factoryResetGlobalEvents C3DC                         initInputScan@input 0099  
    sendInvertedProducedEvent@can_send_off 01CC                                _EEPROM_Read C224  
               ??_consumer2QProcessMessage 01F9                         initTicker@priority 008D  
                              _clearEvents BA04                    ?_APP_postProcessMessage 008D  
                        ??_eraseFlashBlock 008D                            i2checkTxFifo@mp 0014  
                         setBounceState@io 0092                     ??_deleteHappeningRange 01D6  
                           mnsPowerUp@temp 0098                               doNnevn@count 01C5  
                                __pmainSec 82C0                       teachProcessMessage@m 01F7  
                         _getBufferPointer 9DC8                            _canFactoryReset C206  
              ?_timer3DoneInterruptHandler 0001      __end_of_mnsTRserviceDiscoveryCallback A2F0  
            _mnsTRserviceDiscoveryCallback A262               mnsTRallDiagnosticsCallback@d 01D7  
                               nvPowerUp@i 009C                            tickGet@IntFlag1 0092  
                          tickGet@IntFlag2 0091                                  __pintcode 0808  
                          _teachGetESDdata C0D8                               ??_canEsdData 008D  
       handleSelfEnumeration@incomingCanId 009D                          _lastInputScanTime 0168  
                            __pmediumconst ED34                   ??_ackEventProcessMessage 01F9  
                     i1tickGet@currentTime 0066                                ackPowerUp@i 008D  
                         getEVs@tableIndex 00A3                                   ?___awdiv 0097  
                                __ptext100 6772                                  __ptext101 6138  
                                __ptext110 873C                                  __ptext102 B2A0  
                                __ptext111 941E                                  __ptext103 911E  
                                __ptext200 B45C                                  __ptext120 B9C6  
                                __ptext112 A624                                  __ptext104 9A32  
                                __ptext201 9B68                                  __ptext121 AB68  
                                __ptext113 C3A6                                  __ptext105 5484  
                                __ptext210 C2DA                                  __ptext202 C044  
                                __ptext130 3F76                                  __ptext122 A724  
                                __ptext114 A40A                                  __ptext106 B7D2  
                                __ptext211 B5B2                                  __ptext203 71E6  
                                __ptext131 BFF4                                  __ptext123 9F88  
                                __ptext115 C3AE                                  __ptext107 AF36  
                                __ptext220 A140                                  __ptext212 B062  
                                __ptext204 C370                                  __ptext140 5ECA  
                                __ptext132 ABDA                                  __ptext124 4924  
                                __ptext116 A37E                                  __ptext108 B4B4  
                                __ptext221 C2F2                                  __ptext213 573A  
                                __ptext205 8C50                                  __ptext141 B3AC  
                                __ptext133 8AAC                                  __ptext125 96EC  
                                __ptext117 C3C8                                  __ptext109 9362  
                              _FLASH_Write 8DF2                                  __ptext222 C144  
                                __ptext214 B2FA                                  __ptext206 9E5E  
                                __ptext150 8B7E                                  __ptext142 B404  
                                __ptext134 7EAE                                  __ptext126 BEC8  
                                __ptext118 BE9A                                  __ptext223 C1E6  
                                __ptext215 9C9A                                  __ptext207 C3E0  
                                __ptext151 C01C                                  __ptext143 A5A0  
                                __ptext135 C308                                  __ptext127 A7A2  
                                __ptext119 C290                                  __ptext224 7038  
                                __ptext216 C120                                  __ptext160 BA04  
                                __ptext152 AC4C                                  __ptext144 8492  
                                __ptext136 B242                                  __ptext128 4EEA  
                                __ptext225 BAF6                                  __ptext217 734E  
                                __ptext209 8F8E                                  __ptext161 88F8  
                                __ptext153 A494                                  __ptext145 C206  
                                __ptext137 8578                                  __ptext129 BB68  
                                __ptext218 C37C                                  __ptext170 B656  
                                __ptext162 94DA                                  __ptext154 C0FC  
                                __ptext146 BA80                                  __ptext138 958C  
                                __ptext219 8D22                                  __ptext171 A1D2  
                                __ptext163 6370                                  __ptext155 B124  
                                __ptext147 AA0C                                  __ptext139 963C  
                                __ptext180 B6F0                                  __ptext172 91E2  
                                __ptext164 3188                                  __ptext156 B606  
                                __ptext148 C3CE                                  __ptext181 C342  
                                __ptext173 C1A6                                  __ptext165 B8B0  
                                __ptext157 BABC                                  __ptext149 B50A  
                                __ptext190 C224                                  __ptext182 C354  
                                __ptext174 A992                                  __ptext166 78C4  
                                __ptext158 B81C                                  __ptext191 C3DC  
                                __ptext183 AE02                                  __ptext175 4C08  
                                __ptext167 7C80                                  __ptext159 74B2  
                                __ptext192 C3DE                                  __ptext184 C364  
                                __ptext176 B6A4                                  __ptext168 776E  
                                __ptext185 A2F0                                  __ptext177 8DF2  
                                __ptext169 80BE                                  __ptext194 8EC0  
                                __ptext186 6CCC                                  __ptext178 B866  
                                __ptext195 C1C6                                  __ptext187 BA42  
                                __ptext179 A51A                                   ?___awmod 008D  
                                __ptext196 C31C                                  __ptext188 B184  
                                __ptext197 B55E                                  __ptext189 B73C  
                                __ptext198 B000                                  __ptext199 51C6  
                             defaultNVs@io 01C1                                  _findEvent A1D2  
                                 ?___lldiv 0097                               ??_ackPowerUp 008D  
                   _startDigitalOutput$808 01D4                        __end_of_loadNvCache B866  
                             doReqev@evVal 01CB                               doReqev@evNum 01CA  
                          getNN@tableIndex 00A2                           processActions@io 01E3  
                             doReval@enNum 01C8                         sodTRCallback@flags 01DC  
                             doReval@evVal 01C9                               doReval@evNum 01C5  
                                 ?_doEvlrn 01EC                                   ?_doNenrd 0001  
                                 ?_doEvuln 01CC                                __pintcodelo 0818  
                                 ?_doNnclr 0001                                   ?_doNnevn 0001  
                      i2getBufferPointer@b 0003                                   ?_doReqev 01C6  
                                 ?_doReval 01C5                          teachGetESDdata@id 008D  
                       sodTRCallback@value 01DA          __end_ofi2_updateModuleErrorStatus C388  
                                 ?_doRqevn 0001                      ??_getNextWriteMessage 008F  
                                 ?_getHash 00A3                   deleteActionRange@updated 01DB  
                  __end_of_checkCANTimeout B5B2                              ??_setNewCanId 00A9  
                                _pbUpTimer 958C                            ?_canSendMessage 0099  
                            ??_sendMessage 00A2                                   ?_highIsr 0001  
                           ??i2_canTxError 0016                                   ?_isEvent 0001  
                             ??_canTxError 0075                           _findServiceIndex AB68  
                                _completed 9F88                           nerdCallback@step 01D2  
                         nerdCallback@type 0001                             ?_reqevCallback 01D1  
                             ??_canPowerUp 0097                             _heartbeatTimer 0160  
                                 ?_readNVM 0091                                   ?_isrHigh 0001  
                              _COMSTATbits 0F71                    i1getNextWriteMessage@wr 006B  
                                _leds_poll 5ECA                 producerGetDiagnostic@index 0091  
                                 ?_mnsPoll 0001                          ?_rebuildHashtable 0001  
                         _canIsr$intlevel1 C1CE                       setOutputPosition@pos 00A1  
                                 ?_tickGet 008D    mnsTRallDiagnosticsCallback@serviceIndex 01D1  
                              _pbDownTimer 963C                                  checkLen@m 01C5  
                                 ?_setType 01E8           ackEventProcessMessage@eventIndex 03CB  
                    ??_universalEventsInit 008D                             defaultNVs@type 01BE  
                           ?_setMultiState 0091                    startBounceOutput@action 008D  
                      __end_of_initOutputs BF22                           ??_loadFlashBlock 008D  
                           ?_setServoState 0091                                   ?_powerUp 0001  
                                _readInput 7EAE                         ??_rebuildHashtable 01B8  
                          ??_sodTRCallback 00A9                                _findService 9C02  
            __end_ofi1_getNextWriteMessage 8D22                                   ?_writeEv 01C9  
                          startServos@type 01D5                                _flashDelays 02C4  
                       processActions@type 01E0                                  _expedited 0047  
                       __end_of_canEsdData C276                      __end_of_needsStarting A6A6  
                              _flashBuffer 0347                             doReval@evIndex 01C7  
                              ??i1_isEvent 0060              deleteHappeningRange@happening 01DB  
                             ??_defaultNVs 01BF                                  _inputScan 4924  
           __end_of_APP_postProcessMessage C3DC                            _eventAckService EED9  
                                _mnsLowIsr C31C                         __end_of_ackPowerUp C0B4  
                                _nvService EF45                             ___wmul@product 0095  
                                _loopCount 0274                              ??_removeEvent 00A9  
                              ??i2_isEvent 0001                       sendProducedEvent@opc 01C3  
                                 _LATBbits 0F8A                                  _nvPowerUp BFCC  
                    __end_of_canFillRxFifo 734E                          findEvent@chainIdx 01C3  
                          _isNoServoPulses C354                 __end_ofi2_getBufferPointer A1D2  
                                 _PIE1bits 0F9D                                   _PIE2bits 0FA0  
                     rebuildHashtable@hash 01BD                           ?_mnsFactoryReset 0001  
                                 _PIE5bits 0F76                                ??i1_tickGet 0064  
                                _rxBuffers 0748                         __p_eventTable_text EF80  
                                getHash@en 00A5                                  getHash@nn 00A3  
                  __end_ofi2_canFillRxFifo 74B2                             _flashFlushTime 0150  
   __end_of_APP_isSuitableTimeToWriteFlash C354             _APP_isSuitableTimeToWriteFlash C342  
                        _channelDefaultNVs EE8C                                  _targetPos 0140  
                              _bootService EF33         __end_of_timer1DoneInterruptHandler C206  
               _timer1DoneInterruptHandler C1E6                                ??i2_tickGet 0005  
                       __end_of_canTxError B062                         __end_of_canService EF7B  
                             _teachPowerUp BF4E                                  _pollCount 0284  
                                 _PIR1bits 0F9E                                   _PIR2bits 0FA1  
                       __end_of_canPowerUp 7038                          ?_nvProcessMessage 01F7  
                  ??_setTimedResponseDelay 008D                                   _PIR5bits 0F77  
                        doReqev@tableIndex 01CD                    ??_producerGetDiagnostic 008F  
                          ??_defaultEvents 00A9                                  _txBuffers 0480  
                           _mnsDiagnostics 0197                  ??_updateModuleErrorStatus 008D  
                                 _RCONbits 0FD0                          doReqev@nodeNumber 01C6  
                         ??_setOutputState 0095                                   _RXF0SIDL 0EE1  
            startDigitalOutput@actionState 01D7                         ??_nvProcessMessage 01F9  
                                 _RXM0EIDH 0EFA                                   _RXM0EIDL 0EFB  
                               ?_findEvent 01B8                                   _TXB0SIDH 0F21  
                                 _TXB0SIDL 0F22                                   _TXB1SIDH 0F11  
                                 _TXB1SIDL 0F12                                   _TXB2SIDH 0F01  
                                 _TXB2SIDL 0F02                                   _RXFBCON0 0E71  
                                 _RXM0SIDH 0EF8                                   _RXM0SIDL 0EF9  
                           pushTwoAction@a 008D                sodTRCallback@event_inverted 01DB  
                          inputScan@change 01CB                        i2setOutputPin@state 0005  
                        _stepsPerPollSpeed 0120                          _teachFactoryReset C3CE  
                               ?_pbUpTimer 0001                                  configIO@i 01C1  
                              _bounceState 0264                                _APP_highIsr C2F2  
                           sendMessage@len 01B8                             sendMessage@opc 00A4  
                        _timedResponseTime 0154                          ___wmul@multiplier 0091  
                        _timedResponseStep 0043                          _timedResponseType 00C5  
                                _startWait 0037                                  _startTime 003B  
                               ?_completed 008D                                   i2_canIsr C2DA  
                    __end_ofi2_checkTxFifo 59CC                           _enumerationState 00C1  
                             doRqevn@count 01C0                                  _transport 0172  
                       ?_teachFactoryReset 0001                          defaultEvents@type 01E4  
                       __end_of_defaultNVs B656                                 ?_leds_poll 0001  
                    __end_of_initInputScan 98EE                            _flushFlashBlock A51A  
               processActions@simultaneous 01DC                    ??i2_getNextWriteMessage 0003  
                      __end_of_setNewCanId B000                        __end_of_sendMessage A820  
                               ?_readInput 0001                             doWait@duration 009D  
                            ??_setupTimer1 0095                              ??_setupTimer3 0095  
                     _deleteTwoActionQueue A724                            _eventCoeService EEEB  
                             ??_bounceDown 009F                        ??_teachFactoryReset 00A9  
                          checkLen@service 01C8                          ___lmul@multiplier 0091  
                              _INTCON2bits 0FF1                               _sendMessage2 BE0A  
                             _sendMessage3 BDDA                               _sendMessage4 BEC8  
                             _sendMessage5 BE6A                               _sendMessage6 BDAA  
                             _sendMessage7 BE3A                                   i1pop@ret 0067  
                                 i2pop@ret 0008                            startOutput@type 01DA  
                          nvFactoryReset@i 01BC                                 ?_inputScan 0001  
                               ?_mnsLowIsr 0001                    __end_of_canFactoryReset C224  
                 __end_of_removeTableEntry 7A18                    __end_of_teachGetESDdata C0FC  
                               ?_nvPowerUp 0001                  __end_of_channelDefaultNVs EED9  
             __end_of_eventProducerService EF0F                     handleSelfEnumeration@p 0097  
                               _EECON1bits 0F7F                        startBounceOutput@io 008E  
                              _loadNvCache B81C                                   __Hrparam 0000  
                              _eventChains 04C8                           finaliseOutput@io 0001  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01E6                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01CB  
                          _producerEsdData C166                           ??_nvFactoryReset 01BA  
                             ??_initTicker 008D                        __end_of_removeEvent BFA2  
                             ??_initRomOps 008D                     removeEvent@eventNumber 01C9  
 consumer2QProcessMessage@nextSimultaneous 03CF                               ??_initServos 00A4  
                __end_of_teachFactoryReset C3D4                    sodTRCallback@send_on_ok 01D4  
                                 _addEvent 6370                          _startBounceOutput AF36  
           ?_mnsTRserviceDiscoveryCallback 01D1                             _processActions 6138  
                       __end_of_bounceDown 2CFA                            ??_reqevCallback 01D3  
                            ??_startServos 00A9                           ?_checkCANTimeout 0001  
                            ??_startOutput 00A9                                _initOutputs BEF6  
                       ?_startBounceOutput 008D                            _producerPowerUp C06C  
                       doNenrd@eventNumber 01C8                  rebuildHashtable@happening 01BE  
                             setType@index 01E9                                   _checkLen A6A6  
                          ??_setMultiState 0092                            ??_setServoState 0092  
                           i2checkTxFifo@m 0012                             _finaliseOutput C3AE  
                      _producerDiagnostics 01B0                    deleteActionRange@action 01DC  
                            initOutputs@io 008D                       processActions@action 01E4  
          __end_of_updateModuleErrorStatus C370                    __end_of_eventAckService EEEB  
                               _FLASH_Read B73C                 ?_sendInvertedProducedEvent 01C9  
                    ?_deleteTwoActionQueue 0001                      getNextWriteMessage@wr 0098  
                                 __ptext10 BFCC                                   __ptext11 7DA4  
                                 __ptext20 9994                                   __ptext12 C090  
                                 __ptext21 4600                                   __ptext13 C2AA  
                               _T1GCONbits 0FAA                                   __ptext30 7A18  
                                 __ptext22 16CE                                   __ptext14 BF4E  
                                 __ptext31 AD9A                                   __ptext23 6574  
                                 __ptext15 BD1A                                defaultNVs@i 01C2  
                                 __ptext40 A820                                   __ptext32 BD4A  
                                 __ptext24 9EF4                                   __ptext16 C3B6  
                                 __ptext41 9D32                                   __ptext33 C242  
                                 __ptext25 351C                                   __ptext17 B8F8  
                                 __ptext50 C392                                   __ptext42 AED0  
                                 __ptext34 ACBE                                   __ptext26 2200  
                                 __ptext18 38A6                                   __ptext51 A89C  
                                 __ptext43 B984                                   __ptext35 C388  
                                 __ptext27 B0C4                                   __ptext19 5C50  
                                 __ptext60 C0D8                                   __ptext52 2CFA  
                                 __ptext44 A262                                   __ptext36 A918  
                                 __ptext28 BB30                                   __ptext61 BBA0  
                                 __ptext53 C39C                                   __ptext45 83AC  
                                 __ptext37 BF78                                   __ptext29 92A4  
                                 __ptext70 865C                                   __ptext62 BBD6  
                                 __ptext54 C0B4                                   __ptext46 BD7A  
                                 __ptext38 9058                                   __ptext71 B354  
                                 __ptext63 BC0C                                   __ptext55 AAF6  
                                 __ptext47 81C2                                   __ptext39 AD2E  
                                 __ptext80 AF9C                                   __ptext72 42D0  
                                 __ptext64 BC42                                   __ptext56 C166  
                                 __ptext48 3C16                                   __ptext81 9ACE  
                                 __ptext73 BF22                                   __ptext65 BC78  
                                 __ptext57 C25C                                   __ptext49 89D4  
                                 __ptext90 C3D4                                   __ptext82 B93E  
                                 __ptext74 BE0A                                   __ptext66 BCAE  
                                 __ptext58 C276                                   __ptext91 C3D8  
                                 __ptext83 7FB8                                   __ptext75 C3BC  
                                 __ptext67 BCE4                                   __ptext59 C186  
                                 __ptext92 6B08                                   __ptext84 9DC8  
                                 __ptext76 C3C2                                   __ptext68 BDAA  
                                 __ptext93 98EE                                   __ptext85 BE3A  
                                 __ptext77 B1E4                                   __ptext69 BDDA  
                                 __ptext94 A01C                                   __ptext86 9C02  
                                 __ptext78 6944                                   __ptext95 A0AE  
                                 __ptext87 C2C2                                   __ptext79 7614  
                                 __ptext96 0850                                   __ptext88 A6A6  
                                 __ptext97 BFA2                                   __ptext89 BE6A  
                                 __ptext98 59CC                                   __ptext99 2846  
                      ??_startBounceOutput 008E                    __end_of_isNoServoPulses C364  
                             _setOutputPin 6CCC                       processActions@nextIo 01DF  
                             ??_mnsPowerUp 0097                                   _configIO 4C08  
                                 _ledTimer 0158                    deleteActionRange@number 01D5  
                           _processOutputs 6772                          _APP_GetEventState 3C16  
                                 _ledState 00BD                          sodTRCallback@step 01D2  
                       __end_of_initBounce BFCC                          sodTRCallback@type 0001  
                            ?_EEPROM_Write 008F                         __end_of_eventTable FF70  
                                 _bounceUp 59CC                                 _T3GCONbits 0FB0  
                   i1getNextWriteMessage@q 0060                         __end_of_initTicker B93E  
                       __end_of_initRomOps C31C                         i1_getBufferPointer 9E5E  
                       ?_APP_GetEventState 0001                         __end_of_initServos 7C80  
         __end_of_consumer2QProcessMessage 38A6                                  setType@io 01EA  
                                 doNnevn@f 01C4                                   doNnevn@i 01C6  
               sendProducedEvent@happening 01C8                         __end_of_paramBlock 0840  
                           canPowerUp@temp 0098                      __end_of_setLEDsByMode BF4E  
                      __end_of_setupTimer1 A140                        __end_of_setupTimer3 A0AE  
                     __end_ofi2_canTxError B0C4                              ?_factoryReset 0001  
                 __end_of_startMultiOutput 9ACE                              _configIO$8039 01BC  
                         _nvTRnvrdCallback B984                              findEvent@hash 01C2  
                 __end_of_startServoOutput 91E2                               ??_validStart 0097  
                                 doRqevn@i 01C1                          ?_canGetDiagnostic 008D  
                           writeEv@nextIdx 01D4                                getEVs@evIdx 00A2  
           consumer2QProcessMessage@change 03C8             consumer2QProcessMessage@action 03D4  
                         ?i2_canFillRxFifo 0001                                getEVs@evNum 00A4  
                      ?i1_getBufferPointer 0060                        ??_APP_GetEventState 009F  
            __end_of_APP_preProcessMessage C3D8              ackEventProcessMessage@eventEN 03C9  
            ackEventProcessMessage@eventNN 03CC                               _popTwoAction BE9A  
                       ??_canGetDiagnostic 008F                               ??_pollServos 01C9  
                                 isa$xinst 0000                                   _services EE75  
                __end_of_startBounceOutput AF9C                     __end_of_processActions 6370  
                 clearAllEvents@tableIndex 01C5                                   int$flags 0052  
                          _nvGetDiagnostic BC0C                                   highIsr@i 001E  
                              ??_findEvent 01BC                                   _quantity BB68  
                    _handleSelfEnumeration 7FB8                ??i2_updateModuleErrorStatus 0001  
                               _APP_lowIsr C3E0                     sendProducedEvent@onOff 01C1  
                       __end_of_mnsService EF69                    __end_of_flushFlashBlock A5A0  
                        writeEv@tableIndex 01D3                         __end_of_mnsPowerUp 7EAE  
                        _setOutputPosition AA84                               ??_showStatus 008D  
                              ??_pbUpTimer 00A4                           processOutputs@io 01CA  
                                 _writeNVM B6A4                 processEnumeration@newCanId 01C0  
                   APP_addEvent@forceOwnNN 01EA                                _setNewCanId AF9C  
                             ?_checkTxFifo 0001                               pollServos@io 01D4  
                              ??_completed 008F                                _sendMessage A7A2  
                   __end_of_finaliseOutput C3B6                             startOutput@act 01D9  
                  __end_of_eventCoeService EEFD                              writeNVM@index 00A4  
                       ?_setOutputPosition 00A1                                  quantity@q 008D  
                            writeNVM@value 00A7                                _OSCTUNEbits 0F9B  
                               _INTCONbits 0FF2                                ??_leds_poll 009F  
               ??_factoryResetGlobalEvents 008D                         _evtIdxToTableIndex C388  
                     ??i1_getBufferPointer 0062                      canGetDiagnostic@index 0091  
                                 memcpy@d1 008D                                   memcpy@s1 008F  
                   __end_of_processOutputs 6944                  __end_of_APP_GetEventState 3F76  
                 __end_of_getBufferPointer 9E5E                            _eraseFlashBlock B6F0  
                        APP_addEvent@evVal 01E9              __end_of_checkRemoveTableEntry B8F8  
                        APP_addEvent@evNum 01E8                         __end_of_validStart B6A4  
                      __end_of_startServos 9994                    teachGetDiagnostic@index 0091  
                              ??_readInput 0091                        __end_of_startOutput B2FA  
                   _ackEventProcessMessage 6574                    deleteTwoActionQueue@qty 008D  
                           ??_EEPROM_Write 0092                        ??_setOutputPosition 00A3  
               __end_of_processEnumeration 776E                                getHash@hash 00A8  
                       __end_of_pollServos 16CE                          ?_ackGetDiagnostic 008D  
                                 intlevel1 0000                                   intlevel2 0000  
                      ?_evtIdxToTableIndex 0001                              ?_getParameter 0001  
                              ??_inputScan 01C9                               _servoInBlock 00CB  
                              ??_mnsLowIsr 0060                       getNextWriteMessage@q 008D  
                         ?_canFactoryReset 0001                     APP_addEvent@tableIndex 01EB  
                                 numEv@num 00A1                               ?_EEPROM_Read 008D  
                         ___lldiv@dividend 0097                         ??_ackGetDiagnostic 008F  
          sendInvertedProducedEvent@invert 01CA                             ??_factoryReset 01EC  
                  __end_of_producerEsdData C186                                ??_nvPowerUp 009C  
                             ?_clearEvents 0001                           _ackEventCheckLen C2C2  
                    removeEvent@tableIndex 01CB                           ?_teachGetESDdata 0001  
                 __end_of_findServiceIndex ABDA                                _removeEvent BF78  
                   APP_addEvent@nodeNumber 01E4                                _TXB0CONbits 0F20  
                            _doneTwoAction C3C8                         __end_of_showStatus 865C  
           mnsTRrqnpnCallback@serviceIndex 01D1                      removeEvent@nodeNumber 01C7  
                              _TXB1CONbits 0F10                                _TXB2CONbits 0F00  
                       _paramBlock_absaddr 0820                deleteActionRange@tableIndex 01DE  
                       __end_of_priorities EE35                           ??_canSendMessage 009B  
              __end_of_teachProcessMessage 2846                 __end_of_tableIndexToEvtIdx C39C  
                sodTRCallback@serviceIndex 01D1                       __end_of_canTransport EF7F  
                             ?_FLASH_Write 0090                    __end_of_producerPowerUp C090  
                       tickGet@currentTime 0093                            ?_processActions 0001  
                            findService@id 0091                  __end_of_setOutputPosition AAF6  
                                 powerUp@i 01C6                       ??_evtIdxToTableIndex 008D  
                        _pollTimedResponse A820                      __end_of_teachCheckLen B124  
                 ??_producerProcessMessage 01F9                      setDigitalOutput@state 0097  
                       _eventTable_absaddr EF80                         ?_pollTimedResponse 0001  
                        FLASH_Read@address 008D                           _APP_factoryReset C0FC  
                          ?_finaliseOutput 008D                    nerdCallback@eventNumber 01D5  
                            ?_getTwoAction 0001                           _ticksWhenStopped 0200  
                         ___lldiv@quotient 009F                       producerEsdData@index 008D  
                     _eventProducerService EEFD             sendInvertedProducedEvent@state 01C9  
                  _consumer2QGetDiagnostic BCAE                     ??_deleteTwoActionQueue 008D  
                        _deleteActionRange 94DA                               ?_pbDownTimer 0001  
                              findEvent@en 01C0                                findEvent@nn 01BE  
                        writeEv@startIndex 01CF                       findEvent@eventNumber 01BA  
                                 writeEv@e 01D1                                   writeEv@f 01D2  
                          ?_processOutputs 0001                                ?_FLASH_Read 008D  
                      ??_pollTimedResponse 01E0                           _mnsGetDiagnostic BC42  
                             findService@i 0092                         ?_deleteActionRange 01D5  
             _timedResponseAllServicesFlag 0044                                _setupTimer1 A0AE  
                              _setupTimer3 A01C                           ?_isNoServoPulses 0001  
                             ?_findService 008D                     startMultiOutput@action 0091  
                i2_updateModuleErrorStatus C37C                             ??_getParameter 0092  
                        sendMessage2@data1 00A5                          sendMessage2@data2 00A6  
                        sendMessage3@data1 00A5                          sendMessage3@data2 00A6  
                        sendMessage3@data3 00A7                          sendMessage4@data1 00A5  
                        sendMessage4@data2 00A6                          sendMessage4@data3 00A7  
                        sendMessage4@data4 00A8                           _setDigitalOutput A2F0  
                        getBufferPointer@b 008F                          sendMessage5@data1 01C0  
                        sendMessage5@data2 01C1                          sendMessage5@data3 01C2  
                        sendMessage5@data4 01C3                          sendMessage5@data5 01C4  
                    _consumer2QDiagnostics 01B6                          sendMessage6@data1 01C0  
                        sendMessage6@data2 01C1                          sendMessage6@data3 01C2  
                        sendMessage6@data4 01C3                          sendMessage6@data5 01C4  
                        sendMessage6@data6 01C5                            _last_mode_flags 0046  
                        sendMessage7@data1 01C0                          sendMessage7@data2 01C1  
                        sendMessage7@data3 01C2                          sendMessage7@data4 01C3  
                        sendMessage7@data5 01C4                          sendMessage7@data6 01C5  
                        sendMessage7@data7 01C6                             _checkPowerOnPb B242  
                         EEPROM_Read@index 008D                        ??_deleteActionRange 01D6  
                         _setNormalActions C3BC                             ?_doneTwoAction 0001  
                          _last_mode_state 00C7                    __end_of_nvGetDiagnostic BC42  
                     validStart@tableIndex 009B                       nvTRnvrdCallback@step 01D2  
              ?_timer1DoneInterruptHandler 0001                       nvTRnvrdCallback@type 0001  
                              _pulseDelays 02D4                __end_of_getNextWriteMessage 8B7E  
