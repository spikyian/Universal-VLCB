

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Dec 01 13:04:12 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   223                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   257                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   258                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   259                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   260   000000                     
   261                           ; Generated 12/10/2023 GMT
   262                           ; 
   263                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   264                           ; All rights reserved.
   265                           ; 
   266                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   267                           ; 
   268                           ; Redistribution and use in source and binary forms, with or without modification, are
   269                           ; permitted provided that the following conditions are met:
   270                           ; 
   271                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   272                           ;        conditions and the following disclaimer.
   273                           ; 
   274                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   275                           ;        of conditions and the following disclaimer in the documentation and/or other
   276                           ;        materials provided with the distribution. Publication is not required when
   277                           ;        this file is used in an embedded application.
   278                           ; 
   279                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   280                           ;        software without specific prior written permission.
   281                           ; 
   282                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   283                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   284                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   285                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   286                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   287                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   288                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   289                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   290                           ; 
   291                           ; 
   292                           ; Code-generator required, PIC18F26K80 Definitions
   293                           ; 
   294                           ; SFR Addresses
   295   000000                     
   296                           	psect	eeprom_data
   297   F003FF                     	org	1023	;# 
   298   F003FF  00                 	db	0	;# 
   299   000000                     _eventTable_absaddr	set	61312
   300                           
   301                           	psect	mediumconst
   302   00ED28                     __pmediumconst:
   303                           	callstack 0
   304   00ED28  00                 	db	0
   305   00ED29                     _priorities:
   306                           	callstack 0
   307   00ED29  01                 	db	1
   308   00ED2A  01                 	db	1
   309   00ED2B  03                 	db	3
   310   00ED2C  02                 	db	2
   311   00ED2D  02                 	db	2
   312   00ED2E  02                 	db	2
   313   00ED2F  02                 	db	2
   314   00ED30  03                 	db	3
   315   00ED31  02                 	db	2
   316   00ED32  02                 	db	2
   317   00ED33  03                 	db	3
   318   00ED34  01                 	db	1
   319   00ED35  00                 	db	0
   320   00ED36  00                 	db	0
   321   00ED37  01                 	db	1
   322   00ED38  01                 	db	1
   323   00ED39  01                 	db	1
   324   00ED3A  01                 	db	1
   325   00ED3B  01                 	db	1
   326   00ED3C  01                 	db	1
   327   00ED3D  01                 	db	1
   328   00ED3E  01                 	db	1
   329   00ED3F  01                 	db	1
   330   00ED40  01                 	db	1
   331   00ED41  01                 	db	1
   332   00ED42  01                 	db	1
   333   00ED43  01                 	db	1
   334   00ED44  01                 	db	1
   335   00ED45  01                 	db	1
   336   00ED46  01                 	db	1
   337   00ED47  01                 	db	1
   338   00ED48  01                 	db	1
   339   00ED49  01                 	db	1
   340   00ED4A  01                 	db	1
   341   00ED4B  01                 	db	1
   342   00ED4C  01                 	db	1
   343   00ED4D  01                 	db	1
   344   00ED4E  01                 	db	1
   345   00ED4F  01                 	db	1
   346   00ED50  01                 	db	1
   347   00ED51  01                 	db	1
   348   00ED52  01                 	db	1
   349   00ED53  01                 	db	1
   350   00ED54  01                 	db	1
   351   00ED55  01                 	db	1
   352   00ED56  01                 	db	1
   353   00ED57  01                 	db	1
   354   00ED58  01                 	db	1
   355   00ED59  01                 	db	1
   356   00ED5A  01                 	db	1
   357   00ED5B  01                 	db	1
   358   00ED5C  01                 	db	1
   359   00ED5D  01                 	db	1
   360   00ED5E  01                 	db	1
   361   00ED5F  01                 	db	1
   362   00ED60  01                 	db	1
   363   00ED61  01                 	db	1
   364   00ED62  01                 	db	1
   365   00ED63  01                 	db	1
   366   00ED64  01                 	db	1
   367   00ED65  01                 	db	1
   368   00ED66  01                 	db	1
   369   00ED67  01                 	db	1
   370   00ED68  00                 	db	0
   371   00ED69  01                 	db	1
   372   00ED6A  01                 	db	1
   373   00ED6B  01                 	db	1
   374   00ED6C  01                 	db	1
   375   00ED6D  01                 	db	1
   376   00ED6E  01                 	db	1
   377   00ED6F  01                 	db	1
   378   00ED70  01                 	db	1
   379   00ED71  01                 	db	1
   380   00ED72  00                 	db	0
   381   00ED73  01                 	db	1
   382   00ED74  01                 	db	1
   383   00ED75  00                 	db	0
   384   00ED76  00                 	db	0
   385   00ED77  00                 	db	0
   386   00ED78  00                 	db	0
   387   00ED79  00                 	db	0
   388   00ED7A  00                 	db	0
   389   00ED7B  00                 	db	0
   390   00ED7C  00                 	db	0
   391   00ED7D  00                 	db	0
   392   00ED7E  00                 	db	0
   393   00ED7F  00                 	db	0
   394   00ED80  00                 	db	0
   395   00ED81  00                 	db	0
   396   00ED82  00                 	db	0
   397   00ED83  00                 	db	0
   398   00ED84  00                 	db	0
   399   00ED85  00                 	db	0
   400   00ED86  01                 	db	1
   401   00ED87  01                 	db	1
   402   00ED88  01                 	db	1
   403   00ED89  01                 	db	1
   404   00ED8A  01                 	db	1
   405   00ED8B  03                 	db	3
   406   00ED8C  01                 	db	1
   407   00ED8D  01                 	db	1
   408   00ED8E  01                 	db	1
   409   00ED8F  01                 	db	1
   410   00ED90  01                 	db	1
   411   00ED91  01                 	db	1
   412   00ED92  01                 	db	1
   413   00ED93  01                 	db	1
   414   00ED94  00                 	db	0
   415   00ED95  00                 	db	0
   416   00ED96  00                 	db	0
   417   00ED97  00                 	db	0
   418   00ED98  00                 	db	0
   419   00ED99  00                 	db	0
   420   00ED9A  00                 	db	0
   421   00ED9B  00                 	db	0
   422   00ED9C  01                 	db	1
   423   00ED9D  00                 	db	0
   424   00ED9E  01                 	db	1
   425   00ED9F  01                 	db	1
   426   00EDA0  01                 	db	1
   427   00EDA1  01                 	db	1
   428   00EDA2  01                 	db	1
   429   00EDA3  01                 	db	1
   430   00EDA4  00                 	db	0
   431   00EDA5  01                 	db	1
   432   00EDA6  01                 	db	1
   433   00EDA7  01                 	db	1
   434   00EDA8  01                 	db	1
   435   00EDA9  01                 	db	1
   436   00EDAA  01                 	db	1
   437   00EDAB  01                 	db	1
   438   00EDAC  00                 	db	0
   439   00EDAD  01                 	db	1
   440   00EDAE  01                 	db	1
   441   00EDAF  01                 	db	1
   442   00EDB0  01                 	db	1
   443   00EDB1  01                 	db	1
   444   00EDB2  01                 	db	1
   445   00EDB3  00                 	db	0
   446   00EDB4  01                 	db	1
   447   00EDB5  00                 	db	0
   448   00EDB6  00                 	db	0
   449   00EDB7  00                 	db	0
   450   00EDB8  00                 	db	0
   451   00EDB9  00                 	db	0
   452   00EDBA  00                 	db	0
   453   00EDBB  00                 	db	0
   454   00EDBC  00                 	db	0
   455   00EDBD  00                 	db	0
   456   00EDBE  00                 	db	0
   457   00EDBF  00                 	db	0
   458   00EDC0  00                 	db	0
   459   00EDC1  00                 	db	0
   460   00EDC2  00                 	db	0
   461   00EDC3  00                 	db	0
   462   00EDC4  00                 	db	0
   463   00EDC5  01                 	db	1
   464   00EDC6  01                 	db	1
   465   00EDC7  01                 	db	1
   466   00EDC8  01                 	db	1
   467   00EDC9  01                 	db	1
   468   00EDCA  01                 	db	1
   469   00EDCB  01                 	db	1
   470   00EDCC  01                 	db	1
   471   00EDCD  01                 	db	1
   472   00EDCE  01                 	db	1
   473   00EDCF  01                 	db	1
   474   00EDD0  00                 	db	0
   475   00EDD1  00                 	db	0
   476   00EDD2  01                 	db	1
   477   00EDD3  01                 	db	1
   478   00EDD4  00                 	db	0
   479   00EDD5  00                 	db	0
   480   00EDD6  00                 	db	0
   481   00EDD7  00                 	db	0
   482   00EDD8  00                 	db	0
   483   00EDD9  00                 	db	0
   484   00EDDA  00                 	db	0
   485   00EDDB  00                 	db	0
   486   00EDDC  01                 	db	1
   487   00EDDD  00                 	db	0
   488   00EDDE  00                 	db	0
   489   00EDDF  01                 	db	1
   490   00EDE0  01                 	db	1
   491   00EDE1  01                 	db	1
   492   00EDE2  00                 	db	0
   493   00EDE3  00                 	db	0
   494   00EDE4  00                 	db	0
   495   00EDE5  01                 	db	1
   496   00EDE6  01                 	db	1
   497   00EDE7  01                 	db	1
   498   00EDE8  01                 	db	1
   499   00EDE9  01                 	db	1
   500   00EDEA  01                 	db	1
   501   00EDEB  01                 	db	1
   502   00EDEC  00                 	db	0
   503   00EDED  01                 	db	1
   504   00EDEE  01                 	db	1
   505   00EDEF  01                 	db	1
   506   00EDF0  01                 	db	1
   507   00EDF1  01                 	db	1
   508   00EDF2  01                 	db	1
   509   00EDF3  01                 	db	1
   510   00EDF4  01                 	db	1
   511   00EDF5  00                 	db	0
   512   00EDF6  00                 	db	0
   513   00EDF7  00                 	db	0
   514   00EDF8  00                 	db	0
   515   00EDF9  00                 	db	0
   516   00EDFA  00                 	db	0
   517   00EDFB  01                 	db	1
   518   00EDFC  01                 	db	1
   519   00EDFD  00                 	db	0
   520   00EDFE  00                 	db	0
   521   00EDFF  01                 	db	1
   522   00EE00  01                 	db	1
   523   00EE01  01                 	db	1
   524   00EE02  00                 	db	0
   525   00EE03  00                 	db	0
   526   00EE04  00                 	db	0
   527   00EE05  01                 	db	1
   528   00EE06  01                 	db	1
   529   00EE07  00                 	db	0
   530   00EE08  01                 	db	1
   531   00EE09  01                 	db	1
   532   00EE0A  01                 	db	1
   533   00EE0B  00                 	db	0
   534   00EE0C  00                 	db	0
   535   00EE0D  01                 	db	1
   536   00EE0E  00                 	db	0
   537   00EE0F  01                 	db	1
   538   00EE10  01                 	db	1
   539   00EE11  01                 	db	1
   540   00EE12  01                 	db	1
   541   00EE13  01                 	db	1
   542   00EE14  00                 	db	0
   543   00EE15  00                 	db	0
   544   00EE16  00                 	db	0
   545   00EE17  00                 	db	0
   546   00EE18  00                 	db	0
   547   00EE19  00                 	db	0
   548   00EE1A  00                 	db	0
   549   00EE1B  00                 	db	0
   550   00EE1C  00                 	db	0
   551   00EE1D  00                 	db	0
   552   00EE1E  00                 	db	0
   553   00EE1F  00                 	db	0
   554   00EE20  00                 	db	0
   555   00EE21  00                 	db	0
   556   00EE22  00                 	db	0
   557   00EE23  01                 	db	1
   558   00EE24  00                 	db	0
   559   00EE25  00                 	db	0
   560   00EE26  00                 	db	0
   561   00EE27  00                 	db	0
   562   00EE28  00                 	db	0
   563   00EE29                     __end_of_priorities:
   564                           	callstack 0
   565   00EE29                     _configs:
   566                           	callstack 0
   567   00EE29  0B                 	db	11
   568   00EE2A  43                 	db	67
   569   00EE2B  00                 	db	0
   570   00EE2C  FF                 	db	255
   571   00EE2D  0C                 	db	12
   572   00EE2E  43                 	db	67
   573   00EE2F  01                 	db	1
   574   00EE30  FF                 	db	255
   575   00EE31  0D                 	db	13
   576   00EE32  43                 	db	67
   577   00EE33  02                 	db	2
   578   00EE34  FF                 	db	255
   579   00EE35  0E                 	db	14
   580   00EE36  43                 	db	67
   581   00EE37  03                 	db	3
   582   00EE38  FF                 	db	255
   583   00EE39  0F                 	db	15
   584   00EE3A  43                 	db	67
   585   00EE3B  04                 	db	4
   586   00EE3C  FF                 	db	255
   587   00EE3D  10                 	db	16
   588   00EE3E  43                 	db	67
   589   00EE3F  05                 	db	5
   590   00EE40  FF                 	db	255
   591   00EE41  11                 	db	17
   592   00EE42  43                 	db	67
   593   00EE43  06                 	db	6
   594   00EE44  FF                 	db	255
   595   00EE45  12                 	db	18
   596   00EE46  43                 	db	67
   597   00EE47  07                 	db	7
   598   00EE48  FF                 	db	255
   599   00EE49  15                 	db	21
   600   00EE4A  42                 	db	66
   601   00EE4B  00                 	db	0
   602   00EE4C  0A                 	db	10
   603   00EE4D  16                 	db	22
   604   00EE4E  42                 	db	66
   605   00EE4F  01                 	db	1
   606   00EE50  08                 	db	8
   607   00EE51  19                 	db	25
   608   00EE52  42                 	db	66
   609   00EE53  04                 	db	4
   610   00EE54  09                 	db	9
   611   00EE55  1A                 	db	26
   612   00EE56  42                 	db	66
   613   00EE57  05                 	db	5
   614   00EE58  FF                 	db	255
   615   00EE59  03                 	db	3
   616   00EE5A  41                 	db	65
   617   00EE5B  01                 	db	1
   618   00EE5C  01                 	db	1
   619   00EE5D  02                 	db	2
   620   00EE5E  41                 	db	65
   621   00EE5F  00                 	db	0
   622   00EE60  00                 	db	0
   623   00EE61  05                 	db	5
   624   00EE62  41                 	db	65
   625   00EE63  03                 	db	3
   626   00EE64  03                 	db	3
   627   00EE65  07                 	db	7
   628   00EE66  41                 	db	65
   629   00EE67  05                 	db	5
   630   00EE68  04                 	db	4
   631   00EE69                     __end_of_configs:
   632                           	callstack 0
   633   000000                     _paramBlock_absaddr	set	2080
   634   00EE69                     _services:
   635                           	callstack 0
   636   00EE69  68                 	db	low _canService
   637   00EE6A  EF                 	db	high _canService
   638   00EE6B  56                 	db	low _mnsService
   639   00EE6C  EF                 	db	high _mnsService
   640   00EE6D  44                 	db	low _nvService
   641   00EE6E  EF                 	db	high _nvService
   642   00EE6F  32                 	db	low _bootService
   643   00EE70  EF                 	db	high _bootService
   644   00EE71  20                 	db	low _eventTeachService
   645   00EE72  EF                 	db	high _eventTeachService
   646   00EE73  0E                 	db	low _eventConsumer2QService
   647   00EE74  EF                 	db	high _eventConsumer2QService
   648   00EE75  FC                 	db	low _eventProducerService
   649   00EE76  EE                 	db	high _eventProducerService
   650   00EE77  EA                 	db	low _eventCoeService
   651   00EE78  EE                 	db	high _eventCoeService
   652   00EE79  D8                 	db	low _eventAckService
   653   00EE7A  EE                 	db	high _eventAckService
   654   00EE7B                     __end_of_services:
   655                           	callstack 0
   656   00EE7B                     _bl_version:
   657                           	callstack 0
   658   00EE7B  42                 	db	66
   659   00EE7C  4C                 	db	76
   660   00EE7D  5F                 	db	95
   661   00EE7E  56                 	db	86
   662   00EE7F  45                 	db	69
   663   00EE80  52                 	db	82
   664   00EE81  53                 	db	83
   665   00EE82  49                 	db	73
   666   00EE83  4F                 	db	79
   667   00EE84  4E                 	db	78
   668   00EE85  3D                 	db	61
   669   00EE86                     __end_of_bl_version:
   670                           	callstack 0
   671   000000                     _name_absaddr	set	2120
   672   00EE86                     _canPri:
   673                           	callstack 0
   674   00EE86  B0                 	db	176
   675   00EE87  A0                 	db	160
   676   00EE88  90                 	db	144
   677   00EE89  80                 	db	128
   678   00EE8A  00                 	db	0
   679   00EE8B                     __end_of_canPri:
   680                           	callstack 0
   681   00EE8B                     _channelDefaultNVs:
   682                           	callstack 0
   683   00EE8B  00                 	db	0
   684   00EE8C  06                 	db	6
   685   00EE8D  04                 	db	4
   686   00EE8E  04                 	db	4
   687   00EE8F  00                 	db	0
   688   00EE90  00                 	db	0
   689   00EE91  00                 	db	0
   690   00EE92  01                 	db	1
   691   00EE93  06                 	db	6
   692   00EE94  00                 	db	0
   693   00EE95  00                 	db	0
   694   00EE96  00                 	db	0
   695   00EE97  00                 	db	0
   696   00EE98  00                 	db	0
   697   00EE99  02                 	db	2
   698   00EE9A  06                 	db	6
   699   00EE9B  80                 	db	128
   700   00EE9C  80                 	db	128
   701   00EE9D  EB                 	db	235
   702   00EE9E  EB                 	db	235
   703   00EE9F  00                 	db	0
   704   00EEA0  03                 	db	3
   705   00EEA1  06                 	db	6
   706   00EEA2  80                 	db	128
   707   00EEA3  7F                 	db	127
   708   00EEA4  40                 	db	64
   709   00EEA5  03                 	db	3
   710   00EEA6  3C                 	db	60
   711   00EEA7  04                 	db	4
   712   00EEA8  06                 	db	6
   713   00EEA9  03                 	db	3
   714   00EEAA  80                 	db	128
   715   00EEAB  80                 	db	128
   716   00EEAC  80                 	db	128
   717   00EEAD  00                 	db	0
   718   00EEAE  05                 	db	5
   719   00EEAF  06                 	db	6
   720   00EEB0  80                 	db	128
   721   00EEB1  10                 	db	16
   722   00EEB2  00                 	db	0
   723   00EEB3  00                 	db	0
   724   00EEB4  00                 	db	0
   725   00EEB5  06                 	db	6
   726   00EEB6  06                 	db	6
   727   00EEB7  00                 	db	0
   728   00EEB8  7B                 	db	123
   729   00EEB9  20                 	db	32
   730   00EEBA  07                 	db	7
   731   00EEBB  FF                 	db	255
   732   00EEBC  07                 	db	7
   733   00EEBD  06                 	db	6
   734   00EEBE  05                 	db	5
   735   00EEBF  00                 	db	0
   736   00EEC0  00                 	db	0
   737   00EEC1  00                 	db	0
   738   00EEC2  00                 	db	0
   739   00EEC3  08                 	db	8
   740   00EEC4  00                 	db	0
   741   00EEC5  00                 	db	0
   742   00EEC6  00                 	db	0
   743   00EEC7  00                 	db	0
   744   00EEC8  00                 	db	0
   745   00EEC9  00                 	db	0
   746   00EECA  00                 	db	0
   747   00EECB  00                 	db	0
   748   00EECC  00                 	db	0
   749   00EECD  00                 	db	0
   750   00EECE  00                 	db	0
   751   00EECF  00                 	db	0
   752   00EED0  00                 	db	0
   753   00EED1  00                 	db	0
   754   00EED2  00                 	db	0
   755   00EED3  00                 	db	0
   756   00EED4  00                 	db	0
   757   00EED5  00                 	db	0
   758   00EED6  00                 	db	0
   759   00EED7  00                 	db	0
   760   00EED8                     __end_of_channelDefaultNVs:
   761                           	callstack 0
   762   00EED8                     _eventAckService:
   763                           	callstack 0
   764   00EED8  09                 	db	9
   765   00EED9  01                 	db	1
   766   00EEDA  00                 	db	0
   767   00EEDB  00                 	db	0
   768   00EEDC  52                 	db	low _ackPowerUp
   769   00EEDD  C2                 	db	high _ackPowerUp
   770   00EEDE  CE                 	db	low _ackEventProcessMessage
   771   00EEDF  67                 	db	high _ackEventProcessMessage
   772   00EEE0  00                 	db	0
   773   00EEE1  00                 	db	0
   774   00EEE2  00                 	db	0
   775   00EEE3  00                 	db	0
   776   00EEE4  00                 	db	0
   777   00EEE5  00                 	db	0
   778   00EEE6  00                 	db	0
   779   00EEE7  00                 	db	0
   780   00EEE8  00                 	db	low _ackGetDiagnostic
   781   00EEE9  C4                 	db	high _ackGetDiagnostic
   782   00EEEA                     __end_of_eventAckService:
   783                           	callstack 0
   784   00EEEA                     _eventCoeService:
   785                           	callstack 0
   786   00EEEA  08                 	db	8
   787   00EEEB  01                 	db	1
   788   00EEEC  00                 	db	0
   789   00EEED  00                 	db	0
   790   00EEEE  00                 	db	0
   791   00EEEF  00                 	db	0
   792   00EEF0  00                 	db	0
   793   00EEF1  00                 	db	0
   794   00EEF2  00                 	db	0
   795   00EEF3  00                 	db	0
   796   00EEF4  00                 	db	0
   797   00EEF5  00                 	db	0
   798   00EEF6  00                 	db	0
   799   00EEF7  00                 	db	0
   800   00EEF8  00                 	db	0
   801   00EEF9  00                 	db	0
   802   00EEFA  00                 	db	0
   803   00EEFB  00                 	db	0
   804   00EEFC                     __end_of_eventCoeService:
   805                           	callstack 0
   806   00EEFC                     _eventProducerService:
   807                           	callstack 0
   808   00EEFC  05                 	db	5
   809   00EEFD  01                 	db	1
   810   00EEFE  00                 	db	0
   811   00EEFF  00                 	db	0
   812   00EF00  24                 	db	low _producerPowerUp
   813   00EF01  C2                 	db	high _producerPowerUp
   814   00EF02  B6                 	db	low _producerProcessMessage
   815   00EF03  5E                 	db	high _producerProcessMessage
   816   00EF04  00                 	db	0
   817   00EF05  00                 	db	0
   818   00EF06  00                 	db	0
   819   00EF07  00                 	db	0
   820   00EF08  00                 	db	0
   821   00EF09  00                 	db	0
   822   00EF0A  EA                 	db	low _producerEsdData
   823   00EF0B  C5                 	db	high _producerEsdData
   824   00EF0C  88                 	db	low _producerGetDiagnostic
   825   00EF0D  C3                 	db	high _producerGetDiagnostic
   826   00EF0E                     __end_of_eventProducerService:
   827                           	callstack 0
   828   00EF0E                     _eventConsumer2QService:
   829                           	callstack 0
   830   00EF0E  06                 	db	6
   831   00EF0F  01                 	db	1
   832   00EF10  00                 	db	0
   833   00EF11  00                 	db	0
   834   00EF12  CE                 	db	low _consumer2QPowerUp
   835   00EF13  BC                 	db	high _consumer2QPowerUp
   836   00EF14  60                 	db	low _consumer2QProcessMessage
   837   00EF15  3A                 	db	high _consumer2QProcessMessage
   838   00EF16  00                 	db	0
   839   00EF17  00                 	db	0
   840   00EF18  00                 	db	0
   841   00EF19  00                 	db	0
   842   00EF1A  00                 	db	0
   843   00EF1B  00                 	db	0
   844   00EF1C  0A                 	db	low _consumer2QEsdData
   845   00EF1D  C6                 	db	high _consumer2QEsdData
   846   00EF1E  28                 	db	low _consumer2QGetDiagnostic
   847   00EF1F  C4                 	db	high _consumer2QGetDiagnostic
   848   00EF20                     __end_of_eventConsumer2QService:
   849                           	callstack 0
   850   00EF20                     _eventTeachService:
   851                           	callstack 0
   852   00EF20  04                 	db	4
   853   00EF21  01                 	db	1
   854   00EF22  48                 	db	low _teachFactoryReset
   855   00EF23  C8                 	db	high _teachFactoryReset
   856   00EF24  70                 	db	low _teachPowerUp
   857   00EF25  C0                 	db	high _teachPowerUp
   858   00EF26  8E                 	db	low _teachProcessMessage
   859   00EF27  22                 	db	high _teachProcessMessage
   860   00EF28  00                 	db	0
   861   00EF29  00                 	db	0
   862   00EF2A  00                 	db	0
   863   00EF2B  00                 	db	0
   864   00EF2C  00                 	db	0
   865   00EF2D  00                 	db	0
   866   00EF2E  38                 	db	low _teachGetESDdata
   867   00EF2F  C5                 	db	high _teachGetESDdata
   868   00EF30  50                 	db	low _teachGetDiagnostic
   869   00EF31  C4                 	db	high _teachGetDiagnostic
   870   00EF32                     __end_of_eventTeachService:
   871                           	callstack 0
   872   00EF32                     _bootService:
   873                           	callstack 0
   874   00EF32  0A                 	db	10
   875   00EF33  02                 	db	2
   876   00EF34  00                 	db	0
   877   00EF35  00                 	db	0
   878   00EF36  0E                 	db	low _bootPowerUp
   879   00EF37  93                 	db	high _bootPowerUp
   880   00EF38  46                 	db	low _bootProcessMessage
   881   00EF39  A4                 	db	high _bootProcessMessage
   882   00EF3A  00                 	db	0
   883   00EF3B  00                 	db	0
   884   00EF3C  00                 	db	0
   885   00EF3D  00                 	db	0
   886   00EF3E  00                 	db	0
   887   00EF3F  00                 	db	0
   888   00EF40  14                 	db	low _bootEsdData
   889   00EF41  C5                 	db	high _bootEsdData
   890   00EF42  00                 	db	0
   891   00EF43  00                 	db	0
   892   00EF44                     __end_of_bootService:
   893                           	callstack 0
   894   00EF44                     _nvService:
   895                           	callstack 0
   896   00EF44  02                 	db	2
   897   00EF45  01                 	db	1
   898   00EF46  E4                 	db	low _nvFactoryReset
   899   00EF47  BE                 	db	high _nvFactoryReset
   900   00EF48  3E                 	db	low _nvPowerUp
   901   00EF49  C0                 	db	high _nvPowerUp
   902   00EF4A  3C                 	db	low _nvProcessMessage
   903   00EF4B  48                 	db	high _nvProcessMessage
   904   00EF4C  00                 	db	0
   905   00EF4D  00                 	db	0
   906   00EF4E  00                 	db	0
   907   00EF4F  00                 	db	0
   908   00EF50  00                 	db	0
   909   00EF51  00                 	db	0
   910   00EF52  FA                 	db	low _nvGetESDdata
   911   00EF53  C6                 	db	high _nvGetESDdata
   912   00EF54  B0                 	db	low _nvGetDiagnostic
   913   00EF55  C3                 	db	high _nvGetDiagnostic
   914   00EF56                     __end_of_nvService:
   915                           	callstack 0
   916   00EF56                     _mnsService:
   917                           	callstack 0
   918   00EF56  01                 	db	1
   919   00EF57  01                 	db	1
   920   00EF58  AE                 	db	low _mnsFactoryReset
   921   00EF59  AD                 	db	high _mnsFactoryReset
   922   00EF5A  38                 	db	low _mnsPowerUp
   923   00EF5B  80                 	db	high _mnsPowerUp
   924   00EF5C  64                 	db	low _mnsProcessMessage
   925   00EF5D  17                 	db	high _mnsProcessMessage
   926   00EF5E  96                 	db	low _mnsPoll
   927   00EF5F  32                 	db	high _mnsPoll
   928   00EF60  00                 	db	0
   929   00EF61  00                 	db	0
   930   00EF62  9C                 	db	low _mnsLowIsr
   931   00EF63  C7                 	db	high _mnsLowIsr
   932   00EF64  00                 	db	0
   933   00EF65  00                 	db	0
   934   00EF66  D8                 	db	low _mnsGetDiagnostic
   935   00EF67  C3                 	db	high _mnsGetDiagnostic
   936   00EF68                     __end_of_mnsService:
   937                           	callstack 0
   938   00EF68                     _canService:
   939                           	callstack 0
   940   00EF68  03                 	db	3
   941   00EF69  02                 	db	2
   942   00EF6A  8A                 	db	low _canFactoryReset
   943   00EF6B  C6                 	db	high _canFactoryReset
   944   00EF6C  FA                 	db	low _canPowerUp
   945   00EF6D  70                 	db	high _canPowerUp
   946   00EF6E  0C                 	db	low _canProcessMessage
   947   00EF6F  9D                 	db	high _canProcessMessage
   948   00EF70  00                 	db	0
   949   00EF71  00                 	db	0
   950   00EF72  4A                 	db	low _canIsr
   951   00EF73  C6                 	db	high _canIsr
   952   00EF74  4A                 	db	low _canIsr
   953   00EF75  C6                 	db	high _canIsr
   954   00EF76  E0                 	db	low _canEsdData
   955   00EF77  C6                 	db	high _canEsdData
   956   00EF78  AE                 	db	low _canGetDiagnostic
   957   00EF79  B1                 	db	high _canGetDiagnostic
   958   00EF7A                     __end_of_canService:
   959                           	callstack 0
   960   00EF7A                     _canTransport:
   961                           	callstack 0
   962   00EF7A  6E                 	db	low _canSendMessage
   963   00EF7B  4B                 	db	high _canSendMessage
   964   00EF7C  BC                 	db	low _canReceiveMessage
   965   00EF7D  69                 	db	high _canReceiveMessage
   966   00EF7E                     __end_of_canTransport:
   967                           	callstack 0
   968   000000                     _eventTable_absaddr	set	61312
   969   00EF7E  00                 	db	0	; dummy byte at the end
   970   000000                     
   971                           	psect	_eventTable_text
   972   00EF80                     __p_eventTable_text:
   973                           	callstack 0
   974   00EF80                     _eventTable:
   975                           	callstack 0
   976   00EF80  FF                 	db	255
   977   00EF81  FF                 	db	255
   978   00EF82  FF                 	db	255
   979   00EF83  FF                 	db	255
   980   00EF84  FF                 	db	255
   981   00EF85  FF                 	db	255
   982   00EF86  FF                 	db	255
   983   00EF87  FF                 	db	255
   984   00EF88  FF                 	db	255
   985   00EF89  FF                 	db	255
   986   00EF8A  FF                 	db	255
   987   00EF8B  FF                 	db	255
   988   00EF8C  FF                 	db	255
   989   00EF8D  FF                 	db	255
   990   00EF8E  FF                 	db	255
   991   00EF8F  FF                 	db	255
   992   00EF90  FF                 	db	255
   993   00EF91  FF                 	db	255
   994   00EF92  FF                 	db	255
   995   00EF93  FF                 	db	255
   996   00EF94  FF                 	db	255
   997   00EF95  FF                 	db	255
   998   00EF96  FF                 	db	255
   999   00EF97  FF                 	db	255
  1000   00EF98  FF                 	db	255
  1001   00EF99  FF                 	db	255
  1002   00EF9A  FF                 	db	255
  1003   00EF9B  FF                 	db	255
  1004   00EF9C  FF                 	db	255
  1005   00EF9D  FF                 	db	255
  1006   00EF9E  FF                 	db	255
  1007   00EF9F  FF                 	db	255
  1008   00EFA0  FF                 	db	255
  1009   00EFA1  FF                 	db	255
  1010   00EFA2  FF                 	db	255
  1011   00EFA3  FF                 	db	255
  1012   00EFA4  FF                 	db	255
  1013   00EFA5  FF                 	db	255
  1014   00EFA6  FF                 	db	255
  1015   00EFA7  FF                 	db	255
  1016   00EFA8  FF                 	db	255
  1017   00EFA9  FF                 	db	255
  1018   00EFAA  FF                 	db	255
  1019   00EFAB  FF                 	db	255
  1020   00EFAC  FF                 	db	255
  1021   00EFAD  FF                 	db	255
  1022   00EFAE  FF                 	db	255
  1023   00EFAF  FF                 	db	255
  1024   00EFB0  FF                 	db	255
  1025   00EFB1  FF                 	db	255
  1026   00EFB2  FF                 	db	255
  1027   00EFB3  FF                 	db	255
  1028   00EFB4  FF                 	db	255
  1029   00EFB5  FF                 	db	255
  1030   00EFB6  FF                 	db	255
  1031   00EFB7  FF                 	db	255
  1032   00EFB8  FF                 	db	255
  1033   00EFB9  FF                 	db	255
  1034   00EFBA  FF                 	db	255
  1035   00EFBB  FF                 	db	255
  1036   00EFBC  FF                 	db	255
  1037   00EFBD  FF                 	db	255
  1038   00EFBE  FF                 	db	255
  1039   00EFBF  FF                 	db	255
  1040   00EFC0  FF                 	db	255
  1041   00EFC1  FF                 	db	255
  1042   00EFC2  FF                 	db	255
  1043   00EFC3  FF                 	db	255
  1044   00EFC4  FF                 	db	255
  1045   00EFC5  FF                 	db	255
  1046   00EFC6  FF                 	db	255
  1047   00EFC7  FF                 	db	255
  1048   00EFC8  FF                 	db	255
  1049   00EFC9  FF                 	db	255
  1050   00EFCA  FF                 	db	255
  1051   00EFCB  FF                 	db	255
  1052   00EFCC  FF                 	db	255
  1053   00EFCD  FF                 	db	255
  1054   00EFCE  FF                 	db	255
  1055   00EFCF  FF                 	db	255
  1056   00EFD0  FF                 	db	255
  1057   00EFD1  FF                 	db	255
  1058   00EFD2  FF                 	db	255
  1059   00EFD3  FF                 	db	255
  1060   00EFD4  FF                 	db	255
  1061   00EFD5  FF                 	db	255
  1062   00EFD6  FF                 	db	255
  1063   00EFD7  FF                 	db	255
  1064   00EFD8  FF                 	db	255
  1065   00EFD9  FF                 	db	255
  1066   00EFDA  FF                 	db	255
  1067   00EFDB  FF                 	db	255
  1068   00EFDC  FF                 	db	255
  1069   00EFDD  FF                 	db	255
  1070   00EFDE  FF                 	db	255
  1071   00EFDF  FF                 	db	255
  1072   00EFE0  FF                 	db	255
  1073   00EFE1  FF                 	db	255
  1074   00EFE2  FF                 	db	255
  1075   00EFE3  FF                 	db	255
  1076   00EFE4  FF                 	db	255
  1077   00EFE5  FF                 	db	255
  1078   00EFE6  FF                 	db	255
  1079   00EFE7  FF                 	db	255
  1080   00EFE8  FF                 	db	255
  1081   00EFE9  FF                 	db	255
  1082   00EFEA  FF                 	db	255
  1083   00EFEB  FF                 	db	255
  1084   00EFEC  FF                 	db	255
  1085   00EFED  FF                 	db	255
  1086   00EFEE  FF                 	db	255
  1087   00EFEF  FF                 	db	255
  1088   00EFF0  FF                 	db	255
  1089   00EFF1  FF                 	db	255
  1090   00EFF2  FF                 	db	255
  1091   00EFF3  FF                 	db	255
  1092   00EFF4  FF                 	db	255
  1093   00EFF5  FF                 	db	255
  1094   00EFF6  FF                 	db	255
  1095   00EFF7  FF                 	db	255
  1096   00EFF8  FF                 	db	255
  1097   00EFF9  FF                 	db	255
  1098   00EFFA  FF                 	db	255
  1099   00EFFB  FF                 	db	255
  1100   00EFFC  FF                 	db	255
  1101   00EFFD  FF                 	db	255
  1102   00EFFE  FF                 	db	255
  1103   00EFFF  FF                 	db	255
  1104   00F000  FF                 	db	255
  1105   00F001  FF                 	db	255
  1106   00F002  FF                 	db	255
  1107   00F003  FF                 	db	255
  1108   00F004  FF                 	db	255
  1109   00F005  FF                 	db	255
  1110   00F006  FF                 	db	255
  1111   00F007  FF                 	db	255
  1112   00F008  FF                 	db	255
  1113   00F009  FF                 	db	255
  1114   00F00A  FF                 	db	255
  1115   00F00B  FF                 	db	255
  1116   00F00C  FF                 	db	255
  1117   00F00D  FF                 	db	255
  1118   00F00E  FF                 	db	255
  1119   00F00F  FF                 	db	255
  1120   00F010  FF                 	db	255
  1121   00F011  FF                 	db	255
  1122   00F012  FF                 	db	255
  1123   00F013  FF                 	db	255
  1124   00F014  FF                 	db	255
  1125   00F015  FF                 	db	255
  1126   00F016  FF                 	db	255
  1127   00F017  FF                 	db	255
  1128   00F018  FF                 	db	255
  1129   00F019  FF                 	db	255
  1130   00F01A  FF                 	db	255
  1131   00F01B  FF                 	db	255
  1132   00F01C  FF                 	db	255
  1133   00F01D  FF                 	db	255
  1134   00F01E  FF                 	db	255
  1135   00F01F  FF                 	db	255
  1136   00F020  FF                 	db	255
  1137   00F021  FF                 	db	255
  1138   00F022  FF                 	db	255
  1139   00F023  FF                 	db	255
  1140   00F024  FF                 	db	255
  1141   00F025  FF                 	db	255
  1142   00F026  FF                 	db	255
  1143   00F027  FF                 	db	255
  1144   00F028  FF                 	db	255
  1145   00F029  FF                 	db	255
  1146   00F02A  FF                 	db	255
  1147   00F02B  FF                 	db	255
  1148   00F02C  FF                 	db	255
  1149   00F02D  FF                 	db	255
  1150   00F02E  FF                 	db	255
  1151   00F02F  FF                 	db	255
  1152   00F030  FF                 	db	255
  1153   00F031  FF                 	db	255
  1154   00F032  FF                 	db	255
  1155   00F033  FF                 	db	255
  1156   00F034  FF                 	db	255
  1157   00F035  FF                 	db	255
  1158   00F036  FF                 	db	255
  1159   00F037  FF                 	db	255
  1160   00F038  FF                 	db	255
  1161   00F039  FF                 	db	255
  1162   00F03A  FF                 	db	255
  1163   00F03B  FF                 	db	255
  1164   00F03C  FF                 	db	255
  1165   00F03D  FF                 	db	255
  1166   00F03E  FF                 	db	255
  1167   00F03F  FF                 	db	255
  1168   00F040  FF                 	db	255
  1169   00F041  FF                 	db	255
  1170   00F042  FF                 	db	255
  1171   00F043  FF                 	db	255
  1172   00F044  FF                 	db	255
  1173   00F045  FF                 	db	255
  1174   00F046  FF                 	db	255
  1175   00F047  FF                 	db	255
  1176   00F048  FF                 	db	255
  1177   00F049  FF                 	db	255
  1178   00F04A  FF                 	db	255
  1179   00F04B  FF                 	db	255
  1180   00F04C  FF                 	db	255
  1181   00F04D  FF                 	db	255
  1182   00F04E  FF                 	db	255
  1183   00F04F  FF                 	db	255
  1184   00F050  FF                 	db	255
  1185   00F051  FF                 	db	255
  1186   00F052  FF                 	db	255
  1187   00F053  FF                 	db	255
  1188   00F054  FF                 	db	255
  1189   00F055  FF                 	db	255
  1190   00F056  FF                 	db	255
  1191   00F057  FF                 	db	255
  1192   00F058  FF                 	db	255
  1193   00F059  FF                 	db	255
  1194   00F05A  FF                 	db	255
  1195   00F05B  FF                 	db	255
  1196   00F05C  FF                 	db	255
  1197   00F05D  FF                 	db	255
  1198   00F05E  FF                 	db	255
  1199   00F05F  FF                 	db	255
  1200   00F060  FF                 	db	255
  1201   00F061  FF                 	db	255
  1202   00F062  FF                 	db	255
  1203   00F063  FF                 	db	255
  1204   00F064  FF                 	db	255
  1205   00F065  FF                 	db	255
  1206   00F066  FF                 	db	255
  1207   00F067  FF                 	db	255
  1208   00F068  FF                 	db	255
  1209   00F069  FF                 	db	255
  1210   00F06A  FF                 	db	255
  1211   00F06B  FF                 	db	255
  1212   00F06C  FF                 	db	255
  1213   00F06D  FF                 	db	255
  1214   00F06E  FF                 	db	255
  1215   00F06F  FF                 	db	255
  1216   00F070  FF                 	db	255
  1217   00F071  FF                 	db	255
  1218   00F072  FF                 	db	255
  1219   00F073  FF                 	db	255
  1220   00F074  FF                 	db	255
  1221   00F075  FF                 	db	255
  1222   00F076  FF                 	db	255
  1223   00F077  FF                 	db	255
  1224   00F078  FF                 	db	255
  1225   00F079  FF                 	db	255
  1226   00F07A  FF                 	db	255
  1227   00F07B  FF                 	db	255
  1228   00F07C  FF                 	db	255
  1229   00F07D  FF                 	db	255
  1230   00F07E  FF                 	db	255
  1231   00F07F  FF                 	db	255
  1232   00F080  FF                 	db	255
  1233   00F081  FF                 	db	255
  1234   00F082  FF                 	db	255
  1235   00F083  FF                 	db	255
  1236   00F084  FF                 	db	255
  1237   00F085  FF                 	db	255
  1238   00F086  FF                 	db	255
  1239   00F087  FF                 	db	255
  1240   00F088  FF                 	db	255
  1241   00F089  FF                 	db	255
  1242   00F08A  FF                 	db	255
  1243   00F08B  FF                 	db	255
  1244   00F08C  FF                 	db	255
  1245   00F08D  FF                 	db	255
  1246   00F08E  FF                 	db	255
  1247   00F08F  FF                 	db	255
  1248   00F090  FF                 	db	255
  1249   00F091  FF                 	db	255
  1250   00F092  FF                 	db	255
  1251   00F093  FF                 	db	255
  1252   00F094  FF                 	db	255
  1253   00F095  FF                 	db	255
  1254   00F096  FF                 	db	255
  1255   00F097  FF                 	db	255
  1256   00F098  FF                 	db	255
  1257   00F099  FF                 	db	255
  1258   00F09A  FF                 	db	255
  1259   00F09B  FF                 	db	255
  1260   00F09C  FF                 	db	255
  1261   00F09D  FF                 	db	255
  1262   00F09E  FF                 	db	255
  1263   00F09F  FF                 	db	255
  1264   00F0A0  FF                 	db	255
  1265   00F0A1  FF                 	db	255
  1266   00F0A2  FF                 	db	255
  1267   00F0A3  FF                 	db	255
  1268   00F0A4  FF                 	db	255
  1269   00F0A5  FF                 	db	255
  1270   00F0A6  FF                 	db	255
  1271   00F0A7  FF                 	db	255
  1272   00F0A8  FF                 	db	255
  1273   00F0A9  FF                 	db	255
  1274   00F0AA  FF                 	db	255
  1275   00F0AB  FF                 	db	255
  1276   00F0AC  FF                 	db	255
  1277   00F0AD  FF                 	db	255
  1278   00F0AE  FF                 	db	255
  1279   00F0AF  FF                 	db	255
  1280   00F0B0  FF                 	db	255
  1281   00F0B1  FF                 	db	255
  1282   00F0B2  FF                 	db	255
  1283   00F0B3  FF                 	db	255
  1284   00F0B4  FF                 	db	255
  1285   00F0B5  FF                 	db	255
  1286   00F0B6  FF                 	db	255
  1287   00F0B7  FF                 	db	255
  1288   00F0B8  FF                 	db	255
  1289   00F0B9  FF                 	db	255
  1290   00F0BA  FF                 	db	255
  1291   00F0BB  FF                 	db	255
  1292   00F0BC  FF                 	db	255
  1293   00F0BD  FF                 	db	255
  1294   00F0BE  FF                 	db	255
  1295   00F0BF  FF                 	db	255
  1296   00F0C0  FF                 	db	255
  1297   00F0C1  FF                 	db	255
  1298   00F0C2  FF                 	db	255
  1299   00F0C3  FF                 	db	255
  1300   00F0C4  FF                 	db	255
  1301   00F0C5  FF                 	db	255
  1302   00F0C6  FF                 	db	255
  1303   00F0C7  FF                 	db	255
  1304   00F0C8  FF                 	db	255
  1305   00F0C9  FF                 	db	255
  1306   00F0CA  FF                 	db	255
  1307   00F0CB  FF                 	db	255
  1308   00F0CC  FF                 	db	255
  1309   00F0CD  FF                 	db	255
  1310   00F0CE  FF                 	db	255
  1311   00F0CF  FF                 	db	255
  1312   00F0D0  FF                 	db	255
  1313   00F0D1  FF                 	db	255
  1314   00F0D2  FF                 	db	255
  1315   00F0D3  FF                 	db	255
  1316   00F0D4  FF                 	db	255
  1317   00F0D5  FF                 	db	255
  1318   00F0D6  FF                 	db	255
  1319   00F0D7  FF                 	db	255
  1320   00F0D8  FF                 	db	255
  1321   00F0D9  FF                 	db	255
  1322   00F0DA  FF                 	db	255
  1323   00F0DB  FF                 	db	255
  1324   00F0DC  FF                 	db	255
  1325   00F0DD  FF                 	db	255
  1326   00F0DE  FF                 	db	255
  1327   00F0DF  FF                 	db	255
  1328   00F0E0  FF                 	db	255
  1329   00F0E1  FF                 	db	255
  1330   00F0E2  FF                 	db	255
  1331   00F0E3  FF                 	db	255
  1332   00F0E4  FF                 	db	255
  1333   00F0E5  FF                 	db	255
  1334   00F0E6  FF                 	db	255
  1335   00F0E7  FF                 	db	255
  1336   00F0E8  FF                 	db	255
  1337   00F0E9  FF                 	db	255
  1338   00F0EA  FF                 	db	255
  1339   00F0EB  FF                 	db	255
  1340   00F0EC  FF                 	db	255
  1341   00F0ED  FF                 	db	255
  1342   00F0EE  FF                 	db	255
  1343   00F0EF  FF                 	db	255
  1344   00F0F0  FF                 	db	255
  1345   00F0F1  FF                 	db	255
  1346   00F0F2  FF                 	db	255
  1347   00F0F3  FF                 	db	255
  1348   00F0F4  FF                 	db	255
  1349   00F0F5  FF                 	db	255
  1350   00F0F6  FF                 	db	255
  1351   00F0F7  FF                 	db	255
  1352   00F0F8  FF                 	db	255
  1353   00F0F9  FF                 	db	255
  1354   00F0FA  FF                 	db	255
  1355   00F0FB  FF                 	db	255
  1356   00F0FC  FF                 	db	255
  1357   00F0FD  FF                 	db	255
  1358   00F0FE  FF                 	db	255
  1359   00F0FF  FF                 	db	255
  1360   00F100  FF                 	db	255
  1361   00F101  FF                 	db	255
  1362   00F102  FF                 	db	255
  1363   00F103  FF                 	db	255
  1364   00F104  FF                 	db	255
  1365   00F105  FF                 	db	255
  1366   00F106  FF                 	db	255
  1367   00F107  FF                 	db	255
  1368   00F108  FF                 	db	255
  1369   00F109  FF                 	db	255
  1370   00F10A  FF                 	db	255
  1371   00F10B  FF                 	db	255
  1372   00F10C  FF                 	db	255
  1373   00F10D  FF                 	db	255
  1374   00F10E  FF                 	db	255
  1375   00F10F  FF                 	db	255
  1376   00F110  FF                 	db	255
  1377   00F111  FF                 	db	255
  1378   00F112  FF                 	db	255
  1379   00F113  FF                 	db	255
  1380   00F114  FF                 	db	255
  1381   00F115  FF                 	db	255
  1382   00F116  FF                 	db	255
  1383   00F117  FF                 	db	255
  1384   00F118  FF                 	db	255
  1385   00F119  FF                 	db	255
  1386   00F11A  FF                 	db	255
  1387   00F11B  FF                 	db	255
  1388   00F11C  FF                 	db	255
  1389   00F11D  FF                 	db	255
  1390   00F11E  FF                 	db	255
  1391   00F11F  FF                 	db	255
  1392   00F120  FF                 	db	255
  1393   00F121  FF                 	db	255
  1394   00F122  FF                 	db	255
  1395   00F123  FF                 	db	255
  1396   00F124  FF                 	db	255
  1397   00F125  FF                 	db	255
  1398   00F126  FF                 	db	255
  1399   00F127  FF                 	db	255
  1400   00F128  FF                 	db	255
  1401   00F129  FF                 	db	255
  1402   00F12A  FF                 	db	255
  1403   00F12B  FF                 	db	255
  1404   00F12C  FF                 	db	255
  1405   00F12D  FF                 	db	255
  1406   00F12E  FF                 	db	255
  1407   00F12F  FF                 	db	255
  1408   00F130  FF                 	db	255
  1409   00F131  FF                 	db	255
  1410   00F132  FF                 	db	255
  1411   00F133  FF                 	db	255
  1412   00F134  FF                 	db	255
  1413   00F135  FF                 	db	255
  1414   00F136  FF                 	db	255
  1415   00F137  FF                 	db	255
  1416   00F138  FF                 	db	255
  1417   00F139  FF                 	db	255
  1418   00F13A  FF                 	db	255
  1419   00F13B  FF                 	db	255
  1420   00F13C  FF                 	db	255
  1421   00F13D  FF                 	db	255
  1422   00F13E  FF                 	db	255
  1423   00F13F  FF                 	db	255
  1424   00F140  FF                 	db	255
  1425   00F141  FF                 	db	255
  1426   00F142  FF                 	db	255
  1427   00F143  FF                 	db	255
  1428   00F144  FF                 	db	255
  1429   00F145  FF                 	db	255
  1430   00F146  FF                 	db	255
  1431   00F147  FF                 	db	255
  1432   00F148  FF                 	db	255
  1433   00F149  FF                 	db	255
  1434   00F14A  FF                 	db	255
  1435   00F14B  FF                 	db	255
  1436   00F14C  FF                 	db	255
  1437   00F14D  FF                 	db	255
  1438   00F14E  FF                 	db	255
  1439   00F14F  FF                 	db	255
  1440   00F150  FF                 	db	255
  1441   00F151  FF                 	db	255
  1442   00F152  FF                 	db	255
  1443   00F153  FF                 	db	255
  1444   00F154  FF                 	db	255
  1445   00F155  FF                 	db	255
  1446   00F156  FF                 	db	255
  1447   00F157  FF                 	db	255
  1448   00F158  FF                 	db	255
  1449   00F159  FF                 	db	255
  1450   00F15A  FF                 	db	255
  1451   00F15B  FF                 	db	255
  1452   00F15C  FF                 	db	255
  1453   00F15D  FF                 	db	255
  1454   00F15E  FF                 	db	255
  1455   00F15F  FF                 	db	255
  1456   00F160  FF                 	db	255
  1457   00F161  FF                 	db	255
  1458   00F162  FF                 	db	255
  1459   00F163  FF                 	db	255
  1460   00F164  FF                 	db	255
  1461   00F165  FF                 	db	255
  1462   00F166  FF                 	db	255
  1463   00F167  FF                 	db	255
  1464   00F168  FF                 	db	255
  1465   00F169  FF                 	db	255
  1466   00F16A  FF                 	db	255
  1467   00F16B  FF                 	db	255
  1468   00F16C  FF                 	db	255
  1469   00F16D  FF                 	db	255
  1470   00F16E  FF                 	db	255
  1471   00F16F  FF                 	db	255
  1472   00F170  FF                 	db	255
  1473   00F171  FF                 	db	255
  1474   00F172  FF                 	db	255
  1475   00F173  FF                 	db	255
  1476   00F174  FF                 	db	255
  1477   00F175  FF                 	db	255
  1478   00F176  FF                 	db	255
  1479   00F177  FF                 	db	255
  1480   00F178  FF                 	db	255
  1481   00F179  FF                 	db	255
  1482   00F17A  FF                 	db	255
  1483   00F17B  FF                 	db	255
  1484   00F17C  FF                 	db	255
  1485   00F17D  FF                 	db	255
  1486   00F17E  FF                 	db	255
  1487   00F17F  FF                 	db	255
  1488   00F180  FF                 	db	255
  1489   00F181  FF                 	db	255
  1490   00F182  FF                 	db	255
  1491   00F183  FF                 	db	255
  1492   00F184  FF                 	db	255
  1493   00F185  FF                 	db	255
  1494   00F186  FF                 	db	255
  1495   00F187  FF                 	db	255
  1496   00F188  FF                 	db	255
  1497   00F189  FF                 	db	255
  1498   00F18A  FF                 	db	255
  1499   00F18B  FF                 	db	255
  1500   00F18C  FF                 	db	255
  1501   00F18D  FF                 	db	255
  1502   00F18E  FF                 	db	255
  1503   00F18F  FF                 	db	255
  1504   00F190  FF                 	db	255
  1505   00F191  FF                 	db	255
  1506   00F192  FF                 	db	255
  1507   00F193  FF                 	db	255
  1508   00F194  FF                 	db	255
  1509   00F195  FF                 	db	255
  1510   00F196  FF                 	db	255
  1511   00F197  FF                 	db	255
  1512   00F198  FF                 	db	255
  1513   00F199  FF                 	db	255
  1514   00F19A  FF                 	db	255
  1515   00F19B  FF                 	db	255
  1516   00F19C  FF                 	db	255
  1517   00F19D  FF                 	db	255
  1518   00F19E  FF                 	db	255
  1519   00F19F  FF                 	db	255
  1520   00F1A0  FF                 	db	255
  1521   00F1A1  FF                 	db	255
  1522   00F1A2  FF                 	db	255
  1523   00F1A3  FF                 	db	255
  1524   00F1A4  FF                 	db	255
  1525   00F1A5  FF                 	db	255
  1526   00F1A6  FF                 	db	255
  1527   00F1A7  FF                 	db	255
  1528   00F1A8  FF                 	db	255
  1529   00F1A9  FF                 	db	255
  1530   00F1AA  FF                 	db	255
  1531   00F1AB  FF                 	db	255
  1532   00F1AC  FF                 	db	255
  1533   00F1AD  FF                 	db	255
  1534   00F1AE  FF                 	db	255
  1535   00F1AF  FF                 	db	255
  1536   00F1B0  FF                 	db	255
  1537   00F1B1  FF                 	db	255
  1538   00F1B2  FF                 	db	255
  1539   00F1B3  FF                 	db	255
  1540   00F1B4  FF                 	db	255
  1541   00F1B5  FF                 	db	255
  1542   00F1B6  FF                 	db	255
  1543   00F1B7  FF                 	db	255
  1544   00F1B8  FF                 	db	255
  1545   00F1B9  FF                 	db	255
  1546   00F1BA  FF                 	db	255
  1547   00F1BB  FF                 	db	255
  1548   00F1BC  FF                 	db	255
  1549   00F1BD  FF                 	db	255
  1550   00F1BE  FF                 	db	255
  1551   00F1BF  FF                 	db	255
  1552   00F1C0  FF                 	db	255
  1553   00F1C1  FF                 	db	255
  1554   00F1C2  FF                 	db	255
  1555   00F1C3  FF                 	db	255
  1556   00F1C4  FF                 	db	255
  1557   00F1C5  FF                 	db	255
  1558   00F1C6  FF                 	db	255
  1559   00F1C7  FF                 	db	255
  1560   00F1C8  FF                 	db	255
  1561   00F1C9  FF                 	db	255
  1562   00F1CA  FF                 	db	255
  1563   00F1CB  FF                 	db	255
  1564   00F1CC  FF                 	db	255
  1565   00F1CD  FF                 	db	255
  1566   00F1CE  FF                 	db	255
  1567   00F1CF  FF                 	db	255
  1568   00F1D0  FF                 	db	255
  1569   00F1D1  FF                 	db	255
  1570   00F1D2  FF                 	db	255
  1571   00F1D3  FF                 	db	255
  1572   00F1D4  FF                 	db	255
  1573   00F1D5  FF                 	db	255
  1574   00F1D6  FF                 	db	255
  1575   00F1D7  FF                 	db	255
  1576   00F1D8  FF                 	db	255
  1577   00F1D9  FF                 	db	255
  1578   00F1DA  FF                 	db	255
  1579   00F1DB  FF                 	db	255
  1580   00F1DC  FF                 	db	255
  1581   00F1DD  FF                 	db	255
  1582   00F1DE  FF                 	db	255
  1583   00F1DF  FF                 	db	255
  1584   00F1E0  FF                 	db	255
  1585   00F1E1  FF                 	db	255
  1586   00F1E2  FF                 	db	255
  1587   00F1E3  FF                 	db	255
  1588   00F1E4  FF                 	db	255
  1589   00F1E5  FF                 	db	255
  1590   00F1E6  FF                 	db	255
  1591   00F1E7  FF                 	db	255
  1592   00F1E8  FF                 	db	255
  1593   00F1E9  FF                 	db	255
  1594   00F1EA  FF                 	db	255
  1595   00F1EB  FF                 	db	255
  1596   00F1EC  FF                 	db	255
  1597   00F1ED  FF                 	db	255
  1598   00F1EE  FF                 	db	255
  1599   00F1EF  FF                 	db	255
  1600   00F1F0  FF                 	db	255
  1601   00F1F1  FF                 	db	255
  1602   00F1F2  FF                 	db	255
  1603   00F1F3  FF                 	db	255
  1604   00F1F4  FF                 	db	255
  1605   00F1F5  FF                 	db	255
  1606   00F1F6  FF                 	db	255
  1607   00F1F7  FF                 	db	255
  1608   00F1F8  FF                 	db	255
  1609   00F1F9  FF                 	db	255
  1610   00F1FA  FF                 	db	255
  1611   00F1FB  FF                 	db	255
  1612   00F1FC  FF                 	db	255
  1613   00F1FD  FF                 	db	255
  1614   00F1FE  FF                 	db	255
  1615   00F1FF  FF                 	db	255
  1616   00F200  FF                 	db	255
  1617   00F201  FF                 	db	255
  1618   00F202  FF                 	db	255
  1619   00F203  FF                 	db	255
  1620   00F204  FF                 	db	255
  1621   00F205  FF                 	db	255
  1622   00F206  FF                 	db	255
  1623   00F207  FF                 	db	255
  1624   00F208  FF                 	db	255
  1625   00F209  FF                 	db	255
  1626   00F20A  FF                 	db	255
  1627   00F20B  FF                 	db	255
  1628   00F20C  FF                 	db	255
  1629   00F20D  FF                 	db	255
  1630   00F20E  FF                 	db	255
  1631   00F20F  FF                 	db	255
  1632   00F210  FF                 	db	255
  1633   00F211  FF                 	db	255
  1634   00F212  FF                 	db	255
  1635   00F213  FF                 	db	255
  1636   00F214  FF                 	db	255
  1637   00F215  FF                 	db	255
  1638   00F216  FF                 	db	255
  1639   00F217  FF                 	db	255
  1640   00F218  FF                 	db	255
  1641   00F219  FF                 	db	255
  1642   00F21A  FF                 	db	255
  1643   00F21B  FF                 	db	255
  1644   00F21C  FF                 	db	255
  1645   00F21D  FF                 	db	255
  1646   00F21E  FF                 	db	255
  1647   00F21F  FF                 	db	255
  1648   00F220  FF                 	db	255
  1649   00F221  FF                 	db	255
  1650   00F222  FF                 	db	255
  1651   00F223  FF                 	db	255
  1652   00F224  FF                 	db	255
  1653   00F225  FF                 	db	255
  1654   00F226  FF                 	db	255
  1655   00F227  FF                 	db	255
  1656   00F228  FF                 	db	255
  1657   00F229  FF                 	db	255
  1658   00F22A  FF                 	db	255
  1659   00F22B  FF                 	db	255
  1660   00F22C  FF                 	db	255
  1661   00F22D  FF                 	db	255
  1662   00F22E  FF                 	db	255
  1663   00F22F  FF                 	db	255
  1664   00F230  FF                 	db	255
  1665   00F231  FF                 	db	255
  1666   00F232  FF                 	db	255
  1667   00F233  FF                 	db	255
  1668   00F234  FF                 	db	255
  1669   00F235  FF                 	db	255
  1670   00F236  FF                 	db	255
  1671   00F237  FF                 	db	255
  1672   00F238  FF                 	db	255
  1673   00F239  FF                 	db	255
  1674   00F23A  FF                 	db	255
  1675   00F23B  FF                 	db	255
  1676   00F23C  FF                 	db	255
  1677   00F23D  FF                 	db	255
  1678   00F23E  FF                 	db	255
  1679   00F23F  FF                 	db	255
  1680   00F240  FF                 	db	255
  1681   00F241  FF                 	db	255
  1682   00F242  FF                 	db	255
  1683   00F243  FF                 	db	255
  1684   00F244  FF                 	db	255
  1685   00F245  FF                 	db	255
  1686   00F246  FF                 	db	255
  1687   00F247  FF                 	db	255
  1688   00F248  FF                 	db	255
  1689   00F249  FF                 	db	255
  1690   00F24A  FF                 	db	255
  1691   00F24B  FF                 	db	255
  1692   00F24C  FF                 	db	255
  1693   00F24D  FF                 	db	255
  1694   00F24E  FF                 	db	255
  1695   00F24F  FF                 	db	255
  1696   00F250  FF                 	db	255
  1697   00F251  FF                 	db	255
  1698   00F252  FF                 	db	255
  1699   00F253  FF                 	db	255
  1700   00F254  FF                 	db	255
  1701   00F255  FF                 	db	255
  1702   00F256  FF                 	db	255
  1703   00F257  FF                 	db	255
  1704   00F258  FF                 	db	255
  1705   00F259  FF                 	db	255
  1706   00F25A  FF                 	db	255
  1707   00F25B  FF                 	db	255
  1708   00F25C  FF                 	db	255
  1709   00F25D  FF                 	db	255
  1710   00F25E  FF                 	db	255
  1711   00F25F  FF                 	db	255
  1712   00F260  FF                 	db	255
  1713   00F261  FF                 	db	255
  1714   00F262  FF                 	db	255
  1715   00F263  FF                 	db	255
  1716   00F264  FF                 	db	255
  1717   00F265  FF                 	db	255
  1718   00F266  FF                 	db	255
  1719   00F267  FF                 	db	255
  1720   00F268  FF                 	db	255
  1721   00F269  FF                 	db	255
  1722   00F26A  FF                 	db	255
  1723   00F26B  FF                 	db	255
  1724   00F26C  FF                 	db	255
  1725   00F26D  FF                 	db	255
  1726   00F26E  FF                 	db	255
  1727   00F26F  FF                 	db	255
  1728   00F270  FF                 	db	255
  1729   00F271  FF                 	db	255
  1730   00F272  FF                 	db	255
  1731   00F273  FF                 	db	255
  1732   00F274  FF                 	db	255
  1733   00F275  FF                 	db	255
  1734   00F276  FF                 	db	255
  1735   00F277  FF                 	db	255
  1736   00F278  FF                 	db	255
  1737   00F279  FF                 	db	255
  1738   00F27A  FF                 	db	255
  1739   00F27B  FF                 	db	255
  1740   00F27C  FF                 	db	255
  1741   00F27D  FF                 	db	255
  1742   00F27E  FF                 	db	255
  1743   00F27F  FF                 	db	255
  1744   00F280  FF                 	db	255
  1745   00F281  FF                 	db	255
  1746   00F282  FF                 	db	255
  1747   00F283  FF                 	db	255
  1748   00F284  FF                 	db	255
  1749   00F285  FF                 	db	255
  1750   00F286  FF                 	db	255
  1751   00F287  FF                 	db	255
  1752   00F288  FF                 	db	255
  1753   00F289  FF                 	db	255
  1754   00F28A  FF                 	db	255
  1755   00F28B  FF                 	db	255
  1756   00F28C  FF                 	db	255
  1757   00F28D  FF                 	db	255
  1758   00F28E  FF                 	db	255
  1759   00F28F  FF                 	db	255
  1760   00F290  FF                 	db	255
  1761   00F291  FF                 	db	255
  1762   00F292  FF                 	db	255
  1763   00F293  FF                 	db	255
  1764   00F294  FF                 	db	255
  1765   00F295  FF                 	db	255
  1766   00F296  FF                 	db	255
  1767   00F297  FF                 	db	255
  1768   00F298  FF                 	db	255
  1769   00F299  FF                 	db	255
  1770   00F29A  FF                 	db	255
  1771   00F29B  FF                 	db	255
  1772   00F29C  FF                 	db	255
  1773   00F29D  FF                 	db	255
  1774   00F29E  FF                 	db	255
  1775   00F29F  FF                 	db	255
  1776   00F2A0  FF                 	db	255
  1777   00F2A1  FF                 	db	255
  1778   00F2A2  FF                 	db	255
  1779   00F2A3  FF                 	db	255
  1780   00F2A4  FF                 	db	255
  1781   00F2A5  FF                 	db	255
  1782   00F2A6  FF                 	db	255
  1783   00F2A7  FF                 	db	255
  1784   00F2A8  FF                 	db	255
  1785   00F2A9  FF                 	db	255
  1786   00F2AA  FF                 	db	255
  1787   00F2AB  FF                 	db	255
  1788   00F2AC  FF                 	db	255
  1789   00F2AD  FF                 	db	255
  1790   00F2AE  FF                 	db	255
  1791   00F2AF  FF                 	db	255
  1792   00F2B0  FF                 	db	255
  1793   00F2B1  FF                 	db	255
  1794   00F2B2  FF                 	db	255
  1795   00F2B3  FF                 	db	255
  1796   00F2B4  FF                 	db	255
  1797   00F2B5  FF                 	db	255
  1798   00F2B6  FF                 	db	255
  1799   00F2B7  FF                 	db	255
  1800   00F2B8  FF                 	db	255
  1801   00F2B9  FF                 	db	255
  1802   00F2BA  FF                 	db	255
  1803   00F2BB  FF                 	db	255
  1804   00F2BC  FF                 	db	255
  1805   00F2BD  FF                 	db	255
  1806   00F2BE  FF                 	db	255
  1807   00F2BF  FF                 	db	255
  1808   00F2C0  FF                 	db	255
  1809   00F2C1  FF                 	db	255
  1810   00F2C2  FF                 	db	255
  1811   00F2C3  FF                 	db	255
  1812   00F2C4  FF                 	db	255
  1813   00F2C5  FF                 	db	255
  1814   00F2C6  FF                 	db	255
  1815   00F2C7  FF                 	db	255
  1816   00F2C8  FF                 	db	255
  1817   00F2C9  FF                 	db	255
  1818   00F2CA  FF                 	db	255
  1819   00F2CB  FF                 	db	255
  1820   00F2CC  FF                 	db	255
  1821   00F2CD  FF                 	db	255
  1822   00F2CE  FF                 	db	255
  1823   00F2CF  FF                 	db	255
  1824   00F2D0  FF                 	db	255
  1825   00F2D1  FF                 	db	255
  1826   00F2D2  FF                 	db	255
  1827   00F2D3  FF                 	db	255
  1828   00F2D4  FF                 	db	255
  1829   00F2D5  FF                 	db	255
  1830   00F2D6  FF                 	db	255
  1831   00F2D7  FF                 	db	255
  1832   00F2D8  FF                 	db	255
  1833   00F2D9  FF                 	db	255
  1834   00F2DA  FF                 	db	255
  1835   00F2DB  FF                 	db	255
  1836   00F2DC  FF                 	db	255
  1837   00F2DD  FF                 	db	255
  1838   00F2DE  FF                 	db	255
  1839   00F2DF  FF                 	db	255
  1840   00F2E0  FF                 	db	255
  1841   00F2E1  FF                 	db	255
  1842   00F2E2  FF                 	db	255
  1843   00F2E3  FF                 	db	255
  1844   00F2E4  FF                 	db	255
  1845   00F2E5  FF                 	db	255
  1846   00F2E6  FF                 	db	255
  1847   00F2E7  FF                 	db	255
  1848   00F2E8  FF                 	db	255
  1849   00F2E9  FF                 	db	255
  1850   00F2EA  FF                 	db	255
  1851   00F2EB  FF                 	db	255
  1852   00F2EC  FF                 	db	255
  1853   00F2ED  FF                 	db	255
  1854   00F2EE  FF                 	db	255
  1855   00F2EF  FF                 	db	255
  1856   00F2F0  FF                 	db	255
  1857   00F2F1  FF                 	db	255
  1858   00F2F2  FF                 	db	255
  1859   00F2F3  FF                 	db	255
  1860   00F2F4  FF                 	db	255
  1861   00F2F5  FF                 	db	255
  1862   00F2F6  FF                 	db	255
  1863   00F2F7  FF                 	db	255
  1864   00F2F8  FF                 	db	255
  1865   00F2F9  FF                 	db	255
  1866   00F2FA  FF                 	db	255
  1867   00F2FB  FF                 	db	255
  1868   00F2FC  FF                 	db	255
  1869   00F2FD  FF                 	db	255
  1870   00F2FE  FF                 	db	255
  1871   00F2FF  FF                 	db	255
  1872   00F300  FF                 	db	255
  1873   00F301  FF                 	db	255
  1874   00F302  FF                 	db	255
  1875   00F303  FF                 	db	255
  1876   00F304  FF                 	db	255
  1877   00F305  FF                 	db	255
  1878   00F306  FF                 	db	255
  1879   00F307  FF                 	db	255
  1880   00F308  FF                 	db	255
  1881   00F309  FF                 	db	255
  1882   00F30A  FF                 	db	255
  1883   00F30B  FF                 	db	255
  1884   00F30C  FF                 	db	255
  1885   00F30D  FF                 	db	255
  1886   00F30E  FF                 	db	255
  1887   00F30F  FF                 	db	255
  1888   00F310  FF                 	db	255
  1889   00F311  FF                 	db	255
  1890   00F312  FF                 	db	255
  1891   00F313  FF                 	db	255
  1892   00F314  FF                 	db	255
  1893   00F315  FF                 	db	255
  1894   00F316  FF                 	db	255
  1895   00F317  FF                 	db	255
  1896   00F318  FF                 	db	255
  1897   00F319  FF                 	db	255
  1898   00F31A  FF                 	db	255
  1899   00F31B  FF                 	db	255
  1900   00F31C  FF                 	db	255
  1901   00F31D  FF                 	db	255
  1902   00F31E  FF                 	db	255
  1903   00F31F  FF                 	db	255
  1904   00F320  FF                 	db	255
  1905   00F321  FF                 	db	255
  1906   00F322  FF                 	db	255
  1907   00F323  FF                 	db	255
  1908   00F324  FF                 	db	255
  1909   00F325  FF                 	db	255
  1910   00F326  FF                 	db	255
  1911   00F327  FF                 	db	255
  1912   00F328  FF                 	db	255
  1913   00F329  FF                 	db	255
  1914   00F32A  FF                 	db	255
  1915   00F32B  FF                 	db	255
  1916   00F32C  FF                 	db	255
  1917   00F32D  FF                 	db	255
  1918   00F32E  FF                 	db	255
  1919   00F32F  FF                 	db	255
  1920   00F330  FF                 	db	255
  1921   00F331  FF                 	db	255
  1922   00F332  FF                 	db	255
  1923   00F333  FF                 	db	255
  1924   00F334  FF                 	db	255
  1925   00F335  FF                 	db	255
  1926   00F336  FF                 	db	255
  1927   00F337  FF                 	db	255
  1928   00F338  FF                 	db	255
  1929   00F339  FF                 	db	255
  1930   00F33A  FF                 	db	255
  1931   00F33B  FF                 	db	255
  1932   00F33C  FF                 	db	255
  1933   00F33D  FF                 	db	255
  1934   00F33E  FF                 	db	255
  1935   00F33F  FF                 	db	255
  1936   00F340  FF                 	db	255
  1937   00F341  FF                 	db	255
  1938   00F342  FF                 	db	255
  1939   00F343  FF                 	db	255
  1940   00F344  FF                 	db	255
  1941   00F345  FF                 	db	255
  1942   00F346  FF                 	db	255
  1943   00F347  FF                 	db	255
  1944   00F348  FF                 	db	255
  1945   00F349  FF                 	db	255
  1946   00F34A  FF                 	db	255
  1947   00F34B  FF                 	db	255
  1948   00F34C  FF                 	db	255
  1949   00F34D  FF                 	db	255
  1950   00F34E  FF                 	db	255
  1951   00F34F  FF                 	db	255
  1952   00F350  FF                 	db	255
  1953   00F351  FF                 	db	255
  1954   00F352  FF                 	db	255
  1955   00F353  FF                 	db	255
  1956   00F354  FF                 	db	255
  1957   00F355  FF                 	db	255
  1958   00F356  FF                 	db	255
  1959   00F357  FF                 	db	255
  1960   00F358  FF                 	db	255
  1961   00F359  FF                 	db	255
  1962   00F35A  FF                 	db	255
  1963   00F35B  FF                 	db	255
  1964   00F35C  FF                 	db	255
  1965   00F35D  FF                 	db	255
  1966   00F35E  FF                 	db	255
  1967   00F35F  FF                 	db	255
  1968   00F360  FF                 	db	255
  1969   00F361  FF                 	db	255
  1970   00F362  FF                 	db	255
  1971   00F363  FF                 	db	255
  1972   00F364  FF                 	db	255
  1973   00F365  FF                 	db	255
  1974   00F366  FF                 	db	255
  1975   00F367  FF                 	db	255
  1976   00F368  FF                 	db	255
  1977   00F369  FF                 	db	255
  1978   00F36A  FF                 	db	255
  1979   00F36B  FF                 	db	255
  1980   00F36C  FF                 	db	255
  1981   00F36D  FF                 	db	255
  1982   00F36E  FF                 	db	255
  1983   00F36F  FF                 	db	255
  1984   00F370  FF                 	db	255
  1985   00F371  FF                 	db	255
  1986   00F372  FF                 	db	255
  1987   00F373  FF                 	db	255
  1988   00F374  FF                 	db	255
  1989   00F375  FF                 	db	255
  1990   00F376  FF                 	db	255
  1991   00F377  FF                 	db	255
  1992   00F378  FF                 	db	255
  1993   00F379  FF                 	db	255
  1994   00F37A  FF                 	db	255
  1995   00F37B  FF                 	db	255
  1996   00F37C  FF                 	db	255
  1997   00F37D  FF                 	db	255
  1998   00F37E  FF                 	db	255
  1999   00F37F  FF                 	db	255
  2000   00F380  FF                 	db	255
  2001   00F381  FF                 	db	255
  2002   00F382  FF                 	db	255
  2003   00F383  FF                 	db	255
  2004   00F384  FF                 	db	255
  2005   00F385  FF                 	db	255
  2006   00F386  FF                 	db	255
  2007   00F387  FF                 	db	255
  2008   00F388  FF                 	db	255
  2009   00F389  FF                 	db	255
  2010   00F38A  FF                 	db	255
  2011   00F38B  FF                 	db	255
  2012   00F38C  FF                 	db	255
  2013   00F38D  FF                 	db	255
  2014   00F38E  FF                 	db	255
  2015   00F38F  FF                 	db	255
  2016   00F390  FF                 	db	255
  2017   00F391  FF                 	db	255
  2018   00F392  FF                 	db	255
  2019   00F393  FF                 	db	255
  2020   00F394  FF                 	db	255
  2021   00F395  FF                 	db	255
  2022   00F396  FF                 	db	255
  2023   00F397  FF                 	db	255
  2024   00F398  FF                 	db	255
  2025   00F399  FF                 	db	255
  2026   00F39A  FF                 	db	255
  2027   00F39B  FF                 	db	255
  2028   00F39C  FF                 	db	255
  2029   00F39D  FF                 	db	255
  2030   00F39E  FF                 	db	255
  2031   00F39F  FF                 	db	255
  2032   00F3A0  FF                 	db	255
  2033   00F3A1  FF                 	db	255
  2034   00F3A2  FF                 	db	255
  2035   00F3A3  FF                 	db	255
  2036   00F3A4  FF                 	db	255
  2037   00F3A5  FF                 	db	255
  2038   00F3A6  FF                 	db	255
  2039   00F3A7  FF                 	db	255
  2040   00F3A8  FF                 	db	255
  2041   00F3A9  FF                 	db	255
  2042   00F3AA  FF                 	db	255
  2043   00F3AB  FF                 	db	255
  2044   00F3AC  FF                 	db	255
  2045   00F3AD  FF                 	db	255
  2046   00F3AE  FF                 	db	255
  2047   00F3AF  FF                 	db	255
  2048   00F3B0  FF                 	db	255
  2049   00F3B1  FF                 	db	255
  2050   00F3B2  FF                 	db	255
  2051   00F3B3  FF                 	db	255
  2052   00F3B4  FF                 	db	255
  2053   00F3B5  FF                 	db	255
  2054   00F3B6  FF                 	db	255
  2055   00F3B7  FF                 	db	255
  2056   00F3B8  FF                 	db	255
  2057   00F3B9  FF                 	db	255
  2058   00F3BA  FF                 	db	255
  2059   00F3BB  FF                 	db	255
  2060   00F3BC  FF                 	db	255
  2061   00F3BD  FF                 	db	255
  2062   00F3BE  FF                 	db	255
  2063   00F3BF  FF                 	db	255
  2064   00F3C0  FF                 	db	255
  2065   00F3C1  FF                 	db	255
  2066   00F3C2  FF                 	db	255
  2067   00F3C3  FF                 	db	255
  2068   00F3C4  FF                 	db	255
  2069   00F3C5  FF                 	db	255
  2070   00F3C6  FF                 	db	255
  2071   00F3C7  FF                 	db	255
  2072   00F3C8  FF                 	db	255
  2073   00F3C9  FF                 	db	255
  2074   00F3CA  FF                 	db	255
  2075   00F3CB  FF                 	db	255
  2076   00F3CC  FF                 	db	255
  2077   00F3CD  FF                 	db	255
  2078   00F3CE  FF                 	db	255
  2079   00F3CF  FF                 	db	255
  2080   00F3D0  FF                 	db	255
  2081   00F3D1  FF                 	db	255
  2082   00F3D2  FF                 	db	255
  2083   00F3D3  FF                 	db	255
  2084   00F3D4  FF                 	db	255
  2085   00F3D5  FF                 	db	255
  2086   00F3D6  FF                 	db	255
  2087   00F3D7  FF                 	db	255
  2088   00F3D8  FF                 	db	255
  2089   00F3D9  FF                 	db	255
  2090   00F3DA  FF                 	db	255
  2091   00F3DB  FF                 	db	255
  2092   00F3DC  FF                 	db	255
  2093   00F3DD  FF                 	db	255
  2094   00F3DE  FF                 	db	255
  2095   00F3DF  FF                 	db	255
  2096   00F3E0  FF                 	db	255
  2097   00F3E1  FF                 	db	255
  2098   00F3E2  FF                 	db	255
  2099   00F3E3  FF                 	db	255
  2100   00F3E4  FF                 	db	255
  2101   00F3E5  FF                 	db	255
  2102   00F3E6  FF                 	db	255
  2103   00F3E7  FF                 	db	255
  2104   00F3E8  FF                 	db	255
  2105   00F3E9  FF                 	db	255
  2106   00F3EA  FF                 	db	255
  2107   00F3EB  FF                 	db	255
  2108   00F3EC  FF                 	db	255
  2109   00F3ED  FF                 	db	255
  2110   00F3EE  FF                 	db	255
  2111   00F3EF  FF                 	db	255
  2112   00F3F0  FF                 	db	255
  2113   00F3F1  FF                 	db	255
  2114   00F3F2  FF                 	db	255
  2115   00F3F3  FF                 	db	255
  2116   00F3F4  FF                 	db	255
  2117   00F3F5  FF                 	db	255
  2118   00F3F6  FF                 	db	255
  2119   00F3F7  FF                 	db	255
  2120   00F3F8  FF                 	db	255
  2121   00F3F9  FF                 	db	255
  2122   00F3FA  FF                 	db	255
  2123   00F3FB  FF                 	db	255
  2124   00F3FC  FF                 	db	255
  2125   00F3FD  FF                 	db	255
  2126   00F3FE  FF                 	db	255
  2127   00F3FF  FF                 	db	255
  2128   00F400  FF                 	db	255
  2129   00F401  FF                 	db	255
  2130   00F402  FF                 	db	255
  2131   00F403  FF                 	db	255
  2132   00F404  FF                 	db	255
  2133   00F405  FF                 	db	255
  2134   00F406  FF                 	db	255
  2135   00F407  FF                 	db	255
  2136   00F408  FF                 	db	255
  2137   00F409  FF                 	db	255
  2138   00F40A  FF                 	db	255
  2139   00F40B  FF                 	db	255
  2140   00F40C  FF                 	db	255
  2141   00F40D  FF                 	db	255
  2142   00F40E  FF                 	db	255
  2143   00F40F  FF                 	db	255
  2144   00F410  FF                 	db	255
  2145   00F411  FF                 	db	255
  2146   00F412  FF                 	db	255
  2147   00F413  FF                 	db	255
  2148   00F414  FF                 	db	255
  2149   00F415  FF                 	db	255
  2150   00F416  FF                 	db	255
  2151   00F417  FF                 	db	255
  2152   00F418  FF                 	db	255
  2153   00F419  FF                 	db	255
  2154   00F41A  FF                 	db	255
  2155   00F41B  FF                 	db	255
  2156   00F41C  FF                 	db	255
  2157   00F41D  FF                 	db	255
  2158   00F41E  FF                 	db	255
  2159   00F41F  FF                 	db	255
  2160   00F420  FF                 	db	255
  2161   00F421  FF                 	db	255
  2162   00F422  FF                 	db	255
  2163   00F423  FF                 	db	255
  2164   00F424  FF                 	db	255
  2165   00F425  FF                 	db	255
  2166   00F426  FF                 	db	255
  2167   00F427  FF                 	db	255
  2168   00F428  FF                 	db	255
  2169   00F429  FF                 	db	255
  2170   00F42A  FF                 	db	255
  2171   00F42B  FF                 	db	255
  2172   00F42C  FF                 	db	255
  2173   00F42D  FF                 	db	255
  2174   00F42E  FF                 	db	255
  2175   00F42F  FF                 	db	255
  2176   00F430  FF                 	db	255
  2177   00F431  FF                 	db	255
  2178   00F432  FF                 	db	255
  2179   00F433  FF                 	db	255
  2180   00F434  FF                 	db	255
  2181   00F435  FF                 	db	255
  2182   00F436  FF                 	db	255
  2183   00F437  FF                 	db	255
  2184   00F438  FF                 	db	255
  2185   00F439  FF                 	db	255
  2186   00F43A  FF                 	db	255
  2187   00F43B  FF                 	db	255
  2188   00F43C  FF                 	db	255
  2189   00F43D  FF                 	db	255
  2190   00F43E  FF                 	db	255
  2191   00F43F  FF                 	db	255
  2192   00F440  FF                 	db	255
  2193   00F441  FF                 	db	255
  2194   00F442  FF                 	db	255
  2195   00F443  FF                 	db	255
  2196   00F444  FF                 	db	255
  2197   00F445  FF                 	db	255
  2198   00F446  FF                 	db	255
  2199   00F447  FF                 	db	255
  2200   00F448  FF                 	db	255
  2201   00F449  FF                 	db	255
  2202   00F44A  FF                 	db	255
  2203   00F44B  FF                 	db	255
  2204   00F44C  FF                 	db	255
  2205   00F44D  FF                 	db	255
  2206   00F44E  FF                 	db	255
  2207   00F44F  FF                 	db	255
  2208   00F450  FF                 	db	255
  2209   00F451  FF                 	db	255
  2210   00F452  FF                 	db	255
  2211   00F453  FF                 	db	255
  2212   00F454  FF                 	db	255
  2213   00F455  FF                 	db	255
  2214   00F456  FF                 	db	255
  2215   00F457  FF                 	db	255
  2216   00F458  FF                 	db	255
  2217   00F459  FF                 	db	255
  2218   00F45A  FF                 	db	255
  2219   00F45B  FF                 	db	255
  2220   00F45C  FF                 	db	255
  2221   00F45D  FF                 	db	255
  2222   00F45E  FF                 	db	255
  2223   00F45F  FF                 	db	255
  2224   00F460  FF                 	db	255
  2225   00F461  FF                 	db	255
  2226   00F462  FF                 	db	255
  2227   00F463  FF                 	db	255
  2228   00F464  FF                 	db	255
  2229   00F465  FF                 	db	255
  2230   00F466  FF                 	db	255
  2231   00F467  FF                 	db	255
  2232   00F468  FF                 	db	255
  2233   00F469  FF                 	db	255
  2234   00F46A  FF                 	db	255
  2235   00F46B  FF                 	db	255
  2236   00F46C  FF                 	db	255
  2237   00F46D  FF                 	db	255
  2238   00F46E  FF                 	db	255
  2239   00F46F  FF                 	db	255
  2240   00F470  FF                 	db	255
  2241   00F471  FF                 	db	255
  2242   00F472  FF                 	db	255
  2243   00F473  FF                 	db	255
  2244   00F474  FF                 	db	255
  2245   00F475  FF                 	db	255
  2246   00F476  FF                 	db	255
  2247   00F477  FF                 	db	255
  2248   00F478  FF                 	db	255
  2249   00F479  FF                 	db	255
  2250   00F47A  FF                 	db	255
  2251   00F47B  FF                 	db	255
  2252   00F47C  FF                 	db	255
  2253   00F47D  FF                 	db	255
  2254   00F47E  FF                 	db	255
  2255   00F47F  FF                 	db	255
  2256   00F480  FF                 	db	255
  2257   00F481  FF                 	db	255
  2258   00F482  FF                 	db	255
  2259   00F483  FF                 	db	255
  2260   00F484  FF                 	db	255
  2261   00F485  FF                 	db	255
  2262   00F486  FF                 	db	255
  2263   00F487  FF                 	db	255
  2264   00F488  FF                 	db	255
  2265   00F489  FF                 	db	255
  2266   00F48A  FF                 	db	255
  2267   00F48B  FF                 	db	255
  2268   00F48C  FF                 	db	255
  2269   00F48D  FF                 	db	255
  2270   00F48E  FF                 	db	255
  2271   00F48F  FF                 	db	255
  2272   00F490  FF                 	db	255
  2273   00F491  FF                 	db	255
  2274   00F492  FF                 	db	255
  2275   00F493  FF                 	db	255
  2276   00F494  FF                 	db	255
  2277   00F495  FF                 	db	255
  2278   00F496  FF                 	db	255
  2279   00F497  FF                 	db	255
  2280   00F498  FF                 	db	255
  2281   00F499  FF                 	db	255
  2282   00F49A  FF                 	db	255
  2283   00F49B  FF                 	db	255
  2284   00F49C  FF                 	db	255
  2285   00F49D  FF                 	db	255
  2286   00F49E  FF                 	db	255
  2287   00F49F  FF                 	db	255
  2288   00F4A0  FF                 	db	255
  2289   00F4A1  FF                 	db	255
  2290   00F4A2  FF                 	db	255
  2291   00F4A3  FF                 	db	255
  2292   00F4A4  FF                 	db	255
  2293   00F4A5  FF                 	db	255
  2294   00F4A6  FF                 	db	255
  2295   00F4A7  FF                 	db	255
  2296   00F4A8  FF                 	db	255
  2297   00F4A9  FF                 	db	255
  2298   00F4AA  FF                 	db	255
  2299   00F4AB  FF                 	db	255
  2300   00F4AC  FF                 	db	255
  2301   00F4AD  FF                 	db	255
  2302   00F4AE  FF                 	db	255
  2303   00F4AF  FF                 	db	255
  2304   00F4B0  FF                 	db	255
  2305   00F4B1  FF                 	db	255
  2306   00F4B2  FF                 	db	255
  2307   00F4B3  FF                 	db	255
  2308   00F4B4  FF                 	db	255
  2309   00F4B5  FF                 	db	255
  2310   00F4B6  FF                 	db	255
  2311   00F4B7  FF                 	db	255
  2312   00F4B8  FF                 	db	255
  2313   00F4B9  FF                 	db	255
  2314   00F4BA  FF                 	db	255
  2315   00F4BB  FF                 	db	255
  2316   00F4BC  FF                 	db	255
  2317   00F4BD  FF                 	db	255
  2318   00F4BE  FF                 	db	255
  2319   00F4BF  FF                 	db	255
  2320   00F4C0  FF                 	db	255
  2321   00F4C1  FF                 	db	255
  2322   00F4C2  FF                 	db	255
  2323   00F4C3  FF                 	db	255
  2324   00F4C4  FF                 	db	255
  2325   00F4C5  FF                 	db	255
  2326   00F4C6  FF                 	db	255
  2327   00F4C7  FF                 	db	255
  2328   00F4C8  FF                 	db	255
  2329   00F4C9  FF                 	db	255
  2330   00F4CA  FF                 	db	255
  2331   00F4CB  FF                 	db	255
  2332   00F4CC  FF                 	db	255
  2333   00F4CD  FF                 	db	255
  2334   00F4CE  FF                 	db	255
  2335   00F4CF  FF                 	db	255
  2336   00F4D0  FF                 	db	255
  2337   00F4D1  FF                 	db	255
  2338   00F4D2  FF                 	db	255
  2339   00F4D3  FF                 	db	255
  2340   00F4D4  FF                 	db	255
  2341   00F4D5  FF                 	db	255
  2342   00F4D6  FF                 	db	255
  2343   00F4D7  FF                 	db	255
  2344   00F4D8  FF                 	db	255
  2345   00F4D9  FF                 	db	255
  2346   00F4DA  FF                 	db	255
  2347   00F4DB  FF                 	db	255
  2348   00F4DC  FF                 	db	255
  2349   00F4DD  FF                 	db	255
  2350   00F4DE  FF                 	db	255
  2351   00F4DF  FF                 	db	255
  2352   00F4E0  FF                 	db	255
  2353   00F4E1  FF                 	db	255
  2354   00F4E2  FF                 	db	255
  2355   00F4E3  FF                 	db	255
  2356   00F4E4  FF                 	db	255
  2357   00F4E5  FF                 	db	255
  2358   00F4E6  FF                 	db	255
  2359   00F4E7  FF                 	db	255
  2360   00F4E8  FF                 	db	255
  2361   00F4E9  FF                 	db	255
  2362   00F4EA  FF                 	db	255
  2363   00F4EB  FF                 	db	255
  2364   00F4EC  FF                 	db	255
  2365   00F4ED  FF                 	db	255
  2366   00F4EE  FF                 	db	255
  2367   00F4EF  FF                 	db	255
  2368   00F4F0  FF                 	db	255
  2369   00F4F1  FF                 	db	255
  2370   00F4F2  FF                 	db	255
  2371   00F4F3  FF                 	db	255
  2372   00F4F4  FF                 	db	255
  2373   00F4F5  FF                 	db	255
  2374   00F4F6  FF                 	db	255
  2375   00F4F7  FF                 	db	255
  2376   00F4F8  FF                 	db	255
  2377   00F4F9  FF                 	db	255
  2378   00F4FA  FF                 	db	255
  2379   00F4FB  FF                 	db	255
  2380   00F4FC  FF                 	db	255
  2381   00F4FD  FF                 	db	255
  2382   00F4FE  FF                 	db	255
  2383   00F4FF  FF                 	db	255
  2384   00F500  FF                 	db	255
  2385   00F501  FF                 	db	255
  2386   00F502  FF                 	db	255
  2387   00F503  FF                 	db	255
  2388   00F504  FF                 	db	255
  2389   00F505  FF                 	db	255
  2390   00F506  FF                 	db	255
  2391   00F507  FF                 	db	255
  2392   00F508  FF                 	db	255
  2393   00F509  FF                 	db	255
  2394   00F50A  FF                 	db	255
  2395   00F50B  FF                 	db	255
  2396   00F50C  FF                 	db	255
  2397   00F50D  FF                 	db	255
  2398   00F50E  FF                 	db	255
  2399   00F50F  FF                 	db	255
  2400   00F510  FF                 	db	255
  2401   00F511  FF                 	db	255
  2402   00F512  FF                 	db	255
  2403   00F513  FF                 	db	255
  2404   00F514  FF                 	db	255
  2405   00F515  FF                 	db	255
  2406   00F516  FF                 	db	255
  2407   00F517  FF                 	db	255
  2408   00F518  FF                 	db	255
  2409   00F519  FF                 	db	255
  2410   00F51A  FF                 	db	255
  2411   00F51B  FF                 	db	255
  2412   00F51C  FF                 	db	255
  2413   00F51D  FF                 	db	255
  2414   00F51E  FF                 	db	255
  2415   00F51F  FF                 	db	255
  2416   00F520  FF                 	db	255
  2417   00F521  FF                 	db	255
  2418   00F522  FF                 	db	255
  2419   00F523  FF                 	db	255
  2420   00F524  FF                 	db	255
  2421   00F525  FF                 	db	255
  2422   00F526  FF                 	db	255
  2423   00F527  FF                 	db	255
  2424   00F528  FF                 	db	255
  2425   00F529  FF                 	db	255
  2426   00F52A  FF                 	db	255
  2427   00F52B  FF                 	db	255
  2428   00F52C  FF                 	db	255
  2429   00F52D  FF                 	db	255
  2430   00F52E  FF                 	db	255
  2431   00F52F  FF                 	db	255
  2432   00F530  FF                 	db	255
  2433   00F531  FF                 	db	255
  2434   00F532  FF                 	db	255
  2435   00F533  FF                 	db	255
  2436   00F534  FF                 	db	255
  2437   00F535  FF                 	db	255
  2438   00F536  FF                 	db	255
  2439   00F537  FF                 	db	255
  2440   00F538  FF                 	db	255
  2441   00F539  FF                 	db	255
  2442   00F53A  FF                 	db	255
  2443   00F53B  FF                 	db	255
  2444   00F53C  FF                 	db	255
  2445   00F53D  FF                 	db	255
  2446   00F53E  FF                 	db	255
  2447   00F53F  FF                 	db	255
  2448   00F540  FF                 	db	255
  2449   00F541  FF                 	db	255
  2450   00F542  FF                 	db	255
  2451   00F543  FF                 	db	255
  2452   00F544  FF                 	db	255
  2453   00F545  FF                 	db	255
  2454   00F546  FF                 	db	255
  2455   00F547  FF                 	db	255
  2456   00F548  FF                 	db	255
  2457   00F549  FF                 	db	255
  2458   00F54A  FF                 	db	255
  2459   00F54B  FF                 	db	255
  2460   00F54C  FF                 	db	255
  2461   00F54D  FF                 	db	255
  2462   00F54E  FF                 	db	255
  2463   00F54F  FF                 	db	255
  2464   00F550  FF                 	db	255
  2465   00F551  FF                 	db	255
  2466   00F552  FF                 	db	255
  2467   00F553  FF                 	db	255
  2468   00F554  FF                 	db	255
  2469   00F555  FF                 	db	255
  2470   00F556  FF                 	db	255
  2471   00F557  FF                 	db	255
  2472   00F558  FF                 	db	255
  2473   00F559  FF                 	db	255
  2474   00F55A  FF                 	db	255
  2475   00F55B  FF                 	db	255
  2476   00F55C  FF                 	db	255
  2477   00F55D  FF                 	db	255
  2478   00F55E  FF                 	db	255
  2479   00F55F  FF                 	db	255
  2480   00F560  FF                 	db	255
  2481   00F561  FF                 	db	255
  2482   00F562  FF                 	db	255
  2483   00F563  FF                 	db	255
  2484   00F564  FF                 	db	255
  2485   00F565  FF                 	db	255
  2486   00F566  FF                 	db	255
  2487   00F567  FF                 	db	255
  2488   00F568  FF                 	db	255
  2489   00F569  FF                 	db	255
  2490   00F56A  FF                 	db	255
  2491   00F56B  FF                 	db	255
  2492   00F56C  FF                 	db	255
  2493   00F56D  FF                 	db	255
  2494   00F56E  FF                 	db	255
  2495   00F56F  FF                 	db	255
  2496   00F570  FF                 	db	255
  2497   00F571  FF                 	db	255
  2498   00F572  FF                 	db	255
  2499   00F573  FF                 	db	255
  2500   00F574  FF                 	db	255
  2501   00F575  FF                 	db	255
  2502   00F576  FF                 	db	255
  2503   00F577  FF                 	db	255
  2504   00F578  FF                 	db	255
  2505   00F579  FF                 	db	255
  2506   00F57A  FF                 	db	255
  2507   00F57B  FF                 	db	255
  2508   00F57C  FF                 	db	255
  2509   00F57D  FF                 	db	255
  2510   00F57E  FF                 	db	255
  2511   00F57F  FF                 	db	255
  2512   00F580  FF                 	db	255
  2513   00F581  FF                 	db	255
  2514   00F582  FF                 	db	255
  2515   00F583  FF                 	db	255
  2516   00F584  FF                 	db	255
  2517   00F585  FF                 	db	255
  2518   00F586  FF                 	db	255
  2519   00F587  FF                 	db	255
  2520   00F588  FF                 	db	255
  2521   00F589  FF                 	db	255
  2522   00F58A  FF                 	db	255
  2523   00F58B  FF                 	db	255
  2524   00F58C  FF                 	db	255
  2525   00F58D  FF                 	db	255
  2526   00F58E  FF                 	db	255
  2527   00F58F  FF                 	db	255
  2528   00F590  FF                 	db	255
  2529   00F591  FF                 	db	255
  2530   00F592  FF                 	db	255
  2531   00F593  FF                 	db	255
  2532   00F594  FF                 	db	255
  2533   00F595  FF                 	db	255
  2534   00F596  FF                 	db	255
  2535   00F597  FF                 	db	255
  2536   00F598  FF                 	db	255
  2537   00F599  FF                 	db	255
  2538   00F59A  FF                 	db	255
  2539   00F59B  FF                 	db	255
  2540   00F59C  FF                 	db	255
  2541   00F59D  FF                 	db	255
  2542   00F59E  FF                 	db	255
  2543   00F59F  FF                 	db	255
  2544   00F5A0  FF                 	db	255
  2545   00F5A1  FF                 	db	255
  2546   00F5A2  FF                 	db	255
  2547   00F5A3  FF                 	db	255
  2548   00F5A4  FF                 	db	255
  2549   00F5A5  FF                 	db	255
  2550   00F5A6  FF                 	db	255
  2551   00F5A7  FF                 	db	255
  2552   00F5A8  FF                 	db	255
  2553   00F5A9  FF                 	db	255
  2554   00F5AA  FF                 	db	255
  2555   00F5AB  FF                 	db	255
  2556   00F5AC  FF                 	db	255
  2557   00F5AD  FF                 	db	255
  2558   00F5AE  FF                 	db	255
  2559   00F5AF  FF                 	db	255
  2560   00F5B0  FF                 	db	255
  2561   00F5B1  FF                 	db	255
  2562   00F5B2  FF                 	db	255
  2563   00F5B3  FF                 	db	255
  2564   00F5B4  FF                 	db	255
  2565   00F5B5  FF                 	db	255
  2566   00F5B6  FF                 	db	255
  2567   00F5B7  FF                 	db	255
  2568   00F5B8  FF                 	db	255
  2569   00F5B9  FF                 	db	255
  2570   00F5BA  FF                 	db	255
  2571   00F5BB  FF                 	db	255
  2572   00F5BC  FF                 	db	255
  2573   00F5BD  FF                 	db	255
  2574   00F5BE  FF                 	db	255
  2575   00F5BF  FF                 	db	255
  2576   00F5C0  FF                 	db	255
  2577   00F5C1  FF                 	db	255
  2578   00F5C2  FF                 	db	255
  2579   00F5C3  FF                 	db	255
  2580   00F5C4  FF                 	db	255
  2581   00F5C5  FF                 	db	255
  2582   00F5C6  FF                 	db	255
  2583   00F5C7  FF                 	db	255
  2584   00F5C8  FF                 	db	255
  2585   00F5C9  FF                 	db	255
  2586   00F5CA  FF                 	db	255
  2587   00F5CB  FF                 	db	255
  2588   00F5CC  FF                 	db	255
  2589   00F5CD  FF                 	db	255
  2590   00F5CE  FF                 	db	255
  2591   00F5CF  FF                 	db	255
  2592   00F5D0  FF                 	db	255
  2593   00F5D1  FF                 	db	255
  2594   00F5D2  FF                 	db	255
  2595   00F5D3  FF                 	db	255
  2596   00F5D4  FF                 	db	255
  2597   00F5D5  FF                 	db	255
  2598   00F5D6  FF                 	db	255
  2599   00F5D7  FF                 	db	255
  2600   00F5D8  FF                 	db	255
  2601   00F5D9  FF                 	db	255
  2602   00F5DA  FF                 	db	255
  2603   00F5DB  FF                 	db	255
  2604   00F5DC  FF                 	db	255
  2605   00F5DD  FF                 	db	255
  2606   00F5DE  FF                 	db	255
  2607   00F5DF  FF                 	db	255
  2608   00F5E0  FF                 	db	255
  2609   00F5E1  FF                 	db	255
  2610   00F5E2  FF                 	db	255
  2611   00F5E3  FF                 	db	255
  2612   00F5E4  FF                 	db	255
  2613   00F5E5  FF                 	db	255
  2614   00F5E6  FF                 	db	255
  2615   00F5E7  FF                 	db	255
  2616   00F5E8  FF                 	db	255
  2617   00F5E9  FF                 	db	255
  2618   00F5EA  FF                 	db	255
  2619   00F5EB  FF                 	db	255
  2620   00F5EC  FF                 	db	255
  2621   00F5ED  FF                 	db	255
  2622   00F5EE  FF                 	db	255
  2623   00F5EF  FF                 	db	255
  2624   00F5F0  FF                 	db	255
  2625   00F5F1  FF                 	db	255
  2626   00F5F2  FF                 	db	255
  2627   00F5F3  FF                 	db	255
  2628   00F5F4  FF                 	db	255
  2629   00F5F5  FF                 	db	255
  2630   00F5F6  FF                 	db	255
  2631   00F5F7  FF                 	db	255
  2632   00F5F8  FF                 	db	255
  2633   00F5F9  FF                 	db	255
  2634   00F5FA  FF                 	db	255
  2635   00F5FB  FF                 	db	255
  2636   00F5FC  FF                 	db	255
  2637   00F5FD  FF                 	db	255
  2638   00F5FE  FF                 	db	255
  2639   00F5FF  FF                 	db	255
  2640   00F600  FF                 	db	255
  2641   00F601  FF                 	db	255
  2642   00F602  FF                 	db	255
  2643   00F603  FF                 	db	255
  2644   00F604  FF                 	db	255
  2645   00F605  FF                 	db	255
  2646   00F606  FF                 	db	255
  2647   00F607  FF                 	db	255
  2648   00F608  FF                 	db	255
  2649   00F609  FF                 	db	255
  2650   00F60A  FF                 	db	255
  2651   00F60B  FF                 	db	255
  2652   00F60C  FF                 	db	255
  2653   00F60D  FF                 	db	255
  2654   00F60E  FF                 	db	255
  2655   00F60F  FF                 	db	255
  2656   00F610  FF                 	db	255
  2657   00F611  FF                 	db	255
  2658   00F612  FF                 	db	255
  2659   00F613  FF                 	db	255
  2660   00F614  FF                 	db	255
  2661   00F615  FF                 	db	255
  2662   00F616  FF                 	db	255
  2663   00F617  FF                 	db	255
  2664   00F618  FF                 	db	255
  2665   00F619  FF                 	db	255
  2666   00F61A  FF                 	db	255
  2667   00F61B  FF                 	db	255
  2668   00F61C  FF                 	db	255
  2669   00F61D  FF                 	db	255
  2670   00F61E  FF                 	db	255
  2671   00F61F  FF                 	db	255
  2672   00F620  FF                 	db	255
  2673   00F621  FF                 	db	255
  2674   00F622  FF                 	db	255
  2675   00F623  FF                 	db	255
  2676   00F624  FF                 	db	255
  2677   00F625  FF                 	db	255
  2678   00F626  FF                 	db	255
  2679   00F627  FF                 	db	255
  2680   00F628  FF                 	db	255
  2681   00F629  FF                 	db	255
  2682   00F62A  FF                 	db	255
  2683   00F62B  FF                 	db	255
  2684   00F62C  FF                 	db	255
  2685   00F62D  FF                 	db	255
  2686   00F62E  FF                 	db	255
  2687   00F62F  FF                 	db	255
  2688   00F630  FF                 	db	255
  2689   00F631  FF                 	db	255
  2690   00F632  FF                 	db	255
  2691   00F633  FF                 	db	255
  2692   00F634  FF                 	db	255
  2693   00F635  FF                 	db	255
  2694   00F636  FF                 	db	255
  2695   00F637  FF                 	db	255
  2696   00F638  FF                 	db	255
  2697   00F639  FF                 	db	255
  2698   00F63A  FF                 	db	255
  2699   00F63B  FF                 	db	255
  2700   00F63C  FF                 	db	255
  2701   00F63D  FF                 	db	255
  2702   00F63E  FF                 	db	255
  2703   00F63F  FF                 	db	255
  2704   00F640  FF                 	db	255
  2705   00F641  FF                 	db	255
  2706   00F642  FF                 	db	255
  2707   00F643  FF                 	db	255
  2708   00F644  FF                 	db	255
  2709   00F645  FF                 	db	255
  2710   00F646  FF                 	db	255
  2711   00F647  FF                 	db	255
  2712   00F648  FF                 	db	255
  2713   00F649  FF                 	db	255
  2714   00F64A  FF                 	db	255
  2715   00F64B  FF                 	db	255
  2716   00F64C  FF                 	db	255
  2717   00F64D  FF                 	db	255
  2718   00F64E  FF                 	db	255
  2719   00F64F  FF                 	db	255
  2720   00F650  FF                 	db	255
  2721   00F651  FF                 	db	255
  2722   00F652  FF                 	db	255
  2723   00F653  FF                 	db	255
  2724   00F654  FF                 	db	255
  2725   00F655  FF                 	db	255
  2726   00F656  FF                 	db	255
  2727   00F657  FF                 	db	255
  2728   00F658  FF                 	db	255
  2729   00F659  FF                 	db	255
  2730   00F65A  FF                 	db	255
  2731   00F65B  FF                 	db	255
  2732   00F65C  FF                 	db	255
  2733   00F65D  FF                 	db	255
  2734   00F65E  FF                 	db	255
  2735   00F65F  FF                 	db	255
  2736   00F660  FF                 	db	255
  2737   00F661  FF                 	db	255
  2738   00F662  FF                 	db	255
  2739   00F663  FF                 	db	255
  2740   00F664  FF                 	db	255
  2741   00F665  FF                 	db	255
  2742   00F666  FF                 	db	255
  2743   00F667  FF                 	db	255
  2744   00F668  FF                 	db	255
  2745   00F669  FF                 	db	255
  2746   00F66A  FF                 	db	255
  2747   00F66B  FF                 	db	255
  2748   00F66C  FF                 	db	255
  2749   00F66D  FF                 	db	255
  2750   00F66E  FF                 	db	255
  2751   00F66F  FF                 	db	255
  2752   00F670  FF                 	db	255
  2753   00F671  FF                 	db	255
  2754   00F672  FF                 	db	255
  2755   00F673  FF                 	db	255
  2756   00F674  FF                 	db	255
  2757   00F675  FF                 	db	255
  2758   00F676  FF                 	db	255
  2759   00F677  FF                 	db	255
  2760   00F678  FF                 	db	255
  2761   00F679  FF                 	db	255
  2762   00F67A  FF                 	db	255
  2763   00F67B  FF                 	db	255
  2764   00F67C  FF                 	db	255
  2765   00F67D  FF                 	db	255
  2766   00F67E  FF                 	db	255
  2767   00F67F  FF                 	db	255
  2768   00F680  FF                 	db	255
  2769   00F681  FF                 	db	255
  2770   00F682  FF                 	db	255
  2771   00F683  FF                 	db	255
  2772   00F684  FF                 	db	255
  2773   00F685  FF                 	db	255
  2774   00F686  FF                 	db	255
  2775   00F687  FF                 	db	255
  2776   00F688  FF                 	db	255
  2777   00F689  FF                 	db	255
  2778   00F68A  FF                 	db	255
  2779   00F68B  FF                 	db	255
  2780   00F68C  FF                 	db	255
  2781   00F68D  FF                 	db	255
  2782   00F68E  FF                 	db	255
  2783   00F68F  FF                 	db	255
  2784   00F690  FF                 	db	255
  2785   00F691  FF                 	db	255
  2786   00F692  FF                 	db	255
  2787   00F693  FF                 	db	255
  2788   00F694  FF                 	db	255
  2789   00F695  FF                 	db	255
  2790   00F696  FF                 	db	255
  2791   00F697  FF                 	db	255
  2792   00F698  FF                 	db	255
  2793   00F699  FF                 	db	255
  2794   00F69A  FF                 	db	255
  2795   00F69B  FF                 	db	255
  2796   00F69C  FF                 	db	255
  2797   00F69D  FF                 	db	255
  2798   00F69E  FF                 	db	255
  2799   00F69F  FF                 	db	255
  2800   00F6A0  FF                 	db	255
  2801   00F6A1  FF                 	db	255
  2802   00F6A2  FF                 	db	255
  2803   00F6A3  FF                 	db	255
  2804   00F6A4  FF                 	db	255
  2805   00F6A5  FF                 	db	255
  2806   00F6A6  FF                 	db	255
  2807   00F6A7  FF                 	db	255
  2808   00F6A8  FF                 	db	255
  2809   00F6A9  FF                 	db	255
  2810   00F6AA  FF                 	db	255
  2811   00F6AB  FF                 	db	255
  2812   00F6AC  FF                 	db	255
  2813   00F6AD  FF                 	db	255
  2814   00F6AE  FF                 	db	255
  2815   00F6AF  FF                 	db	255
  2816   00F6B0  FF                 	db	255
  2817   00F6B1  FF                 	db	255
  2818   00F6B2  FF                 	db	255
  2819   00F6B3  FF                 	db	255
  2820   00F6B4  FF                 	db	255
  2821   00F6B5  FF                 	db	255
  2822   00F6B6  FF                 	db	255
  2823   00F6B7  FF                 	db	255
  2824   00F6B8  FF                 	db	255
  2825   00F6B9  FF                 	db	255
  2826   00F6BA  FF                 	db	255
  2827   00F6BB  FF                 	db	255
  2828   00F6BC  FF                 	db	255
  2829   00F6BD  FF                 	db	255
  2830   00F6BE  FF                 	db	255
  2831   00F6BF  FF                 	db	255
  2832   00F6C0  FF                 	db	255
  2833   00F6C1  FF                 	db	255
  2834   00F6C2  FF                 	db	255
  2835   00F6C3  FF                 	db	255
  2836   00F6C4  FF                 	db	255
  2837   00F6C5  FF                 	db	255
  2838   00F6C6  FF                 	db	255
  2839   00F6C7  FF                 	db	255
  2840   00F6C8  FF                 	db	255
  2841   00F6C9  FF                 	db	255
  2842   00F6CA  FF                 	db	255
  2843   00F6CB  FF                 	db	255
  2844   00F6CC  FF                 	db	255
  2845   00F6CD  FF                 	db	255
  2846   00F6CE  FF                 	db	255
  2847   00F6CF  FF                 	db	255
  2848   00F6D0  FF                 	db	255
  2849   00F6D1  FF                 	db	255
  2850   00F6D2  FF                 	db	255
  2851   00F6D3  FF                 	db	255
  2852   00F6D4  FF                 	db	255
  2853   00F6D5  FF                 	db	255
  2854   00F6D6  FF                 	db	255
  2855   00F6D7  FF                 	db	255
  2856   00F6D8  FF                 	db	255
  2857   00F6D9  FF                 	db	255
  2858   00F6DA  FF                 	db	255
  2859   00F6DB  FF                 	db	255
  2860   00F6DC  FF                 	db	255
  2861   00F6DD  FF                 	db	255
  2862   00F6DE  FF                 	db	255
  2863   00F6DF  FF                 	db	255
  2864   00F6E0  FF                 	db	255
  2865   00F6E1  FF                 	db	255
  2866   00F6E2  FF                 	db	255
  2867   00F6E3  FF                 	db	255
  2868   00F6E4  FF                 	db	255
  2869   00F6E5  FF                 	db	255
  2870   00F6E6  FF                 	db	255
  2871   00F6E7  FF                 	db	255
  2872   00F6E8  FF                 	db	255
  2873   00F6E9  FF                 	db	255
  2874   00F6EA  FF                 	db	255
  2875   00F6EB  FF                 	db	255
  2876   00F6EC  FF                 	db	255
  2877   00F6ED  FF                 	db	255
  2878   00F6EE  FF                 	db	255
  2879   00F6EF  FF                 	db	255
  2880   00F6F0  FF                 	db	255
  2881   00F6F1  FF                 	db	255
  2882   00F6F2  FF                 	db	255
  2883   00F6F3  FF                 	db	255
  2884   00F6F4  FF                 	db	255
  2885   00F6F5  FF                 	db	255
  2886   00F6F6  FF                 	db	255
  2887   00F6F7  FF                 	db	255
  2888   00F6F8  FF                 	db	255
  2889   00F6F9  FF                 	db	255
  2890   00F6FA  FF                 	db	255
  2891   00F6FB  FF                 	db	255
  2892   00F6FC  FF                 	db	255
  2893   00F6FD  FF                 	db	255
  2894   00F6FE  FF                 	db	255
  2895   00F6FF  FF                 	db	255
  2896   00F700  FF                 	db	255
  2897   00F701  FF                 	db	255
  2898   00F702  FF                 	db	255
  2899   00F703  FF                 	db	255
  2900   00F704  FF                 	db	255
  2901   00F705  FF                 	db	255
  2902   00F706  FF                 	db	255
  2903   00F707  FF                 	db	255
  2904   00F708  FF                 	db	255
  2905   00F709  FF                 	db	255
  2906   00F70A  FF                 	db	255
  2907   00F70B  FF                 	db	255
  2908   00F70C  FF                 	db	255
  2909   00F70D  FF                 	db	255
  2910   00F70E  FF                 	db	255
  2911   00F70F  FF                 	db	255
  2912   00F710  FF                 	db	255
  2913   00F711  FF                 	db	255
  2914   00F712  FF                 	db	255
  2915   00F713  FF                 	db	255
  2916   00F714  FF                 	db	255
  2917   00F715  FF                 	db	255
  2918   00F716  FF                 	db	255
  2919   00F717  FF                 	db	255
  2920   00F718  FF                 	db	255
  2921   00F719  FF                 	db	255
  2922   00F71A  FF                 	db	255
  2923   00F71B  FF                 	db	255
  2924   00F71C  FF                 	db	255
  2925   00F71D  FF                 	db	255
  2926   00F71E  FF                 	db	255
  2927   00F71F  FF                 	db	255
  2928   00F720  FF                 	db	255
  2929   00F721  FF                 	db	255
  2930   00F722  FF                 	db	255
  2931   00F723  FF                 	db	255
  2932   00F724  FF                 	db	255
  2933   00F725  FF                 	db	255
  2934   00F726  FF                 	db	255
  2935   00F727  FF                 	db	255
  2936   00F728  FF                 	db	255
  2937   00F729  FF                 	db	255
  2938   00F72A  FF                 	db	255
  2939   00F72B  FF                 	db	255
  2940   00F72C  FF                 	db	255
  2941   00F72D  FF                 	db	255
  2942   00F72E  FF                 	db	255
  2943   00F72F  FF                 	db	255
  2944   00F730  FF                 	db	255
  2945   00F731  FF                 	db	255
  2946   00F732  FF                 	db	255
  2947   00F733  FF                 	db	255
  2948   00F734  FF                 	db	255
  2949   00F735  FF                 	db	255
  2950   00F736  FF                 	db	255
  2951   00F737  FF                 	db	255
  2952   00F738  FF                 	db	255
  2953   00F739  FF                 	db	255
  2954   00F73A  FF                 	db	255
  2955   00F73B  FF                 	db	255
  2956   00F73C  FF                 	db	255
  2957   00F73D  FF                 	db	255
  2958   00F73E  FF                 	db	255
  2959   00F73F  FF                 	db	255
  2960   00F740  FF                 	db	255
  2961   00F741  FF                 	db	255
  2962   00F742  FF                 	db	255
  2963   00F743  FF                 	db	255
  2964   00F744  FF                 	db	255
  2965   00F745  FF                 	db	255
  2966   00F746  FF                 	db	255
  2967   00F747  FF                 	db	255
  2968   00F748  FF                 	db	255
  2969   00F749  FF                 	db	255
  2970   00F74A  FF                 	db	255
  2971   00F74B  FF                 	db	255
  2972   00F74C  FF                 	db	255
  2973   00F74D  FF                 	db	255
  2974   00F74E  FF                 	db	255
  2975   00F74F  FF                 	db	255
  2976   00F750  FF                 	db	255
  2977   00F751  FF                 	db	255
  2978   00F752  FF                 	db	255
  2979   00F753  FF                 	db	255
  2980   00F754  FF                 	db	255
  2981   00F755  FF                 	db	255
  2982   00F756  FF                 	db	255
  2983   00F757  FF                 	db	255
  2984   00F758  FF                 	db	255
  2985   00F759  FF                 	db	255
  2986   00F75A  FF                 	db	255
  2987   00F75B  FF                 	db	255
  2988   00F75C  FF                 	db	255
  2989   00F75D  FF                 	db	255
  2990   00F75E  FF                 	db	255
  2991   00F75F  FF                 	db	255
  2992   00F760  FF                 	db	255
  2993   00F761  FF                 	db	255
  2994   00F762  FF                 	db	255
  2995   00F763  FF                 	db	255
  2996   00F764  FF                 	db	255
  2997   00F765  FF                 	db	255
  2998   00F766  FF                 	db	255
  2999   00F767  FF                 	db	255
  3000   00F768  FF                 	db	255
  3001   00F769  FF                 	db	255
  3002   00F76A  FF                 	db	255
  3003   00F76B  FF                 	db	255
  3004   00F76C  FF                 	db	255
  3005   00F76D  FF                 	db	255
  3006   00F76E  FF                 	db	255
  3007   00F76F  FF                 	db	255
  3008   00F770  FF                 	db	255
  3009   00F771  FF                 	db	255
  3010   00F772  FF                 	db	255
  3011   00F773  FF                 	db	255
  3012   00F774  FF                 	db	255
  3013   00F775  FF                 	db	255
  3014   00F776  FF                 	db	255
  3015   00F777  FF                 	db	255
  3016   00F778  FF                 	db	255
  3017   00F779  FF                 	db	255
  3018   00F77A  FF                 	db	255
  3019   00F77B  FF                 	db	255
  3020   00F77C  FF                 	db	255
  3021   00F77D  FF                 	db	255
  3022   00F77E  FF                 	db	255
  3023   00F77F  FF                 	db	255
  3024   00F780  FF                 	db	255
  3025   00F781  FF                 	db	255
  3026   00F782  FF                 	db	255
  3027   00F783  FF                 	db	255
  3028   00F784  FF                 	db	255
  3029   00F785  FF                 	db	255
  3030   00F786  FF                 	db	255
  3031   00F787  FF                 	db	255
  3032   00F788  FF                 	db	255
  3033   00F789  FF                 	db	255
  3034   00F78A  FF                 	db	255
  3035   00F78B  FF                 	db	255
  3036   00F78C  FF                 	db	255
  3037   00F78D  FF                 	db	255
  3038   00F78E  FF                 	db	255
  3039   00F78F  FF                 	db	255
  3040   00F790  FF                 	db	255
  3041   00F791  FF                 	db	255
  3042   00F792  FF                 	db	255
  3043   00F793  FF                 	db	255
  3044   00F794  FF                 	db	255
  3045   00F795  FF                 	db	255
  3046   00F796  FF                 	db	255
  3047   00F797  FF                 	db	255
  3048   00F798  FF                 	db	255
  3049   00F799  FF                 	db	255
  3050   00F79A  FF                 	db	255
  3051   00F79B  FF                 	db	255
  3052   00F79C  FF                 	db	255
  3053   00F79D  FF                 	db	255
  3054   00F79E  FF                 	db	255
  3055   00F79F  FF                 	db	255
  3056   00F7A0  FF                 	db	255
  3057   00F7A1  FF                 	db	255
  3058   00F7A2  FF                 	db	255
  3059   00F7A3  FF                 	db	255
  3060   00F7A4  FF                 	db	255
  3061   00F7A5  FF                 	db	255
  3062   00F7A6  FF                 	db	255
  3063   00F7A7  FF                 	db	255
  3064   00F7A8  FF                 	db	255
  3065   00F7A9  FF                 	db	255
  3066   00F7AA  FF                 	db	255
  3067   00F7AB  FF                 	db	255
  3068   00F7AC  FF                 	db	255
  3069   00F7AD  FF                 	db	255
  3070   00F7AE  FF                 	db	255
  3071   00F7AF  FF                 	db	255
  3072   00F7B0  FF                 	db	255
  3073   00F7B1  FF                 	db	255
  3074   00F7B2  FF                 	db	255
  3075   00F7B3  FF                 	db	255
  3076   00F7B4  FF                 	db	255
  3077   00F7B5  FF                 	db	255
  3078   00F7B6  FF                 	db	255
  3079   00F7B7  FF                 	db	255
  3080   00F7B8  FF                 	db	255
  3081   00F7B9  FF                 	db	255
  3082   00F7BA  FF                 	db	255
  3083   00F7BB  FF                 	db	255
  3084   00F7BC  FF                 	db	255
  3085   00F7BD  FF                 	db	255
  3086   00F7BE  FF                 	db	255
  3087   00F7BF  FF                 	db	255
  3088   00F7C0  FF                 	db	255
  3089   00F7C1  FF                 	db	255
  3090   00F7C2  FF                 	db	255
  3091   00F7C3  FF                 	db	255
  3092   00F7C4  FF                 	db	255
  3093   00F7C5  FF                 	db	255
  3094   00F7C6  FF                 	db	255
  3095   00F7C7  FF                 	db	255
  3096   00F7C8  FF                 	db	255
  3097   00F7C9  FF                 	db	255
  3098   00F7CA  FF                 	db	255
  3099   00F7CB  FF                 	db	255
  3100   00F7CC  FF                 	db	255
  3101   00F7CD  FF                 	db	255
  3102   00F7CE  FF                 	db	255
  3103   00F7CF  FF                 	db	255
  3104   00F7D0  FF                 	db	255
  3105   00F7D1  FF                 	db	255
  3106   00F7D2  FF                 	db	255
  3107   00F7D3  FF                 	db	255
  3108   00F7D4  FF                 	db	255
  3109   00F7D5  FF                 	db	255
  3110   00F7D6  FF                 	db	255
  3111   00F7D7  FF                 	db	255
  3112   00F7D8  FF                 	db	255
  3113   00F7D9  FF                 	db	255
  3114   00F7DA  FF                 	db	255
  3115   00F7DB  FF                 	db	255
  3116   00F7DC  FF                 	db	255
  3117   00F7DD  FF                 	db	255
  3118   00F7DE  FF                 	db	255
  3119   00F7DF  FF                 	db	255
  3120   00F7E0  FF                 	db	255
  3121   00F7E1  FF                 	db	255
  3122   00F7E2  FF                 	db	255
  3123   00F7E3  FF                 	db	255
  3124   00F7E4  FF                 	db	255
  3125   00F7E5  FF                 	db	255
  3126   00F7E6  FF                 	db	255
  3127   00F7E7  FF                 	db	255
  3128   00F7E8  FF                 	db	255
  3129   00F7E9  FF                 	db	255
  3130   00F7EA  FF                 	db	255
  3131   00F7EB  FF                 	db	255
  3132   00F7EC  FF                 	db	255
  3133   00F7ED  FF                 	db	255
  3134   00F7EE  FF                 	db	255
  3135   00F7EF  FF                 	db	255
  3136   00F7F0  FF                 	db	255
  3137   00F7F1  FF                 	db	255
  3138   00F7F2  FF                 	db	255
  3139   00F7F3  FF                 	db	255
  3140   00F7F4  FF                 	db	255
  3141   00F7F5  FF                 	db	255
  3142   00F7F6  FF                 	db	255
  3143   00F7F7  FF                 	db	255
  3144   00F7F8  FF                 	db	255
  3145   00F7F9  FF                 	db	255
  3146   00F7FA  FF                 	db	255
  3147   00F7FB  FF                 	db	255
  3148   00F7FC  FF                 	db	255
  3149   00F7FD  FF                 	db	255
  3150   00F7FE  FF                 	db	255
  3151   00F7FF  FF                 	db	255
  3152   00F800  FF                 	db	255
  3153   00F801  FF                 	db	255
  3154   00F802  FF                 	db	255
  3155   00F803  FF                 	db	255
  3156   00F804  FF                 	db	255
  3157   00F805  FF                 	db	255
  3158   00F806  FF                 	db	255
  3159   00F807  FF                 	db	255
  3160   00F808  FF                 	db	255
  3161   00F809  FF                 	db	255
  3162   00F80A  FF                 	db	255
  3163   00F80B  FF                 	db	255
  3164   00F80C  FF                 	db	255
  3165   00F80D  FF                 	db	255
  3166   00F80E  FF                 	db	255
  3167   00F80F  FF                 	db	255
  3168   00F810  FF                 	db	255
  3169   00F811  FF                 	db	255
  3170   00F812  FF                 	db	255
  3171   00F813  FF                 	db	255
  3172   00F814  FF                 	db	255
  3173   00F815  FF                 	db	255
  3174   00F816  FF                 	db	255
  3175   00F817  FF                 	db	255
  3176   00F818  FF                 	db	255
  3177   00F819  FF                 	db	255
  3178   00F81A  FF                 	db	255
  3179   00F81B  FF                 	db	255
  3180   00F81C  FF                 	db	255
  3181   00F81D  FF                 	db	255
  3182   00F81E  FF                 	db	255
  3183   00F81F  FF                 	db	255
  3184   00F820  FF                 	db	255
  3185   00F821  FF                 	db	255
  3186   00F822  FF                 	db	255
  3187   00F823  FF                 	db	255
  3188   00F824  FF                 	db	255
  3189   00F825  FF                 	db	255
  3190   00F826  FF                 	db	255
  3191   00F827  FF                 	db	255
  3192   00F828  FF                 	db	255
  3193   00F829  FF                 	db	255
  3194   00F82A  FF                 	db	255
  3195   00F82B  FF                 	db	255
  3196   00F82C  FF                 	db	255
  3197   00F82D  FF                 	db	255
  3198   00F82E  FF                 	db	255
  3199   00F82F  FF                 	db	255
  3200   00F830  FF                 	db	255
  3201   00F831  FF                 	db	255
  3202   00F832  FF                 	db	255
  3203   00F833  FF                 	db	255
  3204   00F834  FF                 	db	255
  3205   00F835  FF                 	db	255
  3206   00F836  FF                 	db	255
  3207   00F837  FF                 	db	255
  3208   00F838  FF                 	db	255
  3209   00F839  FF                 	db	255
  3210   00F83A  FF                 	db	255
  3211   00F83B  FF                 	db	255
  3212   00F83C  FF                 	db	255
  3213   00F83D  FF                 	db	255
  3214   00F83E  FF                 	db	255
  3215   00F83F  FF                 	db	255
  3216   00F840  FF                 	db	255
  3217   00F841  FF                 	db	255
  3218   00F842  FF                 	db	255
  3219   00F843  FF                 	db	255
  3220   00F844  FF                 	db	255
  3221   00F845  FF                 	db	255
  3222   00F846  FF                 	db	255
  3223   00F847  FF                 	db	255
  3224   00F848  FF                 	db	255
  3225   00F849  FF                 	db	255
  3226   00F84A  FF                 	db	255
  3227   00F84B  FF                 	db	255
  3228   00F84C  FF                 	db	255
  3229   00F84D  FF                 	db	255
  3230   00F84E  FF                 	db	255
  3231   00F84F  FF                 	db	255
  3232   00F850  FF                 	db	255
  3233   00F851  FF                 	db	255
  3234   00F852  FF                 	db	255
  3235   00F853  FF                 	db	255
  3236   00F854  FF                 	db	255
  3237   00F855  FF                 	db	255
  3238   00F856  FF                 	db	255
  3239   00F857  FF                 	db	255
  3240   00F858  FF                 	db	255
  3241   00F859  FF                 	db	255
  3242   00F85A  FF                 	db	255
  3243   00F85B  FF                 	db	255
  3244   00F85C  FF                 	db	255
  3245   00F85D  FF                 	db	255
  3246   00F85E  FF                 	db	255
  3247   00F85F  FF                 	db	255
  3248   00F860  FF                 	db	255
  3249   00F861  FF                 	db	255
  3250   00F862  FF                 	db	255
  3251   00F863  FF                 	db	255
  3252   00F864  FF                 	db	255
  3253   00F865  FF                 	db	255
  3254   00F866  FF                 	db	255
  3255   00F867  FF                 	db	255
  3256   00F868  FF                 	db	255
  3257   00F869  FF                 	db	255
  3258   00F86A  FF                 	db	255
  3259   00F86B  FF                 	db	255
  3260   00F86C  FF                 	db	255
  3261   00F86D  FF                 	db	255
  3262   00F86E  FF                 	db	255
  3263   00F86F  FF                 	db	255
  3264   00F870  FF                 	db	255
  3265   00F871  FF                 	db	255
  3266   00F872  FF                 	db	255
  3267   00F873  FF                 	db	255
  3268   00F874  FF                 	db	255
  3269   00F875  FF                 	db	255
  3270   00F876  FF                 	db	255
  3271   00F877  FF                 	db	255
  3272   00F878  FF                 	db	255
  3273   00F879  FF                 	db	255
  3274   00F87A  FF                 	db	255
  3275   00F87B  FF                 	db	255
  3276   00F87C  FF                 	db	255
  3277   00F87D  FF                 	db	255
  3278   00F87E  FF                 	db	255
  3279   00F87F  FF                 	db	255
  3280   00F880  FF                 	db	255
  3281   00F881  FF                 	db	255
  3282   00F882  FF                 	db	255
  3283   00F883  FF                 	db	255
  3284   00F884  FF                 	db	255
  3285   00F885  FF                 	db	255
  3286   00F886  FF                 	db	255
  3287   00F887  FF                 	db	255
  3288   00F888  FF                 	db	255
  3289   00F889  FF                 	db	255
  3290   00F88A  FF                 	db	255
  3291   00F88B  FF                 	db	255
  3292   00F88C  FF                 	db	255
  3293   00F88D  FF                 	db	255
  3294   00F88E  FF                 	db	255
  3295   00F88F  FF                 	db	255
  3296   00F890  FF                 	db	255
  3297   00F891  FF                 	db	255
  3298   00F892  FF                 	db	255
  3299   00F893  FF                 	db	255
  3300   00F894  FF                 	db	255
  3301   00F895  FF                 	db	255
  3302   00F896  FF                 	db	255
  3303   00F897  FF                 	db	255
  3304   00F898  FF                 	db	255
  3305   00F899  FF                 	db	255
  3306   00F89A  FF                 	db	255
  3307   00F89B  FF                 	db	255
  3308   00F89C  FF                 	db	255
  3309   00F89D  FF                 	db	255
  3310   00F89E  FF                 	db	255
  3311   00F89F  FF                 	db	255
  3312   00F8A0  FF                 	db	255
  3313   00F8A1  FF                 	db	255
  3314   00F8A2  FF                 	db	255
  3315   00F8A3  FF                 	db	255
  3316   00F8A4  FF                 	db	255
  3317   00F8A5  FF                 	db	255
  3318   00F8A6  FF                 	db	255
  3319   00F8A7  FF                 	db	255
  3320   00F8A8  FF                 	db	255
  3321   00F8A9  FF                 	db	255
  3322   00F8AA  FF                 	db	255
  3323   00F8AB  FF                 	db	255
  3324   00F8AC  FF                 	db	255
  3325   00F8AD  FF                 	db	255
  3326   00F8AE  FF                 	db	255
  3327   00F8AF  FF                 	db	255
  3328   00F8B0  FF                 	db	255
  3329   00F8B1  FF                 	db	255
  3330   00F8B2  FF                 	db	255
  3331   00F8B3  FF                 	db	255
  3332   00F8B4  FF                 	db	255
  3333   00F8B5  FF                 	db	255
  3334   00F8B6  FF                 	db	255
  3335   00F8B7  FF                 	db	255
  3336   00F8B8  FF                 	db	255
  3337   00F8B9  FF                 	db	255
  3338   00F8BA  FF                 	db	255
  3339   00F8BB  FF                 	db	255
  3340   00F8BC  FF                 	db	255
  3341   00F8BD  FF                 	db	255
  3342   00F8BE  FF                 	db	255
  3343   00F8BF  FF                 	db	255
  3344   00F8C0  FF                 	db	255
  3345   00F8C1  FF                 	db	255
  3346   00F8C2  FF                 	db	255
  3347   00F8C3  FF                 	db	255
  3348   00F8C4  FF                 	db	255
  3349   00F8C5  FF                 	db	255
  3350   00F8C6  FF                 	db	255
  3351   00F8C7  FF                 	db	255
  3352   00F8C8  FF                 	db	255
  3353   00F8C9  FF                 	db	255
  3354   00F8CA  FF                 	db	255
  3355   00F8CB  FF                 	db	255
  3356   00F8CC  FF                 	db	255
  3357   00F8CD  FF                 	db	255
  3358   00F8CE  FF                 	db	255
  3359   00F8CF  FF                 	db	255
  3360   00F8D0  FF                 	db	255
  3361   00F8D1  FF                 	db	255
  3362   00F8D2  FF                 	db	255
  3363   00F8D3  FF                 	db	255
  3364   00F8D4  FF                 	db	255
  3365   00F8D5  FF                 	db	255
  3366   00F8D6  FF                 	db	255
  3367   00F8D7  FF                 	db	255
  3368   00F8D8  FF                 	db	255
  3369   00F8D9  FF                 	db	255
  3370   00F8DA  FF                 	db	255
  3371   00F8DB  FF                 	db	255
  3372   00F8DC  FF                 	db	255
  3373   00F8DD  FF                 	db	255
  3374   00F8DE  FF                 	db	255
  3375   00F8DF  FF                 	db	255
  3376   00F8E0  FF                 	db	255
  3377   00F8E1  FF                 	db	255
  3378   00F8E2  FF                 	db	255
  3379   00F8E3  FF                 	db	255
  3380   00F8E4  FF                 	db	255
  3381   00F8E5  FF                 	db	255
  3382   00F8E6  FF                 	db	255
  3383   00F8E7  FF                 	db	255
  3384   00F8E8  FF                 	db	255
  3385   00F8E9  FF                 	db	255
  3386   00F8EA  FF                 	db	255
  3387   00F8EB  FF                 	db	255
  3388   00F8EC  FF                 	db	255
  3389   00F8ED  FF                 	db	255
  3390   00F8EE  FF                 	db	255
  3391   00F8EF  FF                 	db	255
  3392   00F8F0  FF                 	db	255
  3393   00F8F1  FF                 	db	255
  3394   00F8F2  FF                 	db	255
  3395   00F8F3  FF                 	db	255
  3396   00F8F4  FF                 	db	255
  3397   00F8F5  FF                 	db	255
  3398   00F8F6  FF                 	db	255
  3399   00F8F7  FF                 	db	255
  3400   00F8F8  FF                 	db	255
  3401   00F8F9  FF                 	db	255
  3402   00F8FA  FF                 	db	255
  3403   00F8FB  FF                 	db	255
  3404   00F8FC  FF                 	db	255
  3405   00F8FD  FF                 	db	255
  3406   00F8FE  FF                 	db	255
  3407   00F8FF  FF                 	db	255
  3408   00F900  FF                 	db	255
  3409   00F901  FF                 	db	255
  3410   00F902  FF                 	db	255
  3411   00F903  FF                 	db	255
  3412   00F904  FF                 	db	255
  3413   00F905  FF                 	db	255
  3414   00F906  FF                 	db	255
  3415   00F907  FF                 	db	255
  3416   00F908  FF                 	db	255
  3417   00F909  FF                 	db	255
  3418   00F90A  FF                 	db	255
  3419   00F90B  FF                 	db	255
  3420   00F90C  FF                 	db	255
  3421   00F90D  FF                 	db	255
  3422   00F90E  FF                 	db	255
  3423   00F90F  FF                 	db	255
  3424   00F910  FF                 	db	255
  3425   00F911  FF                 	db	255
  3426   00F912  FF                 	db	255
  3427   00F913  FF                 	db	255
  3428   00F914  FF                 	db	255
  3429   00F915  FF                 	db	255
  3430   00F916  FF                 	db	255
  3431   00F917  FF                 	db	255
  3432   00F918  FF                 	db	255
  3433   00F919  FF                 	db	255
  3434   00F91A  FF                 	db	255
  3435   00F91B  FF                 	db	255
  3436   00F91C  FF                 	db	255
  3437   00F91D  FF                 	db	255
  3438   00F91E  FF                 	db	255
  3439   00F91F  FF                 	db	255
  3440   00F920  FF                 	db	255
  3441   00F921  FF                 	db	255
  3442   00F922  FF                 	db	255
  3443   00F923  FF                 	db	255
  3444   00F924  FF                 	db	255
  3445   00F925  FF                 	db	255
  3446   00F926  FF                 	db	255
  3447   00F927  FF                 	db	255
  3448   00F928  FF                 	db	255
  3449   00F929  FF                 	db	255
  3450   00F92A  FF                 	db	255
  3451   00F92B  FF                 	db	255
  3452   00F92C  FF                 	db	255
  3453   00F92D  FF                 	db	255
  3454   00F92E  FF                 	db	255
  3455   00F92F  FF                 	db	255
  3456   00F930  FF                 	db	255
  3457   00F931  FF                 	db	255
  3458   00F932  FF                 	db	255
  3459   00F933  FF                 	db	255
  3460   00F934  FF                 	db	255
  3461   00F935  FF                 	db	255
  3462   00F936  FF                 	db	255
  3463   00F937  FF                 	db	255
  3464   00F938  FF                 	db	255
  3465   00F939  FF                 	db	255
  3466   00F93A  FF                 	db	255
  3467   00F93B  FF                 	db	255
  3468   00F93C  FF                 	db	255
  3469   00F93D  FF                 	db	255
  3470   00F93E  FF                 	db	255
  3471   00F93F  FF                 	db	255
  3472   00F940  FF                 	db	255
  3473   00F941  FF                 	db	255
  3474   00F942  FF                 	db	255
  3475   00F943  FF                 	db	255
  3476   00F944  FF                 	db	255
  3477   00F945  FF                 	db	255
  3478   00F946  FF                 	db	255
  3479   00F947  FF                 	db	255
  3480   00F948  FF                 	db	255
  3481   00F949  FF                 	db	255
  3482   00F94A  FF                 	db	255
  3483   00F94B  FF                 	db	255
  3484   00F94C  FF                 	db	255
  3485   00F94D  FF                 	db	255
  3486   00F94E  FF                 	db	255
  3487   00F94F  FF                 	db	255
  3488   00F950  FF                 	db	255
  3489   00F951  FF                 	db	255
  3490   00F952  FF                 	db	255
  3491   00F953  FF                 	db	255
  3492   00F954  FF                 	db	255
  3493   00F955  FF                 	db	255
  3494   00F956  FF                 	db	255
  3495   00F957  FF                 	db	255
  3496   00F958  FF                 	db	255
  3497   00F959  FF                 	db	255
  3498   00F95A  FF                 	db	255
  3499   00F95B  FF                 	db	255
  3500   00F95C  FF                 	db	255
  3501   00F95D  FF                 	db	255
  3502   00F95E  FF                 	db	255
  3503   00F95F  FF                 	db	255
  3504   00F960  FF                 	db	255
  3505   00F961  FF                 	db	255
  3506   00F962  FF                 	db	255
  3507   00F963  FF                 	db	255
  3508   00F964  FF                 	db	255
  3509   00F965  FF                 	db	255
  3510   00F966  FF                 	db	255
  3511   00F967  FF                 	db	255
  3512   00F968  FF                 	db	255
  3513   00F969  FF                 	db	255
  3514   00F96A  FF                 	db	255
  3515   00F96B  FF                 	db	255
  3516   00F96C  FF                 	db	255
  3517   00F96D  FF                 	db	255
  3518   00F96E  FF                 	db	255
  3519   00F96F  FF                 	db	255
  3520   00F970  FF                 	db	255
  3521   00F971  FF                 	db	255
  3522   00F972  FF                 	db	255
  3523   00F973  FF                 	db	255
  3524   00F974  FF                 	db	255
  3525   00F975  FF                 	db	255
  3526   00F976  FF                 	db	255
  3527   00F977  FF                 	db	255
  3528   00F978  FF                 	db	255
  3529   00F979  FF                 	db	255
  3530   00F97A  FF                 	db	255
  3531   00F97B  FF                 	db	255
  3532   00F97C  FF                 	db	255
  3533   00F97D  FF                 	db	255
  3534   00F97E  FF                 	db	255
  3535   00F97F  FF                 	db	255
  3536   00F980  FF                 	db	255
  3537   00F981  FF                 	db	255
  3538   00F982  FF                 	db	255
  3539   00F983  FF                 	db	255
  3540   00F984  FF                 	db	255
  3541   00F985  FF                 	db	255
  3542   00F986  FF                 	db	255
  3543   00F987  FF                 	db	255
  3544   00F988  FF                 	db	255
  3545   00F989  FF                 	db	255
  3546   00F98A  FF                 	db	255
  3547   00F98B  FF                 	db	255
  3548   00F98C  FF                 	db	255
  3549   00F98D  FF                 	db	255
  3550   00F98E  FF                 	db	255
  3551   00F98F  FF                 	db	255
  3552   00F990  FF                 	db	255
  3553   00F991  FF                 	db	255
  3554   00F992  FF                 	db	255
  3555   00F993  FF                 	db	255
  3556   00F994  FF                 	db	255
  3557   00F995  FF                 	db	255
  3558   00F996  FF                 	db	255
  3559   00F997  FF                 	db	255
  3560   00F998  FF                 	db	255
  3561   00F999  FF                 	db	255
  3562   00F99A  FF                 	db	255
  3563   00F99B  FF                 	db	255
  3564   00F99C  FF                 	db	255
  3565   00F99D  FF                 	db	255
  3566   00F99E  FF                 	db	255
  3567   00F99F  FF                 	db	255
  3568   00F9A0  FF                 	db	255
  3569   00F9A1  FF                 	db	255
  3570   00F9A2  FF                 	db	255
  3571   00F9A3  FF                 	db	255
  3572   00F9A4  FF                 	db	255
  3573   00F9A5  FF                 	db	255
  3574   00F9A6  FF                 	db	255
  3575   00F9A7  FF                 	db	255
  3576   00F9A8  FF                 	db	255
  3577   00F9A9  FF                 	db	255
  3578   00F9AA  FF                 	db	255
  3579   00F9AB  FF                 	db	255
  3580   00F9AC  FF                 	db	255
  3581   00F9AD  FF                 	db	255
  3582   00F9AE  FF                 	db	255
  3583   00F9AF  FF                 	db	255
  3584   00F9B0  FF                 	db	255
  3585   00F9B1  FF                 	db	255
  3586   00F9B2  FF                 	db	255
  3587   00F9B3  FF                 	db	255
  3588   00F9B4  FF                 	db	255
  3589   00F9B5  FF                 	db	255
  3590   00F9B6  FF                 	db	255
  3591   00F9B7  FF                 	db	255
  3592   00F9B8  FF                 	db	255
  3593   00F9B9  FF                 	db	255
  3594   00F9BA  FF                 	db	255
  3595   00F9BB  FF                 	db	255
  3596   00F9BC  FF                 	db	255
  3597   00F9BD  FF                 	db	255
  3598   00F9BE  FF                 	db	255
  3599   00F9BF  FF                 	db	255
  3600   00F9C0  FF                 	db	255
  3601   00F9C1  FF                 	db	255
  3602   00F9C2  FF                 	db	255
  3603   00F9C3  FF                 	db	255
  3604   00F9C4  FF                 	db	255
  3605   00F9C5  FF                 	db	255
  3606   00F9C6  FF                 	db	255
  3607   00F9C7  FF                 	db	255
  3608   00F9C8  FF                 	db	255
  3609   00F9C9  FF                 	db	255
  3610   00F9CA  FF                 	db	255
  3611   00F9CB  FF                 	db	255
  3612   00F9CC  FF                 	db	255
  3613   00F9CD  FF                 	db	255
  3614   00F9CE  FF                 	db	255
  3615   00F9CF  FF                 	db	255
  3616   00F9D0  FF                 	db	255
  3617   00F9D1  FF                 	db	255
  3618   00F9D2  FF                 	db	255
  3619   00F9D3  FF                 	db	255
  3620   00F9D4  FF                 	db	255
  3621   00F9D5  FF                 	db	255
  3622   00F9D6  FF                 	db	255
  3623   00F9D7  FF                 	db	255
  3624   00F9D8  FF                 	db	255
  3625   00F9D9  FF                 	db	255
  3626   00F9DA  FF                 	db	255
  3627   00F9DB  FF                 	db	255
  3628   00F9DC  FF                 	db	255
  3629   00F9DD  FF                 	db	255
  3630   00F9DE  FF                 	db	255
  3631   00F9DF  FF                 	db	255
  3632   00F9E0  FF                 	db	255
  3633   00F9E1  FF                 	db	255
  3634   00F9E2  FF                 	db	255
  3635   00F9E3  FF                 	db	255
  3636   00F9E4  FF                 	db	255
  3637   00F9E5  FF                 	db	255
  3638   00F9E6  FF                 	db	255
  3639   00F9E7  FF                 	db	255
  3640   00F9E8  FF                 	db	255
  3641   00F9E9  FF                 	db	255
  3642   00F9EA  FF                 	db	255
  3643   00F9EB  FF                 	db	255
  3644   00F9EC  FF                 	db	255
  3645   00F9ED  FF                 	db	255
  3646   00F9EE  FF                 	db	255
  3647   00F9EF  FF                 	db	255
  3648   00F9F0  FF                 	db	255
  3649   00F9F1  FF                 	db	255
  3650   00F9F2  FF                 	db	255
  3651   00F9F3  FF                 	db	255
  3652   00F9F4  FF                 	db	255
  3653   00F9F5  FF                 	db	255
  3654   00F9F6  FF                 	db	255
  3655   00F9F7  FF                 	db	255
  3656   00F9F8  FF                 	db	255
  3657   00F9F9  FF                 	db	255
  3658   00F9FA  FF                 	db	255
  3659   00F9FB  FF                 	db	255
  3660   00F9FC  FF                 	db	255
  3661   00F9FD  FF                 	db	255
  3662   00F9FE  FF                 	db	255
  3663   00F9FF  FF                 	db	255
  3664   00FA00  FF                 	db	255
  3665   00FA01  FF                 	db	255
  3666   00FA02  FF                 	db	255
  3667   00FA03  FF                 	db	255
  3668   00FA04  FF                 	db	255
  3669   00FA05  FF                 	db	255
  3670   00FA06  FF                 	db	255
  3671   00FA07  FF                 	db	255
  3672   00FA08  FF                 	db	255
  3673   00FA09  FF                 	db	255
  3674   00FA0A  FF                 	db	255
  3675   00FA0B  FF                 	db	255
  3676   00FA0C  FF                 	db	255
  3677   00FA0D  FF                 	db	255
  3678   00FA0E  FF                 	db	255
  3679   00FA0F  FF                 	db	255
  3680   00FA10  FF                 	db	255
  3681   00FA11  FF                 	db	255
  3682   00FA12  FF                 	db	255
  3683   00FA13  FF                 	db	255
  3684   00FA14  FF                 	db	255
  3685   00FA15  FF                 	db	255
  3686   00FA16  FF                 	db	255
  3687   00FA17  FF                 	db	255
  3688   00FA18  FF                 	db	255
  3689   00FA19  FF                 	db	255
  3690   00FA1A  FF                 	db	255
  3691   00FA1B  FF                 	db	255
  3692   00FA1C  FF                 	db	255
  3693   00FA1D  FF                 	db	255
  3694   00FA1E  FF                 	db	255
  3695   00FA1F  FF                 	db	255
  3696   00FA20  FF                 	db	255
  3697   00FA21  FF                 	db	255
  3698   00FA22  FF                 	db	255
  3699   00FA23  FF                 	db	255
  3700   00FA24  FF                 	db	255
  3701   00FA25  FF                 	db	255
  3702   00FA26  FF                 	db	255
  3703   00FA27  FF                 	db	255
  3704   00FA28  FF                 	db	255
  3705   00FA29  FF                 	db	255
  3706   00FA2A  FF                 	db	255
  3707   00FA2B  FF                 	db	255
  3708   00FA2C  FF                 	db	255
  3709   00FA2D  FF                 	db	255
  3710   00FA2E  FF                 	db	255
  3711   00FA2F  FF                 	db	255
  3712   00FA30  FF                 	db	255
  3713   00FA31  FF                 	db	255
  3714   00FA32  FF                 	db	255
  3715   00FA33  FF                 	db	255
  3716   00FA34  FF                 	db	255
  3717   00FA35  FF                 	db	255
  3718   00FA36  FF                 	db	255
  3719   00FA37  FF                 	db	255
  3720   00FA38  FF                 	db	255
  3721   00FA39  FF                 	db	255
  3722   00FA3A  FF                 	db	255
  3723   00FA3B  FF                 	db	255
  3724   00FA3C  FF                 	db	255
  3725   00FA3D  FF                 	db	255
  3726   00FA3E  FF                 	db	255
  3727   00FA3F  FF                 	db	255
  3728   00FA40  FF                 	db	255
  3729   00FA41  FF                 	db	255
  3730   00FA42  FF                 	db	255
  3731   00FA43  FF                 	db	255
  3732   00FA44  FF                 	db	255
  3733   00FA45  FF                 	db	255
  3734   00FA46  FF                 	db	255
  3735   00FA47  FF                 	db	255
  3736   00FA48  FF                 	db	255
  3737   00FA49  FF                 	db	255
  3738   00FA4A  FF                 	db	255
  3739   00FA4B  FF                 	db	255
  3740   00FA4C  FF                 	db	255
  3741   00FA4D  FF                 	db	255
  3742   00FA4E  FF                 	db	255
  3743   00FA4F  FF                 	db	255
  3744   00FA50  FF                 	db	255
  3745   00FA51  FF                 	db	255
  3746   00FA52  FF                 	db	255
  3747   00FA53  FF                 	db	255
  3748   00FA54  FF                 	db	255
  3749   00FA55  FF                 	db	255
  3750   00FA56  FF                 	db	255
  3751   00FA57  FF                 	db	255
  3752   00FA58  FF                 	db	255
  3753   00FA59  FF                 	db	255
  3754   00FA5A  FF                 	db	255
  3755   00FA5B  FF                 	db	255
  3756   00FA5C  FF                 	db	255
  3757   00FA5D  FF                 	db	255
  3758   00FA5E  FF                 	db	255
  3759   00FA5F  FF                 	db	255
  3760   00FA60  FF                 	db	255
  3761   00FA61  FF                 	db	255
  3762   00FA62  FF                 	db	255
  3763   00FA63  FF                 	db	255
  3764   00FA64  FF                 	db	255
  3765   00FA65  FF                 	db	255
  3766   00FA66  FF                 	db	255
  3767   00FA67  FF                 	db	255
  3768   00FA68  FF                 	db	255
  3769   00FA69  FF                 	db	255
  3770   00FA6A  FF                 	db	255
  3771   00FA6B  FF                 	db	255
  3772   00FA6C  FF                 	db	255
  3773   00FA6D  FF                 	db	255
  3774   00FA6E  FF                 	db	255
  3775   00FA6F  FF                 	db	255
  3776   00FA70  FF                 	db	255
  3777   00FA71  FF                 	db	255
  3778   00FA72  FF                 	db	255
  3779   00FA73  FF                 	db	255
  3780   00FA74  FF                 	db	255
  3781   00FA75  FF                 	db	255
  3782   00FA76  FF                 	db	255
  3783   00FA77  FF                 	db	255
  3784   00FA78  FF                 	db	255
  3785   00FA79  FF                 	db	255
  3786   00FA7A  FF                 	db	255
  3787   00FA7B  FF                 	db	255
  3788   00FA7C  FF                 	db	255
  3789   00FA7D  FF                 	db	255
  3790   00FA7E  FF                 	db	255
  3791   00FA7F  FF                 	db	255
  3792   00FA80  FF                 	db	255
  3793   00FA81  FF                 	db	255
  3794   00FA82  FF                 	db	255
  3795   00FA83  FF                 	db	255
  3796   00FA84  FF                 	db	255
  3797   00FA85  FF                 	db	255
  3798   00FA86  FF                 	db	255
  3799   00FA87  FF                 	db	255
  3800   00FA88  FF                 	db	255
  3801   00FA89  FF                 	db	255
  3802   00FA8A  FF                 	db	255
  3803   00FA8B  FF                 	db	255
  3804   00FA8C  FF                 	db	255
  3805   00FA8D  FF                 	db	255
  3806   00FA8E  FF                 	db	255
  3807   00FA8F  FF                 	db	255
  3808   00FA90  FF                 	db	255
  3809   00FA91  FF                 	db	255
  3810   00FA92  FF                 	db	255
  3811   00FA93  FF                 	db	255
  3812   00FA94  FF                 	db	255
  3813   00FA95  FF                 	db	255
  3814   00FA96  FF                 	db	255
  3815   00FA97  FF                 	db	255
  3816   00FA98  FF                 	db	255
  3817   00FA99  FF                 	db	255
  3818   00FA9A  FF                 	db	255
  3819   00FA9B  FF                 	db	255
  3820   00FA9C  FF                 	db	255
  3821   00FA9D  FF                 	db	255
  3822   00FA9E  FF                 	db	255
  3823   00FA9F  FF                 	db	255
  3824   00FAA0  FF                 	db	255
  3825   00FAA1  FF                 	db	255
  3826   00FAA2  FF                 	db	255
  3827   00FAA3  FF                 	db	255
  3828   00FAA4  FF                 	db	255
  3829   00FAA5  FF                 	db	255
  3830   00FAA6  FF                 	db	255
  3831   00FAA7  FF                 	db	255
  3832   00FAA8  FF                 	db	255
  3833   00FAA9  FF                 	db	255
  3834   00FAAA  FF                 	db	255
  3835   00FAAB  FF                 	db	255
  3836   00FAAC  FF                 	db	255
  3837   00FAAD  FF                 	db	255
  3838   00FAAE  FF                 	db	255
  3839   00FAAF  FF                 	db	255
  3840   00FAB0  FF                 	db	255
  3841   00FAB1  FF                 	db	255
  3842   00FAB2  FF                 	db	255
  3843   00FAB3  FF                 	db	255
  3844   00FAB4  FF                 	db	255
  3845   00FAB5  FF                 	db	255
  3846   00FAB6  FF                 	db	255
  3847   00FAB7  FF                 	db	255
  3848   00FAB8  FF                 	db	255
  3849   00FAB9  FF                 	db	255
  3850   00FABA  FF                 	db	255
  3851   00FABB  FF                 	db	255
  3852   00FABC  FF                 	db	255
  3853   00FABD  FF                 	db	255
  3854   00FABE  FF                 	db	255
  3855   00FABF  FF                 	db	255
  3856   00FAC0  FF                 	db	255
  3857   00FAC1  FF                 	db	255
  3858   00FAC2  FF                 	db	255
  3859   00FAC3  FF                 	db	255
  3860   00FAC4  FF                 	db	255
  3861   00FAC5  FF                 	db	255
  3862   00FAC6  FF                 	db	255
  3863   00FAC7  FF                 	db	255
  3864   00FAC8  FF                 	db	255
  3865   00FAC9  FF                 	db	255
  3866   00FACA  FF                 	db	255
  3867   00FACB  FF                 	db	255
  3868   00FACC  FF                 	db	255
  3869   00FACD  FF                 	db	255
  3870   00FACE  FF                 	db	255
  3871   00FACF  FF                 	db	255
  3872   00FAD0  FF                 	db	255
  3873   00FAD1  FF                 	db	255
  3874   00FAD2  FF                 	db	255
  3875   00FAD3  FF                 	db	255
  3876   00FAD4  FF                 	db	255
  3877   00FAD5  FF                 	db	255
  3878   00FAD6  FF                 	db	255
  3879   00FAD7  FF                 	db	255
  3880   00FAD8  FF                 	db	255
  3881   00FAD9  FF                 	db	255
  3882   00FADA  FF                 	db	255
  3883   00FADB  FF                 	db	255
  3884   00FADC  FF                 	db	255
  3885   00FADD  FF                 	db	255
  3886   00FADE  FF                 	db	255
  3887   00FADF  FF                 	db	255
  3888   00FAE0  FF                 	db	255
  3889   00FAE1  FF                 	db	255
  3890   00FAE2  FF                 	db	255
  3891   00FAE3  FF                 	db	255
  3892   00FAE4  FF                 	db	255
  3893   00FAE5  FF                 	db	255
  3894   00FAE6  FF                 	db	255
  3895   00FAE7  FF                 	db	255
  3896   00FAE8  FF                 	db	255
  3897   00FAE9  FF                 	db	255
  3898   00FAEA  FF                 	db	255
  3899   00FAEB  FF                 	db	255
  3900   00FAEC  FF                 	db	255
  3901   00FAED  FF                 	db	255
  3902   00FAEE  FF                 	db	255
  3903   00FAEF  FF                 	db	255
  3904   00FAF0  FF                 	db	255
  3905   00FAF1  FF                 	db	255
  3906   00FAF2  FF                 	db	255
  3907   00FAF3  FF                 	db	255
  3908   00FAF4  FF                 	db	255
  3909   00FAF5  FF                 	db	255
  3910   00FAF6  FF                 	db	255
  3911   00FAF7  FF                 	db	255
  3912   00FAF8  FF                 	db	255
  3913   00FAF9  FF                 	db	255
  3914   00FAFA  FF                 	db	255
  3915   00FAFB  FF                 	db	255
  3916   00FAFC  FF                 	db	255
  3917   00FAFD  FF                 	db	255
  3918   00FAFE  FF                 	db	255
  3919   00FAFF  FF                 	db	255
  3920   00FB00  FF                 	db	255
  3921   00FB01  FF                 	db	255
  3922   00FB02  FF                 	db	255
  3923   00FB03  FF                 	db	255
  3924   00FB04  FF                 	db	255
  3925   00FB05  FF                 	db	255
  3926   00FB06  FF                 	db	255
  3927   00FB07  FF                 	db	255
  3928   00FB08  FF                 	db	255
  3929   00FB09  FF                 	db	255
  3930   00FB0A  FF                 	db	255
  3931   00FB0B  FF                 	db	255
  3932   00FB0C  FF                 	db	255
  3933   00FB0D  FF                 	db	255
  3934   00FB0E  FF                 	db	255
  3935   00FB0F  FF                 	db	255
  3936   00FB10  FF                 	db	255
  3937   00FB11  FF                 	db	255
  3938   00FB12  FF                 	db	255
  3939   00FB13  FF                 	db	255
  3940   00FB14  FF                 	db	255
  3941   00FB15  FF                 	db	255
  3942   00FB16  FF                 	db	255
  3943   00FB17  FF                 	db	255
  3944   00FB18  FF                 	db	255
  3945   00FB19  FF                 	db	255
  3946   00FB1A  FF                 	db	255
  3947   00FB1B  FF                 	db	255
  3948   00FB1C  FF                 	db	255
  3949   00FB1D  FF                 	db	255
  3950   00FB1E  FF                 	db	255
  3951   00FB1F  FF                 	db	255
  3952   00FB20  FF                 	db	255
  3953   00FB21  FF                 	db	255
  3954   00FB22  FF                 	db	255
  3955   00FB23  FF                 	db	255
  3956   00FB24  FF                 	db	255
  3957   00FB25  FF                 	db	255
  3958   00FB26  FF                 	db	255
  3959   00FB27  FF                 	db	255
  3960   00FB28  FF                 	db	255
  3961   00FB29  FF                 	db	255
  3962   00FB2A  FF                 	db	255
  3963   00FB2B  FF                 	db	255
  3964   00FB2C  FF                 	db	255
  3965   00FB2D  FF                 	db	255
  3966   00FB2E  FF                 	db	255
  3967   00FB2F  FF                 	db	255
  3968   00FB30  FF                 	db	255
  3969   00FB31  FF                 	db	255
  3970   00FB32  FF                 	db	255
  3971   00FB33  FF                 	db	255
  3972   00FB34  FF                 	db	255
  3973   00FB35  FF                 	db	255
  3974   00FB36  FF                 	db	255
  3975   00FB37  FF                 	db	255
  3976   00FB38  FF                 	db	255
  3977   00FB39  FF                 	db	255
  3978   00FB3A  FF                 	db	255
  3979   00FB3B  FF                 	db	255
  3980   00FB3C  FF                 	db	255
  3981   00FB3D  FF                 	db	255
  3982   00FB3E  FF                 	db	255
  3983   00FB3F  FF                 	db	255
  3984   00FB40  FF                 	db	255
  3985   00FB41  FF                 	db	255
  3986   00FB42  FF                 	db	255
  3987   00FB43  FF                 	db	255
  3988   00FB44  FF                 	db	255
  3989   00FB45  FF                 	db	255
  3990   00FB46  FF                 	db	255
  3991   00FB47  FF                 	db	255
  3992   00FB48  FF                 	db	255
  3993   00FB49  FF                 	db	255
  3994   00FB4A  FF                 	db	255
  3995   00FB4B  FF                 	db	255
  3996   00FB4C  FF                 	db	255
  3997   00FB4D  FF                 	db	255
  3998   00FB4E  FF                 	db	255
  3999   00FB4F  FF                 	db	255
  4000   00FB50  FF                 	db	255
  4001   00FB51  FF                 	db	255
  4002   00FB52  FF                 	db	255
  4003   00FB53  FF                 	db	255
  4004   00FB54  FF                 	db	255
  4005   00FB55  FF                 	db	255
  4006   00FB56  FF                 	db	255
  4007   00FB57  FF                 	db	255
  4008   00FB58  FF                 	db	255
  4009   00FB59  FF                 	db	255
  4010   00FB5A  FF                 	db	255
  4011   00FB5B  FF                 	db	255
  4012   00FB5C  FF                 	db	255
  4013   00FB5D  FF                 	db	255
  4014   00FB5E  FF                 	db	255
  4015   00FB5F  FF                 	db	255
  4016   00FB60  FF                 	db	255
  4017   00FB61  FF                 	db	255
  4018   00FB62  FF                 	db	255
  4019   00FB63  FF                 	db	255
  4020   00FB64  FF                 	db	255
  4021   00FB65  FF                 	db	255
  4022   00FB66  FF                 	db	255
  4023   00FB67  FF                 	db	255
  4024   00FB68  FF                 	db	255
  4025   00FB69  FF                 	db	255
  4026   00FB6A  FF                 	db	255
  4027   00FB6B  FF                 	db	255
  4028   00FB6C  FF                 	db	255
  4029   00FB6D  FF                 	db	255
  4030   00FB6E  FF                 	db	255
  4031   00FB6F  FF                 	db	255
  4032   00FB70  FF                 	db	255
  4033   00FB71  FF                 	db	255
  4034   00FB72  FF                 	db	255
  4035   00FB73  FF                 	db	255
  4036   00FB74  FF                 	db	255
  4037   00FB75  FF                 	db	255
  4038   00FB76  FF                 	db	255
  4039   00FB77  FF                 	db	255
  4040   00FB78  FF                 	db	255
  4041   00FB79  FF                 	db	255
  4042   00FB7A  FF                 	db	255
  4043   00FB7B  FF                 	db	255
  4044   00FB7C  FF                 	db	255
  4045   00FB7D  FF                 	db	255
  4046   00FB7E  FF                 	db	255
  4047   00FB7F  FF                 	db	255
  4048   00FB80  FF                 	db	255
  4049   00FB81  FF                 	db	255
  4050   00FB82  FF                 	db	255
  4051   00FB83  FF                 	db	255
  4052   00FB84  FF                 	db	255
  4053   00FB85  FF                 	db	255
  4054   00FB86  FF                 	db	255
  4055   00FB87  FF                 	db	255
  4056   00FB88  FF                 	db	255
  4057   00FB89  FF                 	db	255
  4058   00FB8A  FF                 	db	255
  4059   00FB8B  FF                 	db	255
  4060   00FB8C  FF                 	db	255
  4061   00FB8D  FF                 	db	255
  4062   00FB8E  FF                 	db	255
  4063   00FB8F  FF                 	db	255
  4064   00FB90  FF                 	db	255
  4065   00FB91  FF                 	db	255
  4066   00FB92  FF                 	db	255
  4067   00FB93  FF                 	db	255
  4068   00FB94  FF                 	db	255
  4069   00FB95  FF                 	db	255
  4070   00FB96  FF                 	db	255
  4071   00FB97  FF                 	db	255
  4072   00FB98  FF                 	db	255
  4073   00FB99  FF                 	db	255
  4074   00FB9A  FF                 	db	255
  4075   00FB9B  FF                 	db	255
  4076   00FB9C  FF                 	db	255
  4077   00FB9D  FF                 	db	255
  4078   00FB9E  FF                 	db	255
  4079   00FB9F  FF                 	db	255
  4080   00FBA0  FF                 	db	255
  4081   00FBA1  FF                 	db	255
  4082   00FBA2  FF                 	db	255
  4083   00FBA3  FF                 	db	255
  4084   00FBA4  FF                 	db	255
  4085   00FBA5  FF                 	db	255
  4086   00FBA6  FF                 	db	255
  4087   00FBA7  FF                 	db	255
  4088   00FBA8  FF                 	db	255
  4089   00FBA9  FF                 	db	255
  4090   00FBAA  FF                 	db	255
  4091   00FBAB  FF                 	db	255
  4092   00FBAC  FF                 	db	255
  4093   00FBAD  FF                 	db	255
  4094   00FBAE  FF                 	db	255
  4095   00FBAF  FF                 	db	255
  4096   00FBB0  FF                 	db	255
  4097   00FBB1  FF                 	db	255
  4098   00FBB2  FF                 	db	255
  4099   00FBB3  FF                 	db	255
  4100   00FBB4  FF                 	db	255
  4101   00FBB5  FF                 	db	255
  4102   00FBB6  FF                 	db	255
  4103   00FBB7  FF                 	db	255
  4104   00FBB8  FF                 	db	255
  4105   00FBB9  FF                 	db	255
  4106   00FBBA  FF                 	db	255
  4107   00FBBB  FF                 	db	255
  4108   00FBBC  FF                 	db	255
  4109   00FBBD  FF                 	db	255
  4110   00FBBE  FF                 	db	255
  4111   00FBBF  FF                 	db	255
  4112   00FBC0  FF                 	db	255
  4113   00FBC1  FF                 	db	255
  4114   00FBC2  FF                 	db	255
  4115   00FBC3  FF                 	db	255
  4116   00FBC4  FF                 	db	255
  4117   00FBC5  FF                 	db	255
  4118   00FBC6  FF                 	db	255
  4119   00FBC7  FF                 	db	255
  4120   00FBC8  FF                 	db	255
  4121   00FBC9  FF                 	db	255
  4122   00FBCA  FF                 	db	255
  4123   00FBCB  FF                 	db	255
  4124   00FBCC  FF                 	db	255
  4125   00FBCD  FF                 	db	255
  4126   00FBCE  FF                 	db	255
  4127   00FBCF  FF                 	db	255
  4128   00FBD0  FF                 	db	255
  4129   00FBD1  FF                 	db	255
  4130   00FBD2  FF                 	db	255
  4131   00FBD3  FF                 	db	255
  4132   00FBD4  FF                 	db	255
  4133   00FBD5  FF                 	db	255
  4134   00FBD6  FF                 	db	255
  4135   00FBD7  FF                 	db	255
  4136   00FBD8  FF                 	db	255
  4137   00FBD9  FF                 	db	255
  4138   00FBDA  FF                 	db	255
  4139   00FBDB  FF                 	db	255
  4140   00FBDC  FF                 	db	255
  4141   00FBDD  FF                 	db	255
  4142   00FBDE  FF                 	db	255
  4143   00FBDF  FF                 	db	255
  4144   00FBE0  FF                 	db	255
  4145   00FBE1  FF                 	db	255
  4146   00FBE2  FF                 	db	255
  4147   00FBE3  FF                 	db	255
  4148   00FBE4  FF                 	db	255
  4149   00FBE5  FF                 	db	255
  4150   00FBE6  FF                 	db	255
  4151   00FBE7  FF                 	db	255
  4152   00FBE8  FF                 	db	255
  4153   00FBE9  FF                 	db	255
  4154   00FBEA  FF                 	db	255
  4155   00FBEB  FF                 	db	255
  4156   00FBEC  FF                 	db	255
  4157   00FBED  FF                 	db	255
  4158   00FBEE  FF                 	db	255
  4159   00FBEF  FF                 	db	255
  4160   00FBF0  FF                 	db	255
  4161   00FBF1  FF                 	db	255
  4162   00FBF2  FF                 	db	255
  4163   00FBF3  FF                 	db	255
  4164   00FBF4  FF                 	db	255
  4165   00FBF5  FF                 	db	255
  4166   00FBF6  FF                 	db	255
  4167   00FBF7  FF                 	db	255
  4168   00FBF8  FF                 	db	255
  4169   00FBF9  FF                 	db	255
  4170   00FBFA  FF                 	db	255
  4171   00FBFB  FF                 	db	255
  4172   00FBFC  FF                 	db	255
  4173   00FBFD  FF                 	db	255
  4174   00FBFE  FF                 	db	255
  4175   00FBFF  FF                 	db	255
  4176   00FC00  FF                 	db	255
  4177   00FC01  FF                 	db	255
  4178   00FC02  FF                 	db	255
  4179   00FC03  FF                 	db	255
  4180   00FC04  FF                 	db	255
  4181   00FC05  FF                 	db	255
  4182   00FC06  FF                 	db	255
  4183   00FC07  FF                 	db	255
  4184   00FC08  FF                 	db	255
  4185   00FC09  FF                 	db	255
  4186   00FC0A  FF                 	db	255
  4187   00FC0B  FF                 	db	255
  4188   00FC0C  FF                 	db	255
  4189   00FC0D  FF                 	db	255
  4190   00FC0E  FF                 	db	255
  4191   00FC0F  FF                 	db	255
  4192   00FC10  FF                 	db	255
  4193   00FC11  FF                 	db	255
  4194   00FC12  FF                 	db	255
  4195   00FC13  FF                 	db	255
  4196   00FC14  FF                 	db	255
  4197   00FC15  FF                 	db	255
  4198   00FC16  FF                 	db	255
  4199   00FC17  FF                 	db	255
  4200   00FC18  FF                 	db	255
  4201   00FC19  FF                 	db	255
  4202   00FC1A  FF                 	db	255
  4203   00FC1B  FF                 	db	255
  4204   00FC1C  FF                 	db	255
  4205   00FC1D  FF                 	db	255
  4206   00FC1E  FF                 	db	255
  4207   00FC1F  FF                 	db	255
  4208   00FC20  FF                 	db	255
  4209   00FC21  FF                 	db	255
  4210   00FC22  FF                 	db	255
  4211   00FC23  FF                 	db	255
  4212   00FC24  FF                 	db	255
  4213   00FC25  FF                 	db	255
  4214   00FC26  FF                 	db	255
  4215   00FC27  FF                 	db	255
  4216   00FC28  FF                 	db	255
  4217   00FC29  FF                 	db	255
  4218   00FC2A  FF                 	db	255
  4219   00FC2B  FF                 	db	255
  4220   00FC2C  FF                 	db	255
  4221   00FC2D  FF                 	db	255
  4222   00FC2E  FF                 	db	255
  4223   00FC2F  FF                 	db	255
  4224   00FC30  FF                 	db	255
  4225   00FC31  FF                 	db	255
  4226   00FC32  FF                 	db	255
  4227   00FC33  FF                 	db	255
  4228   00FC34  FF                 	db	255
  4229   00FC35  FF                 	db	255
  4230   00FC36  FF                 	db	255
  4231   00FC37  FF                 	db	255
  4232   00FC38  FF                 	db	255
  4233   00FC39  FF                 	db	255
  4234   00FC3A  FF                 	db	255
  4235   00FC3B  FF                 	db	255
  4236   00FC3C  FF                 	db	255
  4237   00FC3D  FF                 	db	255
  4238   00FC3E  FF                 	db	255
  4239   00FC3F  FF                 	db	255
  4240   00FC40  FF                 	db	255
  4241   00FC41  FF                 	db	255
  4242   00FC42  FF                 	db	255
  4243   00FC43  FF                 	db	255
  4244   00FC44  FF                 	db	255
  4245   00FC45  FF                 	db	255
  4246   00FC46  FF                 	db	255
  4247   00FC47  FF                 	db	255
  4248   00FC48  FF                 	db	255
  4249   00FC49  FF                 	db	255
  4250   00FC4A  FF                 	db	255
  4251   00FC4B  FF                 	db	255
  4252   00FC4C  FF                 	db	255
  4253   00FC4D  FF                 	db	255
  4254   00FC4E  FF                 	db	255
  4255   00FC4F  FF                 	db	255
  4256   00FC50  FF                 	db	255
  4257   00FC51  FF                 	db	255
  4258   00FC52  FF                 	db	255
  4259   00FC53  FF                 	db	255
  4260   00FC54  FF                 	db	255
  4261   00FC55  FF                 	db	255
  4262   00FC56  FF                 	db	255
  4263   00FC57  FF                 	db	255
  4264   00FC58  FF                 	db	255
  4265   00FC59  FF                 	db	255
  4266   00FC5A  FF                 	db	255
  4267   00FC5B  FF                 	db	255
  4268   00FC5C  FF                 	db	255
  4269   00FC5D  FF                 	db	255
  4270   00FC5E  FF                 	db	255
  4271   00FC5F  FF                 	db	255
  4272   00FC60  FF                 	db	255
  4273   00FC61  FF                 	db	255
  4274   00FC62  FF                 	db	255
  4275   00FC63  FF                 	db	255
  4276   00FC64  FF                 	db	255
  4277   00FC65  FF                 	db	255
  4278   00FC66  FF                 	db	255
  4279   00FC67  FF                 	db	255
  4280   00FC68  FF                 	db	255
  4281   00FC69  FF                 	db	255
  4282   00FC6A  FF                 	db	255
  4283   00FC6B  FF                 	db	255
  4284   00FC6C  FF                 	db	255
  4285   00FC6D  FF                 	db	255
  4286   00FC6E  FF                 	db	255
  4287   00FC6F  FF                 	db	255
  4288   00FC70  FF                 	db	255
  4289   00FC71  FF                 	db	255
  4290   00FC72  FF                 	db	255
  4291   00FC73  FF                 	db	255
  4292   00FC74  FF                 	db	255
  4293   00FC75  FF                 	db	255
  4294   00FC76  FF                 	db	255
  4295   00FC77  FF                 	db	255
  4296   00FC78  FF                 	db	255
  4297   00FC79  FF                 	db	255
  4298   00FC7A  FF                 	db	255
  4299   00FC7B  FF                 	db	255
  4300   00FC7C  FF                 	db	255
  4301   00FC7D  FF                 	db	255
  4302   00FC7E  FF                 	db	255
  4303   00FC7F  FF                 	db	255
  4304   00FC80  FF                 	db	255
  4305   00FC81  FF                 	db	255
  4306   00FC82  FF                 	db	255
  4307   00FC83  FF                 	db	255
  4308   00FC84  FF                 	db	255
  4309   00FC85  FF                 	db	255
  4310   00FC86  FF                 	db	255
  4311   00FC87  FF                 	db	255
  4312   00FC88  FF                 	db	255
  4313   00FC89  FF                 	db	255
  4314   00FC8A  FF                 	db	255
  4315   00FC8B  FF                 	db	255
  4316   00FC8C  FF                 	db	255
  4317   00FC8D  FF                 	db	255
  4318   00FC8E  FF                 	db	255
  4319   00FC8F  FF                 	db	255
  4320   00FC90  FF                 	db	255
  4321   00FC91  FF                 	db	255
  4322   00FC92  FF                 	db	255
  4323   00FC93  FF                 	db	255
  4324   00FC94  FF                 	db	255
  4325   00FC95  FF                 	db	255
  4326   00FC96  FF                 	db	255
  4327   00FC97  FF                 	db	255
  4328   00FC98  FF                 	db	255
  4329   00FC99  FF                 	db	255
  4330   00FC9A  FF                 	db	255
  4331   00FC9B  FF                 	db	255
  4332   00FC9C  FF                 	db	255
  4333   00FC9D  FF                 	db	255
  4334   00FC9E  FF                 	db	255
  4335   00FC9F  FF                 	db	255
  4336   00FCA0  FF                 	db	255
  4337   00FCA1  FF                 	db	255
  4338   00FCA2  FF                 	db	255
  4339   00FCA3  FF                 	db	255
  4340   00FCA4  FF                 	db	255
  4341   00FCA5  FF                 	db	255
  4342   00FCA6  FF                 	db	255
  4343   00FCA7  FF                 	db	255
  4344   00FCA8  FF                 	db	255
  4345   00FCA9  FF                 	db	255
  4346   00FCAA  FF                 	db	255
  4347   00FCAB  FF                 	db	255
  4348   00FCAC  FF                 	db	255
  4349   00FCAD  FF                 	db	255
  4350   00FCAE  FF                 	db	255
  4351   00FCAF  FF                 	db	255
  4352   00FCB0  FF                 	db	255
  4353   00FCB1  FF                 	db	255
  4354   00FCB2  FF                 	db	255
  4355   00FCB3  FF                 	db	255
  4356   00FCB4  FF                 	db	255
  4357   00FCB5  FF                 	db	255
  4358   00FCB6  FF                 	db	255
  4359   00FCB7  FF                 	db	255
  4360   00FCB8  FF                 	db	255
  4361   00FCB9  FF                 	db	255
  4362   00FCBA  FF                 	db	255
  4363   00FCBB  FF                 	db	255
  4364   00FCBC  FF                 	db	255
  4365   00FCBD  FF                 	db	255
  4366   00FCBE  FF                 	db	255
  4367   00FCBF  FF                 	db	255
  4368   00FCC0  FF                 	db	255
  4369   00FCC1  FF                 	db	255
  4370   00FCC2  FF                 	db	255
  4371   00FCC3  FF                 	db	255
  4372   00FCC4  FF                 	db	255
  4373   00FCC5  FF                 	db	255
  4374   00FCC6  FF                 	db	255
  4375   00FCC7  FF                 	db	255
  4376   00FCC8  FF                 	db	255
  4377   00FCC9  FF                 	db	255
  4378   00FCCA  FF                 	db	255
  4379   00FCCB  FF                 	db	255
  4380   00FCCC  FF                 	db	255
  4381   00FCCD  FF                 	db	255
  4382   00FCCE  FF                 	db	255
  4383   00FCCF  FF                 	db	255
  4384   00FCD0  FF                 	db	255
  4385   00FCD1  FF                 	db	255
  4386   00FCD2  FF                 	db	255
  4387   00FCD3  FF                 	db	255
  4388   00FCD4  FF                 	db	255
  4389   00FCD5  FF                 	db	255
  4390   00FCD6  FF                 	db	255
  4391   00FCD7  FF                 	db	255
  4392   00FCD8  FF                 	db	255
  4393   00FCD9  FF                 	db	255
  4394   00FCDA  FF                 	db	255
  4395   00FCDB  FF                 	db	255
  4396   00FCDC  FF                 	db	255
  4397   00FCDD  FF                 	db	255
  4398   00FCDE  FF                 	db	255
  4399   00FCDF  FF                 	db	255
  4400   00FCE0  FF                 	db	255
  4401   00FCE1  FF                 	db	255
  4402   00FCE2  FF                 	db	255
  4403   00FCE3  FF                 	db	255
  4404   00FCE4  FF                 	db	255
  4405   00FCE5  FF                 	db	255
  4406   00FCE6  FF                 	db	255
  4407   00FCE7  FF                 	db	255
  4408   00FCE8  FF                 	db	255
  4409   00FCE9  FF                 	db	255
  4410   00FCEA  FF                 	db	255
  4411   00FCEB  FF                 	db	255
  4412   00FCEC  FF                 	db	255
  4413   00FCED  FF                 	db	255
  4414   00FCEE  FF                 	db	255
  4415   00FCEF  FF                 	db	255
  4416   00FCF0  FF                 	db	255
  4417   00FCF1  FF                 	db	255
  4418   00FCF2  FF                 	db	255
  4419   00FCF3  FF                 	db	255
  4420   00FCF4  FF                 	db	255
  4421   00FCF5  FF                 	db	255
  4422   00FCF6  FF                 	db	255
  4423   00FCF7  FF                 	db	255
  4424   00FCF8  FF                 	db	255
  4425   00FCF9  FF                 	db	255
  4426   00FCFA  FF                 	db	255
  4427   00FCFB  FF                 	db	255
  4428   00FCFC  FF                 	db	255
  4429   00FCFD  FF                 	db	255
  4430   00FCFE  FF                 	db	255
  4431   00FCFF  FF                 	db	255
  4432   00FD00  FF                 	db	255
  4433   00FD01  FF                 	db	255
  4434   00FD02  FF                 	db	255
  4435   00FD03  FF                 	db	255
  4436   00FD04  FF                 	db	255
  4437   00FD05  FF                 	db	255
  4438   00FD06  FF                 	db	255
  4439   00FD07  FF                 	db	255
  4440   00FD08  FF                 	db	255
  4441   00FD09  FF                 	db	255
  4442   00FD0A  FF                 	db	255
  4443   00FD0B  FF                 	db	255
  4444   00FD0C  FF                 	db	255
  4445   00FD0D  FF                 	db	255
  4446   00FD0E  FF                 	db	255
  4447   00FD0F  FF                 	db	255
  4448   00FD10  FF                 	db	255
  4449   00FD11  FF                 	db	255
  4450   00FD12  FF                 	db	255
  4451   00FD13  FF                 	db	255
  4452   00FD14  FF                 	db	255
  4453   00FD15  FF                 	db	255
  4454   00FD16  FF                 	db	255
  4455   00FD17  FF                 	db	255
  4456   00FD18  FF                 	db	255
  4457   00FD19  FF                 	db	255
  4458   00FD1A  FF                 	db	255
  4459   00FD1B  FF                 	db	255
  4460   00FD1C  FF                 	db	255
  4461   00FD1D  FF                 	db	255
  4462   00FD1E  FF                 	db	255
  4463   00FD1F  FF                 	db	255
  4464   00FD20  FF                 	db	255
  4465   00FD21  FF                 	db	255
  4466   00FD22  FF                 	db	255
  4467   00FD23  FF                 	db	255
  4468   00FD24  FF                 	db	255
  4469   00FD25  FF                 	db	255
  4470   00FD26  FF                 	db	255
  4471   00FD27  FF                 	db	255
  4472   00FD28  FF                 	db	255
  4473   00FD29  FF                 	db	255
  4474   00FD2A  FF                 	db	255
  4475   00FD2B  FF                 	db	255
  4476   00FD2C  FF                 	db	255
  4477   00FD2D  FF                 	db	255
  4478   00FD2E  FF                 	db	255
  4479   00FD2F  FF                 	db	255
  4480   00FD30  FF                 	db	255
  4481   00FD31  FF                 	db	255
  4482   00FD32  FF                 	db	255
  4483   00FD33  FF                 	db	255
  4484   00FD34  FF                 	db	255
  4485   00FD35  FF                 	db	255
  4486   00FD36  FF                 	db	255
  4487   00FD37  FF                 	db	255
  4488   00FD38  FF                 	db	255
  4489   00FD39  FF                 	db	255
  4490   00FD3A  FF                 	db	255
  4491   00FD3B  FF                 	db	255
  4492   00FD3C  FF                 	db	255
  4493   00FD3D  FF                 	db	255
  4494   00FD3E  FF                 	db	255
  4495   00FD3F  FF                 	db	255
  4496   00FD40  FF                 	db	255
  4497   00FD41  FF                 	db	255
  4498   00FD42  FF                 	db	255
  4499   00FD43  FF                 	db	255
  4500   00FD44  FF                 	db	255
  4501   00FD45  FF                 	db	255
  4502   00FD46  FF                 	db	255
  4503   00FD47  FF                 	db	255
  4504   00FD48  FF                 	db	255
  4505   00FD49  FF                 	db	255
  4506   00FD4A  FF                 	db	255
  4507   00FD4B  FF                 	db	255
  4508   00FD4C  FF                 	db	255
  4509   00FD4D  FF                 	db	255
  4510   00FD4E  FF                 	db	255
  4511   00FD4F  FF                 	db	255
  4512   00FD50  FF                 	db	255
  4513   00FD51  FF                 	db	255
  4514   00FD52  FF                 	db	255
  4515   00FD53  FF                 	db	255
  4516   00FD54  FF                 	db	255
  4517   00FD55  FF                 	db	255
  4518   00FD56  FF                 	db	255
  4519   00FD57  FF                 	db	255
  4520   00FD58  FF                 	db	255
  4521   00FD59  FF                 	db	255
  4522   00FD5A  FF                 	db	255
  4523   00FD5B  FF                 	db	255
  4524   00FD5C  FF                 	db	255
  4525   00FD5D  FF                 	db	255
  4526   00FD5E  FF                 	db	255
  4527   00FD5F  FF                 	db	255
  4528   00FD60  FF                 	db	255
  4529   00FD61  FF                 	db	255
  4530   00FD62  FF                 	db	255
  4531   00FD63  FF                 	db	255
  4532   00FD64  FF                 	db	255
  4533   00FD65  FF                 	db	255
  4534   00FD66  FF                 	db	255
  4535   00FD67  FF                 	db	255
  4536   00FD68  FF                 	db	255
  4537   00FD69  FF                 	db	255
  4538   00FD6A  FF                 	db	255
  4539   00FD6B  FF                 	db	255
  4540   00FD6C  FF                 	db	255
  4541   00FD6D  FF                 	db	255
  4542   00FD6E  FF                 	db	255
  4543   00FD6F  FF                 	db	255
  4544   00FD70  FF                 	db	255
  4545   00FD71  FF                 	db	255
  4546   00FD72  FF                 	db	255
  4547   00FD73  FF                 	db	255
  4548   00FD74  FF                 	db	255
  4549   00FD75  FF                 	db	255
  4550   00FD76  FF                 	db	255
  4551   00FD77  FF                 	db	255
  4552   00FD78  FF                 	db	255
  4553   00FD79  FF                 	db	255
  4554   00FD7A  FF                 	db	255
  4555   00FD7B  FF                 	db	255
  4556   00FD7C  FF                 	db	255
  4557   00FD7D  FF                 	db	255
  4558   00FD7E  FF                 	db	255
  4559   00FD7F  FF                 	db	255
  4560   00FD80  FF                 	db	255
  4561   00FD81  FF                 	db	255
  4562   00FD82  FF                 	db	255
  4563   00FD83  FF                 	db	255
  4564   00FD84  FF                 	db	255
  4565   00FD85  FF                 	db	255
  4566   00FD86  FF                 	db	255
  4567   00FD87  FF                 	db	255
  4568   00FD88  FF                 	db	255
  4569   00FD89  FF                 	db	255
  4570   00FD8A  FF                 	db	255
  4571   00FD8B  FF                 	db	255
  4572   00FD8C  FF                 	db	255
  4573   00FD8D  FF                 	db	255
  4574   00FD8E  FF                 	db	255
  4575   00FD8F  FF                 	db	255
  4576   00FD90  FF                 	db	255
  4577   00FD91  FF                 	db	255
  4578   00FD92  FF                 	db	255
  4579   00FD93  FF                 	db	255
  4580   00FD94  FF                 	db	255
  4581   00FD95  FF                 	db	255
  4582   00FD96  FF                 	db	255
  4583   00FD97  FF                 	db	255
  4584   00FD98  FF                 	db	255
  4585   00FD99  FF                 	db	255
  4586   00FD9A  FF                 	db	255
  4587   00FD9B  FF                 	db	255
  4588   00FD9C  FF                 	db	255
  4589   00FD9D  FF                 	db	255
  4590   00FD9E  FF                 	db	255
  4591   00FD9F  FF                 	db	255
  4592   00FDA0  FF                 	db	255
  4593   00FDA1  FF                 	db	255
  4594   00FDA2  FF                 	db	255
  4595   00FDA3  FF                 	db	255
  4596   00FDA4  FF                 	db	255
  4597   00FDA5  FF                 	db	255
  4598   00FDA6  FF                 	db	255
  4599   00FDA7  FF                 	db	255
  4600   00FDA8  FF                 	db	255
  4601   00FDA9  FF                 	db	255
  4602   00FDAA  FF                 	db	255
  4603   00FDAB  FF                 	db	255
  4604   00FDAC  FF                 	db	255
  4605   00FDAD  FF                 	db	255
  4606   00FDAE  FF                 	db	255
  4607   00FDAF  FF                 	db	255
  4608   00FDB0  FF                 	db	255
  4609   00FDB1  FF                 	db	255
  4610   00FDB2  FF                 	db	255
  4611   00FDB3  FF                 	db	255
  4612   00FDB4  FF                 	db	255
  4613   00FDB5  FF                 	db	255
  4614   00FDB6  FF                 	db	255
  4615   00FDB7  FF                 	db	255
  4616   00FDB8  FF                 	db	255
  4617   00FDB9  FF                 	db	255
  4618   00FDBA  FF                 	db	255
  4619   00FDBB  FF                 	db	255
  4620   00FDBC  FF                 	db	255
  4621   00FDBD  FF                 	db	255
  4622   00FDBE  FF                 	db	255
  4623   00FDBF  FF                 	db	255
  4624   00FDC0  FF                 	db	255
  4625   00FDC1  FF                 	db	255
  4626   00FDC2  FF                 	db	255
  4627   00FDC3  FF                 	db	255
  4628   00FDC4  FF                 	db	255
  4629   00FDC5  FF                 	db	255
  4630   00FDC6  FF                 	db	255
  4631   00FDC7  FF                 	db	255
  4632   00FDC8  FF                 	db	255
  4633   00FDC9  FF                 	db	255
  4634   00FDCA  FF                 	db	255
  4635   00FDCB  FF                 	db	255
  4636   00FDCC  FF                 	db	255
  4637   00FDCD  FF                 	db	255
  4638   00FDCE  FF                 	db	255
  4639   00FDCF  FF                 	db	255
  4640   00FDD0  FF                 	db	255
  4641   00FDD1  FF                 	db	255
  4642   00FDD2  FF                 	db	255
  4643   00FDD3  FF                 	db	255
  4644   00FDD4  FF                 	db	255
  4645   00FDD5  FF                 	db	255
  4646   00FDD6  FF                 	db	255
  4647   00FDD7  FF                 	db	255
  4648   00FDD8  FF                 	db	255
  4649   00FDD9  FF                 	db	255
  4650   00FDDA  FF                 	db	255
  4651   00FDDB  FF                 	db	255
  4652   00FDDC  FF                 	db	255
  4653   00FDDD  FF                 	db	255
  4654   00FDDE  FF                 	db	255
  4655   00FDDF  FF                 	db	255
  4656   00FDE0  FF                 	db	255
  4657   00FDE1  FF                 	db	255
  4658   00FDE2  FF                 	db	255
  4659   00FDE3  FF                 	db	255
  4660   00FDE4  FF                 	db	255
  4661   00FDE5  FF                 	db	255
  4662   00FDE6  FF                 	db	255
  4663   00FDE7  FF                 	db	255
  4664   00FDE8  FF                 	db	255
  4665   00FDE9  FF                 	db	255
  4666   00FDEA  FF                 	db	255
  4667   00FDEB  FF                 	db	255
  4668   00FDEC  FF                 	db	255
  4669   00FDED  FF                 	db	255
  4670   00FDEE  FF                 	db	255
  4671   00FDEF  FF                 	db	255
  4672   00FDF0  FF                 	db	255
  4673   00FDF1  FF                 	db	255
  4674   00FDF2  FF                 	db	255
  4675   00FDF3  FF                 	db	255
  4676   00FDF4  FF                 	db	255
  4677   00FDF5  FF                 	db	255
  4678   00FDF6  FF                 	db	255
  4679   00FDF7  FF                 	db	255
  4680   00FDF8  FF                 	db	255
  4681   00FDF9  FF                 	db	255
  4682   00FDFA  FF                 	db	255
  4683   00FDFB  FF                 	db	255
  4684   00FDFC  FF                 	db	255
  4685   00FDFD  FF                 	db	255
  4686   00FDFE  FF                 	db	255
  4687   00FDFF  FF                 	db	255
  4688   00FE00  FF                 	db	255
  4689   00FE01  FF                 	db	255
  4690   00FE02  FF                 	db	255
  4691   00FE03  FF                 	db	255
  4692   00FE04  FF                 	db	255
  4693   00FE05  FF                 	db	255
  4694   00FE06  FF                 	db	255
  4695   00FE07  FF                 	db	255
  4696   00FE08  FF                 	db	255
  4697   00FE09  FF                 	db	255
  4698   00FE0A  FF                 	db	255
  4699   00FE0B  FF                 	db	255
  4700   00FE0C  FF                 	db	255
  4701   00FE0D  FF                 	db	255
  4702   00FE0E  FF                 	db	255
  4703   00FE0F  FF                 	db	255
  4704   00FE10  FF                 	db	255
  4705   00FE11  FF                 	db	255
  4706   00FE12  FF                 	db	255
  4707   00FE13  FF                 	db	255
  4708   00FE14  FF                 	db	255
  4709   00FE15  FF                 	db	255
  4710   00FE16  FF                 	db	255
  4711   00FE17  FF                 	db	255
  4712   00FE18  FF                 	db	255
  4713   00FE19  FF                 	db	255
  4714   00FE1A  FF                 	db	255
  4715   00FE1B  FF                 	db	255
  4716   00FE1C  FF                 	db	255
  4717   00FE1D  FF                 	db	255
  4718   00FE1E  FF                 	db	255
  4719   00FE1F  FF                 	db	255
  4720   00FE20  FF                 	db	255
  4721   00FE21  FF                 	db	255
  4722   00FE22  FF                 	db	255
  4723   00FE23  FF                 	db	255
  4724   00FE24  FF                 	db	255
  4725   00FE25  FF                 	db	255
  4726   00FE26  FF                 	db	255
  4727   00FE27  FF                 	db	255
  4728   00FE28  FF                 	db	255
  4729   00FE29  FF                 	db	255
  4730   00FE2A  FF                 	db	255
  4731   00FE2B  FF                 	db	255
  4732   00FE2C  FF                 	db	255
  4733   00FE2D  FF                 	db	255
  4734   00FE2E  FF                 	db	255
  4735   00FE2F  FF                 	db	255
  4736   00FE30  FF                 	db	255
  4737   00FE31  FF                 	db	255
  4738   00FE32  FF                 	db	255
  4739   00FE33  FF                 	db	255
  4740   00FE34  FF                 	db	255
  4741   00FE35  FF                 	db	255
  4742   00FE36  FF                 	db	255
  4743   00FE37  FF                 	db	255
  4744   00FE38  FF                 	db	255
  4745   00FE39  FF                 	db	255
  4746   00FE3A  FF                 	db	255
  4747   00FE3B  FF                 	db	255
  4748   00FE3C  FF                 	db	255
  4749   00FE3D  FF                 	db	255
  4750   00FE3E  FF                 	db	255
  4751   00FE3F  FF                 	db	255
  4752   00FE40  FF                 	db	255
  4753   00FE41  FF                 	db	255
  4754   00FE42  FF                 	db	255
  4755   00FE43  FF                 	db	255
  4756   00FE44  FF                 	db	255
  4757   00FE45  FF                 	db	255
  4758   00FE46  FF                 	db	255
  4759   00FE47  FF                 	db	255
  4760   00FE48  FF                 	db	255
  4761   00FE49  FF                 	db	255
  4762   00FE4A  FF                 	db	255
  4763   00FE4B  FF                 	db	255
  4764   00FE4C  FF                 	db	255
  4765   00FE4D  FF                 	db	255
  4766   00FE4E  FF                 	db	255
  4767   00FE4F  FF                 	db	255
  4768   00FE50  FF                 	db	255
  4769   00FE51  FF                 	db	255
  4770   00FE52  FF                 	db	255
  4771   00FE53  FF                 	db	255
  4772   00FE54  FF                 	db	255
  4773   00FE55  FF                 	db	255
  4774   00FE56  FF                 	db	255
  4775   00FE57  FF                 	db	255
  4776   00FE58  FF                 	db	255
  4777   00FE59  FF                 	db	255
  4778   00FE5A  FF                 	db	255
  4779   00FE5B  FF                 	db	255
  4780   00FE5C  FF                 	db	255
  4781   00FE5D  FF                 	db	255
  4782   00FE5E  FF                 	db	255
  4783   00FE5F  FF                 	db	255
  4784   00FE60  FF                 	db	255
  4785   00FE61  FF                 	db	255
  4786   00FE62  FF                 	db	255
  4787   00FE63  FF                 	db	255
  4788   00FE64  FF                 	db	255
  4789   00FE65  FF                 	db	255
  4790   00FE66  FF                 	db	255
  4791   00FE67  FF                 	db	255
  4792   00FE68  FF                 	db	255
  4793   00FE69  FF                 	db	255
  4794   00FE6A  FF                 	db	255
  4795   00FE6B  FF                 	db	255
  4796   00FE6C  FF                 	db	255
  4797   00FE6D  FF                 	db	255
  4798   00FE6E  FF                 	db	255
  4799   00FE6F  FF                 	db	255
  4800   00FE70  FF                 	db	255
  4801   00FE71  FF                 	db	255
  4802   00FE72  FF                 	db	255
  4803   00FE73  FF                 	db	255
  4804   00FE74  FF                 	db	255
  4805   00FE75  FF                 	db	255
  4806   00FE76  FF                 	db	255
  4807   00FE77  FF                 	db	255
  4808   00FE78  FF                 	db	255
  4809   00FE79  FF                 	db	255
  4810   00FE7A  FF                 	db	255
  4811   00FE7B  FF                 	db	255
  4812   00FE7C  FF                 	db	255
  4813   00FE7D  FF                 	db	255
  4814   00FE7E  FF                 	db	255
  4815   00FE7F  FF                 	db	255
  4816   00FE80  FF                 	db	255
  4817   00FE81  FF                 	db	255
  4818   00FE82  FF                 	db	255
  4819   00FE83  FF                 	db	255
  4820   00FE84  FF                 	db	255
  4821   00FE85  FF                 	db	255
  4822   00FE86  FF                 	db	255
  4823   00FE87  FF                 	db	255
  4824   00FE88  FF                 	db	255
  4825   00FE89  FF                 	db	255
  4826   00FE8A  FF                 	db	255
  4827   00FE8B  FF                 	db	255
  4828   00FE8C  FF                 	db	255
  4829   00FE8D  FF                 	db	255
  4830   00FE8E  FF                 	db	255
  4831   00FE8F  FF                 	db	255
  4832   00FE90  FF                 	db	255
  4833   00FE91  FF                 	db	255
  4834   00FE92  FF                 	db	255
  4835   00FE93  FF                 	db	255
  4836   00FE94  FF                 	db	255
  4837   00FE95  FF                 	db	255
  4838   00FE96  FF                 	db	255
  4839   00FE97  FF                 	db	255
  4840   00FE98  FF                 	db	255
  4841   00FE99  FF                 	db	255
  4842   00FE9A  FF                 	db	255
  4843   00FE9B  FF                 	db	255
  4844   00FE9C  FF                 	db	255
  4845   00FE9D  FF                 	db	255
  4846   00FE9E  FF                 	db	255
  4847   00FE9F  FF                 	db	255
  4848   00FEA0  FF                 	db	255
  4849   00FEA1  FF                 	db	255
  4850   00FEA2  FF                 	db	255
  4851   00FEA3  FF                 	db	255
  4852   00FEA4  FF                 	db	255
  4853   00FEA5  FF                 	db	255
  4854   00FEA6  FF                 	db	255
  4855   00FEA7  FF                 	db	255
  4856   00FEA8  FF                 	db	255
  4857   00FEA9  FF                 	db	255
  4858   00FEAA  FF                 	db	255
  4859   00FEAB  FF                 	db	255
  4860   00FEAC  FF                 	db	255
  4861   00FEAD  FF                 	db	255
  4862   00FEAE  FF                 	db	255
  4863   00FEAF  FF                 	db	255
  4864   00FEB0  FF                 	db	255
  4865   00FEB1  FF                 	db	255
  4866   00FEB2  FF                 	db	255
  4867   00FEB3  FF                 	db	255
  4868   00FEB4  FF                 	db	255
  4869   00FEB5  FF                 	db	255
  4870   00FEB6  FF                 	db	255
  4871   00FEB7  FF                 	db	255
  4872   00FEB8  FF                 	db	255
  4873   00FEB9  FF                 	db	255
  4874   00FEBA  FF                 	db	255
  4875   00FEBB  FF                 	db	255
  4876   00FEBC  FF                 	db	255
  4877   00FEBD  FF                 	db	255
  4878   00FEBE  FF                 	db	255
  4879   00FEBF  FF                 	db	255
  4880   00FEC0  FF                 	db	255
  4881   00FEC1  FF                 	db	255
  4882   00FEC2  FF                 	db	255
  4883   00FEC3  FF                 	db	255
  4884   00FEC4  FF                 	db	255
  4885   00FEC5  FF                 	db	255
  4886   00FEC6  FF                 	db	255
  4887   00FEC7  FF                 	db	255
  4888   00FEC8  FF                 	db	255
  4889   00FEC9  FF                 	db	255
  4890   00FECA  FF                 	db	255
  4891   00FECB  FF                 	db	255
  4892   00FECC  FF                 	db	255
  4893   00FECD  FF                 	db	255
  4894   00FECE  FF                 	db	255
  4895   00FECF  FF                 	db	255
  4896   00FED0  FF                 	db	255
  4897   00FED1  FF                 	db	255
  4898   00FED2  FF                 	db	255
  4899   00FED3  FF                 	db	255
  4900   00FED4  FF                 	db	255
  4901   00FED5  FF                 	db	255
  4902   00FED6  FF                 	db	255
  4903   00FED7  FF                 	db	255
  4904   00FED8  FF                 	db	255
  4905   00FED9  FF                 	db	255
  4906   00FEDA  FF                 	db	255
  4907   00FEDB  FF                 	db	255
  4908   00FEDC  FF                 	db	255
  4909   00FEDD  FF                 	db	255
  4910   00FEDE  FF                 	db	255
  4911   00FEDF  FF                 	db	255
  4912   00FEE0  FF                 	db	255
  4913   00FEE1  FF                 	db	255
  4914   00FEE2  FF                 	db	255
  4915   00FEE3  FF                 	db	255
  4916   00FEE4  FF                 	db	255
  4917   00FEE5  FF                 	db	255
  4918   00FEE6  FF                 	db	255
  4919   00FEE7  FF                 	db	255
  4920   00FEE8  FF                 	db	255
  4921   00FEE9  FF                 	db	255
  4922   00FEEA  FF                 	db	255
  4923   00FEEB  FF                 	db	255
  4924   00FEEC  FF                 	db	255
  4925   00FEED  FF                 	db	255
  4926   00FEEE  FF                 	db	255
  4927   00FEEF  FF                 	db	255
  4928   00FEF0  FF                 	db	255
  4929   00FEF1  FF                 	db	255
  4930   00FEF2  FF                 	db	255
  4931   00FEF3  FF                 	db	255
  4932   00FEF4  FF                 	db	255
  4933   00FEF5  FF                 	db	255
  4934   00FEF6  FF                 	db	255
  4935   00FEF7  FF                 	db	255
  4936   00FEF8  FF                 	db	255
  4937   00FEF9  FF                 	db	255
  4938   00FEFA  FF                 	db	255
  4939   00FEFB  FF                 	db	255
  4940   00FEFC  FF                 	db	255
  4941   00FEFD  FF                 	db	255
  4942   00FEFE  FF                 	db	255
  4943   00FEFF  FF                 	db	255
  4944   00FF00  FF                 	db	255
  4945   00FF01  FF                 	db	255
  4946   00FF02  FF                 	db	255
  4947   00FF03  FF                 	db	255
  4948   00FF04  FF                 	db	255
  4949   00FF05  FF                 	db	255
  4950   00FF06  FF                 	db	255
  4951   00FF07  FF                 	db	255
  4952   00FF08  FF                 	db	255
  4953   00FF09  FF                 	db	255
  4954   00FF0A  FF                 	db	255
  4955   00FF0B  FF                 	db	255
  4956   00FF0C  FF                 	db	255
  4957   00FF0D  FF                 	db	255
  4958   00FF0E  FF                 	db	255
  4959   00FF0F  FF                 	db	255
  4960   00FF10  FF                 	db	255
  4961   00FF11  FF                 	db	255
  4962   00FF12  FF                 	db	255
  4963   00FF13  FF                 	db	255
  4964   00FF14  FF                 	db	255
  4965   00FF15  FF                 	db	255
  4966   00FF16  FF                 	db	255
  4967   00FF17  FF                 	db	255
  4968   00FF18  FF                 	db	255
  4969   00FF19  FF                 	db	255
  4970   00FF1A  FF                 	db	255
  4971   00FF1B  FF                 	db	255
  4972   00FF1C  FF                 	db	255
  4973   00FF1D  FF                 	db	255
  4974   00FF1E  FF                 	db	255
  4975   00FF1F  FF                 	db	255
  4976   00FF20  FF                 	db	255
  4977   00FF21  FF                 	db	255
  4978   00FF22  FF                 	db	255
  4979   00FF23  FF                 	db	255
  4980   00FF24  FF                 	db	255
  4981   00FF25  FF                 	db	255
  4982   00FF26  FF                 	db	255
  4983   00FF27  FF                 	db	255
  4984   00FF28  FF                 	db	255
  4985   00FF29  FF                 	db	255
  4986   00FF2A  FF                 	db	255
  4987   00FF2B  FF                 	db	255
  4988   00FF2C  FF                 	db	255
  4989   00FF2D  FF                 	db	255
  4990   00FF2E  FF                 	db	255
  4991   00FF2F  FF                 	db	255
  4992   00FF30  FF                 	db	255
  4993   00FF31  FF                 	db	255
  4994   00FF32  FF                 	db	255
  4995   00FF33  FF                 	db	255
  4996   00FF34  FF                 	db	255
  4997   00FF35  FF                 	db	255
  4998   00FF36  FF                 	db	255
  4999   00FF37  FF                 	db	255
  5000   00FF38  FF                 	db	255
  5001   00FF39  FF                 	db	255
  5002   00FF3A  FF                 	db	255
  5003   00FF3B  FF                 	db	255
  5004   00FF3C  FF                 	db	255
  5005   00FF3D  FF                 	db	255
  5006   00FF3E  FF                 	db	255
  5007   00FF3F  FF                 	db	255
  5008   00FF40  FF                 	db	255
  5009   00FF41  FF                 	db	255
  5010   00FF42  FF                 	db	255
  5011   00FF43  FF                 	db	255
  5012   00FF44  FF                 	db	255
  5013   00FF45  FF                 	db	255
  5014   00FF46  FF                 	db	255
  5015   00FF47  FF                 	db	255
  5016   00FF48  FF                 	db	255
  5017   00FF49  FF                 	db	255
  5018   00FF4A  FF                 	db	255
  5019   00FF4B  FF                 	db	255
  5020   00FF4C  FF                 	db	255
  5021   00FF4D  FF                 	db	255
  5022   00FF4E  FF                 	db	255
  5023   00FF4F  FF                 	db	255
  5024   00FF50  FF                 	db	255
  5025   00FF51  FF                 	db	255
  5026   00FF52  FF                 	db	255
  5027   00FF53  FF                 	db	255
  5028   00FF54  FF                 	db	255
  5029   00FF55  FF                 	db	255
  5030   00FF56  FF                 	db	255
  5031   00FF57  FF                 	db	255
  5032   00FF58  FF                 	db	255
  5033   00FF59  FF                 	db	255
  5034   00FF5A  FF                 	db	255
  5035   00FF5B  FF                 	db	255
  5036   00FF5C  FF                 	db	255
  5037   00FF5D  FF                 	db	255
  5038   00FF5E  FF                 	db	255
  5039   00FF5F  FF                 	db	255
  5040   00FF60  FF                 	db	255
  5041   00FF61  FF                 	db	255
  5042   00FF62  FF                 	db	255
  5043   00FF63  FF                 	db	255
  5044   00FF64  FF                 	db	255
  5045   00FF65  FF                 	db	255
  5046   00FF66  FF                 	db	255
  5047   00FF67  FF                 	db	255
  5048   00FF68  FF                 	db	255
  5049   00FF69  FF                 	db	255
  5050   00FF6A  FF                 	db	255
  5051   00FF6B  FF                 	db	255
  5052   00FF6C  FF                 	db	255
  5053   00FF6D  FF                 	db	255
  5054   00FF6E  FF                 	db	255
  5055   00FF6F  FF                 	db	255
  5056   00FF70                     __end_of_eventTable:
  5057                           	callstack 0
  5058   000000                     _paramBlock_absaddr	set	2080
  5059                           
  5060                           	psect	_paramBlock_text
  5061   000820                     __p_paramBlock_text:
  5062                           	callstack 0
  5063   000820                     _paramBlock:
  5064                           	callstack 0
  5065   000820  A5                 	db	165
  5066   000821  61                 	db	97
  5067   000822  20                 	db	32
  5068   000823  FF                 	db	255
  5069   000824  14                 	db	20
  5070   000825  7F                 	db	127
  5071   000826  04                 	db	4
  5072   000827  0B                 	db	11
  5073   000828  0F                 	db	15
  5074   000829  01                 	db	1
  5075   00082A  00                 	db	0
  5076   00082B  08                 	db	8
  5077   00082C  00                 	db	0
  5078   00082D  00                 	db	0
  5079   00082E  00                 	db	0
  5080   00082F  00                 	db	0
  5081   000830  00                 	db	0
  5082   000831  00                 	db	0
  5083   000832  01                 	db	1
  5084   000833  08                 	db	8
  5085   000834  00                 	db	0
  5086   000835  00                 	db	0
  5087   000836  00                 	db	0
  5088   000837  00                 	db	0
  5089   000838  14                 	db	20
  5090   000839  00                 	db	0
  5091   00083A  48                 	db	72
  5092   00083B  08                 	db	8
  5093   00083C  00                 	db	0
  5094   00083D  00                 	db	0
  5095   00083E  4C                 	db	76
  5096   00083F  03                 	db	3
  5097   000840                     __end_of_paramBlock:
  5098                           	callstack 0
  5099   000000                     _name_absaddr	set	2120
  5100                           
  5101                           	psect	_name_text
  5102   000848                     __p_name_text:
  5103                           	callstack 0
  5104   000848                     _name:
  5105                           	callstack 0
  5106   000848  4D                 	db	77
  5107   000849  49                 	db	73
  5108   00084A  4F                 	db	79
  5109   00084B  20                 	db	32
  5110   00084C  20                 	db	32
  5111   00084D  20                 	db	32
  5112   00084E  20                 	db	32
  5113   00084F  00                 	db	0
  5114   000850                     __end_of_name:
  5115                           	callstack 0
  5116   000000                     _COMSTAT	set	3953
  5117   000000                     _PIR5bits	set	3959
  5118   000000                     _PIE5bits	set	3958
  5119   000000                     _TXBIEbits	set	3711
  5120   000000                     _BIE0	set	3710
  5121   000000                     _RXF0SIDL	set	3809
  5122   000000                     _RXM0SIDH	set	3832
  5123   000000                     _CIOCON	set	3952
  5124   000000                     _ECANCON	set	3954
  5125   000000                     _IPR5	set	3960
  5126   000000                     _EECON2	set	3966
  5127   000000                     _TMR0L	set	4054
  5128   000000                     _TMR0H	set	4055
  5129   000000                     _TMR3L	set	4018
  5130   000000                     _TMR3H	set	4019
  5131   000000                     _TMR1L	set	4046
  5132   000000                     _TMR1H	set	4047
  5133   000000                     _T3CONbits	set	4017
  5134   000000                     _ANCON1	set	3932
  5135   000000                     _ANCON0	set	3933
  5136   000000                     _B0CON	set	3712
  5137                           
  5138                           	psect	nvBANK0
  5139   0000D1                     __pnvBANK0:
  5140                           	callstack 0
  5141   0000D1                     _flashBlock:
  5142                           	callstack 0
  5143   0000D1                     	ds	2
  5144   000000                     _TXB2CONbits	set	3840
  5145   000000                     _TXB1CONbits	set	3856
  5146   000000                     _TXB0CONbits	set	3872
  5147   000000                     _COMSTATbits	set	3953
  5148   000000                     _EECON1	set	3967
  5149   000000                     _T0CONbits	set	4053
  5150   000000                     _LATBbits	set	3978
  5151   000000                     _TRISAbits	set	3986
  5152   000000                     _TRISBbits	set	3987
  5153   000000                     _PORTAbits	set	3968
  5154   000000                     _BRGCON1	set	3651
  5155   000000                     _BSEL0	set	3709
  5156   000000                     _WPUB	set	3931
  5157   000000                     _INTCON2bits	set	4081
  5158   000000                     _TBLPTR	set	4086
  5159   000000                     _TABLAT	set	4085
  5160   000000                     _TBLPTRU	set	4088
  5161   000000                     _INTCONbits	set	4082
  5162   000000                     _CANSTATbits	set	3950
  5163   000000                     _CANCON	set	3951
  5164   000000                     _EEDATA	set	3955
  5165   000000                     _EEADR	set	3956
  5166   000000                     _EEADRH	set	3957
  5167   000000                     _EECON1bits	set	3967
  5168   000000                     _PORTA	set	3968
  5169   000000                     _LATA	set	3977
  5170   000000                     _TRISA	set	3986
  5171   000000                     _RXB0CON	set	3936
  5172   000000                     _OSCTUNEbits	set	3995
  5173   000000                     _PIE1bits	set	3997
  5174   000000                     _PIR1bits	set	3998
  5175   000000                     _TRISC	set	3988
  5176   000000                     _TRISB	set	3987
  5177   000000                     _PIE2bits	set	4000
  5178   000000                     _PIR2bits	set	4001
  5179   000000                     _T1GCONbits	set	4010
  5180   000000                     _LATC	set	3979
  5181   000000                     _LATB	set	3978
  5182   000000                     _PORTC	set	3970
  5183   000000                     _PORTB	set	3969
  5184   000000                     _T3GCONbits	set	4016
  5185   000000                     _T1CONbits	set	4045
  5186   000000                     _RCONbits	set	4048
  5187   000000                     _T0CON	set	4053
  5188   000000                     _EEIF	set	32190
  5189   000000                     _RXFCON0	set	3654
  5190   000000                     _RXFBCON0	set	3697
  5191   000000                     _BRGCON3	set	3653
  5192   000000                     _BRGCON2	set	3652
  5193   000000                     _TXB2CON	set	3840
  5194   000000                     _TXB1CON	set	3856
  5195   000000                     _TXB0CON	set	3872
  5196   000000                     _RXM0EIDL	set	3835
  5197   000000                     _RXM0EIDH	set	3834
  5198   000000                     _RXM0SIDL	set	3833
  5199   000000                     _RXB1CON	set	3888
  5200   000000                     _MSEL0	set	3705
  5201   000000                     _B1CON	set	3728
  5202   000000                     _B2CON	set	3744
  5203   000000                     _B3CON	set	3760
  5204   000000                     _B4CON	set	3776
  5205   000000                     _B5CON	set	3792
  5206   000000                     _TXB0SIDL	set	3874
  5207   000000                     _TXB0SIDH	set	3873
  5208   000000                     _TXB0DLC	set	3877
  5209   000000                     _TXB0D7	set	3885
  5210   000000                     _TXB0D6	set	3884
  5211   000000                     _TXB0D5	set	3883
  5212   000000                     _TXB0D4	set	3882
  5213   000000                     _TXB0D3	set	3881
  5214   000000                     _TXB0D2	set	3880
  5215   000000                     _TXB0D1	set	3879
  5216   000000                     _TXB0D0	set	3878
  5217   000000                     _TXB1SIDL	set	3858
  5218   000000                     _TXB1SIDH	set	3857
  5219   000000                     _TXB1DLC	set	3861
  5220   000000                     _TXB2SIDL	set	3842
  5221   000000                     _TXB2SIDH	set	3841
  5222   000000                     _TXB2DLC	set	3845
  5223                           
  5224                           ; #config settings
  5225                           
  5226                           	psect	cinit
  5227   00AE26                     __pcinit:
  5228                           	callstack 0
  5229   00AE26                     start_initialization:
  5230                           	callstack 0
  5231   00AE26                     __initialization:
  5232                           	callstack 0
  5233                           
  5234                           ; Clear objects allocated to BIGRAM (928 bytes)
  5235   00AE26  EE05  F048         	lfsr	0,__pbssBIGRAM
  5236   00AE2A  EE13 F0A0          	lfsr	1,928
  5237   00AE2E                     clear_0:
  5238   00AE2E  6AEE               	clrf	postinc0,c
  5239   00AE30  50E5               	movf	postdec1,w,c
  5240   00AE32  50E1               	movf	fsr1l,w,c
  5241   00AE34  E1FC               	bnz	clear_0
  5242   00AE36  50E2               	movf	fsr1h,w,c
  5243   00AE38  E1FA               	bnz	clear_0
  5244                           
  5245                           ; Clear objects allocated to BANK5 (72 bytes)
  5246   00AE3A  EE05  F000         	lfsr	0,__pbssBANK5
  5247   00AE3E  0E48               	movlw	72
  5248   00AE40                     clear_1:
  5249   00AE40  6AEE               	clrf	postinc0,c
  5250   00AE42  06E8               	decf	wreg,f,c
  5251   00AE44  E1FD               	bnz	clear_1
  5252                           
  5253                           ; Clear objects allocated to BANK4 (192 bytes)
  5254   00AE46  EE04  F000         	lfsr	0,__pbssBANK4
  5255   00AE4A  0EC0               	movlw	192
  5256   00AE4C                     clear_2:
  5257   00AE4C  6AEE               	clrf	postinc0,c
  5258   00AE4E  06E8               	decf	wreg,f,c
  5259   00AE50  E1FD               	bnz	clear_2
  5260                           
  5261                           ; Clear objects allocated to BANK3 (200 bytes)
  5262   00AE52  EE03  F000         	lfsr	0,__pbssBANK3
  5263   00AE56  0EC8               	movlw	200
  5264   00AE58                     clear_3:
  5265   00AE58  6AEE               	clrf	postinc0,c
  5266   00AE5A  06E8               	decf	wreg,f,c
  5267   00AE5C  E1FD               	bnz	clear_3
  5268                           
  5269                           ; Clear objects allocated to BANK2 (204 bytes)
  5270   00AE5E  EE02  F000         	lfsr	0,__pbssBANK2
  5271   00AE62  0ECC               	movlw	204
  5272   00AE64                     clear_4:
  5273   00AE64  6AEE               	clrf	postinc0,c
  5274   00AE66  06E8               	decf	wreg,f,c
  5275   00AE68  E1FD               	bnz	clear_4
  5276                           
  5277                           ; Clear objects allocated to BANK1 (189 bytes)
  5278   00AE6A  EE01  F000         	lfsr	0,__pbssBANK1
  5279   00AE6E  0EBD               	movlw	189
  5280   00AE70                     clear_5:
  5281   00AE70  6AEE               	clrf	postinc0,c
  5282   00AE72  06E8               	decf	wreg,f,c
  5283   00AE74  E1FD               	bnz	clear_5
  5284                           
  5285                           ; Clear objects allocated to BANK0 (40 bytes)
  5286   00AE76  EE00  F0A9         	lfsr	0,__pbssBANK0
  5287   00AE7A  0E28               	movlw	40
  5288   00AE7C                     clear_6:
  5289   00AE7C  6AEE               	clrf	postinc0,c
  5290   00AE7E  06E8               	decf	wreg,f,c
  5291   00AE80  E1FD               	bnz	clear_6
  5292                           
  5293                           ; Clear objects allocated to COMRAM (41 bytes)
  5294   00AE82  EE00  F02B         	lfsr	0,__pbssCOMRAM
  5295   00AE86  0E29               	movlw	41
  5296   00AE88                     clear_7:
  5297   00AE88  6AEE               	clrf	postinc0,c
  5298   00AE8A  06E8               	decf	wreg,f,c
  5299   00AE8C  E1FD               	bnz	clear_7
  5300   00AE8E                     end_of_initialization:
  5301                           	callstack 0
  5302   00AE8E                     __end_of__initialization:
  5303                           	callstack 0
  5304   00AE8E  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5305   00AE90  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5306   00AE92  0100               	movlb	0
  5307   00AE94  EFD3  F05D         	goto	_main	;jump to C main() function
  5308                           
  5309                           	psect	bssCOMRAM
  5310   00002B                     __pbssCOMRAM:
  5311                           	callstack 0
  5312   00002B                     _targetPos:
  5313                           	callstack 0
  5314   00002B                     	ds	16
  5315   00003B                     _enumerationStartTime:
  5316                           	callstack 0
  5317   00003B                     	ds	4
  5318   00003F                     _canTransmitTimeout:
  5319                           	callstack 0
  5320   00003F                     	ds	4
  5321   000043                     _startTime:
  5322                           	callstack 0
  5323   000043                     	ds	4
  5324   000047                     _EnumerationState:
  5325                           	callstack 0
  5326   000047                     	ds	1
  5327   000048                     _eeBootFlag:
  5328                           	callstack 0
  5329   000048                     	ds	1
  5330   000049                     _expedited:
  5331                           	callstack 0
  5332   000049                     	ds	1
  5333   00004A                     _txQueue:
  5334                           	callstack 0
  5335   00004A                     	ds	5
  5336   00004F                     _rxQueue:
  5337                           	callstack 0
  5338   00004F                     	ds	5
  5339                           
  5340                           	psect	bssBANK0
  5341   0000A9                     __pbssBANK0:
  5342                           	callstack 0
  5343   0000A9                     _pbTimer:
  5344                           	callstack 0
  5345   0000A9                     	ds	4
  5346   0000AD                     _timedResponseCallback:
  5347                           	callstack 0
  5348   0000AD                     	ds	2
  5349   0000AF                     _flashCounter:
  5350                           	callstack 0
  5351   0000AF                     	ds	2
  5352   0000B1                     _ledState:
  5353                           	callstack 0
  5354   0000B1                     	ds	2
  5355   0000B3                     _servoActive:
  5356                           	callstack 0
  5357   0000B3                     	ds	2
  5358   0000B5                     _nn:
  5359                           	callstack 0
  5360   0000B5                     	ds	2
  5361   0000B7                     _enumerationState:
  5362                           	callstack 0
  5363   0000B7                     	ds	1
  5364   0000B8                     _canTransmitFailed:
  5365                           	callstack 0
  5366   0000B8                     	ds	1
  5367   0000B9                     _canId:
  5368                           	callstack 0
  5369   0000B9                     	ds	1
  5370   0000BA                     _flashFlags:
  5371                           	callstack 0
  5372   0000BA                     	ds	1
  5373   0000BB                     _timedResponseStep:
  5374                           	callstack 0
  5375   0000BB                     	ds	1
  5376   0000BC                     _timedResponseType:
  5377                           	callstack 0
  5378   0000BC                     	ds	1
  5379   0000BD                     _timedResponseAllServicesFlag:
  5380                           	callstack 0
  5381   0000BD                     	ds	1
  5382   0000BE                     _timedResponseServiceIndex:
  5383                           	callstack 0
  5384   0000BE                     	ds	1
  5385   0000BF                     _heartbeatSequence:
  5386                           	callstack 0
  5387   0000BF                     	ds	1
  5388   0000C0                     _pbWasPushed:
  5389                           	callstack 0
  5390   0000C0                     	ds	1
  5391   0000C1                     _setupModePreviousMode:
  5392                           	callstack 0
  5393   0000C1                     	ds	1
  5394   0000C2                     _last_mode_flags:
  5395                           	callstack 0
  5396   0000C2                     	ds	1
  5397   0000C3                     _last_mode_state:
  5398                           	callstack 0
  5399   0000C3                     	ds	1
  5400   0000C4                     _mode_state:
  5401                           	callstack 0
  5402   0000C4                     	ds	1
  5403   0000C5                     _timerExtension2:
  5404                           	callstack 0
  5405   0000C5                     	ds	1
  5406   0000C6                     _timerExtension1:
  5407                           	callstack 0
  5408   0000C6                     	ds	1
  5409   0000C7                     _bootloaderVersion:
  5410                           	callstack 0
  5411   0000C7                     	ds	1
  5412   0000C8                     _bootloaderType:
  5413                           	callstack 0
  5414   0000C8                     	ds	1
  5415   0000C9                     _servoInBlock:
  5416                           	callstack 0
  5417   0000C9                     	ds	1
  5418   0000CA                     _expeditedWriteIndex:
  5419                           	callstack 0
  5420   0000CA                     	ds	1
  5421   0000CB                     _expeditedReadIndex:
  5422                           	callstack 0
  5423   0000CB                     	ds	1
  5424   0000CC                     _normalWriteIndex:
  5425                           	callstack 0
  5426   0000CC                     	ds	1
  5427   0000CD                     _normalReadIndex:
  5428                           	callstack 0
  5429   0000CD                     	ds	1
  5430   0000CE                     _io@inputs$F849:
  5431                           	callstack 0
  5432   0000CE                     	ds	1
  5433   0000CF                     _io:
  5434                           	callstack 0
  5435   0000CF                     	ds	1
  5436   0000D0                     _started:
  5437                           	callstack 0
  5438   0000D0                     	ds	1
  5439                           
  5440                           	psect	bssBANK1
  5441   000100                     __pbssBANK1:
  5442                           	callstack 0
  5443   000100                     _stepsPerPollSpeed:
  5444                           	callstack 0
  5445   000100                     	ds	16
  5446   000110                     _servoState:
  5447                           	callstack 0
  5448   000110                     	ds	16
  5449   000120                     _flashDelays:
  5450                           	callstack 0
  5451   000120                     	ds	16
  5452   000130                     _currentPos:
  5453                           	callstack 0
  5454   000130                     	ds	16
  5455   000140                     _flashFlushTime:
  5456                           	callstack 0
  5457   000140                     	ds	4
  5458   000144                     _timedResponseTime:
  5459                           	callstack 0
  5460   000144                     	ds	4
  5461   000148                     _ledTimer:
  5462                           	callstack 0
  5463   000148                     	ds	4
  5464   00014C                     _uptimeTimer:
  5465                           	callstack 0
  5466   00014C                     	ds	4
  5467   000150                     _heartbeatTimer:
  5468                           	callstack 0
  5469   000150                     	ds	4
  5470   000154                     _startWait:
  5471                           	callstack 0
  5472   000154                     	ds	4
  5473   000158                     _lastActionPollTime:
  5474                           	callstack 0
  5475   000158                     	ds	4
  5476   00015C                     _lastInputScanTime:
  5477                           	callstack 0
  5478   00015C                     	ds	4
  5479   000160                     _lastServoStartTime:
  5480                           	callstack 0
  5481   000160                     	ds	4
  5482   000164                     _previousNN:
  5483                           	callstack 0
  5484   000164                     	ds	2
  5485   000166                     _transport:
  5486                           	callstack 0
  5487   000166                     	ds	2
  5488   000168                     _timedResponseDelay:
  5489                           	callstack 0
  5490   000168                     	ds	1
  5491   000169                     _mode_flags:
  5492                           	callstack 0
  5493   000169                     	ds	1
  5494   00016A                     _canDiagnostics:
  5495                           	callstack 0
  5496   00016A                     	ds	38
  5497   000190                     _mnsDiagnostics:
  5498                           	callstack 0
  5499   000190                     	ds	14
  5500   00019E                     _tmpMessage:
  5501                           	callstack 0
  5502   00019E                     	ds	9
  5503   0001A7                     _nvDiagnostics:
  5504                           	callstack 0
  5505   0001A7                     	ds	6
  5506   0001AD                     _producerDiagnostics:
  5507                           	callstack 0
  5508   0001AD                     	ds	4
  5509   0001B1                     _teachDiagnostics:
  5510                           	callstack 0
  5511   0001B1                     	ds	4
  5512   0001B5                     _ackDiagnostics:
  5513                           	callstack 0
  5514   0001B5                     	ds	4
  5515   0001B9                     _consumer2QDiagnostics:
  5516                           	callstack 0
  5517   0001B9                     	ds	4
  5518                           
  5519                           	psect	bssBANK2
  5520   000200                     __pbssBANK2:
  5521                           	callstack 0
  5522   000200                     _speed:
  5523                           	callstack 0
  5524   000200                     	ds	32
  5525   000220                     _evs:
  5526                           	callstack 0
  5527   000220                     	ds	20
  5528   000234                     _enumerationResults:
  5529                           	callstack 0
  5530   000234                     	ds	16
  5531   000244                     _bounceState:
  5532                           	callstack 0
  5533   000244                     	ds	16
  5534   000254                     _loopCount:
  5535                           	callstack 0
  5536   000254                     	ds	16
  5537   000264                     _pollCount:
  5538                           	callstack 0
  5539   000264                     	ds	16
  5540   000274                     _pollsPerStepSpeed:
  5541                           	callstack 0
  5542   000274                     	ds	16
  5543   000284                     _delayCount:
  5544                           	callstack 0
  5545   000284                     	ds	16
  5546   000294                     _inputState:
  5547                           	callstack 0
  5548   000294                     	ds	16
  5549   0002A4                     _pulseDelays:
  5550                           	callstack 0
  5551   0002A4                     	ds	16
  5552   0002B4                     _outputState:
  5553                           	callstack 0
  5554   0002B4                     	ds	16
  5555   0002C4                     _expeditedQueueBuf:
  5556                           	callstack 0
  5557   0002C4                     	ds	8
  5558                           
  5559                           	psect	bssBANK3
  5560   000300                     __pbssBANK3:
  5561                           	callstack 0
  5562   000300                     _happening2Event:
  5563                           	callstack 0
  5564   000300                     	ds	72
  5565   000348                     _flashBuffer:
  5566                           	callstack 0
  5567   000348                     	ds	64
  5568   000388                     _ticksWhenStopped:
  5569                           	callstack 0
  5570   000388                     	ds	64
  5571                           
  5572                           	psect	bssBANK4
  5573   000400                     __pbssBANK4:
  5574                           	callstack 0
  5575   000400                     _nvCache:
  5576                           	callstack 0
  5577   000400                     	ds	128
  5578   000480                     _normalQueueBuf:
  5579                           	callstack 0
  5580   000480                     	ds	64
  5581                           
  5582                           	psect	bssBANK5
  5583   000500                     __pbssBANK5:
  5584                           	callstack 0
  5585   000500                     _txBuffers:
  5586                           	callstack 0
  5587   000500                     	ds	72
  5588                           
  5589                           	psect	bssBIGRAM
  5590   000548                     __pbssBIGRAM:
  5591                           	callstack 0
  5592   000548                     _eventChains:
  5593                           	callstack 0
  5594   000548                     	ds	640
  5595   0007C8                     _rxBuffers:
  5596                           	callstack 0
  5597   0007C8                     	ds	288
  5598                           
  5599                           	psect	cstackBANK2
  5600   0002CC                     __pcstackBANK2:
  5601                           	callstack 0
  5602   0002CC                     ??_consumer2QProcessMessage:
  5603   0002CC                     ??_mnsProcessMessage:
  5604   0002CC                     ??_teachProcessMessage:
  5605   0002CC                     ??_producerProcessMessage:
  5606   0002CC                     ackEventProcessMessage@eventEN:
  5607                           	callstack 0
  5608   0002CC                     nvProcessMessage@valueOrError:
  5609                           	callstack 0
  5610                           
  5611                           ; 2 bytes @ 0x0
  5612   0002CC                     	ds	2
  5613   0002CE                     ackEventProcessMessage@eventIndex:
  5614                           	callstack 0
  5615                           
  5616                           ; 1 bytes @ 0x2
  5617   0002CE                     	ds	1
  5618   0002CF                     consumer2QProcessMessage@end:
  5619                           	callstack 0
  5620   0002CF                     ackEventProcessMessage@eventNN:
  5621                           	callstack 0
  5622                           
  5623                           ; 2 bytes @ 0x3
  5624   0002CF                     	ds	1
  5625   0002D0                     consumer2QProcessMessage@change:
  5626                           	callstack 0
  5627                           
  5628                           ; 1 bytes @ 0x4
  5629   0002D0                     	ds	1
  5630   0002D1                     consumer2QProcessMessage@opc:
  5631                           	callstack 0
  5632                           
  5633                           ; 1 bytes @ 0x5
  5634   0002D1                     	ds	1
  5635   0002D2                     consumer2QProcessMessage@enn:
  5636                           	callstack 0
  5637   0002D2                     producerProcessMessage@ev:
  5638                           	callstack 0
  5639                           
  5640                           ; 2 bytes @ 0x6
  5641   0002D2                     	ds	2
  5642   0002D4                     consumer2QProcessMessage@tableIndex:
  5643                           	callstack 0
  5644   0002D4                     producerProcessMessage@h:
  5645                           	callstack 0
  5646                           
  5647                           ; 1 bytes @ 0x8
  5648   0002D4                     	ds	1
  5649   0002D5                     consumer2QProcessMessage@nextAction:
  5650                           	callstack 0
  5651   0002D5                     producerProcessMessage@index:
  5652                           	callstack 0
  5653                           
  5654                           ; 1 bytes @ 0x9
  5655   0002D5                     	ds	1
  5656   0002D6                     consumer2QProcessMessage@firstAction:
  5657                           	callstack 0
  5658                           
  5659                           ; 1 bytes @ 0xA
  5660   0002D6                     	ds	1
  5661   0002D7                     consumer2QProcessMessage@nextSimultaneous:
  5662                           	callstack 0
  5663                           
  5664                           ; 1 bytes @ 0xB
  5665   0002D7                     	ds	1
  5666   0002D8                     consumer2QProcessMessage@io:
  5667                           	callstack 0
  5668                           
  5669                           ; 1 bytes @ 0xC
  5670   0002D8                     	ds	1
  5671   0002D9                     consumer2QProcessMessage@masked_action:
  5672                           	callstack 0
  5673                           
  5674                           ; 1 bytes @ 0xD
  5675   0002D9                     	ds	1
  5676   0002DA                     consumer2QProcessMessage@ca:
  5677                           	callstack 0
  5678                           
  5679                           ; 1 bytes @ 0xE
  5680   0002DA                     	ds	1
  5681   0002DB                     consumer2QProcessMessage@e:
  5682                           	callstack 0
  5683                           
  5684                           ; 1 bytes @ 0xF
  5685   0002DB                     	ds	1
  5686   0002DC                     consumer2QProcessMessage@action:
  5687                           	callstack 0
  5688                           
  5689                           ; 1 bytes @ 0x10
  5690   0002DC                     	ds	14
  5691   0002EA                     mnsProcessMessage@i:
  5692                           	callstack 0
  5693                           
  5694                           ; 1 bytes @ 0x1E
  5695   0002EA                     	ds	1
  5696   0002EB                     _mnsProcessMessage$3632:
  5697                           	callstack 0
  5698                           
  5699                           ; 1 bytes @ 0x1F
  5700   0002EB                     	ds	1
  5701   0002EC                     mnsProcessMessage@d:
  5702                           	callstack 0
  5703                           
  5704                           ; 2 bytes @ 0x20
  5705   0002EC                     	ds	2
  5706   0002EE                     mnsProcessMessage@newMode:
  5707                           	callstack 0
  5708                           
  5709                           ; 1 bytes @ 0x22
  5710   0002EE                     	ds	1
  5711   0002EF                     ??_poll:
  5712                           
  5713                           ; 1 bytes @ 0x23
  5714   0002EF                     	ds	4
  5715   0002F3                     poll@handled:
  5716                           	callstack 0
  5717                           
  5718                           ; 1 bytes @ 0x27
  5719   0002F3                     	ds	1
  5720   0002F4                     poll@i:
  5721                           	callstack 0
  5722                           
  5723                           ; 1 bytes @ 0x28
  5724   0002F4                     	ds	1
  5725   0002F5                     poll@m:
  5726                           	callstack 0
  5727                           
  5728                           ; 9 bytes @ 0x29
  5729   0002F5                     	ds	9
  5730                           
  5731                           	psect	cstackBANK1
  5732   0001BD                     __pcstackBANK1:
  5733                           	callstack 0
  5734   0001BD                     ??_writeNVM:
  5735   0001BD                     ??_rebuildHashtable:
  5736   0001BD                     APP_GetEventState@flags:
  5737                           	callstack 0
  5738   0001BD                     bounceDown@reversed:
  5739                           	callstack 0
  5740   0001BD                     sendMessage@len:
  5741                           	callstack 0
  5742   0001BD                     findEvent@nodeNumber:
  5743                           	callstack 0
  5744                           
  5745                           ; 2 bytes @ 0x0
  5746   0001BD                     	ds	1
  5747   0001BE                     APP_GetEventState@disable_off:
  5748                           	callstack 0
  5749   0001BE                     sendMessage@data1:
  5750                           	callstack 0
  5751   0001BE                     bounceDown@tmp:
  5752                           	callstack 0
  5753                           
  5754                           ; 2 bytes @ 0x1
  5755   0001BE                     	ds	1
  5756   0001BF                     ??_configIO:
  5757   0001BF                     ??_nvFactoryReset:
  5758   0001BF                     APP_GetEventState@h:
  5759                           	callstack 0
  5760   0001BF                     saveNV@value:
  5761                           	callstack 0
  5762   0001BF                     sendMessage@data2:
  5763                           	callstack 0
  5764   0001BF                     setNewCanId@newCanId:
  5765                           	callstack 0
  5766   0001BF                     findEvent@eventNumber:
  5767                           	callstack 0
  5768                           
  5769                           ; 2 bytes @ 0x2
  5770   0001BF                     	ds	1
  5771   0001C0                     ??_saveNV:
  5772   0001C0                     ??_processEnumeration:
  5773   0001C0                     APP_GetEventState@happeningIndex:
  5774                           	callstack 0
  5775   0001C0                     bounceDown@io:
  5776                           	callstack 0
  5777   0001C0                     sendMessage@data3:
  5778                           	callstack 0
  5779   0001C0                     rebuildHashtable@ev:
  5780                           	callstack 0
  5781                           
  5782                           ; 2 bytes @ 0x3
  5783   0001C0                     	ds	1
  5784   0001C1                     ??_findEvent:
  5785   0001C1                     nvFactoryReset@i:
  5786                           	callstack 0
  5787   0001C1                     sendMessage@data4:
  5788                           	callstack 0
  5789   0001C1                     _configIO$8092:
  5790                           	callstack 0
  5791                           
  5792                           ; 1 bytes @ 0x4
  5793   0001C1                     	ds	1
  5794   0001C2                     saveNV@index:
  5795                           	callstack 0
  5796   0001C2                     sendMessage@data5:
  5797                           	callstack 0
  5798   0001C2                     rebuildHashtable@hash:
  5799                           	callstack 0
  5800   0001C2                     _configIO$746:
  5801                           	callstack 0
  5802                           
  5803                           ; 2 bytes @ 0x5
  5804   0001C2                     	ds	1
  5805   0001C3                     defaultNVs@type:
  5806                           	callstack 0
  5807   0001C3                     sendMessage@data6:
  5808                           	callstack 0
  5809   0001C3                     rebuildHashtable@happening:
  5810                           	callstack 0
  5811   0001C3                     findEvent@nn:
  5812                           	callstack 0
  5813                           
  5814                           ; 2 bytes @ 0x6
  5815   0001C3                     	ds	1
  5816   0001C4                     ??_defaultNVs:
  5817   0001C4                     configIO@action:
  5818                           	callstack 0
  5819   0001C4                     sendMessage@data7:
  5820                           	callstack 0
  5821   0001C4                     processEnumeration@enumResult:
  5822                           	callstack 0
  5823   0001C4                     rebuildHashtable@chainIdx:
  5824                           	callstack 0
  5825                           
  5826                           ; 1 bytes @ 0x7
  5827   0001C4                     	ds	1
  5828   0001C5                     configIO@type:
  5829                           	callstack 0
  5830   0001C5                     sendMessage3@opc:
  5831                           	callstack 0
  5832   0001C5                     sendMessage4@data1:
  5833                           	callstack 0
  5834   0001C5                     sendMessage5@data1:
  5835                           	callstack 0
  5836   0001C5                     sendMessage6@data1:
  5837                           	callstack 0
  5838   0001C5                     sendMessage7@data1:
  5839                           	callstack 0
  5840   0001C5                     processEnumeration@newCanId:
  5841                           	callstack 0
  5842   0001C5                     rebuildHashtable@tableIndex:
  5843                           	callstack 0
  5844   0001C5                     findEvent@en:
  5845                           	callstack 0
  5846                           
  5847                           ; 2 bytes @ 0x8
  5848   0001C5                     	ds	1
  5849   0001C6                     ??_clearAllEvents:
  5850   0001C6                     ??_doNnevn:
  5851   0001C6                     ??_removeTableEntry:
  5852   0001C6                     configIO@i:
  5853                           	callstack 0
  5854   0001C6                     defaultNVs@io:
  5855                           	callstack 0
  5856   0001C6                     sendMessage4@data2:
  5857                           	callstack 0
  5858   0001C6                     sendMessage5@data2:
  5859                           	callstack 0
  5860   0001C6                     sendMessage6@data2:
  5861                           	callstack 0
  5862   0001C6                     sendMessage7@data2:
  5863                           	callstack 0
  5864   0001C6                     processEnumeration@i:
  5865                           	callstack 0
  5866   0001C6                     teachPowerUp@i:
  5867                           	callstack 0
  5868   0001C6                     doRqevn@count:
  5869                           	callstack 0
  5870                           
  5871                           ; 1 bytes @ 0x9
  5872   0001C6                     	ds	1
  5873   0001C7                     ??_powerUp:
  5874   0001C7                     defaultNVs@i:
  5875                           	callstack 0
  5876   0001C7                     sendMessage4@data3:
  5877                           	callstack 0
  5878   0001C7                     sendMessage5@data3:
  5879                           	callstack 0
  5880   0001C7                     sendMessage6@data3:
  5881                           	callstack 0
  5882   0001C7                     sendMessage7@data3:
  5883                           	callstack 0
  5884   0001C7                     doRqevn@i:
  5885                           	callstack 0
  5886   0001C7                     findEvent@hash:
  5887                           	callstack 0
  5888   0001C7                     canReceiveMessage@m:
  5889                           	callstack 0
  5890                           
  5891                           ; 2 bytes @ 0xA
  5892   0001C7                     	ds	1
  5893   0001C8                     sendMessage4@data4:
  5894                           	callstack 0
  5895   0001C8                     sendMessage5@data4:
  5896                           	callstack 0
  5897   0001C8                     sendMessage6@data4:
  5898                           	callstack 0
  5899   0001C8                     sendMessage7@data4:
  5900                           	callstack 0
  5901   0001C8                     findEvent@chainIdx:
  5902                           	callstack 0
  5903                           
  5904                           ; 1 bytes @ 0xB
  5905   0001C8                     	ds	1
  5906   0001C9                     sendMessage5@data5:
  5907                           	callstack 0
  5908   0001C9                     sendMessage6@data5:
  5909                           	callstack 0
  5910   0001C9                     sendMessage7@data5:
  5911                           	callstack 0
  5912   0001C9                     findEvent@tableIndex:
  5913                           	callstack 0
  5914   0001C9                     sendProducedEvent@opc:
  5915                           	callstack 0
  5916                           
  5917                           ; 1 bytes @ 0xC
  5918   0001C9                     	ds	1
  5919   0001CA                     ??_mnsPoll:
  5920   0001CA                     sendMessage6@data6:
  5921                           	callstack 0
  5922   0001CA                     sendMessage7@data6:
  5923                           	callstack 0
  5924   0001CA                     canReceiveMessage@messageAvailable:
  5925                           	callstack 0
  5926   0001CA                     clearAllEvents@tableIndex:
  5927                           	callstack 0
  5928   0001CA                     doNnevn@f:
  5929                           	callstack 0
  5930   0001CA                     doNenrd@index:
  5931                           	callstack 0
  5932   0001CA                     doReval@evNum:
  5933                           	callstack 0
  5934   0001CA                     removeTableEntry@f:
  5935                           	callstack 0
  5936   0001CA                     checkLen@m:
  5937                           	callstack 0
  5938   0001CA                     sendProducedEvent@producedEventEN:
  5939                           	callstack 0
  5940                           
  5941                           ; 2 bytes @ 0xD
  5942   0001CA                     	ds	1
  5943   0001CB                     ??_doReval:
  5944   0001CB                     powerUp@i:
  5945                           	callstack 0
  5946   0001CB                     sendMessage7@data7:
  5947                           	callstack 0
  5948   0001CB                     doNnevn@count:
  5949                           	callstack 0
  5950   0001CB                     removeTableEntry@tableIndex:
  5951                           	callstack 0
  5952   0001CB                     canReceiveMessage@mp:
  5953                           	callstack 0
  5954   0001CB                     doNenrd@nodeNumber:
  5955                           	callstack 0
  5956   0001CB                     doReqev@nodeNumber:
  5957                           	callstack 0
  5958                           
  5959                           ; 2 bytes @ 0xE
  5960   0001CB                     	ds	1
  5961   0001CC                     checkLen@needed:
  5962                           	callstack 0
  5963   0001CC                     doNnevn@i:
  5964                           	callstack 0
  5965   0001CC                     doReval@evIndex:
  5966                           	callstack 0
  5967   0001CC                     checkRemoveTableEntry@tableIndex:
  5968                           	callstack 0
  5969   0001CC                     removeEvent@nodeNumber:
  5970                           	callstack 0
  5971   0001CC                     sendProducedEvent@producedEventNN:
  5972                           	callstack 0
  5973                           
  5974                           ; 2 bytes @ 0xF
  5975   0001CC                     	ds	1
  5976   0001CD                     checkLen@service:
  5977                           	callstack 0
  5978   0001CD                     canReceiveMessage@no:
  5979                           	callstack 0
  5980   0001CD                     doReval@enNum:
  5981                           	callstack 0
  5982   0001CD                     checkRemoveTableEntry@e:
  5983                           	callstack 0
  5984   0001CD                     doNenrd@eventNumber:
  5985                           	callstack 0
  5986   0001CD                     doReqev@eventNumber:
  5987                           	callstack 0
  5988                           
  5989                           ; 2 bytes @ 0x10
  5990   0001CD                     	ds	1
  5991   0001CE                     writeEv@evNum:
  5992                           	callstack 0
  5993   0001CE                     sendProducedEvent@happening:
  5994                           	callstack 0
  5995   0001CE                     ackEventCheckLen@m:
  5996                           	callstack 0
  5997   0001CE                     canReceiveMessage@p:
  5998                           	callstack 0
  5999   0001CE                     teachCheckLen@m:
  6000                           	callstack 0
  6001   0001CE                     doReval@evVal:
  6002                           	callstack 0
  6003   0001CE                     removeEvent@eventNumber:
  6004                           	callstack 0
  6005                           
  6006                           ; 2 bytes @ 0x11
  6007   0001CE                     	ds	1
  6008   0001CF                     ??_inputScan:
  6009   0001CF                     ??_pollServos:
  6010   0001CF                     sendInvertedProducedEvent@state:
  6011                           	callstack 0
  6012   0001CF                     doNenrd@tableIndex:
  6013                           	callstack 0
  6014   0001CF                     doReqev@evNum:
  6015                           	callstack 0
  6016   0001CF                     writeEv@evVal:
  6017                           	callstack 0
  6018                           
  6019                           ; 1 bytes @ 0x12
  6020   0001CF                     	ds	1
  6021   0001D0                     ??_writeEv:
  6022   0001D0                     processOutputs@io:
  6023                           	callstack 0
  6024   0001D0                     sendInvertedProducedEvent@invert:
  6025                           	callstack 0
  6026   0001D0                     ackEventCheckLen@needed:
  6027                           	callstack 0
  6028   0001D0                     teachCheckLen@needed:
  6029                           	callstack 0
  6030   0001D0                     doReval@tableIndex:
  6031                           	callstack 0
  6032   0001D0                     removeEvent@tableIndex:
  6033                           	callstack 0
  6034   0001D0                     doReqev@evVal:
  6035                           	callstack 0
  6036                           
  6037                           ; 2 bytes @ 0x13
  6038   0001D0                     	ds	1
  6039   0001D1                     inputScan@change:
  6040                           	callstack 0
  6041   0001D1                     sendInvertedProducedEvent@can_send_on:
  6042                           	callstack 0
  6043   0001D1                     teachCheckLen@learn:
  6044                           	callstack 0
  6045   0001D1                     doEvuln@nodeNumber:
  6046                           	callstack 0
  6047                           
  6048                           ; 2 bytes @ 0x14
  6049   0001D1                     	ds	1
  6050   0001D2                     inputScan@input:
  6051                           	callstack 0
  6052   0001D2                     sendInvertedProducedEvent@can_send_off:
  6053                           	callstack 0
  6054   0001D2                     doReqev@tableIndex:
  6055                           	callstack 0
  6056                           
  6057                           ; 1 bytes @ 0x15
  6058   0001D2                     	ds	1
  6059   0001D3                     sendInvertedProducedEvent@happening:
  6060                           	callstack 0
  6061   0001D3                     doEvuln@eventNumber:
  6062                           	callstack 0
  6063                           
  6064                           ; 2 bytes @ 0x16
  6065   0001D3                     	ds	1
  6066   0001D4                     writeEv@startIndex:
  6067                           	callstack 0
  6068   0001D4                     _sendInvertedProducedEvent$1404:
  6069                           	callstack 0
  6070                           
  6071                           ; 2 bytes @ 0x17
  6072   0001D4                     	ds	1
  6073   0001D5                     doEvuln@result:
  6074                           	callstack 0
  6075   0001D5                     writeEv@nextF:
  6076                           	callstack 0
  6077                           
  6078                           ; 1 bytes @ 0x18
  6079   0001D5                     	ds	1
  6080   0001D6                     sendInvertedProducedEvent@state_to_send:
  6081                           	callstack 0
  6082   0001D6                     writeEv@e:
  6083                           	callstack 0
  6084                           
  6085                           ; 1 bytes @ 0x19
  6086   0001D6                     	ds	1
  6087   0001D7                     startDigitalOutput@state:
  6088                           	callstack 0
  6089   0001D7                     pollServos@target:
  6090                           	callstack 0
  6091   0001D7                     mnsTRallDiagnosticsCallback@serviceIndex:
  6092                           	callstack 0
  6093   0001D7                     reqevCallback@serviceIndex:
  6094                           	callstack 0
  6095   0001D7                     writeEv@f:
  6096                           	callstack 0
  6097                           
  6098                           ; 1 bytes @ 0x1A
  6099   0001D7                     	ds	1
  6100   0001D8                     ??_startDigitalOutput:
  6101   0001D8                     sodTRCallback@step:
  6102                           	callstack 0
  6103   0001D8                     pollServos@beforeMidway:
  6104                           	callstack 0
  6105   0001D8                     mnsTRserviceDiscoveryCallback@step:
  6106                           	callstack 0
  6107   0001D8                     mnsTRallDiagnosticsCallback@step:
  6108                           	callstack 0
  6109   0001D8                     mnsTRrqnpnCallback@step:
  6110                           	callstack 0
  6111   0001D8                     nvTRnvrdCallback@step:
  6112                           	callstack 0
  6113   0001D8                     nerdCallback@step:
  6114                           	callstack 0
  6115   0001D8                     reqevCallback@step:
  6116                           	callstack 0
  6117   0001D8                     writeEv@tableIndex:
  6118                           	callstack 0
  6119                           
  6120                           ; 1 bytes @ 0x1B
  6121   0001D8                     	ds	1
  6122   0001D9                     ??_mnsTRallDiagnosticsCallback:
  6123   0001D9                     ??_mnsTRserviceDiscoveryCallback:
  6124   0001D9                     ??_reqevCallback:
  6125   0001D9                     sodTRCallback@disable_SOD_response:
  6126                           	callstack 0
  6127   0001D9                     pollServos@midway:
  6128                           	callstack 0
  6129   0001D9                     writeEv@nextIdx:
  6130                           	callstack 0
  6131   0001D9                     nvTRnvrdCallback@valueOrError:
  6132                           	callstack 0
  6133   0001D9                     nerdCallback@nodeNumber:
  6134                           	callstack 0
  6135                           
  6136                           ; 2 bytes @ 0x1C
  6137   0001D9                     	ds	1
  6138   0001DA                     deleteActionRange@number:
  6139                           	callstack 0
  6140   0001DA                     sodTRCallback@send_on_ok:
  6141                           	callstack 0
  6142   0001DA                     pollServos@io:
  6143                           	callstack 0
  6144   0001DA                     deleteHappeningRange@number:
  6145                           	callstack 0
  6146   0001DA                     _startDigitalOutput$808:
  6147                           	callstack 0
  6148   0001DA                     addEvent@nodeNumber:
  6149                           	callstack 0
  6150                           
  6151                           ; 2 bytes @ 0x1D
  6152   0001DA                     	ds	1
  6153   0001DB                     ??_deleteHappeningRange:
  6154   0001DB                     ??_deleteActionRange:
  6155   0001DB                     sodTRCallback@send_off_ok:
  6156                           	callstack 0
  6157   0001DB                     startServos@type:
  6158                           	callstack 0
  6159   0001DB                     nerdCallback@eventNumber:
  6160                           	callstack 0
  6161                           
  6162                           ; 2 bytes @ 0x1E
  6163   0001DB                     	ds	1
  6164   0001DC                     startDigitalOutput@pinState:
  6165                           	callstack 0
  6166   0001DC                     _sodTRCallback$1424:
  6167                           	callstack 0
  6168   0001DC                     addEvent@eventNumber:
  6169                           	callstack 0
  6170                           
  6171                           ; 2 bytes @ 0x1F
  6172   0001DC                     	ds	1
  6173   0001DD                     startDigitalOutput@actionState:
  6174                           	callstack 0
  6175   0001DD                     _sodTRCallback$1425:
  6176                           	callstack 0
  6177   0001DD                     mnsTRallDiagnosticsCallback@d:
  6178                           	callstack 0
  6179                           
  6180                           ; 2 bytes @ 0x20
  6181   0001DD                     	ds	1
  6182   0001DE                     startDigitalOutput@io:
  6183                           	callstack 0
  6184   0001DE                     sodTRCallback@happeningIndex:
  6185                           	callstack 0
  6186   0001DE                     reqevCallback@nEv:
  6187                           	callstack 0
  6188   0001DE                     addEvent@evNum:
  6189                           	callstack 0
  6190                           
  6191                           ; 1 bytes @ 0x21
  6192   0001DE                     	ds	1
  6193   0001DF                     sodTRCallback@disable_off:
  6194                           	callstack 0
  6195   0001DF                     startOutput@act:
  6196                           	callstack 0
  6197   0001DF                     addEvent@evVal:
  6198                           	callstack 0
  6199   0001DF                     reqevCallback@ev:
  6200                           	callstack 0
  6201                           
  6202                           ; 2 bytes @ 0x22
  6203   0001DF                     	ds	1
  6204   0001E0                     deleteActionRange@updated:
  6205                           	callstack 0
  6206   0001E0                     sodTRCallback@value:
  6207                           	callstack 0
  6208   0001E0                     startOutput@type:
  6209                           	callstack 0
  6210   0001E0                     addEvent@forceOwnNN:
  6211                           	callstack 0
  6212   0001E0                     deleteHappeningRange@happening:
  6213                           	callstack 0
  6214                           
  6215                           ; 1 bytes @ 0x23
  6216   0001E0                     	ds	1
  6217   0001E1                     ??_addEvent:
  6218   0001E1                     deleteActionRange@action:
  6219                           	callstack 0
  6220   0001E1                     sodTRCallback@event_inverted:
  6221                           	callstack 0
  6222   0001E1                     startOutput@io:
  6223                           	callstack 0
  6224   0001E1                     deleteHappeningRange@h:
  6225                           	callstack 0
  6226   0001E1                     reqevCallback@nodeNumber:
  6227                           	callstack 0
  6228                           
  6229                           ; 2 bytes @ 0x24
  6230   0001E1                     	ds	1
  6231   0001E2                     deleteActionRange@e:
  6232                           	callstack 0
  6233   0001E2                     processActions@simultaneous:
  6234                           	callstack 0
  6235   0001E2                     sodTRCallback@flags:
  6236                           	callstack 0
  6237   0001E2                     deleteHappeningRange@tableIndex:
  6238                           	callstack 0
  6239                           
  6240                           ; 1 bytes @ 0x25
  6241   0001E2                     	ds	1
  6242   0001E3                     deleteActionRange@tableIndex:
  6243                           	callstack 0
  6244   0001E3                     processActions@peekItem:
  6245                           	callstack 0
  6246   0001E3                     sodTRCallback@io:
  6247                           	callstack 0
  6248   0001E3                     reqevCallback@eventNumber:
  6249                           	callstack 0
  6250                           
  6251                           ; 2 bytes @ 0x26
  6252   0001E3                     	ds	1
  6253   0001E4                     clearEvents@io:
  6254                           	callstack 0
  6255   0001E4                     processActions@nextType:
  6256                           	callstack 0
  6257                           
  6258                           ; 1 bytes @ 0x27
  6259   0001E4                     	ds	1
  6260   0001E5                     processActions@nextIo:
  6261                           	callstack 0
  6262   0001E5                     reqevCallback@tableIndex:
  6263                           	callstack 0
  6264   0001E5                     addEvent@error:
  6265                           	callstack 0
  6266                           
  6267                           ; 1 bytes @ 0x28
  6268   0001E5                     	ds	1
  6269   0001E6                     ??_pollTimedResponse:
  6270   0001E6                     processActions@type:
  6271                           	callstack 0
  6272   0001E6                     addEvent@f:
  6273                           	callstack 0
  6274                           
  6275                           ; 1 bytes @ 0x29
  6276   0001E6                     	ds	1
  6277   0001E7                     processActions@ioAction:
  6278                           	callstack 0
  6279   0001E7                     addEvent@e:
  6280                           	callstack 0
  6281                           
  6282                           ; 1 bytes @ 0x2A
  6283   0001E7                     	ds	1
  6284   0001E8                     processActions@nextAction:
  6285                           	callstack 0
  6286   0001E8                     pollTimedResponse@result:
  6287                           	callstack 0
  6288   0001E8                     addEvent@tableIndex:
  6289                           	callstack 0
  6290                           
  6291                           ; 1 bytes @ 0x2B
  6292   0001E8                     	ds	1
  6293   0001E9                     defaultEvents@type:
  6294                           	callstack 0
  6295   0001E9                     processActions@io:
  6296                           	callstack 0
  6297   0001E9                     APP_addEvent@nodeNumber:
  6298                           	callstack 0
  6299                           
  6300                           ; 2 bytes @ 0x2C
  6301   0001E9                     	ds	1
  6302   0001EA                     processActions@action:
  6303                           	callstack 0
  6304   0001EA                     defaultEvents@en:
  6305                           	callstack 0
  6306                           
  6307                           ; 2 bytes @ 0x2D
  6308   0001EA                     	ds	1
  6309   0001EB                     ??_loop:
  6310   0001EB                     APP_addEvent@eventNumber:
  6311                           	callstack 0
  6312                           
  6313                           ; 2 bytes @ 0x2E
  6314   0001EB                     	ds	1
  6315   0001EC                     defaultEvents@io:
  6316                           	callstack 0
  6317                           
  6318                           ; 1 bytes @ 0x2F
  6319   0001EC                     	ds	1
  6320   0001ED                     setType@type:
  6321                           	callstack 0
  6322   0001ED                     APP_addEvent@evNum:
  6323                           	callstack 0
  6324                           
  6325                           ; 1 bytes @ 0x30
  6326   0001ED                     	ds	1
  6327   0001EE                     setType@index:
  6328                           	callstack 0
  6329   0001EE                     APP_addEvent@evVal:
  6330                           	callstack 0
  6331                           
  6332                           ; 1 bytes @ 0x31
  6333   0001EE                     	ds	1
  6334   0001EF                     setType@io:
  6335                           	callstack 0
  6336   0001EF                     APP_addEvent@forceOwnNN:
  6337                           	callstack 0
  6338                           
  6339                           ; 1 bytes @ 0x32
  6340   0001EF                     	ds	1
  6341   0001F0                     APP_factoryReset@io:
  6342                           	callstack 0
  6343   0001F0                     APP_addEvent@tableIndex:
  6344                           	callstack 0
  6345   0001F0                     APP_nvValueChanged@value:
  6346                           	callstack 0
  6347                           
  6348                           ; 1 bytes @ 0x33
  6349   0001F0                     	ds	1
  6350   0001F1                     ??_factoryReset:
  6351   0001F1                     APP_nvValueChanged@oldValue:
  6352                           	callstack 0
  6353   0001F1                     doEvlrn@nodeNumber:
  6354                           	callstack 0
  6355                           
  6356                           ; 2 bytes @ 0x34
  6357   0001F1                     	ds	1
  6358   0001F2                     ??_APP_nvValueChanged:
  6359                           
  6360                           ; 1 bytes @ 0x35
  6361   0001F2                     	ds	1
  6362   0001F3                     doEvlrn@eventNumber:
  6363                           	callstack 0
  6364                           
  6365                           ; 2 bytes @ 0x36
  6366   0001F3                     	ds	2
  6367   0001F5                     APP_nvValueChanged@index:
  6368                           	callstack 0
  6369   0001F5                     factoryReset@i:
  6370                           	callstack 0
  6371   0001F5                     doEvlrn@evNum:
  6372                           	callstack 0
  6373                           
  6374                           ; 1 bytes @ 0x38
  6375   0001F5                     	ds	1
  6376   0001F6                     APP_nvValueChanged@io:
  6377                           	callstack 0
  6378   0001F6                     checkPowerOnPb@i:
  6379                           	callstack 0
  6380   0001F6                     doEvlrn@evVal:
  6381                           	callstack 0
  6382                           
  6383                           ; 1 bytes @ 0x39
  6384   0001F6                     	ds	1
  6385   0001F7                     setNV@value:
  6386                           	callstack 0
  6387   0001F7                     doEvlrn@error:
  6388                           	callstack 0
  6389                           
  6390                           ; 1 bytes @ 0x3A
  6391   0001F7                     	ds	1
  6392   0001F8                     ??_setNV:
  6393                           
  6394                           ; 1 bytes @ 0x3B
  6395   0001F8                     	ds	2
  6396   0001FA                     setNV@oldValue:
  6397                           	callstack 0
  6398                           
  6399                           ; 1 bytes @ 0x3D
  6400   0001FA                     	ds	1
  6401   0001FB                     setNV@index:
  6402                           	callstack 0
  6403                           
  6404                           ; 1 bytes @ 0x3E
  6405   0001FB                     	ds	1
  6406   0001FC                     consumer2QProcessMessage@m:
  6407                           	callstack 0
  6408   0001FC                     bootProcessMessage@m:
  6409                           	callstack 0
  6410   0001FC                     ackEventProcessMessage@m:
  6411                           	callstack 0
  6412   0001FC                     mnsProcessMessage@m:
  6413                           	callstack 0
  6414   0001FC                     nvProcessMessage@m:
  6415                           	callstack 0
  6416   0001FC                     canProcessMessage@m:
  6417                           	callstack 0
  6418   0001FC                     teachProcessMessage@m:
  6419                           	callstack 0
  6420   0001FC                     producerProcessMessage@m:
  6421                           	callstack 0
  6422                           
  6423                           ; 2 bytes @ 0x3F
  6424   0001FC                     	ds	2
  6425   0001FE                     ??_bootProcessMessage:
  6426   0001FE                     ??_ackEventProcessMessage:
  6427   0001FE                     ??_nvProcessMessage:
  6428   0001FE                     ??_canProcessMessage:
  6429                           
  6430                           ; 1 bytes @ 0x41
  6431   0001FE                     	ds	2
  6432                           
  6433                           	psect	cstackBANK0
  6434   000060                     __pcstackBANK0:
  6435                           	callstack 0
  6436   000060                     ?i1_getNextWriteMessage:
  6437                           	callstack 0
  6438   000060                     ?i1_pop:
  6439                           	callstack 0
  6440   000060                     ?i1_getBufferPointer:
  6441                           	callstack 0
  6442   000060                     ?i1_tickGet:
  6443                           	callstack 0
  6444   000060                     i1_isEvent$4896:
  6445                           	callstack 0
  6446   000060                     i1getNextWriteMessage@q:
  6447                           	callstack 0
  6448   000060                     i1pop@q:
  6449                           	callstack 0
  6450                           
  6451                           ; 1 bytes @ 0x0
  6452   000060                     	ds	1
  6453   000061                     i1isEvent@opc:
  6454                           	callstack 0
  6455                           
  6456                           ; 1 bytes @ 0x1
  6457   000061                     	ds	1
  6458   000062                     ??i1_getNextWriteMessage:
  6459   000062                     ??i1_pop:
  6460   000062                     i1getBufferPointer@b:
  6461                           	callstack 0
  6462                           
  6463                           ; 1 bytes @ 0x2
  6464   000062                     	ds	2
  6465   000064                     i1tickGet@IntFlag2:
  6466                           	callstack 0
  6467                           
  6468                           ; 1 bytes @ 0x4
  6469   000064                     	ds	1
  6470   000065                     i1tickGet@IntFlag1:
  6471                           	callstack 0
  6472                           
  6473                           ; 1 bytes @ 0x5
  6474   000065                     	ds	1
  6475   000066                     i1tickGet@currentTime:
  6476                           	callstack 0
  6477                           
  6478                           ; 4 bytes @ 0x6
  6479   000066                     	ds	1
  6480   000067                     i1pop@ret:
  6481                           	callstack 0
  6482                           
  6483                           ; 2 bytes @ 0x7
  6484   000067                     	ds	4
  6485   00006B                     i1getNextWriteMessage@wr:
  6486                           	callstack 0
  6487                           
  6488                           ; 1 bytes @ 0xB
  6489   00006B                     	ds	1
  6490   00006C                     ??_checkTxFifo:
  6491   00006C                     canFillRxFifo@m:
  6492                           	callstack 0
  6493                           
  6494                           ; 2 bytes @ 0xC
  6495   00006C                     	ds	2
  6496   00006E                     canFillRxFifo@ptr:
  6497                           	callstack 0
  6498                           
  6499                           ; 2 bytes @ 0xE
  6500   00006E                     	ds	3
  6501   000071                     checkTxFifo@m:
  6502                           	callstack 0
  6503                           
  6504                           ; 2 bytes @ 0x11
  6505   000071                     	ds	2
  6506   000073                     checkTxFifo@mp:
  6507                           	callstack 0
  6508                           
  6509                           ; 2 bytes @ 0x13
  6510   000073                     	ds	2
  6511   000075                     ??_checkCANTimeout:
  6512                           
  6513                           ; 1 bytes @ 0x15
  6514   000075                     	ds	4
  6515   000079                     ??_lowIsr:
  6516                           
  6517                           ; 1 bytes @ 0x19
  6518   000079                     	ds	4
  6519   00007D                     lowIsr@i:
  6520                           	callstack 0
  6521                           
  6522                           ; 1 bytes @ 0x1D
  6523   00007D                     	ds	1
  6524   00007E                     ??_isrLow:
  6525                           
  6526                           ; 1 bytes @ 0x1E
  6527   00007E                     	ds	15
  6528   00008D                     ??_findServiceIndex:
  6529   00008D                     ??_have:
  6530   00008D                     ??_showStatus:
  6531   00008D                     ?_getNV:
  6532                           	callstack 0
  6533   00008D                     ?_findService:
  6534                           	callstack 0
  6535   00008D                     ?_getNextWriteMessage:
  6536                           	callstack 0
  6537   00008D                     ?_pop:
  6538                           	callstack 0
  6539   00008D                     ?_getBufferPointer:
  6540                           	callstack 0
  6541   00008D                     ?___awmod:
  6542                           	callstack 0
  6543   00008D                     ?_tickGet:
  6544                           	callstack 0
  6545   00008D                     initOutputs@io:
  6546                           	callstack 0
  6547   00008D                     consumer2QEsdData@index:
  6548                           	callstack 0
  6549   00008D                     pushTwoAction@a:
  6550                           	callstack 0
  6551   00008D                     peekTwoActionQueue@qty:
  6552                           	callstack 0
  6553   00008D                     deleteTwoActionQueue@qty:
  6554                           	callstack 0
  6555   00008D                     needsStarting@act:
  6556                           	callstack 0
  6557   00008D                     completed@action:
  6558                           	callstack 0
  6559   00008D                     finaliseOutput@type:
  6560                           	callstack 0
  6561   00008D                     startBounceOutput@action:
  6562                           	callstack 0
  6563   00008D                     initBounce@io:
  6564                           	callstack 0
  6565   00008D                     bootEsdData@id:
  6566                           	callstack 0
  6567   00008D                     ackPowerUp@i:
  6568                           	callstack 0
  6569   00008D                     nvGetESDdata@id:
  6570                           	callstack 0
  6571   00008D                     initTicker@priority:
  6572                           	callstack 0
  6573   00008D                     setTimedResponseDelay@delay:
  6574                           	callstack 0
  6575   00008D                     _isEvent$4896:
  6576                           	callstack 0
  6577   00008D                     push@q:
  6578                           	callstack 0
  6579   00008D                     getNextWriteMessage@q:
  6580                           	callstack 0
  6581   00008D                     pop@q:
  6582                           	callstack 0
  6583   00008D                     quantity@q:
  6584                           	callstack 0
  6585   00008D                     eraseFlashBlock@interruptEnabled:
  6586                           	callstack 0
  6587   00008D                     loadFlashBlock@i:
  6588                           	callstack 0
  6589   00008D                     canEsdData@id:
  6590                           	callstack 0
  6591   00008D                     teachGetESDdata@id:
  6592                           	callstack 0
  6593   00008D                     evtIdxToTableIndex@evtIdx:
  6594                           	callstack 0
  6595   00008D                     tableIndexToEvtIdx@tableIndex:
  6596                           	callstack 0
  6597   00008D                     producerPowerUp@i:
  6598                           	callstack 0
  6599   00008D                     producerEsdData@index:
  6600                           	callstack 0
  6601   00008D                     APP_preProcessMessage@m:
  6602                           	callstack 0
  6603   00008D                     APP_postProcessMessage@m:
  6604                           	callstack 0
  6605   00008D                     EEPROM_Read@index:
  6606                           	callstack 0
  6607   00008D                     FLASH_Read@address:
  6608                           	callstack 0
  6609   00008D                     ___awmod@dividend:
  6610                           	callstack 0
  6611   00008D                     memcpy@d1:
  6612                           	callstack 0
  6613                           
  6614                           ; 2 bytes @ 0x2D
  6615   00008D                     	ds	1
  6616   00008E                     ??_quantity:
  6617   00008E                     peekTwoActionQueue@index:
  6618                           	callstack 0
  6619   00008E                     deleteTwoActionQueue@index:
  6620                           	callstack 0
  6621   00008E                     needsStarting@type:
  6622                           	callstack 0
  6623   00008E                     completed@type:
  6624                           	callstack 0
  6625   00008E                     startBounceOutput@io:
  6626                           	callstack 0
  6627   00008E                     initTicker@divider:
  6628                           	callstack 0
  6629   00008E                     isEvent@opc:
  6630                           	callstack 0
  6631   00008E                     flushFlashBlock@interruptEnabled:
  6632                           	callstack 0
  6633   00008E                     push@m:
  6634                           	callstack 0
  6635                           
  6636                           ; 2 bytes @ 0x2E
  6637   00008E                     	ds	1
  6638   00008F                     ??_getNV:
  6639   00008F                     ??_findService:
  6640   00008F                     ??_getNextWriteMessage:
  6641   00008F                     ??_pop:
  6642   00008F                     ??_FLASH_Read:
  6643   00008F                     showStatus@s:
  6644                           	callstack 0
  6645   00008F                     initTicker@i:
  6646                           	callstack 0
  6647   00008F                     findServiceIndex@serviceType:
  6648                           	callstack 0
  6649   00008F                     have@id:
  6650                           	callstack 0
  6651   00008F                     flushFlashBlock@i:
  6652                           	callstack 0
  6653   00008F                     getBufferPointer@b:
  6654                           	callstack 0
  6655   00008F                     EEPROM_Write@index:
  6656                           	callstack 0
  6657   00008F                     ___awmod@divisor:
  6658                           	callstack 0
  6659   00008F                     memcpy@s1:
  6660                           	callstack 0
  6661                           
  6662                           ; 2 bytes @ 0x2F
  6663   00008F                     	ds	1
  6664   000090                     ??_push:
  6665   000090                     getNV@index:
  6666                           	callstack 0
  6667   000090                     findServiceIndex@i:
  6668                           	callstack 0
  6669   000090                     have@i:
  6670                           	callstack 0
  6671   000090                     FLASH_Write@index:
  6672                           	callstack 0
  6673                           
  6674                           ; 2 bytes @ 0x30
  6675   000090                     	ds	1
  6676   000091                     ??_readInput:
  6677   000091                     ?_readNVM:
  6678                           	callstack 0
  6679   000091                     ?___wmul:
  6680                           	callstack 0
  6681   000091                     ?___lmul:
  6682                           	callstack 0
  6683   000091                     setOutputPin@state:
  6684                           	callstack 0
  6685   000091                     needsStarting@io:
  6686                           	callstack 0
  6687   000091                     _completed$1545:
  6688                           	callstack 0
  6689   000091                     startServoOutput@action:
  6690                           	callstack 0
  6691   000091                     startMultiOutput@action:
  6692                           	callstack 0
  6693   000091                     setServoState@action:
  6694                           	callstack 0
  6695   000091                     setBounceState@action:
  6696                           	callstack 0
  6697   000091                     setMultiState@action:
  6698                           	callstack 0
  6699   000091                     getParameterFlags@flags:
  6700                           	callstack 0
  6701   000091                     tickGet@IntFlag2:
  6702                           	callstack 0
  6703   000091                     startTimedResponse@serviceIndex:
  6704                           	callstack 0
  6705   000091                     findService@id:
  6706                           	callstack 0
  6707   000091                     EEPROM_Write@value:
  6708                           	callstack 0
  6709   000091                     ___awmod@counter:
  6710                           	callstack 0
  6711   000091                     ___wmul@multiplier:
  6712                           	callstack 0
  6713   000091                     memcpy@n:
  6714                           	callstack 0
  6715   000091                     readNVM@index:
  6716                           	callstack 0
  6717   000091                     ___lmul@multiplier:
  6718                           	callstack 0
  6719                           
  6720                           ; 4 bytes @ 0x31
  6721   000091                     	ds	1
  6722   000092                     ??_setOutputPin:
  6723   000092                     ??_startServoOutput:
  6724   000092                     ??_startMultiOutput:
  6725   000092                     completed@io:
  6726                           	callstack 0
  6727   000092                     setServoState@io:
  6728                           	callstack 0
  6729   000092                     setBounceState@io:
  6730                           	callstack 0
  6731   000092                     setMultiState@io:
  6732                           	callstack 0
  6733   000092                     getParameter@idx:
  6734                           	callstack 0
  6735   000092                     tickGet@IntFlag1:
  6736                           	callstack 0
  6737   000092                     findService@i:
  6738                           	callstack 0
  6739   000092                     EEPROM_Write@interruptEnabled:
  6740                           	callstack 0
  6741   000092                     FLASH_Write@value:
  6742                           	callstack 0
  6743   000092                     ___awmod@sign:
  6744                           	callstack 0
  6745   000092                     startTimedResponse@callback:
  6746                           	callstack 0
  6747   000092                     getNumRxBuffersInUse@ptr:
  6748                           	callstack 0
  6749                           
  6750                           ; 2 bytes @ 0x32
  6751   000092                     	ds	1
  6752   000093                     ??_FLASH_Write:
  6753   000093                     readInput@io:
  6754                           	callstack 0
  6755   000093                     setOutputState@act:
  6756                           	callstack 0
  6757   000093                     startServoOutput@io:
  6758                           	callstack 0
  6759   000093                     startMultiOutput@io:
  6760                           	callstack 0
  6761   000093                     memcpy@tmp:
  6762                           	callstack 0
  6763   000093                     ___wmul@multiplicand:
  6764                           	callstack 0
  6765   000093                     tickGet@currentTime:
  6766                           	callstack 0
  6767                           
  6768                           ; 4 bytes @ 0x33
  6769   000093                     	ds	1
  6770   000094                     ??_readNVM:
  6771   000094                     setOutputPin@io:
  6772                           	callstack 0
  6773   000094                     setOutputState@type:
  6774                           	callstack 0
  6775   000094                     startTimedResponse@type:
  6776                           	callstack 0
  6777   000094                     getNumRxBuffersInUse@no:
  6778                           	callstack 0
  6779   000094                     pop@ret:
  6780                           	callstack 0
  6781   000094                     memcpy@d:
  6782                           	callstack 0
  6783                           
  6784                           ; 2 bytes @ 0x34
  6785   000094                     	ds	1
  6786   000095                     ??_setupTimer1:
  6787   000095                     ??_setupTimer3:
  6788   000095                     setOutputState@io:
  6789                           	callstack 0
  6790   000095                     getNumRxBuffersInUse@i:
  6791                           	callstack 0
  6792   000095                     ___wmul@product:
  6793                           	callstack 0
  6794   000095                     ___lmul@multiplicand:
  6795                           	callstack 0
  6796                           
  6797                           ; 4 bytes @ 0x35
  6798   000095                     	ds	1
  6799   000096                     ?_consumer2QGetDiagnostic:
  6800                           	callstack 0
  6801   000096                     ?_ackGetDiagnostic:
  6802                           	callstack 0
  6803   000096                     ?_mnsGetDiagnostic:
  6804                           	callstack 0
  6805   000096                     ?_nvGetDiagnostic:
  6806                           	callstack 0
  6807   000096                     ?_canGetDiagnostic:
  6808                           	callstack 0
  6809   000096                     ?_teachGetDiagnostic:
  6810                           	callstack 0
  6811   000096                     ?_producerGetDiagnostic:
  6812                           	callstack 0
  6813   000096                     readNVM@type:
  6814                           	callstack 0
  6815   000096                     memcpy@s:
  6816                           	callstack 0
  6817                           
  6818                           ; 2 bytes @ 0x36
  6819   000096                     	ds	1
  6820   000097                     ??_initInputScan:
  6821   000097                     ??_validStart:
  6822   000097                     ??_loadNvCache:
  6823   000097                     ??_canPowerUp:
  6824   000097                     ?_getNN:
  6825                           	callstack 0
  6826   000097                     ?_getEN:
  6827                           	callstack 0
  6828   000097                     ?___awdiv:
  6829                           	callstack 0
  6830   000097                     ?___lldiv:
  6831                           	callstack 0
  6832   000097                     setDigitalOutput@state:
  6833                           	callstack 0
  6834   000097                     bootPowerUp@b:
  6835                           	callstack 0
  6836   000097                     mnsPowerUp@i:
  6837                           	callstack 0
  6838   000097                     handleSelfEnumeration@p:
  6839                           	callstack 0
  6840   000097                     ___awdiv@dividend:
  6841                           	callstack 0
  6842   000097                     ___lldiv@dividend:
  6843                           	callstack 0
  6844                           
  6845                           ; 4 bytes @ 0x37
  6846   000097                     	ds	1
  6847   000098                     ??_canGetDiagnostic:
  6848   000098                     setDigitalOutput@pinState:
  6849                           	callstack 0
  6850   000098                     consumer2QGetDiagnostic@index:
  6851                           	callstack 0
  6852   000098                     bootPowerUp@found:
  6853                           	callstack 0
  6854   000098                     ackGetDiagnostic@index:
  6855                           	callstack 0
  6856   000098                     mnsGetDiagnostic@index:
  6857                           	callstack 0
  6858   000098                     nvGetDiagnostic@index:
  6859                           	callstack 0
  6860   000098                     getNextWriteMessage@wr:
  6861                           	callstack 0
  6862   000098                     teachGetDiagnostic@index:
  6863                           	callstack 0
  6864   000098                     producerGetDiagnostic@index:
  6865                           	callstack 0
  6866   000098                     _setupTimer1$1932:
  6867                           	callstack 0
  6868   000098                     _setupTimer3$1936:
  6869                           	callstack 0
  6870   000098                     mnsPowerUp@temp:
  6871                           	callstack 0
  6872   000098                     canPowerUp@temp:
  6873                           	callstack 0
  6874                           
  6875                           ; 2 bytes @ 0x38
  6876   000098                     	ds	1
  6877   000099                     ??_handleSelfEnumeration:
  6878   000099                     ??_getNN:
  6879   000099                     ??_getEN:
  6880   000099                     setDigitalOutput@io:
  6881                           	callstack 0
  6882   000099                     initInputScan@input:
  6883                           	callstack 0
  6884   000099                     bootPowerUp@i:
  6885                           	callstack 0
  6886   000099                     canGetDiagnostic@index:
  6887                           	callstack 0
  6888   000099                     loadNvCache@temp:
  6889                           	callstack 0
  6890   000099                     canSendMessage@mp:
  6891                           	callstack 0
  6892   000099                     ___awdiv@divisor:
  6893                           	callstack 0
  6894   000099                     ___lmul@product:
  6895                           	callstack 0
  6896                           
  6897                           ; 4 bytes @ 0x39
  6898   000099                     	ds	1
  6899   00009A                     setupTimer1@ticks:
  6900                           	callstack 0
  6901   00009A                     setupTimer3@ticks:
  6902                           	callstack 0
  6903   00009A                     bootPowerUp@a:
  6904                           	callstack 0
  6905                           
  6906                           ; 3 bytes @ 0x3A
  6907   00009A                     	ds	1
  6908   00009B                     ??_canSendMessage:
  6909   00009B                     loadNvCache@i:
  6910                           	callstack 0
  6911   00009B                     validStart@tableIndex:
  6912                           	callstack 0
  6913   00009B                     ___awdiv@counter:
  6914                           	callstack 0
  6915   00009B                     ___lldiv@divisor:
  6916                           	callstack 0
  6917                           
  6918                           ; 4 bytes @ 0x3B
  6919   00009B                     	ds	1
  6920   00009C                     setupTimer1@io:
  6921                           	callstack 0
  6922   00009C                     setupTimer3@io:
  6923                           	callstack 0
  6924   00009C                     nvPowerUp@i:
  6925                           	callstack 0
  6926   00009C                     validStart@f:
  6927                           	callstack 0
  6928   00009C                     ___awdiv@sign:
  6929                           	callstack 0
  6930                           
  6931                           ; 1 bytes @ 0x3C
  6932   00009C                     	ds	1
  6933   00009D                     ??_getEVs:
  6934   00009D                     ??_numEv:
  6935   00009D                     ?_getEv:
  6936                           	callstack 0
  6937   00009D                     handleSelfEnumeration@incomingCanId:
  6938                           	callstack 0
  6939   00009D                     getEv@evNum:
  6940                           	callstack 0
  6941   00009D                     doWait@duration:
  6942                           	callstack 0
  6943   00009D                     getNN@hi:
  6944                           	callstack 0
  6945   00009D                     getEN@hi:
  6946                           	callstack 0
  6947   00009D                     ___awdiv@quotient:
  6948                           	callstack 0
  6949                           
  6950                           ; 2 bytes @ 0x3D
  6951   00009D                     	ds	2
  6952   00009F                     ??_getEv:
  6953   00009F                     ??_doWait:
  6954   00009F                     ??_bounceUp:
  6955   00009F                     ??_bounceDown:
  6956   00009F                     ??_APP_GetEventState:
  6957   00009F                     ??_APP_nvDefault:
  6958   00009F                     ??_leds_poll:
  6959   00009F                     APP_nvValidate@value:
  6960                           	callstack 0
  6961   00009F                     setServoPosition@pos:
  6962                           	callstack 0
  6963   00009F                     getNN@lo:
  6964                           	callstack 0
  6965   00009F                     getEN@lo:
  6966                           	callstack 0
  6967   00009F                     ___lldiv@quotient:
  6968                           	callstack 0
  6969                           
  6970                           ; 4 bytes @ 0x3F
  6971   00009F                     	ds	1
  6972   0000A0                     APP_nvValidate@index:
  6973                           	callstack 0
  6974   0000A0                     setServoPosition@io:
  6975                           	callstack 0
  6976   0000A0                     canSendMessage@no:
  6977                           	callstack 0
  6978                           
  6979                           ; 1 bytes @ 0x40
  6980   0000A0                     	ds	1
  6981   0000A1                     setOutputPosition@pos:
  6982                           	callstack 0
  6983   0000A1                     numEv@num:
  6984                           	callstack 0
  6985   0000A1                     getEVs@f:
  6986                           	callstack 0
  6987   0000A1                     getNN@f:
  6988                           	callstack 0
  6989   0000A1                     getEN@tableIndex:
  6990                           	callstack 0
  6991   0000A1                     canSendMessage@m:
  6992                           	callstack 0
  6993                           
  6994                           ; 2 bytes @ 0x41
  6995   0000A1                     	ds	1
  6996   0000A2                     setOutputPosition@type:
  6997                           	callstack 0
  6998   0000A2                     numEv@f:
  6999                           	callstack 0
  7000   0000A2                     getEVs@evIdx:
  7001                           	callstack 0
  7002   0000A2                     getNN@tableIndex:
  7003                           	callstack 0
  7004                           
  7005                           ; 1 bytes @ 0x42
  7006   0000A2                     	ds	1
  7007   0000A3                     ??_sendMessage:
  7008   0000A3                     APP_nvDefault@index:
  7009                           	callstack 0
  7010   0000A3                     setOutputPosition@io:
  7011                           	callstack 0
  7012   0000A3                     numEv@tableIndex:
  7013                           	callstack 0
  7014   0000A3                     getEVs@tableIndex:
  7015                           	callstack 0
  7016   0000A3                     ___lldiv@counter:
  7017                           	callstack 0
  7018   0000A3                     getHash@nn:
  7019                           	callstack 0
  7020                           
  7021                           ; 2 bytes @ 0x43
  7022   0000A3                     	ds	1
  7023   0000A4                     ??_initServos:
  7024   0000A4                     ??_pbDownTimer:
  7025   0000A4                     ??_pbUpTimer:
  7026   0000A4                     getEv@f:
  7027                           	callstack 0
  7028   0000A4                     getEVs@evNum:
  7029                           	callstack 0
  7030   0000A4                     writeNVM@index:
  7031                           	callstack 0
  7032                           
  7033                           ; 3 bytes @ 0x44
  7034   0000A4                     	ds	1
  7035   0000A5                     bounceUp@reversed:
  7036                           	callstack 0
  7037   0000A5                     sendMessage@opc:
  7038                           	callstack 0
  7039   0000A5                     getEv@tableIndex:
  7040                           	callstack 0
  7041   0000A5                     getHash@en:
  7042                           	callstack 0
  7043                           
  7044                           ; 2 bytes @ 0x45
  7045   0000A5                     	ds	1
  7046   0000A6                     isConsumedEvent@eventIndex:
  7047                           	callstack 0
  7048   0000A6                     bounceUp@midway:
  7049                           	callstack 0
  7050   0000A6                     sendMessage2@data1:
  7051                           	callstack 0
  7052   0000A6                     sendMessage3@data1:
  7053                           	callstack 0
  7054   0000A6                     sendMessage4@opc:
  7055                           	callstack 0
  7056   0000A6                     sendMessage5@opc:
  7057                           	callstack 0
  7058   0000A6                     sendMessage6@opc:
  7059                           	callstack 0
  7060   0000A6                     sendMessage7@opc:
  7061                           	callstack 0
  7062   0000A6                     _initServos$8094:
  7063                           	callstack 0
  7064                           
  7065                           ; 1 bytes @ 0x46
  7066   0000A6                     	ds	1
  7067   0000A7                     ??_getHash:
  7068   0000A7                     isConsumedEvent@ev:
  7069                           	callstack 0
  7070   0000A7                     bounceUp@io:
  7071                           	callstack 0
  7072   0000A7                     sendMessage2@data2:
  7073                           	callstack 0
  7074   0000A7                     sendMessage3@data2:
  7075                           	callstack 0
  7076   0000A7                     writeNVM@value:
  7077                           	callstack 0
  7078   0000A7                     sendProducedEvent@onOff:
  7079                           	callstack 0
  7080   0000A7                     _initServos$8093:
  7081                           	callstack 0
  7082                           
  7083                           ; 1 bytes @ 0x47
  7084   0000A7                     	ds	1
  7085   0000A8                     initServos@io:
  7086                           	callstack 0
  7087   0000A8                     pbDownTimer@timeout:
  7088                           	callstack 0
  7089   0000A8                     pbUpTimer@timeout:
  7090                           	callstack 0
  7091   0000A8                     sendMessage2@opc:
  7092                           	callstack 0
  7093   0000A8                     sendMessage3@data3:
  7094                           	callstack 0
  7095   0000A8                     writeNVM@type:
  7096                           	callstack 0
  7097   0000A8                     getHash@hash:
  7098                           	callstack 0
  7099                           
  7100                           ; 1 bytes @ 0x48
  7101   0000A8                     	ds	1
  7102   0000A9                     
  7103                           ; 1 bytes @ 0x49
  7104                           
  7105                           	psect	cstackCOMRAM
  7106   000001                     __pcstackCOMRAM:
  7107                           	callstack 0
  7108   000001                     ?i2_getNV:
  7109                           	callstack 0
  7110   000001                     ?i2_getNextWriteMessage:
  7111                           	callstack 0
  7112   000001                     ?i2_pop:
  7113                           	callstack 0
  7114   000001                     ?i2_getBufferPointer:
  7115                           	callstack 0
  7116   000001                     ?i2_tickGet:
  7117                           	callstack 0
  7118   000001                     i2_isEvent$4896:
  7119                           	callstack 0
  7120   000001                     i2getNextWriteMessage@q:
  7121                           	callstack 0
  7122   000001                     i2pop@q:
  7123                           	callstack 0
  7124                           
  7125                           ; 1 bytes @ 0x0
  7126   000001                     	ds	1
  7127   000002                     i2isEvent@opc:
  7128                           	callstack 0
  7129                           
  7130                           ; 1 bytes @ 0x1
  7131   000002                     	ds	1
  7132   000003                     ??i2_getNV:
  7133   000003                     ??i2_getNextWriteMessage:
  7134   000003                     ??i2_pop:
  7135   000003                     i2getBufferPointer@b:
  7136                           	callstack 0
  7137                           
  7138                           ; 1 bytes @ 0x2
  7139   000003                     	ds	1
  7140   000004                     i2getNV@index:
  7141                           	callstack 0
  7142                           
  7143                           ; 1 bytes @ 0x3
  7144   000004                     	ds	1
  7145   000005                     i2setOutputPin@state:
  7146                           	callstack 0
  7147   000005                     i2tickGet@IntFlag2:
  7148                           	callstack 0
  7149                           
  7150                           ; 1 bytes @ 0x4
  7151   000005                     	ds	1
  7152   000006                     ??i2_setOutputPin:
  7153   000006                     i2tickGet@IntFlag1:
  7154                           	callstack 0
  7155                           
  7156                           ; 1 bytes @ 0x5
  7157   000006                     	ds	1
  7158   000007                     i2tickGet@currentTime:
  7159                           	callstack 0
  7160                           
  7161                           ; 4 bytes @ 0x6
  7162   000007                     	ds	1
  7163   000008                     i2setOutputPin@io:
  7164                           	callstack 0
  7165   000008                     i2pop@ret:
  7166                           	callstack 0
  7167                           
  7168                           ; 2 bytes @ 0x7
  7169   000008                     	ds	1
  7170   000009                     
  7171                           ; 1 bytes @ 0x8
  7172   000009                     	ds	3
  7173   00000C                     i2getNextWriteMessage@wr:
  7174                           	callstack 0
  7175                           
  7176                           ; 1 bytes @ 0xB
  7177   00000C                     	ds	1
  7178   00000D                     ??i2_checkTxFifo:
  7179   00000D                     i2canFillRxFifo@m:
  7180                           	callstack 0
  7181                           
  7182                           ; 2 bytes @ 0xC
  7183   00000D                     	ds	2
  7184   00000F                     i2canFillRxFifo@ptr:
  7185                           	callstack 0
  7186                           
  7187                           ; 2 bytes @ 0xE
  7188   00000F                     	ds	3
  7189   000012                     i2checkTxFifo@m:
  7190                           	callstack 0
  7191                           
  7192                           ; 2 bytes @ 0x11
  7193   000012                     	ds	2
  7194   000014                     i2checkTxFifo@mp:
  7195                           	callstack 0
  7196                           
  7197                           ; 2 bytes @ 0x13
  7198   000014                     	ds	2
  7199   000016                     ??i2_checkCANTimeout:
  7200   000016                     
  7201                           ; 1 bytes @ 0x15
  7202   000016                     	ds	4
  7203   00001A                     ??_highIsr:
  7204   00001A                     
  7205                           ; 1 bytes @ 0x19
  7206   00001A                     	ds	4
  7207   00001E                     highIsr@i:
  7208                           	callstack 0
  7209                           
  7210                           ; 1 bytes @ 0x1D
  7211   00001E                     	ds	1
  7212   00001F                     ??_isrHigh:
  7213                           
  7214                           ; 1 bytes @ 0x1E
  7215   00001F                     	ds	12
  7216                           
  7217 ;;
  7218 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7219 ;;
  7220 ;; *************** function _main *****************
  7221 ;; Defined at:
  7222 ;;		line 1249 in file "../../VLCBlib_PIC/vlcb.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;		None
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  i               1    0        unsigned char 
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7240 ;;Total ram usage:        0 bytes
  7241 ;; Hardware stack levels required when called: 29
  7242 ;; This function calls:
  7243 ;;		_checkPowerOnPb
  7244 ;;		_factoryReset
  7245 ;;		_initRomOps
  7246 ;;		_loop
  7247 ;;		_poll
  7248 ;;		_powerUp
  7249 ;;		_readNVM
  7250 ;;		_setup
  7251 ;; This function is called by:
  7252 ;;		Startup code after reset
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text0
  7257   00BBA6                     __ptext0:
  7258                           	callstack 0
  7259   00BBA6                     _main:
  7260                           	callstack 2
  7261                           
  7262                           ;../../VLCBlib_PIC/vlcb.c: 1250:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1256:     OSCT
      +                          UNEbits.PLLEN = 1;
  7263                           
  7264                           ;incstack = 0
  7265   00BBA6  8C9B               	bsf	155,6,c	;volatile
  7266                           
  7267                           ;../../VLCBlib_PIC/vlcb.c: 1271:     RCONbits.IPEN = 1;
  7268   00BBA8  8ED0               	bsf	208,7,c	;volatile
  7269                           
  7270                           ;../../VLCBlib_PIC/vlcb.c: 1293:     initRomOps();
  7271   00BBAA  ECC4  F063         	call	_initRomOps	;wreg free
  7272                           
  7273                           ;../../VLCBlib_PIC/vlcb.c: 1295:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
  7274   00BBAE  0EFA               	movlw	250
  7275   00BBB0  0100               	movlb	0	; () banked
  7276   00BBB2  6F91               	movwf	readNVM@index& (0+255),b
  7277   00BBB4  0E03               	movlw	3
  7278   00BBB6  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7279   00BBB8  0E00               	movlw	0
  7280   00BBBA  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7281   00BBBC  0E00               	movlw	0
  7282   00BBBE  ECD1  F05A         	call	_readNVM
  7283   00BBC2  0100               	movlb	0	; () banked
  7284   00BBC4  0591               	decf	?_readNVM& (0+255),w,b
  7285   00BBC6  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7286   00BBC8  A4D8               	btfss	status,2,c
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;../../VLCBlib_PIC/vlcb.c: 1296:         factoryReset();
  7290   00BBCA  ECAC  F043         	call	_factoryReset	;wreg free
  7291                           
  7292                           ;../../VLCBlib_PIC/vlcb.c: 1300:     powerUp();
  7293                           
  7294                           ;../../VLCBlib_PIC/vlcb.c: 1297:     }
  7295   00BBCE  EC01  F045         	call	_powerUp	;wreg free
  7296                           
  7297                           ;../../VLCBlib_PIC/vlcb.c: 1303:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7298   00BBD2  8EF2               	bsf	242,7,c	;volatile
  7299   00BBD4  8CF2               	bsf	242,6,c	;volatile
  7300                           
  7301                           ;../../VLCBlib_PIC/vlcb.c: 1304:     checkPowerOnPb();
  7302   00BBD6  EC30  F05B         	call	_checkPowerOnPb	;wreg free
  7303                           
  7304                           ;../../VLCBlib_PIC/vlcb.c: 1307:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7305   00BBDA  9EF2               	bcf	242,7,c	;volatile
  7306   00BBDC  9CF2               	bcf	242,6,c	;volatile
  7307                           
  7308                           ;../../VLCBlib_PIC/vlcb.c: 1308:     setup();
  7309   00BBDE  ECDC  F04D         	call	_setup	;wreg free
  7310                           
  7311                           ;../../VLCBlib_PIC/vlcb.c: 1311:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7312   00BBE2  8EF2               	bsf	242,7,c	;volatile
  7313   00BBE4  8CF2               	bsf	242,6,c	;volatile
  7314   00BBE6                     l25118:
  7315                           
  7316                           ;../../VLCBlib_PIC/vlcb.c: 1315:         poll();
  7317   00BBE6  ECB6  F020         	call	_poll	;wreg free
  7318                           
  7319                           ;../../VLCBlib_PIC/vlcb.c: 1316:         loop();
  7320   00BBEA  ECBA  F036         	call	_loop	;wreg free
  7321   00BBEE  D7FB               	goto	l25118
  7322   00BBF0                     __end_of_main:
  7323                           	callstack 0
  7324                           
  7325 ;; *************** function _setup *****************
  7326 ;; Defined at:
  7327 ;;		line 236 in file "../main.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;		None
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  1    wreg      void 
  7334 ;; Registers used:
  7335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7345 ;;Total ram usage:        0 bytes
  7346 ;; Hardware stack levels used: 1
  7347 ;; Hardware stack levels required when called: 19
  7348 ;; This function calls:
  7349 ;;		_configIO
  7350 ;;		_getNV
  7351 ;;		_initInputScan
  7352 ;;		_initOutputs
  7353 ;;		_initServos
  7354 ;;		_setTimedResponseDelay
  7355 ;;		_tickGet
  7356 ;;		_universalEventsInit
  7357 ;; This function is called by:
  7358 ;;		_main
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text1
  7363   009BB8                     __ptext1:
  7364                           	callstack 0
  7365   009BB8                     _setup:
  7366                           	callstack 11
  7367                           
  7368                           ;../main.c: 241:     transport = &canTransport;
  7369                           
  7370                           ;incstack = 0
  7371   009BB8  0E7A               	movlw	low _canTransport
  7372   009BBA  0101               	movlb	1	; () banked
  7373   009BBC  6F66               	movwf	_transport& (0+255),b
  7374   009BBE  0EEF               	movlw	high _canTransport
  7375   009BC0  6F67               	movwf	(_transport+1)& (0+255),b
  7376                           
  7377                           ; BSR set to: 1
  7378                           ;../main.c: 248:     INTCON2bits.RBPU = 0;
  7379   009BC2  9EF1               	bcf	241,7,c	;volatile
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;../main.c: 250:     WPUB = (uint8_t)getNV(4);
  7383   009BC4  0E04               	movlw	4
  7384   009BC6  EC53  F05F         	call	_getNV
  7385   009BCA  0100               	movlb	0	; () banked
  7386   009BCC  518D               	movf	?_getNV& (0+255),w,b
  7387   009BCE  010F               	movlb	15	; () banked
  7388   009BD0  6F5B               	movwf	91,b	;volatile
  7389                           
  7390                           ; BSR set to: 15
  7391                           ;../main.c: 304:     setTimedResponseDelay((uint8_t)getNV(5));
  7392   009BD2  0E05               	movlw	5
  7393   009BD4  EC53  F05F         	call	_getNV
  7394   009BD8  0100               	movlb	0	; () banked
  7395   009BDA  518D               	movf	?_getNV& (0+255),w,b
  7396   009BDC  EC0B  F064         	call	_setTimedResponseDelay
  7397                           
  7398                           ;../main.c: 305:     universalEventsInit();
  7399   009BE0  ECBA  F063         	call	_universalEventsInit	;wreg free
  7400                           
  7401                           ;../main.c: 312:     ANCON0 = 0x00;
  7402   009BE4  0E00               	movlw	0
  7403   009BE6  010F               	movlb	15	; () banked
  7404   009BE8  6F5D               	movwf	93,b	;volatile
  7405                           
  7406                           ; BSR set to: 15
  7407                           ;../main.c: 313:     ANCON1 = 0x00;
  7408   009BEA  0E00               	movlw	0
  7409   009BEC  6F5C               	movwf	92,b	;volatile
  7410                           
  7411                           ; BSR set to: 15
  7412                           ;../main.c: 326:     initServos();
  7413   009BEE  ECF2  F03E         	call	_initServos	;wreg free
  7414                           
  7415                           ;../main.c: 328:     initOutputs();
  7416   009BF2  EC6E  F061         	call	_initOutputs	;wreg free
  7417                           
  7418                           ;../main.c: 331:     for (io=0; io< 16; io++) {
  7419   009BF6  0E00               	movlw	0
  7420   009BF8  0100               	movlb	0	; () banked
  7421   009BFA  6FCF               	movwf	_io& (0+255),b
  7422   009BFC                     l24866:
  7423                           
  7424                           ; BSR set to: 0
  7425   009BFC  0E0F               	movlw	15
  7426   009BFE  65CF               	cpfsgt	_io& (0+255),b
  7427   009C00  D001               	goto	l24870
  7428   009C02  D006               	goto	l24876
  7429   009C04                     l24870:
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;../main.c: 332:         configIO(io);
  7433   009C04  51CF               	movf	_io& (0+255),w,b
  7434   009C06  EC33  F027         	call	_configIO
  7435                           
  7436                           ;../main.c: 333:     }
  7437   009C0A  0100               	movlb	0	; () banked
  7438   009C0C  2BCF               	incf	_io& (0+255),f,b
  7439   009C0E  D7F6               	goto	l24866
  7440   009C10                     l24876:
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;../main.c: 334:     initInputScan();
  7444   009C10  EC31  F04E         	call	_initInputScan	;wreg free
  7445                           
  7446                           ;../main.c: 340:     (INTCONbits.GIE = 1);
  7447   009C14  8EF2               	bsf	242,7,c	;volatile
  7448                           
  7449                           ;../main.c: 342:     startTime.val = tickGet();
  7450   009C16  ECE5  F05B         	call	_tickGet	;wreg free
  7451   009C1A  C08D  F043         	movff	?_tickGet,_startTime
  7452   009C1E  C08E  F044         	movff	?_tickGet+1,_startTime+1
  7453   009C22  C08F  F045         	movff	?_tickGet+2,_startTime+2
  7454   009C26  C090  F046         	movff	?_tickGet+3,_startTime+3
  7455                           
  7456                           ;../main.c: 343:     lastServoStartTime.val = startTime.val;
  7457   009C2A  C043  F160         	movff	_startTime,_lastServoStartTime
  7458   009C2E  C044  F161         	movff	_startTime+1,_lastServoStartTime+1
  7459   009C32  C045  F162         	movff	_startTime+2,_lastServoStartTime+2
  7460   009C36  C046  F163         	movff	_startTime+3,_lastServoStartTime+3
  7461                           
  7462                           ;../main.c: 344:     lastInputScanTime.val = startTime.val;
  7463   009C3A  C043  F15C         	movff	_startTime,_lastInputScanTime
  7464   009C3E  C044  F15D         	movff	_startTime+1,_lastInputScanTime+1
  7465   009C42  C045  F15E         	movff	_startTime+2,_lastInputScanTime+2
  7466   009C46  C046  F15F         	movff	_startTime+3,_lastInputScanTime+3
  7467                           
  7468                           ;../main.c: 345:     lastActionPollTime.val = startTime.val;
  7469   009C4A  C043  F158         	movff	_startTime,_lastActionPollTime
  7470   009C4E  C044  F159         	movff	_startTime+1,_lastActionPollTime+1
  7471   009C52  C045  F15A         	movff	_startTime+2,_lastActionPollTime+2
  7472   009C56  C046  F15B         	movff	_startTime+3,_lastActionPollTime+3
  7473                           
  7474                           ;../main.c: 350:     started = FALSE;
  7475   009C5A  0E00               	movlw	0
  7476   009C5C  0100               	movlb	0	; () banked
  7477   009C5E  6FD0               	movwf	_started& (0+255),b
  7478                           
  7479                           ; BSR set to: 0
  7480   009C60  0012               	return		;funcret
  7481   009C62                     __end_of_setup:
  7482                           	callstack 0
  7483                           
  7484 ;; *************** function _universalEventsInit *****************
  7485 ;; Defined at:
  7486 ;;		line 93 in file "../universalEvents.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;		None
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      void 
  7493 ;; Registers used:
  7494 ;;		wreg, status,2
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;Total ram usage:        0 bytes
  7505 ;; Hardware stack levels used: 1
  7506 ;; Hardware stack levels required when called: 12
  7507 ;; This function calls:
  7508 ;;		Nothing
  7509 ;; This function is called by:
  7510 ;;		_setup
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text2
  7515   00C774                     __ptext2:
  7516                           	callstack 0
  7517   00C774                     _universalEventsInit:
  7518                           	callstack 17
  7519                           
  7520                           ;../universalEvents.c: 94:     startWait.val = 0;
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;incstack = 0
  7524   00C774  0E00               	movlw	0
  7525   00C776  0101               	movlb	1	; () banked
  7526   00C778  6F54               	movwf	_startWait& (0+255),b
  7527   00C77A  0E00               	movlw	0
  7528   00C77C  6F55               	movwf	(_startWait+1)& (0+255),b
  7529   00C77E  0E00               	movlw	0
  7530   00C780  6F56               	movwf	(_startWait+2)& (0+255),b
  7531   00C782  0E00               	movlw	0
  7532   00C784  6F57               	movwf	(_startWait+3)& (0+255),b
  7533                           
  7534                           ; BSR set to: 1
  7535   00C786  0012               	return		;funcret
  7536   00C788                     __end_of_universalEventsInit:
  7537                           	callstack 0
  7538                           
  7539 ;; *************** function _initServos *****************
  7540 ;; Defined at:
  7541 ;;		line 124 in file "../servo.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;		None
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  io              1   72[BANK0 ] unsigned char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      void 
  7548 ;; Registers used:
  7549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7556 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7558 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7559 ;;Total ram usage:        5 bytes
  7560 ;; Hardware stack levels used: 1
  7561 ;; Hardware stack levels required when called: 15
  7562 ;; This function calls:
  7563 ;;		_getNV
  7564 ;;		_readNVM
  7565 ;;		_setOutputPosition
  7566 ;;		_tickGet
  7567 ;; This function is called by:
  7568 ;;		_setup
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text3
  7573   007DE4                     __ptext3:
  7574                           	callstack 0
  7575   007DE4                     _initServos:
  7576                           	callstack 14
  7577                           
  7578                           ; BSR set to: 1
  7579                           ;incstack = 0
  7580   007DE4  0E00               	movlw	0
  7581   007DE6  0100               	movlb	0	; () banked
  7582   007DE8  6FA8               	movwf	initServos@io& (0+255),b
  7583   007DEA                     l22800:
  7584                           
  7585                           ; BSR set to: 0
  7586   007DEA  51A8               	movf	initServos@io& (0+255),w,b
  7587   007DEC  0D07               	mullw	7
  7588   007DEE  50F3               	movf	243,w,c
  7589   007DF0  0F11               	addlw	17
  7590   007DF2  EC53  F05F         	call	_getNV
  7591   007DF6  0100               	movlb	0	; () banked
  7592   007DF8  A58D               	btfss	?_getNV& (0+255),2,b
  7593   007DFA  D009               	goto	l22804
  7594                           
  7595                           ; BSR set to: 0
  7596   007DFC  0E10               	movlw	low _servoState
  7597   007DFE  25A8               	addwf	initServos@io& (0+255),w,b
  7598   007E00  6ED9               	movwf	fsr2l,c
  7599   007E02  6ADA               	clrf	fsr2h,c
  7600   007E04  0E01               	movlw	high _servoState
  7601   007E06  22DA               	addwfc	fsr2h,f,c
  7602   007E08  0E01               	movlw	1
  7603   007E0A  6EDF               	movwf	indf2,c
  7604   007E0C  D007               	goto	l22806
  7605   007E0E                     l22804:
  7606                           
  7607                           ; BSR set to: 0
  7608   007E0E  0E10               	movlw	low _servoState
  7609   007E10  25A8               	addwf	initServos@io& (0+255),w,b
  7610   007E12  6ED9               	movwf	fsr2l,c
  7611   007E14  6ADA               	clrf	fsr2h,c
  7612   007E16  0E01               	movlw	high _servoState
  7613   007E18  22DA               	addwfc	fsr2h,f,c
  7614   007E1A  6ADF               	clrf	indf2,c
  7615   007E1C                     l22806:
  7616                           
  7617                           ; BSR set to: 0
  7618   007E1C  ECE5  F05B         	call	_tickGet	;wreg free
  7619   007E20  0100               	movlb	0	; () banked
  7620   007E22  51A8               	movf	initServos@io& (0+255),w,b
  7621   007E24  0D04               	mullw	4
  7622   007E26  0E88               	movlw	low _ticksWhenStopped
  7623   007E28  24F3               	addwf	243,w,c
  7624   007E2A  6ED9               	movwf	fsr2l,c
  7625   007E2C  0E03               	movlw	high _ticksWhenStopped
  7626   007E2E  20F4               	addwfc	prodh,w,c
  7627   007E30  6EDA               	movwf	fsr2h,c
  7628   007E32  C08D  FFDE         	movff	?_tickGet,postinc2
  7629   007E36  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7630   007E3A  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7631   007E3E  C090  FFDE         	movff	?_tickGet+3,postinc2
  7632                           
  7633                           ; BSR set to: 0
  7634   007E42  51A8               	movf	initServos@io& (0+255),w,b
  7635   007E44  0D07               	mullw	7
  7636   007E46  50F3               	movf	243,w,c
  7637   007E48  0F11               	addlw	17
  7638   007E4A  EC53  F05F         	call	_getNV
  7639   007E4E  0100               	movlb	0	; () banked
  7640   007E50  A58D               	btfss	?_getNV& (0+255),2,b
  7641   007E52  D020               	goto	l22814
  7642                           
  7643                           ; BSR set to: 0
  7644   007E54  51A8               	movf	initServos@io& (0+255),w,b
  7645   007E56  0D07               	mullw	7
  7646   007E58  50F3               	movf	243,w,c
  7647   007E5A  0F10               	addlw	16
  7648   007E5C  EC53  F05F         	call	_getNV
  7649   007E60  0100               	movlb	0	; () banked
  7650   007E62  518D               	movf	?_getNV& (0+255),w,b
  7651   007E64  6FA7               	movwf	_initServos$8093& (0+255),b
  7652                           
  7653                           ; BSR set to: 0
  7654   007E66  0EDE               	movlw	222
  7655   007E68  25A8               	addwf	initServos@io& (0+255),w,b
  7656   007E6A  6FA4               	movwf	??_initServos& (0+255),b
  7657   007E6C  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7658   007E6E  0E03               	movlw	3
  7659   007E70  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7660   007E72  C0A4  F091         	movff	??_initServos,readNVM@index
  7661   007E76  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7662   007E7A  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7663   007E7C  0E00               	movlw	0
  7664   007E7E  ECD1  F05A         	call	_readNVM
  7665   007E82  0100               	movlb	0	; () banked
  7666   007E84  5191               	movf	?_readNVM& (0+255),w,b
  7667   007E86  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7668   007E88  C0A7  F0A2         	movff	_initServos$8093,setOutputPosition@type
  7669   007E8C  51A8               	movf	initServos@io& (0+255),w,b
  7670   007E8E  EC4C  F057         	call	_setOutputPosition
  7671   007E92  D019               	goto	l22818
  7672   007E94                     l22814:
  7673                           
  7674                           ; BSR set to: 0
  7675   007E94  51A8               	movf	initServos@io& (0+255),w,b
  7676   007E96  0D07               	mullw	7
  7677   007E98  50F3               	movf	243,w,c
  7678   007E9A  0F12               	addlw	18
  7679   007E9C  EC53  F05F         	call	_getNV
  7680   007EA0  0100               	movlb	0	; () banked
  7681   007EA2  518D               	movf	?_getNV& (0+255),w,b
  7682   007EA4  6FA7               	movwf	_initServos$8093& (0+255),b
  7683   007EA6  51A8               	movf	initServos@io& (0+255),w,b
  7684   007EA8  0D07               	mullw	7
  7685   007EAA  50F3               	movf	243,w,c
  7686   007EAC  0F10               	addlw	16
  7687   007EAE  EC53  F05F         	call	_getNV
  7688   007EB2  0100               	movlb	0	; () banked
  7689   007EB4  518D               	movf	?_getNV& (0+255),w,b
  7690   007EB6  6FA6               	movwf	_initServos$8094& (0+255),b
  7691                           
  7692                           ; BSR set to: 0
  7693   007EB8  C0A7  F0A1         	movff	_initServos$8093,setOutputPosition@pos
  7694   007EBC  C0A6  F0A2         	movff	_initServos$8094,setOutputPosition@type
  7695   007EC0  51A8               	movf	initServos@io& (0+255),w,b
  7696   007EC2  EC4C  F057         	call	_setOutputPosition
  7697   007EC6                     l22818:
  7698   007EC6  0E00               	movlw	low _stepsPerPollSpeed
  7699   007EC8  0100               	movlb	0	; () banked
  7700   007ECA  25A8               	addwf	initServos@io& (0+255),w,b
  7701   007ECC  6ED9               	movwf	fsr2l,c
  7702   007ECE  6ADA               	clrf	fsr2h,c
  7703   007ED0  0E01               	movlw	high _stepsPerPollSpeed
  7704   007ED2  22DA               	addwfc	fsr2h,f,c
  7705   007ED4  6ADF               	clrf	indf2,c
  7706                           
  7707                           ; BSR set to: 0
  7708   007ED6  2BA8               	incf	initServos@io& (0+255),f,b
  7709                           
  7710                           ; BSR set to: 0
  7711   007ED8  0E0F               	movlw	15
  7712   007EDA  65A8               	cpfsgt	initServos@io& (0+255),b
  7713   007EDC  D786               	goto	l22800
  7714                           
  7715                           ; BSR set to: 0
  7716   007EDE  9EAA               	bcf	170,7,c	;volatile
  7717                           
  7718                           ; BSR set to: 0
  7719   007EE0  0E3F               	movlw	-193
  7720   007EE2  16CD               	andwf	205,f,c	;volatile
  7721   007EE4  50CD               	movf	205,w,c	;volatile
  7722   007EE6  0BCF               	andlw	-49
  7723   007EE8  0920               	iorlw	32
  7724   007EEA  6ECD               	movwf	205,c	;volatile
  7725                           
  7726                           ; BSR set to: 0
  7727   007EEC  86CD               	bsf	205,3,c	;volatile
  7728                           
  7729                           ; BSR set to: 0
  7730   007EEE  82CD               	bsf	205,1,c	;volatile
  7731                           
  7732                           ; BSR set to: 0
  7733   007EF0  809D               	bsf	157,0,c	;volatile
  7734                           
  7735                           ; BSR set to: 0
  7736   007EF2  9EB0               	bcf	176,7,c	;volatile
  7737   007EF4  0E3F               	movlw	-193
  7738   007EF6  16B1               	andwf	177,f,c	;volatile
  7739   007EF8  50B1               	movf	177,w,c	;volatile
  7740   007EFA  0BCF               	andlw	-49
  7741   007EFC  0920               	iorlw	32
  7742   007EFE  6EB1               	movwf	177,c	;volatile
  7743                           
  7744                           ; BSR set to: 0
  7745   007F00  86B1               	bsf	177,3,c	;volatile
  7746                           
  7747                           ; BSR set to: 0
  7748   007F02  82B1               	bsf	177,1,c	;volatile
  7749                           
  7750                           ; BSR set to: 0
  7751   007F04  82A0               	bsf	160,1,c	;volatile
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;../servo.c: 176:     servoInBlock = io -1;
  7755   007F06  05A8               	decf	initServos@io& (0+255),w,b
  7756   007F08  6FC9               	movwf	_servoInBlock& (0+255),b
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;../servo.c: 177:     servoActive[0] = 0;
  7760   007F0A  0E00               	movlw	0
  7761   007F0C  6FB3               	movwf	_servoActive& (0+255),b
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;../servo.c: 178:     servoActive[1] = 0;
  7765   007F0E  0E00               	movlw	0
  7766   007F10  6FB4               	movwf	(_servoActive+1)& (0+255),b
  7767                           
  7768                           ; BSR set to: 0
  7769   007F12  0012               	return		;funcret
  7770   007F14                     __end_of_initServos:
  7771                           	callstack 0
  7772                           
  7773 ;; *************** function _setOutputPosition *****************
  7774 ;; Defined at:
  7775 ;;		line 148 in file "../outputs.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  io              1    wreg     unsigned char 
  7778 ;;  pos             1   65[BANK0 ] unsigned char 
  7779 ;;  type            1   66[BANK0 ] unsigned char 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  io              1   67[BANK0 ] unsigned char 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7794 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7795 ;;Total ram usage:        3 bytes
  7796 ;; Hardware stack levels used: 1
  7797 ;; Hardware stack levels required when called: 14
  7798 ;; This function calls:
  7799 ;;		_getNV
  7800 ;;		_setDigitalOutput
  7801 ;;		_setOutputPin
  7802 ;;		_setServoPosition
  7803 ;; This function is called by:
  7804 ;;		_initServos
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text4
  7809   00AE98                     __ptext4:
  7810                           	callstack 0
  7811   00AE98                     _setOutputPosition:
  7812                           	callstack 14
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;incstack = 0
  7816                           ;setOutputPosition@io stored from wreg
  7817   00AE98  0100               	movlb	0	; () banked
  7818   00AE9A  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7819                           
  7820                           ;../outputs.c: 149:     switch(type) {
  7821   00AE9C  D020               	goto	l21720
  7822   00AE9E                     l21708:
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;../outputs.c: 156:             setDigitalOutput(io, pos);
  7826   00AE9E  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7827   00AEA2  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7828   00AEA4  EC8F  F053         	call	_setDigitalOutput
  7829   00AEA8  0012               	return	
  7830   00AEAA                     l21712:
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;../outputs.c: 166:             setServoPosition(io, pos);
  7834   00AEAA  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7835   00AEAE  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7836   00AEB0  EC78  F062         	call	_setServoPosition
  7837                           
  7838                           ;../outputs.c: 167:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7839   00AEB4  0100               	movlb	0	; () banked
  7840   00AEB6  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7841   00AEB8  0D07               	mullw	7
  7842   00AEBA  50F3               	movf	243,w,c
  7843   00AEBC  0F11               	addlw	17
  7844   00AEBE  0B20               	andlw	32
  7845   00AEC0  EC53  F05F         	call	_getNV
  7846   00AEC4  0100               	movlb	0	; () banked
  7847   00AEC6  518D               	movf	?_getNV& (0+255),w,b
  7848   00AEC8  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7849   00AECA  B4D8               	btfsc	status,2,c
  7850   00AECC  D002               	goto	u22460
  7851   00AECE  0E01               	movlw	1
  7852   00AED0  D001               	goto	u22470
  7853   00AED2                     u22460:
  7854   00AED2  0E00               	movlw	0
  7855   00AED4                     u22470:
  7856   00AED4  6F91               	movwf	setOutputPin@state& (0+255),b
  7857   00AED6  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7858   00AED8  EC9E  F037         	call	_setOutputPin
  7859   00AEDC  0012               	return	
  7860   00AEDE                     l21720:
  7861   00AEDE  0100               	movlb	0	; () banked
  7862   00AEE0  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7863                           
  7864                           ; Switch size 1, requested type "simple"
  7865                           ; Number of cases is 7, Range of values is 0 to 6
  7866                           ; switch strategies available:
  7867                           ; Name         Instructions Cycles
  7868                           ; simple_byte           22    12 (average)
  7869                           ;	Chosen strategy is simple_byte
  7870   00AEE2  0A00               	xorlw	0	; case 0
  7871   00AEE4  B4D8               	btfsc	status,2,c
  7872   00AEE6  0012               	return	
  7873   00AEE8  0A01               	xorlw	1	; case 1
  7874   00AEEA  B4D8               	btfsc	status,2,c
  7875   00AEEC  D7D8               	goto	l21708
  7876   00AEEE  0A03               	xorlw	3	; case 2
  7877   00AEF0  B4D8               	btfsc	status,2,c
  7878   00AEF2  D7DB               	goto	l21712
  7879   00AEF4  0A01               	xorlw	1	; case 3
  7880   00AEF6  B4D8               	btfsc	status,2,c
  7881   00AEF8  D7D8               	goto	l21712
  7882   00AEFA  0A07               	xorlw	7	; case 4
  7883   00AEFC  B4D8               	btfsc	status,2,c
  7884   00AEFE  D7D5               	goto	l21712
  7885   00AF00  0A01               	xorlw	1	; case 5
  7886   00AF02  B4D8               	btfsc	status,2,c
  7887   00AF04  0012               	return	
  7888   00AF06  0A03               	xorlw	3	; case 6
  7889   00AF08  0012               	return	
  7890   00AF0A                     __end_of_setOutputPosition:
  7891                           	callstack 0
  7892                           
  7893 ;; *************** function _initOutputs *****************
  7894 ;; Defined at:
  7895 ;;		line 86 in file "../digitalOut.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;		None
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  io              1   45[BANK0 ] unsigned char 
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  1    wreg      void 
  7902 ;; Registers used:
  7903 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7913 ;;Total ram usage:        1 bytes
  7914 ;; Hardware stack levels used: 1
  7915 ;; Hardware stack levels required when called: 12
  7916 ;; This function calls:
  7917 ;;		Nothing
  7918 ;; This function is called by:
  7919 ;;		_setup
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text5
  7924   00C2DC                     __ptext5:
  7925                           	callstack 0
  7926   00C2DC                     _initOutputs:
  7927                           	callstack 17
  7928                           
  7929                           ;../digitalOut.c: 88:     uint8_t io;;../digitalOut.c: 89:     for (io=0; io<16; io++) {
  7930                           
  7931                           ;incstack = 0
  7932   00C2DC  0E00               	movlw	0
  7933   00C2DE  0100               	movlb	0	; () banked
  7934   00C2E0  6F8D               	movwf	initOutputs@io& (0+255),b
  7935   00C2E2                     l15718:
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;../digitalOut.c: 90:        pulseDelays[io] = 0;
  7939   00C2E2  0EA4               	movlw	low _pulseDelays
  7940   00C2E4  258D               	addwf	initOutputs@io& (0+255),w,b
  7941   00C2E6  6ED9               	movwf	fsr2l,c
  7942   00C2E8  6ADA               	clrf	fsr2h,c
  7943   00C2EA  0E02               	movlw	high _pulseDelays
  7944   00C2EC  22DA               	addwfc	fsr2h,f,c
  7945   00C2EE  6ADF               	clrf	indf2,c
  7946                           
  7947                           ;../digitalOut.c: 91:        flashDelays[io] = 0;
  7948   00C2F0  0E20               	movlw	low _flashDelays
  7949   00C2F2  258D               	addwf	initOutputs@io& (0+255),w,b
  7950   00C2F4  6ED9               	movwf	fsr2l,c
  7951   00C2F6  6ADA               	clrf	fsr2h,c
  7952   00C2F8  0E01               	movlw	high _flashDelays
  7953   00C2FA  22DA               	addwfc	fsr2h,f,c
  7954   00C2FC  6ADF               	clrf	indf2,c
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;../digitalOut.c: 92:     }
  7958   00C2FE  2B8D               	incf	initOutputs@io& (0+255),f,b
  7959                           
  7960                           ; BSR set to: 0
  7961   00C300  0E0F               	movlw	15
  7962   00C302  658D               	cpfsgt	initOutputs@io& (0+255),b
  7963   00C304  D7EE               	goto	l15718
  7964   00C306  0012               	return	
  7965   00C308                     __end_of_initOutputs:
  7966                           	callstack 0
  7967                           
  7968 ;; *************** function _initInputScan *****************
  7969 ;; Defined at:
  7970 ;;		line 76 in file "../inputs.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;		None
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;  input           1   57[BANK0 ] unsigned char 
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  1    wreg      void 
  7977 ;; Registers used:
  7978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7988 ;;Total ram usage:        3 bytes
  7989 ;; Hardware stack levels used: 1
  7990 ;; Hardware stack levels required when called: 14
  7991 ;; This function calls:
  7992 ;;		_getNV
  7993 ;;		_readInput
  7994 ;;		_readNVM
  7995 ;; This function is called by:
  7996 ;;		_setup
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text6
  8001   009C62                     __ptext6:
  8002                           	callstack 0
  8003   009C62                     _initInputScan:
  8004                           	callstack 15
  8005                           
  8006                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;incstack = 0
  8010   009C62  0E00               	movlw	0
  8011   009C64  0100               	movlb	0	; () banked
  8012   009C66  6FCE               	movwf	_io@inputs$F849& (0+255),b
  8013   009C68                     l22848:
  8014                           
  8015                           ; BSR set to: 0
  8016   009C68  0E0F               	movlw	15
  8017   009C6A  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
  8018   009C6C  D001               	goto	l22852
  8019   009C6E  0012               	return	
  8020   009C70                     l22852:
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  8024   009C70  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8025   009C72  ECAB  F040         	call	_readInput
  8026   009C76  0100               	movlb	0	; () banked
  8027   009C78  6F99               	movwf	initInputScan@input& (0+255),b
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;../inputs.c: 79:         inputState[io] = input;
  8031   009C7A  0E94               	movlw	low _inputState
  8032   009C7C  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8033   009C7E  6ED9               	movwf	fsr2l,c
  8034   009C80  6ADA               	clrf	fsr2h,c
  8035   009C82  0E02               	movlw	high _inputState
  8036   009C84  22DA               	addwfc	fsr2h,f,c
  8037   009C86  C099  FFDF         	movff	initInputScan@input,indf2
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  8041   009C8A  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8042   009C8C  0D07               	mullw	7
  8043   009C8E  50F3               	movf	243,w,c
  8044   009C90  0F11               	addlw	17
  8045   009C92  EC53  F05F         	call	_getNV
  8046   009C96  0100               	movlb	0	; () banked
  8047   009C98  B18D               	btfsc	?_getNV& (0+255),0,b
  8048   009C9A  D007               	goto	l22860
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;../inputs.c: 81:             input = !input;
  8052   009C9C  5199               	movf	initInputScan@input& (0+255),w,b
  8053   009C9E  A4D8               	btfss	status,2,c
  8054   009CA0  D002               	goto	u24150
  8055   009CA2  0E01               	movlw	1
  8056   009CA4  D001               	goto	u24160
  8057   009CA6                     u24150:
  8058   009CA6  0E00               	movlw	0
  8059   009CA8                     u24160:
  8060   009CA8  6F99               	movwf	initInputScan@input& (0+255),b
  8061   009CAA                     l22860:
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;../inputs.c: 83:         outputState[io] = input;
  8065   009CAA  0EB4               	movlw	low _outputState
  8066   009CAC  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8067   009CAE  6ED9               	movwf	fsr2l,c
  8068   009CB0  6ADA               	clrf	fsr2h,c
  8069   009CB2  0E02               	movlw	high _outputState
  8070   009CB4  22DA               	addwfc	fsr2h,f,c
  8071   009CB6  C099  FFDF         	movff	initInputScan@input,indf2
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  8075   009CBA  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8076   009CBC  0D07               	mullw	7
  8077   009CBE  50F3               	movf	243,w,c
  8078   009CC0  0F11               	addlw	17
  8079   009CC2  EC53  F05F         	call	_getNV
  8080   009CC6  0100               	movlb	0	; () banked
  8081   009CC8  A98D               	btfss	?_getNV& (0+255),4,b
  8082   009CCA  D017               	goto	l22866
  8083                           
  8084                           ; BSR set to: 0
  8085                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  8086   009CCC  0EDE               	movlw	222
  8087   009CCE  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8088   009CD0  6F97               	movwf	??_initInputScan& (0+255),b
  8089   009CD2  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8090   009CD4  0E03               	movlw	3
  8091   009CD6  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8092   009CD8  C097  F091         	movff	??_initInputScan,readNVM@index
  8093   009CDC  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8094   009CE0  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8095   009CE2  0E00               	movlw	0
  8096   009CE4  ECD1  F05A         	call	_readNVM
  8097   009CE8  0EB4               	movlw	low _outputState
  8098   009CEA  0100               	movlb	0	; () banked
  8099   009CEC  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8100   009CEE  6ED9               	movwf	fsr2l,c
  8101   009CF0  6ADA               	clrf	fsr2h,c
  8102   009CF2  0E02               	movlw	high _outputState
  8103   009CF4  22DA               	addwfc	fsr2h,f,c
  8104   009CF6  C091  FFDF         	movff	?_readNVM,indf2
  8105   009CFA                     l22866:
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;../inputs.c: 87:         delayCount[io] = 0;
  8109   009CFA  0E84               	movlw	low _delayCount
  8110   009CFC  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8111   009CFE  6ED9               	movwf	fsr2l,c
  8112   009D00  6ADA               	clrf	fsr2h,c
  8113   009D02  0E02               	movlw	high _delayCount
  8114   009D04  22DA               	addwfc	fsr2h,f,c
  8115   009D06  6ADF               	clrf	indf2,c
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;../inputs.c: 88:     }
  8119   009D08  2BCE               	incf	_io@inputs$F849& (0+255),f,b
  8120   009D0A  D7AE               	goto	l22848
  8121   009D0C                     __end_of_initInputScan:
  8122                           	callstack 0
  8123                           
  8124 ;; *************** function _powerUp *****************
  8125 ;; Defined at:
  8126 ;;		line 876 in file "../../VLCBlib_PIC/vlcb.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;		None
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;  i               1   14[BANK1 ] unsigned char 
  8131 ;;  divider         1    0        unsigned char 
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1    wreg      void 
  8134 ;; Registers used:
  8135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8142 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8143 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8144 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8145 ;;Total ram usage:        5 bytes
  8146 ;; Hardware stack levels used: 1
  8147 ;; Hardware stack levels required when called: 18
  8148 ;; This function calls:
  8149 ;;		NULL
  8150 ;;		_ackPowerUp
  8151 ;;		_bootPowerUp
  8152 ;;		_canPowerUp
  8153 ;;		_consumer2QPowerUp
  8154 ;;		_initTicker
  8155 ;;		_initTimedResponse
  8156 ;;		_leds_powerUp
  8157 ;;		_mnsPowerUp
  8158 ;;		_nvPowerUp
  8159 ;;		_producerPowerUp
  8160 ;;		_teachPowerUp
  8161 ;; This function is called by:
  8162 ;;		_main
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text7
  8167   008A02                     __ptext7:
  8168                           	callstack 0
  8169   008A02                     _powerUp:
  8170                           	callstack 12
  8171                           
  8172                           ;../../VLCBlib_PIC/vlcb.c: 877:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 878:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 881:     initTicker(0);
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;incstack = 0
  8176   008A02  0E00               	movlw	0
  8177   008A04  ECAF  F05E         	call	_initTicker
  8178                           
  8179                           ;../../VLCBlib_PIC/vlcb.c: 882:     initTimedResponse();
  8180   008A08  EC18  F064         	call	_initTimedResponse	;wreg free
  8181                           
  8182                           ;../../VLCBlib_PIC/vlcb.c: 883:     leds_powerUp();
  8183   008A0C  EC6A  F060         	call	_leds_powerUp	;wreg free
  8184                           
  8185                           ;../../VLCBlib_PIC/vlcb.c: 884:     timedResponseDelay = 5;
  8186   008A10  0E05               	movlw	5
  8187   008A12  0101               	movlb	1	; () banked
  8188   008A14  6F68               	movwf	_timedResponseDelay& (0+255),b
  8189                           
  8190                           ; BSR set to: 1
  8191                           ;../../VLCBlib_PIC/vlcb.c: 886:     for (i=0; i<9; i++) {
  8192   008A16  0E00               	movlw	0
  8193   008A18  6FCB               	movwf	powerUp@i& (0+255),b
  8194   008A1A                     l24932:
  8195                           
  8196                           ; BSR set to: 1
  8197                           ;../../VLCBlib_PIC/vlcb.c: 887:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8198   008A1A  51CB               	movf	powerUp@i& (0+255),w,b
  8199   008A1C  0D02               	mullw	2
  8200   008A1E  0E69               	movlw	low _services
  8201   008A20  24F3               	addwf	243,w,c
  8202   008A22  6EF6               	movwf	tblptrl,c
  8203   008A24  0EEE               	movlw	high _services
  8204   008A26  20F4               	addwfc	244,w,c
  8205   008A28  6EF7               	movwf	tblptrh,c
  8206   008A2A                     	if	1	;There are 3 active tblptr bytes
  8207   008A2A  6AF8               	clrf	tblptru,c
  8208   008A2C  0E00               	movlw	low (__mediumconst shr (0+16))
  8209   008A2E  22F8               	addwfc	tblptru,f,c
  8210   008A30                     	endif
  8211   008A30  0009               	tblrd		*+
  8212   008A32  50F5               	movf	tablat,w,c
  8213   008A34  0009               	tblrd		*+
  8214   008A36  10F5               	iorwf	tablat,w,c
  8215   008A38  B4D8               	btfsc	status,2,c
  8216   008A3A  D04B               	goto	u26889
  8217                           
  8218                           ; BSR set to: 1
  8219   008A3C  51CB               	movf	powerUp@i& (0+255),w,b
  8220   008A3E  0D02               	mullw	2
  8221   008A40  0E69               	movlw	low _services
  8222   008A42  24F3               	addwf	243,w,c
  8223   008A44  6EF6               	movwf	tblptrl,c
  8224   008A46  0EEE               	movlw	high _services
  8225   008A48  20F4               	addwfc	244,w,c
  8226   008A4A  6EF7               	movwf	tblptrh,c
  8227   008A4C                     	if	1	;There are 3 active tblptr bytes
  8228   008A4C  6AF8               	clrf	tblptru,c
  8229   008A4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8230   008A50  22F8               	addwfc	tblptru,f,c
  8231   008A52                     	endif
  8232   008A52  0009               	tblrd		*+
  8233   008A54  CFF5 F1C7          	movff	tablat,??_powerUp
  8234   008A58  0009               	tblrd		*+
  8235   008A5A  CFF5 F1C8          	movff	tablat,??_powerUp+1
  8236   008A5E  0E04               	movlw	4
  8237   008A60  27C7               	addwf	??_powerUp& (0+255),f,b
  8238   008A62  0E00               	movlw	0
  8239   008A64  23C8               	addwfc	(??_powerUp+1)& (0+255),f,b
  8240   008A66  C1C7  FFF6         	movff	??_powerUp,tblptrl
  8241   008A6A  C1C8  FFF7         	movff	??_powerUp+1,tblptrh
  8242   008A6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8243   008A6E  6AF8               	clrf	tblptru,c
  8244   008A70                     	endif
  8245   008A70                     	if	0	;tblptru may be non-zero
  8246   008A70                     	endif
  8247   008A70  0009               	tblrd		*+
  8248   008A72  50F5               	movf	tablat,w,c
  8249   008A74  0009               	tblrd		*+
  8250   008A76  10F5               	iorwf	tablat,w,c
  8251   008A78  B4D8               	btfsc	status,2,c
  8252   008A7A  D02B               	goto	u26889
  8253                           
  8254                           ; BSR set to: 1
  8255                           ;../../VLCBlib_PIC/vlcb.c: 888:             services[i]->powerUp();
  8256   008A7C  51CB               	movf	powerUp@i& (0+255),w,b
  8257   008A7E  0D02               	mullw	2
  8258   008A80  0E69               	movlw	low _services
  8259   008A82  24F3               	addwf	243,w,c
  8260   008A84  6EF6               	movwf	tblptrl,c
  8261   008A86  0EEE               	movlw	high _services
  8262   008A88  20F4               	addwfc	244,w,c
  8263   008A8A  6EF7               	movwf	tblptrh,c
  8264   008A8C                     	if	1	;There are 3 active tblptr bytes
  8265   008A8C  6AF8               	clrf	tblptru,c
  8266   008A8E  0E00               	movlw	low (__mediumconst shr (0+16))
  8267   008A90  22F8               	addwfc	tblptru,f,c
  8268   008A92                     	endif
  8269   008A92  0009               	tblrd		*+
  8270   008A94  CFF5 F1C7          	movff	tablat,??_powerUp
  8271   008A98  0009               	tblrd		*+
  8272   008A9A  CFF5 F1C8          	movff	tablat,??_powerUp+1
  8273   008A9E  0E04               	movlw	4
  8274   008AA0  27C7               	addwf	??_powerUp& (0+255),f,b
  8275   008AA2  0E00               	movlw	0
  8276   008AA4  23C8               	addwfc	(??_powerUp+1)& (0+255),f,b
  8277   008AA6  C1C7  FFF6         	movff	??_powerUp,tblptrl
  8278   008AAA  C1C8  FFF7         	movff	??_powerUp+1,tblptrh
  8279   008AAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8280   008AAE  6AF8               	clrf	tblptru,c
  8281   008AB0                     	endif
  8282   008AB0                     	if	0	;tblptru may be non-zero
  8283   008AB0                     	endif
  8284   008AB0  0009               	tblrd		*+
  8285   008AB2  CFF5 F1C9          	movff	tablat,??_powerUp+2
  8286   008AB6  0009               	tblrd		*+
  8287   008AB8  CFF5 F1CA          	movff	tablat,??_powerUp+3
  8288   008ABC  D801               	call	u26888
  8289   008ABE  D009               	goto	u26889
  8290   008AC0                     u26888:
  8291   008AC0  0005               	push	
  8292   008AC2  6EFA               	movwf	pclath,c
  8293   008AC4  51C9               	movf	(??_powerUp+2)& (0+255),w,b
  8294   008AC6  6EFD               	movwf	tosl,c
  8295   008AC8  51CA               	movf	(??_powerUp+3)& (0+255),w,b
  8296   008ACA  6EFE               	movwf	tosh,c
  8297   008ACC  6AFF               	clrf	tosu,c
  8298   008ACE  50FA               	movf	pclath,w,c
  8299   008AD0  0012               	return		;indir
  8300   008AD2                     u26889:
  8301                           
  8302                           ;../../VLCBlib_PIC/vlcb.c: 890:     }
  8303   008AD2  0101               	movlb	1	; () banked
  8304   008AD4  2BCB               	incf	powerUp@i& (0+255),f,b
  8305                           
  8306                           ; BSR set to: 1
  8307   008AD6  0E08               	movlw	8
  8308   008AD8  65CB               	cpfsgt	powerUp@i& (0+255),b
  8309   008ADA  D79F               	goto	l24932
  8310   008ADC  0012               	return	
  8311   008ADE                     __end_of_powerUp:
  8312                           	callstack 0
  8313                           
  8314 ;; *************** function _producerPowerUp *****************
  8315 ;; Defined at:
  8316 ;;		line 108 in file "../../VLCBlib_PIC/event_producer_happening.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  i               1   45[BANK0 ] unsigned char 
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      void 
  8323 ;; Registers used:
  8324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8334 ;;Total ram usage:        1 bytes
  8335 ;; Hardware stack levels used: 1
  8336 ;; Hardware stack levels required when called: 12
  8337 ;; This function calls:
  8338 ;;		Nothing
  8339 ;; This function is called by:
  8340 ;;		_powerUp
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text8
  8345   00C224                     __ptext8:
  8346                           	callstack 0
  8347   00C224                     _producerPowerUp:
  8348                           	callstack 17
  8349                           
  8350                           ;../../VLCBlib_PIC/event_producer_happening.c: 109:     uint8_t i;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 110:     for (i=1; i <= 1; i++) {
  8351                           
  8352                           ; BSR set to: 1
  8353                           ;incstack = 0
  8354   00C224  0E01               	movlw	1
  8355   00C226  0100               	movlb	0	; () banked
  8356   00C228  6F8D               	movwf	producerPowerUp@i& (0+255),b
  8357   00C22A                     l24776:
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;../../VLCBlib_PIC/event_producer_happening.c: 111:         producerDiagnostics[i].asUin
      +                          t = 0;
  8361   00C22A  518D               	movf	producerPowerUp@i& (0+255),w,b
  8362   00C22C  0D02               	mullw	2
  8363   00C22E  0EAD               	movlw	low _producerDiagnostics
  8364   00C230  24F3               	addwf	243,w,c
  8365   00C232  6ED9               	movwf	fsr2l,c
  8366   00C234  0E01               	movlw	high _producerDiagnostics
  8367   00C236  20F4               	addwfc	prodh,w,c
  8368   00C238  6EDA               	movwf	fsr2h,c
  8369   00C23A  6ADE               	clrf	postinc2,c
  8370   00C23C  6ADD               	clrf	postdec2,c
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;../../VLCBlib_PIC/event_producer_happening.c: 112:     }
  8374   00C23E  2B8D               	incf	producerPowerUp@i& (0+255),f,b
  8375                           
  8376                           ; BSR set to: 0
  8377   00C240  0E01               	movlw	1
  8378   00C242  658D               	cpfsgt	producerPowerUp@i& (0+255),b
  8379   00C244  D7F2               	goto	l24776
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;../../VLCBlib_PIC/event_producer_happening.c: 113:     producerDiagnostics[0].asUint = 
      +                          1;
  8383   00C246  0E00               	movlw	0
  8384   00C248  0101               	movlb	1	; () banked
  8385   00C24A  6FAE               	movwf	(_producerDiagnostics+1)& (0+255),b
  8386   00C24C  0E01               	movlw	1
  8387   00C24E  6FAD               	movwf	_producerDiagnostics& (0+255),b
  8388                           
  8389                           ; BSR set to: 1
  8390   00C250  0012               	return		;funcret
  8391   00C252                     __end_of_producerPowerUp:
  8392                           	callstack 0
  8393                           
  8394 ;; *************** function _canPowerUp *****************
  8395 ;; Defined at:
  8396 ;;		line 217 in file "../../VLCBlib_PIC/can18_ecan.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;		None
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;  temp            2   56[BANK0 ] int 
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8414 ;;Total ram usage:        3 bytes
  8415 ;; Hardware stack levels used: 1
  8416 ;; Hardware stack levels required when called: 14
  8417 ;; This function calls:
  8418 ;;		_readNVM
  8419 ;;		_tickGet
  8420 ;; This function is called by:
  8421 ;;		_powerUp
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text9
  8426   0070FA                     __ptext9:
  8427                           	callstack 0
  8428   0070FA                     _canPowerUp:
  8429                           	callstack 15
  8430                           
  8431                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 221:
      +                               rxQueue.readIndex = 0;
  8432                           
  8433                           ; BSR set to: 1
  8434                           ;incstack = 0
  8435   0070FA  0E00               	movlw	0
  8436   0070FC  6E51               	movwf	(_rxQueue+2)^0,c
  8437                           
  8438                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     rxQueue.writeIndex = 0;
  8439   0070FE  0E00               	movlw	0
  8440   007100  6E52               	movwf	(_rxQueue+3)^0,c
  8441                           
  8442                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     rxQueue.messages = rxBuffers;
  8443   007102  0EC8               	movlw	low _rxBuffers
  8444   007104  6E4F               	movwf	_rxQueue^0,c
  8445   007106  0E07               	movlw	high _rxBuffers
  8446   007108  6E50               	movwf	(_rxQueue+1)^0,c
  8447                           
  8448                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     rxQueue.size = 32;
  8449   00710A  0E20               	movlw	32
  8450   00710C  6E53               	movwf	(_rxQueue+4)^0,c
  8451                           
  8452                           ;../../VLCBlib_PIC/can18_ecan.c: 226:     txQueue.readIndex = 0;
  8453   00710E  0E00               	movlw	0
  8454   007110  6E4C               	movwf	(_txQueue+2)^0,c
  8455                           
  8456                           ;../../VLCBlib_PIC/can18_ecan.c: 227:     txQueue.writeIndex = 0;
  8457   007112  0E00               	movlw	0
  8458   007114  6E4D               	movwf	(_txQueue+3)^0,c
  8459                           
  8460                           ;../../VLCBlib_PIC/can18_ecan.c: 228:     txQueue.messages = txBuffers;
  8461   007116  0E00               	movlw	low _txBuffers
  8462   007118  6E4A               	movwf	_txQueue^0,c
  8463   00711A  0E05               	movlw	high _txBuffers
  8464   00711C  6E4B               	movwf	(_txQueue+1)^0,c
  8465                           
  8466                           ;../../VLCBlib_PIC/can18_ecan.c: 229:     txQueue.size = 8;
  8467   00711E  0E08               	movlw	8
  8468   007120  6E4E               	movwf	(_txQueue+4)^0,c
  8469                           
  8470                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8471   007122  0EFE               	movlw	254
  8472   007124  0100               	movlb	0	; () banked
  8473   007126  6F91               	movwf	readNVM@index& (0+255),b
  8474   007128  0E03               	movlw	3
  8475   00712A  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8476   00712C  0E00               	movlw	0
  8477   00712E  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8478   007130  0E00               	movlw	0
  8479   007132  ECD1  F05A         	call	_readNVM
  8480   007136  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8481   00713A  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8482                           
  8483                           ;../../VLCBlib_PIC/can18_ecan.c: 234:     if (temp < 0) {
  8484   00713E  0100               	movlb	0	; () banked
  8485   007140  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8486   007142  D003               	goto	l2460
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;../../VLCBlib_PIC/can18_ecan.c: 236:         canId = 0;
  8490   007144  0E00               	movlw	0
  8491   007146  6FB9               	movwf	_canId& (0+255),b
  8492                           
  8493                           ;../../VLCBlib_PIC/can18_ecan.c: 237:     } else {
  8494   007148  D002               	goto	l24264
  8495   00714A                     l2460:
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;../../VLCBlib_PIC/can18_ecan.c: 238:         canId = (uint8_t)temp;
  8499   00714A  C098  F0B9         	movff	canPowerUp@temp,_canId
  8500   00714E                     l24264:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;../../VLCBlib_PIC/can18_ecan.c: 242:     for (temp=1; temp <= 18; temp++) {
  8504   00714E  0E00               	movlw	0
  8505   007150  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8506   007152  0E01               	movlw	1
  8507   007154  6F98               	movwf	canPowerUp@temp& (0+255),b
  8508   007156                     l24270:
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;../../VLCBlib_PIC/can18_ecan.c: 243:         canDiagnostics[temp].asUint = 0;
  8512   007156  90D8               	bcf	status,0,c
  8513   007158  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8514   00715A  6ED9               	movwf	fsr2l,c
  8515   00715C  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8516   00715E  6EDA               	movwf	fsr2h,c
  8517   007160  0E6A               	movlw	low _canDiagnostics
  8518   007162  26D9               	addwf	fsr2l,f,c
  8519   007164  0E01               	movlw	high _canDiagnostics
  8520   007166  22DA               	addwfc	fsr2h,f,c
  8521   007168  6ADE               	clrf	postinc2,c
  8522   00716A  6ADD               	clrf	postdec2,c
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     }
  8526   00716C  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8527   00716E  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8528                           
  8529                           ; BSR set to: 0
  8530   007170  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8531   007172  D7F1               	goto	l24270
  8532   007174  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8533   007176  E104               	bnz	u26120
  8534   007178  0E13               	movlw	19
  8535   00717A  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8536   00717C  A0D8               	btfss	status,0,c
  8537   00717E  D7EB               	goto	l24270
  8538   007180                     u26120:
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;../../VLCBlib_PIC/can18_ecan.c: 245:     canDiagnostics[0x00].asUint = 18;
  8542   007180  0E00               	movlw	0
  8543   007182  0101               	movlb	1	; () banked
  8544   007184  6F6B               	movwf	(_canDiagnostics+1)& (0+255),b
  8545   007186  0E12               	movlw	18
  8546   007188  6F6A               	movwf	_canDiagnostics& (0+255),b
  8547                           
  8548                           ;../../VLCBlib_PIC/can18_ecan.c: 248:     canTransmitFailed=0;
  8549   00718A  0E00               	movlw	0
  8550   00718C  0100               	movlb	0	; () banked
  8551   00718E  6FB8               	movwf	_canTransmitFailed& (0+255),b
  8552                           
  8553                           ;../../VLCBlib_PIC/can18_ecan.c: 249:     IPR5 = 0;
  8554   007190  0E00               	movlw	0
  8555   007192  6E78               	movwf	120,c	;volatile
  8556                           
  8557                           ;../../VLCBlib_PIC/can18_ecan.c: 252:     CANCON = 0b10000000;
  8558   007194  0E80               	movlw	128
  8559   007196  6E6F               	movwf	111,c	;volatile
  8560   007198                     l2464:
  8561   007198  AE6E               	btfss	110,7,c	;volatile
  8562   00719A  D7FE               	goto	l2464
  8563                           
  8564                           ;../../VLCBlib_PIC/can18_ecan.c: 256:     ECANCON = 0b10110000;
  8565   00719C  0EB0               	movlw	176
  8566   00719E  6E72               	movwf	114,c	;volatile
  8567                           
  8568                           ;../../VLCBlib_PIC/can18_ecan.c: 257:     BSEL0 = 0;
  8569   0071A0  0E00               	movlw	0
  8570   0071A2  010E               	movlb	14	; () banked
  8571   0071A4  6F7D               	movwf	125,b	;volatile
  8572                           
  8573                           ;../../VLCBlib_PIC/can18_ecan.c: 281:       BRGCON1 = 0b00001111;
  8574   0071A6  0E0F               	movlw	15
  8575   0071A8  6F43               	movwf	67,b	;volatile
  8576                           
  8577                           ;../../VLCBlib_PIC/can18_ecan.c: 284:     BRGCON2 = 0b10011110;
  8578   0071AA  0E9E               	movlw	158
  8579   0071AC  6F44               	movwf	68,b	;volatile
  8580                           
  8581                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     BRGCON3 = 0b00000011;
  8582   0071AE  0E03               	movlw	3
  8583   0071B0  6F45               	movwf	69,b	;volatile
  8584                           
  8585                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     CIOCON = 0b00100000;
  8586   0071B2  0E20               	movlw	32
  8587   0071B4  6E70               	movwf	112,c	;volatile
  8588                           
  8589                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXM0SIDH = 0;
  8590   0071B6  0E00               	movlw	0
  8591   0071B8  6FF8               	movwf	248,b	;volatile
  8592                           
  8593                           ;../../VLCBlib_PIC/can18_ecan.c: 291:     RXM0SIDL = 0x08;
  8594   0071BA  0E08               	movlw	8
  8595   0071BC  6FF9               	movwf	249,b	;volatile
  8596                           
  8597                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXM0EIDH = 0;
  8598   0071BE  0E00               	movlw	0
  8599   0071C0  6FFA               	movwf	250,b	;volatile
  8600                           
  8601                           ;../../VLCBlib_PIC/can18_ecan.c: 293:     RXM0EIDL = 0;
  8602   0071C2  0E00               	movlw	0
  8603   0071C4  6FFB               	movwf	251,b	;volatile
  8604                           
  8605                           ;../../VLCBlib_PIC/can18_ecan.c: 295:     RXF0SIDL = 0x00;
  8606   0071C6  0E00               	movlw	0
  8607   0071C8  6FE1               	movwf	225,b	;volatile
  8608                           
  8609                           ;../../VLCBlib_PIC/can18_ecan.c: 297:     RXFBCON0 = 0;
  8610   0071CA  0E00               	movlw	0
  8611   0071CC  6F71               	movwf	113,b	;volatile
  8612                           
  8613                           ;../../VLCBlib_PIC/can18_ecan.c: 299:     MSEL0 = 0;
  8614   0071CE  0E00               	movlw	0
  8615   0071D0  6F79               	movwf	121,b	;volatile
  8616                           
  8617                           ;../../VLCBlib_PIC/can18_ecan.c: 301:     RXFCON0 = 1;
  8618   0071D2  0E01               	movlw	1
  8619   0071D4  6F46               	movwf	70,b	;volatile
  8620                           
  8621                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     RXB0CON = 0x00;
  8622   0071D6  0E00               	movlw	0
  8623   0071D8  6E60               	movwf	96,c	;volatile
  8624                           
  8625                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     RXB1CON = 0x00;
  8626   0071DA  0E00               	movlw	0
  8627   0071DC  010F               	movlb	15	; () banked
  8628   0071DE  6F30               	movwf	48,b	;volatile
  8629                           
  8630                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B0CON = 0;
  8631   0071E0  0E00               	movlw	0
  8632   0071E2  010E               	movlb	14	; () banked
  8633   0071E4  6F80               	movwf	128,b	;volatile
  8634                           
  8635                           ;../../VLCBlib_PIC/can18_ecan.c: 311:     B1CON = 0;
  8636   0071E6  0E00               	movlw	0
  8637   0071E8  6F90               	movwf	144,b	;volatile
  8638                           
  8639                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     B2CON = 0;
  8640   0071EA  0E00               	movlw	0
  8641   0071EC  6FA0               	movwf	160,b	;volatile
  8642                           
  8643                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     B3CON = 0;
  8644   0071EE  0E00               	movlw	0
  8645   0071F0  6FB0               	movwf	176,b	;volatile
  8646                           
  8647                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     B4CON = 0;
  8648   0071F2  0E00               	movlw	0
  8649   0071F4  6FC0               	movwf	192,b	;volatile
  8650                           
  8651                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     B5CON = 0;
  8652   0071F6  0E00               	movlw	0
  8653   0071F8  6FD0               	movwf	208,b	;volatile
  8654                           
  8655                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     BIE0 = 0;
  8656   0071FA  0E00               	movlw	0
  8657   0071FC  6F7E               	movwf	126,b	;volatile
  8658                           
  8659                           ; BSR set to: 14
  8660                           ;../../VLCBlib_PIC/can18_ecan.c: 318:     TXBIEbits.TXB0IE = 1;
  8661   0071FE  857F               	bsf	127,2,b	;volatile
  8662                           
  8663                           ; BSR set to: 14
  8664                           ;../../VLCBlib_PIC/can18_ecan.c: 319:     TXBIEbits.TXB1IE = 0;
  8665   007200  977F               	bcf	127,3,b	;volatile
  8666                           
  8667                           ; BSR set to: 14
  8668                           ;../../VLCBlib_PIC/can18_ecan.c: 320:     TXBIEbits.TXB2IE = 0;
  8669   007202  997F               	bcf	127,4,b	;volatile
  8670                           
  8671                           ;../../VLCBlib_PIC/can18_ecan.c: 322:     CANCON = 0;
  8672   007204  0E00               	movlw	0
  8673   007206  6E6F               	movwf	111,c	;volatile
  8674   007208                     l2467:
  8675   007208  BE6E               	btfsc	110,7,c	;volatile
  8676   00720A  D7FE               	goto	l2467
  8677                           
  8678                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0CON = 0;
  8679   00720C  0E00               	movlw	0
  8680   00720E  010F               	movlb	15	; () banked
  8681   007210  6F20               	movwf	32,b	;volatile
  8682                           
  8683                           ; BSR set to: 15
  8684                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0CONbits.TXPRI0 = 0;
  8685   007212  9120               	bcf	32,0,b	;volatile
  8686                           
  8687                           ; BSR set to: 15
  8688                           ;../../VLCBlib_PIC/can18_ecan.c: 329:     TXB0CONbits.TXPRI1 = 0;
  8689   007214  9320               	bcf	32,1,b	;volatile
  8690                           
  8691                           ;../../VLCBlib_PIC/can18_ecan.c: 330:     TXB0DLC = 0;
  8692   007216  0E00               	movlw	0
  8693   007218  6F25               	movwf	37,b	;volatile
  8694                           
  8695                           ;../../VLCBlib_PIC/can18_ecan.c: 332:     TXB0SIDH = 0;
  8696   00721A  0E00               	movlw	0
  8697   00721C  6F21               	movwf	33,b	;volatile
  8698                           
  8699                           ;../../VLCBlib_PIC/can18_ecan.c: 333:     TXB0SIDL = 0;
  8700   00721E  0E00               	movlw	0
  8701   007220  6F22               	movwf	34,b	;volatile
  8702                           
  8703                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1CON = 0;
  8704   007222  0E00               	movlw	0
  8705   007224  6F10               	movwf	16,b	;volatile
  8706                           
  8707                           ; BSR set to: 15
  8708                           ;../../VLCBlib_PIC/can18_ecan.c: 338:     TXB1CONbits.TXPRI0 = 0;
  8709   007226  9110               	bcf	16,0,b	;volatile
  8710                           
  8711                           ; BSR set to: 15
  8712                           ;../../VLCBlib_PIC/can18_ecan.c: 339:     TXB1CONbits.TXPRI1 = 1;
  8713   007228  8310               	bsf	16,1,b	;volatile
  8714                           
  8715                           ;../../VLCBlib_PIC/can18_ecan.c: 340:     TXB1DLC = 0x40;
  8716   00722A  0E40               	movlw	64
  8717   00722C  6F15               	movwf	21,b	;volatile
  8718                           
  8719                           ; BSR set to: 15
  8720                           ;../../VLCBlib_PIC/can18_ecan.c: 341:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8721   00722E  0E8A               	movlw	low (_canPri+4)
  8722   007230  6EF6               	movwf	tblptrl,c
  8723   007232  0EEE               	movlw	high (_canPri+4)
  8724   007234  6EF7               	movwf	tblptrh,c
  8725   007236                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8726   007236  6AF8               	clrf	tblptru,c
  8727   007238                     	endif
  8728   007238                     	if	0	;tblptru may be non-zero
  8729   007238                     	endif
  8730   007238  0008               	tblrd		*
  8731   00723A  CFF5 F097          	movff	tablat,??_canPowerUp
  8732   00723E  0100               	movlb	0	; () banked
  8733   007240  39B9               	swapf	_canId& (0+255),w,b
  8734   007242  46E8               	rlncf	wreg,f,c
  8735   007244  0B1F               	andlw	31
  8736   007246  0B0F               	andlw	15
  8737   007248  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8738   00724A  010F               	movlb	15	; () banked
  8739   00724C  6F11               	movwf	17,b	;volatile
  8740                           
  8741                           ; BSR set to: 15
  8742                           ;../../VLCBlib_PIC/can18_ecan.c: 342:     TXB1SIDL = TXB0SIDL;
  8743   00724E  CF22 FF12          	movff	3874,3858	;volatile
  8744                           
  8745                           ; BSR set to: 15
  8746                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2CON = 0;
  8747   007252  0E00               	movlw	0
  8748   007254  6F00               	movwf	0,b	;volatile
  8749                           
  8750                           ; BSR set to: 15
  8751                           ;../../VLCBlib_PIC/can18_ecan.c: 347:     TXB2CONbits.TXPRI0 = 1;
  8752   007256  8100               	bsf	0,0,b	;volatile
  8753                           
  8754                           ; BSR set to: 15
  8755                           ;../../VLCBlib_PIC/can18_ecan.c: 348:     TXB2CONbits.TXPRI1 = 1;
  8756   007258  8300               	bsf	0,1,b	;volatile
  8757                           
  8758                           ; BSR set to: 15
  8759                           ;../../VLCBlib_PIC/can18_ecan.c: 349:     TXB2DLC = 0;
  8760   00725A  0E00               	movlw	0
  8761   00725C  6F05               	movwf	5,b	;volatile
  8762                           
  8763                           ; BSR set to: 15
  8764                           ;../../VLCBlib_PIC/can18_ecan.c: 350:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8765   00725E  0E8A               	movlw	low (_canPri+4)
  8766   007260  6EF6               	movwf	tblptrl,c
  8767   007262  0EEE               	movlw	high (_canPri+4)
  8768   007264  6EF7               	movwf	tblptrh,c
  8769   007266                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8770   007266  6AF8               	clrf	tblptru,c
  8771   007268                     	endif
  8772   007268                     	if	0	;tblptru may be non-zero
  8773   007268                     	endif
  8774   007268  0008               	tblrd		*
  8775   00726A  CFF5 F097          	movff	tablat,??_canPowerUp
  8776   00726E  0100               	movlb	0	; () banked
  8777   007270  39B9               	swapf	_canId& (0+255),w,b
  8778   007272  46E8               	rlncf	wreg,f,c
  8779   007274  0B1F               	andlw	31
  8780   007276  0B0F               	andlw	15
  8781   007278  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8782   00727A  010F               	movlb	15	; () banked
  8783   00727C  6F01               	movwf	1,b	;volatile
  8784                           
  8785                           ; BSR set to: 15
  8786                           ;../../VLCBlib_PIC/can18_ecan.c: 351:     TXB2SIDL = TXB0SIDL;
  8787   00727E  CF22 FF02          	movff	3874,3842	;volatile
  8788                           
  8789                           ;../../VLCBlib_PIC/can18_ecan.c: 355:     enumerationState = NO_ENUMERATION;
  8790   007282  0E00               	movlw	0
  8791   007284  0100               	movlb	0	; () banked
  8792   007286  6FB7               	movwf	_enumerationState& (0+255),b
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     enumerationStartTime.val = tickGet();
  8796   007288  ECE5  F05B         	call	_tickGet	;wreg free
  8797   00728C  C08D  F03B         	movff	?_tickGet,_enumerationStartTime
  8798   007290  C08E  F03C         	movff	?_tickGet+1,_enumerationStartTime+1
  8799   007294  C08F  F03D         	movff	?_tickGet+2,_enumerationStartTime+2
  8800   007298  C090  F03E         	movff	?_tickGet+3,_enumerationStartTime+3
  8801                           
  8802                           ;../../VLCBlib_PIC/can18_ecan.c: 359:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8803   00729C  C03B  F03F         	movff	_enumerationStartTime,_canTransmitTimeout
  8804   0072A0  C03C  F040         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8805   0072A4  C03D  F041         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8806   0072A8  C03E  F042         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8807                           
  8808                           ;../../VLCBlib_PIC/can18_ecan.c: 361:     PIE5bits.FIFOWMIE = 1;
  8809   0072AC  8076               	bsf	118,0,c	;volatile
  8810                           
  8811                           ;../../VLCBlib_PIC/can18_ecan.c: 362:     PIE5bits.TXBnIE = 1;
  8812   0072AE  8876               	bsf	118,4,c	;volatile
  8813                           
  8814                           ;../../VLCBlib_PIC/can18_ecan.c: 363:     PIE5bits.ERRIE = 1;
  8815   0072B0  8A76               	bsf	118,5,c	;volatile
  8816   0072B2  0012               	return		;funcret
  8817   0072B4                     __end_of_canPowerUp:
  8818                           	callstack 0
  8819                           
  8820 ;; *************** function _nvPowerUp *****************
  8821 ;; Defined at:
  8822 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;		None
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  i               1   60[BANK0 ] unsigned char 
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      void 
  8829 ;; Registers used:
  8830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8839 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8840 ;;Total ram usage:        1 bytes
  8841 ;; Hardware stack levels used: 1
  8842 ;; Hardware stack levels required when called: 15
  8843 ;; This function calls:
  8844 ;;		_loadNvCache
  8845 ;; This function is called by:
  8846 ;;		_powerUp
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text10
  8851   00C03E                     __ptext10:
  8852                           	callstack 0
  8853   00C03E                     _nvPowerUp:
  8854                           	callstack 14
  8855                           
  8856                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
  8857                           
  8858                           ;incstack = 0
  8859   00C03E  0E01               	movlw	1
  8860   00C040  0100               	movlb	0	; () banked
  8861   00C042  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8862   00C044                     l24014:
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
  8866   00C044  519C               	movf	nvPowerUp@i& (0+255),w,b
  8867   00C046  0D02               	mullw	2
  8868   00C048  0EA7               	movlw	low _nvDiagnostics
  8869   00C04A  24F3               	addwf	243,w,c
  8870   00C04C  6ED9               	movwf	fsr2l,c
  8871   00C04E  0E01               	movlw	high _nvDiagnostics
  8872   00C050  20F4               	addwfc	prodh,w,c
  8873   00C052  6EDA               	movwf	fsr2h,c
  8874   00C054  6ADE               	clrf	postinc2,c
  8875   00C056  6ADD               	clrf	postdec2,c
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;../../VLCBlib_PIC/nv.c: 141:     }
  8879   00C058  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8880                           
  8881                           ; BSR set to: 0
  8882   00C05A  0E02               	movlw	2
  8883   00C05C  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8884   00C05E  D7F2               	goto	l24014
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
  8888   00C060  0E00               	movlw	0
  8889   00C062  0101               	movlb	1	; () banked
  8890   00C064  6FA8               	movwf	(_nvDiagnostics+1)& (0+255),b
  8891   00C066  0E02               	movlw	2
  8892   00C068  6FA7               	movwf	_nvDiagnostics& (0+255),b
  8893                           
  8894                           ; BSR set to: 1
  8895                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
  8896   00C06A  EC1D  F05E         	call	_loadNvCache	;wreg free
  8897   00C06E  0012               	return		;funcret
  8898   00C070                     __end_of_nvPowerUp:
  8899                           	callstack 0
  8900                           
  8901 ;; *************** function _mnsPowerUp *****************
  8902 ;; Defined at:
  8903 ;;		line 299 in file "../../VLCBlib_PIC/mns.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;		None
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  temp            2   56[BANK0 ] int 
  8908 ;;  i               1   55[BANK0 ] unsigned char 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1    wreg      void 
  8911 ;; Registers used:
  8912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8919 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8921 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8922 ;;Total ram usage:        3 bytes
  8923 ;; Hardware stack levels used: 1
  8924 ;; Hardware stack levels required when called: 14
  8925 ;; This function calls:
  8926 ;;		_readNVM
  8927 ;;		_setLEDsByMode
  8928 ;;		_tickGet
  8929 ;; This function is called by:
  8930 ;;		_powerUp
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text11
  8935   008038                     __ptext11:
  8936                           	callstack 0
  8937   008038                     _mnsPowerUp:
  8938                           	callstack 15
  8939                           
  8940                           ;../../VLCBlib_PIC/mns.c: 300:     int temp;;../../VLCBlib_PIC/mns.c: 301:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 303:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8941                           
  8942                           ;incstack = 0
  8943   008038  0EFD               	movlw	253
  8944   00803A  0100               	movlb	0	; () banked
  8945   00803C  6F91               	movwf	readNVM@index& (0+255),b
  8946   00803E  0E03               	movlw	3
  8947   008040  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8948   008042  0E00               	movlw	0
  8949   008044  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8950   008046  0E00               	movlw	0
  8951   008048  ECD1  F05A         	call	_readNVM
  8952   00804C  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8953   008050  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8954                           
  8955                           ;../../VLCBlib_PIC/mns.c: 304:     if (temp < 0) {
  8956   008054  0100               	movlb	0	; () banked
  8957   008056  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8958   008058  D005               	goto	l1445
  8959   00805A                     u25210:
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;../../VLCBlib_PIC/mns.c: 305:         nn.bytes.hi = 0;
  8963   00805A  0E00               	movlw	0
  8964   00805C  6FB6               	movwf	(_nn+1)& (0+255),b
  8965                           
  8966                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.lo = 0;
  8967   00805E  0E00               	movlw	0
  8968   008060  6FB5               	movwf	_nn& (0+255),b
  8969                           
  8970                           ;../../VLCBlib_PIC/mns.c: 307:     } else {
  8971   008062  D014               	goto	l23514
  8972   008064                     l1445:
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;../../VLCBlib_PIC/mns.c: 308:         nn.bytes.hi = (uint8_t)temp;
  8976   008064  C098  F0B6         	movff	mnsPowerUp@temp,_nn+1
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;../../VLCBlib_PIC/mns.c: 309:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8980   008068  0EFC               	movlw	252
  8981   00806A  6F91               	movwf	readNVM@index& (0+255),b
  8982   00806C  0E03               	movlw	3
  8983   00806E  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8984   008070  0E00               	movlw	0
  8985   008072  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8986   008074  0E00               	movlw	0
  8987   008076  ECD1  F05A         	call	_readNVM
  8988   00807A  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8989   00807E  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8990                           
  8991                           ;../../VLCBlib_PIC/mns.c: 310:         if (temp < 0) {
  8992   008082  0100               	movlb	0	; () banked
  8993   008084  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8994   008086  D7E9               	goto	u25210
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;../../VLCBlib_PIC/mns.c: 314:             nn.bytes.lo = (uint8_t)temp;
  8998   008088  C098  F0B5         	movff	mnsPowerUp@temp,_nn
  8999   00808C                     l23514:
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;../../VLCBlib_PIC/mns.c: 317:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  9003   00808C  0EFB               	movlw	251
  9004   00808E  6F91               	movwf	readNVM@index& (0+255),b
  9005   008090  0E03               	movlw	3
  9006   008092  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9007   008094  0E00               	movlw	0
  9008   008096  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9009   008098  0E00               	movlw	0
  9010   00809A  ECD1  F05A         	call	_readNVM
  9011   00809E  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  9012   0080A2  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  9013                           
  9014                           ;../../VLCBlib_PIC/mns.c: 318:     if (temp < 0) {
  9015   0080A6  0100               	movlb	0	; () banked
  9016   0080A8  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  9017   0080AA  D002               	goto	l1449
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = MODE_UNINITIALISED;
  9021   0080AC  69C4               	setf	_mode_state& (0+255),b
  9022                           
  9023                           ;../../VLCBlib_PIC/mns.c: 320:     } else {
  9024   0080AE  D002               	goto	l1450
  9025   0080B0                     l1449:
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;../../VLCBlib_PIC/mns.c: 321:         mode_state = (uint8_t)temp;
  9029   0080B0  C098  F0C4         	movff	mnsPowerUp@temp,_mode_state
  9030   0080B4                     l1450:
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;../../VLCBlib_PIC/mns.c: 323:     setupModePreviousMode = mode_state;
  9034   0080B4  C0C4  F0C1         	movff	_mode_state,_setupModePreviousMode
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;../../VLCBlib_PIC/mns.c: 324:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
  9038   0080B8  0EF9               	movlw	249
  9039   0080BA  6F91               	movwf	readNVM@index& (0+255),b
  9040   0080BC  0E03               	movlw	3
  9041   0080BE  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9042   0080C0  0E00               	movlw	0
  9043   0080C2  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9044   0080C4  0E00               	movlw	0
  9045   0080C6  ECD1  F05A         	call	_readNVM
  9046   0080CA  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  9047   0080CE  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  9048                           
  9049                           ;../../VLCBlib_PIC/mns.c: 325:     if (temp < 0) {
  9050   0080D2  0100               	movlb	0	; () banked
  9051   0080D4  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  9052   0080D6  D004               	goto	l1451
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = 4;
  9056   0080D8  0E04               	movlw	4
  9057   0080DA  0101               	movlb	1	; () banked
  9058   0080DC  6F69               	movwf	_mode_flags& (0+255),b
  9059                           
  9060                           ;../../VLCBlib_PIC/mns.c: 327:     } else {
  9061   0080DE  D002               	goto	l23526
  9062   0080E0                     l1451:
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;../../VLCBlib_PIC/mns.c: 328:         mode_flags = (uint8_t)temp;
  9066   0080E0  C098  F169         	movff	mnsPowerUp@temp,_mode_flags
  9067   0080E4                     l23526:
  9068                           
  9069                           ;../../VLCBlib_PIC/mns.c: 331:     setLEDsByMode();
  9070   0080E4  EC51  F060         	call	_setLEDsByMode	;wreg free
  9071                           
  9072                           ;../../VLCBlib_PIC/mns.c: 333:     pbTimer.val = tickGet();
  9073   0080E8  ECE5  F05B         	call	_tickGet	;wreg free
  9074   0080EC  C08D  F0A9         	movff	?_tickGet,_pbTimer
  9075   0080F0  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
  9076   0080F4  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
  9077   0080F8  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
  9078                           
  9079                           ;../../VLCBlib_PIC/mns.c: 334:     pbWasPushed = FALSE;
  9080   0080FC  0E00               	movlw	0
  9081   0080FE  0100               	movlb	0	; () banked
  9082   008100  6FC0               	movwf	_pbWasPushed& (0+255),b
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;../../VLCBlib_PIC/mns.c: 338:     for (i=1; i<= 6; i++) {
  9086   008102  0E01               	movlw	1
  9087   008104  6F97               	movwf	mnsPowerUp@i& (0+255),b
  9088   008106                     l23536:
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;../../VLCBlib_PIC/mns.c: 339:         mnsDiagnostics[i].asInt = 0;
  9092   008106  5197               	movf	mnsPowerUp@i& (0+255),w,b
  9093   008108  0D02               	mullw	2
  9094   00810A  0E90               	movlw	low _mnsDiagnostics
  9095   00810C  24F3               	addwf	243,w,c
  9096   00810E  6ED9               	movwf	fsr2l,c
  9097   008110  0E01               	movlw	high _mnsDiagnostics
  9098   008112  20F4               	addwfc	prodh,w,c
  9099   008114  6EDA               	movwf	fsr2h,c
  9100   008116  6ADE               	clrf	postinc2,c
  9101   008118  6ADD               	clrf	postdec2,c
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;../../VLCBlib_PIC/mns.c: 340:     }
  9105   00811A  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  9106                           
  9107                           ; BSR set to: 0
  9108   00811C  0E06               	movlw	6
  9109   00811E  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  9110   008120  D7F2               	goto	l23536
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;../../VLCBlib_PIC/mns.c: 341:     mnsDiagnostics[0x00].asInt = 6;
  9114   008122  0E00               	movlw	0
  9115   008124  0101               	movlb	1	; () banked
  9116   008126  6F91               	movwf	(_mnsDiagnostics+1)& (0+255),b
  9117   008128  0E06               	movlw	6
  9118   00812A  6F90               	movwf	_mnsDiagnostics& (0+255),b
  9119                           
  9120                           ;../../VLCBlib_PIC/mns.c: 343:     heartbeatSequence = 0;
  9121   00812C  0E00               	movlw	0
  9122   00812E  0100               	movlb	0	; () banked
  9123   008130  6FBF               	movwf	_heartbeatSequence& (0+255),b
  9124                           
  9125                           ;../../VLCBlib_PIC/mns.c: 344:     heartbeatTimer.val = 0;
  9126   008132  0E00               	movlw	0
  9127   008134  0101               	movlb	1	; () banked
  9128   008136  6F50               	movwf	_heartbeatTimer& (0+255),b
  9129   008138  0E00               	movlw	0
  9130   00813A  6F51               	movwf	(_heartbeatTimer+1)& (0+255),b
  9131   00813C  0E00               	movlw	0
  9132   00813E  6F52               	movwf	(_heartbeatTimer+2)& (0+255),b
  9133   008140  0E00               	movlw	0
  9134   008142  6F53               	movwf	(_heartbeatTimer+3)& (0+255),b
  9135                           
  9136                           ;../../VLCBlib_PIC/mns.c: 345:     uptimeTimer.val = 0;
  9137   008144  0E00               	movlw	0
  9138   008146  6F4C               	movwf	_uptimeTimer& (0+255),b
  9139   008148  0E00               	movlw	0
  9140   00814A  6F4D               	movwf	(_uptimeTimer+1)& (0+255),b
  9141   00814C  0E00               	movlw	0
  9142   00814E  6F4E               	movwf	(_uptimeTimer+2)& (0+255),b
  9143   008150  0E00               	movlw	0
  9144   008152  6F4F               	movwf	(_uptimeTimer+3)& (0+255),b
  9145                           
  9146                           ; BSR set to: 1
  9147   008154  0012               	return		;funcret
  9148   008156                     __end_of_mnsPowerUp:
  9149                           	callstack 0
  9150                           
  9151 ;; *************** function _ackPowerUp *****************
  9152 ;; Defined at:
  9153 ;;		line 97 in file "../../VLCBlib_PIC/event_acknowledge.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;		None
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;  i               1   45[BANK0 ] unsigned char 
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  1    wreg      void 
  9160 ;; Registers used:
  9161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9162 ;; Tracked objects:
  9163 ;;		On entry : 0/0
  9164 ;;		On exit  : 0/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9168 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9170 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9171 ;;Total ram usage:        1 bytes
  9172 ;; Hardware stack levels used: 1
  9173 ;; Hardware stack levels required when called: 12
  9174 ;; This function calls:
  9175 ;;		Nothing
  9176 ;; This function is called by:
  9177 ;;		_powerUp
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text12
  9182   00C252                     __ptext12:
  9183                           	callstack 0
  9184   00C252                     _ackPowerUp:
  9185                           	callstack 17
  9186                           
  9187                           ;../../VLCBlib_PIC/event_acknowledge.c: 98:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 101:     for (i=1; i<= 1; i++) {
  9188                           
  9189                           ; BSR set to: 1
  9190                           ;incstack = 0
  9191   00C252  0E01               	movlw	1
  9192   00C254  0100               	movlb	0	; () banked
  9193   00C256  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9194   00C258                     l23414:
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;../../VLCBlib_PIC/event_acknowledge.c: 102:         ackDiagnostics[i].asUint = 0;
  9198   00C258  518D               	movf	ackPowerUp@i& (0+255),w,b
  9199   00C25A  0D02               	mullw	2
  9200   00C25C  0EB5               	movlw	low _ackDiagnostics
  9201   00C25E  24F3               	addwf	243,w,c
  9202   00C260  6ED9               	movwf	fsr2l,c
  9203   00C262  0E01               	movlw	high _ackDiagnostics
  9204   00C264  20F4               	addwfc	prodh,w,c
  9205   00C266  6EDA               	movwf	fsr2h,c
  9206   00C268  6ADE               	clrf	postinc2,c
  9207   00C26A  6ADD               	clrf	postdec2,c
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;../../VLCBlib_PIC/event_acknowledge.c: 103:     }
  9211   00C26C  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9212                           
  9213                           ; BSR set to: 0
  9214   00C26E  0E01               	movlw	1
  9215   00C270  658D               	cpfsgt	ackPowerUp@i& (0+255),b
  9216   00C272  D7F2               	goto	l23414
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;../../VLCBlib_PIC/event_acknowledge.c: 104:     ackDiagnostics[0x00].asUint = 1;
  9220   00C274  0E00               	movlw	0
  9221   00C276  0101               	movlb	1	; () banked
  9222   00C278  6FB6               	movwf	(_ackDiagnostics+1)& (0+255),b
  9223   00C27A  0E01               	movlw	1
  9224   00C27C  6FB5               	movwf	_ackDiagnostics& (0+255),b
  9225                           
  9226                           ; BSR set to: 1
  9227   00C27E  0012               	return		;funcret
  9228   00C280                     __end_of_ackPowerUp:
  9229                           	callstack 0
  9230                           
  9231 ;; *************** function _bootPowerUp *****************
  9232 ;; Defined at:
  9233 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;		None
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;  a               3   58[BANK0 ] unsigned um
  9238 ;;  i               1   57[BANK0 ] unsigned char 
  9239 ;;  found           1   56[BANK0 ] unsigned char 
  9240 ;;  b               1   55[BANK0 ] unsigned char 
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9251 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9253 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9254 ;;Total ram usage:        6 bytes
  9255 ;; Hardware stack levels used: 1
  9256 ;; Hardware stack levels required when called: 14
  9257 ;; This function calls:
  9258 ;;		_readNVM
  9259 ;; This function is called by:
  9260 ;;		_powerUp
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           	psect	text13
  9265   00930E                     __ptext13:
  9266                           	callstack 0
  9267   00930E                     _bootPowerUp:
  9268                           	callstack 15
  9269                           
  9270                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
  9271                           
  9272                           ; BSR set to: 1
  9273                           ;incstack = 0
  9274   00930E  0E00               	movlw	0
  9275   009310  0100               	movlb	0	; () banked
  9276   009312  6FC8               	movwf	_bootloaderType& (0+255),b
  9277                           
  9278                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
  9279   009314  0E00               	movlw	0
  9280   009316  6FC7               	movwf	_bootloaderVersion& (0+255),b
  9281                           
  9282                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
  9283   009318  0E00               	movlw	0
  9284   00931A  6F9A               	movwf	bootPowerUp@a& (0+255),b
  9285   00931C  0E00               	movlw	0
  9286   00931E  6F9B               	movwf	(bootPowerUp@a+1)& (0+255),b
  9287   009320  0E00               	movlw	0
  9288   009322  6F9C               	movwf	(bootPowerUp@a+2)& (0+255),b
  9289   009324                     l23342:
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
  9293   009324  0E00               	movlw	0
  9294   009326  6F99               	movwf	bootPowerUp@i& (0+255),b
  9295   009328                     l23348:
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
  9299   009328  5199               	movf	bootPowerUp@i& (0+255),w,b
  9300   00932A  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9301   00932C  6F91               	movwf	readNVM@index& (0+255),b
  9302   00932E  0E00               	movlw	0
  9303   009330  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9304   009332  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9305   009334  0E00               	movlw	0
  9306   009336  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9307   009338  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9308   00933A  0E01               	movlw	1
  9309   00933C  ECD1  F05A         	call	_readNVM
  9310   009340  0100               	movlb	0	; () banked
  9311   009342  5191               	movf	?_readNVM& (0+255),w,b
  9312   009344  6F97               	movwf	bootPowerUp@b& (0+255),b
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
  9316   009346  0E7B               	movlw	low _bl_version
  9317   009348  2599               	addwf	bootPowerUp@i& (0+255),w,b
  9318   00934A  6EF6               	movwf	tblptrl,c
  9319   00934C  6AF7               	clrf	tblptrh,c
  9320   00934E  0EEE               	movlw	high _bl_version
  9321   009350  22F7               	addwfc	tblptrh,f,c
  9322   009352                     	if	1	;There are 3 active tblptr bytes
  9323   009352  6AF8               	clrf	tblptru,c
  9324   009354  0E00               	movlw	low (__mediumconst shr (0+16))
  9325   009356  22F8               	addwfc	tblptru,f,c
  9326   009358                     	endif
  9327   009358  0008               	tblrd		*
  9328   00935A  50F5               	movf	tablat,w,c
  9329   00935C  1997               	xorwf	bootPowerUp@b& (0+255),w,b
  9330   00935E  B4D8               	btfsc	status,2,c
  9331   009360  D003               	goto	l23356
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
  9335   009362  0E00               	movlw	0
  9336   009364  6F98               	movwf	bootPowerUp@found& (0+255),b
  9337                           
  9338                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
  9339   009366  D006               	goto	u25030
  9340   009368                     l23356:
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
  9344   009368  0E01               	movlw	1
  9345   00936A  6F98               	movwf	bootPowerUp@found& (0+255),b
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;../../VLCBlib_PIC/boot.c: 217:         }
  9349   00936C  2B99               	incf	bootPowerUp@i& (0+255),f,b
  9350                           
  9351                           ; BSR set to: 0
  9352   00936E  0E0A               	movlw	10
  9353   009370  6599               	cpfsgt	bootPowerUp@i& (0+255),b
  9354   009372  D7DA               	goto	l23348
  9355   009374                     u25030:
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
  9359   009374  5198               	movf	bootPowerUp@found& (0+255),w,b
  9360   009376  B4D8               	btfsc	status,2,c
  9361   009378  D01F               	goto	l1264
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
  9365   00937A  0E0B               	movlw	11
  9366   00937C  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9367   00937E  6F91               	movwf	readNVM@index& (0+255),b
  9368   009380  0E00               	movlw	0
  9369   009382  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9370   009384  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9371   009386  0E00               	movlw	0
  9372   009388  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9373   00938A  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9374   00938C  0E01               	movlw	1
  9375   00938E  ECD1  F05A         	call	_readNVM
  9376   009392  0100               	movlb	0	; () banked
  9377   009394  5191               	movf	?_readNVM& (0+255),w,b
  9378   009396  6FC8               	movwf	_bootloaderType& (0+255),b
  9379                           
  9380                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
  9381   009398  0E0C               	movlw	12
  9382   00939A  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9383   00939C  6F91               	movwf	readNVM@index& (0+255),b
  9384   00939E  0E00               	movlw	0
  9385   0093A0  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9386   0093A2  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9387   0093A4  0E00               	movlw	0
  9388   0093A6  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9389   0093A8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9390   0093AA  0E01               	movlw	1
  9391   0093AC  ECD1  F05A         	call	_readNVM
  9392   0093B0  0100               	movlb	0	; () banked
  9393   0093B2  5191               	movf	?_readNVM& (0+255),w,b
  9394   0093B4  6FC7               	movwf	_bootloaderVersion& (0+255),b
  9395   0093B6  0012               	return	
  9396   0093B8                     l1264:
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;../../VLCBlib_PIC/boot.c: 223:     }
  9400   0093B8  0E01               	movlw	1
  9401   0093BA  279A               	addwf	bootPowerUp@a& (0+255),f,b
  9402   0093BC  0E00               	movlw	0
  9403   0093BE  239B               	addwfc	(bootPowerUp@a+1)& (0+255),f,b
  9404   0093C0  0E00               	movlw	0
  9405   0093C2  239C               	addwfc	(bootPowerUp@a+2)& (0+255),f,b
  9406                           
  9407                           ; BSR set to: 0
  9408   0093C4  519C               	movf	(bootPowerUp@a+2)& (0+255),w,b
  9409   0093C6  E106               	bnz	u25050
  9410   0093C8  299A               	incf	bootPowerUp@a& (0+255),w,b
  9411   0093CA  0E07               	movlw	7
  9412   0093CC  599B               	subwfb	(bootPowerUp@a+1)& (0+255),w,b
  9413   0093CE  B0D8               	btfsc	status,0,c
  9414   0093D0  0012               	return	
  9415   0093D2  D7A8               	goto	l23342
  9416   0093D4                     u25050:
  9417                           
  9418                           ; BSR set to: 0
  9419   0093D4  0012               	return		;funcret
  9420   0093D6                     __end_of_bootPowerUp:
  9421                           	callstack 0
  9422                           
  9423 ;; *************** function _consumer2QPowerUp *****************
  9424 ;; Defined at:
  9425 ;;		line 109 in file "../event_consumerDualActionQueue.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;		None
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;		None
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1    wreg      void 
  9432 ;; Registers used:
  9433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9443 ;;Total ram usage:        0 bytes
  9444 ;; Hardware stack levels used: 1
  9445 ;; Hardware stack levels required when called: 12
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_powerUp
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text14
  9454   00BCCE                     __ptext14:
  9455                           	callstack 0
  9456   00BCCE                     _consumer2QPowerUp:
  9457                           	callstack 17
  9458                           
  9459                           ;../event_consumerDualActionQueue.c: 110:     for (normalReadIndex=1; normalReadIndex <=
      +                           1; normalReadIndex++) {
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;incstack = 0
  9463   00BCCE  0E01               	movlw	1
  9464   00BCD0  0100               	movlb	0	; () banked
  9465   00BCD2  6FCD               	movwf	_normalReadIndex& (0+255),b
  9466   00BCD4                     l23144:
  9467                           
  9468                           ; BSR set to: 0
  9469   00BCD4  0E01               	movlw	1
  9470   00BCD6  65CD               	cpfsgt	_normalReadIndex& (0+255),b
  9471   00BCD8  D001               	goto	l23148
  9472   00BCDA  D00C               	goto	l23154
  9473   00BCDC                     l23148:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;../event_consumerDualActionQueue.c: 111:         consumer2QDiagnostics[normalReadIndex]
      +                          .asUint = 0;
  9477   00BCDC  51CD               	movf	_normalReadIndex& (0+255),w,b
  9478   00BCDE  0D02               	mullw	2
  9479   00BCE0  0EB9               	movlw	low _consumer2QDiagnostics
  9480   00BCE2  24F3               	addwf	243,w,c
  9481   00BCE4  6ED9               	movwf	fsr2l,c
  9482   00BCE6  0E01               	movlw	high _consumer2QDiagnostics
  9483   00BCE8  20F4               	addwfc	prodh,w,c
  9484   00BCEA  6EDA               	movwf	fsr2h,c
  9485   00BCEC  6ADE               	clrf	postinc2,c
  9486   00BCEE  6ADD               	clrf	postdec2,c
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;../event_consumerDualActionQueue.c: 112:     }
  9490   00BCF0  2BCD               	incf	_normalReadIndex& (0+255),f,b
  9491   00BCF2  D7F0               	goto	l23144
  9492   00BCF4                     l23154:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;../event_consumerDualActionQueue.c: 113:     consumer2QDiagnostics[0].asUint = 1;
  9496   00BCF4  0E00               	movlw	0
  9497   00BCF6  0101               	movlb	1	; () banked
  9498   00BCF8  6FBA               	movwf	(_consumer2QDiagnostics+1)& (0+255),b
  9499   00BCFA  0E01               	movlw	1
  9500   00BCFC  6FB9               	movwf	_consumer2QDiagnostics& (0+255),b
  9501                           
  9502                           ;../event_consumerDualActionQueue.c: 115:     normalReadIndex = 0;
  9503   00BCFE  0E00               	movlw	0
  9504   00BD00  0100               	movlb	0	; () banked
  9505   00BD02  6FCD               	movwf	_normalReadIndex& (0+255),b
  9506                           
  9507                           ;../event_consumerDualActionQueue.c: 116:     normalWriteIndex = 0;
  9508   00BD04  0E00               	movlw	0
  9509   00BD06  6FCC               	movwf	_normalWriteIndex& (0+255),b
  9510                           
  9511                           ;../event_consumerDualActionQueue.c: 117:     expeditedReadIndex = 0;
  9512   00BD08  0E00               	movlw	0
  9513   00BD0A  6FCB               	movwf	_expeditedReadIndex& (0+255),b
  9514                           
  9515                           ;../event_consumerDualActionQueue.c: 118:     expeditedWriteIndex = 0;
  9516   00BD0C  0E00               	movlw	0
  9517   00BD0E  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
  9518                           
  9519                           ;../event_consumerDualActionQueue.c: 120:     expedited = FALSE;
  9520   00BD10  0E00               	movlw	0
  9521   00BD12  6E49               	movwf	_expedited^0,c
  9522                           
  9523                           ; BSR set to: 0
  9524   00BD14  0012               	return		;funcret
  9525   00BD16                     __end_of_consumer2QPowerUp:
  9526                           	callstack 0
  9527                           
  9528 ;; *************** function _teachPowerUp *****************
  9529 ;; Defined at:
  9530 ;;		line 359 in file "../../VLCBlib_PIC/event_teach_large.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;		None
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  i               1    9[BANK1 ] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9545 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9547 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9548 ;;Total ram usage:        1 bytes
  9549 ;; Hardware stack levels used: 1
  9550 ;; Hardware stack levels required when called: 17
  9551 ;; This function calls:
  9552 ;;		_rebuildHashtable
  9553 ;; This function is called by:
  9554 ;;		_powerUp
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text15
  9559   00C070                     __ptext15:
  9560                           	callstack 0
  9561   00C070                     _teachPowerUp:
  9562                           	callstack 12
  9563                           
  9564                           ;../../VLCBlib_PIC/event_teach_large.c: 360:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 362:     rebuildHashtable();
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;incstack = 0
  9568   00C070  EC8A  F03F         	call	_rebuildHashtable	;wreg free
  9569                           
  9570                           ;../../VLCBlib_PIC/event_teach_large.c: 366:     for (i=1; i<= 1; i++) {
  9571   00C074  0E01               	movlw	1
  9572   00C076  0101               	movlb	1	; () banked
  9573   00C078  6FC6               	movwf	teachPowerUp@i& (0+255),b
  9574   00C07A                     l24480:
  9575                           
  9576                           ; BSR set to: 1
  9577                           ;../../VLCBlib_PIC/event_teach_large.c: 367:         teachDiagnostics[i].asUint = 0;
  9578   00C07A  51C6               	movf	teachPowerUp@i& (0+255),w,b
  9579   00C07C  0D02               	mullw	2
  9580   00C07E  0EB1               	movlw	low _teachDiagnostics
  9581   00C080  24F3               	addwf	243,w,c
  9582   00C082  6ED9               	movwf	fsr2l,c
  9583   00C084  0E01               	movlw	high _teachDiagnostics
  9584   00C086  20F4               	addwfc	prodh,w,c
  9585   00C088  6EDA               	movwf	fsr2h,c
  9586   00C08A  6ADE               	clrf	postinc2,c
  9587   00C08C  6ADD               	clrf	postdec2,c
  9588                           
  9589                           ; BSR set to: 1
  9590                           ;../../VLCBlib_PIC/event_teach_large.c: 368:     }
  9591   00C08E  2BC6               	incf	teachPowerUp@i& (0+255),f,b
  9592                           
  9593                           ; BSR set to: 1
  9594   00C090  0E01               	movlw	1
  9595   00C092  65C6               	cpfsgt	teachPowerUp@i& (0+255),b
  9596   00C094  D7F2               	goto	l24480
  9597                           
  9598                           ; BSR set to: 1
  9599                           ;../../VLCBlib_PIC/event_teach_large.c: 369:     teachDiagnostics[0x00].asUint = 1;
  9600   00C096  0E00               	movlw	0
  9601   00C098  6FB2               	movwf	(_teachDiagnostics+1)& (0+255),b
  9602   00C09A  0E01               	movlw	1
  9603   00C09C  6FB1               	movwf	_teachDiagnostics& (0+255),b
  9604                           
  9605                           ; BSR set to: 1
  9606                           ;../../VLCBlib_PIC/event_teach_large.c: 371:     mode_flags &= ~1;
  9607   00C09E  9169               	bcf	_mode_flags& (0+255),0,b
  9608                           
  9609                           ; BSR set to: 1
  9610   00C0A0  0012               	return		;funcret
  9611   00C0A2                     __end_of_teachPowerUp:
  9612                           	callstack 0
  9613                           
  9614 ;; *************** function _leds_powerUp *****************
  9615 ;; Defined at:
  9616 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;		None
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;		None
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  1    wreg      void 
  9623 ;; Registers used:
  9624 ;;		wreg, status,2, status,0, cstack
  9625 ;; Tracked objects:
  9626 ;;		On entry : 0/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9634 ;;Total ram usage:        0 bytes
  9635 ;; Hardware stack levels used: 1
  9636 ;; Hardware stack levels required when called: 13
  9637 ;; This function calls:
  9638 ;;		_tickGet
  9639 ;; This function is called by:
  9640 ;;		_powerUp
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text16
  9645   00C0D4                     __ptext16:
  9646                           	callstack 0
  9647   00C0D4                     _leds_powerUp:
  9648                           	callstack 16
  9649                           
  9650                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9651                           
  9652                           ; BSR set to: 1
  9653                           ;incstack = 0
  9654   00C0D4  0E00               	movlw	0
  9655   00C0D6  010F               	movlb	15	; () banked
  9656   00C0D8  6F5C               	movwf	92,b	;volatile
  9657   00C0DA  CF5C FF5D          	movff	3932,3933	;volatile
  9658                           
  9659                           ; BSR set to: 15
  9660   00C0DE  9E93               	bcf	147,7,c	;volatile
  9661   00C0E0  9C93               	bcf	147,6,c	;volatile
  9662                           
  9663                           ; BSR set to: 15
  9664   00C0E2  8492               	bsf	146,2,c	;volatile
  9665                           
  9666                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
  9667   00C0E4  0E00               	movlw	0
  9668   00C0E6  0100               	movlb	0	; () banked
  9669   00C0E8  6FAF               	movwf	_flashCounter& (0+255),b
  9670                           
  9671                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
  9672   00C0EA  0E00               	movlw	0
  9673   00C0EC  6FB0               	movwf	(_flashCounter+1)& (0+255),b
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
  9677   00C0EE  ECE5  F05B         	call	_tickGet	;wreg free
  9678   00C0F2  C08D  F148         	movff	?_tickGet,_ledTimer
  9679   00C0F6  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
  9680   00C0FA  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
  9681   00C0FE  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
  9682   00C102  0012               	return		;funcret
  9683   00C104                     __end_of_leds_powerUp:
  9684                           	callstack 0
  9685                           
  9686 ;; *************** function _initTimedResponse *****************
  9687 ;; Defined at:
  9688 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;		None
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  1    wreg      void 
  9695 ;; Registers used:
  9696 ;;		None
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9706 ;;Total ram usage:        0 bytes
  9707 ;; Hardware stack levels used: 1
  9708 ;; Hardware stack levels required when called: 12
  9709 ;; This function calls:
  9710 ;;		Nothing
  9711 ;; This function is called by:
  9712 ;;		_powerUp
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text17
  9717   00C830                     __ptext17:
  9718                           	callstack 0
  9719   00C830                     _initTimedResponse:
  9720                           	callstack 17
  9721                           
  9722                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9723                           
  9724                           ;incstack = 0
  9725   00C830  0100               	movlb	0	; () banked
  9726   00C832  69BC               	setf	_timedResponseType& (0+255),b
  9727                           
  9728                           ; BSR set to: 0
  9729   00C834  0012               	return		;funcret
  9730   00C836                     __end_of_initTimedResponse:
  9731                           	callstack 0
  9732                           
  9733 ;; *************** function _initTicker *****************
  9734 ;; Defined at:
  9735 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  priority        1    wreg     unsigned char 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;  priority        1   45[BANK0 ] unsigned char 
  9740 ;;  i               1   47[BANK0 ] unsigned char 
  9741 ;;  divider         1   46[BANK0 ] unsigned char 
  9742 ;; Return value:  Size  Location     Type
  9743 ;;                  1    wreg      void 
  9744 ;; Registers used:
  9745 ;;		wreg, status,2, status,0
  9746 ;; Tracked objects:
  9747 ;;		On entry : 0/0
  9748 ;;		On exit  : 0/0
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9752 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9754 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9755 ;;Total ram usage:        3 bytes
  9756 ;; Hardware stack levels used: 1
  9757 ;; Hardware stack levels required when called: 12
  9758 ;; This function calls:
  9759 ;;		Nothing
  9760 ;; This function is called by:
  9761 ;;		_powerUp
  9762 ;; This function uses a non-reentrant model
  9763 ;;
  9764                           
  9765                           	psect	text18
  9766   00BD5E                     __ptext18:
  9767                           	callstack 0
  9768   00BD5E                     _initTicker:
  9769                           	callstack 17
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;incstack = 0
  9773                           ;initTicker@priority stored from wreg
  9774   00BD5E  0100               	movlb	0	; () banked
  9775   00BD60  6F8D               	movwf	initTicker@priority& (0+255),b
  9776                           
  9777                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9778   00BD62  0E00               	movlw	0
  9779   00BD64  0100               	movlb	0	; () banked
  9780   00BD66  6F8E               	movwf	initTicker@divider& (0+255),b
  9781                           
  9782                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9783   00BD68  0E40               	movlw	64
  9784   00BD6A  6F8F               	movwf	initTicker@i& (0+255),b
  9785   00BD6C                     l24174:
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9789   00BD6C  2B8E               	incf	initTicker@divider& (0+255),f,b
  9790                           
  9791                           ; BSR set to: 0
  9792   00BD6E  90D8               	bcf	status,0,c
  9793   00BD70  338F               	rrcf	initTicker@i& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796   00BD72  518F               	movf	initTicker@i& (0+255),w,b
  9797   00BD74  A4D8               	btfss	status,2,c
  9798   00BD76  D7FA               	goto	l24174
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9802   00BD78  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9803                           
  9804                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9805   00BD7C  9CD5               	bcf	213,6,c	;volatile
  9806                           
  9807                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9808   00BD7E  9AD5               	bcf	213,5,c	;volatile
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9812   00BD80  0E00               	movlw	0
  9813   00BD82  6ED7               	movwf	215,c	;volatile
  9814                           
  9815                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9816   00BD84  0E00               	movlw	0
  9817   00BD86  6ED6               	movwf	214,c	;volatile
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9821   00BD88  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9822   00BD8A  D002               	bra	u26015
  9823   00BD8C  94F1               	bcf	241,2,c	;volatile
  9824   00BD8E  D001               	bra	u26016
  9825   00BD90                     u26015:
  9826   00BD90  84F1               	bsf	241,2,c	;volatile
  9827   00BD92                     u26016:
  9828                           
  9829                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9830   00BD92  94F2               	bcf	242,2,c	;volatile
  9831                           
  9832                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9833   00BD94  8AF2               	bsf	242,5,c	;volatile
  9834                           
  9835                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9836   00BD96  8ED5               	bsf	213,7,c	;volatile
  9837                           
  9838                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9839   00BD98  0E00               	movlw	0
  9840   00BD9A  0100               	movlb	0	; () banked
  9841   00BD9C  6FC6               	movwf	_timerExtension1& (0+255),b	;volatile
  9842                           
  9843                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9844   00BD9E  0E00               	movlw	0
  9845   00BDA0  6FC5               	movwf	_timerExtension2& (0+255),b	;volatile
  9846                           
  9847                           ; BSR set to: 0
  9848   00BDA2  0012               	return		;funcret
  9849   00BDA4                     __end_of_initTicker:
  9850                           	callstack 0
  9851                           
  9852 ;; *************** function _poll *****************
  9853 ;; Defined at:
  9854 ;;		line 993 in file "../../VLCBlib_PIC/vlcb.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;		None
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  m               9   41[BANK2 ] struct Message
  9859 ;;  i               1   40[BANK2 ] unsigned char 
  9860 ;;  handled         1   39[BANK2 ] enum E12799
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  1    wreg      void 
  9863 ;; Registers used:
  9864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9871 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9872 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9873 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9874 ;;Total ram usage:       15 bytes
  9875 ;; Hardware stack levels used: 1
  9876 ;; Hardware stack levels required when called: 28
  9877 ;; This function calls:
  9878 ;;		NULL
  9879 ;;		_APP_postProcessMessage
  9880 ;;		_APP_preProcessMessage
  9881 ;;		___lmul
  9882 ;;		_ackEventProcessMessage
  9883 ;;		_bootProcessMessage
  9884 ;;		_canProcessMessage
  9885 ;;		_canReceiveMessage
  9886 ;;		_consumer2QProcessMessage
  9887 ;;		_flushFlashBlock
  9888 ;;		_leds_poll
  9889 ;;		_mnsPoll
  9890 ;;		_mnsProcessMessage
  9891 ;;		_nvProcessMessage
  9892 ;;		_pollTimedResponse
  9893 ;;		_producerProcessMessage
  9894 ;;		_showStatus
  9895 ;;		_teachProcessMessage
  9896 ;;		_tickGet
  9897 ;; This function is called by:
  9898 ;;		_main
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           	psect	text19
  9903   00416C                     __ptext19:
  9904                           	callstack 0
  9905   00416C                     _poll:
  9906                           	callstack 2
  9907                           
  9908                           ;../../VLCBlib_PIC/vlcb.c: 994:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 995:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 996:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 999
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;incstack = 0
  9912   00416C  ECE5  F05B         	call	_tickGet	;wreg free
  9913   004170  0101               	movlb	1	; () banked
  9914   004172  5144               	movf	_timedResponseTime& (0+255),w,b
  9915   004174  0100               	movlb	0	; () banked
  9916   004176  5D8D               	subwf	?_tickGet& (0+255),w,b
  9917   004178  0102               	movlb	2	; () banked
  9918   00417A  6FEF               	movwf	??_poll& (0+255),b
  9919   00417C  0101               	movlb	1	; () banked
  9920   00417E  5145               	movf	(_timedResponseTime+1)& (0+255),w,b
  9921   004180  0100               	movlb	0	; () banked
  9922   004182  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9923   004184  0102               	movlb	2	; () banked
  9924   004186  6FF0               	movwf	(??_poll+1)& (0+255),b
  9925   004188  0101               	movlb	1	; () banked
  9926   00418A  5146               	movf	(_timedResponseTime+2)& (0+255),w,b
  9927   00418C  0100               	movlb	0	; () banked
  9928   00418E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9929   004190  0102               	movlb	2	; () banked
  9930   004192  6FF1               	movwf	(??_poll+2)& (0+255),b
  9931   004194  0101               	movlb	1	; () banked
  9932   004196  5147               	movf	(_timedResponseTime+3)& (0+255),w,b
  9933   004198  0100               	movlb	0	; () banked
  9934   00419A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9935   00419C  0102               	movlb	2	; () banked
  9936   00419E  6FF2               	movwf	(??_poll+3)& (0+255),b
  9937   0041A0  0101               	movlb	1	; () banked
  9938   0041A2  5168               	movf	_timedResponseDelay& (0+255),w,b
  9939   0041A4  0100               	movlb	0	; () banked
  9940   0041A6  6F91               	movwf	___lmul@multiplier& (0+255),b
  9941   0041A8  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9942   0041AA  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9943   0041AC  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9944   0041AE  0E3E               	movlw	62
  9945   0041B0  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9946   0041B2  0E00               	movlw	0
  9947   0041B4  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9948   0041B6  0E00               	movlw	0
  9949   0041B8  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9950   0041BA  0E00               	movlw	0
  9951   0041BC  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9952   0041BE  EC11  F05C         	call	___lmul	;wreg free
  9953   0041C2  0102               	movlb	2	; () banked
  9954   0041C4  51EF               	movf	??_poll& (0+255),w,b
  9955   0041C6  0100               	movlb	0	; () banked
  9956   0041C8  5D91               	subwf	?___lmul& (0+255),w,b
  9957   0041CA  0102               	movlb	2	; () banked
  9958   0041CC  51F0               	movf	(??_poll+1)& (0+255),w,b
  9959   0041CE  0100               	movlb	0	; () banked
  9960   0041D0  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9961   0041D2  0102               	movlb	2	; () banked
  9962   0041D4  51F1               	movf	(??_poll+2)& (0+255),w,b
  9963   0041D6  0100               	movlb	0	; () banked
  9964   0041D8  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9965   0041DA  0102               	movlb	2	; () banked
  9966   0041DC  51F2               	movf	(??_poll+3)& (0+255),w,b
  9967   0041DE  0100               	movlb	0	; () banked
  9968   0041E0  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9969   0041E2  B0D8               	btfsc	status,0,c
  9970   0041E4  D00C               	goto	l24980
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;../../VLCBlib_PIC/vlcb.c: 1000:         pollTimedResponse();
  9974   0041E6  ECE1  F055         	call	_pollTimedResponse	;wreg free
  9975                           
  9976                           ;../../VLCBlib_PIC/vlcb.c: 1001:         timedResponseTime.val = tickGet();
  9977   0041EA  ECE5  F05B         	call	_tickGet	;wreg free
  9978   0041EE  C08D  F144         	movff	?_tickGet,_timedResponseTime
  9979   0041F2  C08E  F145         	movff	?_tickGet+1,_timedResponseTime+1
  9980   0041F6  C08F  F146         	movff	?_tickGet+2,_timedResponseTime+2
  9981   0041FA  C090  F147         	movff	?_tickGet+3,_timedResponseTime+3
  9982   0041FE                     l24980:
  9983                           
  9984                           ;../../VLCBlib_PIC/vlcb.c: 1003:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9985   0041FE  ECE5  F05B         	call	_tickGet	;wreg free
  9986   004202  0101               	movlb	1	; () banked
  9987   004204  5140               	movf	_flashFlushTime& (0+255),w,b
  9988   004206  0100               	movlb	0	; () banked
  9989   004208  5D8D               	subwf	?_tickGet& (0+255),w,b
  9990   00420A  0102               	movlb	2	; () banked
  9991   00420C  6FEF               	movwf	??_poll& (0+255),b
  9992   00420E  0101               	movlb	1	; () banked
  9993   004210  5141               	movf	(_flashFlushTime+1)& (0+255),w,b
  9994   004212  0100               	movlb	0	; () banked
  9995   004214  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9996   004216  0102               	movlb	2	; () banked
  9997   004218  6FF0               	movwf	(??_poll+1)& (0+255),b
  9998   00421A  0101               	movlb	1	; () banked
  9999   00421C  5142               	movf	(_flashFlushTime+2)& (0+255),w,b
 10000   00421E  0100               	movlb	0	; () banked
 10001   004220  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 10002   004222  0102               	movlb	2	; () banked
 10003   004224  6FF1               	movwf	(??_poll+2)& (0+255),b
 10004   004226  0101               	movlb	1	; () banked
 10005   004228  5143               	movf	(_flashFlushTime+3)& (0+255),w,b
 10006   00422A  0100               	movlb	0	; () banked
 10007   00422C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 10008   00422E  0102               	movlb	2	; () banked
 10009   004230  6FF2               	movwf	(??_poll+3)& (0+255),b
 10010   004232  51F2               	movf	(??_poll+3)& (0+255),w,b
 10011   004234  11F1               	iorwf	(??_poll+2)& (0+255),w,b
 10012   004236  E106               	bnz	u26990
 10013   004238  0E25               	movlw	37
 10014   00423A  5DEF               	subwf	??_poll& (0+255),w,b
 10015   00423C  0EF4               	movlw	244
 10016   00423E  59F0               	subwfb	(??_poll+1)& (0+255),w,b
 10017   004240  A0D8               	btfss	status,0,c
 10018   004242  D00C               	goto	l24986
 10019   004244                     u26990:
 10020                           
 10021                           ; BSR set to: 2
 10022                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flushFlashBlock();
 10023   004244  EC5E  F054         	call	_flushFlashBlock	;wreg free
 10024                           
 10025                           ;../../VLCBlib_PIC/vlcb.c: 1005:         flashFlushTime.val = tickGet();
 10026   004248  ECE5  F05B         	call	_tickGet	;wreg free
 10027   00424C  C08D  F140         	movff	?_tickGet,_flashFlushTime
 10028   004250  C08E  F141         	movff	?_tickGet+1,_flashFlushTime+1
 10029   004254  C08F  F142         	movff	?_tickGet+2,_flashFlushTime+2
 10030   004258  C090  F143         	movff	?_tickGet+3,_flashFlushTime+3
 10031   00425C                     l24986:
 10032                           
 10033                           ;../../VLCBlib_PIC/vlcb.c: 1008:     for (i=0; i<9; i++) {
 10034   00425C  0E00               	movlw	0
 10035   00425E  0102               	movlb	2	; () banked
 10036   004260  6FF4               	movwf	poll@i& (0+255),b
 10037   004262                     l24992:
 10038                           
 10039                           ; BSR set to: 2
 10040                           ;../../VLCBlib_PIC/vlcb.c: 1009:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 10041   004262  51F4               	movf	poll@i& (0+255),w,b
 10042   004264  0D02               	mullw	2
 10043   004266  0E69               	movlw	low _services
 10044   004268  24F3               	addwf	243,w,c
 10045   00426A  6EF6               	movwf	tblptrl,c
 10046   00426C  0EEE               	movlw	high _services
 10047   00426E  20F4               	addwfc	244,w,c
 10048   004270  6EF7               	movwf	tblptrh,c
 10049   004272                     	if	1	;There are 3 active tblptr bytes
 10050   004272  6AF8               	clrf	tblptru,c
 10051   004274  0E00               	movlw	low (__mediumconst shr (0+16))
 10052   004276  22F8               	addwfc	tblptru,f,c
 10053   004278                     	endif
 10054   004278  0009               	tblrd		*+
 10055   00427A  50F5               	movf	tablat,w,c
 10056   00427C  0009               	tblrd		*+
 10057   00427E  10F5               	iorwf	tablat,w,c
 10058   004280  B4D8               	btfsc	status,2,c
 10059   004282  D04B               	goto	u27029
 10060                           
 10061                           ; BSR set to: 2
 10062   004284  51F4               	movf	poll@i& (0+255),w,b
 10063   004286  0D02               	mullw	2
 10064   004288  0E69               	movlw	low _services
 10065   00428A  24F3               	addwf	243,w,c
 10066   00428C  6EF6               	movwf	tblptrl,c
 10067   00428E  0EEE               	movlw	high _services
 10068   004290  20F4               	addwfc	244,w,c
 10069   004292  6EF7               	movwf	tblptrh,c
 10070   004294                     	if	1	;There are 3 active tblptr bytes
 10071   004294  6AF8               	clrf	tblptru,c
 10072   004296  0E00               	movlw	low (__mediumconst shr (0+16))
 10073   004298  22F8               	addwfc	tblptru,f,c
 10074   00429A                     	endif
 10075   00429A  0009               	tblrd		*+
 10076   00429C  CFF5 F2EF          	movff	tablat,??_poll
 10077   0042A0  0009               	tblrd		*+
 10078   0042A2  CFF5 F2F0          	movff	tablat,??_poll+1
 10079   0042A6  0E08               	movlw	8
 10080   0042A8  27EF               	addwf	??_poll& (0+255),f,b
 10081   0042AA  0E00               	movlw	0
 10082   0042AC  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10083   0042AE  C2EF  FFF6         	movff	??_poll,tblptrl
 10084   0042B2  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10085   0042B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10086   0042B6  6AF8               	clrf	tblptru,c
 10087   0042B8                     	endif
 10088   0042B8                     	if	0	;tblptru may be non-zero
 10089   0042B8                     	endif
 10090   0042B8  0009               	tblrd		*+
 10091   0042BA  50F5               	movf	tablat,w,c
 10092   0042BC  0009               	tblrd		*+
 10093   0042BE  10F5               	iorwf	tablat,w,c
 10094   0042C0  B4D8               	btfsc	status,2,c
 10095   0042C2  D02B               	goto	u27029
 10096                           
 10097                           ; BSR set to: 2
 10098                           ;../../VLCBlib_PIC/vlcb.c: 1010:             services[i]->poll();
 10099   0042C4  51F4               	movf	poll@i& (0+255),w,b
 10100   0042C6  0D02               	mullw	2
 10101   0042C8  0E69               	movlw	low _services
 10102   0042CA  24F3               	addwf	243,w,c
 10103   0042CC  6EF6               	movwf	tblptrl,c
 10104   0042CE  0EEE               	movlw	high _services
 10105   0042D0  20F4               	addwfc	244,w,c
 10106   0042D2  6EF7               	movwf	tblptrh,c
 10107   0042D4                     	if	1	;There are 3 active tblptr bytes
 10108   0042D4  6AF8               	clrf	tblptru,c
 10109   0042D6  0E00               	movlw	low (__mediumconst shr (0+16))
 10110   0042D8  22F8               	addwfc	tblptru,f,c
 10111   0042DA                     	endif
 10112   0042DA  0009               	tblrd		*+
 10113   0042DC  CFF5 F2EF          	movff	tablat,??_poll
 10114   0042E0  0009               	tblrd		*+
 10115   0042E2  CFF5 F2F0          	movff	tablat,??_poll+1
 10116   0042E6  0E08               	movlw	8
 10117   0042E8  27EF               	addwf	??_poll& (0+255),f,b
 10118   0042EA  0E00               	movlw	0
 10119   0042EC  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10120   0042EE  C2EF  FFF6         	movff	??_poll,tblptrl
 10121   0042F2  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10122   0042F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10123   0042F6  6AF8               	clrf	tblptru,c
 10124   0042F8                     	endif
 10125   0042F8                     	if	0	;tblptru may be non-zero
 10126   0042F8                     	endif
 10127   0042F8  0009               	tblrd		*+
 10128   0042FA  CFF5 F2F1          	movff	tablat,??_poll+2
 10129   0042FE  0009               	tblrd		*+
 10130   004300  CFF5 F2F2          	movff	tablat,??_poll+3
 10131   004304  D801               	call	u27028
 10132   004306  D009               	goto	u27029
 10133   004308                     u27028:
 10134   004308  0005               	push	
 10135   00430A  6EFA               	movwf	pclath,c
 10136   00430C  51F1               	movf	(??_poll+2)& (0+255),w,b
 10137   00430E  6EFD               	movwf	tosl,c
 10138   004310  51F2               	movf	(??_poll+3)& (0+255),w,b
 10139   004312  6EFE               	movwf	tosh,c
 10140   004314  6AFF               	clrf	tosu,c
 10141   004316  50FA               	movf	pclath,w,c
 10142   004318  0012               	return		;indir
 10143   00431A                     u27029:
 10144                           
 10145                           ;../../VLCBlib_PIC/vlcb.c: 1012:     }
 10146   00431A  0102               	movlb	2	; () banked
 10147   00431C  2BF4               	incf	poll@i& (0+255),f,b
 10148                           
 10149                           ; BSR set to: 2
 10150   00431E  0E08               	movlw	8
 10151   004320  65F4               	cpfsgt	poll@i& (0+255),b
 10152   004322  D79F               	goto	l24992
 10153                           
 10154                           ; BSR set to: 2
 10155                           ;../../VLCBlib_PIC/vlcb.c: 1014:     leds_poll();
 10156   004324  EC92  F030         	call	_leds_poll	;wreg free
 10157                           
 10158                           ;../../VLCBlib_PIC/vlcb.c: 1017:     handled = NOT_PROCESSED;
 10159   004328  0E00               	movlw	0
 10160   00432A  0102               	movlb	2	; () banked
 10161   00432C  6FF3               	movwf	poll@handled& (0+255),b
 10162                           
 10163                           ; BSR set to: 2
 10164                           ;../../VLCBlib_PIC/vlcb.c: 1018:     if (transport != ((void*)0)) {
 10165   00432E  0101               	movlb	1	; () banked
 10166   004330  5166               	movf	_transport& (0+255),w,b
 10167   004332  1167               	iorwf	(_transport+1)& (0+255),w,b
 10168   004334  B4D8               	btfsc	status,2,c
 10169   004336  D0CA               	goto	l2033
 10170                           
 10171                           ; BSR set to: 1
 10172                           ;../../VLCBlib_PIC/vlcb.c: 1019:         if (transport->receiveMessage != ((void*)0)) {
 10173   004338  0E02               	movlw	2
 10174   00433A  2566               	addwf	_transport& (0+255),w,b
 10175   00433C  0102               	movlb	2	; () banked
 10176   00433E  6FEF               	movwf	??_poll& (0+255),b
 10177   004340  0E00               	movlw	0
 10178   004342  0101               	movlb	1	; () banked
 10179   004344  2167               	addwfc	(_transport+1)& (0+255),w,b
 10180   004346  0102               	movlb	2	; () banked
 10181   004348  6FF0               	movwf	(??_poll+1)& (0+255),b
 10182   00434A  C2EF  FFF6         	movff	??_poll,tblptrl
 10183   00434E  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10184   004352                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10185   004352  6AF8               	clrf	tblptru,c
 10186   004354                     	endif
 10187   004354                     	if	0	;tblptru may be non-zero
 10188   004354                     	endif
 10189   004354  0009               	tblrd		*+
 10190   004356  50F5               	movf	tablat,w,c
 10191   004358  0009               	tblrd		*+
 10192   00435A  10F5               	iorwf	tablat,w,c
 10193   00435C  B4D8               	btfsc	status,2,c
 10194   00435E  D0B6               	goto	l2033
 10195                           
 10196                           ; BSR set to: 2
 10197                           ;../../VLCBlib_PIC/vlcb.c: 1020:             if (transport->receiveMessage(&m)) {
 10198   004360  0EF5               	movlw	low poll@m
 10199   004362  0101               	movlb	1	; () banked
 10200   004364  6FC7               	movwf	canReceiveMessage@m& (0+255),b
 10201   004366  0E02               	movlw	high poll@m
 10202   004368  6FC8               	movwf	(canReceiveMessage@m+1)& (0+255),b
 10203   00436A  0E02               	movlw	2
 10204   00436C  2566               	addwf	_transport& (0+255),w,b
 10205   00436E  0102               	movlb	2	; () banked
 10206   004370  6FEF               	movwf	??_poll& (0+255),b
 10207   004372  0E00               	movlw	0
 10208   004374  0101               	movlb	1	; () banked
 10209   004376  2167               	addwfc	(_transport+1)& (0+255),w,b
 10210   004378  0102               	movlb	2	; () banked
 10211   00437A  6FF0               	movwf	(??_poll+1)& (0+255),b
 10212   00437C  C2EF  FFF6         	movff	??_poll,tblptrl
 10213   004380  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10214   004384                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10215   004384  6AF8               	clrf	tblptru,c
 10216   004386                     	endif
 10217   004386                     	if	0	;tblptru may be non-zero
 10218   004386                     	endif
 10219   004386  0009               	tblrd		*+
 10220   004388  CFF5 F2F1          	movff	tablat,??_poll+2
 10221   00438C  0009               	tblrd		*+
 10222   00438E  CFF5 F2F2          	movff	tablat,??_poll+3
 10223   004392  D801               	call	u27068
 10224   004394  D009               	goto	u27069
 10225   004396                     u27068:
 10226   004396  0005               	push	
 10227   004398  6EFA               	movwf	pclath,c
 10228   00439A  51F1               	movf	(??_poll+2)& (0+255),w,b
 10229   00439C  6EFD               	movwf	tosl,c
 10230   00439E  51F2               	movf	(??_poll+3)& (0+255),w,b
 10231   0043A0  6EFE               	movwf	tosh,c
 10232   0043A2  6AFF               	clrf	tosu,c
 10233   0043A4  50FA               	movf	pclath,w,c
 10234   0043A6  0012               	return		;indir
 10235   0043A8                     u27069:
 10236   0043A8  0900               	iorlw	0
 10237   0043AA  B4D8               	btfsc	status,2,c
 10238   0043AC  D08F               	goto	l2033
 10239                           
 10240                           ;../../VLCBlib_PIC/vlcb.c: 1021:                 if (m.len > 0) {
 10241   0043AE  0102               	movlb	2	; () banked
 10242   0043B0  51F5               	movf	poll@m& (0+255),w,b
 10243   0043B2  B4D8               	btfsc	status,2,c
 10244   0043B4  D08B               	goto	l2033
 10245                           
 10246                           ; BSR set to: 2
 10247                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 10248   0043B6  0E07               	movlw	7
 10249   0043B8  EC1F  F044         	call	_showStatus
 10250                           
 10251                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     handled = APP_preProcessMessage(&m)
      +                          ;
 10252   0043BC  0EF5               	movlw	low poll@m
 10253   0043BE  0100               	movlb	0	; () banked
 10254   0043C0  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
 10255   0043C2  0E02               	movlw	high poll@m
 10256   0043C4  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
 10257   0043C6  EC27  F064         	call	_APP_preProcessMessage	;wreg free
 10258   0043CA  0102               	movlb	2	; () banked
 10259   0043CC  6FF3               	movwf	poll@handled& (0+255),b
 10260                           
 10261                           ; BSR set to: 2
 10262                           ;../../VLCBlib_PIC/vlcb.c: 1024:                     if (handled == NOT_PROCESSED) {
 10263   0043CE  51F3               	movf	poll@handled& (0+255),w,b
 10264   0043D0  A4D8               	btfss	status,2,c
 10265   0043D2  D07C               	goto	l2033
 10266                           
 10267                           ; BSR set to: 2
 10268                           ;../../VLCBlib_PIC/vlcb.c: 1025:                         for (i=0; i<9; i++) {
 10269   0043D4  0E00               	movlw	0
 10270   0043D6  6FF4               	movwf	poll@i& (0+255),b
 10271   0043D8                     l25024:
 10272                           
 10273                           ; BSR set to: 2
 10274                           ;../../VLCBlib_PIC/vlcb.c: 1026:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 10275   0043D8  51F4               	movf	poll@i& (0+255),w,b
 10276   0043DA  0D02               	mullw	2
 10277   0043DC  0E69               	movlw	low _services
 10278   0043DE  24F3               	addwf	243,w,c
 10279   0043E0  6EF6               	movwf	tblptrl,c
 10280   0043E2  0EEE               	movlw	high _services
 10281   0043E4  20F4               	addwfc	244,w,c
 10282   0043E6  6EF7               	movwf	tblptrh,c
 10283   0043E8                     	if	1	;There are 3 active tblptr bytes
 10284   0043E8  6AF8               	clrf	tblptru,c
 10285   0043EA  0E00               	movlw	low (__mediumconst shr (0+16))
 10286   0043EC  22F8               	addwfc	tblptru,f,c
 10287   0043EE                     	endif
 10288   0043EE  0009               	tblrd		*+
 10289   0043F0  50F5               	movf	tablat,w,c
 10290   0043F2  0009               	tblrd		*+
 10291   0043F4  10F5               	iorwf	tablat,w,c
 10292   0043F6  B4D8               	btfsc	status,2,c
 10293   0043F8  D058               	goto	l25032
 10294                           
 10295                           ; BSR set to: 2
 10296   0043FA  51F4               	movf	poll@i& (0+255),w,b
 10297   0043FC  0D02               	mullw	2
 10298   0043FE  0E69               	movlw	low _services
 10299   004400  24F3               	addwf	243,w,c
 10300   004402  6EF6               	movwf	tblptrl,c
 10301   004404  0EEE               	movlw	high _services
 10302   004406  20F4               	addwfc	244,w,c
 10303   004408  6EF7               	movwf	tblptrh,c
 10304   00440A                     	if	1	;There are 3 active tblptr bytes
 10305   00440A  6AF8               	clrf	tblptru,c
 10306   00440C  0E00               	movlw	low (__mediumconst shr (0+16))
 10307   00440E  22F8               	addwfc	tblptru,f,c
 10308   004410                     	endif
 10309   004410  0009               	tblrd		*+
 10310   004412  CFF5 F2EF          	movff	tablat,??_poll
 10311   004416  0009               	tblrd		*+
 10312   004418  CFF5 F2F0          	movff	tablat,??_poll+1
 10313   00441C  0E06               	movlw	6
 10314   00441E  27EF               	addwf	??_poll& (0+255),f,b
 10315   004420  0E00               	movlw	0
 10316   004422  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10317   004424  C2EF  FFF6         	movff	??_poll,tblptrl
 10318   004428  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10319   00442C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10320   00442C  6AF8               	clrf	tblptru,c
 10321   00442E                     	endif
 10322   00442E                     	if	0	;tblptru may be non-zero
 10323   00442E                     	endif
 10324   00442E  0009               	tblrd		*+
 10325   004430  50F5               	movf	tablat,w,c
 10326   004432  0009               	tblrd		*+
 10327   004434  10F5               	iorwf	tablat,w,c
 10328   004436  B4D8               	btfsc	status,2,c
 10329   004438  D038               	goto	l25032
 10330                           
 10331                           ; BSR set to: 2
 10332                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 10333   00443A  0EF5               	movlw	low poll@m
 10334   00443C  0101               	movlb	1	; () banked
 10335   00443E  6FFC               	movwf	producerProcessMessage@m& (0+255),b
 10336   004440  0E02               	movlw	high poll@m
 10337   004442  6FFD               	movwf	(producerProcessMessage@m+1)& (0+255),b
 10338   004444  0102               	movlb	2	; () banked
 10339   004446  51F4               	movf	poll@i& (0+255),w,b
 10340   004448  0D02               	mullw	2
 10341   00444A  0E69               	movlw	low _services
 10342   00444C  24F3               	addwf	243,w,c
 10343   00444E  6EF6               	movwf	tblptrl,c
 10344   004450  0EEE               	movlw	high _services
 10345   004452  20F4               	addwfc	244,w,c
 10346   004454  6EF7               	movwf	tblptrh,c
 10347   004456                     	if	1	;There are 3 active tblptr bytes
 10348   004456  6AF8               	clrf	tblptru,c
 10349   004458  0E00               	movlw	low (__mediumconst shr (0+16))
 10350   00445A  22F8               	addwfc	tblptru,f,c
 10351   00445C                     	endif
 10352   00445C  0009               	tblrd		*+
 10353   00445E  CFF5 F2EF          	movff	tablat,??_poll
 10354   004462  0009               	tblrd		*+
 10355   004464  CFF5 F2F0          	movff	tablat,??_poll+1
 10356   004468  0E06               	movlw	6
 10357   00446A  27EF               	addwf	??_poll& (0+255),f,b
 10358   00446C  0E00               	movlw	0
 10359   00446E  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10360   004470  C2EF  FFF6         	movff	??_poll,tblptrl
 10361   004474  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10362   004478                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10363   004478  6AF8               	clrf	tblptru,c
 10364   00447A                     	endif
 10365   00447A                     	if	0	;tblptru may be non-zero
 10366   00447A                     	endif
 10367   00447A  0009               	tblrd		*+
 10368   00447C  CFF5 F2F1          	movff	tablat,??_poll+2
 10369   004480  0009               	tblrd		*+
 10370   004482  CFF5 F2F2          	movff	tablat,??_poll+3
 10371   004486  D801               	call	u27128
 10372   004488  D009               	goto	u27129
 10373   00448A                     u27128:
 10374   00448A  0005               	push	
 10375   00448C  6EFA               	movwf	pclath,c
 10376   00448E  51F1               	movf	(??_poll+2)& (0+255),w,b
 10377   004490  6EFD               	movwf	tosl,c
 10378   004492  51F2               	movf	(??_poll+3)& (0+255),w,b
 10379   004494  6EFE               	movwf	tosh,c
 10380   004496  6AFF               	clrf	tosu,c
 10381   004498  50FA               	movf	pclath,w,c
 10382   00449A  0012               	return		;indir
 10383   00449C                     u27129:
 10384   00449C  06E8               	decf	wreg,f,c
 10385   00449E  A4D8               	btfss	status,2,c
 10386   0044A0  D004               	goto	l25032
 10387                           
 10388                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     handled = PROCESSED
      +                          ;
 10389   0044A2  0E01               	movlw	1
 10390   0044A4  0102               	movlb	2	; () banked
 10391   0044A6  6FF3               	movwf	poll@handled& (0+255),b
 10392                           
 10393                           ;../../VLCBlib_PIC/vlcb.c: 1029:                                     break;
 10394   0044A8  D005               	goto	u27140
 10395   0044AA                     l25032:
 10396                           
 10397                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         }
 10398   0044AA  0102               	movlb	2	; () banked
 10399   0044AC  2BF4               	incf	poll@i& (0+255),f,b
 10400                           
 10401                           ; BSR set to: 2
 10402   0044AE  0E08               	movlw	8
 10403   0044B0  65F4               	cpfsgt	poll@i& (0+255),b
 10404   0044B2  D792               	goto	l25024
 10405   0044B4                     u27140:
 10406                           
 10407                           ; BSR set to: 2
 10408                           ;../../VLCBlib_PIC/vlcb.c: 1033:                         if (handled == NOT_PROCESSED) {
 10409   0044B4  51F3               	movf	poll@handled& (0+255),w,b
 10410   0044B6  A4D8               	btfss	status,2,c
 10411   0044B8  D009               	goto	l2033
 10412                           
 10413                           ; BSR set to: 2
 10414                           ;../../VLCBlib_PIC/vlcb.c: 1034:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10415   0044BA  0EF5               	movlw	low poll@m
 10416   0044BC  0100               	movlb	0	; () banked
 10417   0044BE  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10418   0044C0  0E02               	movlw	high poll@m
 10419   0044C2  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10420   0044C4  EC29  F064         	call	_APP_postProcessMessage	;wreg free
 10421   0044C8  0102               	movlb	2	; () banked
 10422   0044CA  6FF3               	movwf	poll@handled& (0+255),b
 10423   0044CC                     l2033:
 10424                           
 10425                           ;../../VLCBlib_PIC/vlcb.c: 1041:     if (handled) {
 10426                           
 10427                           ; BSR set to: 2
 10428   0044CC  0102               	movlb	2	; () banked
 10429   0044CE  51F3               	movf	poll@handled& (0+255),w,b
 10430   0044D0  B4D8               	btfsc	status,2,c
 10431   0044D2  0012               	return	
 10432                           
 10433                           ; BSR set to: 2
 10434                           ;../../VLCBlib_PIC/vlcb.c: 1042:         mnsDiagnostics[0x06].asUint++;
 10435   0044D4  0101               	movlb	1	; () banked
 10436   0044D6  4B9C               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 10437   0044D8  2B9D               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 10438                           
 10439                           ; BSR set to: 1
 10440                           ;../../VLCBlib_PIC/vlcb.c: 1043:         showStatus(STATUS_MESSAGE_ACTED);
 10441   0044DA  0E08               	movlw	8
 10442   0044DC  EC1F  F044         	call	_showStatus
 10443   0044E0  0012               	return		;funcret
 10444   0044E2                     __end_of_poll:
 10445                           	callstack 0
 10446                           
 10447 ;; *************** function _producerProcessMessage *****************
 10448 ;; Defined at:
 10449 ;;		line 124 in file "../../VLCBlib_PIC/event_producer_happening.c"
 10450 ;; Parameters:    Size  Location     Type
 10451 ;;  m               2   63[BANK1 ] PTR struct Message
 10452 ;;		 -> poll@m(9), 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;  ev              2    6[BANK2 ] short 
 10455 ;;  index           1    9[BANK2 ] unsigned char 
 10456 ;;  h               1    8[BANK2 ] unsigned char 
 10457 ;; Return value:  Size  Location     Type
 10458 ;;                  1    wreg      enum E12749
 10459 ;; Registers used:
 10460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10461 ;; Tracked objects:
 10462 ;;		On entry : 0/0
 10463 ;;		On exit  : 0/0
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10466 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10467 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10468 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10469 ;;      Totals:         0       0       2      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10470 ;;Total ram usage:       12 bytes
 10471 ;; Hardware stack levels used: 1
 10472 ;; Hardware stack levels required when called: 17
 10473 ;; This function calls:
 10474 ;;		_APP_GetEventState
 10475 ;;		_findEvent
 10476 ;;		_getEv
 10477 ;;		_sendMessage3
 10478 ;;		_sendMessage4
 10479 ;; This function is called by:
 10480 ;;		_poll
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           	psect	text20
 10485   005EB6                     __ptext20:
 10486                           	callstack 0
 10487   005EB6                     _producerProcessMessage:
 10488                           	callstack 12
 10489                           
 10490                           ;../../VLCBlib_PIC/event_producer_happening.c: 125:     uint8_t index;;../../VLCBlib_PIC
      +                          /event_producer_happening.c: 126:     Happening h;;../../VLCBlib_PIC/event_producer_happ
      +                          ening.c: 127:     int16_t ev;;../../VLCBlib_PIC/event_producer_happening.c: 129:     swi
      +                          tch (m->opc) {
 10491                           
 10492                           ;incstack = 0
 10493   005EB6  D11E               	goto	l24834
 10494   005EB8                     l24786:
 10495                           
 10496                           ; BSR set to: 2
 10497                           ;../../VLCBlib_PIC/event_producer_happening.c: 132:             if (m->len < 5) {
 10498   005EB8  C1FC  FFD9         	movff	producerProcessMessage@m,fsr2l
 10499   005EBC  C1FD  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 10500   005EC0  0E05               	movlw	5
 10501   005EC2  60DF               	cpfslt	indf2,c
 10502   005EC4  D00C               	goto	l24794
 10503                           
 10504                           ; BSR set to: 2
 10505                           ;../../VLCBlib_PIC/event_producer_happening.c: 133:                 sendMessage3(OPC_CMD
      +                          ERR, nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 10506   005EC6  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 10507   005ECA  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 10508   005ECE  0E01               	movlw	1
 10509   005ED0  0100               	movlb	0	; () banked
 10510   005ED2  6FA8               	movwf	sendMessage3@data3& (0+255),b
 10511   005ED4  0E6F               	movlw	111
 10512   005ED6  EC40  F061         	call	_sendMessage3
 10513   005EDA                     l24790:
 10514                           
 10515                           ;../../VLCBlib_PIC/event_producer_happening.c: 134:                 return PROCESSED;
 10516   005EDA  0E01               	movlw	1
 10517   005EDC  0012               	return	
 10518   005EDE                     l24794:
 10519                           
 10520                           ; BSR set to: 2
 10521                           ;../../VLCBlib_PIC/event_producer_happening.c: 136:             if (m->opc == OPC_AREQ) 
      +                          {
 10522   005EDE  0101               	movlb	1	; () banked
 10523   005EE0  EE20 F001          	lfsr	2,1
 10524   005EE4  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10525   005EE6  26D9               	addwf	fsr2l,f,c
 10526   005EE8  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10527   005EEA  22DA               	addwfc	fsr2h,f,c
 10528   005EEC  0E92               	movlw	146
 10529   005EEE  18DE               	xorwf	postinc2,w,c
 10530   005EF0  A4D8               	btfss	status,2,c
 10531   005EF2  D033               	goto	l24798
 10532                           
 10533                           ; BSR set to: 1
 10534                           ;../../VLCBlib_PIC/event_producer_happening.c: 137:                 index = findEvent((u
      +                          int16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10535   005EF4  EE20 F003          	lfsr	2,3
 10536   005EF8  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10537   005EFA  26D9               	addwf	fsr2l,f,c
 10538   005EFC  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10539   005EFE  22DA               	addwfc	fsr2h,f,c
 10540   005F00  50DF               	movf	indf2,w,c
 10541   005F02  0102               	movlb	2	; () banked
 10542   005F04  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10543   005F06  0101               	movlb	1	; () banked
 10544   005F08  EE20 F002          	lfsr	2,2
 10545   005F0C  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10546   005F0E  26D9               	addwf	fsr2l,f,c
 10547   005F10  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10548   005F12  22DA               	addwfc	fsr2h,f,c
 10549   005F14  50DF               	movf	indf2,w,c
 10550   005F16  0102               	movlb	2	; () banked
 10551   005F18  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10552   005F1A  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10553   005F1C  0101               	movlb	1	; () banked
 10554   005F1E  6FBD               	movwf	findEvent@nodeNumber& (0+255),b
 10555   005F20  C2CD  F1BE         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 10556   005F24  EE20 F005          	lfsr	2,5
 10557   005F28  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10558   005F2A  26D9               	addwf	fsr2l,f,c
 10559   005F2C  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10560   005F2E  22DA               	addwfc	fsr2h,f,c
 10561   005F30  50DF               	movf	indf2,w,c
 10562   005F32  0102               	movlb	2	; () banked
 10563   005F34  6FCF               	movwf	(??_producerProcessMessage+3)& (0+255),b
 10564   005F36  0101               	movlb	1	; () banked
 10565   005F38  EE20 F004          	lfsr	2,4
 10566   005F3C  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10567   005F3E  26D9               	addwf	fsr2l,f,c
 10568   005F40  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10569   005F42  22DA               	addwfc	fsr2h,f,c
 10570   005F44  50DF               	movf	indf2,w,c
 10571   005F46  0102               	movlb	2	; () banked
 10572   005F48  6FD0               	movwf	(??_producerProcessMessage+4)& (0+255),b
 10573   005F4A  51CF               	movf	(??_producerProcessMessage+3)& (0+255),w,b
 10574   005F4C  0101               	movlb	1	; () banked
 10575   005F4E  6FBF               	movwf	findEvent@eventNumber& (0+255),b
 10576   005F50  C2D0  F1C0         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 10577   005F54  EC00  F053         	call	_findEvent	;wreg free
 10578   005F58  D01E               	goto	L1
 10579   005F5A                     l24798:
 10580                           
 10581                           ; BSR set to: 1
 10582                           ;../../VLCBlib_PIC/event_producer_happening.c: 139:                 index = findEvent(0,
      +                           (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10583   005F5A  0E00               	movlw	0
 10584   005F5C  6FBE               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 10585   005F5E  0E00               	movlw	0
 10586   005F60  6FBD               	movwf	findEvent@nodeNumber& (0+255),b
 10587   005F62  EE20 F005          	lfsr	2,5
 10588   005F66  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10589   005F68  26D9               	addwf	fsr2l,f,c
 10590   005F6A  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10591   005F6C  22DA               	addwfc	fsr2h,f,c
 10592   005F6E  50DF               	movf	indf2,w,c
 10593   005F70  0102               	movlb	2	; () banked
 10594   005F72  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10595   005F74  0101               	movlb	1	; () banked
 10596   005F76  EE20 F004          	lfsr	2,4
 10597   005F7A  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10598   005F7C  26D9               	addwf	fsr2l,f,c
 10599   005F7E  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10600   005F80  22DA               	addwfc	fsr2h,f,c
 10601   005F82  50DF               	movf	indf2,w,c
 10602   005F84  0102               	movlb	2	; () banked
 10603   005F86  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10604   005F88  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10605   005F8A  0101               	movlb	1	; () banked
 10606   005F8C  6FBF               	movwf	findEvent@eventNumber& (0+255),b
 10607   005F8E  C2CD  F1C0         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 10608   005F92  EC00  F053         	call	_findEvent	;wreg free
 10609   005F96                     L1:
 10610   005F96  0102               	movlb	2	; () banked
 10611   005F98  6FD5               	movwf	producerProcessMessage@index& (0+255),b
 10612                           
 10613                           ; BSR set to: 2
 10614                           ;../../VLCBlib_PIC/event_producer_happening.c: 141:             if (index == 0xff) retur
      +                          n PROCESSED;
 10615   005F9A  29D5               	incf	producerProcessMessage@index& (0+255),w,b
 10616   005F9C  B4D8               	btfsc	status,2,c
 10617   005F9E  D79D               	goto	l24790
 10618                           
 10619                           ; BSR set to: 2
 10620                           ;../../VLCBlib_PIC/event_producer_happening.c: 143:             ev = getEv(index, 0);
 10621   005FA0  0E00               	movlw	0
 10622   005FA2  0100               	movlb	0	; () banked
 10623   005FA4  6F9D               	movwf	getEv@evNum& (0+255),b
 10624   005FA6  0102               	movlb	2	; () banked
 10625   005FA8  51D5               	movf	producerProcessMessage@index& (0+255),w,b
 10626   005FAA  ECFD  F03C         	call	_getEv
 10627   005FAE  C09D  F2D2         	movff	?_getEv,producerProcessMessage@ev
 10628   005FB2  C09E  F2D3         	movff	?_getEv+1,producerProcessMessage@ev+1
 10629                           
 10630                           ;../../VLCBlib_PIC/event_producer_happening.c: 144:             if (ev <= 0) return PROC
      +                          ESSED;
 10631   005FB6  0102               	movlb	2	; () banked
 10632   005FB8  BFD3               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 10633   005FBA  D78F               	goto	l24790
 10634   005FBC  51D3               	movf	(producerProcessMessage@ev+1)& (0+255),w,b
 10635   005FBE  E103               	bnz	l3072
 10636   005FC0  05D2               	decf	producerProcessMessage@ev& (0+255),w,b
 10637   005FC2  A0D8               	btfss	status,0,c
 10638   005FC4  D78A               	goto	l24790
 10639   005FC6                     l3072:
 10640                           
 10641                           ; BSR set to: 2
 10642                           ;../../VLCBlib_PIC/event_producer_happening.c: 146:             h = (uint8_t)ev;
 10643   005FC6  C2D2  F2D4         	movff	producerProcessMessage@ev,producerProcessMessage@h
 10644                           
 10645                           ; BSR set to: 2
 10646                           ;../../VLCBlib_PIC/event_producer_happening.c: 154:             if (m->opc == OPC_AREQ) 
      +                          {
 10647   005FCA  0101               	movlb	1	; () banked
 10648   005FCC  EE20 F001          	lfsr	2,1
 10649   005FD0  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10650   005FD2  26D9               	addwf	fsr2l,f,c
 10651   005FD4  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10652   005FD6  22DA               	addwfc	fsr2h,f,c
 10653   005FD8  0E92               	movlw	146
 10654   005FDA  18DE               	xorwf	postinc2,w,c
 10655   005FDC  A4D8               	btfss	status,2,c
 10656   005FDE  D051               	goto	l24822
 10657                           
 10658                           ; BSR set to: 1
 10659                           ;../../VLCBlib_PIC/event_producer_happening.c: 155:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10660   005FE0  0102               	movlb	2	; () banked
 10661   005FE2  51D4               	movf	producerProcessMessage@h& (0+255),w,b
 10662   005FE4  ECF8  F01E         	call	_APP_GetEventState
 10663   005FE8  06E8               	decf	wreg,f,c
 10664   005FEA  A4D8               	btfss	status,2,c
 10665   005FEC  D025               	goto	l24820
 10666                           
 10667                           ;../../VLCBlib_PIC/event_producer_happening.c: 156:                     sendMessage4(OPC
      +                          _ARON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10668   005FEE  0101               	movlb	1	; () banked
 10669   005FF0  EE20 F002          	lfsr	2,2
 10670   005FF4  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10671   005FF6  26D9               	addwf	fsr2l,f,c
 10672   005FF8  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10673   005FFA  22DA               	addwfc	fsr2h,f,c
 10674   005FFC  50DF               	movf	indf2,w,c
 10675   005FFE  6FC5               	movwf	sendMessage4@data1& (0+255),b
 10676   006000  EE20 F003          	lfsr	2,3
 10677   006004  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10678   006006  26D9               	addwf	fsr2l,f,c
 10679   006008  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10680   00600A  22DA               	addwfc	fsr2h,f,c
 10681   00600C  50DF               	movf	indf2,w,c
 10682   00600E  6FC6               	movwf	sendMessage4@data2& (0+255),b
 10683   006010  EE20 F004          	lfsr	2,4
 10684   006014  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10685   006016  26D9               	addwf	fsr2l,f,c
 10686   006018  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10687   00601A  22DA               	addwfc	fsr2h,f,c
 10688   00601C  50DF               	movf	indf2,w,c
 10689   00601E  6FC7               	movwf	sendMessage4@data3& (0+255),b
 10690   006020  EE20 F005          	lfsr	2,5
 10691   006024  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10692   006026  26D9               	addwf	fsr2l,f,c
 10693   006028  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10694   00602A  22DA               	addwfc	fsr2h,f,c
 10695   00602C  50DF               	movf	indf2,w,c
 10696   00602E  6FC8               	movwf	sendMessage4@data4& (0+255),b
 10697   006030  0E93               	movlw	147
 10698   006032  ECFA  F060         	call	_sendMessage4
 10699                           
 10700                           ;../../VLCBlib_PIC/event_producer_happening.c: 157:                 } else {
 10701   006036  D751               	goto	l24790
 10702   006038                     l24820:
 10703                           
 10704                           ;../../VLCBlib_PIC/event_producer_happening.c: 158:                     sendMessage4(OPC
      +                          _AROF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10705   006038  0101               	movlb	1	; () banked
 10706   00603A  EE20 F002          	lfsr	2,2
 10707   00603E  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10708   006040  26D9               	addwf	fsr2l,f,c
 10709   006042  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10710   006044  22DA               	addwfc	fsr2h,f,c
 10711   006046  50DF               	movf	indf2,w,c
 10712   006048  6FC5               	movwf	sendMessage4@data1& (0+255),b
 10713   00604A  EE20 F003          	lfsr	2,3
 10714   00604E  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10715   006050  26D9               	addwf	fsr2l,f,c
 10716   006052  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10717   006054  22DA               	addwfc	fsr2h,f,c
 10718   006056  50DF               	movf	indf2,w,c
 10719   006058  6FC6               	movwf	sendMessage4@data2& (0+255),b
 10720   00605A  EE20 F004          	lfsr	2,4
 10721   00605E  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10722   006060  26D9               	addwf	fsr2l,f,c
 10723   006062  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10724   006064  22DA               	addwfc	fsr2h,f,c
 10725   006066  50DF               	movf	indf2,w,c
 10726   006068  6FC7               	movwf	sendMessage4@data3& (0+255),b
 10727   00606A  EE20 F005          	lfsr	2,5
 10728   00606E  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10729   006070  26D9               	addwf	fsr2l,f,c
 10730   006072  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10731   006074  22DA               	addwfc	fsr2h,f,c
 10732   006076  50DF               	movf	indf2,w,c
 10733   006078  6FC8               	movwf	sendMessage4@data4& (0+255),b
 10734   00607A  0E94               	movlw	148
 10735   00607C  ECFA  F060         	call	_sendMessage4
 10736   006080  D72C               	goto	l24790
 10737   006082                     l24822:
 10738                           
 10739                           ; BSR set to: 1
 10740                           ;../../VLCBlib_PIC/event_producer_happening.c: 161:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10741   006082  0102               	movlb	2	; () banked
 10742   006084  51D4               	movf	producerProcessMessage@h& (0+255),w,b
 10743   006086  ECF8  F01E         	call	_APP_GetEventState
 10744   00608A  06E8               	decf	wreg,f,c
 10745   00608C  A4D8               	btfss	status,2,c
 10746   00608E  D019               	goto	l24826
 10747                           
 10748                           ;../../VLCBlib_PIC/event_producer_happening.c: 162:                     sendMessage4(OPC
      +                          _ARSON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10749   006090  C0B6  F1C5         	movff	_nn+1,sendMessage4@data1
 10750   006094  C0B5  F1C6         	movff	_nn,sendMessage4@data2
 10751   006098  0101               	movlb	1	; () banked
 10752   00609A  EE20 F004          	lfsr	2,4
 10753   00609E  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10754   0060A0  26D9               	addwf	fsr2l,f,c
 10755   0060A2  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10756   0060A4  22DA               	addwfc	fsr2h,f,c
 10757   0060A6  50DF               	movf	indf2,w,c
 10758   0060A8  6FC7               	movwf	sendMessage4@data3& (0+255),b
 10759   0060AA  EE20 F005          	lfsr	2,5
 10760   0060AE  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10761   0060B0  26D9               	addwf	fsr2l,f,c
 10762   0060B2  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10763   0060B4  22DA               	addwfc	fsr2h,f,c
 10764   0060B6  50DF               	movf	indf2,w,c
 10765   0060B8  6FC8               	movwf	sendMessage4@data4& (0+255),b
 10766   0060BA  0E9D               	movlw	157
 10767   0060BC  ECFA  F060         	call	_sendMessage4
 10768                           
 10769                           ;../../VLCBlib_PIC/event_producer_happening.c: 163:                 } else {
 10770   0060C0  D70C               	goto	l24790
 10771   0060C2                     l24826:
 10772                           
 10773                           ;../../VLCBlib_PIC/event_producer_happening.c: 164:                     sendMessage4(OPC
      +                          _ARSOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10774   0060C2  C0B6  F1C5         	movff	_nn+1,sendMessage4@data1
 10775   0060C6  C0B5  F1C6         	movff	_nn,sendMessage4@data2
 10776   0060CA  0101               	movlb	1	; () banked
 10777   0060CC  EE20 F004          	lfsr	2,4
 10778   0060D0  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10779   0060D2  26D9               	addwf	fsr2l,f,c
 10780   0060D4  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10781   0060D6  22DA               	addwfc	fsr2h,f,c
 10782   0060D8  50DF               	movf	indf2,w,c
 10783   0060DA  6FC7               	movwf	sendMessage4@data3& (0+255),b
 10784   0060DC  EE20 F005          	lfsr	2,5
 10785   0060E0  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10786   0060E2  26D9               	addwf	fsr2l,f,c
 10787   0060E4  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10788   0060E6  22DA               	addwfc	fsr2h,f,c
 10789   0060E8  50DF               	movf	indf2,w,c
 10790   0060EA  6FC8               	movwf	sendMessage4@data4& (0+255),b
 10791   0060EC  0E9E               	movlw	158
 10792   0060EE  ECFA  F060         	call	_sendMessage4
 10793   0060F2  D6F3               	goto	l24790
 10794   0060F4                     l24834:
 10795   0060F4  0101               	movlb	1	; () banked
 10796   0060F6  EE20 F001          	lfsr	2,1
 10797   0060FA  51FC               	movf	producerProcessMessage@m& (0+255),w,b
 10798   0060FC  26D9               	addwf	fsr2l,f,c
 10799   0060FE  51FD               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10800   006100  22DA               	addwfc	fsr2h,f,c
 10801   006102  50DF               	movf	indf2,w,c
 10802   006104  0102               	movlb	2	; () banked
 10803   006106  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10804   006108  6BCD               	clrf	(??_producerProcessMessage+1)& (0+255),b
 10805                           
 10806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10807                           ; Switch size 1, requested type "simple"
 10808                           ; Number of cases is 1, Range of values is 0 to 0
 10809                           ; switch strategies available:
 10810                           ; Name         Instructions Cycles
 10811                           ; simple_byte            4     3 (average)
 10812                           ;	Chosen strategy is simple_byte
 10813   00610A  51CD               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 10814   00610C  0A00               	xorlw	0	; case 0
 10815   00610E  A4D8               	btfss	status,2,c
 10816   006110  D007               	goto	l24836
 10817                           
 10818                           ; BSR set to: 2
 10819                           ; Switch size 1, requested type "simple"
 10820                           ; Number of cases is 2, Range of values is 146 to 154
 10821                           ; switch strategies available:
 10822                           ; Name         Instructions Cycles
 10823                           ; simple_byte            7     4 (average)
 10824                           ;	Chosen strategy is simple_byte
 10825   006112  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10826   006114  0A92               	xorlw	146	; case 146
 10827   006116  B4D8               	btfsc	status,2,c
 10828   006118  D6CF               	goto	l24786
 10829   00611A  0A08               	xorlw	8	; case 154
 10830   00611C  B4D8               	btfsc	status,2,c
 10831   00611E  D6CC               	goto	l24786
 10832   006120                     l24836:
 10833                           
 10834                           ; BSR set to: 2
 10835                           ;../../VLCBlib_PIC/event_producer_happening.c: 171:     return NOT_PROCESSED;
 10836   006120  0E00               	movlw	0
 10837   006122  0012               	return		;funcret
 10838   006124                     __end_of_producerProcessMessage:
 10839                           	callstack 0
 10840                           
 10841 ;; *************** function _canProcessMessage *****************
 10842 ;; Defined at:
 10843 ;;		line 373 in file "../../VLCBlib_PIC/can18_ecan.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;  m               2   63[BANK1 ] PTR struct Message
 10846 ;;		 -> poll@m(9), 
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;		None
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      enum E12966
 10851 ;; Registers used:
 10852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10858 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10860 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10861 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10862 ;;Total ram usage:        4 bytes
 10863 ;; Hardware stack levels used: 1
 10864 ;; Hardware stack levels required when called: 17
 10865 ;; This function calls:
 10866 ;;		_sendMessage5
 10867 ;; This function is called by:
 10868 ;;		_poll
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           	psect	text21
 10873   009D0C                     __ptext21:
 10874                           	callstack 0
 10875   009D0C                     _canProcessMessage:
 10876                           	callstack 12
 10877                           
 10878                           ;../../VLCBlib_PIC/can18_ecan.c: 375:     if (m->len < 3) return NOT_PROCESSED;
 10879                           
 10880                           ;incstack = 0
 10881   009D0C  C1FC  FFD9         	movff	canProcessMessage@m,fsr2l
 10882   009D10  C1FD  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10883   009D14  0E03               	movlw	3
 10884   009D16  60DF               	cpfslt	indf2,c
 10885   009D18  D002               	goto	l24328
 10886   009D1A                     u26150:
 10887   009D1A  0E00               	movlw	0
 10888   009D1C  0012               	return	
 10889   009D1E                     l24328:
 10890                           
 10891                           ;../../VLCBlib_PIC/can18_ecan.c: 376:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10892   009D1E  0101               	movlb	1	; () banked
 10893   009D20  EE20 F002          	lfsr	2,2
 10894   009D24  51FC               	movf	canProcessMessage@m& (0+255),w,b
 10895   009D26  26D9               	addwf	fsr2l,f,c
 10896   009D28  51FD               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10897   009D2A  22DA               	addwfc	fsr2h,f,c
 10898   009D2C  50DE               	movf	postinc2,w,c
 10899   009D2E  0100               	movlb	0	; () banked
 10900   009D30  19B6               	xorwf	(_nn+1)& (0+255),w,b
 10901   009D32  A4D8               	btfss	status,2,c
 10902   009D34  D7F2               	goto	u26150
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;../../VLCBlib_PIC/can18_ecan.c: 377:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10906   009D36  0101               	movlb	1	; () banked
 10907   009D38  EE20 F003          	lfsr	2,3
 10908   009D3C  51FC               	movf	canProcessMessage@m& (0+255),w,b
 10909   009D3E  26D9               	addwf	fsr2l,f,c
 10910   009D40  51FD               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10911   009D42  22DA               	addwfc	fsr2h,f,c
 10912   009D44  0100               	movlb	0	; () banked
 10913   009D46  51B5               	movf	_nn& (0+255),w,b
 10914   009D48  18DE               	xorwf	postinc2,w,c
 10915   009D4A  A4D8               	btfss	status,2,c
 10916   009D4C  D7E6               	goto	u26150
 10917   009D4E  D017               	goto	l24358
 10918   009D50                     l24340:
 10919                           
 10920                           ;../../VLCBlib_PIC/can18_ecan.c: 383:             return PROCESSED;
 10921   009D50  0E01               	movlw	1
 10922   009D52  0012               	return	
 10923   009D54                     l24344:
 10924                           
 10925                           ; BSR set to: 1
 10926                           ;../../VLCBlib_PIC/can18_ecan.c: 385:             if (m->len < 4) {
 10927   009D54  C1FC  FFD9         	movff	canProcessMessage@m,fsr2l
 10928   009D58  C1FD  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10929   009D5C  0E04               	movlw	4
 10930   009D5E  60DF               	cpfslt	indf2,c
 10931   009D60  D7F7               	goto	l24340
 10932                           
 10933                           ; BSR set to: 1
 10934                           ;../../VLCBlib_PIC/can18_ecan.c: 387:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10935   009D62  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 10936   009D66  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 10937   009D6A  0E75               	movlw	117
 10938   009D6C  6FC7               	movwf	sendMessage5@data3& (0+255),b
 10939   009D6E  0E01               	movlw	1
 10940   009D70  6FC8               	movwf	sendMessage5@data4& (0+255),b
 10941   009D72  0E01               	movlw	1
 10942   009D74  6FC9               	movwf	sendMessage5@data5& (0+255),b
 10943   009D76  0EAF               	movlw	175
 10944   009D78  ECE2  F060         	call	_sendMessage5
 10945   009D7C  D7E9               	goto	l24340
 10946   009D7E                     l24358:
 10947                           
 10948                           ; BSR set to: 0
 10949   009D7E  0101               	movlb	1	; () banked
 10950   009D80  EE20 F001          	lfsr	2,1
 10951   009D84  51FC               	movf	canProcessMessage@m& (0+255),w,b
 10952   009D86  26D9               	addwf	fsr2l,f,c
 10953   009D88  51FD               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10954   009D8A  22DA               	addwfc	fsr2h,f,c
 10955   009D8C  50DF               	movf	indf2,w,c
 10956   009D8E  6FFE               	movwf	??_canProcessMessage& (0+255),b
 10957   009D90  6BFF               	clrf	(??_canProcessMessage+1)& (0+255),b
 10958                           
 10959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10960                           ; Switch size 1, requested type "simple"
 10961                           ; Number of cases is 1, Range of values is 0 to 0
 10962                           ; switch strategies available:
 10963                           ; Name         Instructions Cycles
 10964                           ; simple_byte            4     3 (average)
 10965                           ;	Chosen strategy is simple_byte
 10966   009D92  51FF               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10967   009D94  0A00               	xorlw	0	; case 0
 10968   009D96  A4D8               	btfss	status,2,c
 10969   009D98  D7C0               	goto	u26150
 10970                           
 10971                           ; BSR set to: 1
 10972                           ; Switch size 1, requested type "simple"
 10973                           ; Number of cases is 2, Range of values is 93 to 117
 10974                           ; switch strategies available:
 10975                           ; Name         Instructions Cycles
 10976                           ; simple_byte            7     4 (average)
 10977                           ;	Chosen strategy is simple_byte
 10978   009D9A  51FE               	movf	??_canProcessMessage& (0+255),w,b
 10979   009D9C  0A5D               	xorlw	93	; case 93
 10980   009D9E  B4D8               	btfsc	status,2,c
 10981   009DA0  D7D7               	goto	l24340
 10982   009DA2  0A28               	xorlw	40	; case 117
 10983   009DA4  B4D8               	btfsc	status,2,c
 10984   009DA6  D7D6               	goto	l24344
 10985   009DA8  D7B8               	goto	u26150
 10986   009DAA                     __end_of_canProcessMessage:
 10987                           	callstack 0
 10988                           
 10989 ;; *************** function _nvProcessMessage *****************
 10990 ;; Defined at:
 10991 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;  m               2   63[BANK1 ] PTR struct Message
 10994 ;;		 -> poll@m(9), 
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;  valueOrError    2    0[BANK2 ] short 
 10997 ;; Return value:  Size  Location     Type
 10998 ;;                  1    wreg      enum E12799
 10999 ;; Registers used:
 11000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11006 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11007 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11008 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11009 ;;      Totals:         0       0       4       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11010 ;;Total ram usage:        6 bytes
 11011 ;; Hardware stack levels used: 1
 11012 ;; Hardware stack levels required when called: 27
 11013 ;; This function calls:
 11014 ;;		_findServiceIndex
 11015 ;;		_getNV
 11016 ;;		_sendMessage2
 11017 ;;		_sendMessage3
 11018 ;;		_sendMessage4
 11019 ;;		_sendMessage5
 11020 ;;		_setNV
 11021 ;;		_startTimedResponse
 11022 ;; This function is called by:
 11023 ;;		_poll
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           	psect	text22
 11028   00483C                     __ptext22:
 11029                           	callstack 0
 11030   00483C                     _nvProcessMessage:
 11031                           	callstack 2
 11032                           
 11033                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 11034                           
 11035                           ;incstack = 0
 11036   00483C  C1FC  FFD9         	movff	nvProcessMessage@m,fsr2l
 11037   004840  C1FD  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11038   004844  0E03               	movlw	3
 11039   004846  60DF               	cpfslt	indf2,c
 11040   004848  D002               	goto	l24030
 11041   00484A                     u25890:
 11042                           
 11043                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 11044   00484A  0E00               	movlw	0
 11045   00484C  0012               	return	
 11046   00484E                     l24030:
 11047                           
 11048                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11049   00484E  0101               	movlb	1	; () banked
 11050   004850  EE20 F002          	lfsr	2,2
 11051   004854  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11052   004856  26D9               	addwf	fsr2l,f,c
 11053   004858  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11054   00485A  22DA               	addwfc	fsr2h,f,c
 11055   00485C  50DE               	movf	postinc2,w,c
 11056   00485E  0100               	movlb	0	; () banked
 11057   004860  19B6               	xorwf	(_nn+1)& (0+255),w,b
 11058   004862  A4D8               	btfss	status,2,c
 11059   004864  D7F2               	goto	u25890
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11063   004866  0101               	movlb	1	; () banked
 11064   004868  EE20 F003          	lfsr	2,3
 11065   00486C  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11066   00486E  26D9               	addwf	fsr2l,f,c
 11067   004870  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11068   004872  22DA               	addwfc	fsr2h,f,c
 11069   004874  0100               	movlb	0	; () banked
 11070   004876  51B5               	movf	_nn& (0+255),w,b
 11071   004878  18DE               	xorwf	postinc2,w,c
 11072   00487A  A4D8               	btfss	status,2,c
 11073   00487C  D7E6               	goto	u25890
 11074   00487E  D15E               	goto	l24152
 11075   004880                     l24042:
 11076                           
 11077                           ; BSR set to: 1
 11078                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 11079   004880  C1FC  FFD9         	movff	nvProcessMessage@m,fsr2l
 11080   004884  C1FD  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11081   004888  0E04               	movlw	4
 11082   00488A  60DF               	cpfslt	indf2,c
 11083   00488C  D01D               	goto	l24052
 11084                           
 11085                           ; BSR set to: 1
 11086                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 11087   00488E  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 11088   004892  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 11089   004896  0E01               	movlw	1
 11090   004898  0100               	movlb	0	; () banked
 11091   00489A  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11092   00489C  0E6F               	movlw	111
 11093   00489E  EC40  F061         	call	_sendMessage3
 11094                           
 11095                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11096   0048A2  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11097   0048A6  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11098   0048AA  0E71               	movlw	113
 11099   0048AC  0101               	movlb	1	; () banked
 11100   0048AE  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11101   0048B0  0E01               	movlw	1
 11102   0048B2  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11103   0048B4  0E01               	movlw	1
 11104   0048B6  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11105   0048B8  0EAF               	movlw	175
 11106   0048BA  ECE2  F060         	call	_sendMessage5
 11107   0048BE                     l24046:
 11108                           
 11109                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 11110   0048BE  0101               	movlb	1	; () banked
 11111   0048C0  4BAB               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 11112   0048C2  2BAC               	incf	(_nvDiagnostics+5)& (0+255),f,b
 11113   0048C4                     l24048:
 11114                           
 11115                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 11116   0048C4  0E01               	movlw	1
 11117   0048C6  0012               	return	
 11118   0048C8                     l24052:
 11119                           
 11120                           ; BSR set to: 1
 11121                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 11122   0048C8  EE20 F004          	lfsr	2,4
 11123   0048CC  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11124   0048CE  26D9               	addwf	fsr2l,f,c
 11125   0048D0  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11126   0048D2  22DA               	addwfc	fsr2h,f,c
 11127   0048D4  50DF               	movf	indf2,w,c
 11128   0048D6  EC53  F05F         	call	_getNV
 11129   0048DA  C08D  F2CC         	movff	?_getNV,nvProcessMessage@valueOrError
 11130   0048DE  C08E  F2CD         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11131                           
 11132                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 11133   0048E2  0102               	movlb	2	; () banked
 11134   0048E4  AFCD               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11135   0048E6  D01D               	goto	l24064
 11136                           
 11137                           ; BSR set to: 2
 11138                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11139   0048E8  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 11140   0048EC  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 11141   0048F0  51CC               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11142   0048F2  0800               	sublw	0
 11143   0048F4  0100               	movlb	0	; () banked
 11144   0048F6  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11145   0048F8  0E6F               	movlw	111
 11146   0048FA  EC40  F061         	call	_sendMessage3
 11147                           
 11148                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11149   0048FE  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11150   004902  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11151   004906  0E71               	movlw	113
 11152   004908  0101               	movlb	1	; () banked
 11153   00490A  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11154   00490C  0E01               	movlw	1
 11155   00490E  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11156   004910  0102               	movlb	2	; () banked
 11157   004912  51CC               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11158   004914  0800               	sublw	0
 11159   004916  0101               	movlb	1	; () banked
 11160   004918  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11161   00491A  0EAF               	movlw	175
 11162   00491C  ECE2  F060         	call	_sendMessage5
 11163   004920  D7CE               	goto	l24046
 11164   004922                     l24064:
 11165                           
 11166                           ; BSR set to: 2
 11167                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 11168   004922  0101               	movlb	1	; () banked
 11169   004924  4BA9               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11170   004926  2BAA               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11171                           
 11172                           ; BSR set to: 1
 11173                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11174   004928  C0B6  F1C5         	movff	_nn+1,sendMessage4@data1
 11175   00492C  C0B5  F1C6         	movff	_nn,sendMessage4@data2
 11176   004930  EE20 F004          	lfsr	2,4
 11177   004934  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11178   004936  26D9               	addwf	fsr2l,f,c
 11179   004938  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11180   00493A  22DA               	addwfc	fsr2h,f,c
 11181   00493C  50DF               	movf	indf2,w,c
 11182   00493E  6FC7               	movwf	sendMessage4@data3& (0+255),b
 11183   004940  C2CC  F1C8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11184   004944  0E97               	movlw	151
 11185   004946  ECFA  F060         	call	_sendMessage4
 11186                           
 11187                           ;../../VLCBlib_PIC/nv.c: 278:             if (m->bytes[2] == 0) {
 11188   00494A  0101               	movlb	1	; () banked
 11189   00494C  EE20 F004          	lfsr	2,4
 11190   004950  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11191   004952  26D9               	addwf	fsr2l,f,c
 11192   004954  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11193   004956  22DA               	addwfc	fsr2h,f,c
 11194   004958  50DF               	movf	indf2,w,c
 11195   00495A  A4D8               	btfss	status,2,c
 11196   00495C  D7B3               	goto	l24048
 11197                           
 11198                           ; BSR set to: 1
 11199                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 11200   00495E  0E02               	movlw	2
 11201   004960  ECBE  F057         	call	_findServiceIndex
 11202   004964  0100               	movlb	0	; () banked
 11203   004966  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11204   004968  0EEA               	movlw	low _nvTRnvrdCallback
 11205   00496A  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11206   00496C  0EBD               	movlw	high _nvTRnvrdCallback
 11207   00496E  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11208   004970  0E06               	movlw	6
 11209   004972  EC15  F05F         	call	_startTimedResponse
 11210   004976  D7A6               	goto	l24048
 11211   004978                     l24076:
 11212                           
 11213                           ; BSR set to: 1
 11214                           ;../../VLCBlib_PIC/nv.c: 285:             if (m->len < 5) {
 11215   004978  C1FC  FFD9         	movff	nvProcessMessage@m,fsr2l
 11216   00497C  C1FD  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11217   004980  0E05               	movlw	5
 11218   004982  60DF               	cpfslt	indf2,c
 11219   004984  D00E               	goto	l24086
 11220                           
 11221                           ; BSR set to: 1
 11222                           ;../../VLCBlib_PIC/nv.c: 288:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11223   004986  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11224   00498A  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11225   00498E  0E96               	movlw	150
 11226   004990  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11227   004992  0E01               	movlw	1
 11228   004994  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11229   004996  0E01               	movlw	1
 11230   004998  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11231   00499A  0EAF               	movlw	175
 11232   00499C  ECE2  F060         	call	_sendMessage5
 11233   0049A0  D78E               	goto	l24046
 11234   0049A2                     l24086:
 11235                           
 11236                           ; BSR set to: 1
 11237                           ;../../VLCBlib_PIC/nv.c: 295:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11238   0049A2  EE20 F005          	lfsr	2,5
 11239   0049A6  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11240   0049A8  26D9               	addwf	fsr2l,f,c
 11241   0049AA  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11242   0049AC  22DA               	addwfc	fsr2h,f,c
 11243   0049AE  50DF               	movf	indf2,w,c
 11244   0049B0  6FF7               	movwf	setNV@value& (0+255),b
 11245   0049B2  EE20 F004          	lfsr	2,4
 11246   0049B6  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11247   0049B8  26D9               	addwf	fsr2l,f,c
 11248   0049BA  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11249   0049BC  22DA               	addwfc	fsr2h,f,c
 11250   0049BE  50DF               	movf	indf2,w,c
 11251   0049C0  EC1F  F056         	call	_setNV
 11252   0049C4  0101               	movlb	1	; () banked
 11253   0049C6  6FFE               	movwf	??_nvProcessMessage& (0+255),b
 11254   0049C8  51FE               	movf	??_nvProcessMessage& (0+255),w,b
 11255   0049CA  0102               	movlb	2	; () banked
 11256   0049CC  6FCC               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11257   0049CE  6BCD               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11258                           
 11259                           ; BSR set to: 2
 11260                           ;../../VLCBlib_PIC/nv.c: 296:             if (valueOrError >0) {
 11261   0049D0  BFCD               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11262   0049D2  D00F               	goto	l24098
 11263   0049D4  51CD               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11264   0049D6  E103               	bnz	u25960
 11265   0049D8  05CC               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11266   0049DA  A0D8               	btfss	status,0,c
 11267   0049DC  D00A               	goto	l24098
 11268   0049DE                     u25960:
 11269                           
 11270                           ; BSR set to: 2
 11271                           ;../../VLCBlib_PIC/nv.c: 297:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11272   0049DE  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 11273   0049E2  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 11274   0049E6  C2CC  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11275   0049EA  0E6F               	movlw	111
 11276   0049EC  EC40  F061         	call	_sendMessage3
 11277   0049F0  D766               	goto	l24046
 11278   0049F2                     l24098:
 11279                           
 11280                           ; BSR set to: 2
 11281                           ;../../VLCBlib_PIC/nv.c: 304:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 11282   0049F2  C0B6  F0A6         	movff	_nn+1,sendMessage2@data1
 11283   0049F6  C0B5  F0A7         	movff	_nn,sendMessage2@data2
 11284   0049FA  0E59               	movlw	89
 11285   0049FC  ECB2  F060         	call	_sendMessage2
 11286                           
 11287                           ;../../VLCBlib_PIC/nv.c: 306:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 11288   004A00  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11289   004A04  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11290   004A08  0E96               	movlw	150
 11291   004A0A  0101               	movlb	1	; () banked
 11292   004A0C  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11293   004A0E  0E01               	movlw	1
 11294   004A10  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11295   004A12  0E00               	movlw	0
 11296   004A14  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11297   004A16  0EAF               	movlw	175
 11298   004A18  ECE2  F060         	call	_sendMessage5
 11299   004A1C  D753               	goto	l24048
 11300   004A1E                     l24104:
 11301                           
 11302                           ; BSR set to: 1
 11303                           ;../../VLCBlib_PIC/nv.c: 311:             if (m->len < 5) {
 11304   004A1E  C1FC  FFD9         	movff	nvProcessMessage@m,fsr2l
 11305   004A22  C1FD  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11306   004A26  0E05               	movlw	5
 11307   004A28  60DF               	cpfslt	indf2,c
 11308   004A2A  D00E               	goto	l24114
 11309                           
 11310                           ; BSR set to: 1
 11311                           ;../../VLCBlib_PIC/nv.c: 313:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11312   004A2C  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11313   004A30  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11314   004A34  0E8E               	movlw	142
 11315   004A36  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11316   004A38  0E01               	movlw	1
 11317   004A3A  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11318   004A3C  0E01               	movlw	1
 11319   004A3E  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11320   004A40  0EAF               	movlw	175
 11321   004A42  ECE2  F060         	call	_sendMessage5
 11322   004A46  D73B               	goto	l24046
 11323   004A48                     l24114:
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;../../VLCBlib_PIC/nv.c: 319:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11327   004A48  EE20 F005          	lfsr	2,5
 11328   004A4C  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11329   004A4E  26D9               	addwf	fsr2l,f,c
 11330   004A50  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11331   004A52  22DA               	addwfc	fsr2h,f,c
 11332   004A54  50DF               	movf	indf2,w,c
 11333   004A56  6FF7               	movwf	setNV@value& (0+255),b
 11334   004A58  EE20 F004          	lfsr	2,4
 11335   004A5C  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11336   004A5E  26D9               	addwf	fsr2l,f,c
 11337   004A60  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11338   004A62  22DA               	addwfc	fsr2h,f,c
 11339   004A64  50DF               	movf	indf2,w,c
 11340   004A66  EC1F  F056         	call	_setNV
 11341   004A6A  0101               	movlb	1	; () banked
 11342   004A6C  6FFE               	movwf	??_nvProcessMessage& (0+255),b
 11343   004A6E  51FE               	movf	??_nvProcessMessage& (0+255),w,b
 11344   004A70  0102               	movlb	2	; () banked
 11345   004A72  6FCC               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11346   004A74  6BCD               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11347                           
 11348                           ; BSR set to: 2
 11349                           ;../../VLCBlib_PIC/nv.c: 320:             if (valueOrError >0) {
 11350   004A76  BFCD               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11351   004A78  D01D               	goto	l24126
 11352   004A7A  51CD               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11353   004A7C  E103               	bnz	u25980
 11354   004A7E  05CC               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11355   004A80  A0D8               	btfss	status,0,c
 11356   004A82  D018               	goto	l24126
 11357   004A84                     u25980:
 11358                           
 11359                           ; BSR set to: 2
 11360                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11361   004A84  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 11362   004A88  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 11363   004A8C  C2CC  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11364   004A90  0E6F               	movlw	111
 11365   004A92  EC40  F061         	call	_sendMessage3
 11366                           
 11367                           ;../../VLCBlib_PIC/nv.c: 322:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 11368   004A96  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11369   004A9A  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11370   004A9E  0E8E               	movlw	142
 11371   004AA0  0101               	movlb	1	; () banked
 11372   004AA2  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11373   004AA4  0E01               	movlw	1
 11374   004AA6  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11375   004AA8  C2CC  F1C9         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 11376   004AAC  0EAF               	movlw	175
 11377   004AAE  ECE2  F060         	call	_sendMessage5
 11378   004AB2  D705               	goto	l24046
 11379   004AB4                     l24126:
 11380                           
 11381                           ; BSR set to: 2
 11382                           ;../../VLCBlib_PIC/nv.c: 328:             valueOrError = getNV(m->bytes[2]);
 11383   004AB4  0101               	movlb	1	; () banked
 11384   004AB6  EE20 F004          	lfsr	2,4
 11385   004ABA  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11386   004ABC  26D9               	addwf	fsr2l,f,c
 11387   004ABE  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11388   004AC0  22DA               	addwfc	fsr2h,f,c
 11389   004AC2  50DF               	movf	indf2,w,c
 11390   004AC4  EC53  F05F         	call	_getNV
 11391   004AC8  C08D  F2CC         	movff	?_getNV,nvProcessMessage@valueOrError
 11392   004ACC  C08E  F2CD         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11393                           
 11394                           ;../../VLCBlib_PIC/nv.c: 329:             if (valueOrError < 0) {
 11395   004AD0  0102               	movlb	2	; () banked
 11396   004AD2  AFCD               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11397   004AD4  D01D               	goto	l24138
 11398                           
 11399                           ; BSR set to: 2
 11400                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11401   004AD6  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 11402   004ADA  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 11403   004ADE  51CC               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11404   004AE0  0800               	sublw	0
 11405   004AE2  0100               	movlb	0	; () banked
 11406   004AE4  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11407   004AE6  0E6F               	movlw	111
 11408   004AE8  EC40  F061         	call	_sendMessage3
 11409                           
 11410                           ;../../VLCBlib_PIC/nv.c: 331:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11411   004AEC  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11412   004AF0  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11413   004AF4  0E8E               	movlw	142
 11414   004AF6  0101               	movlb	1	; () banked
 11415   004AF8  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11416   004AFA  0E01               	movlw	1
 11417   004AFC  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11418   004AFE  0102               	movlb	2	; () banked
 11419   004B00  51CC               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11420   004B02  0800               	sublw	0
 11421   004B04  0101               	movlb	1	; () banked
 11422   004B06  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11423   004B08  0EAF               	movlw	175
 11424   004B0A  ECE2  F060         	call	_sendMessage5
 11425   004B0E  D6D7               	goto	l24046
 11426   004B10                     l24138:
 11427                           
 11428                           ; BSR set to: 2
 11429                           ;../../VLCBlib_PIC/nv.c: 337:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11430   004B10  C0B6  F1C5         	movff	_nn+1,sendMessage4@data1
 11431   004B14  C0B5  F1C6         	movff	_nn,sendMessage4@data2
 11432   004B18  0101               	movlb	1	; () banked
 11433   004B1A  EE20 F004          	lfsr	2,4
 11434   004B1E  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11435   004B20  26D9               	addwf	fsr2l,f,c
 11436   004B22  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11437   004B24  22DA               	addwfc	fsr2h,f,c
 11438   004B26  50DF               	movf	indf2,w,c
 11439   004B28  6FC7               	movwf	sendMessage4@data3& (0+255),b
 11440   004B2A  C2CC  F1C8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11441   004B2E  0E97               	movlw	151
 11442   004B30  ECFA  F060         	call	_sendMessage4
 11443                           
 11444                           ;../../VLCBlib_PIC/nv.c: 339:             nvDiagnostics[0x01].asUint++;
 11445   004B34  0101               	movlb	1	; () banked
 11446   004B36  4BA9               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11447   004B38  2BAA               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11448   004B3A  D6C4               	goto	l24048
 11449   004B3C                     l24152:
 11450                           
 11451                           ; BSR set to: 0
 11452   004B3C  0101               	movlb	1	; () banked
 11453   004B3E  EE20 F001          	lfsr	2,1
 11454   004B42  51FC               	movf	nvProcessMessage@m& (0+255),w,b
 11455   004B44  26D9               	addwf	fsr2l,f,c
 11456   004B46  51FD               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11457   004B48  22DA               	addwfc	fsr2h,f,c
 11458   004B4A  50DF               	movf	indf2,w,c
 11459   004B4C  6FFE               	movwf	??_nvProcessMessage& (0+255),b
 11460   004B4E  6BFF               	clrf	(??_nvProcessMessage+1)& (0+255),b
 11461                           
 11462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11463                           ; Switch size 1, requested type "simple"
 11464                           ; Number of cases is 1, Range of values is 0 to 0
 11465                           ; switch strategies available:
 11466                           ; Name         Instructions Cycles
 11467                           ; simple_byte            4     3 (average)
 11468                           ;	Chosen strategy is simple_byte
 11469   004B50  51FF               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 11470   004B52  0A00               	xorlw	0	; case 0
 11471   004B54  A4D8               	btfss	status,2,c
 11472   004B56  D679               	goto	u25890
 11473                           
 11474                           ; BSR set to: 1
 11475                           ; Switch size 1, requested type "simple"
 11476                           ; Number of cases is 3, Range of values is 113 to 150
 11477                           ; switch strategies available:
 11478                           ; Name         Instructions Cycles
 11479                           ; simple_byte           10     6 (average)
 11480                           ;	Chosen strategy is simple_byte
 11481   004B58  51FE               	movf	??_nvProcessMessage& (0+255),w,b
 11482   004B5A  0A71               	xorlw	113	; case 113
 11483   004B5C  B4D8               	btfsc	status,2,c
 11484   004B5E  D690               	goto	l24042
 11485   004B60  0AFF               	xorlw	255	; case 142
 11486   004B62  B4D8               	btfsc	status,2,c
 11487   004B64  D75C               	goto	l24104
 11488   004B66  0A18               	xorlw	24	; case 150
 11489   004B68  B4D8               	btfsc	status,2,c
 11490   004B6A  D706               	goto	l24076
 11491   004B6C  D66E               	goto	u25890
 11492   004B6E                     __end_of_nvProcessMessage:
 11493                           	callstack 0
 11494                           
 11495 ;; *************** function _mnsProcessMessage *****************
 11496 ;; Defined at:
 11497 ;;		line 356 in file "../../VLCBlib_PIC/mns.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;  m               2   63[BANK1 ] PTR struct Message
 11500 ;;		 -> poll@m(9), 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;  d               2   32[BANK2 ] PTR struct DiagnosticVal
 11503 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 11504 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 11505 ;;  newMode         1   34[BANK2 ] unsigned char 
 11506 ;;  i               1   30[BANK2 ] unsigned char 
 11507 ;;  flags           1    0        unsigned char 
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      enum E12799
 11510 ;; Registers used:
 11511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11517 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11518 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11519 ;;      Temps:          0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11520 ;;      Totals:         0       0       2      35       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11521 ;;Total ram usage:       37 bytes
 11522 ;; Hardware stack levels used: 1
 11523 ;; Hardware stack levels required when called: 27
 11524 ;; This function calls:
 11525 ;;		NULL
 11526 ;;		_ackGetDiagnostic
 11527 ;;		_bootEsdData
 11528 ;;		_canEsdData
 11529 ;;		_canGetDiagnostic
 11530 ;;		_consumer2QEsdData
 11531 ;;		_consumer2QGetDiagnostic
 11532 ;;		_factoryReset
 11533 ;;		_findServiceIndex
 11534 ;;		_getParameter
 11535 ;;		_getParameterFlags
 11536 ;;		_mnsGetDiagnostic
 11537 ;;		_nvGetDiagnostic
 11538 ;;		_nvGetESDdata
 11539 ;;		_producerEsdData
 11540 ;;		_producerGetDiagnostic
 11541 ;;		_rebuildHashtable
 11542 ;;		_sendMessage2
 11543 ;;		_sendMessage3
 11544 ;;		_sendMessage4
 11545 ;;		_sendMessage5
 11546 ;;		_sendMessage6
 11547 ;;		_sendMessage7
 11548 ;;		_setLEDsByMode
 11549 ;;		_startTimedResponse
 11550 ;;		_teachGetDiagnostic
 11551 ;;		_teachGetESDdata
 11552 ;;		_writeNVM
 11553 ;; This function is called by:
 11554 ;;		_poll
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           	psect	text23
 11559   001764                     __ptext23:
 11560                           	callstack 0
 11561   001764                     _mnsProcessMessage:
 11562                           	callstack 2
 11563                           
 11564                           ;../../VLCBlib_PIC/mns.c: 357:     uint8_t i;;../../VLCBlib_PIC/mns.c: 358:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 360:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 365: 
      +                              if (mode_state == MODE_SETUP) {
 11565                           
 11566                           ;incstack = 0
 11567   001764  0100               	movlb	0	; () banked
 11568   001766  51C4               	movf	_mode_state& (0+255),w,b
 11569   001768  B4D8               	btfsc	status,2,c
 11570   00176A  D0BC               	goto	l23592
 11571   00176C  D12A               	goto	l23638
 11572   00176E                     l23548:
 11573                           
 11574                           ; BSR set to: 2
 11575                           ;../../VLCBlib_PIC/mns.c: 368:                 if (m->len < 3) {
 11576   00176E  C1FC  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11577   001772  C1FD  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11578   001776  0E03               	movlw	3
 11579   001778  60DF               	cpfslt	indf2,c
 11580   00177A  D00F               	goto	l23552
 11581                           
 11582                           ; BSR set to: 2
 11583                           ;../../VLCBlib_PIC/mns.c: 370:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11584   00177C  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11585   001780  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11586   001784  0E42               	movlw	66
 11587   001786  0101               	movlb	1	; () banked
 11588   001788  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11589   00178A  0E01               	movlw	1
 11590   00178C  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11591   00178E  0E01               	movlw	1
 11592   001790  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11593   001792  0EAF               	movlw	175
 11594   001794  ECE2  F060         	call	_sendMessage5
 11595                           
 11596                           ;../../VLCBlib_PIC/mns.c: 372:                 } else {
 11597   001798  D03C               	goto	l23568
 11598   00179A                     l23552:
 11599                           
 11600                           ; BSR set to: 2
 11601                           ;../../VLCBlib_PIC/mns.c: 373:                     nn.bytes.hi = m->bytes[0];
 11602   00179A  0101               	movlb	1	; () banked
 11603   00179C  EE20 F002          	lfsr	2,2
 11604   0017A0  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 11605   0017A2  26D9               	addwf	fsr2l,f,c
 11606   0017A4  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11607   0017A6  22DA               	addwfc	fsr2h,f,c
 11608   0017A8  50DF               	movf	indf2,w,c
 11609   0017AA  0100               	movlb	0	; () banked
 11610   0017AC  6FB6               	movwf	(_nn+1)& (0+255),b
 11611                           
 11612                           ;../../VLCBlib_PIC/mns.c: 374:                     nn.bytes.lo = m->bytes[1];
 11613   0017AE  0101               	movlb	1	; () banked
 11614   0017B0  EE20 F003          	lfsr	2,3
 11615   0017B4  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 11616   0017B6  26D9               	addwf	fsr2l,f,c
 11617   0017B8  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11618   0017BA  22DA               	addwfc	fsr2h,f,c
 11619   0017BC  50DF               	movf	indf2,w,c
 11620   0017BE  0100               	movlb	0	; () banked
 11621   0017C0  6FB5               	movwf	_nn& (0+255),b
 11622                           
 11623                           ; BSR set to: 0
 11624                           ;../../VLCBlib_PIC/mns.c: 375:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 11625   0017C2  0EFD               	movlw	253
 11626   0017C4  6FA4               	movwf	writeNVM@index& (0+255),b
 11627   0017C6  0E03               	movlw	3
 11628   0017C8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11629   0017CA  0E00               	movlw	0
 11630   0017CC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11631   0017CE  C0B6  F0A7         	movff	_nn+1,writeNVM@value
 11632   0017D2  0E00               	movlw	0
 11633   0017D4  EC61  F05D         	call	_writeNVM
 11634                           
 11635                           ;../../VLCBlib_PIC/mns.c: 376:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 11636   0017D8  0EFC               	movlw	252
 11637   0017DA  0100               	movlb	0	; () banked
 11638   0017DC  6FA4               	movwf	writeNVM@index& (0+255),b
 11639   0017DE  0E03               	movlw	3
 11640   0017E0  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11641   0017E2  0E00               	movlw	0
 11642   0017E4  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11643   0017E6  C0B5  F0A7         	movff	_nn,writeNVM@value
 11644   0017EA  0E00               	movlw	0
 11645   0017EC  EC61  F05D         	call	_writeNVM
 11646                           
 11647                           ;../../VLCBlib_PIC/mns.c: 378:                     mode_state = MODE_NORMAL;
 11648   0017F0  0E01               	movlw	1
 11649   0017F2  0100               	movlb	0	; () banked
 11650   0017F4  6FC4               	movwf	_mode_state& (0+255),b
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;../../VLCBlib_PIC/mns.c: 381:                     rebuildHashtable();
 11654   0017F6  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 11655                           
 11656                           ;../../VLCBlib_PIC/mns.c: 384:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 11657   0017FA  C0B6  F0A6         	movff	_nn+1,sendMessage2@data1
 11658   0017FE  C0B5  F0A7         	movff	_nn,sendMessage2@data2
 11659   001802  0E52               	movlw	82
 11660   001804  ECB2  F060         	call	_sendMessage2
 11661                           
 11662                           ;../../VLCBlib_PIC/mns.c: 386:                     mnsDiagnostics[0x05].asUint++;
 11663   001808  0101               	movlb	1	; () banked
 11664   00180A  4B9A               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 11665   00180C  2B9B               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 11666   00180E                     l23566:
 11667                           
 11668                           ;../../VLCBlib_PIC/mns.c: 389:                     setLEDsByMode();
 11669   00180E  EC51  F060         	call	_setLEDsByMode	;wreg free
 11670   001812                     l23568:
 11671                           
 11672                           ;../../VLCBlib_PIC/mns.c: 391:                 return PROCESSED;
 11673   001812  0E01               	movlw	1
 11674   001814  0012               	return	
 11675   001816                     l23572:
 11676                           
 11677                           ; BSR set to: 2
 11678                           ;../../VLCBlib_PIC/mns.c: 393:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 11679   001816  0EA5               	movlw	165
 11680   001818  0101               	movlb	1	; () banked
 11681   00181A  6FC5               	movwf	sendMessage7@data1& (0+255),b
 11682   00181C  0E61               	movlw	97
 11683   00181E  6FC6               	movwf	sendMessage7@data2& (0+255),b
 11684   001820  0E20               	movlw	32
 11685   001822  6FC7               	movwf	sendMessage7@data3& (0+255),b
 11686   001824  0EFF               	movlw	255
 11687   001826  6FC8               	movwf	sendMessage7@data4& (0+255),b
 11688   001828  0E14               	movlw	20
 11689   00182A  6FC9               	movwf	sendMessage7@data5& (0+255),b
 11690   00182C  0E7F               	movlw	127
 11691   00182E  6FCA               	movwf	sendMessage7@data6& (0+255),b
 11692   001830  0E04               	movlw	4
 11693   001832  6FCB               	movwf	sendMessage7@data7& (0+255),b
 11694   001834  0EEF               	movlw	239
 11695   001836  ECCA  F060         	call	_sendMessage7
 11696   00183A  D7EB               	goto	l23568
 11697   00183C                     l23578:
 11698                           
 11699                           ; BSR set to: 2
 11700                           ;../../VLCBlib_PIC/mns.c: 398:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 11701   00183C  0E48               	movlw	72
 11702   00183E  6EF6               	movwf	tblptrl,c
 11703   001840                     	if	1	;There is more than 1 active tblptr byte
 11704   001840  0E08               	movlw	8
 11705   001842  6EF7               	movwf	tblptrh,c
 11706   001844                     	endif
 11707   001844                     	if	1	;There are 3 active tblptr bytes
 11708   001844  0E00               	movlw	0
 11709   001846  6EF8               	movwf	tblptru,c
 11710   001848                     	endif
 11711   001848  0008               	tblrd		*
 11712   00184A  CFF5 F1C5          	movff	tablat,sendMessage7@data1
 11713   00184E  0E49               	movlw	73
 11714   001850  6EF6               	movwf	tblptrl,c
 11715   001852  0E08               	movlw	8
 11716   001854  6EF7               	movwf	tblptrh,c
 11717   001856  0E00               	movlw	0
 11718   001858  6EF8               	movwf	tblptru,c
 11719   00185A  0008               	tblrd		*
 11720   00185C  CFF5 F1C6          	movff	tablat,sendMessage7@data2
 11721   001860  0E4A               	movlw	74
 11722   001862  6EF6               	movwf	tblptrl,c
 11723   001864  0E08               	movlw	8
 11724   001866  6EF7               	movwf	tblptrh,c
 11725   001868  0E00               	movlw	0
 11726   00186A  6EF8               	movwf	tblptru,c
 11727   00186C  0008               	tblrd		*
 11728   00186E  CFF5 F1C7          	movff	tablat,sendMessage7@data3
 11729   001872  0E4B               	movlw	75
 11730   001874  6EF6               	movwf	tblptrl,c
 11731   001876  0E08               	movlw	8
 11732   001878  6EF7               	movwf	tblptrh,c
 11733   00187A  0E00               	movlw	0
 11734   00187C  6EF8               	movwf	tblptru,c
 11735   00187E  0008               	tblrd		*
 11736   001880  CFF5 F1C8          	movff	tablat,sendMessage7@data4
 11737   001884  0E4C               	movlw	76
 11738   001886  6EF6               	movwf	tblptrl,c
 11739   001888  0E08               	movlw	8
 11740   00188A  6EF7               	movwf	tblptrh,c
 11741   00188C  0E00               	movlw	0
 11742   00188E  6EF8               	movwf	tblptru,c
 11743   001890  0008               	tblrd		*
 11744   001892  CFF5 F1C9          	movff	tablat,sendMessage7@data5
 11745   001896  0E4D               	movlw	77
 11746   001898  6EF6               	movwf	tblptrl,c
 11747   00189A  0E08               	movlw	8
 11748   00189C  6EF7               	movwf	tblptrh,c
 11749   00189E  0E00               	movlw	0
 11750   0018A0  6EF8               	movwf	tblptru,c
 11751   0018A2  0008               	tblrd		*
 11752   0018A4  CFF5 F1CA          	movff	tablat,sendMessage7@data6
 11753   0018A8  0E4E               	movlw	78
 11754   0018AA  6EF6               	movwf	tblptrl,c
 11755   0018AC  0E08               	movlw	8
 11756   0018AE  6EF7               	movwf	tblptrh,c
 11757   0018B0  0E00               	movlw	0
 11758   0018B2  6EF8               	movwf	tblptru,c
 11759   0018B4  0008               	tblrd		*
 11760   0018B6  CFF5 F1CB          	movff	tablat,sendMessage7@data7
 11761   0018BA  0EE2               	movlw	226
 11762   0018BC  ECCA  F060         	call	_sendMessage7
 11763   0018C0  D7A8               	goto	l23568
 11764   0018C2                     l23584:
 11765                           
 11766                           ; BSR set to: 2
 11767                           ;../../VLCBlib_PIC/mns.c: 402:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 11768   0018C2  0E00               	movlw	0
 11769   0018C4  0101               	movlb	1	; () banked
 11770   0018C6  6FC5               	movwf	sendMessage5@data1& (0+255),b
 11771   0018C8  0E00               	movlw	0
 11772   0018CA  6FC6               	movwf	sendMessage5@data2& (0+255),b
 11773   0018CC  0EA5               	movlw	165
 11774   0018CE  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11775   0018D0  0E20               	movlw	32
 11776   0018D2  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11777   0018D4  ECB9  F05B         	call	_getParameterFlags	;wreg free
 11778   0018D8  0101               	movlb	1	; () banked
 11779   0018DA  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11780   0018DC  0EB6               	movlw	182
 11781   0018DE  ECE2  F060         	call	_sendMessage5
 11782   0018E2  D797               	goto	l23568
 11783   0018E4                     l23592:
 11784                           
 11785                           ; BSR set to: 0
 11786   0018E4  0101               	movlb	1	; () banked
 11787   0018E6  EE20 F001          	lfsr	2,1
 11788   0018EA  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 11789   0018EC  26D9               	addwf	fsr2l,f,c
 11790   0018EE  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11791   0018F0  22DA               	addwfc	fsr2h,f,c
 11792   0018F2  50DF               	movf	indf2,w,c
 11793   0018F4  0102               	movlb	2	; () banked
 11794   0018F6  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11795   0018F8  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11796                           
 11797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11798                           ; Switch size 1, requested type "simple"
 11799                           ; Number of cases is 1, Range of values is 0 to 0
 11800                           ; switch strategies available:
 11801                           ; Name         Instructions Cycles
 11802                           ; simple_byte            4     3 (average)
 11803                           ;	Chosen strategy is simple_byte
 11804   0018FA  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11805   0018FC  0A00               	xorlw	0	; case 0
 11806   0018FE  A4D8               	btfss	status,2,c
 11807   001900  D00D               	goto	l23594
 11808                           
 11809                           ; BSR set to: 2
 11810                           ; Switch size 1, requested type "simple"
 11811                           ; Number of cases is 4, Range of values is 13 to 66
 11812                           ; switch strategies available:
 11813                           ; Name         Instructions Cycles
 11814                           ; simple_byte           13     7 (average)
 11815                           ;	Chosen strategy is simple_byte
 11816   001902  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11817   001904  0A0D               	xorlw	13	; case 13
 11818   001906  B4D8               	btfsc	status,2,c
 11819   001908  D7DC               	goto	l23584
 11820   00190A  0A1D               	xorlw	29	; case 16
 11821   00190C  B4D8               	btfsc	status,2,c
 11822   00190E  D783               	goto	l23572
 11823   001910  0A01               	xorlw	1	; case 17
 11824   001912  B4D8               	btfsc	status,2,c
 11825   001914  D793               	goto	l23578
 11826   001916  0A53               	xorlw	83	; case 66
 11827   001918  B4D8               	btfsc	status,2,c
 11828   00191A  D729               	goto	l23548
 11829   00191C                     l23594:
 11830                           
 11831                           ;../../VLCBlib_PIC/mns.c: 407:         return NOT_PROCESSED;
 11832   00191C  0E00               	movlw	0
 11833   00191E  0012               	return	
 11834   001920                     l23598:
 11835                           
 11836                           ; BSR set to: 2
 11837                           ;../../VLCBlib_PIC/mns.c: 412:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11838   001920  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11839   001924  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11840   001928  0EA5               	movlw	165
 11841   00192A  0101               	movlb	1	; () banked
 11842   00192C  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11843   00192E  0E20               	movlw	32
 11844   001930  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11845   001932  ECB9  F05B         	call	_getParameterFlags	;wreg free
 11846   001936  0101               	movlb	1	; () banked
 11847   001938  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11848   00193A  0EB6               	movlw	182
 11849   00193C  ECE2  F060         	call	_sendMessage5
 11850   001940  D768               	goto	l23568
 11851   001942                     l23604:
 11852                           
 11853                           ; BSR set to: 2
 11854                           ;../../VLCBlib_PIC/mns.c: 416:             if (m->len < 4) {
 11855   001942  C1FC  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11856   001946  C1FD  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11857   00194A  0E04               	movlw	4
 11858   00194C  60DF               	cpfslt	indf2,c
 11859   00194E  D00F               	goto	l23612
 11860                           
 11861                           ; BSR set to: 2
 11862                           ;../../VLCBlib_PIC/mns.c: 417:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11863   001950  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 11864   001954  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 11865   001958  0E76               	movlw	118
 11866   00195A  0101               	movlb	1	; () banked
 11867   00195C  6FC7               	movwf	sendMessage5@data3& (0+255),b
 11868   00195E  0E01               	movlw	1
 11869   001960  6FC8               	movwf	sendMessage5@data4& (0+255),b
 11870   001962  0E01               	movlw	1
 11871   001964  6FC9               	movwf	sendMessage5@data5& (0+255),b
 11872   001966  0EAF               	movlw	175
 11873   001968  ECE2  F060         	call	_sendMessage5
 11874   00196C  D752               	goto	l23568
 11875   00196E                     l23612:
 11876                           
 11877                           ; BSR set to: 2
 11878                           ;../../VLCBlib_PIC/mns.c: 420:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11879   00196E  0101               	movlb	1	; () banked
 11880   001970  EE20 F002          	lfsr	2,2
 11881   001974  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 11882   001976  26D9               	addwf	fsr2l,f,c
 11883   001978  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11884   00197A  22DA               	addwfc	fsr2h,f,c
 11885   00197C  50DF               	movf	indf2,w,c
 11886   00197E  A4D8               	btfss	status,2,c
 11887   001980  D036               	goto	l23640
 11888                           
 11889                           ; BSR set to: 1
 11890   001982  EE20 F003          	lfsr	2,3
 11891   001986  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 11892   001988  26D9               	addwf	fsr2l,f,c
 11893   00198A  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11894   00198C  22DA               	addwfc	fsr2h,f,c
 11895   00198E  50DF               	movf	indf2,w,c
 11896   001990  A4D8               	btfss	status,2,c
 11897   001992  D02D               	goto	l23640
 11898                           
 11899                           ; BSR set to: 1
 11900                           ;../../VLCBlib_PIC/mns.c: 421:                 newMode = m->bytes[2];
 11901   001994  EE20 F004          	lfsr	2,4
 11902   001998  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 11903   00199A  26D9               	addwf	fsr2l,f,c
 11904   00199C  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11905   00199E  22DA               	addwfc	fsr2h,f,c
 11906   0019A0  50DF               	movf	indf2,w,c
 11907   0019A2  0102               	movlb	2	; () banked
 11908   0019A4  6FEE               	movwf	mnsProcessMessage@newMode& (0+255),b
 11909                           
 11910                           ; BSR set to: 2
 11911                           ;../../VLCBlib_PIC/mns.c: 423:                 if (newMode == MODE_HEARTBEAT_ON) {
 11912   0019A6  0E0C               	movlw	12
 11913   0019A8  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11914   0019AA  A4D8               	btfss	status,2,c
 11915   0019AC  D003               	goto	l23628
 11916                           
 11917                           ; BSR set to: 2
 11918                           ;../../VLCBlib_PIC/mns.c: 424:                     mode_flags |= 4;
 11919   0019AE  0101               	movlb	1	; () banked
 11920   0019B0  8569               	bsf	_mode_flags& (0+255),2,b
 11921   0019B2  D72F               	goto	l23568
 11922   0019B4                     l23628:
 11923                           
 11924                           ; BSR set to: 2
 11925   0019B4  0E0D               	movlw	13
 11926   0019B6  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11927   0019B8  A4D8               	btfss	status,2,c
 11928   0019BA  D019               	goto	l23640
 11929                           
 11930                           ; BSR set to: 2
 11931                           ;../../VLCBlib_PIC/mns.c: 428:                     mode_flags &= ~4;
 11932   0019BC  0101               	movlb	1	; () banked
 11933   0019BE  9569               	bcf	_mode_flags& (0+255),2,b
 11934   0019C0  D728               	goto	l23568
 11935   0019C2                     l23638:
 11936                           
 11937                           ; BSR set to: 0
 11938   0019C2  0101               	movlb	1	; () banked
 11939   0019C4  EE20 F001          	lfsr	2,1
 11940   0019C8  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 11941   0019CA  26D9               	addwf	fsr2l,f,c
 11942   0019CC  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11943   0019CE  22DA               	addwfc	fsr2h,f,c
 11944   0019D0  50DF               	movf	indf2,w,c
 11945   0019D2  0102               	movlb	2	; () banked
 11946   0019D4  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11947   0019D6  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11948                           
 11949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11950                           ; Switch size 1, requested type "simple"
 11951                           ; Number of cases is 1, Range of values is 0 to 0
 11952                           ; switch strategies available:
 11953                           ; Name         Instructions Cycles
 11954                           ; simple_byte            4     3 (average)
 11955                           ;	Chosen strategy is simple_byte
 11956   0019D8  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11957   0019DA  0A00               	xorlw	0	; case 0
 11958   0019DC  A4D8               	btfss	status,2,c
 11959   0019DE  D007               	goto	l23640
 11960                           
 11961                           ; BSR set to: 2
 11962                           ; Switch size 1, requested type "simple"
 11963                           ; Number of cases is 2, Range of values is 13 to 118
 11964                           ; switch strategies available:
 11965                           ; Name         Instructions Cycles
 11966                           ; simple_byte            7     4 (average)
 11967                           ;	Chosen strategy is simple_byte
 11968   0019E0  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11969   0019E2  0A0D               	xorlw	13	; case 13
 11970   0019E4  B4D8               	btfsc	status,2,c
 11971   0019E6  D79C               	goto	l23598
 11972   0019E8  0A7B               	xorlw	123	; case 118
 11973   0019EA  B4D8               	btfsc	status,2,c
 11974   0019EC  D7AA               	goto	l23604
 11975   0019EE                     l23640:
 11976                           
 11977                           ;../../VLCBlib_PIC/mns.c: 438:     if (m->len < 3) {
 11978   0019EE  C1FC  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11979   0019F2  C1FD  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11980   0019F6  0E03               	movlw	3
 11981   0019F8  60DF               	cpfslt	indf2,c
 11982   0019FA  D001               	goto	l23646
 11983   0019FC  D78F               	goto	l23594
 11984   0019FE                     l23646:
 11985                           
 11986                           ;../../VLCBlib_PIC/mns.c: 442:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11987   0019FE  0101               	movlb	1	; () banked
 11988   001A00  EE20 F002          	lfsr	2,2
 11989   001A04  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 11990   001A06  26D9               	addwf	fsr2l,f,c
 11991   001A08  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11992   001A0A  22DA               	addwfc	fsr2h,f,c
 11993   001A0C  50DE               	movf	postinc2,w,c
 11994   001A0E  0100               	movlb	0	; () banked
 11995   001A10  19B6               	xorwf	(_nn+1)& (0+255),w,b
 11996   001A12  A4D8               	btfss	status,2,c
 11997   001A14  D783               	goto	l23594
 11998                           
 11999                           ; BSR set to: 0
 12000                           ;../../VLCBlib_PIC/mns.c: 443:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 12001   001A16  0101               	movlb	1	; () banked
 12002   001A18  EE20 F003          	lfsr	2,3
 12003   001A1C  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12004   001A1E  26D9               	addwf	fsr2l,f,c
 12005   001A20  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12006   001A22  22DA               	addwfc	fsr2h,f,c
 12007   001A24  0100               	movlb	0	; () banked
 12008   001A26  51B5               	movf	_nn& (0+255),w,b
 12009   001A28  18DE               	xorwf	postinc2,w,c
 12010   001A2A  A4D8               	btfss	status,2,c
 12011   001A2C  D777               	goto	l23594
 12012   001A2E  EF21  F011         	goto	l23846
 12013   001A32                     l23658:
 12014                           
 12015                           ; BSR set to: 2
 12016                           ;../../VLCBlib_PIC/mns.c: 447:             if (m->len < 4) {
 12017   001A32  C1FC  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12018   001A36  C1FD  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12019   001A3A  0E04               	movlw	4
 12020   001A3C  60DF               	cpfslt	indf2,c
 12021   001A3E  D00F               	goto	l23666
 12022                           
 12023                           ; BSR set to: 2
 12024                           ;../../VLCBlib_PIC/mns.c: 449:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12025   001A40  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12026   001A44  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12027   001A48  0E73               	movlw	115
 12028   001A4A  0101               	movlb	1	; () banked
 12029   001A4C  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12030   001A4E  0E01               	movlw	1
 12031   001A50  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12032   001A52  0E01               	movlw	1
 12033   001A54  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12034   001A56  0EAF               	movlw	175
 12035   001A58  ECE2  F060         	call	_sendMessage5
 12036   001A5C  D6DA               	goto	l23568
 12037   001A5E                     l23666:
 12038                           
 12039                           ; BSR set to: 2
 12040                           ;../../VLCBlib_PIC/mns.c: 453:             if (m->bytes[2] > 20) {
 12041   001A5E  0101               	movlb	1	; () banked
 12042   001A60  EE20 F004          	lfsr	2,4
 12043   001A64  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12044   001A66  26D9               	addwf	fsr2l,f,c
 12045   001A68  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12046   001A6A  22DA               	addwfc	fsr2h,f,c
 12047   001A6C  0E14               	movlw	20
 12048   001A6E  64DF               	cpfsgt	indf2,c
 12049   001A70  D019               	goto	l23674
 12050                           
 12051                           ; BSR set to: 1
 12052                           ;../../VLCBlib_PIC/mns.c: 454:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 12053   001A72  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 12054   001A76  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 12055   001A7A  0E09               	movlw	9
 12056   001A7C  0100               	movlb	0	; () banked
 12057   001A7E  6FA8               	movwf	sendMessage3@data3& (0+255),b
 12058   001A80  0E6F               	movlw	111
 12059   001A82  EC40  F061         	call	_sendMessage3
 12060                           
 12061                           ;../../VLCBlib_PIC/mns.c: 456:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 12062   001A86  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12063   001A8A  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12064   001A8E  0E73               	movlw	115
 12065   001A90  0101               	movlb	1	; () banked
 12066   001A92  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12067   001A94  0E01               	movlw	1
 12068   001A96  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12069   001A98  0E09               	movlw	9
 12070   001A9A  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12071   001A9C  0EAF               	movlw	175
 12072   001A9E  ECE2  F060         	call	_sendMessage5
 12073   001AA2  D6B7               	goto	l23568
 12074   001AA4                     l23674:
 12075                           
 12076                           ; BSR set to: 1
 12077                           ;../../VLCBlib_PIC/mns.c: 460:             i = getParameter(m->bytes[2]);
 12078   001AA4  EE20 F004          	lfsr	2,4
 12079   001AA8  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12080   001AAA  26D9               	addwf	fsr2l,f,c
 12081   001AAC  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12082   001AAE  22DA               	addwfc	fsr2h,f,c
 12083   001AB0  50DF               	movf	indf2,w,c
 12084   001AB2  EC91  F044         	call	_getParameter
 12085   001AB6  0102               	movlb	2	; () banked
 12086   001AB8  6FEA               	movwf	mnsProcessMessage@i& (0+255),b
 12087                           
 12088                           ; BSR set to: 2
 12089                           ;../../VLCBlib_PIC/mns.c: 461:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 12090   001ABA  C0B6  F1C5         	movff	_nn+1,sendMessage4@data1
 12091   001ABE  C0B5  F1C6         	movff	_nn,sendMessage4@data2
 12092   001AC2  0101               	movlb	1	; () banked
 12093   001AC4  EE20 F004          	lfsr	2,4
 12094   001AC8  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12095   001ACA  26D9               	addwf	fsr2l,f,c
 12096   001ACC  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12097   001ACE  22DA               	addwfc	fsr2h,f,c
 12098   001AD0  50DF               	movf	indf2,w,c
 12099   001AD2  6FC7               	movwf	sendMessage4@data3& (0+255),b
 12100   001AD4  C2EA  F1C8         	movff	mnsProcessMessage@i,sendMessage4@data4
 12101   001AD8  0E9B               	movlw	155
 12102   001ADA  ECFA  F060         	call	_sendMessage4
 12103                           
 12104                           ;../../VLCBlib_PIC/mns.c: 463:             if (m->bytes[2] == 0) {
 12105   001ADE  0101               	movlb	1	; () banked
 12106   001AE0  EE20 F004          	lfsr	2,4
 12107   001AE4  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12108   001AE6  26D9               	addwf	fsr2l,f,c
 12109   001AE8  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12110   001AEA  22DA               	addwfc	fsr2h,f,c
 12111   001AEC  50DF               	movf	indf2,w,c
 12112   001AEE  A4D8               	btfss	status,2,c
 12113   001AF0  D690               	goto	l23568
 12114                           
 12115                           ; BSR set to: 1
 12116                           ;../../VLCBlib_PIC/mns.c: 464:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 12117   001AF2  0E01               	movlw	1
 12118   001AF4  ECBE  F057         	call	_findServiceIndex
 12119   001AF8  0100               	movlb	0	; () banked
 12120   001AFA  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12121   001AFC  0E08               	movlw	low _mnsTRrqnpnCallback
 12122   001AFE  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12123   001B00  0EC3               	movlw	high _mnsTRrqnpnCallback
 12124   001B02  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12125   001B04  0E07               	movlw	7
 12126   001B06  EC15  F05F         	call	_startTimedResponse
 12127   001B0A  D683               	goto	l23568
 12128   001B0C                     l1487:
 12129                           
 12130                           ; BSR set to: 2
 12131                           ;../../VLCBlib_PIC/mns.c: 469:             previousNN.word = nn.word;
 12132   001B0C  C0B5  F164         	movff	_nn,_previousNN
 12133   001B10  C0B6  F165         	movff	_nn+1,_previousNN+1
 12134                           
 12135                           ; BSR set to: 2
 12136                           ;../../VLCBlib_PIC/mns.c: 470:             factoryReset();
 12137   001B14  ECAC  F043         	call	_factoryReset	;wreg free
 12138                           
 12139                           ;../../VLCBlib_PIC/mns.c: 471:             if (previousNN.word != 0) {
 12140   001B18  0101               	movlb	1	; () banked
 12141   001B1A  5164               	movf	_previousNN& (0+255),w,b
 12142   001B1C  1165               	iorwf	(_previousNN+1)& (0+255),w,b
 12143   001B1E  B4D8               	btfsc	status,2,c
 12144   001B20  D007               	goto	l1488
 12145                           
 12146                           ; BSR set to: 1
 12147                           ;../../VLCBlib_PIC/mns.c: 472:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 12148   001B22  C165  F0A6         	movff	_previousNN+1,sendMessage2@data1
 12149   001B26  C164  F0A7         	movff	_previousNN,sendMessage2@data2
 12150   001B2A  0E51               	movlw	81
 12151   001B2C  ECB2  F060         	call	_sendMessage2
 12152   001B30                     l1488:
 12153   001B30  00FF               	reset		;# 
 12154   001B32                     l23692:
 12155                           
 12156                           ;../../VLCBlib_PIC/mns.c: 477:             if (m->len < 5) {
 12157   001B32  C1FC  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12158   001B36  C1FD  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12159   001B3A  0E05               	movlw	5
 12160   001B3C  60DF               	cpfslt	indf2,c
 12161   001B3E  D00F               	goto	l23700
 12162                           
 12163                           ;../../VLCBlib_PIC/mns.c: 478:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12164   001B40  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12165   001B44  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12166   001B48  0E87               	movlw	135
 12167   001B4A  0101               	movlb	1	; () banked
 12168   001B4C  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12169   001B4E  0E01               	movlw	1
 12170   001B50  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12171   001B52  0E01               	movlw	1
 12172   001B54  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12173   001B56  0EAF               	movlw	175
 12174   001B58  ECE2  F060         	call	_sendMessage5
 12175   001B5C  D65A               	goto	l23568
 12176   001B5E                     l23700:
 12177                           
 12178                           ;../../VLCBlib_PIC/mns.c: 481:             if (m->bytes[2] == 0) {
 12179   001B5E  0101               	movlb	1	; () banked
 12180   001B60  EE20 F004          	lfsr	2,4
 12181   001B64  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12182   001B66  26D9               	addwf	fsr2l,f,c
 12183   001B68  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12184   001B6A  22DA               	addwfc	fsr2h,f,c
 12185   001B6C  50DF               	movf	indf2,w,c
 12186   001B6E  A4D8               	btfss	status,2,c
 12187   001B70  D00B               	goto	l23704
 12188                           
 12189                           ; BSR set to: 1
 12190                           ;../../VLCBlib_PIC/mns.c: 483:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 12191   001B72  0E00               	movlw	0
 12192   001B74  0100               	movlb	0	; () banked
 12193   001B76  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12194   001B78  0E66               	movlw	low _mnsTRallDiagnosticsCallback
 12195   001B7A  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12196   001B7C  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 12197   001B7E  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12198   001B80  0E04               	movlw	4
 12199   001B82  EC15  F05F         	call	_startTimedResponse
 12200                           
 12201                           ;../../VLCBlib_PIC/mns.c: 484:             } else {
 12202   001B86  D645               	goto	l23568
 12203   001B88                     l23704:
 12204                           
 12205                           ; BSR set to: 1
 12206                           ;../../VLCBlib_PIC/mns.c: 486:                 if (m->bytes[2] > 9) {
 12207   001B88  EE20 F004          	lfsr	2,4
 12208   001B8C  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12209   001B8E  26D9               	addwf	fsr2l,f,c
 12210   001B90  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12211   001B92  22DA               	addwfc	fsr2h,f,c
 12212   001B94  0E09               	movlw	9
 12213   001B96  64DF               	cpfsgt	indf2,c
 12214   001B98  D00E               	goto	l23712
 12215                           
 12216                           ; BSR set to: 1
 12217                           ;../../VLCBlib_PIC/mns.c: 487:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 12218   001B9A  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12219   001B9E  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12220   001BA2  0E87               	movlw	135
 12221   001BA4  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12222   001BA6  0E01               	movlw	1
 12223   001BA8  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12224   001BAA  0EFC               	movlw	252
 12225   001BAC  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12226   001BAE  0EAF               	movlw	175
 12227   001BB0  ECE2  F060         	call	_sendMessage5
 12228   001BB4  D62E               	goto	l23568
 12229   001BB6                     l23712:
 12230                           
 12231                           ; BSR set to: 1
 12232                           ;../../VLCBlib_PIC/mns.c: 490:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 12233   001BB6  EE20 F004          	lfsr	2,4
 12234   001BBA  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12235   001BBC  26D9               	addwf	fsr2l,f,c
 12236   001BBE  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12237   001BC0  22DA               	addwfc	fsr2h,f,c
 12238   001BC2  50DF               	movf	indf2,w,c
 12239   001BC4  0102               	movlb	2	; () banked
 12240   001BC6  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12241   001BC8  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12242   001BCA  90D8               	bcf	status,0,c
 12243   001BCC  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12244   001BCE  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12245   001BD0  0EFE               	movlw	254
 12246   001BD2  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12247   001BD4  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12248   001BD6  0EFF               	movlw	255
 12249   001BD8  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12250   001BDA  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12251   001BDC  0E69               	movlw	low _services
 12252   001BDE  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12253   001BE0  6EF6               	movwf	tblptrl,c
 12254   001BE2  0EEE               	movlw	high _services
 12255   001BE4  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12256   001BE6  6EF7               	movwf	tblptrh,c
 12257   001BE8                     	if	1	;There are 3 active tblptr bytes
 12258   001BE8  6AF8               	clrf	tblptru,c
 12259   001BEA  0E00               	movlw	low (__mediumconst shr (0+16))
 12260   001BEC  22F8               	addwfc	tblptru,f,c
 12261   001BEE                     	endif
 12262   001BEE  0009               	tblrd		*+
 12263   001BF0  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12264   001BF4  0009               	tblrd		*+
 12265   001BF6  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12266   001BFA  0E10               	movlw	16
 12267   001BFC  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12268   001BFE  0E00               	movlw	0
 12269   001C00  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12270   001C02  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12271   001C06  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12272   001C0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12273   001C0A  6AF8               	clrf	tblptru,c
 12274   001C0C                     	endif
 12275   001C0C                     	if	0	;tblptru may be non-zero
 12276   001C0C                     	endif
 12277   001C0C  0009               	tblrd		*+
 12278   001C0E  50F5               	movf	tablat,w,c
 12279   001C10  0009               	tblrd		*+
 12280   001C12  10F5               	iorwf	tablat,w,c
 12281   001C14  A4D8               	btfss	status,2,c
 12282   001C16  D014               	goto	l23716
 12283                           
 12284                           ; BSR set to: 2
 12285                           ;../../VLCBlib_PIC/mns.c: 492:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 12286   001C18  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12287   001C1C  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12288   001C20  0E87               	movlw	135
 12289   001C22  0101               	movlb	1	; () banked
 12290   001C24  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12291   001C26  EE20 F004          	lfsr	2,4
 12292   001C2A  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12293   001C2C  26D9               	addwf	fsr2l,f,c
 12294   001C2E  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12295   001C30  22DA               	addwfc	fsr2h,f,c
 12296   001C32  50DF               	movf	indf2,w,c
 12297   001C34  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12298   001C36  0E00               	movlw	0
 12299   001C38  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12300   001C3A  0EC7               	movlw	199
 12301   001C3C  ECE2  F060         	call	_sendMessage5
 12302   001C40                     l23716:
 12303                           
 12304                           ;../../VLCBlib_PIC/mns.c: 494:                 if (m->bytes[3] == 0) {
 12305   001C40  0101               	movlb	1	; () banked
 12306   001C42  EE20 F005          	lfsr	2,5
 12307   001C46  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12308   001C48  26D9               	addwf	fsr2l,f,c
 12309   001C4A  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12310   001C4C  22DA               	addwfc	fsr2h,f,c
 12311   001C4E  50DF               	movf	indf2,w,c
 12312   001C50  A4D8               	btfss	status,2,c
 12313   001C52  D011               	goto	l23726
 12314                           
 12315                           ; BSR set to: 1
 12316                           ;../../VLCBlib_PIC/mns.c: 496:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 12317   001C54  EE20 F004          	lfsr	2,4
 12318   001C58  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12319   001C5A  26D9               	addwf	fsr2l,f,c
 12320   001C5C  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12321   001C5E  22DA               	addwfc	fsr2h,f,c
 12322   001C60  50DF               	movf	indf2,w,c
 12323   001C62  0100               	movlb	0	; () banked
 12324   001C64  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12325   001C66  0E66               	movlw	low _mnsTRallDiagnosticsCallback
 12326   001C68  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12327   001C6A  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 12328   001C6C  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12329   001C6E  0E04               	movlw	4
 12330   001C70  EC15  F05F         	call	_startTimedResponse
 12331   001C74  D5CE               	goto	l23568
 12332   001C76                     l23726:
 12333                           
 12334                           ; BSR set to: 1
 12335                           ;../../VLCBlib_PIC/mns.c: 499:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 12336   001C76  EE20 F004          	lfsr	2,4
 12337   001C7A  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12338   001C7C  26D9               	addwf	fsr2l,f,c
 12339   001C7E  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12340   001C80  22DA               	addwfc	fsr2h,f,c
 12341   001C82  50DF               	movf	indf2,w,c
 12342   001C84  0102               	movlb	2	; () banked
 12343   001C86  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12344   001C88  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12345   001C8A  90D8               	bcf	status,0,c
 12346   001C8C  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12347   001C8E  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12348   001C90  0EFE               	movlw	254
 12349   001C92  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12350   001C94  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12351   001C96  0EFF               	movlw	255
 12352   001C98  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12353   001C9A  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12354   001C9C  0E69               	movlw	low _services
 12355   001C9E  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12356   001CA0  6EF6               	movwf	tblptrl,c
 12357   001CA2  0EEE               	movlw	high _services
 12358   001CA4  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12359   001CA6  6EF7               	movwf	tblptrh,c
 12360   001CA8                     	if	1	;There are 3 active tblptr bytes
 12361   001CA8  6AF8               	clrf	tblptru,c
 12362   001CAA  0E00               	movlw	low (__mediumconst shr (0+16))
 12363   001CAC  22F8               	addwfc	tblptru,f,c
 12364   001CAE                     	endif
 12365   001CAE  0009               	tblrd		*+
 12366   001CB0  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12367   001CB4  0009               	tblrd		*+
 12368   001CB6  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12369   001CBA  0E10               	movlw	16
 12370   001CBC  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12371   001CBE  0E00               	movlw	0
 12372   001CC0  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12373   001CC2  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12374   001CC6  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12375   001CCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12376   001CCA  6AF8               	clrf	tblptru,c
 12377   001CCC                     	endif
 12378   001CCC                     	if	0	;tblptru may be non-zero
 12379   001CCC                     	endif
 12380   001CCC  0009               	tblrd		*+
 12381   001CCE  CFF5 F2D2          	movff	tablat,??_mnsProcessMessage+6
 12382   001CD2  0009               	tblrd		*+
 12383   001CD4  CFF5 F2D3          	movff	tablat,??_mnsProcessMessage+7
 12384   001CD8  D801               	call	u25458
 12385   001CDA  D011               	goto	u25459
 12386   001CDC                     u25458:
 12387   001CDC  0005               	push	
 12388   001CDE  6EFA               	movwf	pclath,c
 12389   001CE0  51D2               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 12390   001CE2  6EFD               	movwf	tosl,c
 12391   001CE4  51D3               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 12392   001CE6  6EFE               	movwf	tosh,c
 12393   001CE8  6AFF               	clrf	tosu,c
 12394   001CEA  50FA               	movf	pclath,w,c
 12395   001CEC  0101               	movlb	1	; () banked
 12396   001CEE  EE20 F005          	lfsr	2,5
 12397   001CF2  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12398   001CF4  26D9               	addwf	fsr2l,f,c
 12399   001CF6  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12400   001CF8  22DA               	addwfc	fsr2h,f,c
 12401   001CFA  50DF               	movf	indf2,w,c
 12402   001CFC  0012               	return		;indir
 12403   001CFE                     u25459:
 12404   001CFE  C096  F2EC         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 12405   001D02  C097  F2ED         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 12406                           
 12407                           ;../../VLCBlib_PIC/mns.c: 500:                     if (d == ((void*)0)) {
 12408   001D06  0102               	movlb	2	; () banked
 12409   001D08  51EC               	movf	mnsProcessMessage@d& (0+255),w,b
 12410   001D0A  11ED               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 12411   001D0C  A4D8               	btfss	status,2,c
 12412   001D0E  D00F               	goto	l23732
 12413                           
 12414                           ; BSR set to: 2
 12415                           ;../../VLCBlib_PIC/mns.c: 502:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 12416   001D10  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12417   001D14  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12418   001D18  0E87               	movlw	135
 12419   001D1A  0101               	movlb	1	; () banked
 12420   001D1C  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12421   001D1E  0E01               	movlw	1
 12422   001D20  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12423   001D22  0EFD               	movlw	253
 12424   001D24  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12425   001D26  0EAF               	movlw	175
 12426   001D28  ECE2  F060         	call	_sendMessage5
 12427                           
 12428                           ;../../VLCBlib_PIC/mns.c: 503:                     } else {
 12429   001D2C  D572               	goto	l23568
 12430   001D2E                     l23732:
 12431                           
 12432                           ; BSR set to: 2
 12433                           ;../../VLCBlib_PIC/mns.c: 505:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 12434   001D2E  C0B6  F1C5         	movff	_nn+1,sendMessage6@data1
 12435   001D32  C0B5  F1C6         	movff	_nn,sendMessage6@data2
 12436   001D36  0101               	movlb	1	; () banked
 12437   001D38  EE20 F004          	lfsr	2,4
 12438   001D3C  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12439   001D3E  26D9               	addwf	fsr2l,f,c
 12440   001D40  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12441   001D42  22DA               	addwfc	fsr2h,f,c
 12442   001D44  50DF               	movf	indf2,w,c
 12443   001D46  6FC7               	movwf	sendMessage6@data3& (0+255),b
 12444   001D48  EE20 F005          	lfsr	2,5
 12445   001D4C  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12446   001D4E  26D9               	addwf	fsr2l,f,c
 12447   001D50  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12448   001D52  22DA               	addwfc	fsr2h,f,c
 12449   001D54  50DF               	movf	indf2,w,c
 12450   001D56  6FC8               	movwf	sendMessage6@data4& (0+255),b
 12451   001D58  0102               	movlb	2	; () banked
 12452   001D5A  EE20 F001          	lfsr	2,1
 12453   001D5E  51EC               	movf	mnsProcessMessage@d& (0+255),w,b
 12454   001D60  26D9               	addwf	fsr2l,f,c
 12455   001D62  51ED               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 12456   001D64  22DA               	addwfc	fsr2h,f,c
 12457   001D66  50DF               	movf	indf2,w,c
 12458   001D68  0101               	movlb	1	; () banked
 12459   001D6A  6FC9               	movwf	sendMessage6@data5& (0+255),b
 12460   001D6C  C2EC  FFD9         	movff	mnsProcessMessage@d,fsr2l
 12461   001D70  C2ED  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 12462   001D74  50DF               	movf	indf2,w,c
 12463   001D76  6FCA               	movwf	sendMessage6@data6& (0+255),b
 12464   001D78  0EC7               	movlw	199
 12465   001D7A  EC9A  F060         	call	_sendMessage6
 12466   001D7E  D549               	goto	l23568
 12467   001D80                     l23738:
 12468                           
 12469                           ; BSR set to: 2
 12470                           ;../../VLCBlib_PIC/mns.c: 513:             if (m->len < 4) {
 12471   001D80  C1FC  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12472   001D84  C1FD  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12473   001D88  0E04               	movlw	4
 12474   001D8A  60DF               	cpfslt	indf2,c
 12475   001D8C  D00F               	goto	l23746
 12476                           
 12477                           ; BSR set to: 2
 12478                           ;../../VLCBlib_PIC/mns.c: 514:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12479   001D8E  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12480   001D92  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12481   001D96  0E78               	movlw	120
 12482   001D98  0101               	movlb	1	; () banked
 12483   001D9A  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12484   001D9C  0E01               	movlw	1
 12485   001D9E  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12486   001DA0  0E01               	movlw	1
 12487   001DA2  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12488   001DA4  0EAF               	movlw	175
 12489   001DA6  ECE2  F060         	call	_sendMessage5
 12490   001DAA  D533               	goto	l23568
 12491   001DAC                     l23746:
 12492                           
 12493                           ; BSR set to: 2
 12494                           ;../../VLCBlib_PIC/mns.c: 517:             if (m->bytes[2] == 0) {
 12495   001DAC  0101               	movlb	1	; () banked
 12496   001DAE  EE20 F004          	lfsr	2,4
 12497   001DB2  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12498   001DB4  26D9               	addwf	fsr2l,f,c
 12499   001DB6  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12500   001DB8  22DA               	addwfc	fsr2h,f,c
 12501   001DBA  50DF               	movf	indf2,w,c
 12502   001DBC  A4D8               	btfss	status,2,c
 12503   001DBE  D018               	goto	l23752
 12504                           
 12505                           ; BSR set to: 1
 12506                           ;../../VLCBlib_PIC/mns.c: 519:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 12507   001DC0  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12508   001DC4  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12509   001DC8  0E00               	movlw	0
 12510   001DCA  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12511   001DCC  0E00               	movlw	0
 12512   001DCE  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12513   001DD0  0E09               	movlw	9
 12514   001DD2  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12515   001DD4  0EAC               	movlw	172
 12516   001DD6  ECE2  F060         	call	_sendMessage5
 12517                           
 12518                           ;../../VLCBlib_PIC/mns.c: 521:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 12519   001DDA  0E01               	movlw	1
 12520   001DDC  0100               	movlb	0	; () banked
 12521   001DDE  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12522   001DE0  0E90               	movlw	low _mnsTRserviceDiscoveryCallback
 12523   001DE2  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12524   001DE4  0EA6               	movlw	high _mnsTRserviceDiscoveryCallback
 12525   001DE6  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12526   001DE8  0E03               	movlw	3
 12527   001DEA  EC15  F05F         	call	_startTimedResponse
 12528                           
 12529                           ;../../VLCBlib_PIC/mns.c: 522:             } else if (m->bytes[2] > 9) {
 12530   001DEE  D511               	goto	l23568
 12531   001DF0                     l23752:
 12532                           
 12533                           ; BSR set to: 1
 12534   001DF0  EE20 F004          	lfsr	2,4
 12535   001DF4  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12536   001DF6  26D9               	addwf	fsr2l,f,c
 12537   001DF8  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12538   001DFA  22DA               	addwfc	fsr2h,f,c
 12539   001DFC  0E09               	movlw	9
 12540   001DFE  64DF               	cpfsgt	indf2,c
 12541   001E00  D00E               	goto	l23762
 12542                           
 12543                           ; BSR set to: 1
 12544                           ;../../VLCBlib_PIC/mns.c: 523:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 12545   001E02  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12546   001E06  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12547   001E0A  0E78               	movlw	120
 12548   001E0C  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12549   001E0E  0E01               	movlw	1
 12550   001E10  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12551   001E12  0EFC               	movlw	252
 12552   001E14  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12553   001E16  0EAF               	movlw	175
 12554   001E18  ECE2  F060         	call	_sendMessage5
 12555   001E1C  D4FA               	goto	l23568
 12556   001E1E                     l23762:
 12557                           
 12558                           ; BSR set to: 1
 12559                           ;../../VLCBlib_PIC/mns.c: 527:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 12560   001E1E  EE20 F004          	lfsr	2,4
 12561   001E22  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12562   001E24  26D9               	addwf	fsr2l,f,c
 12563   001E26  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12564   001E28  22DA               	addwfc	fsr2h,f,c
 12565   001E2A  50DF               	movf	indf2,w,c
 12566   001E2C  0102               	movlb	2	; () banked
 12567   001E2E  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12568   001E30  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12569   001E32  90D8               	bcf	status,0,c
 12570   001E34  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12571   001E36  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12572   001E38  0EFE               	movlw	254
 12573   001E3A  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12574   001E3C  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12575   001E3E  0EFF               	movlw	255
 12576   001E40  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12577   001E42  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12578   001E44  0E69               	movlw	low _services
 12579   001E46  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12580   001E48  6EF6               	movwf	tblptrl,c
 12581   001E4A  0EEE               	movlw	high _services
 12582   001E4C  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12583   001E4E  6EF7               	movwf	tblptrh,c
 12584   001E50                     	if	1	;There are 3 active tblptr bytes
 12585   001E50  6AF8               	clrf	tblptru,c
 12586   001E52  0E00               	movlw	low (__mediumconst shr (0+16))
 12587   001E54  22F8               	addwfc	tblptru,f,c
 12588   001E56                     	endif
 12589   001E56  0009               	tblrd		*+
 12590   001E58  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12591   001E5C  0009               	tblrd		*+
 12592   001E5E  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12593   001E62  0E0E               	movlw	14
 12594   001E64  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12595   001E66  0E00               	movlw	0
 12596   001E68  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12597   001E6A  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12598   001E6E  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12599   001E72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12600   001E72  6AF8               	clrf	tblptru,c
 12601   001E74                     	endif
 12602   001E74                     	if	0	;tblptru may be non-zero
 12603   001E74                     	endif
 12604   001E74  0009               	tblrd		*+
 12605   001E76  50F5               	movf	tablat,w,c
 12606   001E78  0009               	tblrd		*+
 12607   001E7A  10F5               	iorwf	tablat,w,c
 12608   001E7C  A4D8               	btfss	status,2,c
 12609   001E7E  D042               	goto	l23766
 12610                           
 12611                           ; BSR set to: 2
 12612                           ;../../VLCBlib_PIC/mns.c: 528:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 12613   001E80  C0B6  F1C5         	movff	_nn+1,sendMessage7@data1
 12614   001E84  C0B5  F1C6         	movff	_nn,sendMessage7@data2
 12615   001E88  0101               	movlb	1	; () banked
 12616   001E8A  EE20 F004          	lfsr	2,4
 12617   001E8E  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12618   001E90  26D9               	addwf	fsr2l,f,c
 12619   001E92  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12620   001E94  22DA               	addwfc	fsr2h,f,c
 12621   001E96  50DF               	movf	indf2,w,c
 12622   001E98  6FC7               	movwf	sendMessage7@data3& (0+255),b
 12623   001E9A  EE20 F004          	lfsr	2,4
 12624   001E9E  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12625   001EA0  26D9               	addwf	fsr2l,f,c
 12626   001EA2  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12627   001EA4  22DA               	addwfc	fsr2h,f,c
 12628   001EA6  50DF               	movf	indf2,w,c
 12629   001EA8  0102               	movlb	2	; () banked
 12630   001EAA  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12631   001EAC  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12632   001EAE  90D8               	bcf	status,0,c
 12633   001EB0  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12634   001EB2  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12635   001EB4  0EFE               	movlw	254
 12636   001EB6  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12637   001EB8  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12638   001EBA  0EFF               	movlw	255
 12639   001EBC  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12640   001EBE  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12641   001EC0  0E69               	movlw	low _services
 12642   001EC2  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12643   001EC4  6EF6               	movwf	tblptrl,c
 12644   001EC6  0EEE               	movlw	high _services
 12645   001EC8  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12646   001ECA  6EF7               	movwf	tblptrh,c
 12647   001ECC                     	if	1	;There are 3 active tblptr bytes
 12648   001ECC  6AF8               	clrf	tblptru,c
 12649   001ECE  0E00               	movlw	low (__mediumconst shr (0+16))
 12650   001ED0  22F8               	addwfc	tblptru,f,c
 12651   001ED2                     	endif
 12652   001ED2  0009               	tblrd		*+
 12653   001ED4  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12654   001ED8  0009               	tblrd		*+
 12655   001EDA  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12656   001EDE  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12657   001EE2  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12658   001EE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12659   001EE6  6AF8               	clrf	tblptru,c
 12660   001EE8                     	endif
 12661   001EE8                     	if	0	;tblptru may be non-zero
 12662   001EE8                     	endif
 12663   001EE8  0008               	tblrd		*
 12664   001EEA  CFF5 F1C8          	movff	tablat,sendMessage7@data4
 12665   001EEE  0E00               	movlw	0
 12666   001EF0  0101               	movlb	1	; () banked
 12667   001EF2  6FC9               	movwf	sendMessage7@data5& (0+255),b
 12668   001EF4  0E00               	movlw	0
 12669   001EF6  6FCA               	movwf	sendMessage7@data6& (0+255),b
 12670   001EF8  0E00               	movlw	0
 12671   001EFA  6FCB               	movwf	sendMessage7@data7& (0+255),b
 12672   001EFC  0EE7               	movlw	231
 12673   001EFE  ECCA  F060         	call	_sendMessage7
 12674                           
 12675                           ;../../VLCBlib_PIC/mns.c: 529:                 } else {
 12676   001F02  D487               	goto	l23568
 12677   001F04                     l23766:
 12678                           
 12679                           ; BSR set to: 2
 12680                           ;../../VLCBlib_PIC/mns.c: 530:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 12681   001F04  C0B6  F1C5         	movff	_nn+1,sendMessage7@data1
 12682   001F08  C0B5  F1C6         	movff	_nn,sendMessage7@data2
 12683   001F0C  0101               	movlb	1	; () banked
 12684   001F0E  EE20 F004          	lfsr	2,4
 12685   001F12  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12686   001F14  26D9               	addwf	fsr2l,f,c
 12687   001F16  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12688   001F18  22DA               	addwfc	fsr2h,f,c
 12689   001F1A  50DF               	movf	indf2,w,c
 12690   001F1C  6FC7               	movwf	sendMessage7@data3& (0+255),b
 12691   001F1E  EE20 F004          	lfsr	2,4
 12692   001F22  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12693   001F24  26D9               	addwf	fsr2l,f,c
 12694   001F26  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12695   001F28  22DA               	addwfc	fsr2h,f,c
 12696   001F2A  50DF               	movf	indf2,w,c
 12697   001F2C  0102               	movlb	2	; () banked
 12698   001F2E  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12699   001F30  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12700   001F32  90D8               	bcf	status,0,c
 12701   001F34  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12702   001F36  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12703   001F38  0EFE               	movlw	254
 12704   001F3A  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12705   001F3C  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12706   001F3E  0EFF               	movlw	255
 12707   001F40  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12708   001F42  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12709   001F44  0E69               	movlw	low _services
 12710   001F46  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12711   001F48  6EF6               	movwf	tblptrl,c
 12712   001F4A  0EEE               	movlw	high _services
 12713   001F4C  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12714   001F4E  6EF7               	movwf	tblptrh,c
 12715   001F50                     	if	1	;There are 3 active tblptr bytes
 12716   001F50  6AF8               	clrf	tblptru,c
 12717   001F52  0E00               	movlw	low (__mediumconst shr (0+16))
 12718   001F54  22F8               	addwfc	tblptru,f,c
 12719   001F56                     	endif
 12720   001F56  0009               	tblrd		*+
 12721   001F58  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12722   001F5C  0009               	tblrd		*+
 12723   001F5E  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12724   001F62  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12725   001F66  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12726   001F6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12727   001F6A  6AF8               	clrf	tblptru,c
 12728   001F6C                     	endif
 12729   001F6C                     	if	0	;tblptru may be non-zero
 12730   001F6C                     	endif
 12731   001F6C  0008               	tblrd		*
 12732   001F6E  CFF5 F1C8          	movff	tablat,sendMessage7@data4
 12733   001F72  0101               	movlb	1	; () banked
 12734   001F74  EE20 F004          	lfsr	2,4
 12735   001F78  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12736   001F7A  26D9               	addwf	fsr2l,f,c
 12737   001F7C  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12738   001F7E  22DA               	addwfc	fsr2h,f,c
 12739   001F80  50DF               	movf	indf2,w,c
 12740   001F82  0102               	movlb	2	; () banked
 12741   001F84  6FD2               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 12742   001F86  6BD3               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 12743   001F88  90D8               	bcf	status,0,c
 12744   001F8A  37D2               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 12745   001F8C  37D3               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 12746   001F8E  0EFE               	movlw	254
 12747   001F90  25D2               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 12748   001F92  6FD4               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 12749   001F94  0EFF               	movlw	255
 12750   001F96  21D3               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 12751   001F98  6FD5               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 12752   001F9A  0E69               	movlw	low _services
 12753   001F9C  25D4               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 12754   001F9E  6EF6               	movwf	tblptrl,c
 12755   001FA0  0EEE               	movlw	high _services
 12756   001FA2  21D5               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 12757   001FA4  6EF7               	movwf	tblptrh,c
 12758   001FA6                     	if	1	;There are 3 active tblptr bytes
 12759   001FA6  6AF8               	clrf	tblptru,c
 12760   001FA8  0E00               	movlw	low (__mediumconst shr (0+16))
 12761   001FAA  22F8               	addwfc	tblptru,f,c
 12762   001FAC                     	endif
 12763   001FAC  0009               	tblrd		*+
 12764   001FAE  CFF5 F2D6          	movff	tablat,??_mnsProcessMessage+10
 12765   001FB2  0009               	tblrd		*+
 12766   001FB4  CFF5 F2D7          	movff	tablat,??_mnsProcessMessage+11
 12767   001FB8  0E0E               	movlw	14
 12768   001FBA  27D6               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 12769   001FBC  0E00               	movlw	0
 12770   001FBE  23D7               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 12771   001FC0  C2D6  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 12772   001FC4  C2D7  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 12773   001FC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12774   001FC8  6AF8               	clrf	tblptru,c
 12775   001FCA                     	endif
 12776   001FCA                     	if	0	;tblptru may be non-zero
 12777   001FCA                     	endif
 12778   001FCA  0009               	tblrd		*+
 12779   001FCC  CFF5 F2D8          	movff	tablat,??_mnsProcessMessage+12
 12780   001FD0  0009               	tblrd		*+
 12781   001FD2  CFF5 F2D9          	movff	tablat,??_mnsProcessMessage+13
 12782   001FD6  D801               	call	u25518
 12783   001FD8  D00A               	goto	u25519
 12784   001FDA                     u25518:
 12785   001FDA  0005               	push	
 12786   001FDC  6EFA               	movwf	pclath,c
 12787   001FDE  51D8               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 12788   001FE0  6EFD               	movwf	tosl,c
 12789   001FE2  51D9               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 12790   001FE4  6EFE               	movwf	tosh,c
 12791   001FE6  6AFF               	clrf	tosu,c
 12792   001FE8  50FA               	movf	pclath,w,c
 12793   001FEA  0E01               	movlw	1
 12794   001FEC  0012               	return		;indir
 12795   001FEE                     u25519:
 12796   001FEE  0101               	movlb	1	; () banked
 12797   001FF0  6FC9               	movwf	sendMessage7@data5& (0+255),b
 12798   001FF2  EE20 F004          	lfsr	2,4
 12799   001FF6  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12800   001FF8  26D9               	addwf	fsr2l,f,c
 12801   001FFA  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12802   001FFC  22DA               	addwfc	fsr2h,f,c
 12803   001FFE  50DF               	movf	indf2,w,c
 12804   002000  0102               	movlb	2	; () banked
 12805   002002  6FDA               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 12806   002004  6BDB               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 12807   002006  90D8               	bcf	status,0,c
 12808   002008  37DA               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 12809   00200A  37DB               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 12810   00200C  0EFE               	movlw	254
 12811   00200E  25DA               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12812   002010  6FDC               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12813   002012  0EFF               	movlw	255
 12814   002014  21DB               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12815   002016  6FDD               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12816   002018  0E69               	movlw	low _services
 12817   00201A  25DC               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12818   00201C  6EF6               	movwf	tblptrl,c
 12819   00201E  0EEE               	movlw	high _services
 12820   002020  21DD               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12821   002022  6EF7               	movwf	tblptrh,c
 12822   002024                     	if	1	;There are 3 active tblptr bytes
 12823   002024  6AF8               	clrf	tblptru,c
 12824   002026  0E00               	movlw	low (__mediumconst shr (0+16))
 12825   002028  22F8               	addwfc	tblptru,f,c
 12826   00202A                     	endif
 12827   00202A  0009               	tblrd		*+
 12828   00202C  CFF5 F2DE          	movff	tablat,??_mnsProcessMessage+18
 12829   002030  0009               	tblrd		*+
 12830   002032  CFF5 F2DF          	movff	tablat,??_mnsProcessMessage+19
 12831   002036  0E0E               	movlw	14
 12832   002038  27DE               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12833   00203A  0E00               	movlw	0
 12834   00203C  23DF               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12835   00203E  C2DE  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12836   002042  C2DF  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12837   002046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12838   002046  6AF8               	clrf	tblptru,c
 12839   002048                     	endif
 12840   002048                     	if	0	;tblptru may be non-zero
 12841   002048                     	endif
 12842   002048  0009               	tblrd		*+
 12843   00204A  CFF5 F2E0          	movff	tablat,??_mnsProcessMessage+20
 12844   00204E  0009               	tblrd		*+
 12845   002050  CFF5 F2E1          	movff	tablat,??_mnsProcessMessage+21
 12846   002054  D801               	call	u25528
 12847   002056  D00A               	goto	u25529
 12848   002058                     u25528:
 12849   002058  0005               	push	
 12850   00205A  6EFA               	movwf	pclath,c
 12851   00205C  51E0               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12852   00205E  6EFD               	movwf	tosl,c
 12853   002060  51E1               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12854   002062  6EFE               	movwf	tosh,c
 12855   002064  6AFF               	clrf	tosu,c
 12856   002066  50FA               	movf	pclath,w,c
 12857   002068  0E02               	movlw	2
 12858   00206A  0012               	return		;indir
 12859   00206C                     u25529:
 12860   00206C  0101               	movlb	1	; () banked
 12861   00206E  6FCA               	movwf	sendMessage7@data6& (0+255),b
 12862   002070  EE20 F004          	lfsr	2,4
 12863   002074  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12864   002076  26D9               	addwf	fsr2l,f,c
 12865   002078  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12866   00207A  22DA               	addwfc	fsr2h,f,c
 12867   00207C  50DF               	movf	indf2,w,c
 12868   00207E  0102               	movlb	2	; () banked
 12869   002080  6FE2               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12870   002082  6BE3               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12871   002084  90D8               	bcf	status,0,c
 12872   002086  37E2               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12873   002088  37E3               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12874   00208A  0EFE               	movlw	254
 12875   00208C  25E2               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12876   00208E  6FE4               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12877   002090  0EFF               	movlw	255
 12878   002092  21E3               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12879   002094  6FE5               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12880   002096  0E69               	movlw	low _services
 12881   002098  25E4               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12882   00209A  6EF6               	movwf	tblptrl,c
 12883   00209C  0EEE               	movlw	high _services
 12884   00209E  21E5               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12885   0020A0  6EF7               	movwf	tblptrh,c
 12886   0020A2                     	if	1	;There are 3 active tblptr bytes
 12887   0020A2  6AF8               	clrf	tblptru,c
 12888   0020A4  0E00               	movlw	low (__mediumconst shr (0+16))
 12889   0020A6  22F8               	addwfc	tblptru,f,c
 12890   0020A8                     	endif
 12891   0020A8  0009               	tblrd		*+
 12892   0020AA  CFF5 F2E6          	movff	tablat,??_mnsProcessMessage+26
 12893   0020AE  0009               	tblrd		*+
 12894   0020B0  CFF5 F2E7          	movff	tablat,??_mnsProcessMessage+27
 12895   0020B4  0E0E               	movlw	14
 12896   0020B6  27E6               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12897   0020B8  0E00               	movlw	0
 12898   0020BA  23E7               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12899   0020BC  C2E6  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12900   0020C0  C2E7  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12901   0020C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12902   0020C4  6AF8               	clrf	tblptru,c
 12903   0020C6                     	endif
 12904   0020C6                     	if	0	;tblptru may be non-zero
 12905   0020C6                     	endif
 12906   0020C6  0009               	tblrd		*+
 12907   0020C8  CFF5 F2E8          	movff	tablat,??_mnsProcessMessage+28
 12908   0020CC  0009               	tblrd		*+
 12909   0020CE  CFF5 F2E9          	movff	tablat,??_mnsProcessMessage+29
 12910   0020D2  D801               	call	u25538
 12911   0020D4  D00A               	goto	u25539
 12912   0020D6                     u25538:
 12913   0020D6  0005               	push	
 12914   0020D8  6EFA               	movwf	pclath,c
 12915   0020DA  51E8               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12916   0020DC  6EFD               	movwf	tosl,c
 12917   0020DE  51E9               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12918   0020E0  6EFE               	movwf	tosh,c
 12919   0020E2  6AFF               	clrf	tosu,c
 12920   0020E4  50FA               	movf	pclath,w,c
 12921   0020E6  0E03               	movlw	3
 12922   0020E8  0012               	return		;indir
 12923   0020EA                     u25539:
 12924   0020EA  0101               	movlb	1	; () banked
 12925   0020EC  6FCB               	movwf	sendMessage7@data7& (0+255),b
 12926   0020EE  0EE7               	movlw	231
 12927   0020F0  ECCA  F060         	call	_sendMessage7
 12928   0020F4  EF09  F00C         	goto	l23568
 12929   0020F8                     l23772:
 12930                           
 12931                           ; BSR set to: 2
 12932                           ;../../VLCBlib_PIC/mns.c: 540:             if (m->len < 4) {
 12933   0020F8  C1FC  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12934   0020FC  C1FD  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12935   002100  0E04               	movlw	4
 12936   002102  60DF               	cpfslt	indf2,c
 12937   002104  D010               	goto	l23780
 12938                           
 12939                           ; BSR set to: 2
 12940                           ;../../VLCBlib_PIC/mns.c: 541:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12941   002106  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 12942   00210A  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 12943   00210E  0E76               	movlw	118
 12944   002110  0101               	movlb	1	; () banked
 12945   002112  6FC7               	movwf	sendMessage5@data3& (0+255),b
 12946   002114  0E01               	movlw	1
 12947   002116  6FC8               	movwf	sendMessage5@data4& (0+255),b
 12948   002118  0E01               	movlw	1
 12949   00211A  6FC9               	movwf	sendMessage5@data5& (0+255),b
 12950   00211C  0EAF               	movlw	175
 12951   00211E  ECE2  F060         	call	_sendMessage5
 12952   002122  EF09  F00C         	goto	l23568
 12953   002126                     l23780:
 12954                           
 12955                           ; BSR set to: 2
 12956                           ;../../VLCBlib_PIC/mns.c: 544:             newMode = m->bytes[2];
 12957   002126  0101               	movlb	1	; () banked
 12958   002128  EE20 F004          	lfsr	2,4
 12959   00212C  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 12960   00212E  26D9               	addwf	fsr2l,f,c
 12961   002130  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12962   002132  22DA               	addwfc	fsr2h,f,c
 12963   002134  50DF               	movf	indf2,w,c
 12964   002136  0102               	movlb	2	; () banked
 12965   002138  6FEE               	movwf	mnsProcessMessage@newMode& (0+255),b
 12966                           
 12967                           ; BSR set to: 2
 12968                           ;../../VLCBlib_PIC/mns.c: 545:             previousNN.word = nn.word;
 12969   00213A  C0B5  F164         	movff	_nn,_previousNN
 12970   00213E  C0B6  F165         	movff	_nn+1,_previousNN+1
 12971                           
 12972                           ; BSR set to: 2
 12973                           ;../../VLCBlib_PIC/mns.c: 547:             if (mode_state == MODE_NORMAL) {
 12974   002142  0100               	movlb	0	; () banked
 12975   002144  05C4               	decf	_mode_state& (0+255),w,b
 12976   002146  A4D8               	btfss	status,2,c
 12977   002148  D04D               	goto	l23814
 12978                           
 12979                           ; BSR set to: 0
 12980                           ;../../VLCBlib_PIC/mns.c: 548:                 if ((newMode == MODE_SETUP) || (newMode =
      +                          = MODE_UNINITIALISED)) {
 12981   00214A  0102               	movlb	2	; () banked
 12982   00214C  51EE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12983   00214E  B4D8               	btfsc	status,2,c
 12984   002150  D003               	goto	u25570
 12985                           
 12986                           ; BSR set to: 2
 12987   002152  29EE               	incf	mnsProcessMessage@newMode& (0+255),w,b
 12988   002154  A4D8               	btfss	status,2,c
 12989   002156  D046               	goto	l23814
 12990   002158                     u25570:
 12991                           
 12992                           ; BSR set to: 2
 12993                           ;../../VLCBlib_PIC/mns.c: 549:                     sendMessage2((newMode == MODE_SETUP) 
      +                          ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 12994   002158  51EE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12995   00215A  B4D8               	btfsc	status,2,c
 12996   00215C  D002               	goto	l23794
 12997                           
 12998                           ; BSR set to: 2
 12999   00215E  0E51               	movlw	81
 13000   002160  D001               	goto	L2
 13001   002162                     l23794:
 13002                           
 13003                           ; BSR set to: 2
 13004   002162  0E50               	movlw	80
 13005   002164                     L2:
 13006   002164  6FEB               	movwf	_mnsProcessMessage$3632& (0+255),b
 13007                           
 13008                           ; BSR set to: 2
 13009   002166  C0B6  F0A6         	movff	_nn+1,sendMessage2@data1
 13010   00216A  C0B5  F0A7         	movff	_nn,sendMessage2@data2
 13011   00216E  51EB               	movf	_mnsProcessMessage$3632& (0+255),w,b
 13012   002170  ECB2  F060         	call	_sendMessage2
 13013                           
 13014                           ;../../VLCBlib_PIC/mns.c: 550:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13015   002174  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 13016   002178  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 13017   00217C  0E76               	movlw	118
 13018   00217E  0101               	movlb	1	; () banked
 13019   002180  6FC7               	movwf	sendMessage5@data3& (0+255),b
 13020   002182  0E01               	movlw	1
 13021   002184  6FC8               	movwf	sendMessage5@data4& (0+255),b
 13022   002186  0E00               	movlw	0
 13023   002188  6FC9               	movwf	sendMessage5@data5& (0+255),b
 13024   00218A  0EAF               	movlw	175
 13025   00218C  ECE2  F060         	call	_sendMessage5
 13026                           
 13027                           ;../../VLCBlib_PIC/mns.c: 551:                     nn.bytes.lo = nn.bytes.hi = 0;
 13028   002190  0E00               	movlw	0
 13029   002192  0100               	movlb	0	; () banked
 13030   002194  6FB6               	movwf	(_nn+1)& (0+255),b
 13031   002196  C0B6  F0B5         	movff	_nn+1,_nn
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;../../VLCBlib_PIC/mns.c: 552:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 13035   00219A  0EFD               	movlw	253
 13036   00219C  6FA4               	movwf	writeNVM@index& (0+255),b
 13037   00219E  0E03               	movlw	3
 13038   0021A0  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13039   0021A2  0E00               	movlw	0
 13040   0021A4  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13041   0021A6  C0B6  F0A7         	movff	_nn+1,writeNVM@value
 13042   0021AA  0E00               	movlw	0
 13043   0021AC  EC61  F05D         	call	_writeNVM
 13044                           
 13045                           ;../../VLCBlib_PIC/mns.c: 553:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 13046   0021B0  0EFC               	movlw	252
 13047   0021B2  0100               	movlb	0	; () banked
 13048   0021B4  6FA4               	movwf	writeNVM@index& (0+255),b
 13049   0021B6  0E03               	movlw	3
 13050   0021B8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13051   0021BA  0E00               	movlw	0
 13052   0021BC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13053   0021BE  C0B5  F0A7         	movff	_nn,writeNVM@value
 13054   0021C2  0E00               	movlw	0
 13055   0021C4  EC61  F05D         	call	_writeNVM
 13056                           
 13057                           ;../../VLCBlib_PIC/mns.c: 555:                     mode_state = (newMode == MODE_SETUP) 
      +                          ? MODE_SETUP : MODE_UNINITIALISED;
 13058   0021C8  0102               	movlb	2	; () banked
 13059   0021CA  51EE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 13060   0021CC  B4D8               	btfsc	status,2,c
 13061   0021CE  D003               	goto	l23806
 13062                           
 13063                           ; BSR set to: 2
 13064   0021D0  0100               	movlb	0	; () banked
 13065   0021D2  69C4               	setf	_mode_state& (0+255),b
 13066   0021D4  D003               	goto	l1520
 13067   0021D6                     l23806:
 13068                           
 13069                           ; BSR set to: 2
 13070   0021D6  0E00               	movlw	0
 13071   0021D8  0100               	movlb	0	; () banked
 13072   0021DA  6FC4               	movwf	_mode_state& (0+255),b
 13073   0021DC                     l1520:
 13074                           
 13075                           ; BSR set to: 0
 13076                           ;../../VLCBlib_PIC/mns.c: 556:                     setupModePreviousMode = MODE_NORMAL;
 13077   0021DC  0E01               	movlw	1
 13078   0021DE  6FC1               	movwf	_setupModePreviousMode& (0+255),b
 13079   0021E0  EF07  F00C         	goto	l23566
 13080   0021E4                     l23814:
 13081                           
 13082                           ;../../VLCBlib_PIC/mns.c: 563:             if (newMode == MODE_HEARTBEAT_ON) {
 13083   0021E4  0E0C               	movlw	12
 13084   0021E6  0102               	movlb	2	; () banked
 13085   0021E8  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13086   0021EA  A4D8               	btfss	status,2,c
 13087   0021EC  D011               	goto	l23826
 13088                           
 13089                           ; BSR set to: 2
 13090                           ;../../VLCBlib_PIC/mns.c: 564:                 mode_flags |= 4;
 13091   0021EE  0101               	movlb	1	; () banked
 13092   0021F0  8569               	bsf	_mode_flags& (0+255),2,b
 13093                           
 13094                           ; BSR set to: 1
 13095                           ;../../VLCBlib_PIC/mns.c: 565:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13096   0021F2  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 13097   0021F6  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 13098   0021FA  0E76               	movlw	118
 13099   0021FC  6FC7               	movwf	sendMessage5@data3& (0+255),b
 13100   0021FE  0E01               	movlw	1
 13101   002200  6FC8               	movwf	sendMessage5@data4& (0+255),b
 13102   002202  0E00               	movlw	0
 13103   002204  6FC9               	movwf	sendMessage5@data5& (0+255),b
 13104   002206  0EAF               	movlw	175
 13105   002208  ECE2  F060         	call	_sendMessage5
 13106   00220C  EF09  F00C         	goto	l23568
 13107   002210                     l23826:
 13108                           
 13109                           ; BSR set to: 2
 13110   002210  0E0D               	movlw	13
 13111   002212  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13112   002214  A4D8               	btfss	status,2,c
 13113   002216  EF8E  F00C         	goto	l23594
 13114                           
 13115                           ; BSR set to: 2
 13116                           ;../../VLCBlib_PIC/mns.c: 568:                 mode_flags &= ~4;
 13117   00221A  0101               	movlb	1	; () banked
 13118   00221C  9569               	bcf	_mode_flags& (0+255),2,b
 13119                           
 13120                           ; BSR set to: 1
 13121                           ;../../VLCBlib_PIC/mns.c: 569:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13122   00221E  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 13123   002222  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 13124   002226  0E76               	movlw	118
 13125   002228  6FC7               	movwf	sendMessage5@data3& (0+255),b
 13126   00222A  0E01               	movlw	1
 13127   00222C  6FC8               	movwf	sendMessage5@data4& (0+255),b
 13128   00222E  0E00               	movlw	0
 13129   002230  6FC9               	movwf	sendMessage5@data5& (0+255),b
 13130   002232  0EAF               	movlw	175
 13131   002234  ECE2  F060         	call	_sendMessage5
 13132   002238  EF09  F00C         	goto	l23568
 13133   00223C                     l1524:
 13134                           
 13135                           ; BSR set to: 2
 13136   00223C  00FF               	reset		;# 
 13137   00223E  EF09  F00C         	goto	l23568
 13138   002242                     l23846:
 13139                           
 13140                           ; BSR set to: 0
 13141   002242  0101               	movlb	1	; () banked
 13142   002244  EE20 F001          	lfsr	2,1
 13143   002248  51FC               	movf	mnsProcessMessage@m& (0+255),w,b
 13144   00224A  26D9               	addwf	fsr2l,f,c
 13145   00224C  51FD               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 13146   00224E  22DA               	addwfc	fsr2h,f,c
 13147   002250  50DF               	movf	indf2,w,c
 13148   002252  0102               	movlb	2	; () banked
 13149   002254  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 13150   002256  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 13151                           
 13152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13153                           ; Switch size 1, requested type "simple"
 13154                           ; Number of cases is 1, Range of values is 0 to 0
 13155                           ; switch strategies available:
 13156                           ; Name         Instructions Cycles
 13157                           ; simple_byte            4     3 (average)
 13158                           ;	Chosen strategy is simple_byte
 13159   002258  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 13160   00225A  0A00               	xorlw	0	; case 0
 13161   00225C  A4D8               	btfss	status,2,c
 13162   00225E  EF8E  F00C         	goto	l23594
 13163                           
 13164                           ; BSR set to: 2
 13165                           ; Switch size 1, requested type "simple"
 13166                           ; Number of cases is 6, Range of values is 79 to 135
 13167                           ; switch strategies available:
 13168                           ; Name         Instructions Cycles
 13169                           ; simple_byte           19    10 (average)
 13170                           ;	Chosen strategy is simple_byte
 13171   002262  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 13172   002264  0A4F               	xorlw	79	; case 79
 13173   002266  B4D8               	btfsc	status,2,c
 13174   002268  D451               	goto	l1487
 13175   00226A  0A11               	xorlw	17	; case 94
 13176   00226C  B4D8               	btfsc	status,2,c
 13177   00226E  D7E6               	goto	l1524
 13178   002270  0A2D               	xorlw	45	; case 115
 13179   002272  B4D8               	btfsc	status,2,c
 13180   002274  EF19  F00D         	goto	l23658
 13181   002278  0A05               	xorlw	5	; case 118
 13182   00227A  B4D8               	btfsc	status,2,c
 13183   00227C  D73D               	goto	l23772
 13184   00227E  0A0E               	xorlw	14	; case 120
 13185   002280  B4D8               	btfsc	status,2,c
 13186   002282  D57E               	goto	l23738
 13187   002284  0AFF               	xorlw	255	; case 135
 13188   002286  B4D8               	btfsc	status,2,c
 13189   002288  D454               	goto	l23692
 13190   00228A  EF8E  F00C         	goto	l23594
 13191   00228E                     __end_of_mnsProcessMessage:
 13192                           	callstack 0
 13193                           
 13194 ;; *************** function _ackEventProcessMessage *****************
 13195 ;; Defined at:
 13196 ;;		line 111 in file "../../VLCBlib_PIC/event_acknowledge.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;  m               2   63[BANK1 ] PTR struct Message
 13199 ;;		 -> poll@m(9), 
 13200 ;; Auto vars:     Size  Location     Type
 13201 ;;  eventNN         2    3[BANK2 ] struct Word
 13202 ;;  eventEN         2    0[BANK2 ] struct Word
 13203 ;;  ev              2    0        short 
 13204 ;;  eventIndex      1    2[BANK2 ] unsigned char 
 13205 ;; Return value:  Size  Location     Type
 13206 ;;                  1    wreg      enum E12799
 13207 ;; Registers used:
 13208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 13209 ;; Tracked objects:
 13210 ;;		On entry : 0/0
 13211 ;;		On exit  : 0/0
 13212 ;;		Unchanged: 0/0
 13213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13214 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13215 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13216 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13217 ;;      Totals:         0       0       4       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13218 ;;Total ram usage:        9 bytes
 13219 ;; Hardware stack levels used: 1
 13220 ;; Hardware stack levels required when called: 19
 13221 ;; This function calls:
 13222 ;;		_ackEventCheckLen
 13223 ;;		_findEvent
 13224 ;;		_findService
 13225 ;;		_isConsumedEvent
 13226 ;;		_sendMessage7
 13227 ;; This function is called by:
 13228 ;;		_poll
 13229 ;; This function uses a non-reentrant model
 13230 ;;
 13231                           
 13232                           	psect	text24
 13233   0067CE                     __ptext24:
 13234                           	callstack 0
 13235   0067CE                     _ackEventProcessMessage:
 13236                           	callstack 10
 13237                           
 13238                           ;../../VLCBlib_PIC/event_acknowledge.c: 112:     Word eventNN, eventEN;;../../VLCBlib_PI
      +                          C/event_acknowledge.c: 113:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.
      +                          c: 114:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 117:     if (m->opc == OP
      +                          C_MODE) {
 13239                           
 13240                           ;incstack = 0
 13241   0067CE  0101               	movlb	1	; () banked
 13242   0067D0  EE20 F001          	lfsr	2,1
 13243   0067D4  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13244   0067D6  26D9               	addwf	fsr2l,f,c
 13245   0067D8  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13246   0067DA  22DA               	addwfc	fsr2h,f,c
 13247   0067DC  0E76               	movlw	118
 13248   0067DE  18DE               	xorwf	postinc2,w,c
 13249   0067E0  A4D8               	btfss	status,2,c
 13250   0067E2  D040               	goto	l1318
 13251                           
 13252                           ; BSR set to: 1
 13253                           ;../../VLCBlib_PIC/event_acknowledge.c: 118:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 13254   0067E4  C1FC  F1CE         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 13255   0067E8  C1FD  F1CF         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 13256   0067EC  0E04               	movlw	4
 13257   0067EE  6FD0               	movwf	ackEventCheckLen@needed& (0+255),b
 13258   0067F0  EC97  F063         	call	_ackEventCheckLen	;wreg free
 13259   0067F4  06E8               	decf	wreg,f,c
 13260   0067F6  A4D8               	btfss	status,2,c
 13261   0067F8  D002               	goto	l23430
 13262   0067FA                     u25110:
 13263   0067FA  0E01               	movlw	1
 13264   0067FC  0012               	return	
 13265   0067FE                     l23430:
 13266                           
 13267                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 13268   0067FE  0101               	movlb	1	; () banked
 13269   006800  EE20 F002          	lfsr	2,2
 13270   006804  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13271   006806  26D9               	addwf	fsr2l,f,c
 13272   006808  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13273   00680A  22DA               	addwfc	fsr2h,f,c
 13274   00680C  50DE               	movf	postinc2,w,c
 13275   00680E  0100               	movlb	0	; () banked
 13276   006810  19B6               	xorwf	(_nn+1)& (0+255),w,b
 13277   006812  A4D8               	btfss	status,2,c
 13278   006814  D025               	goto	l23452
 13279                           
 13280                           ; BSR set to: 0
 13281   006816  0101               	movlb	1	; () banked
 13282   006818  EE20 F003          	lfsr	2,3
 13283   00681C  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13284   00681E  26D9               	addwf	fsr2l,f,c
 13285   006820  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13286   006822  22DA               	addwfc	fsr2h,f,c
 13287   006824  0100               	movlb	0	; () banked
 13288   006826  51B5               	movf	_nn& (0+255),w,b
 13289   006828  18DE               	xorwf	postinc2,w,c
 13290   00682A  A4D8               	btfss	status,2,c
 13291   00682C  D019               	goto	l23452
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;../../VLCBlib_PIC/event_acknowledge.c: 120:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 13295   00682E  0101               	movlb	1	; () banked
 13296   006830  EE20 F004          	lfsr	2,4
 13297   006834  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13298   006836  26D9               	addwf	fsr2l,f,c
 13299   006838  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13300   00683A  22DA               	addwfc	fsr2h,f,c
 13301   00683C  0E0A               	movlw	10
 13302   00683E  18DE               	xorwf	postinc2,w,c
 13303   006840  A4D8               	btfss	status,2,c
 13304   006842  D002               	goto	l23444
 13305                           
 13306                           ; BSR set to: 1
 13307                           ;../../VLCBlib_PIC/event_acknowledge.c: 122:                 mode_flags |= 1;
 13308   006844  8169               	bsf	_mode_flags& (0+255),0,b
 13309   006846  D7D9               	goto	u25110
 13310   006848                     l23444:
 13311                           
 13312                           ; BSR set to: 1
 13313   006848  EE20 F004          	lfsr	2,4
 13314   00684C  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13315   00684E  26D9               	addwf	fsr2l,f,c
 13316   006850  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13317   006852  22DA               	addwfc	fsr2h,f,c
 13318   006854  0E0B               	movlw	11
 13319   006856  18DE               	xorwf	postinc2,w,c
 13320   006858  A4D8               	btfss	status,2,c
 13321   00685A  D002               	goto	l23452
 13322                           
 13323                           ; BSR set to: 1
 13324                           ;../../VLCBlib_PIC/event_acknowledge.c: 126:                 mode_flags &= ~1;
 13325   00685C  9169               	bcf	_mode_flags& (0+255),0,b
 13326   00685E  D7CD               	goto	u25110
 13327   006860                     l23452:
 13328                           
 13329                           ;../../VLCBlib_PIC/event_acknowledge.c: 130:         return NOT_PROCESSED;
 13330   006860  0E00               	movlw	0
 13331   006862  0012               	return	
 13332   006864                     l1318:
 13333                           
 13334                           ; BSR set to: 1
 13335                           ;../../VLCBlib_PIC/event_acknowledge.c: 135:     if (! (mode_flags & 2)) {
 13336   006864  A369               	btfss	_mode_flags& (0+255),1,b
 13337   006866  D7FC               	goto	l23452
 13338                           
 13339                           ; BSR set to: 1
 13340                           ;../../VLCBlib_PIC/event_acknowledge.c: 139:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 13341   006868  0E06               	movlw	6
 13342   00686A  ECAA  F050         	call	_findService
 13343   00686E  0100               	movlb	0	; () banked
 13344   006870  518D               	movf	?_findService& (0+255),w,b
 13345   006872  118E               	iorwf	(?_findService+1)& (0+255),w,b
 13346   006874  B4D8               	btfsc	status,2,c
 13347   006876  D7F4               	goto	l23452
 13348                           
 13349                           ; BSR set to: 0
 13350                           ;../../VLCBlib_PIC/event_acknowledge.c: 142:     if (m->len < 5) {
 13351   006878  C1FC  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 13352   00687C  C1FD  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 13353   006880  0E05               	movlw	5
 13354   006882  60DF               	cpfslt	indf2,c
 13355   006884  D001               	goto	l23472
 13356   006886  D7EC               	goto	l23452
 13357   006888                     l23472:
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;../../VLCBlib_PIC/event_acknowledge.c: 145:     eventNN.bytes.hi = m->bytes[0];
 13361   006888  0101               	movlb	1	; () banked
 13362   00688A  EE20 F002          	lfsr	2,2
 13363   00688E  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13364   006890  26D9               	addwf	fsr2l,f,c
 13365   006892  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13366   006894  22DA               	addwfc	fsr2h,f,c
 13367   006896  50DF               	movf	indf2,w,c
 13368   006898  0102               	movlb	2	; () banked
 13369   00689A  6FD0               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 13370                           
 13371                           ;../../VLCBlib_PIC/event_acknowledge.c: 146:     eventNN.bytes.lo = m->bytes[1];
 13372   00689C  0101               	movlb	1	; () banked
 13373   00689E  EE20 F003          	lfsr	2,3
 13374   0068A2  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13375   0068A4  26D9               	addwf	fsr2l,f,c
 13376   0068A6  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13377   0068A8  22DA               	addwfc	fsr2h,f,c
 13378   0068AA  50DF               	movf	indf2,w,c
 13379   0068AC  0102               	movlb	2	; () banked
 13380   0068AE  6FCF               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 13381                           
 13382                           ;../../VLCBlib_PIC/event_acknowledge.c: 147:     eventEN.bytes.hi = m->bytes[2];
 13383   0068B0  0101               	movlb	1	; () banked
 13384   0068B2  EE20 F004          	lfsr	2,4
 13385   0068B6  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13386   0068B8  26D9               	addwf	fsr2l,f,c
 13387   0068BA  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13388   0068BC  22DA               	addwfc	fsr2h,f,c
 13389   0068BE  50DF               	movf	indf2,w,c
 13390   0068C0  0102               	movlb	2	; () banked
 13391   0068C2  6FCD               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 13392                           
 13393                           ;../../VLCBlib_PIC/event_acknowledge.c: 148:     eventEN.bytes.lo = m->bytes[3];
 13394   0068C4  0101               	movlb	1	; () banked
 13395   0068C6  EE20 F005          	lfsr	2,5
 13396   0068CA  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13397   0068CC  26D9               	addwf	fsr2l,f,c
 13398   0068CE  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13399   0068D0  22DA               	addwfc	fsr2h,f,c
 13400   0068D2  50DF               	movf	indf2,w,c
 13401   0068D4  0102               	movlb	2	; () banked
 13402   0068D6  6FCC               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13403                           
 13404                           ;../../VLCBlib_PIC/event_acknowledge.c: 150:     switch (m->opc) {
 13405   0068D8  D018               	goto	l23484
 13406   0068DA                     l23474:
 13407                           
 13408                           ; BSR set to: 1
 13409                           ;../../VLCBlib_PIC/event_acknowledge.c: 154:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13410   0068DA  C2CF  F1BD         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13411   0068DE  C2D0  F1BE         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13412   0068E2  C2CF  F1BF         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13413   0068E6  C2D0  F1C0         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13414   0068EA  EC00  F053         	call	_findEvent	;wreg free
 13415   0068EE  D00A               	goto	L3
 13416   0068F0                     l23476:
 13417                           
 13418                           ; BSR set to: 1
 13419                           ;../../VLCBlib_PIC/event_acknowledge.c: 159:             eventIndex = findEvent(0, event
      +                          NN.word);
 13420   0068F0  0E00               	movlw	0
 13421   0068F2  6FBE               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13422   0068F4  0E00               	movlw	0
 13423   0068F6  6FBD               	movwf	findEvent@nodeNumber& (0+255),b
 13424   0068F8  C2CF  F1BF         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13425   0068FC  C2D0  F1C0         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13426   006900  EC00  F053         	call	_findEvent	;wreg free
 13427   006904                     L3:
 13428   006904  0102               	movlb	2	; () banked
 13429   006906  6FCE               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13430                           
 13431                           ;../../VLCBlib_PIC/event_acknowledge.c: 160:             break;
 13432   006908  D01C               	goto	l23486
 13433   00690A                     l23484:
 13434                           
 13435                           ; BSR set to: 2
 13436   00690A  0101               	movlb	1	; () banked
 13437   00690C  EE20 F001          	lfsr	2,1
 13438   006910  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13439   006912  26D9               	addwf	fsr2l,f,c
 13440   006914  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13441   006916  22DA               	addwfc	fsr2h,f,c
 13442   006918  50DF               	movf	indf2,w,c
 13443   00691A  6FFE               	movwf	??_ackEventProcessMessage& (0+255),b
 13444   00691C  6BFF               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13445                           
 13446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13447                           ; Switch size 1, requested type "simple"
 13448                           ; Number of cases is 1, Range of values is 0 to 0
 13449                           ; switch strategies available:
 13450                           ; Name         Instructions Cycles
 13451                           ; simple_byte            4     3 (average)
 13452                           ;	Chosen strategy is simple_byte
 13453   00691E  51FF               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13454   006920  0A00               	xorlw	0	; case 0
 13455   006922  A4D8               	btfss	status,2,c
 13456   006924  D79D               	goto	l23452
 13457                           
 13458                           ; BSR set to: 1
 13459                           ; Switch size 1, requested type "simple"
 13460                           ; Number of cases is 4, Range of values is 144 to 153
 13461                           ; switch strategies available:
 13462                           ; Name         Instructions Cycles
 13463                           ; simple_byte           13     7 (average)
 13464                           ;	Chosen strategy is simple_byte
 13465   006926  51FE               	movf	??_ackEventProcessMessage& (0+255),w,b
 13466   006928  0A90               	xorlw	144	; case 144
 13467   00692A  B4D8               	btfsc	status,2,c
 13468   00692C  D7D6               	goto	l23474
 13469   00692E  0A01               	xorlw	1	; case 145
 13470   006930  B4D8               	btfsc	status,2,c
 13471   006932  D7D3               	goto	l23474
 13472   006934  0A09               	xorlw	9	; case 152
 13473   006936  B4D8               	btfsc	status,2,c
 13474   006938  D7DB               	goto	l23476
 13475   00693A  0A01               	xorlw	1	; case 153
 13476   00693C  B4D8               	btfsc	status,2,c
 13477   00693E  D7D8               	goto	l23476
 13478   006940  D78F               	goto	l23452
 13479   006942                     l23486:
 13480                           
 13481                           ; BSR set to: 2
 13482                           ;../../VLCBlib_PIC/event_acknowledge.c: 164:     if (eventIndex != 0xff) {
 13483   006942  29CE               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13484   006944  B4D8               	btfsc	status,2,c
 13485   006946  D78C               	goto	l23452
 13486                           
 13487                           ; BSR set to: 2
 13488                           ;../../VLCBlib_PIC/event_acknowledge.c: 167:         if (isConsumedEvent(eventIndex)) {
 13489   006948  51CE               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13490   00694A  ECAE  F062         	call	_isConsumedEvent
 13491   00694E  0900               	iorlw	0
 13492   006950  B4D8               	btfsc	status,2,c
 13493   006952  D786               	goto	l23452
 13494                           
 13495                           ;../../VLCBlib_PIC/event_acknowledge.c: 169:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13496   006954  C0B6  F1C5         	movff	_nn+1,sendMessage7@data1
 13497   006958  C0B5  F1C6         	movff	_nn,sendMessage7@data2
 13498   00695C  0101               	movlb	1	; () banked
 13499   00695E  EE20 F001          	lfsr	2,1
 13500   006962  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13501   006964  26D9               	addwf	fsr2l,f,c
 13502   006966  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13503   006968  22DA               	addwfc	fsr2h,f,c
 13504   00696A  50DF               	movf	indf2,w,c
 13505   00696C  6FC7               	movwf	sendMessage7@data3& (0+255),b
 13506   00696E  EE20 F002          	lfsr	2,2
 13507   006972  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13508   006974  26D9               	addwf	fsr2l,f,c
 13509   006976  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13510   006978  22DA               	addwfc	fsr2h,f,c
 13511   00697A  50DF               	movf	indf2,w,c
 13512   00697C  6FC8               	movwf	sendMessage7@data4& (0+255),b
 13513   00697E  EE20 F003          	lfsr	2,3
 13514   006982  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13515   006984  26D9               	addwf	fsr2l,f,c
 13516   006986  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13517   006988  22DA               	addwfc	fsr2h,f,c
 13518   00698A  50DF               	movf	indf2,w,c
 13519   00698C  6FC9               	movwf	sendMessage7@data5& (0+255),b
 13520   00698E  EE20 F004          	lfsr	2,4
 13521   006992  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13522   006994  26D9               	addwf	fsr2l,f,c
 13523   006996  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13524   006998  22DA               	addwfc	fsr2h,f,c
 13525   00699A  50DF               	movf	indf2,w,c
 13526   00699C  6FCA               	movwf	sendMessage7@data6& (0+255),b
 13527   00699E  EE20 F005          	lfsr	2,5
 13528   0069A2  51FC               	movf	ackEventProcessMessage@m& (0+255),w,b
 13529   0069A4  26D9               	addwf	fsr2l,f,c
 13530   0069A6  51FD               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13531   0069A8  22DA               	addwfc	fsr2h,f,c
 13532   0069AA  50DF               	movf	indf2,w,c
 13533   0069AC  6FCB               	movwf	sendMessage7@data7& (0+255),b
 13534   0069AE  0EE6               	movlw	230
 13535   0069B0  ECCA  F060         	call	_sendMessage7
 13536                           
 13537                           ;../../VLCBlib_PIC/event_acknowledge.c: 171:             ackDiagnostics[0x01].asInt++;
 13538   0069B4  0101               	movlb	1	; () banked
 13539   0069B6  4BB7               	infsnz	(_ackDiagnostics+2)& (0+255),f,b
 13540   0069B8  2BB8               	incf	(_ackDiagnostics+3)& (0+255),f,b
 13541   0069BA  D752               	goto	l23452
 13542   0069BC                     __end_of_ackEventProcessMessage:
 13543                           	callstack 0
 13544                           
 13545 ;; *************** function _bootProcessMessage *****************
 13546 ;; Defined at:
 13547 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;  m               2   63[BANK1 ] PTR struct Message
 13550 ;;		 -> poll@m(9), 
 13551 ;; Auto vars:     Size  Location     Type
 13552 ;;		None
 13553 ;; Return value:  Size  Location     Type
 13554 ;;                  1    wreg      enum E12799
 13555 ;; Registers used:
 13556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13557 ;; Tracked objects:
 13558 ;;		On entry : 0/0
 13559 ;;		On exit  : 0/0
 13560 ;;		Unchanged: 0/0
 13561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13562 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13564 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13565 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13566 ;;Total ram usage:        4 bytes
 13567 ;; Hardware stack levels used: 1
 13568 ;; Hardware stack levels required when called: 18
 13569 ;; This function calls:
 13570 ;;		_writeNVM
 13571 ;; This function is called by:
 13572 ;;		_poll
 13573 ;; This function uses a non-reentrant model
 13574 ;;
 13575                           
 13576                           	psect	text25
 13577   00A446                     __ptext25:
 13578                           	callstack 0
 13579   00A446                     _bootProcessMessage:
 13580                           	callstack 11
 13581                           
 13582                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13583                           
 13584                           ;incstack = 0
 13585   00A446  0101               	movlb	1	; () banked
 13586   00A448  EE20 F002          	lfsr	2,2
 13587   00A44C  51FC               	movf	bootProcessMessage@m& (0+255),w,b
 13588   00A44E  26D9               	addwf	fsr2l,f,c
 13589   00A450  51FD               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13590   00A452  22DA               	addwfc	fsr2h,f,c
 13591   00A454  50DE               	movf	postinc2,w,c
 13592   00A456  0100               	movlb	0	; () banked
 13593   00A458  19B6               	xorwf	(_nn+1)& (0+255),w,b
 13594   00A45A  B4D8               	btfsc	status,2,c
 13595   00A45C  D002               	goto	l23376
 13596   00A45E                     u25060:
 13597   00A45E  0E00               	movlw	0
 13598   00A460  0012               	return	
 13599   00A462                     l23376:
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13603   00A462  0101               	movlb	1	; () banked
 13604   00A464  EE20 F003          	lfsr	2,3
 13605   00A468  51FC               	movf	bootProcessMessage@m& (0+255),w,b
 13606   00A46A  26D9               	addwf	fsr2l,f,c
 13607   00A46C  51FD               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13608   00A46E  22DA               	addwfc	fsr2h,f,c
 13609   00A470  0100               	movlb	0	; () banked
 13610   00A472  51B5               	movf	_nn& (0+255),w,b
 13611   00A474  18DE               	xorwf	postinc2,w,c
 13612   00A476  A4D8               	btfss	status,2,c
 13613   00A478  D7F2               	goto	u25060
 13614   00A47A  D019               	goto	l23400
 13615   00A47C                     l23382:
 13616                           
 13617                           ; BSR set to: 1
 13618                           ;../../VLCBlib_PIC/boot.c: 239:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13619   00A47C  EE20 F004          	lfsr	2,4
 13620   00A480  51FC               	movf	bootProcessMessage@m& (0+255),w,b
 13621   00A482  26D9               	addwf	fsr2l,f,c
 13622   00A484  51FD               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13623   00A486  22DA               	addwfc	fsr2h,f,c
 13624   00A488  0E0E               	movlw	14
 13625   00A48A  18DE               	xorwf	postinc2,w,c
 13626   00A48C  A4D8               	btfss	status,2,c
 13627   00A48E  D7E7               	goto	u25060
 13628   00A490                     l23388:
 13629                           
 13630                           ; BSR set to: 1
 13631                           ;../../VLCBlib_PIC/boot.c: 244:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13632   00A490  0EFF               	movlw	255
 13633   00A492  0100               	movlb	0	; () banked
 13634   00A494  6FA4               	movwf	writeNVM@index& (0+255),b
 13635   00A496  0E03               	movlw	3
 13636   00A498  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13637   00A49A  0E00               	movlw	0
 13638   00A49C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13639   00A49E  0EFF               	movlw	255
 13640   00A4A0  6FA7               	movwf	writeNVM@value& (0+255),b
 13641   00A4A2  0E00               	movlw	0
 13642   00A4A4  EC61  F05D         	call	_writeNVM
 13643   00A4A8  00FF               	reset		;# 
 13644                           
 13645                           ;../../VLCBlib_PIC/boot.c: 246:             return PROCESSED;
 13646   00A4AA  0E01               	movlw	1
 13647   00A4AC  0012               	return	
 13648   00A4AE                     l23400:
 13649                           
 13650                           ; BSR set to: 0
 13651   00A4AE  0101               	movlb	1	; () banked
 13652   00A4B0  EE20 F001          	lfsr	2,1
 13653   00A4B4  51FC               	movf	bootProcessMessage@m& (0+255),w,b
 13654   00A4B6  26D9               	addwf	fsr2l,f,c
 13655   00A4B8  51FD               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13656   00A4BA  22DA               	addwfc	fsr2h,f,c
 13657   00A4BC  50DF               	movf	indf2,w,c
 13658   00A4BE  6FFE               	movwf	??_bootProcessMessage& (0+255),b
 13659   00A4C0  6BFF               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13660                           
 13661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13662                           ; Switch size 1, requested type "simple"
 13663                           ; Number of cases is 1, Range of values is 0 to 0
 13664                           ; switch strategies available:
 13665                           ; Name         Instructions Cycles
 13666                           ; simple_byte            4     3 (average)
 13667                           ;	Chosen strategy is simple_byte
 13668   00A4C2  51FF               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13669   00A4C4  0A00               	xorlw	0	; case 0
 13670   00A4C6  A4D8               	btfss	status,2,c
 13671   00A4C8  D7CA               	goto	u25060
 13672                           
 13673                           ; BSR set to: 1
 13674                           ; Switch size 1, requested type "simple"
 13675                           ; Number of cases is 2, Range of values is 92 to 118
 13676                           ; switch strategies available:
 13677                           ; Name         Instructions Cycles
 13678                           ; simple_byte            7     4 (average)
 13679                           ;	Chosen strategy is simple_byte
 13680   00A4CA  51FE               	movf	??_bootProcessMessage& (0+255),w,b
 13681   00A4CC  0A5C               	xorlw	92	; case 92
 13682   00A4CE  B4D8               	btfsc	status,2,c
 13683   00A4D0  D7DF               	goto	l23388
 13684   00A4D2  0A2A               	xorlw	42	; case 118
 13685   00A4D4  B4D8               	btfsc	status,2,c
 13686   00A4D6  D7D2               	goto	l23382
 13687   00A4D8  D7C2               	goto	u25060
 13688   00A4DA                     __end_of_bootProcessMessage:
 13689                           	callstack 0
 13690                           
 13691 ;; *************** function _consumer2QProcessMessage *****************
 13692 ;; Defined at:
 13693 ;;		line 142 in file "../event_consumerDualActionQueue.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;  m               2   63[BANK1 ] PTR struct Message
 13696 ;;		 -> poll@m(9), 
 13697 ;; Auto vars:     Size  Location     Type
 13698 ;;  nextSimultan    1   11[BANK2 ] unsigned char 
 13699 ;;  firstAction     1   10[BANK2 ] unsigned char 
 13700 ;;  nextAction      1    9[BANK2 ] unsigned char 
 13701 ;;  enn             2    6[BANK2 ] unsigned short 
 13702 ;;  action          1   16[BANK2 ] unsigned char 
 13703 ;;  e               1   15[BANK2 ] unsigned char 
 13704 ;;  ca              1   14[BANK2 ] unsigned char 
 13705 ;;  masked_actio    1   13[BANK2 ] unsigned char 
 13706 ;;  io              1   12[BANK2 ] unsigned char 
 13707 ;;  tableIndex      1    8[BANK2 ] unsigned char 
 13708 ;;  opc             1    5[BANK2 ] unsigned char 
 13709 ;;  change          1    4[BANK2 ] char 
 13710 ;;  end             1    3[BANK2 ] unsigned char 
 13711 ;;  start           1    0        unsigned char 
 13712 ;; Return value:  Size  Location     Type
 13713 ;;                  1    wreg      enum E12799
 13714 ;; Registers used:
 13715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13716 ;; Tracked objects:
 13717 ;;		On entry : 0/0
 13718 ;;		On exit  : 0/0
 13719 ;;		Unchanged: 0/0
 13720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13721 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13722 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13723 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13724 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13725 ;;Total ram usage:       19 bytes
 13726 ;; Hardware stack levels used: 1
 13727 ;; Hardware stack levels required when called: 16
 13728 ;; This function calls:
 13729 ;;		___awdiv
 13730 ;;		___awmod
 13731 ;;		_findEvent
 13732 ;;		_getEVs
 13733 ;;		_getNV
 13734 ;;		_pushTwoAction
 13735 ;;		_setExpeditedActions
 13736 ;;		_setNormalActions
 13737 ;; This function is called by:
 13738 ;;		_poll
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742                           	psect	text26
 13743   003A60                     __ptext26:
 13744                           	callstack 0
 13745   003A60                     _consumer2QProcessMessage:
 13746                           	callstack 13
 13747                           
 13748                           ;../event_consumerDualActionQueue.c: 143:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 144:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 145:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 146:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 147:     uint8_t action;;../event_consumerDualActionQueue.c: 148:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 149:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 150:     uint8_t io;;../event_consumerDualActionQueue.c: 15
      +                          1:     uint16_t enn;
 13749                           
 13750                           ;incstack = 0
 13751   003A60  C1FC  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13752   003A64  C1FD  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13753   003A68  0E05               	movlw	5
 13754   003A6A  60DF               	cpfslt	indf2,c
 13755   003A6C  D002               	goto	l23162
 13756   003A6E                     u24790:
 13757   003A6E  0E00               	movlw	0
 13758   003A70  0012               	return	
 13759   003A72                     l23162:
 13760                           
 13761                           ;../event_consumerDualActionQueue.c: 155:     enn = ((uint16_t)m->bytes[0])*256+m->bytes
      +                          [1];
 13762   003A72  0101               	movlb	1	; () banked
 13763   003A74  EE20 F003          	lfsr	2,3
 13764   003A78  51FC               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13765   003A7A  26D9               	addwf	fsr2l,f,c
 13766   003A7C  51FD               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13767   003A7E  22DA               	addwfc	fsr2h,f,c
 13768   003A80  50DF               	movf	indf2,w,c
 13769   003A82  0102               	movlb	2	; () banked
 13770   003A84  6FCC               	movwf	??_consumer2QProcessMessage& (0+255),b
 13771   003A86  0101               	movlb	1	; () banked
 13772   003A88  EE20 F002          	lfsr	2,2
 13773   003A8C  51FC               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13774   003A8E  26D9               	addwf	fsr2l,f,c
 13775   003A90  51FD               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13776   003A92  22DA               	addwfc	fsr2h,f,c
 13777   003A94  50DF               	movf	indf2,w,c
 13778   003A96  0102               	movlb	2	; () banked
 13779   003A98  6FCD               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13780   003A9A  51CC               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13781   003A9C  6FD2               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13782   003A9E  C2CD  F2D3         	movff	??_consumer2QProcessMessage+1,consumer2QProcessMessage@enn+1
 13783                           
 13784                           ;../event_consumerDualActionQueue.c: 157:     switch (m->opc) {
 13785   003AA2  D010               	goto	l23176
 13786   003AA4                     l449:
 13787                           
 13788                           ; BSR set to: 2
 13789                           ;../event_consumerDualActionQueue.c: 164:             enn = 0;
 13790                           
 13791                           ; BSR set to: 2
 13792   003AA4  0E00               	movlw	0
 13793   003AA6  6FD3               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13794   003AA8  0E00               	movlw	0
 13795   003AAA  6FD2               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13796   003AAC                     l454:
 13797                           
 13798                           ; BSR set to: 2
 13799                           ;../event_consumerDualActionQueue.c: 173:             end = 20;
 13800   003AAC  0E14               	movlw	20
 13801   003AAE  6FCF               	movwf	consumer2QProcessMessage@end& (0+255),b
 13802                           
 13803                           ;../event_consumerDualActionQueue.c: 174:             change = 1;
 13804   003AB0  0E01               	movlw	1
 13805   003AB2  6FD0               	movwf	consumer2QProcessMessage@change& (0+255),b
 13806                           
 13807                           ;../event_consumerDualActionQueue.c: 175:             break;
 13808   003AB4  D048               	goto	l23178
 13809   003AB6                     l458:
 13810                           
 13811                           ; BSR set to: 2
 13812                           ;../event_consumerDualActionQueue.c: 182:             enn = 0;
 13813                           
 13814                           ; BSR set to: 2
 13815   003AB6  0E00               	movlw	0
 13816   003AB8  6FD3               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13817   003ABA  0E00               	movlw	0
 13818   003ABC  6FD2               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13819   003ABE                     l463:
 13820                           
 13821                           ; BSR set to: 2
 13822                           ;../event_consumerDualActionQueue.c: 191:             end = 1 -1;
 13823   003ABE  0E00               	movlw	0
 13824   003AC0  6FCF               	movwf	consumer2QProcessMessage@end& (0+255),b
 13825                           
 13826                           ; BSR set to: 2
 13827                           ;../event_consumerDualActionQueue.c: 193:             break;
 13828   003AC2  D041               	goto	l23178
 13829   003AC4                     l23176:
 13830                           
 13831                           ; BSR set to: 2
 13832   003AC4  0101               	movlb	1	; () banked
 13833   003AC6  EE20 F001          	lfsr	2,1
 13834   003ACA  51FC               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13835   003ACC  26D9               	addwf	fsr2l,f,c
 13836   003ACE  51FD               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13837   003AD0  22DA               	addwfc	fsr2h,f,c
 13838   003AD2  50DF               	movf	indf2,w,c
 13839   003AD4  0102               	movlb	2	; () banked
 13840   003AD6  6FCC               	movwf	??_consumer2QProcessMessage& (0+255),b
 13841   003AD8  6BCD               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13842                           
 13843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13844                           ; Switch size 1, requested type "simple"
 13845                           ; Number of cases is 1, Range of values is 0 to 0
 13846                           ; switch strategies available:
 13847                           ; Name         Instructions Cycles
 13848                           ; simple_byte            4     3 (average)
 13849                           ;	Chosen strategy is simple_byte
 13850   003ADA  51CD               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13851   003ADC  0A00               	xorlw	0	; case 0
 13852   003ADE  A4D8               	btfss	status,2,c
 13853   003AE0  D7C6               	goto	u24790
 13854                           
 13855                           ; BSR set to: 2
 13856                           ; Switch size 1, requested type "simple"
 13857                           ; Number of cases is 16, Range of values is 144 to 249
 13858                           ; switch strategies available:
 13859                           ; Name         Instructions Cycles
 13860                           ; simple_byte           49    25 (average)
 13861                           ;	Chosen strategy is simple_byte
 13862   003AE2  51CC               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13863   003AE4  0A90               	xorlw	144	; case 144
 13864   003AE6  B4D8               	btfsc	status,2,c
 13865   003AE8  D7E1               	goto	l454
 13866   003AEA  0A01               	xorlw	1	; case 145
 13867   003AEC  B4D8               	btfsc	status,2,c
 13868   003AEE  D7E7               	goto	l463
 13869   003AF0  0A09               	xorlw	9	; case 152
 13870   003AF2  B4D8               	btfsc	status,2,c
 13871   003AF4  D7D7               	goto	l449
 13872   003AF6  0A01               	xorlw	1	; case 153
 13873   003AF8  B4D8               	btfsc	status,2,c
 13874   003AFA  D7DD               	goto	l458
 13875   003AFC  0A29               	xorlw	41	; case 176
 13876   003AFE  B4D8               	btfsc	status,2,c
 13877   003B00  D7D5               	goto	l454
 13878   003B02  0A01               	xorlw	1	; case 177
 13879   003B04  B4D8               	btfsc	status,2,c
 13880   003B06  D7DB               	goto	l463
 13881   003B08  0A09               	xorlw	9	; case 184
 13882   003B0A  B4D8               	btfsc	status,2,c
 13883   003B0C  D7CB               	goto	l449
 13884   003B0E  0A01               	xorlw	1	; case 185
 13885   003B10  B4D8               	btfsc	status,2,c
 13886   003B12  D7D1               	goto	l458
 13887   003B14  0A69               	xorlw	105	; case 208
 13888   003B16  B4D8               	btfsc	status,2,c
 13889   003B18  D7C9               	goto	l454
 13890   003B1A  0A01               	xorlw	1	; case 209
 13891   003B1C  B4D8               	btfsc	status,2,c
 13892   003B1E  D7CF               	goto	l463
 13893   003B20  0A09               	xorlw	9	; case 216
 13894   003B22  B4D8               	btfsc	status,2,c
 13895   003B24  D7BF               	goto	l449
 13896   003B26  0A01               	xorlw	1	; case 217
 13897   003B28  B4D8               	btfsc	status,2,c
 13898   003B2A  D7C5               	goto	l458
 13899   003B2C  0A29               	xorlw	41	; case 240
 13900   003B2E  B4D8               	btfsc	status,2,c
 13901   003B30  D7BD               	goto	l454
 13902   003B32  0A01               	xorlw	1	; case 241
 13903   003B34  B4D8               	btfsc	status,2,c
 13904   003B36  D7C3               	goto	l463
 13905   003B38  0A09               	xorlw	9	; case 248
 13906   003B3A  B4D8               	btfsc	status,2,c
 13907   003B3C  D7B3               	goto	l449
 13908   003B3E  0A01               	xorlw	1	; case 249
 13909   003B40  B4D8               	btfsc	status,2,c
 13910   003B42  D7B9               	goto	l458
 13911   003B44  D794               	goto	u24790
 13912   003B46                     l23178:
 13913                           
 13914                           ; BSR set to: 2
 13915                           ;../event_consumerDualActionQueue.c: 199:     tableIndex = findEvent(enn, ((uint16_t)m->
      +                          bytes[2])*256+m->bytes[3]);
 13916   003B46  C2D2  F1BD         	movff	consumer2QProcessMessage@enn,findEvent@nodeNumber
 13917   003B4A  C2D3  F1BE         	movff	consumer2QProcessMessage@enn+1,findEvent@nodeNumber+1
 13918   003B4E  0101               	movlb	1	; () banked
 13919   003B50  EE20 F005          	lfsr	2,5
 13920   003B54  51FC               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13921   003B56  26D9               	addwf	fsr2l,f,c
 13922   003B58  51FD               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13923   003B5A  22DA               	addwfc	fsr2h,f,c
 13924   003B5C  50DF               	movf	indf2,w,c
 13925   003B5E  0102               	movlb	2	; () banked
 13926   003B60  6FCC               	movwf	??_consumer2QProcessMessage& (0+255),b
 13927   003B62  0101               	movlb	1	; () banked
 13928   003B64  EE20 F004          	lfsr	2,4
 13929   003B68  51FC               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13930   003B6A  26D9               	addwf	fsr2l,f,c
 13931   003B6C  51FD               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13932   003B6E  22DA               	addwfc	fsr2h,f,c
 13933   003B70  50DF               	movf	indf2,w,c
 13934   003B72  0102               	movlb	2	; () banked
 13935   003B74  6FCD               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13936   003B76  51CC               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13937   003B78  0101               	movlb	1	; () banked
 13938   003B7A  6FBF               	movwf	findEvent@eventNumber& (0+255),b
 13939   003B7C  C2CD  F1C0         	movff	??_consumer2QProcessMessage+1,findEvent@eventNumber+1
 13940   003B80  EC00  F053         	call	_findEvent	;wreg free
 13941   003B84  0102               	movlb	2	; () banked
 13942   003B86  6FD4               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13943                           
 13944                           ; BSR set to: 2
 13945                           ;../event_consumerDualActionQueue.c: 200:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13946   003B88  29D4               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13947   003B8A  B4D8               	btfsc	status,2,c
 13948   003B8C  D770               	goto	u24790
 13949                           
 13950                           ; BSR set to: 2
 13951   003B8E  51D4               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13952   003B90  EC35  F042         	call	_getEVs
 13953                           
 13954                           ;../event_consumerDualActionQueue.c: 208:     opc=m->opc;
 13955   003B94  0101               	movlb	1	; () banked
 13956   003B96  EE20 F001          	lfsr	2,1
 13957   003B9A  51FC               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13958   003B9C  26D9               	addwf	fsr2l,f,c
 13959   003B9E  51FD               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13960   003BA0  22DA               	addwfc	fsr2h,f,c
 13961   003BA2  50DF               	movf	indf2,w,c
 13962   003BA4  0102               	movlb	2	; () banked
 13963   003BA6  6FD1               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13964                           
 13965                           ; BSR set to: 2
 13966                           ;../event_consumerDualActionQueue.c: 210:     if ( ! (opc&0b00000001)) {
 13967   003BA8  B1D1               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13968   003BAA  D07F               	goto	l466
 13969                           
 13970                           ; BSR set to: 2
 13971                           ;../event_consumerDualActionQueue.c: 214:         for (e=1; e<20 ;e++) {
 13972   003BAC  0E01               	movlw	1
 13973   003BAE  6FDB               	movwf	consumer2QProcessMessage@e& (0+255),b
 13974   003BB0                     l23198:
 13975                           
 13976                           ; BSR set to: 2
 13977                           ;../event_consumerDualActionQueue.c: 215:             action = evs[e];
 13978   003BB0  0E20               	movlw	low _evs
 13979   003BB2  25DB               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13980   003BB4  6ED9               	movwf	fsr2l,c
 13981   003BB6  6ADA               	clrf	fsr2h,c
 13982   003BB8  0E02               	movlw	high _evs
 13983   003BBA  22DA               	addwfc	fsr2h,f,c
 13984   003BBC  50DF               	movf	indf2,w,c
 13985   003BBE  6FDC               	movwf	consumer2QProcessMessage@action& (0+255),b
 13986                           
 13987                           ; BSR set to: 2
 13988                           ;../event_consumerDualActionQueue.c: 216:             if (action != 0) {
 13989   003BC0  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13990   003BC2  B4D8               	btfsc	status,2,c
 13991   003BC4  D06C               	goto	l470
 13992                           
 13993                           ; BSR set to: 2
 13994                           ;../event_consumerDualActionQueue.c: 218:                 masked_action = action&0x7F;
 13995   003BC6  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13996   003BC8  0B7F               	andlw	127
 13997   003BCA  6FD9               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13998                           
 13999                           ;../event_consumerDualActionQueue.c: 219:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 14000   003BCC  0E59               	movlw	89
 14001   003BCE  61D9               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 14002   003BD0  D066               	goto	l470
 14003                           
 14004                           ; BSR set to: 2
 14005                           ;../event_consumerDualActionQueue.c: 221:                     if ((masked_action) == 7) 
      +                          {
 14006   003BD2  0E07               	movlw	7
 14007   003BD4  19D9               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14008   003BD6  B4D8               	btfsc	status,2,c
 14009   003BD8  D106               	goto	u25010
 14010                           
 14011                           ; BSR set to: 2
 14012                           ;../event_consumerDualActionQueue.c: 224:                     if ((masked_action) < 8) {
 14013   003BDA  0E08               	movlw	8
 14014   003BDC  61D9               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 14015   003BDE  D004               	goto	l23212
 14016                           
 14017                           ; BSR set to: 2
 14018                           ;../event_consumerDualActionQueue.c: 225:                         pushTwoAction(action);
 14019   003BE0  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14020   003BE2  EC01  F05B         	call	_pushTwoAction
 14021                           
 14022                           ;../event_consumerDualActionQueue.c: 226:                     } else {
 14023   003BE6  D05B               	goto	l470
 14024   003BE8                     l23212:
 14025                           
 14026                           ; BSR set to: 2
 14027                           ;../event_consumerDualActionQueue.c: 227:                         io = (((masked_action)
      +                          -8)/5);
 14028   003BE8  0EF8               	movlw	248
 14029   003BEA  25D9               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14030   003BEC  0100               	movlb	0	; () banked
 14031   003BEE  6F97               	movwf	___awdiv@dividend& (0+255),b
 14032   003BF0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 14033   003BF2  0EFF               	movlw	255
 14034   003BF4  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 14035   003BF6  0E00               	movlw	0
 14036   003BF8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 14037   003BFA  0E05               	movlw	5
 14038   003BFC  6F99               	movwf	___awdiv@divisor& (0+255),b
 14039   003BFE  EC1B  F054         	call	___awdiv	;wreg free
 14040   003C02  0100               	movlb	0	; () banked
 14041   003C04  5197               	movf	?___awdiv& (0+255),w,b
 14042   003C06  0102               	movlb	2	; () banked
 14043   003C08  6FD8               	movwf	consumer2QProcessMessage@io& (0+255),b
 14044                           
 14045                           ;../event_consumerDualActionQueue.c: 228:                         ca = (((masked_action)
      +                          -8)%5);
 14046   003C0A  0EF8               	movlw	248
 14047   003C0C  25D9               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14048   003C0E  0100               	movlb	0	; () banked
 14049   003C10  6F8D               	movwf	___awmod@dividend& (0+255),b
 14050   003C12  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14051   003C14  0EFF               	movlw	255
 14052   003C16  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14053   003C18  0E00               	movlw	0
 14054   003C1A  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14055   003C1C  0E05               	movlw	5
 14056   003C1E  6F8F               	movwf	___awmod@divisor& (0+255),b
 14057   003C20  EC30  F058         	call	___awmod	;wreg free
 14058   003C24  0100               	movlb	0	; () banked
 14059   003C26  518D               	movf	?___awmod& (0+255),w,b
 14060   003C28  0102               	movlb	2	; () banked
 14061   003C2A  6FDA               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14062                           
 14063                           ;../event_consumerDualActionQueue.c: 229:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14064   003C2C  D020               	goto	l23234
 14065   003C2E                     l23214:
 14066                           
 14067                           ; BSR set to: 0
 14068                           ;../event_consumerDualActionQueue.c: 234:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14069   003C2E  0102               	movlb	2	; () banked
 14070   003C30  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14071   003C32  0D07               	mullw	7
 14072   003C34  50F3               	movf	243,w,c
 14073   003C36  0F11               	addlw	17
 14074   003C38  EC53  F05F         	call	_getNV
 14075   003C3C  0100               	movlb	0	; () banked
 14076   003C3E  BF8D               	btfsc	?_getNV& (0+255),7,b
 14077                           
 14078                           ; BSR set to: 0
 14079                           ;../event_consumerDualActionQueue.c: 235:                                     setExpedit
      +                          edActions();
 14080   003C40  EC1E  F064         	call	_setExpeditedActions	;wreg free
 14081   003C44                     l23218:
 14082                           
 14083                           ;../event_consumerDualActionQueue.c: 240:                                 if (ca == 0) {
 14084   003C44  0102               	movlb	2	; () banked
 14085   003C46  51DA               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14086   003C48  B4D8               	btfsc	status,2,c
 14087                           
 14088                           ; BSR set to: 2
 14089                           ;../event_consumerDualActionQueue.c: 242:                                     action++;
 14090   003C4A  2BDC               	incf	consumer2QProcessMessage@action& (0+255),f,b
 14091                           
 14092                           ; BSR set to: 2
 14093                           ;../event_consumerDualActionQueue.c: 244:                                 if (ca == 4) {
 14094   003C4C  0E04               	movlw	4
 14095   003C4E  19DA               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14096   003C50  A4D8               	btfss	status,2,c
 14097   003C52  D002               	goto	l23226
 14098                           
 14099                           ; BSR set to: 2
 14100                           ;../event_consumerDualActionQueue.c: 246:                                     action-=2;
 14101   003C54  0E02               	movlw	2
 14102   003C56  5FDC               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14103   003C58                     l23226:
 14104                           
 14105                           ; BSR set to: 2
 14106                           ;../event_consumerDualActionQueue.c: 248:                                 pushTwoAction(
      +                          action);
 14107   003C58  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14108   003C5A  EC01  F05B         	call	_pushTwoAction
 14109                           
 14110                           ;../event_consumerDualActionQueue.c: 249:                                 setNormalActio
      +                          ns();
 14111   003C5E  EC1B  F064         	call	_setNormalActions	;wreg free
 14112                           
 14113                           ;../event_consumerDualActionQueue.c: 250:                                 break;
 14114   003C62  D01D               	goto	l470
 14115   003C64                     l23230:
 14116                           
 14117                           ; BSR set to: 0
 14118                           ;../event_consumerDualActionQueue.c: 252:                                 pushTwoAction(
      +                          action);
 14119   003C64  0102               	movlb	2	; () banked
 14120   003C66  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14121   003C68  EC01  F05B         	call	_pushTwoAction
 14122                           
 14123                           ;../event_consumerDualActionQueue.c: 253:                                 break;
 14124   003C6C  D018               	goto	l470
 14125   003C6E                     l23234:
 14126                           
 14127                           ; BSR set to: 2
 14128   003C6E  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14129   003C70  0D07               	mullw	7
 14130   003C72  50F3               	movf	243,w,c
 14131   003C74  0F10               	addlw	16
 14132   003C76  EC53  F05F         	call	_getNV
 14133                           
 14134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14135                           ; Switch size 1, requested type "simple"
 14136                           ; Number of cases is 1, Range of values is 0 to 0
 14137                           ; switch strategies available:
 14138                           ; Name         Instructions Cycles
 14139                           ; simple_byte            4     3 (average)
 14140                           ;	Chosen strategy is simple_byte
 14141   003C7A  0100               	movlb	0	; () banked
 14142   003C7C  518E               	movf	(?_getNV+1)& (0+255),w,b
 14143   003C7E  0A00               	xorlw	0	; case 0
 14144   003C80  A4D8               	btfss	status,2,c
 14145   003C82  D00D               	goto	l470
 14146                           
 14147                           ; BSR set to: 0
 14148                           ; Switch size 1, requested type "simple"
 14149                           ; Number of cases is 4, Range of values is 1 to 4
 14150                           ; switch strategies available:
 14151                           ; Name         Instructions Cycles
 14152                           ; simple_byte           13     7 (average)
 14153                           ;	Chosen strategy is simple_byte
 14154   003C84  518D               	movf	?_getNV& (0+255),w,b
 14155   003C86  0A01               	xorlw	1	; case 1
 14156   003C88  B4D8               	btfsc	status,2,c
 14157   003C8A  D7D1               	goto	l23214
 14158   003C8C  0A03               	xorlw	3	; case 2
 14159   003C8E  B4D8               	btfsc	status,2,c
 14160   003C90  D7D9               	goto	l23218
 14161   003C92  0A01               	xorlw	1	; case 3
 14162   003C94  B4D8               	btfsc	status,2,c
 14163   003C96  D7D6               	goto	l23218
 14164   003C98  0A07               	xorlw	7	; case 4
 14165   003C9A  B4D8               	btfsc	status,2,c
 14166   003C9C  D7E3               	goto	l23230
 14167   003C9E                     l470:
 14168                           
 14169                           ;../event_consumerDualActionQueue.c: 261:         }
 14170                           
 14171                           ; BSR set to: 0
 14172   003C9E  0102               	movlb	2	; () banked
 14173   003CA0  2BDB               	incf	consumer2QProcessMessage@e& (0+255),f,b
 14174                           
 14175                           ; BSR set to: 2
 14176   003CA2  0E13               	movlw	19
 14177   003CA4  65DB               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14178   003CA6  D784               	goto	l23198
 14179   003CA8  D09E               	goto	u25010
 14180   003CAA                     l466:
 14181                           
 14182                           ; BSR set to: 2
 14183                           ;../event_consumerDualActionQueue.c: 265:         uint8_t nextAction = evs[20 -1];
 14184   003CAA  C233  F2D5         	movff	_evs+19,consumer2QProcessMessage@nextAction
 14185                           
 14186                           ; BSR set to: 2
 14187                           ;../event_consumerDualActionQueue.c: 267:         for (e=20 -1; e>=1 ;e--) {
 14188   003CAE  0E13               	movlw	19
 14189   003CB0  6FDB               	movwf	consumer2QProcessMessage@e& (0+255),b
 14190   003CB2                     l23244:
 14191                           
 14192                           ; BSR set to: 2
 14193                           ;../event_consumerDualActionQueue.c: 268:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 269:             uint8_t firstAction = 0;
 14194   003CB2  0E00               	movlw	0
 14195   003CB4  6FD6               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 14196                           
 14197                           ; BSR set to: 2
 14198                           ;../event_consumerDualActionQueue.c: 270:             action = nextAction;
 14199   003CB6  C2D5  F2DC         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 14200                           
 14201                           ; BSR set to: 2
 14202                           ;../event_consumerDualActionQueue.c: 274:             if (e > 1) {
 14203   003CBA  0E01               	movlw	1
 14204   003CBC  65DB               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14205   003CBE  D00A               	goto	l23254
 14206                           
 14207                           ; BSR set to: 2
 14208                           ;../event_consumerDualActionQueue.c: 275:                 nextAction = evs[e-1];
 14209   003CC0  0E1F               	movlw	low (_evs+65535)
 14210   003CC2  25DB               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 14211   003CC4  6ED9               	movwf	fsr2l,c
 14212   003CC6  6ADA               	clrf	fsr2h,c
 14213   003CC8  0E02               	movlw	high (_evs+65535)
 14214   003CCA  22DA               	addwfc	fsr2h,f,c
 14215   003CCC  50DF               	movf	indf2,w,c
 14216   003CCE  6FD5               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 14217                           
 14218                           ; BSR set to: 2
 14219                           ;../event_consumerDualActionQueue.c: 276:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 14220   003CD0  51D5               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 14221   003CD2  D001               	goto	L4
 14222   003CD4                     l23254:
 14223                           
 14224                           ; BSR set to: 2
 14225                           ;../event_consumerDualActionQueue.c: 278:                 nextSimultaneous = firstAction
      +                           & 0x80;
 14226   003CD4  51D6               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14227   003CD6                     L4:
 14228   003CD6  0B80               	andlw	128
 14229   003CD8  6FD7               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 14230                           
 14231                           ; BSR set to: 2
 14232                           ;../event_consumerDualActionQueue.c: 280:             if (action != 0) {
 14233   003CDA  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14234   003CDC  B4D8               	btfsc	status,2,c
 14235   003CDE  D07E               	goto	l491
 14236                           
 14237                           ; BSR set to: 2
 14238                           ;../event_consumerDualActionQueue.c: 282:                 if (firstAction == 0) {
 14239   003CE0  51D6               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14240   003CE2  B4D8               	btfsc	status,2,c
 14241                           
 14242                           ; BSR set to: 2
 14243                           ;../event_consumerDualActionQueue.c: 283:                     firstAction = action;
 14244   003CE4  C2DC  F2D6         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 14245                           
 14246                           ; BSR set to: 2
 14247                           ;../event_consumerDualActionQueue.c: 285:                 action &= 0x7F;
 14248   003CE8  9FDC               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 14249                           
 14250                           ; BSR set to: 2
 14251                           ;../event_consumerDualActionQueue.c: 286:                 if (action <= (8 + 5 * 16)) {
 14252   003CEA  0E59               	movlw	89
 14253   003CEC  61DC               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14254   003CEE  D076               	goto	l491
 14255                           
 14256                           ; BSR set to: 2
 14257                           ;../event_consumerDualActionQueue.c: 288:                     if ((action) == 7) {
 14258   003CF0  0E07               	movlw	7
 14259   003CF2  19DC               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 14260   003CF4  B4D8               	btfsc	status,2,c
 14261   003CF6  D077               	goto	u25010
 14262                           
 14263                           ; BSR set to: 2
 14264                           ;../event_consumerDualActionQueue.c: 291:                     if ((action < 8) && (actio
      +                          n != 1)) {
 14265   003CF8  0E08               	movlw	8
 14266   003CFA  61DC               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14267   003CFC  D009               	goto	l23278
 14268                           
 14269                           ; BSR set to: 2
 14270   003CFE  05DC               	decf	consumer2QProcessMessage@action& (0+255),w,b
 14271   003D00  B4D8               	btfsc	status,2,c
 14272   003D02  D006               	goto	l23278
 14273                           
 14274                           ; BSR set to: 2
 14275                           ;../event_consumerDualActionQueue.c: 292:                         action |= nextSimultan
      +                          eous;
 14276   003D04  51D7               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14277   003D06  13DC               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14278                           
 14279                           ; BSR set to: 2
 14280                           ;../event_consumerDualActionQueue.c: 293:                         pushTwoAction(action);
 14281   003D08  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14282   003D0A  EC01  F05B         	call	_pushTwoAction
 14283                           
 14284                           ;../event_consumerDualActionQueue.c: 294:                     } else {
 14285   003D0E  D066               	goto	l491
 14286   003D10                     l23278:
 14287                           
 14288                           ; BSR set to: 2
 14289                           ;../event_consumerDualActionQueue.c: 295:                         io = (((action)-8)/5);
 14290   003D10  0EF8               	movlw	248
 14291   003D12  25DC               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14292   003D14  0100               	movlb	0	; () banked
 14293   003D16  6F97               	movwf	___awdiv@dividend& (0+255),b
 14294   003D18  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 14295   003D1A  0EFF               	movlw	255
 14296   003D1C  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 14297   003D1E  0E00               	movlw	0
 14298   003D20  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 14299   003D22  0E05               	movlw	5
 14300   003D24  6F99               	movwf	___awdiv@divisor& (0+255),b
 14301   003D26  EC1B  F054         	call	___awdiv	;wreg free
 14302   003D2A  0100               	movlb	0	; () banked
 14303   003D2C  5197               	movf	?___awdiv& (0+255),w,b
 14304   003D2E  0102               	movlb	2	; () banked
 14305   003D30  6FD8               	movwf	consumer2QProcessMessage@io& (0+255),b
 14306                           
 14307                           ;../event_consumerDualActionQueue.c: 296:                         ca = (((action)-8)%5);
 14308   003D32  0EF8               	movlw	248
 14309   003D34  25DC               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14310   003D36  0100               	movlb	0	; () banked
 14311   003D38  6F8D               	movwf	___awmod@dividend& (0+255),b
 14312   003D3A  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14313   003D3C  0EFF               	movlw	255
 14314   003D3E  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14315   003D40  0E00               	movlw	0
 14316   003D42  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14317   003D44  0E05               	movlw	5
 14318   003D46  6F8F               	movwf	___awmod@divisor& (0+255),b
 14319   003D48  EC30  F058         	call	___awmod	;wreg free
 14320   003D4C  0100               	movlb	0	; () banked
 14321   003D4E  518D               	movf	?___awmod& (0+255),w,b
 14322   003D50  0102               	movlb	2	; () banked
 14323   003D52  6FDA               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14324                           
 14325                           ;../event_consumerDualActionQueue.c: 297:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14326   003D54  D02B               	goto	l23306
 14327   003D56                     l23280:
 14328                           
 14329                           ; BSR set to: 0
 14330                           ;../event_consumerDualActionQueue.c: 302:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14331   003D56  0102               	movlb	2	; () banked
 14332   003D58  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14333   003D5A  0D07               	mullw	7
 14334   003D5C  50F3               	movf	243,w,c
 14335   003D5E  0F11               	addlw	17
 14336   003D60  EC53  F05F         	call	_getNV
 14337   003D64  0100               	movlb	0	; () banked
 14338   003D66  BF8D               	btfsc	?_getNV& (0+255),7,b
 14339                           
 14340                           ; BSR set to: 0
 14341                           ;../event_consumerDualActionQueue.c: 303:                                     setExpedit
      +                          edActions();
 14342   003D68  EC1E  F064         	call	_setExpeditedActions	;wreg free
 14343                           
 14344                           ;../event_consumerDualActionQueue.c: 305:                                 if (ca == 3) {
 14345   003D6C  0E03               	movlw	3
 14346   003D6E  0102               	movlb	2	; () banked
 14347   003D70  19DA               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14348   003D72  B4D8               	btfsc	status,2,c
 14349                           
 14350                           ; BSR set to: 2
 14351                           ;../event_consumerDualActionQueue.c: 307:                                     action--;
 14352   003D74  07DC               	decf	consumer2QProcessMessage@action& (0+255),f,b
 14353   003D76                     l23288:
 14354                           
 14355                           ;../event_consumerDualActionQueue.c: 312:                                 if (ca == 0) {
 14356   003D76  0102               	movlb	2	; () banked
 14357   003D78  51DA               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14358   003D7A  A4D8               	btfss	status,2,c
 14359   003D7C  D002               	goto	l501
 14360                           
 14361                           ; BSR set to: 2
 14362                           ;../event_consumerDualActionQueue.c: 314:                                     action += 
      +                          2;
 14363   003D7E  0E02               	movlw	2
 14364   003D80  27DC               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 14365   003D82                     l501:
 14366                           
 14367                           ; BSR set to: 2
 14368                           ;../event_consumerDualActionQueue.c: 316:                                 if (ca == 4) {
 14369   003D82  0E04               	movlw	4
 14370   003D84  19DA               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14371   003D86  A4D8               	btfss	status,2,c
 14372   003D88  D002               	goto	l502
 14373                           
 14374                           ; BSR set to: 2
 14375                           ;../event_consumerDualActionQueue.c: 318:                                     action -= 
      +                          3;
 14376   003D8A  0E03               	movlw	3
 14377   003D8C  5FDC               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14378   003D8E                     l502:
 14379                           
 14380                           ; BSR set to: 2
 14381                           ;../event_consumerDualActionQueue.c: 320:                                 action |= next
      +                          Simultaneous;
 14382   003D8E  51D7               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14383   003D90  13DC               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14384                           
 14385                           ; BSR set to: 2
 14386                           ;../event_consumerDualActionQueue.c: 321:                                 pushTwoAction(
      +                          action);
 14387   003D92  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14388   003D94  EC01  F05B         	call	_pushTwoAction
 14389   003D98                     l23296:
 14390                           
 14391                           ;../event_consumerDualActionQueue.c: 322:                                 setNormalActio
      +                          ns();
 14392   003D98  EC1B  F064         	call	_setNormalActions	;wreg free
 14393                           
 14394                           ;../event_consumerDualActionQueue.c: 323:                                 break;
 14395   003D9C  D01F               	goto	l491
 14396   003D9E                     l23298:
 14397                           
 14398                           ; BSR set to: 0
 14399                           ;../event_consumerDualActionQueue.c: 325:                                 action |= next
      +                          Simultaneous;
 14400   003D9E  0102               	movlb	2	; () banked
 14401   003DA0  51D7               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14402   003DA2  13DC               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14403                           
 14404                           ; BSR set to: 2
 14405                           ;../event_consumerDualActionQueue.c: 326:                                 pushTwoAction(
      +                          action);
 14406   003DA4  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14407   003DA6  EC01  F05B         	call	_pushTwoAction
 14408   003DAA  D7F6               	goto	l23296
 14409   003DAC                     l23306:
 14410                           
 14411                           ; BSR set to: 2
 14412   003DAC  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14413   003DAE  0D07               	mullw	7
 14414   003DB0  50F3               	movf	243,w,c
 14415   003DB2  0F10               	addlw	16
 14416   003DB4  EC53  F05F         	call	_getNV
 14417                           
 14418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14419                           ; Switch size 1, requested type "simple"
 14420                           ; Number of cases is 1, Range of values is 0 to 0
 14421                           ; switch strategies available:
 14422                           ; Name         Instructions Cycles
 14423                           ; simple_byte            4     3 (average)
 14424                           ;	Chosen strategy is simple_byte
 14425   003DB8  0100               	movlb	0	; () banked
 14426   003DBA  518E               	movf	(?_getNV+1)& (0+255),w,b
 14427   003DBC  0A00               	xorlw	0	; case 0
 14428   003DBE  A4D8               	btfss	status,2,c
 14429   003DC0  D00D               	goto	l491
 14430                           
 14431                           ; BSR set to: 0
 14432                           ; Switch size 1, requested type "simple"
 14433                           ; Number of cases is 4, Range of values is 1 to 4
 14434                           ; switch strategies available:
 14435                           ; Name         Instructions Cycles
 14436                           ; simple_byte           13     7 (average)
 14437                           ;	Chosen strategy is simple_byte
 14438   003DC2  518D               	movf	?_getNV& (0+255),w,b
 14439   003DC4  0A01               	xorlw	1	; case 1
 14440   003DC6  B4D8               	btfsc	status,2,c
 14441   003DC8  D7C6               	goto	l23280
 14442   003DCA  0A03               	xorlw	3	; case 2
 14443   003DCC  B4D8               	btfsc	status,2,c
 14444   003DCE  D7D3               	goto	l23288
 14445   003DD0  0A01               	xorlw	1	; case 3
 14446   003DD2  B4D8               	btfsc	status,2,c
 14447   003DD4  D7D0               	goto	l23288
 14448   003DD6  0A07               	xorlw	7	; case 4
 14449   003DD8  B4D8               	btfsc	status,2,c
 14450   003DDA  D7E1               	goto	l23298
 14451   003DDC                     l491:
 14452                           
 14453                           ;../event_consumerDualActionQueue.c: 336:         }
 14454                           
 14455                           ; BSR set to: 0
 14456   003DDC  0102               	movlb	2	; () banked
 14457   003DDE  07DB               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14458                           
 14459                           ; BSR set to: 2
 14460   003DE0  51DB               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14461   003DE2  A4D8               	btfss	status,2,c
 14462   003DE4  D766               	goto	l23244
 14463   003DE6                     u25010:
 14464                           
 14465                           ; BSR set to: 2
 14466                           ;../event_consumerDualActionQueue.c: 339:     consumer2QDiagnostics[1].asUint++;
 14467   003DE6  0101               	movlb	1	; () banked
 14468   003DE8  4BBB               	infsnz	(_consumer2QDiagnostics+2)& (0+255),f,b
 14469   003DEA  2BBC               	incf	(_consumer2QDiagnostics+3)& (0+255),f,b
 14470                           
 14471                           ; BSR set to: 1
 14472                           ;../event_consumerDualActionQueue.c: 341:     return PROCESSED;
 14473   003DEC  0E01               	movlw	1
 14474   003DEE  0012               	return		;funcret
 14475   003DF0                     __end_of_consumer2QProcessMessage:
 14476                           	callstack 0
 14477                           
 14478 ;; *************** function _teachProcessMessage *****************
 14479 ;; Defined at:
 14480 ;;		line 381 in file "../../VLCBlib_PIC/event_teach_large.c"
 14481 ;; Parameters:    Size  Location     Type
 14482 ;;  m               2   63[BANK1 ] PTR struct Message
 14483 ;;		 -> poll@m(9), 
 14484 ;; Auto vars:     Size  Location     Type
 14485 ;;		None
 14486 ;; Return value:  Size  Location     Type
 14487 ;;                  1    wreg      enum E12799
 14488 ;; Registers used:
 14489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14490 ;; Tracked objects:
 14491 ;;		On entry : 0/0
 14492 ;;		On exit  : 0/0
 14493 ;;		Unchanged: 0/0
 14494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14495 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14497 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14498 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14499 ;;Total ram usage:        8 bytes
 14500 ;; Hardware stack levels used: 1
 14501 ;; Hardware stack levels required when called: 24
 14502 ;; This function calls:
 14503 ;;		_doEvlrn
 14504 ;;		_doEvuln
 14505 ;;		_doNenrd
 14506 ;;		_doNerd
 14507 ;;		_doNnclr
 14508 ;;		_doNnevn
 14509 ;;		_doReqev
 14510 ;;		_doReval
 14511 ;;		_doRqevn
 14512 ;;		_sendMessage3
 14513 ;;		_sendMessage5
 14514 ;;		_teachCheckLen
 14515 ;; This function is called by:
 14516 ;;		_poll
 14517 ;; This function uses a non-reentrant model
 14518 ;;
 14519                           
 14520                           	psect	text27
 14521   00228E                     __ptext27:
 14522                           	callstack 0
 14523   00228E                     _teachProcessMessage:
 14524                           	callstack 5
 14525                           
 14526                           ;../../VLCBlib_PIC/event_teach_large.c: 382:     switch(m->opc) {
 14527                           
 14528                           ;incstack = 0
 14529   00228E  D318               	goto	l24758
 14530   002290                     l24492:
 14531                           
 14532                           ; BSR set to: 2
 14533                           ;../../VLCBlib_PIC/event_teach_large.c: 385:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14534   002290  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 14535   002294  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14536   002298  0E03               	movlw	3
 14537   00229A  0101               	movlb	1	; () banked
 14538   00229C  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 14539   00229E  0E00               	movlw	0
 14540   0022A0  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 14541   0022A2  ECA1  F05A         	call	_teachCheckLen	;wreg free
 14542   0022A6  06E8               	decf	wreg,f,c
 14543   0022A8  A4D8               	btfss	status,2,c
 14544   0022AA  D002               	goto	l24498
 14545   0022AC                     u26310:
 14546   0022AC  0E01               	movlw	1
 14547   0022AE  0012               	return	
 14548   0022B0                     l24498:
 14549                           
 14550                           ;../../VLCBlib_PIC/event_teach_large.c: 386:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14551   0022B0  0101               	movlb	1	; () banked
 14552   0022B2  EE20 F002          	lfsr	2,2
 14553   0022B6  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14554   0022B8  26D9               	addwf	fsr2l,f,c
 14555   0022BA  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14556   0022BC  22DA               	addwfc	fsr2h,f,c
 14557   0022BE  50DE               	movf	postinc2,w,c
 14558   0022C0  0100               	movlb	0	; () banked
 14559   0022C2  19B6               	xorwf	(_nn+1)& (0+255),w,b
 14560   0022C4  A4D8               	btfss	status,2,c
 14561   0022C6  D00F               	goto	l24504
 14562                           
 14563                           ; BSR set to: 0
 14564   0022C8  0101               	movlb	1	; () banked
 14565   0022CA  EE20 F003          	lfsr	2,3
 14566   0022CE  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14567   0022D0  26D9               	addwf	fsr2l,f,c
 14568   0022D2  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14569   0022D4  22DA               	addwfc	fsr2h,f,c
 14570   0022D6  0100               	movlb	0	; () banked
 14571   0022D8  51B5               	movf	_nn& (0+255),w,b
 14572   0022DA  18DE               	xorwf	postinc2,w,c
 14573   0022DC  A4D8               	btfss	status,2,c
 14574   0022DE  D003               	goto	l24504
 14575   0022E0                     u26330:
 14576                           
 14577                           ;../../VLCBlib_PIC/event_teach_large.c: 387:                 mode_flags |= 1;
 14578   0022E0  0101               	movlb	1	; () banked
 14579   0022E2  8169               	bsf	_mode_flags& (0+255),0,b
 14580                           
 14581                           ;../../VLCBlib_PIC/event_teach_large.c: 388:             } else {
 14582   0022E4  D7E3               	goto	u26310
 14583   0022E6                     l24504:
 14584                           
 14585                           ;../../VLCBlib_PIC/event_teach_large.c: 389:                 mode_flags &= ~1;
 14586   0022E6  0101               	movlb	1	; () banked
 14587   0022E8  9169               	bcf	_mode_flags& (0+255),0,b
 14588   0022EA  D7E0               	goto	u26310
 14589   0022EC                     l24510:
 14590                           
 14591                           ; BSR set to: 2
 14592                           ;../../VLCBlib_PIC/event_teach_large.c: 394:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14593   0022EC  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 14594   0022F0  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14595   0022F4  0E04               	movlw	4
 14596   0022F6  0101               	movlb	1	; () banked
 14597   0022F8  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 14598   0022FA  0E00               	movlw	0
 14599   0022FC  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 14600   0022FE  ECA1  F05A         	call	_teachCheckLen	;wreg free
 14601   002302  06E8               	decf	wreg,f,c
 14602   002304  B4D8               	btfsc	status,2,c
 14603   002306  D7D2               	goto	u26310
 14604                           
 14605                           ;../../VLCBlib_PIC/event_teach_large.c: 395:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14606   002308  0101               	movlb	1	; () banked
 14607   00230A  EE20 F002          	lfsr	2,2
 14608   00230E  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14609   002310  26D9               	addwf	fsr2l,f,c
 14610   002312  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14611   002314  22DA               	addwfc	fsr2h,f,c
 14612   002316  50DE               	movf	postinc2,w,c
 14613   002318  0100               	movlb	0	; () banked
 14614   00231A  19B6               	xorwf	(_nn+1)& (0+255),w,b
 14615   00231C  A4D8               	btfss	status,2,c
 14616   00231E  D022               	goto	l24538
 14617                           
 14618                           ; BSR set to: 0
 14619   002320  0101               	movlb	1	; () banked
 14620   002322  EE20 F003          	lfsr	2,3
 14621   002326  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14622   002328  26D9               	addwf	fsr2l,f,c
 14623   00232A  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14624   00232C  22DA               	addwfc	fsr2h,f,c
 14625   00232E  0100               	movlb	0	; () banked
 14626   002330  51B5               	movf	_nn& (0+255),w,b
 14627   002332  18DE               	xorwf	postinc2,w,c
 14628   002334  A4D8               	btfss	status,2,c
 14629   002336  D016               	goto	l24538
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;../../VLCBlib_PIC/event_teach_large.c: 396:                 if (m->bytes[2] == MODE_LEA
      +                          RN_ON) {
 14633   002338  0101               	movlb	1	; () banked
 14634   00233A  EE20 F004          	lfsr	2,4
 14635   00233E  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14636   002340  26D9               	addwf	fsr2l,f,c
 14637   002342  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14638   002344  22DA               	addwfc	fsr2h,f,c
 14639   002346  0E08               	movlw	8
 14640   002348  18DE               	xorwf	postinc2,w,c
 14641   00234A  B4D8               	btfsc	status,2,c
 14642   00234C  D7C9               	goto	u26330
 14643                           
 14644                           ; BSR set to: 1
 14645   00234E  EE20 F004          	lfsr	2,4
 14646   002352  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14647   002354  26D9               	addwf	fsr2l,f,c
 14648   002356  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14649   002358  22DA               	addwfc	fsr2h,f,c
 14650   00235A  0E09               	movlw	9
 14651   00235C  18DE               	xorwf	postinc2,w,c
 14652   00235E  B4D8               	btfsc	status,2,c
 14653   002360  D7C2               	goto	l24504
 14654   002362  D002               	goto	l24540
 14655   002364                     l24538:
 14656                           
 14657                           ; BSR set to: 0
 14658                           ;../../VLCBlib_PIC/event_teach_large.c: 407:                 mode_flags &= ~1;
 14659   002364  0101               	movlb	1	; () banked
 14660   002366  9169               	bcf	_mode_flags& (0+255),0,b
 14661   002368                     l24540:
 14662                           
 14663                           ;../../VLCBlib_PIC/event_teach_large.c: 409:             return NOT_PROCESSED;
 14664   002368  0E00               	movlw	0
 14665   00236A  0012               	return	
 14666   00236C                     l24544:
 14667                           
 14668                           ; BSR set to: 2
 14669                           ;../../VLCBlib_PIC/event_teach_large.c: 413:             if (teachCheckLen(m, 7, 1) == P
      +                          ROCESSED) {
 14670   00236C  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 14671   002370  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14672   002374  0E07               	movlw	7
 14673   002376  0101               	movlb	1	; () banked
 14674   002378  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 14675   00237A  0E01               	movlw	1
 14676   00237C  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 14677   00237E  ECA1  F05A         	call	_teachCheckLen	;wreg free
 14678   002382  06E8               	decf	wreg,f,c
 14679   002384  A4D8               	btfss	status,2,c
 14680   002386  D00B               	goto	l2753
 14681                           
 14682                           ;../../VLCBlib_PIC/event_teach_large.c: 414:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 14683   002388  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 14684   00238C  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 14685   002390  0E01               	movlw	1
 14686   002392  0100               	movlb	0	; () banked
 14687   002394  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14688   002396  0E6F               	movlw	111
 14689   002398  EC40  F061         	call	_sendMessage3
 14690   00239C  D787               	goto	u26310
 14691   00239E                     l2753:
 14692                           
 14693                           ;../../VLCBlib_PIC/event_teach_large.c: 418:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14694   00239E  0101               	movlb	1	; () banked
 14695   0023A0  A169               	btfss	_mode_flags& (0+255),0,b
 14696   0023A2  D784               	goto	u26310
 14697                           
 14698                           ; BSR set to: 1
 14699                           ;../../VLCBlib_PIC/event_teach_large.c: 420:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5
      +                          ]);
 14700   0023A4  EE20 F003          	lfsr	2,3
 14701   0023A8  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14702   0023AA  26D9               	addwf	fsr2l,f,c
 14703   0023AC  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14704   0023AE  22DA               	addwfc	fsr2h,f,c
 14705   0023B0  50DF               	movf	indf2,w,c
 14706   0023B2  0102               	movlb	2	; () banked
 14707   0023B4  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14708   0023B6  0101               	movlb	1	; () banked
 14709   0023B8  EE20 F002          	lfsr	2,2
 14710   0023BC  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14711   0023BE  26D9               	addwf	fsr2l,f,c
 14712   0023C0  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14713   0023C2  22DA               	addwfc	fsr2h,f,c
 14714   0023C4  50DF               	movf	indf2,w,c
 14715   0023C6  0102               	movlb	2	; () banked
 14716   0023C8  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14717   0023CA  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14718   0023CC  0101               	movlb	1	; () banked
 14719   0023CE  6FF1               	movwf	doEvlrn@nodeNumber& (0+255),b
 14720   0023D0  C2CD  F1F2         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14721   0023D4  EE20 F005          	lfsr	2,5
 14722   0023D8  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14723   0023DA  26D9               	addwf	fsr2l,f,c
 14724   0023DC  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14725   0023DE  22DA               	addwfc	fsr2h,f,c
 14726   0023E0  50DF               	movf	indf2,w,c
 14727   0023E2  0102               	movlb	2	; () banked
 14728   0023E4  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14729   0023E6  0101               	movlb	1	; () banked
 14730   0023E8  EE20 F004          	lfsr	2,4
 14731   0023EC  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14732   0023EE  26D9               	addwf	fsr2l,f,c
 14733   0023F0  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14734   0023F2  22DA               	addwfc	fsr2h,f,c
 14735   0023F4  50DF               	movf	indf2,w,c
 14736   0023F6  0102               	movlb	2	; () banked
 14737   0023F8  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14738   0023FA  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14739   0023FC  0101               	movlb	1	; () banked
 14740   0023FE  6FF3               	movwf	doEvlrn@eventNumber& (0+255),b
 14741   002400  C2D0  F1F4         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14742   002404  EE20 F006          	lfsr	2,6
 14743   002408  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14744   00240A  26D9               	addwf	fsr2l,f,c
 14745   00240C  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14746   00240E  22DA               	addwfc	fsr2h,f,c
 14747   002410  50DF               	movf	indf2,w,c
 14748   002412  6FF5               	movwf	doEvlrn@evNum& (0+255),b
 14749   002414  EE20 F007          	lfsr	2,7
 14750   002418  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14751   00241A  26D9               	addwf	fsr2l,f,c
 14752   00241C  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14753   00241E  22DA               	addwfc	fsr2h,f,c
 14754   002420  50DF               	movf	indf2,w,c
 14755   002422  6FF6               	movwf	doEvlrn@evVal& (0+255),b
 14756   002424  ECEB  F049         	call	_doEvlrn	;wreg free
 14757   002428  D741               	goto	u26310
 14758   00242A                     l24562:
 14759                           
 14760                           ; BSR set to: 2
 14761                           ;../../VLCBlib_PIC/event_teach_large.c: 423:             if (teachCheckLen(m, 5, 1) == P
      +                          ROCESSED) return PROCESSED;
 14762   00242A  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 14763   00242E  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14764   002432  0E05               	movlw	5
 14765   002434  0101               	movlb	1	; () banked
 14766   002436  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 14767   002438  0E01               	movlw	1
 14768   00243A  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 14769   00243C  ECA1  F05A         	call	_teachCheckLen	;wreg free
 14770   002440  06E8               	decf	wreg,f,c
 14771   002442  B4D8               	btfsc	status,2,c
 14772   002444  D733               	goto	u26310
 14773                           
 14774                           ;../../VLCBlib_PIC/event_teach_large.c: 424:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14775   002446  0101               	movlb	1	; () banked
 14776   002448  A169               	btfss	_mode_flags& (0+255),0,b
 14777   00244A  D730               	goto	u26310
 14778                           
 14779                           ; BSR set to: 1
 14780                           ;../../VLCBlib_PIC/event_teach_large.c: 426:             doEvuln((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14781   00244C  EE20 F003          	lfsr	2,3
 14782   002450  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14783   002452  26D9               	addwf	fsr2l,f,c
 14784   002454  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14785   002456  22DA               	addwfc	fsr2h,f,c
 14786   002458  50DF               	movf	indf2,w,c
 14787   00245A  0102               	movlb	2	; () banked
 14788   00245C  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14789   00245E  0101               	movlb	1	; () banked
 14790   002460  EE20 F002          	lfsr	2,2
 14791   002464  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14792   002466  26D9               	addwf	fsr2l,f,c
 14793   002468  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14794   00246A  22DA               	addwfc	fsr2h,f,c
 14795   00246C  50DF               	movf	indf2,w,c
 14796   00246E  0102               	movlb	2	; () banked
 14797   002470  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14798   002472  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14799   002474  0101               	movlb	1	; () banked
 14800   002476  6FD1               	movwf	doEvuln@nodeNumber& (0+255),b
 14801   002478  C2CD  F1D2         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14802   00247C  EE20 F005          	lfsr	2,5
 14803   002480  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14804   002482  26D9               	addwf	fsr2l,f,c
 14805   002484  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14806   002486  22DA               	addwfc	fsr2h,f,c
 14807   002488  50DF               	movf	indf2,w,c
 14808   00248A  0102               	movlb	2	; () banked
 14809   00248C  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14810   00248E  0101               	movlb	1	; () banked
 14811   002490  EE20 F004          	lfsr	2,4
 14812   002494  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14813   002496  26D9               	addwf	fsr2l,f,c
 14814   002498  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14815   00249A  22DA               	addwfc	fsr2h,f,c
 14816   00249C  50DF               	movf	indf2,w,c
 14817   00249E  0102               	movlb	2	; () banked
 14818   0024A0  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14819   0024A2  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14820   0024A4  0101               	movlb	1	; () banked
 14821   0024A6  6FD3               	movwf	doEvuln@eventNumber& (0+255),b
 14822   0024A8  C2D0  F1D4         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14823   0024AC  EC5D  F056         	call	_doEvuln	;wreg free
 14824   0024B0  D6FD               	goto	u26310
 14825   0024B2                     l24578:
 14826                           
 14827                           ; BSR set to: 2
 14828                           ;../../VLCBlib_PIC/event_teach_large.c: 429:             if (teachCheckLen(m, 6, 1) == P
      +                          ROCESSED) return PROCESSED;
 14829   0024B2  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 14830   0024B6  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14831   0024BA  0E06               	movlw	6
 14832   0024BC  0101               	movlb	1	; () banked
 14833   0024BE  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 14834   0024C0  0E01               	movlw	1
 14835   0024C2  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 14836   0024C4  ECA1  F05A         	call	_teachCheckLen	;wreg free
 14837   0024C8  06E8               	decf	wreg,f,c
 14838   0024CA  B4D8               	btfsc	status,2,c
 14839   0024CC  D6EF               	goto	u26310
 14840                           
 14841                           ;../../VLCBlib_PIC/event_teach_large.c: 430:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14842   0024CE  0101               	movlb	1	; () banked
 14843   0024D0  A169               	btfss	_mode_flags& (0+255),0,b
 14844   0024D2  D6EC               	goto	u26310
 14845                           
 14846                           ; BSR set to: 1
 14847                           ;../../VLCBlib_PIC/event_teach_large.c: 432:             doReqev((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14848   0024D4  EE20 F003          	lfsr	2,3
 14849   0024D8  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14850   0024DA  26D9               	addwf	fsr2l,f,c
 14851   0024DC  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14852   0024DE  22DA               	addwfc	fsr2h,f,c
 14853   0024E0  50DF               	movf	indf2,w,c
 14854   0024E2  0102               	movlb	2	; () banked
 14855   0024E4  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14856   0024E6  0101               	movlb	1	; () banked
 14857   0024E8  EE20 F002          	lfsr	2,2
 14858   0024EC  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14859   0024EE  26D9               	addwf	fsr2l,f,c
 14860   0024F0  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14861   0024F2  22DA               	addwfc	fsr2h,f,c
 14862   0024F4  50DF               	movf	indf2,w,c
 14863   0024F6  0102               	movlb	2	; () banked
 14864   0024F8  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14865   0024FA  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14866   0024FC  0101               	movlb	1	; () banked
 14867   0024FE  6FCB               	movwf	doReqev@nodeNumber& (0+255),b
 14868   002500  C2CD  F1CC         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14869   002504  EE20 F005          	lfsr	2,5
 14870   002508  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14871   00250A  26D9               	addwf	fsr2l,f,c
 14872   00250C  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14873   00250E  22DA               	addwfc	fsr2h,f,c
 14874   002510  50DF               	movf	indf2,w,c
 14875   002512  0102               	movlb	2	; () banked
 14876   002514  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14877   002516  0101               	movlb	1	; () banked
 14878   002518  EE20 F004          	lfsr	2,4
 14879   00251C  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14880   00251E  26D9               	addwf	fsr2l,f,c
 14881   002520  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14882   002522  22DA               	addwfc	fsr2h,f,c
 14883   002524  50DF               	movf	indf2,w,c
 14884   002526  0102               	movlb	2	; () banked
 14885   002528  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14886   00252A  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14887   00252C  0101               	movlb	1	; () banked
 14888   00252E  6FCD               	movwf	doReqev@eventNumber& (0+255),b
 14889   002530  C2D0  F1CE         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14890   002534  EE20 F006          	lfsr	2,6
 14891   002538  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14892   00253A  26D9               	addwf	fsr2l,f,c
 14893   00253C  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14894   00253E  22DA               	addwfc	fsr2h,f,c
 14895   002540  50DF               	movf	indf2,w,c
 14896   002542  6FCF               	movwf	doReqev@evNum& (0+255),b
 14897   002544  EC52  F03E         	call	_doReqev	;wreg free
 14898   002548  D6B1               	goto	u26310
 14899   00254A                     l24594:
 14900                           
 14901                           ; BSR set to: 2
 14902                           ;../../VLCBlib_PIC/event_teach_large.c: 436:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14903   00254A  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 14904   00254E  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14905   002552  0E03               	movlw	3
 14906   002554  0101               	movlb	1	; () banked
 14907   002556  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 14908   002558  0E00               	movlw	0
 14909   00255A  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 14910   00255C  ECA1  F05A         	call	_teachCheckLen	;wreg free
 14911   002560  06E8               	decf	wreg,f,c
 14912   002562  B4D8               	btfsc	status,2,c
 14913   002564  D6A3               	goto	u26310
 14914                           
 14915                           ;../../VLCBlib_PIC/event_teach_large.c: 437:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14916   002566  0101               	movlb	1	; () banked
 14917   002568  EE20 F002          	lfsr	2,2
 14918   00256C  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14919   00256E  26D9               	addwf	fsr2l,f,c
 14920   002570  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14921   002572  22DA               	addwfc	fsr2h,f,c
 14922   002574  50DE               	movf	postinc2,w,c
 14923   002576  0100               	movlb	0	; () banked
 14924   002578  19B6               	xorwf	(_nn+1)& (0+255),w,b
 14925   00257A  A4D8               	btfss	status,2,c
 14926   00257C  D697               	goto	u26310
 14927                           
 14928                           ; BSR set to: 0
 14929   00257E  0101               	movlb	1	; () banked
 14930   002580  EE20 F003          	lfsr	2,3
 14931   002584  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14932   002586  26D9               	addwf	fsr2l,f,c
 14933   002588  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14934   00258A  22DA               	addwfc	fsr2h,f,c
 14935   00258C  0100               	movlb	0	; () banked
 14936   00258E  51B5               	movf	_nn& (0+255),w,b
 14937   002590  18DE               	xorwf	postinc2,w,c
 14938   002592  A4D8               	btfss	status,2,c
 14939   002594  D68B               	goto	u26310
 14940   002596  D6A7               	goto	l24504
 14941   002598                     l24614:
 14942                           
 14943                           ; BSR set to: 2
 14944                           ;../../VLCBlib_PIC/event_teach_large.c: 442:             if (teachCheckLen(m, 3, 1) == P
      +                          ROCESSED) return PROCESSED;
 14945   002598  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 14946   00259C  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14947   0025A0  0E03               	movlw	3
 14948   0025A2  0101               	movlb	1	; () banked
 14949   0025A4  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 14950   0025A6  0E01               	movlw	1
 14951   0025A8  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 14952   0025AA  ECA1  F05A         	call	_teachCheckLen	;wreg free
 14953   0025AE  06E8               	decf	wreg,f,c
 14954   0025B0  B4D8               	btfsc	status,2,c
 14955   0025B2  D67C               	goto	u26310
 14956                           
 14957                           ;../../VLCBlib_PIC/event_teach_large.c: 443:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14958   0025B4  0101               	movlb	1	; () banked
 14959   0025B6  EE20 F002          	lfsr	2,2
 14960   0025BA  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14961   0025BC  26D9               	addwf	fsr2l,f,c
 14962   0025BE  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14963   0025C0  22DA               	addwfc	fsr2h,f,c
 14964   0025C2  50DE               	movf	postinc2,w,c
 14965   0025C4  0100               	movlb	0	; () banked
 14966   0025C6  19B6               	xorwf	(_nn+1)& (0+255),w,b
 14967   0025C8  A4D8               	btfss	status,2,c
 14968   0025CA  D670               	goto	u26310
 14969                           
 14970                           ; BSR set to: 0
 14971   0025CC  0101               	movlb	1	; () banked
 14972   0025CE  EE20 F003          	lfsr	2,3
 14973   0025D2  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 14974   0025D4  26D9               	addwf	fsr2l,f,c
 14975   0025D6  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14976   0025D8  22DA               	addwfc	fsr2h,f,c
 14977   0025DA  0100               	movlb	0	; () banked
 14978   0025DC  51B5               	movf	_nn& (0+255),w,b
 14979   0025DE  18DE               	xorwf	postinc2,w,c
 14980   0025E0  A4D8               	btfss	status,2,c
 14981   0025E2  D664               	goto	u26310
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;../../VLCBlib_PIC/event_teach_large.c: 445:             if (! (mode_flags & 1)) {
 14985   0025E4  0101               	movlb	1	; () banked
 14986   0025E6  B169               	btfsc	_mode_flags& (0+255),0,b
 14987   0025E8  D019               	goto	l24634
 14988                           
 14989                           ; BSR set to: 1
 14990                           ;../../VLCBlib_PIC/event_teach_large.c: 446:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14991   0025EA  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 14992   0025EE  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 14993   0025F2  0E02               	movlw	2
 14994   0025F4  0100               	movlb	0	; () banked
 14995   0025F6  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14996   0025F8  0E6F               	movlw	111
 14997   0025FA  EC40  F061         	call	_sendMessage3
 14998                           
 14999                           ;../../VLCBlib_PIC/event_teach_large.c: 448:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 15000   0025FE  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 15001   002602  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 15002   002606  0E55               	movlw	85
 15003   002608  0101               	movlb	1	; () banked
 15004   00260A  6FC7               	movwf	sendMessage5@data3& (0+255),b
 15005   00260C  0E04               	movlw	4
 15006   00260E  6FC8               	movwf	sendMessage5@data4& (0+255),b
 15007   002610  0E02               	movlw	2
 15008   002612  6FC9               	movwf	sendMessage5@data5& (0+255),b
 15009   002614  0EAF               	movlw	175
 15010   002616  ECE2  F060         	call	_sendMessage5
 15011   00261A  D648               	goto	u26310
 15012   00261C                     l24634:
 15013                           
 15014                           ; BSR set to: 1
 15015                           ;../../VLCBlib_PIC/event_teach_large.c: 453:             doNnclr();
 15016   00261C  EC82  F060         	call	_doNnclr	;wreg free
 15017                           
 15018                           ;../../VLCBlib_PIC/event_teach_large.c: 454:             break;
 15019   002620  D6A3               	goto	l24540
 15020   002622                     l24636:
 15021                           
 15022                           ; BSR set to: 2
 15023                           ;../../VLCBlib_PIC/event_teach_large.c: 456:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15024   002622  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 15025   002626  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15026   00262A  0E03               	movlw	3
 15027   00262C  0101               	movlb	1	; () banked
 15028   00262E  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 15029   002630  0E00               	movlw	0
 15030   002632  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 15031   002634  ECA1  F05A         	call	_teachCheckLen	;wreg free
 15032   002638  06E8               	decf	wreg,f,c
 15033   00263A  B4D8               	btfsc	status,2,c
 15034   00263C  D637               	goto	u26310
 15035                           
 15036                           ;../../VLCBlib_PIC/event_teach_large.c: 457:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15037   00263E  0101               	movlb	1	; () banked
 15038   002640  EE20 F002          	lfsr	2,2
 15039   002644  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15040   002646  26D9               	addwf	fsr2l,f,c
 15041   002648  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15042   00264A  22DA               	addwfc	fsr2h,f,c
 15043   00264C  50DE               	movf	postinc2,w,c
 15044   00264E  0100               	movlb	0	; () banked
 15045   002650  19B6               	xorwf	(_nn+1)& (0+255),w,b
 15046   002652  A4D8               	btfss	status,2,c
 15047   002654  D62B               	goto	u26310
 15048                           
 15049                           ; BSR set to: 0
 15050   002656  0101               	movlb	1	; () banked
 15051   002658  EE20 F003          	lfsr	2,3
 15052   00265C  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15053   00265E  26D9               	addwf	fsr2l,f,c
 15054   002660  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15055   002662  22DA               	addwfc	fsr2h,f,c
 15056   002664  0100               	movlb	0	; () banked
 15057   002666  51B5               	movf	_nn& (0+255),w,b
 15058   002668  18DE               	xorwf	postinc2,w,c
 15059   00266A  A4D8               	btfss	status,2,c
 15060   00266C  D61F               	goto	u26310
 15061                           
 15062                           ; BSR set to: 0
 15063                           ;../../VLCBlib_PIC/event_teach_large.c: 459:             doNerd();
 15064   00266E  EC63  F063         	call	_doNerd	;wreg free
 15065   002672  D61C               	goto	u26310
 15066   002674                     l24656:
 15067                           
 15068                           ; BSR set to: 2
 15069                           ;../../VLCBlib_PIC/event_teach_large.c: 462:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15070   002674  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 15071   002678  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15072   00267C  0E03               	movlw	3
 15073   00267E  0101               	movlb	1	; () banked
 15074   002680  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 15075   002682  0E00               	movlw	0
 15076   002684  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 15077   002686  ECA1  F05A         	call	_teachCheckLen	;wreg free
 15078   00268A  06E8               	decf	wreg,f,c
 15079   00268C  B4D8               	btfsc	status,2,c
 15080   00268E  D60E               	goto	u26310
 15081                           
 15082                           ;../../VLCBlib_PIC/event_teach_large.c: 463:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15083   002690  0101               	movlb	1	; () banked
 15084   002692  EE20 F002          	lfsr	2,2
 15085   002696  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15086   002698  26D9               	addwf	fsr2l,f,c
 15087   00269A  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15088   00269C  22DA               	addwfc	fsr2h,f,c
 15089   00269E  50DE               	movf	postinc2,w,c
 15090   0026A0  0100               	movlb	0	; () banked
 15091   0026A2  19B6               	xorwf	(_nn+1)& (0+255),w,b
 15092   0026A4  A4D8               	btfss	status,2,c
 15093   0026A6  D602               	goto	u26310
 15094                           
 15095                           ; BSR set to: 0
 15096   0026A8  0101               	movlb	1	; () banked
 15097   0026AA  EE20 F003          	lfsr	2,3
 15098   0026AE  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15099   0026B0  26D9               	addwf	fsr2l,f,c
 15100   0026B2  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15101   0026B4  22DA               	addwfc	fsr2h,f,c
 15102   0026B6  0100               	movlb	0	; () banked
 15103   0026B8  51B5               	movf	_nn& (0+255),w,b
 15104   0026BA  18DE               	xorwf	postinc2,w,c
 15105   0026BC  A4D8               	btfss	status,2,c
 15106   0026BE  D5F6               	goto	u26310
 15107                           
 15108                           ; BSR set to: 0
 15109                           ;../../VLCBlib_PIC/event_teach_large.c: 465:             doNnevn();
 15110   0026C0  EC0D  F059         	call	_doNnevn	;wreg free
 15111   0026C4  D5F3               	goto	u26310
 15112   0026C6                     l24676:
 15113                           
 15114                           ; BSR set to: 2
 15115                           ;../../VLCBlib_PIC/event_teach_large.c: 468:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15116   0026C6  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 15117   0026CA  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15118   0026CE  0E03               	movlw	3
 15119   0026D0  0101               	movlb	1	; () banked
 15120   0026D2  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 15121   0026D4  0E00               	movlw	0
 15122   0026D6  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 15123   0026D8  ECA1  F05A         	call	_teachCheckLen	;wreg free
 15124   0026DC  06E8               	decf	wreg,f,c
 15125   0026DE  B4D8               	btfsc	status,2,c
 15126   0026E0  D5E5               	goto	u26310
 15127                           
 15128                           ;../../VLCBlib_PIC/event_teach_large.c: 469:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15129   0026E2  0101               	movlb	1	; () banked
 15130   0026E4  EE20 F002          	lfsr	2,2
 15131   0026E8  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15132   0026EA  26D9               	addwf	fsr2l,f,c
 15133   0026EC  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15134   0026EE  22DA               	addwfc	fsr2h,f,c
 15135   0026F0  50DE               	movf	postinc2,w,c
 15136   0026F2  0100               	movlb	0	; () banked
 15137   0026F4  19B6               	xorwf	(_nn+1)& (0+255),w,b
 15138   0026F6  A4D8               	btfss	status,2,c
 15139   0026F8  D5D9               	goto	u26310
 15140                           
 15141                           ; BSR set to: 0
 15142   0026FA  0101               	movlb	1	; () banked
 15143   0026FC  EE20 F003          	lfsr	2,3
 15144   002700  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15145   002702  26D9               	addwf	fsr2l,f,c
 15146   002704  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15147   002706  22DA               	addwfc	fsr2h,f,c
 15148   002708  0100               	movlb	0	; () banked
 15149   00270A  51B5               	movf	_nn& (0+255),w,b
 15150   00270C  18DE               	xorwf	postinc2,w,c
 15151   00270E  A4D8               	btfss	status,2,c
 15152   002710  D5CD               	goto	u26310
 15153                           
 15154                           ; BSR set to: 0
 15155                           ;../../VLCBlib_PIC/event_teach_large.c: 471:             doRqevn();
 15156   002712  ECE7  F05F         	call	_doRqevn	;wreg free
 15157   002716  D5CA               	goto	u26310
 15158   002718                     l24696:
 15159                           
 15160                           ; BSR set to: 2
 15161                           ;../../VLCBlib_PIC/event_teach_large.c: 474:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 15162   002718  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 15163   00271C  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15164   002720  0E04               	movlw	4
 15165   002722  0101               	movlb	1	; () banked
 15166   002724  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 15167   002726  0E00               	movlw	0
 15168   002728  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 15169   00272A  ECA1  F05A         	call	_teachCheckLen	;wreg free
 15170   00272E  06E8               	decf	wreg,f,c
 15171   002730  B4D8               	btfsc	status,2,c
 15172   002732  D5BC               	goto	u26310
 15173                           
 15174                           ;../../VLCBlib_PIC/event_teach_large.c: 475:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15175   002734  0101               	movlb	1	; () banked
 15176   002736  EE20 F002          	lfsr	2,2
 15177   00273A  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15178   00273C  26D9               	addwf	fsr2l,f,c
 15179   00273E  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15180   002740  22DA               	addwfc	fsr2h,f,c
 15181   002742  50DE               	movf	postinc2,w,c
 15182   002744  0100               	movlb	0	; () banked
 15183   002746  19B6               	xorwf	(_nn+1)& (0+255),w,b
 15184   002748  A4D8               	btfss	status,2,c
 15185   00274A  D5B0               	goto	u26310
 15186                           
 15187                           ; BSR set to: 0
 15188   00274C  0101               	movlb	1	; () banked
 15189   00274E  EE20 F003          	lfsr	2,3
 15190   002752  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15191   002754  26D9               	addwf	fsr2l,f,c
 15192   002756  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15193   002758  22DA               	addwfc	fsr2h,f,c
 15194   00275A  0100               	movlb	0	; () banked
 15195   00275C  51B5               	movf	_nn& (0+255),w,b
 15196   00275E  18DE               	xorwf	postinc2,w,c
 15197   002760  A4D8               	btfss	status,2,c
 15198   002762  D5A4               	goto	u26310
 15199                           
 15200                           ; BSR set to: 0
 15201                           ;../../VLCBlib_PIC/event_teach_large.c: 477:             doNenrd(m->bytes[2]);
 15202   002764  0101               	movlb	1	; () banked
 15203   002766  EE20 F004          	lfsr	2,4
 15204   00276A  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15205   00276C  26D9               	addwf	fsr2l,f,c
 15206   00276E  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15207   002770  22DA               	addwfc	fsr2h,f,c
 15208   002772  50DF               	movf	indf2,w,c
 15209   002774  EC69  F058         	call	_doNenrd
 15210   002778  D599               	goto	u26310
 15211   00277A                     l24716:
 15212                           
 15213                           ; BSR set to: 2
 15214                           ;../../VLCBlib_PIC/event_teach_large.c: 480:             if (teachCheckLen(m, 5, 0) == P
      +                          ROCESSED) return PROCESSED;
 15215   00277A  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 15216   00277E  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15217   002782  0E05               	movlw	5
 15218   002784  0101               	movlb	1	; () banked
 15219   002786  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 15220   002788  0E00               	movlw	0
 15221   00278A  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 15222   00278C  ECA1  F05A         	call	_teachCheckLen	;wreg free
 15223   002790  06E8               	decf	wreg,f,c
 15224   002792  B4D8               	btfsc	status,2,c
 15225   002794  D58B               	goto	u26310
 15226                           
 15227                           ;../../VLCBlib_PIC/event_teach_large.c: 481:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15228   002796  0101               	movlb	1	; () banked
 15229   002798  EE20 F002          	lfsr	2,2
 15230   00279C  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15231   00279E  26D9               	addwf	fsr2l,f,c
 15232   0027A0  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15233   0027A2  22DA               	addwfc	fsr2h,f,c
 15234   0027A4  50DE               	movf	postinc2,w,c
 15235   0027A6  0100               	movlb	0	; () banked
 15236   0027A8  19B6               	xorwf	(_nn+1)& (0+255),w,b
 15237   0027AA  A4D8               	btfss	status,2,c
 15238   0027AC  D57F               	goto	u26310
 15239                           
 15240                           ; BSR set to: 0
 15241   0027AE  0101               	movlb	1	; () banked
 15242   0027B0  EE20 F003          	lfsr	2,3
 15243   0027B4  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15244   0027B6  26D9               	addwf	fsr2l,f,c
 15245   0027B8  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15246   0027BA  22DA               	addwfc	fsr2h,f,c
 15247   0027BC  0100               	movlb	0	; () banked
 15248   0027BE  51B5               	movf	_nn& (0+255),w,b
 15249   0027C0  18DE               	xorwf	postinc2,w,c
 15250   0027C2  A4D8               	btfss	status,2,c
 15251   0027C4  D573               	goto	u26310
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;../../VLCBlib_PIC/event_teach_large.c: 483:             doReval(m->bytes[2], m->bytes[3
      +                          ]);
 15255   0027C6  0101               	movlb	1	; () banked
 15256   0027C8  EE20 F005          	lfsr	2,5
 15257   0027CC  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15258   0027CE  26D9               	addwf	fsr2l,f,c
 15259   0027D0  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15260   0027D2  22DA               	addwfc	fsr2h,f,c
 15261   0027D4  50DF               	movf	indf2,w,c
 15262   0027D6  6FCA               	movwf	doReval@evNum& (0+255),b
 15263   0027D8  EE20 F004          	lfsr	2,4
 15264   0027DC  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15265   0027DE  26D9               	addwf	fsr2l,f,c
 15266   0027E0  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15267   0027E2  22DA               	addwfc	fsr2h,f,c
 15268   0027E4  50DF               	movf	indf2,w,c
 15269   0027E6  EC11  F04B         	call	_doReval
 15270   0027EA  D560               	goto	u26310
 15271   0027EC                     l24736:
 15272                           
 15273                           ; BSR set to: 2
 15274                           ;../../VLCBlib_PIC/event_teach_large.c: 486:             if (teachCheckLen(m, 8, 1) == P
      +                          ROCESSED) return PROCESSED;
 15275   0027EC  C1FC  F1CE         	movff	teachProcessMessage@m,teachCheckLen@m
 15276   0027F0  C1FD  F1CF         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15277   0027F4  0E08               	movlw	8
 15278   0027F6  0101               	movlb	1	; () banked
 15279   0027F8  6FD0               	movwf	teachCheckLen@needed& (0+255),b
 15280   0027FA  0E01               	movlw	1
 15281   0027FC  6FD1               	movwf	teachCheckLen@learn& (0+255),b
 15282   0027FE  ECA1  F05A         	call	_teachCheckLen	;wreg free
 15283   002802  06E8               	decf	wreg,f,c
 15284   002804  B4D8               	btfsc	status,2,c
 15285   002806  D552               	goto	u26310
 15286                           
 15287                           ;../../VLCBlib_PIC/event_teach_large.c: 487:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15288   002808  0101               	movlb	1	; () banked
 15289   00280A  EE20 F002          	lfsr	2,2
 15290   00280E  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15291   002810  26D9               	addwf	fsr2l,f,c
 15292   002812  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15293   002814  22DA               	addwfc	fsr2h,f,c
 15294   002816  50DE               	movf	postinc2,w,c
 15295   002818  0100               	movlb	0	; () banked
 15296   00281A  19B6               	xorwf	(_nn+1)& (0+255),w,b
 15297   00281C  A4D8               	btfss	status,2,c
 15298   00281E  D546               	goto	u26310
 15299                           
 15300                           ; BSR set to: 0
 15301   002820  0101               	movlb	1	; () banked
 15302   002822  EE20 F003          	lfsr	2,3
 15303   002826  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15304   002828  26D9               	addwf	fsr2l,f,c
 15305   00282A  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15306   00282C  22DA               	addwfc	fsr2h,f,c
 15307   00282E  0100               	movlb	0	; () banked
 15308   002830  51B5               	movf	_nn& (0+255),w,b
 15309   002832  18DE               	xorwf	postinc2,w,c
 15310   002834  A4D8               	btfss	status,2,c
 15311   002836  D53A               	goto	u26310
 15312                           
 15313                           ; BSR set to: 0
 15314                           ;../../VLCBlib_PIC/event_teach_large.c: 489:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6
      +                          ]);
 15315   002838  0101               	movlb	1	; () banked
 15316   00283A  EE20 F003          	lfsr	2,3
 15317   00283E  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15318   002840  26D9               	addwf	fsr2l,f,c
 15319   002842  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15320   002844  22DA               	addwfc	fsr2h,f,c
 15321   002846  50DF               	movf	indf2,w,c
 15322   002848  0102               	movlb	2	; () banked
 15323   00284A  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15324   00284C  0101               	movlb	1	; () banked
 15325   00284E  EE20 F002          	lfsr	2,2
 15326   002852  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15327   002854  26D9               	addwf	fsr2l,f,c
 15328   002856  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15329   002858  22DA               	addwfc	fsr2h,f,c
 15330   00285A  50DF               	movf	indf2,w,c
 15331   00285C  0102               	movlb	2	; () banked
 15332   00285E  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 15333   002860  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15334   002862  0101               	movlb	1	; () banked
 15335   002864  6FF1               	movwf	doEvlrn@nodeNumber& (0+255),b
 15336   002866  C2CD  F1F2         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 15337   00286A  EE20 F005          	lfsr	2,5
 15338   00286E  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15339   002870  26D9               	addwf	fsr2l,f,c
 15340   002872  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15341   002874  22DA               	addwfc	fsr2h,f,c
 15342   002876  50DF               	movf	indf2,w,c
 15343   002878  0102               	movlb	2	; () banked
 15344   00287A  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 15345   00287C  0101               	movlb	1	; () banked
 15346   00287E  EE20 F004          	lfsr	2,4
 15347   002882  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15348   002884  26D9               	addwf	fsr2l,f,c
 15349   002886  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15350   002888  22DA               	addwfc	fsr2h,f,c
 15351   00288A  50DF               	movf	indf2,w,c
 15352   00288C  0102               	movlb	2	; () banked
 15353   00288E  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 15354   002890  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 15355   002892  0101               	movlb	1	; () banked
 15356   002894  6FF3               	movwf	doEvlrn@eventNumber& (0+255),b
 15357   002896  C2D0  F1F4         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 15358   00289A  EE20 F007          	lfsr	2,7
 15359   00289E  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15360   0028A0  26D9               	addwf	fsr2l,f,c
 15361   0028A2  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15362   0028A4  22DA               	addwfc	fsr2h,f,c
 15363   0028A6  50DF               	movf	indf2,w,c
 15364   0028A8  6FF5               	movwf	doEvlrn@evNum& (0+255),b
 15365   0028AA  EE20 F008          	lfsr	2,8
 15366   0028AE  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15367   0028B0  26D9               	addwf	fsr2l,f,c
 15368   0028B2  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15369   0028B4  22DA               	addwfc	fsr2h,f,c
 15370   0028B6  50DF               	movf	indf2,w,c
 15371   0028B8  6FF6               	movwf	doEvlrn@evVal& (0+255),b
 15372   0028BA  ECEB  F049         	call	_doEvlrn	;wreg free
 15373   0028BE  D4F6               	goto	u26310
 15374   0028C0                     l24758:
 15375   0028C0  0101               	movlb	1	; () banked
 15376   0028C2  EE20 F001          	lfsr	2,1
 15377   0028C6  51FC               	movf	teachProcessMessage@m& (0+255),w,b
 15378   0028C8  26D9               	addwf	fsr2l,f,c
 15379   0028CA  51FD               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15380   0028CC  22DA               	addwfc	fsr2h,f,c
 15381   0028CE  50DF               	movf	indf2,w,c
 15382   0028D0  0102               	movlb	2	; () banked
 15383   0028D2  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15384   0028D4  6BCD               	clrf	(??_teachProcessMessage+1)& (0+255),b
 15385                           
 15386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15387                           ; Switch size 1, requested type "simple"
 15388                           ; Number of cases is 1, Range of values is 0 to 0
 15389                           ; switch strategies available:
 15390                           ; Name         Instructions Cycles
 15391                           ; simple_byte            4     3 (average)
 15392                           ;	Chosen strategy is simple_byte
 15393   0028D6  51CD               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 15394   0028D8  0A00               	xorlw	0	; case 0
 15395   0028DA  A4D8               	btfss	status,2,c
 15396   0028DC  D545               	goto	l24540
 15397                           
 15398                           ; BSR set to: 2
 15399                           ; Switch size 1, requested type "simple"
 15400                           ; Number of cases is 13, Range of values is 83 to 245
 15401                           ; switch strategies available:
 15402                           ; Name         Instructions Cycles
 15403                           ; simple_byte           40    21 (average)
 15404                           ;	Chosen strategy is simple_byte
 15405   0028DE  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15406   0028E0  0A53               	xorlw	83	; case 83
 15407   0028E2  B4D8               	btfsc	status,2,c
 15408   0028E4  D4D5               	goto	l24492
 15409   0028E6  0A07               	xorlw	7	; case 84
 15410   0028E8  B4D8               	btfsc	status,2,c
 15411   0028EA  D62F               	goto	l24594
 15412   0028EC  0A01               	xorlw	1	; case 85
 15413   0028EE  B4D8               	btfsc	status,2,c
 15414   0028F0  D653               	goto	l24614
 15415   0028F2  0A03               	xorlw	3	; case 86
 15416   0028F4  B4D8               	btfsc	status,2,c
 15417   0028F6  D6BE               	goto	l24656
 15418   0028F8  0A01               	xorlw	1	; case 87
 15419   0028FA  B4D8               	btfsc	status,2,c
 15420   0028FC  D692               	goto	l24636
 15421   0028FE  0A0F               	xorlw	15	; case 88
 15422   002900  B4D8               	btfsc	status,2,c
 15423   002902  D6E1               	goto	l24676
 15424   002904  0A2A               	xorlw	42	; case 114
 15425   002906  B4D8               	btfsc	status,2,c
 15426   002908  D707               	goto	l24696
 15427   00290A  0A04               	xorlw	4	; case 118
 15428   00290C  B4D8               	btfsc	status,2,c
 15429   00290E  D4EE               	goto	l24510
 15430   002910  0AE3               	xorlw	227	; case 149
 15431   002912  B4D8               	btfsc	status,2,c
 15432   002914  D58A               	goto	l24562
 15433   002916  0A09               	xorlw	9	; case 156
 15434   002918  B4D8               	btfsc	status,2,c
 15435   00291A  D72F               	goto	l24716
 15436   00291C  0A2E               	xorlw	46	; case 178
 15437   00291E  B4D8               	btfsc	status,2,c
 15438   002920  D5C8               	goto	l24578
 15439   002922  0A60               	xorlw	96	; case 210
 15440   002924  B4D8               	btfsc	status,2,c
 15441   002926  D522               	goto	l24544
 15442   002928  0A27               	xorlw	39	; case 245
 15443   00292A  B4D8               	btfsc	status,2,c
 15444   00292C  D75F               	goto	l24736
 15445   00292E  D51C               	goto	l24540
 15446   002930                     __end_of_teachProcessMessage:
 15447                           	callstack 0
 15448                           
 15449 ;; *************** function _teachCheckLen *****************
 15450 ;; Defined at:
 15451 ;;		line 504 in file "../../VLCBlib_PIC/event_teach_large.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;  m               2   17[BANK1 ] PTR struct Message
 15454 ;;		 -> poll@m(9), 
 15455 ;;  needed          1   19[BANK1 ] unsigned char 
 15456 ;;  learn           1   20[BANK1 ] unsigned char 
 15457 ;; Auto vars:     Size  Location     Type
 15458 ;;		None
 15459 ;; Return value:  Size  Location     Type
 15460 ;;                  1    wreg      enum E12799
 15461 ;; Registers used:
 15462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15463 ;; Tracked objects:
 15464 ;;		On entry : 0/0
 15465 ;;		On exit  : 0/0
 15466 ;;		Unchanged: 0/0
 15467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15468 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15470 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15471 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15472 ;;Total ram usage:        5 bytes
 15473 ;; Hardware stack levels used: 1
 15474 ;; Hardware stack levels required when called: 18
 15475 ;; This function calls:
 15476 ;;		_checkLen
 15477 ;;		_sendMessage5
 15478 ;; This function is called by:
 15479 ;;		_teachProcessMessage
 15480 ;; This function uses a non-reentrant model
 15481 ;;
 15482                           
 15483                           	psect	text28
 15484   00B542                     __ptext28:
 15485                           	callstack 0
 15486   00B542                     _teachCheckLen:
 15487                           	callstack 10
 15488                           
 15489                           ;../../VLCBlib_PIC/event_teach_large.c: 505:     if (learn) {
 15490                           
 15491                           ;incstack = 0
 15492   00B542  0101               	movlb	1	; () banked
 15493   00B544  51D1               	movf	teachCheckLen@learn& (0+255),w,b
 15494   00B546  B4D8               	btfsc	status,2,c
 15495   00B548  D021               	goto	l22570
 15496                           
 15497                           ; BSR set to: 1
 15498                           ;../../VLCBlib_PIC/event_teach_large.c: 507:         if (m->len < needed) {
 15499   00B54A  C1CE  FFD9         	movff	teachCheckLen@m,fsr2l
 15500   00B54E  C1CF  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15501   00B552  51D0               	movf	teachCheckLen@needed& (0+255),w,b
 15502   00B554  5CDE               	subwf	postinc2,w,c
 15503   00B556  B0D8               	btfsc	status,0,c
 15504   00B558  D017               	goto	l22566
 15505                           
 15506                           ; BSR set to: 1
 15507                           ;../../VLCBlib_PIC/event_teach_large.c: 509:             if (mode_flags & 1) {
 15508   00B55A  A169               	btfss	_mode_flags& (0+255),0,b
 15509   00B55C  D013               	goto	l22562
 15510                           
 15511                           ; BSR set to: 1
 15512                           ;../../VLCBlib_PIC/event_teach_large.c: 512:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15513   00B55E  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 15514   00B562  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 15515   00B566  EE20 F001          	lfsr	2,1
 15516   00B56A  51CE               	movf	teachCheckLen@m& (0+255),w,b
 15517   00B56C  26D9               	addwf	fsr2l,f,c
 15518   00B56E  51CF               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15519   00B570  22DA               	addwfc	fsr2h,f,c
 15520   00B572  50DF               	movf	indf2,w,c
 15521   00B574  6FC7               	movwf	sendMessage5@data3& (0+255),b
 15522   00B576  0E04               	movlw	4
 15523   00B578  6FC8               	movwf	sendMessage5@data4& (0+255),b
 15524   00B57A  0E01               	movlw	1
 15525   00B57C  6FC9               	movwf	sendMessage5@data5& (0+255),b
 15526   00B57E  0EAF               	movlw	175
 15527   00B580  ECE2  F060         	call	_sendMessage5
 15528   00B584                     l22562:
 15529                           
 15530                           ;../../VLCBlib_PIC/event_teach_large.c: 515:             return PROCESSED;
 15531   00B584  0E01               	movlw	1
 15532   00B586  0012               	return	
 15533   00B588                     l22566:
 15534                           
 15535                           ; BSR set to: 1
 15536                           ;../../VLCBlib_PIC/event_teach_large.c: 517:         return NOT_PROCESSED;
 15537   00B588  0E00               	movlw	0
 15538   00B58A  0012               	return	
 15539   00B58C                     l22570:
 15540                           
 15541                           ; BSR set to: 1
 15542                           ;../../VLCBlib_PIC/event_teach_large.c: 519:     return checkLen(m, needed, SERVICE_ID_O
      +                          LD_TEACH);
 15543   00B58C  C1CE  F1CA         	movff	teachCheckLen@m,checkLen@m
 15544   00B590  C1CF  F1CB         	movff	teachCheckLen@m+1,checkLen@m+1
 15545   00B594  C1D0  F1CC         	movff	teachCheckLen@needed,checkLen@needed
 15546   00B598  0E04               	movlw	4
 15547   00B59A  6FCD               	movwf	checkLen@service& (0+255),b
 15548   00B59C  EC24  F055         	call	_checkLen	;wreg free
 15549   00B5A0  0012               	return		;funcret
 15550   00B5A2                     __end_of_teachCheckLen:
 15551                           	callstack 0
 15552                           
 15553 ;; *************** function _doRqevn *****************
 15554 ;; Defined at:
 15555 ;;		line 649 in file "../../VLCBlib_PIC/event_teach_large.c"
 15556 ;; Parameters:    Size  Location     Type
 15557 ;;		None
 15558 ;; Auto vars:     Size  Location     Type
 15559 ;;  i               1   10[BANK1 ] unsigned char 
 15560 ;;  count           1    9[BANK1 ] unsigned char 
 15561 ;; Return value:  Size  Location     Type
 15562 ;;                  1    wreg      void 
 15563 ;; Registers used:
 15564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15565 ;; Tracked objects:
 15566 ;;		On entry : 0/0
 15567 ;;		On exit  : 0/0
 15568 ;;		Unchanged: 0/0
 15569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15571 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15573 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15574 ;;Total ram usage:        2 bytes
 15575 ;; Hardware stack levels used: 1
 15576 ;; Hardware stack levels required when called: 17
 15577 ;; This function calls:
 15578 ;;		_sendMessage3
 15579 ;;		_validStart
 15580 ;; This function is called by:
 15581 ;;		_teachProcessMessage
 15582 ;; This function uses a non-reentrant model
 15583 ;;
 15584                           
 15585                           	psect	text29
 15586   00BFCE                     __ptext29:
 15587                           	callstack 0
 15588   00BFCE                     _doRqevn:
 15589                           	callstack 11
 15590                           
 15591                           ;../../VLCBlib_PIC/event_teach_large.c: 651:     uint8_t count = 0;
 15592                           
 15593                           ;incstack = 0
 15594   00BFCE  0E00               	movlw	0
 15595   00BFD0  0101               	movlb	1	; () banked
 15596   00BFD2  6FC6               	movwf	doRqevn@count& (0+255),b
 15597                           
 15598                           ;../../VLCBlib_PIC/event_teach_large.c: 652:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 653:     for (i=0; i<255; i++) {
 15599   00BFD4  0E00               	movlw	0
 15600   00BFD6  6FC7               	movwf	doRqevn@i& (0+255),b
 15601   00BFD8                     l22674:
 15602                           
 15603                           ; BSR set to: 1
 15604                           ;../../VLCBlib_PIC/event_teach_large.c: 654:         if (validStart(i)) {
 15605   00BFD8  51C7               	movf	doRqevn@i& (0+255),w,b
 15606   00BFDA  EC3A  F05D         	call	_validStart
 15607   00BFDE  0900               	iorlw	0
 15608   00BFE0  B4D8               	btfsc	status,2,c
 15609   00BFE2  D002               	goto	l2849
 15610                           
 15611                           ;../../VLCBlib_PIC/event_teach_large.c: 655:             count++;
 15612   00BFE4  0101               	movlb	1	; () banked
 15613   00BFE6  2BC6               	incf	doRqevn@count& (0+255),f,b
 15614   00BFE8                     l2849:
 15615                           
 15616                           ;../../VLCBlib_PIC/event_teach_large.c: 657:     }
 15617   00BFE8  0101               	movlb	1	; () banked
 15618   00BFEA  2BC7               	incf	doRqevn@i& (0+255),f,b
 15619                           
 15620                           ; BSR set to: 1
 15621   00BFEC  29C7               	incf	doRqevn@i& (0+255),w,b
 15622   00BFEE  A4D8               	btfss	status,2,c
 15623   00BFF0  D7F3               	goto	l22674
 15624                           
 15625                           ; BSR set to: 1
 15626                           ;../../VLCBlib_PIC/event_teach_large.c: 658:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15627   00BFF2  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 15628   00BFF6  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 15629   00BFFA  C1C6  F0A8         	movff	doRqevn@count,sendMessage3@data3
 15630   00BFFE  0E74               	movlw	116
 15631   00C000  EC40  F061         	call	_sendMessage3
 15632   00C004  0012               	return		;funcret
 15633   00C006                     __end_of_doRqevn:
 15634                           	callstack 0
 15635                           
 15636 ;; *************** function _doReval *****************
 15637 ;; Defined at:
 15638 ;;		line 719 in file "../../VLCBlib_PIC/event_teach_large.c"
 15639 ;; Parameters:    Size  Location     Type
 15640 ;;  enNum           1    wreg     unsigned char 
 15641 ;;  evNum           1   13[BANK1 ] unsigned char 
 15642 ;; Auto vars:     Size  Location     Type
 15643 ;;  enNum           1   16[BANK1 ] unsigned char 
 15644 ;;  evVal           2   17[BANK1 ] int 
 15645 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15646 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15647 ;; Return value:  Size  Location     Type
 15648 ;;                  1    wreg      void 
 15649 ;; Registers used:
 15650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15651 ;; Tracked objects:
 15652 ;;		On entry : 0/0
 15653 ;;		On exit  : 0/0
 15654 ;;		Unchanged: 0/0
 15655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15656 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15657 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15658 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15659 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15660 ;;Total ram usage:        7 bytes
 15661 ;; Hardware stack levels used: 1
 15662 ;; Hardware stack levels required when called: 17
 15663 ;; This function calls:
 15664 ;;		_evtIdxToTableIndex
 15665 ;;		_getEv
 15666 ;;		_numEv
 15667 ;;		_sendMessage3
 15668 ;;		_sendMessage5
 15669 ;;		_validStart
 15670 ;; This function is called by:
 15671 ;;		_teachProcessMessage
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           	psect	text30
 15676   009622                     __ptext30:
 15677                           	callstack 0
 15678   009622                     _doReval:
 15679                           	callstack 11
 15680                           
 15681                           ;incstack = 0
 15682                           ;doReval@enNum stored from wreg
 15683   009622  0101               	movlb	1	; () banked
 15684   009624  6FCD               	movwf	doReval@enNum& (0+255),b
 15685                           
 15686                           ;../../VLCBlib_PIC/event_teach_large.c: 722:     uint8_t evIndex;;../../VLCBlib_PIC/even
      +                          t_teach_large.c: 723:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15687   009626  0101               	movlb	1	; () banked
 15688   009628  51CD               	movf	doReval@enNum& (0+255),w,b
 15689   00962A  EC01  F064         	call	_evtIdxToTableIndex
 15690   00962E  0101               	movlb	1	; () banked
 15691   009630  6FD0               	movwf	doReval@tableIndex& (0+255),b
 15692                           
 15693                           ; BSR set to: 1
 15694                           ;../../VLCBlib_PIC/event_teach_large.c: 725:     if (evNum > 20) {
 15695   009632  0E14               	movlw	20
 15696   009634  65CA               	cpfsgt	doReval@evNum& (0+255),b
 15697   009636  D00B               	goto	l22702
 15698                           
 15699                           ; BSR set to: 1
 15700                           ;../../VLCBlib_PIC/event_teach_large.c: 726:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15701   009638  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 15702   00963C  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 15703   009640  0E06               	movlw	6
 15704   009642  0100               	movlb	0	; () banked
 15705   009644  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15706   009646  0E6F               	movlw	111
 15707   009648  EC40  F061         	call	_sendMessage3
 15708   00964C  0012               	return	
 15709   00964E                     l22702:
 15710                           
 15711                           ; BSR set to: 1
 15712                           ;../../VLCBlib_PIC/event_teach_large.c: 730:     evIndex = evNum-1U;
 15713   00964E  05CA               	decf	doReval@evNum& (0+255),w,b
 15714   009650  6FCC               	movwf	doReval@evIndex& (0+255),b
 15715                           
 15716                           ;../../VLCBlib_PIC/event_teach_large.c: 733:     if (tableIndex < 255) {
 15717   009652  29D0               	incf	doReval@tableIndex& (0+255),w,b
 15718   009654  B4D8               	btfsc	status,2,c
 15719   009656  D039               	goto	l22722
 15720                           
 15721                           ; BSR set to: 1
 15722                           ;../../VLCBlib_PIC/event_teach_large.c: 734:         if (validStart(tableIndex)) {
 15723   009658  51D0               	movf	doReval@tableIndex& (0+255),w,b
 15724   00965A  EC3A  F05D         	call	_validStart
 15725   00965E  0900               	iorlw	0
 15726   009660  B4D8               	btfsc	status,2,c
 15727   009662  D033               	goto	l22722
 15728                           
 15729                           ;../../VLCBlib_PIC/event_teach_large.c: 735:             int evVal;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 736:             if (evNum == 0) {
 15730   009664  0101               	movlb	1	; () banked
 15731   009666  51CA               	movf	doReval@evNum& (0+255),w,b
 15732   009668  A4D8               	btfss	status,2,c
 15733   00966A  D009               	goto	l22710
 15734                           
 15735                           ; BSR set to: 1
 15736                           ;../../VLCBlib_PIC/event_teach_large.c: 737:                 evVal = numEv(tableIndex);
 15737   00966C  51D0               	movf	doReval@tableIndex& (0+255),w,b
 15738   00966E  ECDD  F045         	call	_numEv
 15739   009672  0101               	movlb	1	; () banked
 15740   009674  6FCB               	movwf	??_doReval& (0+255),b
 15741   009676  51CB               	movf	??_doReval& (0+255),w,b
 15742   009678  6FCE               	movwf	doReval@evVal& (0+255),b
 15743   00967A  6BCF               	clrf	(doReval@evVal+1)& (0+255),b
 15744                           
 15745                           ;../../VLCBlib_PIC/event_teach_large.c: 738:             } else {
 15746   00967C  D009               	goto	l22712
 15747   00967E                     l22710:
 15748                           
 15749                           ; BSR set to: 1
 15750                           ;../../VLCBlib_PIC/event_teach_large.c: 739:                 evVal = getEv(tableIndex, e
      +                          vIndex);
 15751   00967E  C1CC  F09D         	movff	doReval@evIndex,getEv@evNum
 15752   009682  51D0               	movf	doReval@tableIndex& (0+255),w,b
 15753   009684  ECFD  F03C         	call	_getEv
 15754   009688  C09D  F1CE         	movff	?_getEv,doReval@evVal
 15755   00968C  C09E  F1CF         	movff	?_getEv+1,doReval@evVal+1
 15756   009690                     l22712:
 15757                           
 15758                           ;../../VLCBlib_PIC/event_teach_large.c: 741:             if (evVal >= 0) {
 15759   009690  0101               	movlb	1	; () banked
 15760   009692  BFCF               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15761   009694  D00E               	goto	l22718
 15762                           
 15763                           ; BSR set to: 1
 15764                           ;../../VLCBlib_PIC/event_teach_large.c: 742:                 sendMessage5(OPC_NEVAL, nn.
      +                          bytes.hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15765   009696  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 15766   00969A  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 15767   00969E  C1CD  F1C7         	movff	doReval@enNum,sendMessage5@data3
 15768   0096A2  C1CA  F1C8         	movff	doReval@evNum,sendMessage5@data4
 15769   0096A6  C1CE  F1C9         	movff	doReval@evVal,sendMessage5@data5
 15770   0096AA  0EB5               	movlw	181
 15771   0096AC  ECE2  F060         	call	_sendMessage5
 15772   0096B0  0012               	return	
 15773   0096B2                     l22718:
 15774                           
 15775                           ; BSR set to: 1
 15776                           ;../../VLCBlib_PIC/event_teach_large.c: 746:             sendMessage3(OPC_CMDERR, nn.byt
      +                          es.hi, nn.bytes.lo, (uint8_t)(-evVal));
 15777   0096B2  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 15778   0096B6  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 15779   0096BA  51CE               	movf	doReval@evVal& (0+255),w,b
 15780   0096BC  0800               	sublw	0
 15781   0096BE  0100               	movlb	0	; () banked
 15782   0096C0  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15783   0096C2  0E6F               	movlw	111
 15784   0096C4  EC40  F061         	call	_sendMessage3
 15785   0096C8  0012               	return	
 15786   0096CA                     l22722:
 15787                           
 15788                           ;../../VLCBlib_PIC/event_teach_large.c: 750:     sendMessage3(OPC_CMDERR, nn.bytes.hi, n
      +                          n.bytes.lo, CMDERR_INVALID_EVENT);
 15789   0096CA  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 15790   0096CE  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 15791   0096D2  0E07               	movlw	7
 15792   0096D4  0100               	movlb	0	; () banked
 15793   0096D6  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15794   0096D8  0E6F               	movlw	111
 15795   0096DA  EC40  F061         	call	_sendMessage3
 15796   0096DE  0012               	return		;funcret
 15797   0096E0                     __end_of_doReval:
 15798                           	callstack 0
 15799                           
 15800 ;; *************** function _doReqev *****************
 15801 ;; Defined at:
 15802 ;;		line 781 in file "../../VLCBlib_PIC/event_teach_large.c"
 15803 ;; Parameters:    Size  Location     Type
 15804 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15805 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15806 ;;  evNum           1   18[BANK1 ] unsigned char 
 15807 ;; Auto vars:     Size  Location     Type
 15808 ;;  evVal           2   19[BANK1 ] short 
 15809 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15810 ;; Return value:  Size  Location     Type
 15811 ;;                  1    wreg      void 
 15812 ;; Registers used:
 15813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15814 ;; Tracked objects:
 15815 ;;		On entry : 0/0
 15816 ;;		On exit  : 0/0
 15817 ;;		Unchanged: 0/0
 15818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15819 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15820 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15822 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15823 ;;Total ram usage:        8 bytes
 15824 ;; Hardware stack levels used: 1
 15825 ;; Hardware stack levels required when called: 17
 15826 ;; This function calls:
 15827 ;;		_findEvent
 15828 ;;		_findServiceIndex
 15829 ;;		_getEv
 15830 ;;		_numEv
 15831 ;;		_sendMessage3
 15832 ;;		_sendMessage5
 15833 ;;		_sendMessage6
 15834 ;;		_startTimedResponse
 15835 ;; This function is called by:
 15836 ;;		_teachProcessMessage
 15837 ;; This function uses a non-reentrant model
 15838 ;;
 15839                           
 15840                           	psect	text31
 15841   007CA4                     __ptext31:
 15842                           	callstack 0
 15843   007CA4                     _doReqev:
 15844                           	callstack 11
 15845                           
 15846                           ;../../VLCBlib_PIC/event_teach_large.c: 782:     int16_t evVal;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 784:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15847                           
 15848                           ;incstack = 0
 15849   007CA4  C1CB  F1BD         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15850   007CA8  C1CC  F1BE         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15851   007CAC  C1CD  F1BF         	movff	doReqev@eventNumber,findEvent@eventNumber
 15852   007CB0  C1CE  F1C0         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15853   007CB4  EC00  F053         	call	_findEvent	;wreg free
 15854   007CB8  0101               	movlb	1	; () banked
 15855   007CBA  6FD2               	movwf	doReqev@tableIndex& (0+255),b
 15856                           
 15857                           ; BSR set to: 1
 15858                           ;../../VLCBlib_PIC/event_teach_large.c: 785:     if (tableIndex == 0xff) {
 15859   007CBC  29D2               	incf	doReqev@tableIndex& (0+255),w,b
 15860   007CBE  A4D8               	btfss	status,2,c
 15861   007CC0  D019               	goto	l22616
 15862                           
 15863                           ; BSR set to: 1
 15864                           ;../../VLCBlib_PIC/event_teach_large.c: 786:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INVALID_EVENT);
 15865   007CC2  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 15866   007CC6  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 15867   007CCA  0E07               	movlw	7
 15868   007CCC  0100               	movlb	0	; () banked
 15869   007CCE  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15870   007CD0  0E6F               	movlw	111
 15871   007CD2  EC40  F061         	call	_sendMessage3
 15872                           
 15873                           ;../../VLCBlib_PIC/event_teach_large.c: 788:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15874   007CD6  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 15875   007CDA  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 15876   007CDE  0EB2               	movlw	178
 15877   007CE0  0101               	movlb	1	; () banked
 15878   007CE2  6FC7               	movwf	sendMessage5@data3& (0+255),b
 15879   007CE4  0E04               	movlw	4
 15880   007CE6  6FC8               	movwf	sendMessage5@data4& (0+255),b
 15881   007CE8  0E07               	movlw	7
 15882   007CEA  6FC9               	movwf	sendMessage5@data5& (0+255),b
 15883   007CEC  0EAF               	movlw	175
 15884   007CEE  ECE2  F060         	call	_sendMessage5
 15885   007CF2  0012               	return	
 15886   007CF4                     l22616:
 15887                           
 15888                           ; BSR set to: 1
 15889                           ;../../VLCBlib_PIC/event_teach_large.c: 792:     if (evNum > 20) {
 15890   007CF4  0E14               	movlw	20
 15891   007CF6  65CF               	cpfsgt	doReqev@evNum& (0+255),b
 15892   007CF8  D019               	goto	l22622
 15893                           
 15894                           ; BSR set to: 1
 15895                           ;../../VLCBlib_PIC/event_teach_large.c: 793:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15896   007CFA  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 15897   007CFE  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 15898   007D02  0E06               	movlw	6
 15899   007D04  0100               	movlb	0	; () banked
 15900   007D06  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15901   007D08  0E6F               	movlw	111
 15902   007D0A  EC40  F061         	call	_sendMessage3
 15903                           
 15904                           ;../../VLCBlib_PIC/event_teach_large.c: 795:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15905   007D0E  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 15906   007D12  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 15907   007D16  0EB2               	movlw	178
 15908   007D18  0101               	movlb	1	; () banked
 15909   007D1A  6FC7               	movwf	sendMessage5@data3& (0+255),b
 15910   007D1C  0E04               	movlw	4
 15911   007D1E  6FC8               	movwf	sendMessage5@data4& (0+255),b
 15912   007D20  0E06               	movlw	6
 15913   007D22  6FC9               	movwf	sendMessage5@data5& (0+255),b
 15914   007D24  0EAF               	movlw	175
 15915   007D26  ECE2  F060         	call	_sendMessage5
 15916   007D2A  0012               	return	
 15917   007D2C                     l22622:
 15918                           
 15919                           ; BSR set to: 1
 15920                           ;../../VLCBlib_PIC/event_teach_large.c: 799:     if (evNum == 0) {
 15921   007D2C  51CF               	movf	doReqev@evNum& (0+255),w,b
 15922   007D2E  A4D8               	btfss	status,2,c
 15923   007D30  D020               	goto	l22632
 15924                           
 15925                           ; BSR set to: 1
 15926                           ;../../VLCBlib_PIC/event_teach_large.c: 801:         sendMessage6(OPC_EVANS, nodeNumber>
      +                          >8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15927   007D32  51CC               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15928   007D34  6FC5               	movwf	sendMessage6@data1& (0+255),b
 15929   007D36  C1CB  F1C6         	movff	doReqev@nodeNumber,sendMessage6@data2
 15930   007D3A  51CE               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15931   007D3C  6FC7               	movwf	sendMessage6@data3& (0+255),b
 15932   007D3E  C1CD  F1C8         	movff	doReqev@eventNumber,sendMessage6@data4
 15933   007D42  0E00               	movlw	0
 15934   007D44  6FC9               	movwf	sendMessage6@data5& (0+255),b
 15935   007D46  51D2               	movf	doReqev@tableIndex& (0+255),w,b
 15936   007D48  ECDD  F045         	call	_numEv
 15937   007D4C  0101               	movlb	1	; () banked
 15938   007D4E  6FCA               	movwf	sendMessage6@data6& (0+255),b
 15939   007D50  0ED3               	movlw	211
 15940   007D52  EC9A  F060         	call	_sendMessage6
 15941                           
 15942                           ;../../VLCBlib_PIC/event_teach_large.c: 804:         startTimedResponse(tableIndex, find
      +                          ServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15943   007D56  0E04               	movlw	4
 15944   007D58  ECBE  F057         	call	_findServiceIndex
 15945   007D5C  0100               	movlb	0	; () banked
 15946   007D5E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15947   007D60  0E84               	movlw	low _reqevCallback
 15948   007D62  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15949   007D64  0EA2               	movlw	high _reqevCallback
 15950   007D66  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15951   007D68  0101               	movlb	1	; () banked
 15952   007D6A  51D2               	movf	doReqev@tableIndex& (0+255),w,b
 15953   007D6C  EC15  F05F         	call	_startTimedResponse
 15954   007D70  0012               	return	
 15955   007D72                     l22632:
 15956                           
 15957                           ; BSR set to: 1
 15958                           ;../../VLCBlib_PIC/event_teach_large.c: 811:         evVal = getEv(tableIndex, evNum-1);
 15959   007D72  05CF               	decf	doReqev@evNum& (0+255),w,b
 15960   007D74  0100               	movlb	0	; () banked
 15961   007D76  6F9D               	movwf	getEv@evNum& (0+255),b
 15962   007D78  0101               	movlb	1	; () banked
 15963   007D7A  51D2               	movf	doReqev@tableIndex& (0+255),w,b
 15964   007D7C  ECFD  F03C         	call	_getEv
 15965   007D80  C09D  F1D0         	movff	?_getEv,doReqev@evVal
 15966   007D84  C09E  F1D1         	movff	?_getEv+1,doReqev@evVal+1
 15967                           
 15968                           ;../../VLCBlib_PIC/event_teach_large.c: 813:     if (evVal < 0) {
 15969   007D88  0101               	movlb	1	; () banked
 15970   007D8A  AFD1               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15971   007D8C  D01B               	goto	l22640
 15972                           
 15973                           ; BSR set to: 1
 15974                           ;../../VLCBlib_PIC/event_teach_large.c: 815:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, (uint8_t)(-evVal));
 15975   007D8E  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 15976   007D92  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 15977   007D96  51D0               	movf	doReqev@evVal& (0+255),w,b
 15978   007D98  0800               	sublw	0
 15979   007D9A  0100               	movlb	0	; () banked
 15980   007D9C  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15981   007D9E  0E6F               	movlw	111
 15982   007DA0  EC40  F061         	call	_sendMessage3
 15983                           
 15984                           ;../../VLCBlib_PIC/event_teach_large.c: 817:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15985   007DA4  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 15986   007DA8  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 15987   007DAC  0EB2               	movlw	178
 15988   007DAE  0101               	movlb	1	; () banked
 15989   007DB0  6FC7               	movwf	sendMessage5@data3& (0+255),b
 15990   007DB2  0E04               	movlw	4
 15991   007DB4  6FC8               	movwf	sendMessage5@data4& (0+255),b
 15992   007DB6  51D0               	movf	doReqev@evVal& (0+255),w,b
 15993   007DB8  0800               	sublw	0
 15994   007DBA  6FC9               	movwf	sendMessage5@data5& (0+255),b
 15995   007DBC  0EAF               	movlw	175
 15996   007DBE  ECE2  F060         	call	_sendMessage5
 15997   007DC2  0012               	return	
 15998   007DC4                     l22640:
 15999                           
 16000                           ; BSR set to: 1
 16001                           ;../../VLCBlib_PIC/event_teach_large.c: 822:     sendMessage6(OPC_EVANS, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 16002   007DC4  51CC               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 16003   007DC6  6FC5               	movwf	sendMessage6@data1& (0+255),b
 16004   007DC8  C1CB  F1C6         	movff	doReqev@nodeNumber,sendMessage6@data2
 16005   007DCC  51CE               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 16006   007DCE  6FC7               	movwf	sendMessage6@data3& (0+255),b
 16007   007DD0  C1CD  F1C8         	movff	doReqev@eventNumber,sendMessage6@data4
 16008   007DD4  C1CF  F1C9         	movff	doReqev@evNum,sendMessage6@data5
 16009   007DD8  C1D0  F1CA         	movff	doReqev@evVal,sendMessage6@data6
 16010   007DDC  0ED3               	movlw	211
 16011   007DDE  EC9A  F060         	call	_sendMessage6
 16012   007DE2  0012               	return		;funcret
 16013   007DE4                     __end_of_doReqev:
 16014                           	callstack 0
 16015                           
 16016 ;; *************** function _doNnevn *****************
 16017 ;; Defined at:
 16018 ;;		line 574 in file "../../VLCBlib_PIC/event_teach_large.c"
 16019 ;; Parameters:    Size  Location     Type
 16020 ;;		None
 16021 ;; Auto vars:     Size  Location     Type
 16022 ;;  f               1   13[BANK1 ] struct .
 16023 ;;  i               1   15[BANK1 ] unsigned char 
 16024 ;;  count           1   14[BANK1 ] unsigned char 
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  1    wreg      void 
 16027 ;; Registers used:
 16028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 0/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16035 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16036 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16037 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16038 ;;Total ram usage:        7 bytes
 16039 ;; Hardware stack levels used: 1
 16040 ;; Hardware stack levels required when called: 17
 16041 ;; This function calls:
 16042 ;;		_readNVM
 16043 ;;		_sendMessage3
 16044 ;; This function is called by:
 16045 ;;		_teachProcessMessage
 16046 ;; This function uses a non-reentrant model
 16047 ;;
 16048                           
 16049                           	psect	text32
 16050   00B21A                     __ptext32:
 16051                           	callstack 0
 16052   00B21A                     _doNnevn:
 16053                           	callstack 11
 16054                           
 16055                           ;../../VLCBlib_PIC/event_teach_large.c: 576:     uint8_t count = 0;
 16056                           
 16057                           ;incstack = 0
 16058   00B21A  0E00               	movlw	0
 16059   00B21C  0101               	movlb	1	; () banked
 16060   00B21E  6FCB               	movwf	doNnevn@count& (0+255),b
 16061                           
 16062                           ;../../VLCBlib_PIC/event_teach_large.c: 577:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 578:     for (i=0; i<255; i++) {
 16063   00B220  0E00               	movlw	0
 16064   00B222  6FCC               	movwf	doNnevn@i& (0+255),b
 16065   00B224                     l22658:
 16066                           
 16067                           ; BSR set to: 1
 16068                           ;../../VLCBlib_PIC/event_teach_large.c: 579:         EventTableFlags f;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 580:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*i+0);
 16069   00B224  51CC               	movf	doNnevn@i& (0+255),w,b
 16070   00B226  6FC6               	movwf	??_doNnevn& (0+255),b
 16071   00B228  6BC7               	clrf	(??_doNnevn+1)& (0+255),b
 16072   00B22A  3BC6               	swapf	??_doNnevn& (0+255),f,b
 16073   00B22C  3BC7               	swapf	(??_doNnevn+1)& (0+255),f,b
 16074   00B22E  0EF0               	movlw	240
 16075   00B230  17C7               	andwf	(??_doNnevn+1)& (0+255),f,b
 16076   00B232  51C6               	movf	??_doNnevn& (0+255),w,b
 16077   00B234  0B0F               	andlw	15
 16078   00B236  13C7               	iorwf	(??_doNnevn+1)& (0+255),f,b
 16079   00B238  0EF0               	movlw	240
 16080   00B23A  17C6               	andwf	??_doNnevn& (0+255),f,b
 16081   00B23C  0E80               	movlw	128
 16082   00B23E  25C6               	addwf	??_doNnevn& (0+255),w,b
 16083   00B240  6FC8               	movwf	(??_doNnevn+2)& (0+255),b
 16084   00B242  0EEF               	movlw	239
 16085   00B244  21C7               	addwfc	(??_doNnevn+1)& (0+255),w,b
 16086   00B246  6FC9               	movwf	(??_doNnevn+3)& (0+255),b
 16087   00B248  C1C8  F091         	movff	??_doNnevn+2,readNVM@index
 16088   00B24C  C1C9  F092         	movff	??_doNnevn+3,readNVM@index+1
 16089   00B250  0100               	movlb	0	; () banked
 16090   00B252  6B93               	clrf	(readNVM@index+2)& (0+255),b
 16091   00B254  0E01               	movlw	1
 16092   00B256  ECD1  F05A         	call	_readNVM
 16093   00B25A  0100               	movlb	0	; () banked
 16094   00B25C  5191               	movf	?_readNVM& (0+255),w,b
 16095   00B25E  0101               	movlb	1	; () banked
 16096   00B260  6FCA               	movwf	doNnevn@f& (0+255),b
 16097                           
 16098                           ; BSR set to: 1
 16099                           ;../../VLCBlib_PIC/event_teach_large.c: 581:         if (f.freeEntry) {
 16100   00B262  BFCA               	btfsc	doNnevn@f& (0+255),7,b
 16101                           
 16102                           ; BSR set to: 1
 16103                           ;../../VLCBlib_PIC/event_teach_large.c: 582:             count++;
 16104   00B264  2BCB               	incf	doNnevn@count& (0+255),f,b
 16105                           
 16106                           ; BSR set to: 1
 16107                           ;../../VLCBlib_PIC/event_teach_large.c: 584:     }
 16108                           
 16109                           ;../../VLCBlib_PIC/event_teach_large.c: 583:         }
 16110   00B266  2BCC               	incf	doNnevn@i& (0+255),f,b
 16111                           
 16112                           ; BSR set to: 1
 16113   00B268  29CC               	incf	doNnevn@i& (0+255),w,b
 16114   00B26A  A4D8               	btfss	status,2,c
 16115   00B26C  D7DB               	goto	l22658
 16116                           
 16117                           ; BSR set to: 1
 16118                           ;../../VLCBlib_PIC/event_teach_large.c: 585:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 16119   00B26E  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 16120   00B272  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 16121   00B276  C1CB  F0A8         	movff	doNnevn@count,sendMessage3@data3
 16122   00B27A  0E70               	movlw	112
 16123   00B27C  EC40  F061         	call	_sendMessage3
 16124   00B280  0012               	return		;funcret
 16125   00B282                     __end_of_doNnevn:
 16126                           	callstack 0
 16127                           
 16128 ;; *************** function _doNnclr *****************
 16129 ;; Defined at:
 16130 ;;		line 664 in file "../../VLCBlib_PIC/event_teach_large.c"
 16131 ;; Parameters:    Size  Location     Type
 16132 ;;		None
 16133 ;; Auto vars:     Size  Location     Type
 16134 ;;		None
 16135 ;; Return value:  Size  Location     Type
 16136 ;;                  1    wreg      void 
 16137 ;; Registers used:
 16138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16139 ;; Tracked objects:
 16140 ;;		On entry : 0/0
 16141 ;;		On exit  : 0/0
 16142 ;;		Unchanged: 0/0
 16143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16148 ;;Total ram usage:        0 bytes
 16149 ;; Hardware stack levels used: 1
 16150 ;; Hardware stack levels required when called: 19
 16151 ;; This function calls:
 16152 ;;		_clearAllEvents
 16153 ;;		_sendMessage2
 16154 ;;		_sendMessage5
 16155 ;; This function is called by:
 16156 ;;		_teachProcessMessage
 16157 ;; This function uses a non-reentrant model
 16158 ;;
 16159                           
 16160                           	psect	text33
 16161   00C104                     __ptext33:
 16162                           	callstack 0
 16163   00C104                     _doNnclr:
 16164                           	callstack 9
 16165                           
 16166                           ;../../VLCBlib_PIC/event_teach_large.c: 665:     clearAllEvents();
 16167                           
 16168                           ;incstack = 0
 16169   00C104  EC94  F05C         	call	_clearAllEvents	;wreg free
 16170                           
 16171                           ;../../VLCBlib_PIC/event_teach_large.c: 666:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16172   00C108  C0B6  F0A6         	movff	_nn+1,sendMessage2@data1
 16173   00C10C  C0B5  F0A7         	movff	_nn,sendMessage2@data2
 16174   00C110  0E59               	movlw	89
 16175   00C112  ECB2  F060         	call	_sendMessage2
 16176                           
 16177                           ;../../VLCBlib_PIC/event_teach_large.c: 668:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16178   00C116  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 16179   00C11A  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 16180   00C11E  0E55               	movlw	85
 16181   00C120  0101               	movlb	1	; () banked
 16182   00C122  6FC7               	movwf	sendMessage5@data3& (0+255),b
 16183   00C124  0E04               	movlw	4
 16184   00C126  6FC8               	movwf	sendMessage5@data4& (0+255),b
 16185   00C128  0E00               	movlw	0
 16186   00C12A  6FC9               	movwf	sendMessage5@data5& (0+255),b
 16187   00C12C  0EAF               	movlw	175
 16188   00C12E  ECE2  F060         	call	_sendMessage5
 16189   00C132  0012               	return		;funcret
 16190   00C134                     __end_of_doNnclr:
 16191                           	callstack 0
 16192                           
 16193 ;; *************** function _doNerd *****************
 16194 ;; Defined at:
 16195 ;;		line 593 in file "../../VLCBlib_PIC/event_teach_large.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;		None
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;		None
 16200 ;; Return value:  Size  Location     Type
 16201 ;;                  1    wreg      void 
 16202 ;; Registers used:
 16203 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16204 ;; Tracked objects:
 16205 ;;		On entry : 0/0
 16206 ;;		On exit  : 0/0
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;Total ram usage:        0 bytes
 16214 ;; Hardware stack levels used: 1
 16215 ;; Hardware stack levels required when called: 13
 16216 ;; This function calls:
 16217 ;;		_findServiceIndex
 16218 ;;		_startTimedResponse
 16219 ;; This function is called by:
 16220 ;;		_teachProcessMessage
 16221 ;; This function uses a non-reentrant model
 16222 ;;
 16223                           
 16224                           	psect	text34
 16225   00C6C6                     __ptext34:
 16226                           	callstack 0
 16227   00C6C6                     _doNerd:
 16228                           	callstack 15
 16229                           
 16230                           ;../../VLCBlib_PIC/event_teach_large.c: 594:     startTimedResponse(2, findServiceIndex(
      +                          SERVICE_ID_OLD_TEACH), nerdCallback);
 16231                           
 16232                           ;incstack = 0
 16233   00C6C6  0E04               	movlw	4
 16234   00C6C8  ECBE  F057         	call	_findServiceIndex
 16235   00C6CC  0100               	movlb	0	; () banked
 16236   00C6CE  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 16237   00C6D0  0EEA               	movlw	low _nerdCallback
 16238   00C6D2  6F92               	movwf	startTimedResponse@callback& (0+255),b
 16239   00C6D4  0EB2               	movlw	high _nerdCallback
 16240   00C6D6  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 16241   00C6D8  0E02               	movlw	2
 16242   00C6DA  EC15  F05F         	call	_startTimedResponse
 16243   00C6DE  0012               	return		;funcret
 16244   00C6E0                     __end_of_doNerd:
 16245                           	callstack 0
 16246                           
 16247 ;; *************** function _doNenrd *****************
 16248 ;; Defined at:
 16249 ;;		line 625 in file "../../VLCBlib_PIC/event_teach_large.c"
 16250 ;; Parameters:    Size  Location     Type
 16251 ;;  index           1    wreg     unsigned char 
 16252 ;; Auto vars:     Size  Location     Type
 16253 ;;  index           1   13[BANK1 ] unsigned char 
 16254 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 16255 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 16256 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 16257 ;; Return value:  Size  Location     Type
 16258 ;;                  1    wreg      void 
 16259 ;; Registers used:
 16260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16261 ;; Tracked objects:
 16262 ;;		On entry : 0/0
 16263 ;;		On exit  : 0/0
 16264 ;;		Unchanged: 0/0
 16265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16267 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16269 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16270 ;;Total ram usage:        6 bytes
 16271 ;; Hardware stack levels used: 1
 16272 ;; Hardware stack levels required when called: 17
 16273 ;; This function calls:
 16274 ;;		_evtIdxToTableIndex
 16275 ;;		_getEN
 16276 ;;		_getNN
 16277 ;;		_sendMessage3
 16278 ;;		_sendMessage5
 16279 ;;		_validStart
 16280 ;; This function is called by:
 16281 ;;		_teachProcessMessage
 16282 ;; This function uses a non-reentrant model
 16283 ;;
 16284                           
 16285                           	psect	text35
 16286   00B0D2                     __ptext35:
 16287                           	callstack 0
 16288   00B0D2                     _doNenrd:
 16289                           	callstack 11
 16290                           
 16291                           ;incstack = 0
 16292                           ;doNenrd@index stored from wreg
 16293   00B0D2  0101               	movlb	1	; () banked
 16294   00B0D4  6FCA               	movwf	doNenrd@index& (0+255),b
 16295                           
 16296                           ;../../VLCBlib_PIC/event_teach_large.c: 626:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 627:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 629:     tableIndex = evtIdxToTableIndex(index);
 16297   00B0D6  0101               	movlb	1	; () banked
 16298   00B0D8  51CA               	movf	doNenrd@index& (0+255),w,b
 16299   00B0DA  EC01  F064         	call	_evtIdxToTableIndex
 16300   00B0DE  0101               	movlb	1	; () banked
 16301   00B0E0  6FCF               	movwf	doNenrd@tableIndex& (0+255),b
 16302                           
 16303                           ; BSR set to: 1
 16304                           ;../../VLCBlib_PIC/event_teach_large.c: 631:     if ( ! validStart(tableIndex)) {
 16305   00B0E2  51CF               	movf	doNenrd@tableIndex& (0+255),w,b
 16306   00B0E4  EC3A  F05D         	call	_validStart
 16307   00B0E8  0900               	iorlw	0
 16308   00B0EA  A4D8               	btfss	status,2,c
 16309   00B0EC  D00B               	goto	l22690
 16310                           
 16311                           ;../../VLCBlib_PIC/event_teach_large.c: 632:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EN_IDX);
 16312   00B0EE  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 16313   00B0F2  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 16314   00B0F6  0E08               	movlw	8
 16315   00B0F8  0100               	movlb	0	; () banked
 16316   00B0FA  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16317   00B0FC  0E6F               	movlw	111
 16318   00B0FE  EC40  F061         	call	_sendMessage3
 16319   00B102  0012               	return	
 16320   00B104                     l22690:
 16321                           
 16322                           ;../../VLCBlib_PIC/event_teach_large.c: 638:     nodeNumber = getNN(tableIndex);
 16323   00B104  0101               	movlb	1	; () banked
 16324   00B106  51CF               	movf	doNenrd@tableIndex& (0+255),w,b
 16325   00B108  ECB0  F04A         	call	_getNN
 16326   00B10C  C097  F1CB         	movff	?_getNN,doNenrd@nodeNumber
 16327   00B110  C098  F1CC         	movff	?_getNN+1,doNenrd@nodeNumber+1
 16328                           
 16329                           ;../../VLCBlib_PIC/event_teach_large.c: 639:     eventNumber = getEN(tableIndex);
 16330   00B114  0101               	movlb	1	; () banked
 16331   00B116  51CF               	movf	doNenrd@tableIndex& (0+255),w,b
 16332   00B118  EC9A  F056         	call	_getEN
 16333   00B11C  C097  F1CD         	movff	?_getEN,doNenrd@eventNumber
 16334   00B120  C098  F1CE         	movff	?_getEN+1,doNenrd@eventNumber+1
 16335                           
 16336                           ;../../VLCBlib_PIC/event_teach_large.c: 640:     sendMessage5(OPC_ENRSP, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 16337   00B124  0101               	movlb	1	; () banked
 16338   00B126  51CC               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 16339   00B128  6FC5               	movwf	sendMessage5@data1& (0+255),b
 16340   00B12A  C1CB  F1C6         	movff	doNenrd@nodeNumber,sendMessage5@data2
 16341   00B12E  51CE               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 16342   00B130  6FC7               	movwf	sendMessage5@data3& (0+255),b
 16343   00B132  C1CD  F1C8         	movff	doNenrd@eventNumber,sendMessage5@data4
 16344   00B136  C1CA  F1C9         	movff	doNenrd@index,sendMessage5@data5
 16345   00B13A  0EF2               	movlw	242
 16346   00B13C  ECE2  F060         	call	_sendMessage5
 16347   00B140  0012               	return		;funcret
 16348   00B142                     __end_of_doNenrd:
 16349                           	callstack 0
 16350                           
 16351 ;; *************** function _evtIdxToTableIndex *****************
 16352 ;; Defined at:
 16353 ;;		line 1263 in file "../../VLCBlib_PIC/event_teach_large.c"
 16354 ;; Parameters:    Size  Location     Type
 16355 ;;  evtIdx          1    wreg     unsigned char 
 16356 ;; Auto vars:     Size  Location     Type
 16357 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 16358 ;; Return value:  Size  Location     Type
 16359 ;;                  1    wreg      unsigned char 
 16360 ;; Registers used:
 16361 ;;		wreg, status,2, status,0
 16362 ;; Tracked objects:
 16363 ;;		On entry : 0/0
 16364 ;;		On exit  : 0/0
 16365 ;;		Unchanged: 0/0
 16366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16370 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16371 ;;Total ram usage:        1 bytes
 16372 ;; Hardware stack levels used: 1
 16373 ;; Hardware stack levels required when called: 12
 16374 ;; This function calls:
 16375 ;;		Nothing
 16376 ;; This function is called by:
 16377 ;;		_doNenrd
 16378 ;;		_doReval
 16379 ;; This function uses a non-reentrant model
 16380 ;;
 16381                           
 16382                           	psect	text36
 16383   00C802                     __ptext36:
 16384                           	callstack 0
 16385   00C802                     _evtIdxToTableIndex:
 16386                           	callstack 15
 16387                           
 16388                           ;incstack = 0
 16389                           ;evtIdxToTableIndex@evtIdx stored from wreg
 16390   00C802  0100               	movlb	0	; () banked
 16391   00C804  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 16392                           
 16393                           ;../../VLCBlib_PIC/event_teach_large.c: 1264:     return evtIdx - 1;
 16394   00C806  0100               	movlb	0	; () banked
 16395   00C808  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 16396                           
 16397                           ; BSR set to: 0
 16398   00C80A  0012               	return		;funcret
 16399   00C80C                     __end_of_evtIdxToTableIndex:
 16400                           	callstack 0
 16401                           
 16402 ;; *************** function _doEvuln *****************
 16403 ;; Defined at:
 16404 ;;		line 758 in file "../../VLCBlib_PIC/event_teach_large.c"
 16405 ;; Parameters:    Size  Location     Type
 16406 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 16407 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 16408 ;; Auto vars:     Size  Location     Type
 16409 ;;  result          1   24[BANK1 ] unsigned char 
 16410 ;; Return value:  Size  Location     Type
 16411 ;;                  1    wreg      void 
 16412 ;; Registers used:
 16413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16414 ;; Tracked objects:
 16415 ;;		On entry : 0/0
 16416 ;;		On exit  : 0/0
 16417 ;;		Unchanged: 0/0
 16418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16419 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16420 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16422 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16423 ;;Total ram usage:        5 bytes
 16424 ;; Hardware stack levels used: 1
 16425 ;; Hardware stack levels required when called: 20
 16426 ;; This function calls:
 16427 ;;		_removeEvent
 16428 ;;		_sendMessage2
 16429 ;;		_sendMessage3
 16430 ;;		_sendMessage5
 16431 ;; This function is called by:
 16432 ;;		_teachProcessMessage
 16433 ;; This function uses a non-reentrant model
 16434 ;;
 16435                           
 16436                           	psect	text37
 16437   00ACBA                     __ptext37:
 16438                           	callstack 0
 16439   00ACBA                     _doEvuln:
 16440                           	callstack 8
 16441                           
 16442                           ;../../VLCBlib_PIC/event_teach_large.c: 759:     uint8_t result;;../../VLCBlib_PIC/event
      +                          _teach_large.c: 760:     result = removeEvent(nodeNumber, eventNumber);
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;incstack = 0
 16446   00ACBA  C1D1  F1CC         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16447   00ACBE  C1D2  F1CD         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16448   00ACC2  C1D3  F1CE         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16449   00ACC6  C1D4  F1CF         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16450   00ACCA  EC9A  F061         	call	_removeEvent	;wreg free
 16451   00ACCE  0101               	movlb	1	; () banked
 16452   00ACD0  6FD5               	movwf	doEvuln@result& (0+255),b
 16453                           
 16454                           ; BSR set to: 1
 16455                           ;../../VLCBlib_PIC/event_teach_large.c: 761:     if (result) {
 16456   00ACD2  51D5               	movf	doEvuln@result& (0+255),w,b
 16457   00ACD4  B4D8               	btfsc	status,2,c
 16458   00ACD6  D018               	goto	l22606
 16459                           
 16460                           ; BSR set to: 1
 16461                           ;../../VLCBlib_PIC/event_teach_large.c: 762:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, result);
 16462   00ACD8  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 16463   00ACDC  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 16464   00ACE0  C1D5  F0A8         	movff	doEvuln@result,sendMessage3@data3
 16465   00ACE4  0E6F               	movlw	111
 16466   00ACE6  EC40  F061         	call	_sendMessage3
 16467                           
 16468                           ;../../VLCBlib_PIC/event_teach_large.c: 764:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16469   00ACEA  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 16470   00ACEE  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 16471   00ACF2  0E95               	movlw	149
 16472   00ACF4  0101               	movlb	1	; () banked
 16473   00ACF6  6FC7               	movwf	sendMessage5@data3& (0+255),b
 16474   00ACF8  0E04               	movlw	4
 16475   00ACFA  6FC8               	movwf	sendMessage5@data4& (0+255),b
 16476   00ACFC  C1D5  F1C9         	movff	doEvuln@result,sendMessage5@data5
 16477   00AD00  0EAF               	movlw	175
 16478   00AD02  ECE2  F060         	call	_sendMessage5
 16479   00AD06  0012               	return	
 16480   00AD08                     l22606:
 16481                           
 16482                           ; BSR set to: 1
 16483                           ;../../VLCBlib_PIC/event_teach_large.c: 769:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16484   00AD08  C0B6  F0A6         	movff	_nn+1,sendMessage2@data1
 16485   00AD0C  C0B5  F0A7         	movff	_nn,sendMessage2@data2
 16486   00AD10  0E59               	movlw	89
 16487   00AD12  ECB2  F060         	call	_sendMessage2
 16488                           
 16489                           ;../../VLCBlib_PIC/event_teach_large.c: 771:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16490   00AD16  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 16491   00AD1A  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 16492   00AD1E  0E95               	movlw	149
 16493   00AD20  0101               	movlb	1	; () banked
 16494   00AD22  6FC7               	movwf	sendMessage5@data3& (0+255),b
 16495   00AD24  0E04               	movlw	4
 16496   00AD26  6FC8               	movwf	sendMessage5@data4& (0+255),b
 16497   00AD28  0E00               	movlw	0
 16498   00AD2A  6FC9               	movwf	sendMessage5@data5& (0+255),b
 16499   00AD2C  0EAF               	movlw	175
 16500   00AD2E  ECE2  F060         	call	_sendMessage5
 16501   00AD32  0012               	return		;funcret
 16502   00AD34                     __end_of_doEvuln:
 16503                           	callstack 0
 16504                           
 16505 ;; *************** function _removeEvent *****************
 16506 ;; Defined at:
 16507 ;;		line 859 in file "../../VLCBlib_PIC/event_teach_large.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16510 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16511 ;; Auto vars:     Size  Location     Type
 16512 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16513 ;; Return value:  Size  Location     Type
 16514 ;;                  1    wreg      unsigned char 
 16515 ;; Registers used:
 16516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16517 ;; Tracked objects:
 16518 ;;		On entry : 0/0
 16519 ;;		On exit  : 0/0
 16520 ;;		Unchanged: 0/0
 16521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16522 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16523 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16525 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16526 ;;Total ram usage:        5 bytes
 16527 ;; Hardware stack levels used: 1
 16528 ;; Hardware stack levels required when called: 19
 16529 ;; This function calls:
 16530 ;;		_findEvent
 16531 ;;		_removeTableEntry
 16532 ;; This function is called by:
 16533 ;;		_doEvuln
 16534 ;; This function uses a non-reentrant model
 16535 ;;
 16536                           
 16537                           	psect	text38
 16538   00C334                     __ptext38:
 16539                           	callstack 0
 16540   00C334                     _removeEvent:
 16541                           	callstack 8
 16542                           
 16543                           ;../../VLCBlib_PIC/event_teach_large.c: 861:     uint8_t tableIndex = findEvent(nodeNumb
      +                          er, eventNumber);
 16544                           
 16545                           ;incstack = 0
 16546   00C334  C1CC  F1BD         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16547   00C338  C1CD  F1BE         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16548   00C33C  C1CE  F1BF         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16549   00C340  C1CF  F1C0         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16550   00C344  EC00  F053         	call	_findEvent	;wreg free
 16551   00C348  0101               	movlb	1	; () banked
 16552   00C34A  6FD0               	movwf	removeEvent@tableIndex& (0+255),b
 16553                           
 16554                           ; BSR set to: 1
 16555                           ;../../VLCBlib_PIC/event_teach_large.c: 862:     if (tableIndex == 0xff) return CMDERR_I
      +                          NVALID_EVENT;
 16556   00C34C  29D0               	incf	removeEvent@tableIndex& (0+255),w,b
 16557   00C34E  A4D8               	btfss	status,2,c
 16558   00C350  D002               	goto	l21348
 16559                           
 16560                           ; BSR set to: 1
 16561   00C352  0E07               	movlw	7
 16562   00C354  0012               	return	
 16563   00C356                     l21348:
 16564                           
 16565                           ; BSR set to: 1
 16566                           ;../../VLCBlib_PIC/event_teach_large.c: 864:     return removeTableEntry(tableIndex);
 16567   00C356  51D0               	movf	removeEvent@tableIndex& (0+255),w,b
 16568   00C358  ECA8  F03D         	call	_removeTableEntry
 16569   00C35C  0012               	return		;funcret
 16570   00C35E                     __end_of_removeEvent:
 16571                           	callstack 0
 16572                           
 16573 ;; *************** function _doEvlrn *****************
 16574 ;; Defined at:
 16575 ;;		line 681 in file "../../VLCBlib_PIC/event_teach_large.c"
 16576 ;; Parameters:    Size  Location     Type
 16577 ;;  nodeNumber      2   52[BANK1 ] unsigned short 
 16578 ;;  eventNumber     2   54[BANK1 ] unsigned short 
 16579 ;;  evNum           1   56[BANK1 ] unsigned char 
 16580 ;;  evVal           1   57[BANK1 ] unsigned char 
 16581 ;; Auto vars:     Size  Location     Type
 16582 ;;  error           1   58[BANK1 ] unsigned char 
 16583 ;; Return value:  Size  Location     Type
 16584 ;;                  1    wreg      void 
 16585 ;; Registers used:
 16586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16587 ;; Tracked objects:
 16588 ;;		On entry : 0/0
 16589 ;;		On exit  : 0/0
 16590 ;;		Unchanged: 0/0
 16591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16592 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16593 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16595 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16596 ;;Total ram usage:        7 bytes
 16597 ;; Hardware stack levels used: 1
 16598 ;; Hardware stack levels required when called: 23
 16599 ;; This function calls:
 16600 ;;		_APP_addEvent
 16601 ;;		_sendMessage2
 16602 ;;		_sendMessage3
 16603 ;;		_sendMessage5
 16604 ;; This function is called by:
 16605 ;;		_teachProcessMessage
 16606 ;; This function uses a non-reentrant model
 16607 ;;
 16608                           
 16609                           	psect	text39
 16610   0093D6                     __ptext39:
 16611                           	callstack 0
 16612   0093D6                     _doEvlrn:
 16613                           	callstack 5
 16614                           
 16615                           ;../../VLCBlib_PIC/event_teach_large.c: 682:     uint8_t error;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 683:     evNum--;
 16616                           
 16617                           ;incstack = 0
 16618   0093D6  0101               	movlb	1	; () banked
 16619   0093D8  07F5               	decf	doEvlrn@evNum& (0+255),f,b
 16620                           
 16621                           ; BSR set to: 1
 16622                           ;../../VLCBlib_PIC/event_teach_large.c: 684:     if (evNum >= 20) {
 16623   0093DA  0E13               	movlw	19
 16624   0093DC  65F5               	cpfsgt	doEvlrn@evNum& (0+255),b
 16625   0093DE  D019               	goto	l22582
 16626                           
 16627                           ; BSR set to: 1
 16628                           ;../../VLCBlib_PIC/event_teach_large.c: 685:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 16629   0093E0  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 16630   0093E4  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 16631   0093E8  0E06               	movlw	6
 16632   0093EA  0100               	movlb	0	; () banked
 16633   0093EC  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16634   0093EE  0E6F               	movlw	111
 16635   0093F0  EC40  F061         	call	_sendMessage3
 16636                           
 16637                           ;../../VLCBlib_PIC/event_teach_large.c: 687:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16638   0093F4  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 16639   0093F8  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 16640   0093FC  0ED2               	movlw	210
 16641   0093FE  0101               	movlb	1	; () banked
 16642   009400  6FC7               	movwf	sendMessage5@data3& (0+255),b
 16643   009402  0E04               	movlw	4
 16644   009404  6FC8               	movwf	sendMessage5@data4& (0+255),b
 16645   009406  0E06               	movlw	6
 16646   009408  6FC9               	movwf	sendMessage5@data5& (0+255),b
 16647   00940A  0EAF               	movlw	175
 16648   00940C  ECE2  F060         	call	_sendMessage5
 16649   009410  0012               	return	
 16650   009412                     l22582:
 16651                           
 16652                           ; BSR set to: 1
 16653                           ;../../VLCBlib_PIC/event_teach_large.c: 694:     error = APP_addEvent(nodeNumber, eventN
      +                          umber, evNum, evVal, FALSE);
 16654   009412  C1F1  F1E9         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16655   009416  C1F2  F1EA         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16656   00941A  C1F3  F1EB         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16657   00941E  C1F4  F1EC         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16658   009422  C1F5  F1ED         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16659   009426  C1F6  F1EE         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16660   00942A  0E00               	movlw	0
 16661   00942C  6FEF               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16662   00942E  ECA1  F058         	call	_APP_addEvent	;wreg free
 16663   009432  0101               	movlb	1	; () banked
 16664   009434  6FF7               	movwf	doEvlrn@error& (0+255),b
 16665                           
 16666                           ; BSR set to: 1
 16667                           ;../../VLCBlib_PIC/event_teach_large.c: 695:     if (error) {
 16668   009436  51F7               	movf	doEvlrn@error& (0+255),w,b
 16669   009438  B4D8               	btfsc	status,2,c
 16670   00943A  D018               	goto	l22590
 16671                           
 16672                           ; BSR set to: 1
 16673                           ;../../VLCBlib_PIC/event_teach_large.c: 697:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, error);
 16674   00943C  C0B6  F0A6         	movff	_nn+1,sendMessage3@data1
 16675   009440  C0B5  F0A7         	movff	_nn,sendMessage3@data2
 16676   009444  C1F7  F0A8         	movff	doEvlrn@error,sendMessage3@data3
 16677   009448  0E6F               	movlw	111
 16678   00944A  EC40  F061         	call	_sendMessage3
 16679                           
 16680                           ;../../VLCBlib_PIC/event_teach_large.c: 699:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16681   00944E  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 16682   009452  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 16683   009456  0ED2               	movlw	210
 16684   009458  0101               	movlb	1	; () banked
 16685   00945A  6FC7               	movwf	sendMessage5@data3& (0+255),b
 16686   00945C  0E04               	movlw	4
 16687   00945E  6FC8               	movwf	sendMessage5@data4& (0+255),b
 16688   009460  C1F7  F1C9         	movff	doEvlrn@error,sendMessage5@data5
 16689   009464  0EAF               	movlw	175
 16690   009466  ECE2  F060         	call	_sendMessage5
 16691   00946A  0012               	return	
 16692   00946C                     l22590:
 16693                           
 16694                           ; BSR set to: 1
 16695                           ;../../VLCBlib_PIC/event_teach_large.c: 704:     teachDiagnostics[0x01].asUint++;
 16696   00946C  4BB3               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 16697   00946E  2BB4               	incf	(_teachDiagnostics+3)& (0+255),f,b
 16698                           
 16699                           ; BSR set to: 1
 16700                           ;../../VLCBlib_PIC/event_teach_large.c: 706:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16701   009470  C0B6  F0A6         	movff	_nn+1,sendMessage2@data1
 16702   009474  C0B5  F0A7         	movff	_nn,sendMessage2@data2
 16703   009478  0E59               	movlw	89
 16704   00947A  ECB2  F060         	call	_sendMessage2
 16705                           
 16706                           ;../../VLCBlib_PIC/event_teach_large.c: 708:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16707   00947E  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 16708   009482  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 16709   009486  0ED2               	movlw	210
 16710   009488  0101               	movlb	1	; () banked
 16711   00948A  6FC7               	movwf	sendMessage5@data3& (0+255),b
 16712   00948C  0E04               	movlw	4
 16713   00948E  6FC8               	movwf	sendMessage5@data4& (0+255),b
 16714   009490  0E00               	movlw	0
 16715   009492  6FC9               	movwf	sendMessage5@data5& (0+255),b
 16716   009494  0EAF               	movlw	175
 16717   009496  ECE2  F060         	call	_sendMessage5
 16718   00949A  0012               	return		;funcret
 16719   00949C                     __end_of_doEvlrn:
 16720                           	callstack 0
 16721                           
 16722 ;; *************** function _APP_addEvent *****************
 16723 ;; Defined at:
 16724 ;;		line 195 in file "../universalEvents.c"
 16725 ;; Parameters:    Size  Location     Type
 16726 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16727 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16728 ;;  evNum           1   48[BANK1 ] unsigned char 
 16729 ;;  evVal           1   49[BANK1 ] unsigned char 
 16730 ;;  forceOwnNN      1   50[BANK1 ] enum E12767
 16731 ;; Auto vars:     Size  Location     Type
 16732 ;;  tableIndex      1   51[BANK1 ] unsigned char 
 16733 ;; Return value:  Size  Location     Type
 16734 ;;                  1    wreg      unsigned char 
 16735 ;; Registers used:
 16736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16737 ;; Tracked objects:
 16738 ;;		On entry : 0/0
 16739 ;;		On exit  : 0/0
 16740 ;;		Unchanged: 0/0
 16741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16742 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16743 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16745 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16746 ;;Total ram usage:        8 bytes
 16747 ;; Hardware stack levels used: 1
 16748 ;; Hardware stack levels required when called: 22
 16749 ;; This function calls:
 16750 ;;		_addEvent
 16751 ;;		_checkRemoveTableEntry
 16752 ;;		_rebuildHashtable
 16753 ;;		_writeEv
 16754 ;; This function is called by:
 16755 ;;		_doEvlrn
 16756 ;; This function uses a non-reentrant model
 16757 ;;
 16758                           
 16759                           	psect	text40
 16760   00B142                     __ptext40:
 16761                           	callstack 0
 16762   00B142                     _APP_addEvent:
 16763                           	callstack 5
 16764                           
 16765                           ;../universalEvents.c: 197:     if ((evNum == 0) && (evVal != 0))
 16766                           
 16767                           ;incstack = 0
 16768   00B142  0101               	movlb	1	; () banked
 16769   00B144  51ED               	movf	APP_addEvent@evNum& (0+255),w,b
 16770   00B146  A4D8               	btfss	status,2,c
 16771   00B148  D021               	goto	l654
 16772                           
 16773                           ; BSR set to: 1
 16774   00B14A  51EE               	movf	APP_addEvent@evVal& (0+255),w,b
 16775   00B14C  B4D8               	btfsc	status,2,c
 16776   00B14E  D01E               	goto	l654
 16777                           
 16778                           ; BSR set to: 1
 16779                           ;../universalEvents.c: 198:     {;../universalEvents.c: 200:         if ((evVal >= 1) &&
      +                           (evVal <= (7+16*4))) {
 16780   00B150  51EE               	movf	APP_addEvent@evVal& (0+255),w,b
 16781   00B152  B4D8               	btfsc	status,2,c
 16782   00B154  D01B               	goto	l654
 16783                           
 16784                           ; BSR set to: 1
 16785   00B156  0E48               	movlw	72
 16786   00B158  61EE               	cpfslt	APP_addEvent@evVal& (0+255),b
 16787   00B15A  D018               	goto	l654
 16788                           
 16789                           ; BSR set to: 1
 16790                           ;../universalEvents.c: 201:             uint8_t tableIndex = happening2Event[evVal-1];
 16791   00B15C  0EFF               	movlw	low (_happening2Event+65535)
 16792   00B15E  25EE               	addwf	APP_addEvent@evVal& (0+255),w,b
 16793   00B160  6ED9               	movwf	fsr2l,c
 16794   00B162  6ADA               	clrf	fsr2h,c
 16795   00B164  0E02               	movlw	high (_happening2Event+65535)
 16796   00B166  22DA               	addwfc	fsr2h,f,c
 16797   00B168  50DF               	movf	indf2,w,c
 16798   00B16A  6FF0               	movwf	APP_addEvent@tableIndex& (0+255),b
 16799                           
 16800                           ; BSR set to: 1
 16801                           ;../universalEvents.c: 202:             if (tableIndex != 0xff) {
 16802   00B16C  29F0               	incf	APP_addEvent@tableIndex& (0+255),w,b
 16803   00B16E  B4D8               	btfsc	status,2,c
 16804   00B170  D00D               	goto	l654
 16805                           
 16806                           ; BSR set to: 1
 16807                           ;../universalEvents.c: 205:                 writeEv(tableIndex, 0, 0);
 16808   00B172  0E00               	movlw	0
 16809   00B174  6FCE               	movwf	writeEv@evNum& (0+255),b
 16810   00B176  0E00               	movlw	0
 16811   00B178  6FCF               	movwf	writeEv@evVal& (0+255),b
 16812   00B17A  51F0               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16813   00B17C  EC66  F01B         	call	_writeEv
 16814                           
 16815                           ;../universalEvents.c: 206:                 checkRemoveTableEntry(tableIndex);
 16816   00B180  0101               	movlb	1	; () banked
 16817   00B182  51F0               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16818   00B184  EC8B  F05E         	call	_checkRemoveTableEntry
 16819                           
 16820                           ;../universalEvents.c: 208:                 rebuildHashtable();
 16821   00B188  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 16822   00B18C                     l654:
 16823                           
 16824                           ;../universalEvents.c: 213:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16825   00B18C  C1E9  F1DA         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16826   00B190  C1EA  F1DB         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16827   00B194  C1EB  F1DC         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16828   00B198  C1EC  F1DD         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16829   00B19C  C1ED  F1DE         	movff	APP_addEvent@evNum,addEvent@evNum
 16830   00B1A0  C1EE  F1DF         	movff	APP_addEvent@evVal,addEvent@evVal
 16831   00B1A4  C1EF  F1E0         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16832   00B1A8  ECE5  F032         	call	_addEvent	;wreg free
 16833   00B1AC  0012               	return		;funcret
 16834   00B1AE                     __end_of_APP_addEvent:
 16835                           	callstack 0
 16836                           
 16837 ;; *************** function _pollTimedResponse *****************
 16838 ;; Defined at:
 16839 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16840 ;; Parameters:    Size  Location     Type
 16841 ;;		None
 16842 ;; Auto vars:     Size  Location     Type
 16843 ;;  result          1   43[BANK1 ] enum E12928
 16844 ;; Return value:  Size  Location     Type
 16845 ;;                  1    wreg      void 
 16846 ;; Registers used:
 16847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16848 ;; Tracked objects:
 16849 ;;		On entry : 0/0
 16850 ;;		On exit  : 0/0
 16851 ;;		Unchanged: 0/0
 16852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16854 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16855 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16856 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16857 ;;Total ram usage:        3 bytes
 16858 ;; Hardware stack levels used: 1
 16859 ;; Hardware stack levels required when called: 20
 16860 ;; This function calls:
 16861 ;;		NULL
 16862 ;;		_mnsTRallDiagnosticsCallback
 16863 ;;		_mnsTRrqnpnCallback
 16864 ;;		_mnsTRserviceDiscoveryCallback
 16865 ;;		_nerdCallback
 16866 ;;		_nvTRnvrdCallback
 16867 ;;		_reqevCallback
 16868 ;;		_sodTRCallback
 16869 ;; This function is called by:
 16870 ;;		_poll
 16871 ;; This function uses a non-reentrant model
 16872 ;;
 16873                           
 16874                           	psect	text41
 16875   00ABC2                     __ptext41:
 16876                           	callstack 0
 16877   00ABC2                     _pollTimedResponse:
 16878                           	callstack 9
 16879                           
 16880                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16881                           
 16882                           ;incstack = 0
 16883   00ABC2  0100               	movlb	0	; () banked
 16884   00ABC4  29BC               	incf	_timedResponseType& (0+255),w,b
 16885   00ABC6  B4D8               	btfsc	status,2,c
 16886   00ABC8  0012               	return	
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16890   00ABCA  51AD               	movf	_timedResponseCallback& (0+255),w,b
 16891   00ABCC  11AE               	iorwf	(_timedResponseCallback+1)& (0+255),w,b
 16892   00ABCE  A4D8               	btfss	status,2,c
 16893   00ABD0  D002               	goto	l24200
 16894   00ABD2                     u26030:
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16898   00ABD2  69BC               	setf	_timedResponseType& (0+255),b
 16899                           
 16900                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16901   00ABD4  0012               	return	
 16902   00ABD6                     l24200:
 16903                           
 16904                           ; BSR set to: 0
 16905                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16906   00ABD6  D801               	call	u26048
 16907   00ABD8  D00E               	goto	u26049
 16908   00ABDA                     u26048:
 16909   00ABDA  0005               	push	
 16910   00ABDC  6EFA               	movwf	pclath,c
 16911   00ABDE  51AD               	movf	_timedResponseCallback& (0+255),w,b
 16912   00ABE0  6EFD               	movwf	tosl,c
 16913   00ABE2  51AE               	movf	(_timedResponseCallback+1)& (0+255),w,b
 16914   00ABE4  6EFE               	movwf	tosh,c
 16915   00ABE6  6AFF               	clrf	tosu,c
 16916   00ABE8  50FA               	movf	pclath,w,c
 16917   00ABEA  C0BE  F1D7         	movff	_timedResponseServiceIndex,reqevCallback@serviceIndex
 16918   00ABEE  C0BB  F1D8         	movff	_timedResponseStep,reqevCallback@step
 16919   00ABF2  51BC               	movf	_timedResponseType& (0+255),w,b
 16920   00ABF4  0012               	return		;indir
 16921   00ABF6                     u26049:
 16922   00ABF6  0101               	movlb	1	; () banked
 16923   00ABF8  6FE8               	movwf	pollTimedResponse@result& (0+255),b
 16924                           
 16925                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16926   00ABFA  D00F               	goto	l24216
 16927   00ABFC                     l24202:
 16928                           
 16929                           ; BSR set to: 1
 16930                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16931   00ABFC  0100               	movlb	0	; () banked
 16932   00ABFE  51BD               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 16933   00AC00  B4D8               	btfsc	status,2,c
 16934   00AC02  D7E7               	goto	u26030
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16938   00AC04  2BBE               	incf	_timedResponseServiceIndex& (0+255),f,b
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16942   00AC06  0E08               	movlw	8
 16943   00AC08  65BE               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16944   00AC0A  D001               	goto	l24210
 16945   00AC0C  D7E2               	goto	u26030
 16946   00AC0E                     l24210:
 16947                           
 16948                           ; BSR set to: 0
 16949                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16950   00AC0E  0E00               	movlw	0
 16951   00AC10  6FBB               	movwf	_timedResponseStep& (0+255),b
 16952   00AC12  0012               	return	
 16953   00AC14                     l24212:
 16954                           
 16955                           ; BSR set to: 1
 16956                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16957   00AC14  0100               	movlb	0	; () banked
 16958   00AC16  2BBB               	incf	_timedResponseStep& (0+255),f,b
 16959                           
 16960                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16961   00AC18  0012               	return	
 16962   00AC1A                     l24216:
 16963                           
 16964                           ; BSR set to: 1
 16965   00AC1A  51E8               	movf	pollTimedResponse@result& (0+255),w,b
 16966   00AC1C  6FE6               	movwf	??_pollTimedResponse& (0+255),b
 16967   00AC1E  6BE7               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16968                           
 16969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16970                           ; Switch size 1, requested type "simple"
 16971                           ; Number of cases is 1, Range of values is 0 to 0
 16972                           ; switch strategies available:
 16973                           ; Name         Instructions Cycles
 16974                           ; simple_byte            4     3 (average)
 16975                           ;	Chosen strategy is simple_byte
 16976   00AC20  51E7               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16977   00AC22  0A00               	xorlw	0	; case 0
 16978   00AC24  A4D8               	btfss	status,2,c
 16979   00AC26  0012               	return	
 16980                           
 16981                           ; BSR set to: 1
 16982                           ; Switch size 1, requested type "simple"
 16983                           ; Number of cases is 3, Range of values is 0 to 2
 16984                           ; switch strategies available:
 16985                           ; Name         Instructions Cycles
 16986                           ; simple_byte           10     6 (average)
 16987                           ;	Chosen strategy is simple_byte
 16988   00AC28  51E6               	movf	??_pollTimedResponse& (0+255),w,b
 16989   00AC2A  0A00               	xorlw	0	; case 0
 16990   00AC2C  B4D8               	btfsc	status,2,c
 16991   00AC2E  D7E6               	goto	l24202
 16992   00AC30  0A01               	xorlw	1	; case 1
 16993   00AC32  B4D8               	btfsc	status,2,c
 16994   00AC34  0012               	return	
 16995   00AC36  0A03               	xorlw	3	; case 2
 16996   00AC38  A4D8               	btfss	status,2,c
 16997   00AC3A  0012               	return	
 16998   00AC3C  D7EB               	goto	l24212
 16999   00AC3E                     __end_of_pollTimedResponse:
 17000                           	callstack 0
 17001                           
 17002 ;; *************** function _reqevCallback *****************
 17003 ;; Defined at:
 17004 ;;		line 832 in file "../../VLCBlib_PIC/event_teach_large.c"
 17005 ;; Parameters:    Size  Location     Type
 17006 ;;  tableIndex      1    wreg     unsigned char 
 17007 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17008 ;;  step            1   27[BANK1 ] unsigned char 
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;  tableIndex      1   40[BANK1 ] unsigned char 
 17011 ;;  eventNumber     2   38[BANK1 ] struct Word
 17012 ;;  nodeNumber      2   36[BANK1 ] struct Word
 17013 ;;  ev              2   34[BANK1 ] short 
 17014 ;;  nEv             1   33[BANK1 ] unsigned char 
 17015 ;; Return value:  Size  Location     Type
 17016 ;;                  1    wreg      enum E12935
 17017 ;; Registers used:
 17018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17019 ;; Tracked objects:
 17020 ;;		On entry : 0/0
 17021 ;;		On exit  : 0/0
 17022 ;;		Unchanged: 0/0
 17023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17024 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17025 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17026 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17027 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17028 ;;Total ram usage:       15 bytes
 17029 ;; Hardware stack levels used: 1
 17030 ;; Hardware stack levels required when called: 17
 17031 ;; This function calls:
 17032 ;;		_getEN
 17033 ;;		_getEv
 17034 ;;		_getNN
 17035 ;;		_numEv
 17036 ;;		_sendMessage6
 17037 ;; This function is called by:
 17038 ;;		_doReqev
 17039 ;;		_pollTimedResponse
 17040 ;; This function uses a non-reentrant model
 17041 ;;
 17042                           
 17043                           	psect	text42
 17044   00A284                     __ptext42:
 17045                           	callstack 0
 17046   00A284                     _reqevCallback:
 17047                           	callstack 11
 17048                           
 17049                           ;incstack = 0
 17050                           ;reqevCallback@tableIndex stored from wreg
 17051   00A284  0101               	movlb	1	; () banked
 17052   00A286  6FE5               	movwf	reqevCallback@tableIndex& (0+255),b
 17053                           
 17054                           ;../../VLCBlib_PIC/event_teach_large.c: 833:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 835:     uint8_t nEv = numEv(tableIndex);
 17055   00A288  0101               	movlb	1	; () banked
 17056   00A28A  51E5               	movf	reqevCallback@tableIndex& (0+255),w,b
 17057   00A28C  ECDD  F045         	call	_numEv
 17058   00A290  0101               	movlb	1	; () banked
 17059   00A292  6FDE               	movwf	reqevCallback@nEv& (0+255),b
 17060                           
 17061                           ; BSR set to: 1
 17062                           ;../../VLCBlib_PIC/event_teach_large.c: 836:     int16_t ev;;../../VLCBlib_PIC/event_tea
      +                          ch_large.c: 838:     if (step+1 > nEv) {
 17063   00A294  51D8               	movf	reqevCallback@step& (0+255),w,b
 17064   00A296  6FD9               	movwf	??_reqevCallback& (0+255),b
 17065   00A298  6BDA               	clrf	(??_reqevCallback+1)& (0+255),b
 17066   00A29A  0E01               	movlw	1
 17067   00A29C  27D9               	addwf	??_reqevCallback& (0+255),f,b
 17068   00A29E  0E00               	movlw	0
 17069   00A2A0  23DA               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 17070   00A2A2  51DE               	movf	reqevCallback@nEv& (0+255),w,b
 17071   00A2A4  6FDB               	movwf	(??_reqevCallback+2)& (0+255),b
 17072   00A2A6  6BDC               	clrf	(??_reqevCallback+3)& (0+255),b
 17073   00A2A8  51D9               	movf	??_reqevCallback& (0+255),w,b
 17074   00A2AA  5DDB               	subwf	(??_reqevCallback+2)& (0+255),w,b
 17075   00A2AC  51DC               	movf	(??_reqevCallback+3)& (0+255),w,b
 17076   00A2AE  0A80               	xorlw	128
 17077   00A2B0  6FDD               	movwf	(??_reqevCallback+4)& (0+255),b
 17078   00A2B2  51DA               	movf	(??_reqevCallback+1)& (0+255),w,b
 17079   00A2B4  0A80               	xorlw	128
 17080   00A2B6  59DD               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 17081   00A2B8  B0D8               	btfsc	status,0,c
 17082   00A2BA  D002               	goto	l22766
 17083                           
 17084                           ; BSR set to: 1
 17085                           ;../../VLCBlib_PIC/event_teach_large.c: 839:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17086   00A2BC  0E00               	movlw	0
 17087   00A2BE  0012               	return	
 17088   00A2C0                     l22766:
 17089                           
 17090                           ; BSR set to: 1
 17091                           ;../../VLCBlib_PIC/event_teach_large.c: 842:     nodeNumber.word = getNN(tableIndex);
 17092   00A2C0  51E5               	movf	reqevCallback@tableIndex& (0+255),w,b
 17093   00A2C2  ECB0  F04A         	call	_getNN
 17094   00A2C6  C097  F1E1         	movff	?_getNN,reqevCallback@nodeNumber
 17095   00A2CA  C098  F1E2         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 17096                           
 17097                           ;../../VLCBlib_PIC/event_teach_large.c: 843:     eventNumber.word = getEN(tableIndex);
 17098   00A2CE  0101               	movlb	1	; () banked
 17099   00A2D0  51E5               	movf	reqevCallback@tableIndex& (0+255),w,b
 17100   00A2D2  EC9A  F056         	call	_getEN
 17101   00A2D6  C097  F1E3         	movff	?_getEN,reqevCallback@eventNumber
 17102   00A2DA  C098  F1E4         	movff	?_getEN+1,reqevCallback@eventNumber+1
 17103                           
 17104                           ;../../VLCBlib_PIC/event_teach_large.c: 844:     ev = getEv(tableIndex, step);
 17105   00A2DE  C1D8  F09D         	movff	reqevCallback@step,getEv@evNum
 17106   00A2E2  0101               	movlb	1	; () banked
 17107   00A2E4  51E5               	movf	reqevCallback@tableIndex& (0+255),w,b
 17108   00A2E6  ECFD  F03C         	call	_getEv
 17109   00A2EA  C09D  F1DF         	movff	?_getEv,reqevCallback@ev
 17110   00A2EE  C09E  F1E0         	movff	?_getEv+1,reqevCallback@ev+1
 17111                           
 17112                           ;../../VLCBlib_PIC/event_teach_large.c: 845:     if (ev >= 0) {
 17113   00A2F2  0101               	movlb	1	; () banked
 17114   00A2F4  BFE0               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 17115   00A2F6  D00F               	goto	l22772
 17116                           
 17117                           ; BSR set to: 1
 17118                           ;../../VLCBlib_PIC/event_teach_large.c: 846:         sendMessage6(OPC_EVANS, nodeNumber.
      +                          bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint
      +                          8_t)ev);
 17119   00A2F8  C1E2  F1C5         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 17120   00A2FC  C1E1  F1C6         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 17121   00A300  C1E4  F1C7         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 17122   00A304  C1E3  F1C8         	movff	reqevCallback@eventNumber,sendMessage6@data4
 17123   00A308  29D8               	incf	reqevCallback@step& (0+255),w,b
 17124   00A30A  6FC9               	movwf	sendMessage6@data5& (0+255),b
 17125   00A30C  C1DF  F1CA         	movff	reqevCallback@ev,sendMessage6@data6
 17126   00A310  0ED3               	movlw	211
 17127   00A312  EC9A  F060         	call	_sendMessage6
 17128   00A316                     l22772:
 17129                           
 17130                           ;../../VLCBlib_PIC/event_teach_large.c: 848:     return TIMED_RESPONSE_RESULT_NEXT;
 17131   00A316  0E02               	movlw	2
 17132   00A318  0012               	return		;funcret
 17133   00A31A                     __end_of_reqevCallback:
 17134                           	callstack 0
 17135                           
 17136 ;; *************** function _nerdCallback *****************
 17137 ;; Defined at:
 17138 ;;		line 604 in file "../../VLCBlib_PIC/event_teach_large.c"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;  type            1    wreg     unsigned char 
 17141 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17142 ;;  step            1   27[BANK1 ] unsigned char 
 17143 ;; Auto vars:     Size  Location     Type
 17144 ;;  type            1    0[COMRAM] unsigned char 
 17145 ;;  eventNumber     2   30[BANK1 ] struct Word
 17146 ;;  nodeNumber      2   28[BANK1 ] struct Word
 17147 ;; Return value:  Size  Location     Type
 17148 ;;                  1    wreg      enum E12935
 17149 ;; Registers used:
 17150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17151 ;; Tracked objects:
 17152 ;;		On entry : 0/0
 17153 ;;		On exit  : 0/0
 17154 ;;		Unchanged: 0/0
 17155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17156 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17157 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17159 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17160 ;;Total ram usage:        6 bytes
 17161 ;; Hardware stack levels used: 1
 17162 ;; Hardware stack levels required when called: 17
 17163 ;; This function calls:
 17164 ;;		_getEN
 17165 ;;		_getNN
 17166 ;;		_sendMessage7
 17167 ;;		_tableIndexToEvtIdx
 17168 ;;		_validStart
 17169 ;; This function is called by:
 17170 ;;		_doNerd
 17171 ;;		_pollTimedResponse
 17172 ;; This function uses a non-reentrant model
 17173 ;;
 17174                           
 17175                           	psect	text43
 17176   00B2EA                     __ptext43:
 17177                           	callstack 0
 17178   00B2EA                     _nerdCallback:
 17179                           	callstack 11
 17180                           
 17181                           ;../../VLCBlib_PIC/event_teach_large.c: 605:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 607:     if (step >= 255) {
 17182                           
 17183                           ;incstack = 0
 17184   00B2EA  0101               	movlb	1	; () banked
 17185   00B2EC  29D8               	incf	nerdCallback@step& (0+255),w,b
 17186   00B2EE  A4D8               	btfss	status,2,c
 17187   00B2F0  D002               	goto	l22748
 17188                           
 17189                           ; BSR set to: 1
 17190                           ;../../VLCBlib_PIC/event_teach_large.c: 608:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17191   00B2F2  0E00               	movlw	0
 17192   00B2F4  0012               	return	
 17193   00B2F6                     l22748:
 17194                           
 17195                           ; BSR set to: 1
 17196                           ;../../VLCBlib_PIC/event_teach_large.c: 611:     if (validStart(step)) {
 17197   00B2F6  51D8               	movf	nerdCallback@step& (0+255),w,b
 17198   00B2F8  EC3A  F05D         	call	_validStart
 17199   00B2FC  0900               	iorlw	0
 17200   00B2FE  B4D8               	btfsc	status,2,c
 17201   00B300  D025               	goto	l22754
 17202                           
 17203                           ;../../VLCBlib_PIC/event_teach_large.c: 612:         nodeNumber.word = getNN(step);
 17204   00B302  0101               	movlb	1	; () banked
 17205   00B304  51D8               	movf	nerdCallback@step& (0+255),w,b
 17206   00B306  ECB0  F04A         	call	_getNN
 17207   00B30A  C097  F1D9         	movff	?_getNN,nerdCallback@nodeNumber
 17208   00B30E  C098  F1DA         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 17209                           
 17210                           ;../../VLCBlib_PIC/event_teach_large.c: 613:         eventNumber.word = getEN(step);
 17211   00B312  0101               	movlb	1	; () banked
 17212   00B314  51D8               	movf	nerdCallback@step& (0+255),w,b
 17213   00B316  EC9A  F056         	call	_getEN
 17214   00B31A  C097  F1DB         	movff	?_getEN,nerdCallback@eventNumber
 17215   00B31E  C098  F1DC         	movff	?_getEN+1,nerdCallback@eventNumber+1
 17216                           
 17217                           ;../../VLCBlib_PIC/event_teach_large.c: 614:         sendMessage7(OPC_ENRSP, nn.bytes.hi
      +                          , nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumb
      +                          er.bytes.lo, tableIndexToEvtIdx(step));
 17218   00B322  C0B6  F1C5         	movff	_nn+1,sendMessage7@data1
 17219   00B326  C0B5  F1C6         	movff	_nn,sendMessage7@data2
 17220   00B32A  C1DA  F1C7         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 17221   00B32E  C1D9  F1C8         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 17222   00B332  C1DC  F1C9         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 17223   00B336  C1DB  F1CA         	movff	nerdCallback@eventNumber,sendMessage7@data6
 17224   00B33A  0101               	movlb	1	; () banked
 17225   00B33C  51D8               	movf	nerdCallback@step& (0+255),w,b
 17226   00B33E  EC06  F064         	call	_tableIndexToEvtIdx
 17227   00B342  0101               	movlb	1	; () banked
 17228   00B344  6FCB               	movwf	sendMessage7@data7& (0+255),b
 17229   00B346  0EF2               	movlw	242
 17230   00B348  ECCA  F060         	call	_sendMessage7
 17231   00B34C                     l22754:
 17232                           
 17233                           ;../../VLCBlib_PIC/event_teach_large.c: 616:     return TIMED_RESPONSE_RESULT_NEXT;
 17234   00B34C  0E02               	movlw	2
 17235   00B34E  0012               	return		;funcret
 17236   00B350                     __end_of_nerdCallback:
 17237                           	callstack 0
 17238                           
 17239 ;; *************** function _nvTRnvrdCallback *****************
 17240 ;; Defined at:
 17241 ;;		line 371 in file "../../VLCBlib_PIC/nv.c"
 17242 ;; Parameters:    Size  Location     Type
 17243 ;;  type            1    wreg     unsigned char 
 17244 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17245 ;;  step            1   27[BANK1 ] unsigned char 
 17246 ;; Auto vars:     Size  Location     Type
 17247 ;;  type            1    0[COMRAM] unsigned char 
 17248 ;;  valueOrError    2   28[BANK1 ] short 
 17249 ;; Return value:  Size  Location     Type
 17250 ;;                  1    wreg      enum E12952
 17251 ;; Registers used:
 17252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17253 ;; Tracked objects:
 17254 ;;		On entry : 0/0
 17255 ;;		On exit  : 0/0
 17256 ;;		Unchanged: 0/0
 17257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17258 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17259 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17261 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17262 ;;Total ram usage:        4 bytes
 17263 ;; Hardware stack levels used: 1
 17264 ;; Hardware stack levels required when called: 17
 17265 ;; This function calls:
 17266 ;;		_getNV
 17267 ;;		_sendMessage4
 17268 ;; This function is called by:
 17269 ;;		_nvProcessMessage
 17270 ;;		_pollTimedResponse
 17271 ;; This function uses a non-reentrant model
 17272 ;;
 17273                           
 17274                           	psect	text44
 17275   00BDEA                     __ptext44:
 17276                           	callstack 0
 17277   00BDEA                     _nvTRnvrdCallback:
 17278                           	callstack 11
 17279                           
 17280                           ;../../VLCBlib_PIC/nv.c: 372:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 373:    
      +                           if (step > (15+7*16)) {
 17281                           
 17282                           ;incstack = 0
 17283   00BDEA  0E7F               	movlw	127
 17284   00BDEC  0101               	movlb	1	; () banked
 17285   00BDEE  65D8               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 17286   00BDF0  D002               	goto	l22200
 17287   00BDF2                     u23350:
 17288                           
 17289                           ; BSR set to: 1
 17290                           ;../../VLCBlib_PIC/nv.c: 374:         return TIMED_RESPONSE_RESULT_FINISHED;
 17291   00BDF2  0E00               	movlw	0
 17292   00BDF4  0012               	return	
 17293   00BDF6                     l22200:
 17294                           
 17295                           ; BSR set to: 1
 17296                           ;../../VLCBlib_PIC/nv.c: 376:     valueOrError = getNV(step+1);
 17297   00BDF6  29D8               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17298   00BDF8  EC53  F05F         	call	_getNV
 17299   00BDFC  C08D  F1D9         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 17300   00BE00  C08E  F1DA         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 17301                           
 17302                           ;../../VLCBlib_PIC/nv.c: 377:     if (valueOrError < 0) {
 17303   00BE04  0101               	movlb	1	; () banked
 17304   00BE06  BFDA               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 17305   00BE08  D7F4               	goto	u23350
 17306                           
 17307                           ; BSR set to: 1
 17308                           ;../../VLCBlib_PIC/nv.c: 380:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 17309   00BE0A  C0B6  F1C5         	movff	_nn+1,sendMessage4@data1
 17310   00BE0E  C0B5  F1C6         	movff	_nn,sendMessage4@data2
 17311   00BE12  29D8               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17312   00BE14  6FC7               	movwf	sendMessage4@data3& (0+255),b
 17313   00BE16  C1D9  F1C8         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 17314   00BE1A  0E97               	movlw	151
 17315   00BE1C  ECFA  F060         	call	_sendMessage4
 17316                           
 17317                           ;../../VLCBlib_PIC/nv.c: 382:     nvDiagnostics[0x01].asUint++;
 17318   00BE20  0101               	movlb	1	; () banked
 17319   00BE22  4BA9               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 17320   00BE24  2BAA               	incf	(_nvDiagnostics+3)& (0+255),f,b
 17321                           
 17322                           ; BSR set to: 1
 17323                           ;../../VLCBlib_PIC/nv.c: 384:     return TIMED_RESPONSE_RESULT_NEXT;
 17324   00BE26  0E02               	movlw	2
 17325                           
 17326                           ; BSR set to: 1
 17327   00BE28  0012               	return		;funcret
 17328   00BE2A                     __end_of_nvTRnvrdCallback:
 17329                           	callstack 0
 17330                           
 17331 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 17332 ;; Defined at:
 17333 ;;		line 879 in file "../../VLCBlib_PIC/mns.c"
 17334 ;; Parameters:    Size  Location     Type
 17335 ;;  type            1    wreg     unsigned char 
 17336 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17337 ;;  step            1   27[BANK1 ] unsigned char 
 17338 ;; Auto vars:     Size  Location     Type
 17339 ;;  type            1    0[COMRAM] unsigned char 
 17340 ;; Return value:  Size  Location     Type
 17341 ;;                  1    wreg      enum E12935
 17342 ;; Registers used:
 17343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17344 ;; Tracked objects:
 17345 ;;		On entry : 0/0
 17346 ;;		On exit  : 0/0
 17347 ;;		Unchanged: 0/0
 17348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17349 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17351 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17352 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17353 ;;Total ram usage:        6 bytes
 17354 ;; Hardware stack levels used: 1
 17355 ;; Hardware stack levels required when called: 17
 17356 ;; This function calls:
 17357 ;;		_sendMessage5
 17358 ;; This function is called by:
 17359 ;;		_mnsProcessMessage
 17360 ;;		_pollTimedResponse
 17361 ;; This function uses a non-reentrant model
 17362 ;;
 17363                           
 17364                           	psect	text45
 17365   00A690                     __ptext45:
 17366                           	callstack 0
 17367   00A690                     _mnsTRserviceDiscoveryCallback:
 17368                           	callstack 11
 17369                           
 17370                           ;../../VLCBlib_PIC/mns.c: 880:     if (step >= 9) {
 17371                           
 17372                           ; BSR set to: 1
 17373                           ;incstack = 0
 17374   00A690  0E08               	movlw	8
 17375   00A692  0101               	movlb	1	; () banked
 17376   00A694  65D8               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 17377   00A696  D002               	goto	l22118
 17378                           
 17379                           ; BSR set to: 1
 17380                           ;../../VLCBlib_PIC/mns.c: 881:         return TIMED_RESPONSE_RESULT_FINISHED;
 17381   00A698  0E00               	movlw	0
 17382   00A69A  0012               	return	
 17383   00A69C                     l22118:
 17384                           
 17385                           ; BSR set to: 1
 17386                           ;../../VLCBlib_PIC/mns.c: 884:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 17387   00A69C  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 17388   00A6A0  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 17389   00A6A4  29D8               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17390   00A6A6  6FC7               	movwf	sendMessage5@data3& (0+255),b
 17391   00A6A8  51D8               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17392   00A6AA  0D02               	mullw	2
 17393   00A6AC  0E69               	movlw	low _services
 17394   00A6AE  24F3               	addwf	243,w,c
 17395   00A6B0  6EF6               	movwf	tblptrl,c
 17396   00A6B2  0EEE               	movlw	high _services
 17397   00A6B4  20F4               	addwfc	244,w,c
 17398   00A6B6  6EF7               	movwf	tblptrh,c
 17399   00A6B8                     	if	1	;There are 3 active tblptr bytes
 17400   00A6B8  6AF8               	clrf	tblptru,c
 17401   00A6BA  0E00               	movlw	low (__mediumconst shr (0+16))
 17402   00A6BC  22F8               	addwfc	tblptru,f,c
 17403   00A6BE                     	endif
 17404   00A6BE  0009               	tblrd		*+
 17405   00A6C0  CFF5 F1D9          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 17406   00A6C4  0009               	tblrd		*+
 17407   00A6C6  CFF5 F1DA          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 17408   00A6CA  C1D9  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 17409   00A6CE  C1DA  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 17410   00A6D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17411   00A6D2  6AF8               	clrf	tblptru,c
 17412   00A6D4                     	endif
 17413   00A6D4                     	if	0	;tblptru may be non-zero
 17414   00A6D4                     	endif
 17415   00A6D4  0008               	tblrd		*
 17416   00A6D6  CFF5 F1C8          	movff	tablat,sendMessage5@data4
 17417   00A6DA  51D8               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17418   00A6DC  0D02               	mullw	2
 17419   00A6DE  0E69               	movlw	low _services
 17420   00A6E0  24F3               	addwf	243,w,c
 17421   00A6E2  6EF6               	movwf	tblptrl,c
 17422   00A6E4  0EEE               	movlw	high _services
 17423   00A6E6  20F4               	addwfc	244,w,c
 17424   00A6E8  6EF7               	movwf	tblptrh,c
 17425   00A6EA                     	if	1	;There are 3 active tblptr bytes
 17426   00A6EA  6AF8               	clrf	tblptru,c
 17427   00A6EC  0E00               	movlw	low (__mediumconst shr (0+16))
 17428   00A6EE  22F8               	addwfc	tblptru,f,c
 17429   00A6F0                     	endif
 17430   00A6F0  0009               	tblrd		*+
 17431   00A6F2  CFF5 F1DB          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 17432   00A6F6  0009               	tblrd		*+
 17433   00A6F8  CFF5 F1DC          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 17434   00A6FC  0E01               	movlw	1
 17435   00A6FE  27DB               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 17436   00A700  0E00               	movlw	0
 17437   00A702  23DC               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 17438   00A704  C1DB  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 17439   00A708  C1DC  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 17440   00A70C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17441   00A70C  6AF8               	clrf	tblptru,c
 17442   00A70E                     	endif
 17443   00A70E                     	if	0	;tblptru may be non-zero
 17444   00A70E                     	endif
 17445   00A70E  0008               	tblrd		*
 17446   00A710  CFF5 F1C9          	movff	tablat,sendMessage5@data5
 17447   00A714  0EAC               	movlw	172
 17448   00A716  ECE2  F060         	call	_sendMessage5
 17449                           
 17450                           ;../../VLCBlib_PIC/mns.c: 886:     return TIMED_RESPONSE_RESULT_NEXT;
 17451   00A71A  0E02               	movlw	2
 17452   00A71C  0012               	return		;funcret
 17453   00A71E                     __end_of_mnsTRserviceDiscoveryCallback:
 17454                           	callstack 0
 17455                           
 17456 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 17457 ;; Defined at:
 17458 ;;		line 898 in file "../../VLCBlib_PIC/mns.c"
 17459 ;; Parameters:    Size  Location     Type
 17460 ;;  type            1    wreg     unsigned char 
 17461 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17462 ;;  step            1   27[BANK1 ] unsigned char 
 17463 ;; Auto vars:     Size  Location     Type
 17464 ;;  type            1    0[COMRAM] unsigned char 
 17465 ;;  d               2   32[BANK1 ] PTR struct DiagnosticVal
 17466 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 17467 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 17468 ;; Return value:  Size  Location     Type
 17469 ;;                  1    wreg      enum E12935
 17470 ;; Registers used:
 17471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17472 ;; Tracked objects:
 17473 ;;		On entry : 0/0
 17474 ;;		On exit  : 0/0
 17475 ;;		Unchanged: 0/0
 17476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17477 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17478 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17479 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17480 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17481 ;;Total ram usage:        8 bytes
 17482 ;; Hardware stack levels used: 1
 17483 ;; Hardware stack levels required when called: 17
 17484 ;; This function calls:
 17485 ;;		NULL
 17486 ;;		_ackGetDiagnostic
 17487 ;;		_canGetDiagnostic
 17488 ;;		_consumer2QGetDiagnostic
 17489 ;;		_mnsGetDiagnostic
 17490 ;;		_nvGetDiagnostic
 17491 ;;		_producerGetDiagnostic
 17492 ;;		_sendMessage6
 17493 ;;		_teachGetDiagnostic
 17494 ;; This function is called by:
 17495 ;;		_mnsProcessMessage
 17496 ;;		_pollTimedResponse
 17497 ;; This function uses a non-reentrant model
 17498 ;;
 17499                           
 17500                           	psect	text46
 17501   008366                     __ptext46:
 17502                           	callstack 0
 17503   008366                     _mnsTRallDiagnosticsCallback:
 17504                           	callstack 11
 17505                           
 17506                           ;../../VLCBlib_PIC/mns.c: 899:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 17507                           
 17508                           ;incstack = 0
 17509   008366  0101               	movlb	1	; () banked
 17510   008368  51D7               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17511   00836A  0D02               	mullw	2
 17512   00836C  0E69               	movlw	low _services
 17513   00836E  24F3               	addwf	243,w,c
 17514   008370  6EF6               	movwf	tblptrl,c
 17515   008372  0EEE               	movlw	high _services
 17516   008374  20F4               	addwfc	244,w,c
 17517   008376  6EF7               	movwf	tblptrh,c
 17518   008378                     	if	1	;There are 3 active tblptr bytes
 17519   008378  6AF8               	clrf	tblptru,c
 17520   00837A  0E00               	movlw	low (__mediumconst shr (0+16))
 17521   00837C  22F8               	addwfc	tblptru,f,c
 17522   00837E                     	endif
 17523   00837E  0009               	tblrd		*+
 17524   008380  CFF5 F1D9          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17525   008384  0009               	tblrd		*+
 17526   008386  CFF5 F1DA          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17527   00838A  0E10               	movlw	16
 17528   00838C  27D9               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17529   00838E  0E00               	movlw	0
 17530   008390  23DA               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17531   008392  C1D9  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17532   008396  C1DA  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17533   00839A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17534   00839A  6AF8               	clrf	tblptru,c
 17535   00839C                     	endif
 17536   00839C                     	if	0	;tblptru may be non-zero
 17537   00839C                     	endif
 17538   00839C  0009               	tblrd		*+
 17539   00839E  50F5               	movf	tablat,w,c
 17540   0083A0  0009               	tblrd		*+
 17541   0083A2  10F5               	iorwf	tablat,w,c
 17542   0083A4  A4D8               	btfss	status,2,c
 17543   0083A6  D011               	goto	l22132
 17544                           
 17545                           ; BSR set to: 1
 17546                           ;../../VLCBlib_PIC/mns.c: 900:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 17547   0083A8  C0B6  F1C5         	movff	_nn+1,sendMessage6@data1
 17548   0083AC  C0B5  F1C6         	movff	_nn,sendMessage6@data2
 17549   0083B0  29D7               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17550   0083B2  6FC7               	movwf	sendMessage6@data3& (0+255),b
 17551   0083B4  0E00               	movlw	0
 17552   0083B6  6FC8               	movwf	sendMessage6@data4& (0+255),b
 17553   0083B8  0E00               	movlw	0
 17554   0083BA  6FC9               	movwf	sendMessage6@data5& (0+255),b
 17555   0083BC  0E00               	movlw	0
 17556   0083BE  6FCA               	movwf	sendMessage6@data6& (0+255),b
 17557   0083C0  0EC7               	movlw	199
 17558   0083C2  EC9A  F060         	call	_sendMessage6
 17559   0083C6                     l22128:
 17560                           
 17561                           ;../../VLCBlib_PIC/mns.c: 901:         return TIMED_RESPONSE_RESULT_FINISHED;
 17562   0083C6  0E00               	movlw	0
 17563   0083C8  0012               	return	
 17564   0083CA                     l22132:
 17565                           
 17566                           ; BSR set to: 1
 17567                           ;../../VLCBlib_PIC/mns.c: 903:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 17568   0083CA  51D7               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17569   0083CC  0D02               	mullw	2
 17570   0083CE  0E69               	movlw	low _services
 17571   0083D0  24F3               	addwf	243,w,c
 17572   0083D2  6EF6               	movwf	tblptrl,c
 17573   0083D4  0EEE               	movlw	high _services
 17574   0083D6  20F4               	addwfc	244,w,c
 17575   0083D8  6EF7               	movwf	tblptrh,c
 17576   0083DA                     	if	1	;There are 3 active tblptr bytes
 17577   0083DA  6AF8               	clrf	tblptru,c
 17578   0083DC  0E00               	movlw	low (__mediumconst shr (0+16))
 17579   0083DE  22F8               	addwfc	tblptru,f,c
 17580   0083E0                     	endif
 17581   0083E0  0009               	tblrd		*+
 17582   0083E2  CFF5 F1D9          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17583   0083E6  0009               	tblrd		*+
 17584   0083E8  CFF5 F1DA          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17585   0083EC  0E10               	movlw	16
 17586   0083EE  27D9               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17587   0083F0  0E00               	movlw	0
 17588   0083F2  23DA               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17589   0083F4  C1D9  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17590   0083F8  C1DA  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17591   0083FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17592   0083FC  6AF8               	clrf	tblptru,c
 17593   0083FE                     	endif
 17594   0083FE                     	if	0	;tblptru may be non-zero
 17595   0083FE                     	endif
 17596   0083FE  0009               	tblrd		*+
 17597   008400  CFF5 F1DB          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 17598   008404  0009               	tblrd		*+
 17599   008406  CFF5 F1DC          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 17600   00840A  D801               	call	u23308
 17601   00840C  D00A               	goto	u23309
 17602   00840E                     u23308:
 17603   00840E  0005               	push	
 17604   008410  6EFA               	movwf	pclath,c
 17605   008412  51DB               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 17606   008414  6EFD               	movwf	tosl,c
 17607   008416  51DC               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 17608   008418  6EFE               	movwf	tosh,c
 17609   00841A  6AFF               	clrf	tosu,c
 17610   00841C  50FA               	movf	pclath,w,c
 17611   00841E  51D8               	movf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17612   008420  0012               	return		;indir
 17613   008422                     u23309:
 17614   008422  C096  F1DD         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 17615   008426  C097  F1DE         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 17616                           
 17617                           ;../../VLCBlib_PIC/mns.c: 904:     if (d == ((void*)0)) {
 17618   00842A  0101               	movlb	1	; () banked
 17619   00842C  51DD               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17620   00842E  11DE               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17621   008430  B4D8               	btfsc	status,2,c
 17622   008432  D7C9               	goto	l22128
 17623                           
 17624                           ; BSR set to: 1
 17625                           ;../../VLCBlib_PIC/mns.c: 909:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 17626   008434  C0B6  F1C5         	movff	_nn+1,sendMessage6@data1
 17627   008438  C0B5  F1C6         	movff	_nn,sendMessage6@data2
 17628   00843C  29D7               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17629   00843E  6FC7               	movwf	sendMessage6@data3& (0+255),b
 17630   008440  C1D8  F1C8         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 17631   008444  EE20 F001          	lfsr	2,1
 17632   008448  51DD               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17633   00844A  26D9               	addwf	fsr2l,f,c
 17634   00844C  51DE               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17635   00844E  22DA               	addwfc	fsr2h,f,c
 17636   008450  50DF               	movf	indf2,w,c
 17637   008452  6FC9               	movwf	sendMessage6@data5& (0+255),b
 17638   008454  C1DD  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 17639   008458  C1DE  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 17640   00845C  50DF               	movf	indf2,w,c
 17641   00845E  6FCA               	movwf	sendMessage6@data6& (0+255),b
 17642   008460  0EC7               	movlw	199
 17643   008462  EC9A  F060         	call	_sendMessage6
 17644                           
 17645                           ;../../VLCBlib_PIC/mns.c: 910:     return TIMED_RESPONSE_RESULT_NEXT;
 17646   008466  0E02               	movlw	2
 17647   008468  0012               	return		;funcret
 17648   00846A                     __end_of_mnsTRallDiagnosticsCallback:
 17649                           	callstack 0
 17650                           
 17651 ;; *************** function _mnsTRrqnpnCallback *****************
 17652 ;; Defined at:
 17653 ;;		line 922 in file "../../VLCBlib_PIC/mns.c"
 17654 ;; Parameters:    Size  Location     Type
 17655 ;;  type            1    wreg     unsigned char 
 17656 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17657 ;;  step            1   27[BANK1 ] unsigned char 
 17658 ;; Auto vars:     Size  Location     Type
 17659 ;;  type            1    0[COMRAM] unsigned char 
 17660 ;; Return value:  Size  Location     Type
 17661 ;;                  1    wreg      enum E12935
 17662 ;; Registers used:
 17663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17664 ;; Tracked objects:
 17665 ;;		On entry : 0/0
 17666 ;;		On exit  : 0/0
 17667 ;;		Unchanged: 0/0
 17668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17669 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17672 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17673 ;;Total ram usage:        2 bytes
 17674 ;; Hardware stack levels used: 1
 17675 ;; Hardware stack levels required when called: 17
 17676 ;; This function calls:
 17677 ;;		_getParameter
 17678 ;;		_sendMessage4
 17679 ;; This function is called by:
 17680 ;;		_mnsProcessMessage
 17681 ;;		_pollTimedResponse
 17682 ;; This function uses a non-reentrant model
 17683 ;;
 17684                           
 17685                           	psect	text47
 17686   00C308                     __ptext47:
 17687                           	callstack 0
 17688   00C308                     _mnsTRrqnpnCallback:
 17689                           	callstack 11
 17690                           
 17691                           ;../../VLCBlib_PIC/mns.c: 923:     if (step >= 20) {
 17692                           
 17693                           ;incstack = 0
 17694   00C308  0E13               	movlw	19
 17695   00C30A  0101               	movlb	1	; () banked
 17696   00C30C  65D8               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 17697   00C30E  D002               	goto	l22152
 17698                           
 17699                           ; BSR set to: 1
 17700                           ;../../VLCBlib_PIC/mns.c: 924:         return TIMED_RESPONSE_RESULT_FINISHED;
 17701   00C310  0E00               	movlw	0
 17702   00C312  0012               	return	
 17703   00C314                     l22152:
 17704                           
 17705                           ; BSR set to: 1
 17706                           ;../../VLCBlib_PIC/mns.c: 926:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17707   00C314  C0B6  F1C5         	movff	_nn+1,sendMessage4@data1
 17708   00C318  C0B5  F1C6         	movff	_nn,sendMessage4@data2
 17709   00C31C  29D8               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17710   00C31E  6FC7               	movwf	sendMessage4@data3& (0+255),b
 17711   00C320  29D8               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17712   00C322  EC91  F044         	call	_getParameter
 17713   00C326  0101               	movlb	1	; () banked
 17714   00C328  6FC8               	movwf	sendMessage4@data4& (0+255),b
 17715   00C32A  0E9B               	movlw	155
 17716   00C32C  ECFA  F060         	call	_sendMessage4
 17717                           
 17718                           ;../../VLCBlib_PIC/mns.c: 927:     return TIMED_RESPONSE_RESULT_NEXT;
 17719   00C330  0E02               	movlw	2
 17720   00C332  0012               	return		;funcret
 17721   00C334                     __end_of_mnsTRrqnpnCallback:
 17722                           	callstack 0
 17723                           
 17724 ;; *************** function _sodTRCallback *****************
 17725 ;; Defined at:
 17726 ;;		line 403 in file "../universalEvents.c"
 17727 ;; Parameters:    Size  Location     Type
 17728 ;;  type            1    wreg     unsigned char 
 17729 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17730 ;;  step            1   27[BANK1 ] unsigned char 
 17731 ;; Auto vars:     Size  Location     Type
 17732 ;;  type            1    0[COMRAM] unsigned char 
 17733 ;;  io              1   38[BANK1 ] unsigned char 
 17734 ;;  flags           1   37[BANK1 ] unsigned char 
 17735 ;;  event_invert    1   36[BANK1 ] enum E12767
 17736 ;;  value           1   35[BANK1 ] enum E12787
 17737 ;;  disable_off     1   34[BANK1 ] enum E12767
 17738 ;;  happeningInd    1   33[BANK1 ] unsigned char 
 17739 ;;  send_off_ok     1   30[BANK1 ] enum E12767
 17740 ;;  send_on_ok      1   29[BANK1 ] enum E12767
 17741 ;;  disable_SOD_    1   28[BANK1 ] enum E12767
 17742 ;; Return value:  Size  Location     Type
 17743 ;;                  1    wreg      enum E13022
 17744 ;; Registers used:
 17745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17746 ;; Tracked objects:
 17747 ;;		On entry : 0/0
 17748 ;;		On exit  : 0/0
 17749 ;;		Unchanged: 0/0
 17750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17751 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17752 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17754 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17755 ;;Total ram usage:       13 bytes
 17756 ;; Hardware stack levels used: 1
 17757 ;; Hardware stack levels required when called: 19
 17758 ;; This function calls:
 17759 ;;		_APP_GetEventState
 17760 ;;		___awdiv
 17761 ;;		_getNV
 17762 ;;		_sendInvertedProducedEvent
 17763 ;; This function is called by:
 17764 ;;		_doSOD
 17765 ;;		_pollTimedResponse
 17766 ;; This function uses a non-reentrant model
 17767 ;;
 17768                           
 17769                           	psect	text48
 17770   00856E                     __ptext48:
 17771                           	callstack 0
 17772   00856E                     _sodTRCallback:
 17773                           	callstack 9
 17774                           
 17775                           ;../universalEvents.c: 404:     uint8_t io;;../universalEvents.c: 405:     uint8_t happe
      +                          ningIndex;;../universalEvents.c: 406:     Boolean disable_off;;../universalEvents.c: 407
      +                          :  Boolean send_on_ok;;../universalEvents.c: 408:  Boolean send_off_ok;;../universalEven
      +                          ts.c: 409:  Boolean event_inverted;;../universalEvents.c: 410:     Boolean disable_SOD_r
      +                          esponse;;../universalEvents.c: 411:     uint8_t flags;;../universalEvents.c: 412:     Ev
      +                          entState value;;../universalEvents.c: 415:     io = step/4;
 17776                           
 17777                           ;incstack = 0
 17778   00856E  C1D8  F097         	movff	sodTRCallback@step,___awdiv@dividend
 17779   008572  0100               	movlb	0	; () banked
 17780   008574  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17781   008576  0E00               	movlw	0
 17782   008578  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17783   00857A  0E04               	movlw	4
 17784   00857C  6F99               	movwf	___awdiv@divisor& (0+255),b
 17785   00857E  EC1B  F054         	call	___awdiv	;wreg free
 17786   008582  0100               	movlb	0	; () banked
 17787   008584  5197               	movf	?___awdiv& (0+255),w,b
 17788   008586  0101               	movlb	1	; () banked
 17789   008588  6FE3               	movwf	sodTRCallback@io& (0+255),b
 17790                           
 17791                           ; BSR set to: 1
 17792                           ;../universalEvents.c: 416:     if (io >= 16) {
 17793   00858A  0E0F               	movlw	15
 17794   00858C  65E3               	cpfsgt	sodTRCallback@io& (0+255),b
 17795   00858E  D002               	goto	l21658
 17796                           
 17797                           ; BSR set to: 1
 17798                           ;../universalEvents.c: 417:         return TIMED_RESPONSE_RESULT_FINISHED;
 17799   008590  0E00               	movlw	0
 17800   008592  0012               	return	
 17801   008594                     l21658:
 17802                           
 17803                           ; BSR set to: 1
 17804                           ;../universalEvents.c: 419:     happeningIndex = step%4;
 17805   008594  51D8               	movf	sodTRCallback@step& (0+255),w,b
 17806   008596  0B03               	andlw	3
 17807   008598  6FDE               	movwf	sodTRCallback@happeningIndex& (0+255),b
 17808                           
 17809                           ; BSR set to: 1
 17810                           ;../universalEvents.c: 420:     flags = (uint8_t)getNV((16 + 7*(io) + 1));;
 17811   00859A  51E3               	movf	sodTRCallback@io& (0+255),w,b
 17812   00859C  0D07               	mullw	7
 17813   00859E  50F3               	movf	243,w,c
 17814   0085A0  0F11               	addlw	17
 17815   0085A2  EC53  F05F         	call	_getNV
 17816   0085A6  0100               	movlb	0	; () banked
 17817   0085A8  518D               	movf	?_getNV& (0+255),w,b
 17818   0085AA  0101               	movlb	1	; () banked
 17819   0085AC  6FE2               	movwf	sodTRCallback@flags& (0+255),b
 17820                           
 17821                           ; BSR set to: 1
 17822                           ;../universalEvents.c: 421:     disable_SOD_response = flags & 0x20;
 17823   0085AE  51E2               	movf	sodTRCallback@flags& (0+255),w,b
 17824   0085B0  0B20               	andlw	32
 17825   0085B2  6FD9               	movwf	sodTRCallback@disable_SOD_response& (0+255),b
 17826                           
 17827                           ; BSR set to: 1
 17828                           ;../universalEvents.c: 423:     event_inverted = flags & 0x40;
 17829   0085B4  51E2               	movf	sodTRCallback@flags& (0+255),w,b
 17830   0085B6  0B40               	andlw	64
 17831   0085B8  6FE1               	movwf	sodTRCallback@event_inverted& (0+255),b
 17832                           
 17833                           ; BSR set to: 1
 17834                           ;../universalEvents.c: 424:     disable_off = flags & 0x08;
 17835   0085BA  51E2               	movf	sodTRCallback@flags& (0+255),w,b
 17836   0085BC  0B08               	andlw	8
 17837   0085BE  6FDF               	movwf	sodTRCallback@disable_off& (0+255),b
 17838                           
 17839                           ; BSR set to: 1
 17840                           ;../universalEvents.c: 425:     send_on_ok = !( disable_off && event_inverted );
 17841   0085C0  0E01               	movlw	1
 17842   0085C2  6FDC               	movwf	_sodTRCallback$1424& (0+255),b
 17843                           
 17844                           ; BSR set to: 1
 17845   0085C4  51DF               	movf	sodTRCallback@disable_off& (0+255),w,b
 17846   0085C6  B4D8               	btfsc	status,2,c
 17847   0085C8  D005               	goto	l21676
 17848                           
 17849                           ; BSR set to: 1
 17850   0085CA  51E1               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17851   0085CC  B4D8               	btfsc	status,2,c
 17852   0085CE  D002               	goto	l21676
 17853                           
 17854                           ; BSR set to: 1
 17855   0085D0  0E00               	movlw	0
 17856   0085D2  6FDC               	movwf	_sodTRCallback$1424& (0+255),b
 17857   0085D4                     l21676:
 17858                           
 17859                           ; BSR set to: 1
 17860   0085D4  C1DC  F1DA         	movff	_sodTRCallback$1424,sodTRCallback@send_on_ok
 17861                           
 17862                           ;../universalEvents.c: 426:     send_off_ok = !( disable_off && !event_inverted);
 17863   0085D8  0E01               	movlw	1
 17864   0085DA  6FDD               	movwf	_sodTRCallback$1425& (0+255),b
 17865   0085DC  51DF               	movf	sodTRCallback@disable_off& (0+255),w,b
 17866   0085DE  B4D8               	btfsc	status,2,c
 17867   0085E0  D005               	goto	l21682
 17868                           
 17869                           ; BSR set to: 1
 17870   0085E2  51E1               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17871   0085E4  A4D8               	btfss	status,2,c
 17872   0085E6  D002               	goto	l21682
 17873                           
 17874                           ; BSR set to: 1
 17875   0085E8  0E00               	movlw	0
 17876   0085EA  6FDD               	movwf	_sodTRCallback$1425& (0+255),b
 17877   0085EC                     l21682:
 17878                           
 17879                           ; BSR set to: 1
 17880   0085EC  C1DD  F1DB         	movff	_sodTRCallback$1425,sodTRCallback@send_off_ok
 17881                           
 17882                           ; BSR set to: 1
 17883                           ;../universalEvents.c: 428:     value = APP_GetEventState((8 + 4*(io))+happeningIndex);
 17884   0085F0  51E3               	movf	sodTRCallback@io& (0+255),w,b
 17885   0085F2  0D04               	mullw	4
 17886   0085F4  50F3               	movf	243,w,c
 17887   0085F6  25DE               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17888   0085F8  0F08               	addlw	8
 17889   0085FA  ECF8  F01E         	call	_APP_GetEventState
 17890   0085FE  0101               	movlb	1	; () banked
 17891   008600  6FE0               	movwf	sodTRCallback@value& (0+255),b
 17892                           
 17893                           ;../universalEvents.c: 430:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17894   008602  D00C               	goto	l21696
 17895   008604                     l21686:
 17896                           
 17897                           ; BSR set to: 0
 17898                           ;../universalEvents.c: 436:             if (disable_SOD_response) {
 17899   008604  0101               	movlb	1	; () banked
 17900   008606  51D9               	movf	sodTRCallback@disable_SOD_response& (0+255),w,b
 17901   008608  B4D8               	btfsc	status,2,c
 17902   00860A  D01C               	goto	l21698
 17903   00860C                     u22440:
 17904                           
 17905                           ;../universalEvents.c: 437:                 return TIMED_RESPONSE_RESULT_NEXT;
 17906   00860C  0E02               	movlw	2
 17907   00860E  0012               	return	
 17908   008610                     l21692:
 17909                           
 17910                           ; BSR set to: 0
 17911                           ;../universalEvents.c: 448:             send_on_ok = TRUE;
 17912   008610  0E01               	movlw	1
 17913   008612  0101               	movlb	1	; () banked
 17914   008614  6FDA               	movwf	sodTRCallback@send_on_ok& (0+255),b
 17915                           
 17916                           ;../universalEvents.c: 449:             send_off_ok = TRUE;
 17917   008616  0E01               	movlw	1
 17918   008618  6FDB               	movwf	sodTRCallback@send_off_ok& (0+255),b
 17919                           
 17920                           ;../universalEvents.c: 450:             break;
 17921   00861A  D014               	goto	l21698
 17922   00861C                     l21696:
 17923                           
 17924                           ; BSR set to: 1
 17925   00861C  51E3               	movf	sodTRCallback@io& (0+255),w,b
 17926   00861E  0D07               	mullw	7
 17927   008620  50F3               	movf	243,w,c
 17928   008622  0F10               	addlw	16
 17929   008624  EC53  F05F         	call	_getNV
 17930   008628  0100               	movlb	0	; () banked
 17931   00862A  518D               	movf	?_getNV& (0+255),w,b
 17932                           
 17933                           ; Switch size 1, requested type "simple"
 17934                           ; Number of cases is 4, Range of values is 0 to 4
 17935                           ; switch strategies available:
 17936                           ; Name         Instructions Cycles
 17937                           ; simple_byte           13     7 (average)
 17938                           ;	Chosen strategy is simple_byte
 17939   00862C  0A00               	xorlw	0	; case 0
 17940   00862E  B4D8               	btfsc	status,2,c
 17941   008630  D7E9               	goto	l21686
 17942   008632  0A02               	xorlw	2	; case 2
 17943   008634  B4D8               	btfsc	status,2,c
 17944   008636  D7EC               	goto	l21692
 17945   008638  0A01               	xorlw	1	; case 3
 17946   00863A  B4D8               	btfsc	status,2,c
 17947   00863C  D7E9               	goto	l21692
 17948   00863E  0A07               	xorlw	7	; case 4
 17949   008640  B4D8               	btfsc	status,2,c
 17950   008642  D7E6               	goto	l21692
 17951   008644                     l21698:
 17952                           
 17953                           ;../universalEvents.c: 453:     if (value != EVENT_UNKNOWN) {
 17954   008644  0101               	movlb	1	; () banked
 17955   008646  29E0               	incf	sodTRCallback@value& (0+255),w,b
 17956   008648  B4D8               	btfsc	status,2,c
 17957   00864A  D7E0               	goto	u22440
 17958                           
 17959                           ; BSR set to: 1
 17960                           ;../universalEvents.c: 454:         sendInvertedProducedEvent((8 + 4*(io))+happeningInde
      +                          x, value, event_inverted, send_on_ok, send_off_ok);
 17961   00864C  C1E0  F1CF         	movff	sodTRCallback@value,sendInvertedProducedEvent@state
 17962   008650  C1E1  F1D0         	movff	sodTRCallback@event_inverted,sendInvertedProducedEvent@invert
 17963   008654  C1DA  F1D1         	movff	sodTRCallback@send_on_ok,sendInvertedProducedEvent@can_send_on
 17964   008658  C1DB  F1D2         	movff	sodTRCallback@send_off_ok,sendInvertedProducedEvent@can_send_off
 17965   00865C  51E3               	movf	sodTRCallback@io& (0+255),w,b
 17966   00865E  0D04               	mullw	4
 17967   008660  50F3               	movf	243,w,c
 17968   008662  25DE               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17969   008664  0F08               	addlw	8
 17970   008666  ECF8  F05D         	call	_sendInvertedProducedEvent
 17971   00866A  D7D0               	goto	u22440
 17972   00866C                     __end_of_sodTRCallback:
 17973                           	callstack 0
 17974                           
 17975 ;; *************** function _APP_GetEventState *****************
 17976 ;; Defined at:
 17977 ;;		line 428 in file "../main.c"
 17978 ;; Parameters:    Size  Location     Type
 17979 ;;  h               1    wreg     unsigned char 
 17980 ;; Auto vars:     Size  Location     Type
 17981 ;;  h               1    2[BANK1 ] unsigned char 
 17982 ;;  happeningInd    1    3[BANK1 ] unsigned char 
 17983 ;;  disable_off     1    1[BANK1 ] enum E12716
 17984 ;;  flags           1    0[BANK1 ] unsigned char 
 17985 ;; Return value:  Size  Location     Type
 17986 ;;                  1    wreg      enum E12736
 17987 ;; Registers used:
 17988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17989 ;; Tracked objects:
 17990 ;;		On entry : 0/0
 17991 ;;		On exit  : 0/0
 17992 ;;		Unchanged: 0/0
 17993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17995 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17996 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17997 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17998 ;;Total ram usage:       11 bytes
 17999 ;; Hardware stack levels used: 1
 18000 ;; Hardware stack levels required when called: 14
 18001 ;; This function calls:
 18002 ;;		___awdiv
 18003 ;;		_getNV
 18004 ;;		_readNVM
 18005 ;; This function is called by:
 18006 ;;		_sodTRCallback
 18007 ;;		_producerProcessMessage
 18008 ;; This function uses a non-reentrant model
 18009 ;;
 18010                           
 18011                           	psect	text49
 18012   003DF0                     __ptext49:
 18013                           	callstack 0
 18014   003DF0                     _APP_GetEventState:
 18015                           	callstack 14
 18016                           
 18017                           ;incstack = 0
 18018                           ;APP_GetEventState@h stored from wreg
 18019   003DF0  0101               	movlb	1	; () banked
 18020   003DF2  6FBF               	movwf	APP_GetEventState@h& (0+255),b
 18021                           
 18022                           ;../main.c: 429:     uint8_t flags;;../main.c: 430:     uint8_t happeningIndex;;../main.
      +                          c: 431:     Boolean disable_off;;../main.c: 433:     io = (((h)-8)/4);
 18023   003DF4  0EF8               	movlw	248
 18024   003DF6  0101               	movlb	1	; () banked
 18025   003DF8  25BF               	addwf	APP_GetEventState@h& (0+255),w,b
 18026   003DFA  0100               	movlb	0	; () banked
 18027   003DFC  6F97               	movwf	___awdiv@dividend& (0+255),b
 18028   003DFE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18029   003E00  0EFF               	movlw	255
 18030   003E02  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 18031   003E04  0E00               	movlw	0
 18032   003E06  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18033   003E08  0E04               	movlw	4
 18034   003E0A  6F99               	movwf	___awdiv@divisor& (0+255),b
 18035   003E0C  EC1B  F054         	call	___awdiv	;wreg free
 18036   003E10  0100               	movlb	0	; () banked
 18037   003E12  5197               	movf	?___awdiv& (0+255),w,b
 18038   003E14  6FCF               	movwf	_io& (0+255),b
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;../main.c: 434:     if (io >= 16) {
 18042   003E16  0E0F               	movlw	15
 18043   003E18  65CF               	cpfsgt	_io& (0+255),b
 18044   003E1A  D002               	goto	l20482
 18045   003E1C                     u20690:
 18046                           
 18047                           ;../main.c: 435:         return EVENT_UNKNOWN;
 18048   003E1C  0EFF               	movlw	255
 18049   003E1E  0012               	return	
 18050   003E20                     l20482:
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;../main.c: 437:     happeningIndex = (((h)-8)%4);
 18054   003E20  0101               	movlb	1	; () banked
 18055   003E22  51BF               	movf	APP_GetEventState@h& (0+255),w,b
 18056   003E24  0FF8               	addlw	248
 18057   003E26  0B03               	andlw	3
 18058   003E28  6FC0               	movwf	APP_GetEventState@happeningIndex& (0+255),b
 18059                           
 18060                           ; BSR set to: 1
 18061                           ;../main.c: 438:     flags = (uint8_t)getNV((16 + 7*(io) + 1));
 18062   003E2A  0100               	movlb	0	; () banked
 18063   003E2C  51CF               	movf	_io& (0+255),w,b
 18064   003E2E  0D07               	mullw	7
 18065   003E30  50F3               	movf	243,w,c
 18066   003E32  0F11               	addlw	17
 18067   003E34  EC53  F05F         	call	_getNV
 18068   003E38  0100               	movlb	0	; () banked
 18069   003E3A  518D               	movf	?_getNV& (0+255),w,b
 18070   003E3C  0101               	movlb	1	; () banked
 18071   003E3E  6FBD               	movwf	APP_GetEventState@flags& (0+255),b
 18072                           
 18073                           ; BSR set to: 1
 18074                           ;../main.c: 439:     disable_off = flags & 0x08;
 18075   003E40  51BD               	movf	APP_GetEventState@flags& (0+255),w,b
 18076   003E42  0B08               	andlw	8
 18077   003E44  6FBE               	movwf	APP_GetEventState@disable_off& (0+255),b
 18078                           
 18079                           ;../main.c: 441:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 18080   003E46  D179               	goto	l20560
 18081   003E48                     l20488:
 18082                           
 18083                           ; BSR set to: 1
 18084                           ;../main.c: 446:                     return outputState[io]?EVENT_ON:EVENT_OFF;
 18085   003E48  0EB4               	movlw	low _outputState
 18086   003E4A  0100               	movlb	0	; () banked
 18087   003E4C  25CF               	addwf	_io& (0+255),w,b
 18088   003E4E  6ED9               	movwf	fsr2l,c
 18089   003E50  6ADA               	clrf	fsr2h,c
 18090   003E52  0E02               	movlw	high _outputState
 18091   003E54  22DA               	addwfc	fsr2h,f,c
 18092   003E56  50DF               	movf	indf2,w,c
 18093   003E58  B4D8               	btfsc	status,2,c
 18094   003E5A  D002               	goto	u20700
 18095   003E5C  0E01               	movlw	1
 18096   003E5E  0012               	return	
 18097   003E60                     u20700:
 18098   003E60  0E00               	movlw	0
 18099   003E62  0012               	return	
 18100   003E64                     l20492:
 18101                           
 18102                           ; BSR set to: 1
 18103                           ;../main.c: 449:                     if (disable_off) {
 18104   003E64  51BE               	movf	APP_GetEventState@disable_off& (0+255),w,b
 18105   003E66  B4D8               	btfsc	status,2,c
 18106   003E68  D7D9               	goto	u20690
 18107                           
 18108                           ; BSR set to: 1
 18109                           ;../main.c: 450:                         return (outputState[io]==0)?EVENT_ON:EVENT_OFF;
 18110   003E6A  0EB4               	movlw	low _outputState
 18111   003E6C  0100               	movlb	0	; () banked
 18112   003E6E  25CF               	addwf	_io& (0+255),w,b
 18113   003E70  6ED9               	movwf	fsr2l,c
 18114   003E72  6ADA               	clrf	fsr2h,c
 18115   003E74  0E02               	movlw	high _outputState
 18116   003E76  22DA               	addwfc	fsr2h,f,c
 18117   003E78  50DF               	movf	indf2,w,c
 18118   003E7A  A4D8               	btfss	status,2,c
 18119   003E7C  D002               	goto	u20730
 18120   003E7E  0E01               	movlw	1
 18121   003E80  0012               	return	
 18122   003E82                     u20730:
 18123   003E82  0E00               	movlw	0
 18124   003E84  0012               	return	
 18125   003E86                     l20500:
 18126                           
 18127                           ; BSR set to: 0
 18128   003E86  0101               	movlb	1	; () banked
 18129   003E88  51C0               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18130                           
 18131                           ; Switch size 1, requested type "simple"
 18132                           ; Number of cases is 2, Range of values is 0 to 1
 18133                           ; switch strategies available:
 18134                           ; Name         Instructions Cycles
 18135                           ; simple_byte            7     4 (average)
 18136                           ;	Chosen strategy is simple_byte
 18137   003E8A  0A00               	xorlw	0	; case 0
 18138   003E8C  B4D8               	btfsc	status,2,c
 18139   003E8E  D7DC               	goto	l20488
 18140   003E90  0A01               	xorlw	1	; case 1
 18141   003E92  B4D8               	btfsc	status,2,c
 18142   003E94  D7E7               	goto	l20492
 18143   003E96  D7C2               	goto	u20690
 18144   003E98                     l20502:
 18145                           
 18146                           ; BSR set to: 1
 18147                           ;../main.c: 461:                     return (readNVM(EEPROM_NVM_TYPE, ((eeprom_address_t
      +                          )((0x3FF -8))-25)+io)!=2)?EVENT_ON:EVENT_OFF;
 18148   003E98  0EDE               	movlw	222
 18149   003E9A  0100               	movlb	0	; () banked
 18150   003E9C  25CF               	addwf	_io& (0+255),w,b
 18151   003E9E  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18152   003EA0  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18153   003EA2  0E03               	movlw	3
 18154   003EA4  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18155   003EA6  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18156   003EAA  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18157   003EAE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18158   003EB0  0E00               	movlw	0
 18159   003EB2  ECD1  F05A         	call	_readNVM
 18160   003EB6  0E02               	movlw	2
 18161   003EB8  0100               	movlb	0	; () banked
 18162   003EBA  1991               	xorwf	?_readNVM& (0+255),w,b
 18163   003EBC  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
 18164   003EBE  B4D8               	btfsc	status,2,c
 18165   003EC0  D002               	goto	u20750
 18166   003EC2  0E01               	movlw	1
 18167   003EC4  0012               	return	
 18168   003EC6                     u20750:
 18169   003EC6  0E00               	movlw	0
 18170   003EC8  0012               	return	
 18171   003ECA                     l20508:
 18172                           
 18173                           ; BSR set to: 0
 18174   003ECA  0101               	movlb	1	; () banked
 18175   003ECC  51C0               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18176                           
 18177                           ; Switch size 1, requested type "simple"
 18178                           ; Number of cases is 1, Range of values is 0 to 0
 18179                           ; switch strategies available:
 18180                           ; Name         Instructions Cycles
 18181                           ; simple_byte            4     3 (average)
 18182                           ;	Chosen strategy is simple_byte
 18183   003ECE  0A00               	xorlw	0	; case 0
 18184   003ED0  B4D8               	btfsc	status,2,c
 18185   003ED2  D7E2               	goto	l20502
 18186   003ED4  D7A3               	goto	u20690
 18187   003ED6                     l20510:
 18188                           
 18189                           ; BSR set to: 1
 18190                           ;../main.c: 468:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 2)))?EVENT_ON:EVENT_OFF;
 18191   003ED6  0100               	movlb	0	; () banked
 18192   003ED8  51CF               	movf	_io& (0+255),w,b
 18193   003EDA  0D07               	mullw	7
 18194   003EDC  50F3               	movf	243,w,c
 18195   003EDE  0F12               	addlw	18
 18196   003EE0  EC53  F05F         	call	_getNV
 18197   003EE4  0E30               	movlw	low _currentPos
 18198   003EE6  0100               	movlb	0	; () banked
 18199   003EE8  25CF               	addwf	_io& (0+255),w,b
 18200   003EEA  6ED9               	movwf	fsr2l,c
 18201   003EEC  6ADA               	clrf	fsr2h,c
 18202   003EEE  0E01               	movlw	high _currentPos
 18203   003EF0  22DA               	addwfc	fsr2h,f,c
 18204   003EF2  50DE               	movf	postinc2,w,c
 18205   003EF4  198D               	xorwf	?_getNV& (0+255),w,b
 18206   003EF6  A4D8               	btfss	status,2,c
 18207   003EF8  D002               	goto	u20770
 18208   003EFA  0E01               	movlw	1
 18209   003EFC  0012               	return	
 18210   003EFE                     u20770:
 18211   003EFE  0E00               	movlw	0
 18212   003F00  0012               	return	
 18213   003F02                     l20514:
 18214                           
 18215                           ; BSR set to: 1
 18216                           ;../main.c: 470:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 3)))?EVENT_ON:EVENT_OFF;
 18217   003F02  0100               	movlb	0	; () banked
 18218   003F04  51CF               	movf	_io& (0+255),w,b
 18219   003F06  0D07               	mullw	7
 18220   003F08  50F3               	movf	243,w,c
 18221   003F0A  0F13               	addlw	19
 18222   003F0C  EC53  F05F         	call	_getNV
 18223   003F10  0E30               	movlw	low _currentPos
 18224   003F12  0100               	movlb	0	; () banked
 18225   003F14  25CF               	addwf	_io& (0+255),w,b
 18226   003F16  6ED9               	movwf	fsr2l,c
 18227   003F18  6ADA               	clrf	fsr2h,c
 18228   003F1A  0E01               	movlw	high _currentPos
 18229   003F1C  22DA               	addwfc	fsr2h,f,c
 18230   003F1E  50DE               	movf	postinc2,w,c
 18231   003F20  198D               	xorwf	?_getNV& (0+255),w,b
 18232   003F22  A4D8               	btfss	status,2,c
 18233   003F24  D002               	goto	u20790
 18234   003F26  0E01               	movlw	1
 18235   003F28  0012               	return	
 18236   003F2A                     u20790:
 18237   003F2A  0E00               	movlw	0
 18238   003F2C  0012               	return	
 18239   003F2E                     l20518:
 18240                           
 18241                           ; BSR set to: 1
 18242                           ;../main.c: 473:                     return (currentPos[io] >= ((uint8_t)getNV((16 + 7*(
      +                          io) + 3)))/2 +
 18243   003F2E  0100               	movlb	0	; () banked
 18244   003F30  51CF               	movf	_io& (0+255),w,b
 18245   003F32  0D07               	mullw	7
 18246   003F34  50F3               	movf	243,w,c
 18247   003F36  0F13               	addlw	19
 18248   003F38  EC53  F05F         	call	_getNV
 18249   003F3C  0100               	movlb	0	; () banked
 18250   003F3E  518D               	movf	?_getNV& (0+255),w,b
 18251   003F40  6F97               	movwf	___awdiv@dividend& (0+255),b
 18252   003F42  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18253   003F44  0E00               	movlw	0
 18254   003F46  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18255   003F48  0E02               	movlw	2
 18256   003F4A  6F99               	movwf	___awdiv@divisor& (0+255),b
 18257   003F4C  EC1B  F054         	call	___awdiv	;wreg free
 18258   003F50  C097  F09F         	movff	?___awdiv,??_APP_GetEventState
 18259   003F54  C098  F0A0         	movff	?___awdiv+1,??_APP_GetEventState+1
 18260   003F58  0100               	movlb	0	; () banked
 18261   003F5A  51CF               	movf	_io& (0+255),w,b
 18262   003F5C  0D07               	mullw	7
 18263   003F5E  50F3               	movf	243,w,c
 18264   003F60  0F12               	addlw	18
 18265   003F62  EC53  F05F         	call	_getNV
 18266   003F66  0100               	movlb	0	; () banked
 18267   003F68  518D               	movf	?_getNV& (0+255),w,b
 18268   003F6A  6F97               	movwf	___awdiv@dividend& (0+255),b
 18269   003F6C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18270   003F6E  0E00               	movlw	0
 18271   003F70  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18272   003F72  0E02               	movlw	2
 18273   003F74  6F99               	movwf	___awdiv@divisor& (0+255),b
 18274   003F76  EC1B  F054         	call	___awdiv	;wreg free
 18275   003F7A  0100               	movlb	0	; () banked
 18276   003F7C  5197               	movf	?___awdiv& (0+255),w,b
 18277   003F7E  259F               	addwf	??_APP_GetEventState& (0+255),w,b
 18278   003F80  6FA1               	movwf	(??_APP_GetEventState+2)& (0+255),b
 18279   003F82  5198               	movf	(?___awdiv+1)& (0+255),w,b
 18280   003F84  21A0               	addwfc	(??_APP_GetEventState+1)& (0+255),w,b
 18281   003F86  6FA2               	movwf	(??_APP_GetEventState+3)& (0+255),b
 18282   003F88  0E30               	movlw	low _currentPos
 18283   003F8A  25CF               	addwf	_io& (0+255),w,b
 18284   003F8C  6ED9               	movwf	fsr2l,c
 18285   003F8E  6ADA               	clrf	fsr2h,c
 18286   003F90  0E01               	movlw	high _currentPos
 18287   003F92  22DA               	addwfc	fsr2h,f,c
 18288   003F94  50DF               	movf	indf2,w,c
 18289   003F96  6FA3               	movwf	(??_APP_GetEventState+4)& (0+255),b
 18290   003F98  6BA4               	clrf	(??_APP_GetEventState+5)& (0+255),b
 18291   003F9A  51A1               	movf	(??_APP_GetEventState+2)& (0+255),w,b
 18292   003F9C  5DA3               	subwf	(??_APP_GetEventState+4)& (0+255),w,b
 18293   003F9E  51A4               	movf	(??_APP_GetEventState+5)& (0+255),w,b
 18294   003FA0  0A80               	xorlw	128
 18295   003FA2  6FA5               	movwf	(??_APP_GetEventState+6)& (0+255),b
 18296   003FA4  51A2               	movf	(??_APP_GetEventState+3)& (0+255),w,b
 18297   003FA6  0A80               	xorlw	128
 18298   003FA8  59A5               	subwfb	(??_APP_GetEventState+6)& (0+255),w,b
 18299   003FAA  A0D8               	btfss	status,0,c
 18300   003FAC  D002               	goto	u20810
 18301   003FAE  0E01               	movlw	1
 18302   003FB0  0012               	return	
 18303   003FB2                     u20810:
 18304   003FB2  0E00               	movlw	0
 18305   003FB4  0012               	return	
 18306   003FB6                     l20524:
 18307                           
 18308                           ; BSR set to: 0
 18309   003FB6  0101               	movlb	1	; () banked
 18310   003FB8  51C0               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18311                           
 18312                           ; Switch size 1, requested type "simple"
 18313                           ; Number of cases is 3, Range of values is 0 to 2
 18314                           ; switch strategies available:
 18315                           ; Name         Instructions Cycles
 18316                           ; simple_byte           10     6 (average)
 18317                           ;	Chosen strategy is simple_byte
 18318   003FBA  0A00               	xorlw	0	; case 0
 18319   003FBC  B4D8               	btfsc	status,2,c
 18320   003FBE  D78B               	goto	l20510
 18321   003FC0  0A01               	xorlw	1	; case 1
 18322   003FC2  B4D8               	btfsc	status,2,c
 18323   003FC4  D7B4               	goto	l20518
 18324   003FC6  0A03               	xorlw	3	; case 2
 18325   003FC8  B4D8               	btfsc	status,2,c
 18326   003FCA  D79B               	goto	l20514
 18327   003FCC  D727               	goto	u20690
 18328   003FCE                     l20526:
 18329                           
 18330                           ; BSR set to: 1
 18331                           ;../main.c: 481:                     return ((uint8_t)readNVM(EEPROM_NVM_TYPE, ((eeprom_
      +                          address_t)((0x3FF -8))-25)+io))?EVENT_ON:EVENT_OFF;
 18332   003FCE  0EDE               	movlw	222
 18333   003FD0  0100               	movlb	0	; () banked
 18334   003FD2  25CF               	addwf	_io& (0+255),w,b
 18335   003FD4  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18336   003FD6  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18337   003FD8  0E03               	movlw	3
 18338   003FDA  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18339   003FDC  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18340   003FE0  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18341   003FE4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18342   003FE6  0E00               	movlw	0
 18343   003FE8  ECD1  F05A         	call	_readNVM
 18344   003FEC  0100               	movlb	0	; () banked
 18345   003FEE  6791               	tstfsz	?_readNVM& (0+255),b
 18346   003FF0  0E01               	movlw	1
 18347   003FF2  0012               	return	
 18348   003FF4                     l20532:
 18349                           
 18350                           ; BSR set to: 0
 18351   003FF4  0101               	movlb	1	; () banked
 18352   003FF6  51C0               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18353                           
 18354                           ; Switch size 1, requested type "simple"
 18355                           ; Number of cases is 1, Range of values is 0 to 0
 18356                           ; switch strategies available:
 18357                           ; Name         Instructions Cycles
 18358                           ; simple_byte            4     3 (average)
 18359                           ;	Chosen strategy is simple_byte
 18360   003FF8  0A00               	xorlw	0	; case 0
 18361   003FFA  B4D8               	btfsc	status,2,c
 18362   003FFC  D7E8               	goto	l20526
 18363   003FFE  D70E               	goto	u20690
 18364   004000                     l20534:
 18365                           
 18366                           ; BSR set to: 1
 18367                           ;../main.c: 489:                     return (currentPos[io] == getNV((16 + 7*(io) + 3)))
      +                          ?EVENT_ON:EVENT_OFF;
 18368   004000  0100               	movlb	0	; () banked
 18369   004002  51CF               	movf	_io& (0+255),w,b
 18370   004004  0D07               	mullw	7
 18371   004006  50F3               	movf	243,w,c
 18372   004008  0F13               	addlw	19
 18373   00400A  EC53  F05F         	call	_getNV
 18374   00400E  0E30               	movlw	low _currentPos
 18375   004010  0100               	movlb	0	; () banked
 18376   004012  25CF               	addwf	_io& (0+255),w,b
 18377   004014  6ED9               	movwf	fsr2l,c
 18378   004016  6ADA               	clrf	fsr2h,c
 18379   004018  0E01               	movlw	high _currentPos
 18380   00401A  22DA               	addwfc	fsr2h,f,c
 18381   00401C  50DF               	movf	indf2,w,c
 18382   00401E  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18383   004020  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18384   004022  518D               	movf	?_getNV& (0+255),w,b
 18385   004024  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18386   004026  E106               	bnz	u20850
 18387   004028  518E               	movf	(?_getNV+1)& (0+255),w,b
 18388   00402A  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18389   00402C  A4D8               	btfss	status,2,c
 18390   00402E  D002               	goto	u20850
 18391   004030  0E01               	movlw	1
 18392   004032  0012               	return	
 18393   004034                     u20850:
 18394   004034  0E00               	movlw	0
 18395   004036  0012               	return	
 18396   004038                     l20538:
 18397                           
 18398                           ; BSR set to: 1
 18399                           ;../main.c: 491:                     return (currentPos[io] == getNV((16 + 7*(io) + 4)))
      +                          ?EVENT_ON:EVENT_OFF;
 18400   004038  0100               	movlb	0	; () banked
 18401   00403A  51CF               	movf	_io& (0+255),w,b
 18402   00403C  0D07               	mullw	7
 18403   00403E  50F3               	movf	243,w,c
 18404   004040  0F14               	addlw	20
 18405   004042  EC53  F05F         	call	_getNV
 18406   004046  0E30               	movlw	low _currentPos
 18407   004048  0100               	movlb	0	; () banked
 18408   00404A  25CF               	addwf	_io& (0+255),w,b
 18409   00404C  6ED9               	movwf	fsr2l,c
 18410   00404E  6ADA               	clrf	fsr2h,c
 18411   004050  0E01               	movlw	high _currentPos
 18412   004052  22DA               	addwfc	fsr2h,f,c
 18413   004054  50DF               	movf	indf2,w,c
 18414   004056  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18415   004058  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18416   00405A  518D               	movf	?_getNV& (0+255),w,b
 18417   00405C  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18418   00405E  E106               	bnz	u20870
 18419   004060  518E               	movf	(?_getNV+1)& (0+255),w,b
 18420   004062  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18421   004064  A4D8               	btfss	status,2,c
 18422   004066  D002               	goto	u20870
 18423   004068  0E01               	movlw	1
 18424   00406A  0012               	return	
 18425   00406C                     u20870:
 18426   00406C  0E00               	movlw	0
 18427   00406E  0012               	return	
 18428   004070                     l20542:
 18429                           
 18430                           ; BSR set to: 1
 18431                           ;../main.c: 494:                     if (getNV((16 + 7*(io) + 2)) > 2) {
 18432   004070  0100               	movlb	0	; () banked
 18433   004072  51CF               	movf	_io& (0+255),w,b
 18434   004074  0D07               	mullw	7
 18435   004076  50F3               	movf	243,w,c
 18436   004078  0F12               	addlw	18
 18437   00407A  EC53  F05F         	call	_getNV
 18438   00407E  0100               	movlb	0	; () banked
 18439   004080  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18440   004082  D6CC               	goto	u20690
 18441   004084  518E               	movf	(?_getNV+1)& (0+255),w,b
 18442   004086  E104               	bnz	u20890
 18443   004088  0E03               	movlw	3
 18444   00408A  5D8D               	subwf	?_getNV& (0+255),w,b
 18445   00408C  A0D8               	btfss	status,0,c
 18446   00408E  D6C6               	goto	u20690
 18447   004090                     u20890:
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;../main.c: 495:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          5)))?EVENT_ON:EVENT_OFF;
 18451   004090  51CF               	movf	_io& (0+255),w,b
 18452   004092  0D07               	mullw	7
 18453   004094  50F3               	movf	243,w,c
 18454   004096  0F15               	addlw	21
 18455   004098  EC53  F05F         	call	_getNV
 18456   00409C  0E30               	movlw	low _currentPos
 18457   00409E  0100               	movlb	0	; () banked
 18458   0040A0  25CF               	addwf	_io& (0+255),w,b
 18459   0040A2  6ED9               	movwf	fsr2l,c
 18460   0040A4  6ADA               	clrf	fsr2h,c
 18461   0040A6  0E01               	movlw	high _currentPos
 18462   0040A8  22DA               	addwfc	fsr2h,f,c
 18463   0040AA  50DF               	movf	indf2,w,c
 18464   0040AC  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18465   0040AE  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18466   0040B0  518D               	movf	?_getNV& (0+255),w,b
 18467   0040B2  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18468   0040B4  E106               	bnz	u20900
 18469   0040B6  518E               	movf	(?_getNV+1)& (0+255),w,b
 18470   0040B8  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18471   0040BA  A4D8               	btfss	status,2,c
 18472   0040BC  D002               	goto	u20900
 18473   0040BE  0E01               	movlw	1
 18474   0040C0  0012               	return	
 18475   0040C2                     u20900:
 18476   0040C2  0E00               	movlw	0
 18477   0040C4  0012               	return	
 18478   0040C6                     l20548:
 18479                           
 18480                           ; BSR set to: 1
 18481                           ;../main.c: 499:                     if (getNV((16 + 7*(io) + 2)) > 3) {
 18482   0040C6  0100               	movlb	0	; () banked
 18483   0040C8  51CF               	movf	_io& (0+255),w,b
 18484   0040CA  0D07               	mullw	7
 18485   0040CC  50F3               	movf	243,w,c
 18486   0040CE  0F12               	addlw	18
 18487   0040D0  EC53  F05F         	call	_getNV
 18488   0040D4  0100               	movlb	0	; () banked
 18489   0040D6  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18490   0040D8  D6A1               	goto	u20690
 18491   0040DA  518E               	movf	(?_getNV+1)& (0+255),w,b
 18492   0040DC  E104               	bnz	u20920
 18493   0040DE  0E04               	movlw	4
 18494   0040E0  5D8D               	subwf	?_getNV& (0+255),w,b
 18495   0040E2  A0D8               	btfss	status,0,c
 18496   0040E4  D69B               	goto	u20690
 18497   0040E6                     u20920:
 18498                           
 18499                           ; BSR set to: 0
 18500                           ;../main.c: 500:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          6)))?EVENT_ON:EVENT_OFF;
 18501   0040E6  51CF               	movf	_io& (0+255),w,b
 18502   0040E8  0D07               	mullw	7
 18503   0040EA  50F3               	movf	243,w,c
 18504   0040EC  0F16               	addlw	22
 18505   0040EE  EC53  F05F         	call	_getNV
 18506   0040F2  0E30               	movlw	low _currentPos
 18507   0040F4  0100               	movlb	0	; () banked
 18508   0040F6  25CF               	addwf	_io& (0+255),w,b
 18509   0040F8  6ED9               	movwf	fsr2l,c
 18510   0040FA  6ADA               	clrf	fsr2h,c
 18511   0040FC  0E01               	movlw	high _currentPos
 18512   0040FE  22DA               	addwfc	fsr2h,f,c
 18513   004100  50DF               	movf	indf2,w,c
 18514   004102  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18515   004104  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18516   004106  518D               	movf	?_getNV& (0+255),w,b
 18517   004108  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18518   00410A  E106               	bnz	u20930
 18519   00410C  518E               	movf	(?_getNV+1)& (0+255),w,b
 18520   00410E  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18521   004110  A4D8               	btfss	status,2,c
 18522   004112  D002               	goto	u20930
 18523   004114  0E01               	movlw	1
 18524   004116  0012               	return	
 18525   004118                     u20930:
 18526   004118  0E00               	movlw	0
 18527   00411A  0012               	return	
 18528   00411C                     l20556:
 18529                           
 18530                           ; BSR set to: 0
 18531   00411C  0101               	movlb	1	; () banked
 18532   00411E  51C0               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18533                           
 18534                           ; Switch size 1, requested type "simple"
 18535                           ; Number of cases is 4, Range of values is 0 to 3
 18536                           ; switch strategies available:
 18537                           ; Name         Instructions Cycles
 18538                           ; simple_byte           13     7 (average)
 18539                           ;	Chosen strategy is simple_byte
 18540   004120  0A00               	xorlw	0	; case 0
 18541   004122  B4D8               	btfsc	status,2,c
 18542   004124  D76D               	goto	l20534
 18543   004126  0A01               	xorlw	1	; case 1
 18544   004128  B4D8               	btfsc	status,2,c
 18545   00412A  D786               	goto	l20538
 18546   00412C  0A03               	xorlw	3	; case 2
 18547   00412E  B4D8               	btfsc	status,2,c
 18548   004130  D79F               	goto	l20542
 18549   004132  0A01               	xorlw	1	; case 3
 18550   004134  B4D8               	btfsc	status,2,c
 18551   004136  D7C7               	goto	l20548
 18552   004138  D671               	goto	u20690
 18553   00413A                     l20560:
 18554                           
 18555                           ; BSR set to: 1
 18556   00413A  0100               	movlb	0	; () banked
 18557   00413C  51CF               	movf	_io& (0+255),w,b
 18558   00413E  0D07               	mullw	7
 18559   004140  50F3               	movf	243,w,c
 18560   004142  0F10               	addlw	16
 18561   004144  EC53  F05F         	call	_getNV
 18562   004148  0100               	movlb	0	; () banked
 18563   00414A  518D               	movf	?_getNV& (0+255),w,b
 18564                           
 18565                           ; Switch size 1, requested type "simple"
 18566                           ; Number of cases is 5, Range of values is 0 to 4
 18567                           ; switch strategies available:
 18568                           ; Name         Instructions Cycles
 18569                           ; simple_byte           16     9 (average)
 18570                           ;	Chosen strategy is simple_byte
 18571   00414C  0A00               	xorlw	0	; case 0
 18572   00414E  B4D8               	btfsc	status,2,c
 18573   004150  D69A               	goto	l20500
 18574   004152  0A01               	xorlw	1	; case 1
 18575   004154  B4D8               	btfsc	status,2,c
 18576   004156  D6B9               	goto	l20508
 18577   004158  0A03               	xorlw	3	; case 2
 18578   00415A  B4D8               	btfsc	status,2,c
 18579   00415C  D72C               	goto	l20524
 18580   00415E  0A01               	xorlw	1	; case 3
 18581   004160  B4D8               	btfsc	status,2,c
 18582   004162  D748               	goto	l20532
 18583   004164  0A07               	xorlw	7	; case 4
 18584   004166  B4D8               	btfsc	status,2,c
 18585   004168  D7D9               	goto	l20556
 18586   00416A  D658               	goto	u20690
 18587   00416C                     __end_of_APP_GetEventState:
 18588                           	callstack 0
 18589                           
 18590 ;; *************** function _numEv *****************
 18591 ;; Defined at:
 18592 ;;		line 1154 in file "../../VLCBlib_PIC/event_teach_large.c"
 18593 ;; Parameters:    Size  Location     Type
 18594 ;;  tableIndex      1    wreg     unsigned char 
 18595 ;; Auto vars:     Size  Location     Type
 18596 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 18597 ;;  f               1   66[BANK0 ] struct .
 18598 ;;  num             1   65[BANK0 ] unsigned char 
 18599 ;; Return value:  Size  Location     Type
 18600 ;;                  1    wreg      unsigned char 
 18601 ;; Registers used:
 18602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18603 ;; Tracked objects:
 18604 ;;		On entry : 0/0
 18605 ;;		On exit  : 0/0
 18606 ;;		Unchanged: 0/0
 18607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18609 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18610 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18611 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18612 ;;Total ram usage:        7 bytes
 18613 ;; Hardware stack levels used: 1
 18614 ;; Hardware stack levels required when called: 15
 18615 ;; This function calls:
 18616 ;;		_readNVM
 18617 ;;		_validStart
 18618 ;; This function is called by:
 18619 ;;		_doReval
 18620 ;;		_doReqev
 18621 ;;		_reqevCallback
 18622 ;; This function uses a non-reentrant model
 18623 ;;
 18624                           
 18625                           	psect	text50
 18626   008BBA                     __ptext50:
 18627                           	callstack 0
 18628   008BBA                     _numEv:
 18629                           	callstack 12
 18630                           
 18631                           ;incstack = 0
 18632                           ;numEv@tableIndex stored from wreg
 18633   008BBA  0100               	movlb	0	; () banked
 18634   008BBC  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18635                           
 18636                           ;../../VLCBlib_PIC/event_teach_large.c: 1155:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1156:     uint8_t num=0;
 18637   008BBE  0E00               	movlw	0
 18638   008BC0  0100               	movlb	0	; () banked
 18639   008BC2  6FA1               	movwf	numEv@num& (0+255),b
 18640                           
 18641                           ; BSR set to: 0
 18642                           ;../../VLCBlib_PIC/event_teach_large.c: 1157:     if ( ! validStart(tableIndex)) {
 18643   008BC4  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18644   008BC6  EC3A  F05D         	call	_validStart
 18645   008BCA  0900               	iorlw	0
 18646   008BCC  A4D8               	btfss	status,2,c
 18647   008BCE  D002               	goto	l21318
 18648   008BD0                     u22020:
 18649                           
 18650                           ;../../VLCBlib_PIC/event_teach_large.c: 1159:         return 0;
 18651   008BD0  0E00               	movlw	0
 18652   008BD2  0012               	return	
 18653   008BD4                     l21318:
 18654                           
 18655                           ;../../VLCBlib_PIC/event_teach_large.c: 1161:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 18656   008BD4  0100               	movlb	0	; () banked
 18657   008BD6  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18658   008BD8  6F9D               	movwf	??_numEv& (0+255),b
 18659   008BDA  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18660   008BDC  3B9D               	swapf	??_numEv& (0+255),f,b
 18661   008BDE  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18662   008BE0  0EF0               	movlw	240
 18663   008BE2  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18664   008BE4  519D               	movf	??_numEv& (0+255),w,b
 18665   008BE6  0B0F               	andlw	15
 18666   008BE8  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18667   008BEA  0EF0               	movlw	240
 18668   008BEC  179D               	andwf	??_numEv& (0+255),f,b
 18669   008BEE  0E80               	movlw	128
 18670   008BF0  259D               	addwf	??_numEv& (0+255),w,b
 18671   008BF2  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18672   008BF4  0EEF               	movlw	239
 18673   008BF6  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18674   008BF8  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18675   008BFA  C09F  F091         	movff	??_numEv+2,readNVM@index
 18676   008BFE  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18677   008C02  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18678   008C04  0E01               	movlw	1
 18679   008C06  ECD1  F05A         	call	_readNVM
 18680   008C0A  0100               	movlb	0	; () banked
 18681   008C0C  5191               	movf	?_readNVM& (0+255),w,b
 18682   008C0E  6FA2               	movwf	numEv@f& (0+255),b
 18683                           
 18684                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:     while (f.continued) {
 18685   008C10  D039               	goto	l21332
 18686   008C12                     l21320:
 18687                           
 18688                           ; BSR set to: 0
 18689                           ;../../VLCBlib_PIC/event_teach_large.c: 1163:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 18690   008C12  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18691   008C14  0D10               	mullw	16
 18692   008C16  CFF3 F09D          	movff	prodl,??_numEv
 18693   008C1A  CFF4 F09E          	movff	prodh,??_numEv+1
 18694   008C1E  0E81               	movlw	129
 18695   008C20  259D               	addwf	??_numEv& (0+255),w,b
 18696   008C22  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18697   008C24  0EEF               	movlw	239
 18698   008C26  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18699   008C28  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18700   008C2A  C09F  F091         	movff	??_numEv+2,readNVM@index
 18701   008C2E  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18702   008C32  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18703   008C34  0E01               	movlw	1
 18704   008C36  ECD1  F05A         	call	_readNVM
 18705   008C3A  0100               	movlb	0	; () banked
 18706   008C3C  5191               	movf	?_readNVM& (0+255),w,b
 18707   008C3E  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18708                           
 18709                           ; BSR set to: 0
 18710                           ;../../VLCBlib_PIC/event_teach_large.c: 1164:         if (tableIndex == 0xff) {
 18711   008C40  29A3               	incf	numEv@tableIndex& (0+255),w,b
 18712   008C42  B4D8               	btfsc	status,2,c
 18713   008C44  D7C5               	goto	u22020
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;../../VLCBlib_PIC/event_teach_large.c: 1167:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 18717   008C46  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18718   008C48  6F9D               	movwf	??_numEv& (0+255),b
 18719   008C4A  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18720   008C4C  3B9D               	swapf	??_numEv& (0+255),f,b
 18721   008C4E  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18722   008C50  0EF0               	movlw	240
 18723   008C52  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18724   008C54  519D               	movf	??_numEv& (0+255),w,b
 18725   008C56  0B0F               	andlw	15
 18726   008C58  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18727   008C5A  0EF0               	movlw	240
 18728   008C5C  179D               	andwf	??_numEv& (0+255),f,b
 18729   008C5E  0E80               	movlw	128
 18730   008C60  259D               	addwf	??_numEv& (0+255),w,b
 18731   008C62  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18732   008C64  0EEF               	movlw	239
 18733   008C66  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18734   008C68  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18735   008C6A  C09F  F091         	movff	??_numEv+2,readNVM@index
 18736   008C6E  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18737   008C72  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18738   008C74  0E01               	movlw	1
 18739   008C76  ECD1  F05A         	call	_readNVM
 18740   008C7A  0100               	movlb	0	; () banked
 18741   008C7C  5191               	movf	?_readNVM& (0+255),w,b
 18742   008C7E  6FA2               	movwf	numEv@f& (0+255),b
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;../../VLCBlib_PIC/event_teach_large.c: 1168:         num += 10;
 18746   008C80  0E0A               	movlw	10
 18747   008C82  27A1               	addwf	numEv@num& (0+255),f,b
 18748   008C84                     l21332:
 18749                           
 18750                           ; BSR set to: 0
 18751                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:     while (f.continued) {
 18752   008C84  B9A2               	btfsc	numEv@f& (0+255),4,b
 18753   008C86  D7C5               	goto	l21320
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;../../VLCBlib_PIC/event_teach_large.c: 1170:     num += f.eVsUsed;
 18757   008C88  51A2               	movf	numEv@f& (0+255),w,b
 18758   008C8A  0B0F               	andlw	15
 18759   008C8C  27A1               	addwf	numEv@num& (0+255),f,b
 18760                           
 18761                           ; BSR set to: 0
 18762                           ;../../VLCBlib_PIC/event_teach_large.c: 1171:     return num;
 18763   008C8E  51A1               	movf	numEv@num& (0+255),w,b
 18764   008C90  0012               	return		;funcret
 18765   008C92                     __end_of_numEv:
 18766                           	callstack 0
 18767                           
 18768 ;; *************** function _tableIndexToEvtIdx *****************
 18769 ;; Defined at:
 18770 ;;		line 1273 in file "../../VLCBlib_PIC/event_teach_large.c"
 18771 ;; Parameters:    Size  Location     Type
 18772 ;;  tableIndex      1    wreg     unsigned char 
 18773 ;; Auto vars:     Size  Location     Type
 18774 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 18775 ;; Return value:  Size  Location     Type
 18776 ;;                  1    wreg      unsigned char 
 18777 ;; Registers used:
 18778 ;;		wreg, status,2, status,0
 18779 ;; Tracked objects:
 18780 ;;		On entry : 0/0
 18781 ;;		On exit  : 0/0
 18782 ;;		Unchanged: 0/0
 18783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18787 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18788 ;;Total ram usage:        1 bytes
 18789 ;; Hardware stack levels used: 1
 18790 ;; Hardware stack levels required when called: 12
 18791 ;; This function calls:
 18792 ;;		Nothing
 18793 ;; This function is called by:
 18794 ;;		_nerdCallback
 18795 ;; This function uses a non-reentrant model
 18796 ;;
 18797                           
 18798                           	psect	text51
 18799   00C80C                     __ptext51:
 18800                           	callstack 0
 18801   00C80C                     _tableIndexToEvtIdx:
 18802                           	callstack 15
 18803                           
 18804                           ;incstack = 0
 18805                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 18806   00C80C  0100               	movlb	0	; () banked
 18807   00C80E  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 18808                           
 18809                           ;../../VLCBlib_PIC/event_teach_large.c: 1274:     return tableIndex + 1;
 18810   00C810  0100               	movlb	0	; () banked
 18811   00C812  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 18812                           
 18813                           ; BSR set to: 0
 18814   00C814  0012               	return		;funcret
 18815   00C816                     __end_of_tableIndexToEvtIdx:
 18816                           	callstack 0
 18817                           
 18818 ;; *************** function _setNV *****************
 18819 ;; Defined at:
 18820 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 18821 ;; Parameters:    Size  Location     Type
 18822 ;;  index           1    wreg     unsigned char 
 18823 ;;  value           1   58[BANK1 ] unsigned char 
 18824 ;; Auto vars:     Size  Location     Type
 18825 ;;  index           1   62[BANK1 ] unsigned char 
 18826 ;;  oldValue        1   61[BANK1 ] unsigned char 
 18827 ;; Return value:  Size  Location     Type
 18828 ;;                  1    wreg      unsigned char 
 18829 ;; Registers used:
 18830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18831 ;; Tracked objects:
 18832 ;;		On entry : 0/0
 18833 ;;		On exit  : 0/0
 18834 ;;		Unchanged: 0/0
 18835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18836 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18837 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18838 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18840 ;;Total ram usage:        5 bytes
 18841 ;; Hardware stack levels used: 1
 18842 ;; Hardware stack levels required when called: 26
 18843 ;; This function calls:
 18844 ;;		_APP_nvValidate
 18845 ;;		_APP_nvValueChanged
 18846 ;;		_writeNVM
 18847 ;; This function is called by:
 18848 ;;		_nvProcessMessage
 18849 ;; This function uses a non-reentrant model
 18850 ;;
 18851                           
 18852                           	psect	text52
 18853   00AC3E                     __ptext52:
 18854                           	callstack 0
 18855   00AC3E                     _setNV:
 18856                           	callstack 2
 18857                           
 18858                           ; BSR set to: 0
 18859                           ;incstack = 0
 18860                           ;setNV@index stored from wreg
 18861   00AC3E  0101               	movlb	1	; () banked
 18862   00AC40  6FFB               	movwf	setNV@index& (0+255),b
 18863                           
 18864                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > (15+7*16)) return CMDERR_INV_NV_IDX;
 18865   00AC42  0E7F               	movlw	127
 18866   00AC44  0101               	movlb	1	; () banked
 18867   00AC46  65FB               	cpfsgt	setNV@index& (0+255),b
 18868   00AC48  D002               	goto	l22164
 18869                           
 18870                           ; BSR set to: 1
 18871   00AC4A  0E0A               	movlw	10
 18872   00AC4C  0012               	return	
 18873   00AC4E                     l22164:
 18874                           
 18875                           ; BSR set to: 1
 18876                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 18877   00AC4E  C1F7  F09F         	movff	setNV@value,APP_nvValidate@value
 18878   00AC52  51FB               	movf	setNV@index& (0+255),w,b
 18879   00AC54  EC85  F057         	call	_APP_nvValidate
 18880   00AC58  0900               	iorlw	0
 18881   00AC5A  A4D8               	btfss	status,2,c
 18882   00AC5C  D002               	goto	l22170
 18883   00AC5E  0E0C               	movlw	12
 18884   00AC60  0012               	return	
 18885   00AC62                     l22170:
 18886                           
 18887                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 18888   00AC62  0E00               	movlw	low _nvCache
 18889   00AC64  0101               	movlb	1	; () banked
 18890   00AC66  25FB               	addwf	setNV@index& (0+255),w,b
 18891   00AC68  6ED9               	movwf	fsr2l,c
 18892   00AC6A  6ADA               	clrf	fsr2h,c
 18893   00AC6C  0E04               	movlw	high _nvCache
 18894   00AC6E  22DA               	addwfc	fsr2h,f,c
 18895   00AC70  50DF               	movf	indf2,w,c
 18896   00AC72  6FFA               	movwf	setNV@oldValue& (0+255),b
 18897                           
 18898                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 18899   00AC74  0E00               	movlw	low _nvCache
 18900   00AC76  25FB               	addwf	setNV@index& (0+255),w,b
 18901   00AC78  6ED9               	movwf	fsr2l,c
 18902   00AC7A  6ADA               	clrf	fsr2h,c
 18903   00AC7C  0E04               	movlw	high _nvCache
 18904   00AC7E  22DA               	addwfc	fsr2h,f,c
 18905   00AC80  C1F7  FFDF         	movff	setNV@value,indf2
 18906                           
 18907                           ; BSR set to: 1
 18908                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 18909   00AC84  0E80               	movlw	128
 18910   00AC86  25FB               	addwf	setNV@index& (0+255),w,b
 18911   00AC88  6FF8               	movwf	??_setNV& (0+255),b
 18912   00AC8A  6BF9               	clrf	(??_setNV+1)& (0+255),b
 18913   00AC8C  0EFF               	movlw	255
 18914   00AC8E  23F9               	addwfc	(??_setNV+1)& (0+255),f,b
 18915   00AC90  C1F8  F0A4         	movff	??_setNV,writeNVM@index
 18916   00AC94  C1F9  F0A5         	movff	??_setNV+1,writeNVM@index+1
 18917   00AC98  0100               	movlb	0	; () banked
 18918   00AC9A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 18919   00AC9C  C1F7  F0A7         	movff	setNV@value,writeNVM@value
 18920   00ACA0  0E01               	movlw	1
 18921   00ACA2  EC61  F05D         	call	_writeNVM
 18922                           
 18923                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 18924   00ACA6  C1F7  F1F0         	movff	setNV@value,APP_nvValueChanged@value
 18925   00ACAA  C1FA  F1F1         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 18926   00ACAE  0101               	movlb	1	; () banked
 18927   00ACB0  51FB               	movf	setNV@index& (0+255),w,b
 18928   00ACB2  EC00  F017         	call	_APP_nvValueChanged
 18929                           
 18930                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 18931   00ACB6  0E00               	movlw	0
 18932   00ACB8  0012               	return		;funcret
 18933   00ACBA                     __end_of_setNV:
 18934                           	callstack 0
 18935                           
 18936 ;; *************** function _APP_nvValueChanged *****************
 18937 ;; Defined at:
 18938 ;;		line 104 in file "../universalNv.c"
 18939 ;; Parameters:    Size  Location     Type
 18940 ;;  index           1    wreg     unsigned char 
 18941 ;;  value           1   51[BANK1 ] unsigned char 
 18942 ;;  oldValue        1   52[BANK1 ] unsigned char 
 18943 ;; Auto vars:     Size  Location     Type
 18944 ;;  index           1   56[BANK1 ] unsigned char 
 18945 ;;  io              1   57[BANK1 ] unsigned char 
 18946 ;;  nv              1    0        unsigned char 
 18947 ;; Return value:  Size  Location     Type
 18948 ;;                  1    wreg      void 
 18949 ;; Registers used:
 18950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18951 ;; Tracked objects:
 18952 ;;		On entry : 0/0
 18953 ;;		On exit  : 0/0
 18954 ;;		Unchanged: 0/0
 18955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18956 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18957 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18958 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18959 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18960 ;;Total ram usage:        7 bytes
 18961 ;; Hardware stack levels used: 1
 18962 ;; Hardware stack levels required when called: 25
 18963 ;; This function calls:
 18964 ;;		___awdiv
 18965 ;;		___awmod
 18966 ;;		_getNV
 18967 ;;		_setBounceState
 18968 ;;		_setMultiState
 18969 ;;		_setServoPosition
 18970 ;;		_setServoState
 18971 ;;		_setTimedResponseDelay
 18972 ;;		_setType
 18973 ;;		_startBounceOutput
 18974 ;;		_startMultiOutput
 18975 ;;		_startServoOutput
 18976 ;; This function is called by:
 18977 ;;		_setNV
 18978 ;; This function uses a non-reentrant model
 18979 ;;
 18980                           
 18981                           	psect	text53
 18982   002E00                     __ptext53:
 18983                           	callstack 0
 18984   002E00                     _APP_nvValueChanged:
 18985                           	callstack 2
 18986                           
 18987                           ;incstack = 0
 18988                           ;APP_nvValueChanged@index stored from wreg
 18989   002E00  0101               	movlb	1	; () banked
 18990   002E02  6FF5               	movwf	APP_nvValueChanged@index& (0+255),b
 18991                           
 18992                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 18993   002E04  0EF0               	movlw	240
 18994   002E06  0101               	movlb	1	; () banked
 18995   002E08  25F5               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18996   002E0A  0100               	movlb	0	; () banked
 18997   002E0C  6F8D               	movwf	___awmod@dividend& (0+255),b
 18998   002E0E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18999   002E10  0EFF               	movlw	255
 19000   002E12  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19001   002E14  0E00               	movlw	0
 19002   002E16  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19003   002E18  0E07               	movlw	7
 19004   002E1A  6F8F               	movwf	___awmod@divisor& (0+255),b
 19005   002E1C  EC30  F058         	call	___awmod	;wreg free
 19006   002E20  0100               	movlb	0	; () banked
 19007   002E22  518D               	movf	?___awmod& (0+255),w,b
 19008   002E24  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19009   002E26  A4D8               	btfss	status,2,c
 19010   002E28  D01B               	goto	l20750
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;../universalNv.c: 110:         io = index-16;
 19014   002E2A  0101               	movlb	1	; () banked
 19015   002E2C  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19016   002E2E  0FF0               	addlw	240
 19017   002E30  6FF6               	movwf	APP_nvValueChanged@io& (0+255),b
 19018                           
 19019                           ; BSR set to: 1
 19020                           ;../universalNv.c: 111:         io /= 7;
 19021   002E32  C1F6  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 19022   002E36  0100               	movlb	0	; () banked
 19023   002E38  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19024   002E3A  0E00               	movlw	0
 19025   002E3C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19026   002E3E  0E07               	movlw	7
 19027   002E40  6F99               	movwf	___awdiv@divisor& (0+255),b
 19028   002E42  EC1B  F054         	call	___awdiv	;wreg free
 19029   002E46  0100               	movlb	0	; () banked
 19030   002E48  5197               	movf	?___awdiv& (0+255),w,b
 19031   002E4A  0101               	movlb	1	; () banked
 19032   002E4C  6FF6               	movwf	APP_nvValueChanged@io& (0+255),b
 19033                           
 19034                           ; BSR set to: 1
 19035                           ;../universalNv.c: 112:         if (oldValue != value) {
 19036   002E4E  51F0               	movf	APP_nvValueChanged@value& (0+255),w,b
 19037   002E50  19F1               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 19038   002E52  B4D8               	btfsc	status,2,c
 19039   002E54  D005               	goto	l20750
 19040                           
 19041                           ; BSR set to: 1
 19042                           ;../universalNv.c: 113:             setType(io, value);
 19043   002E56  C1F0  F1ED         	movff	APP_nvValueChanged@value,setType@type
 19044   002E5A  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19045   002E5C  EC0D  F05A         	call	_setType
 19046   002E60                     l20750:
 19047                           
 19048                           ;../universalNv.c: 116:     if (index == 5) {
 19049   002E60  0E05               	movlw	5
 19050   002E62  0101               	movlb	1	; () banked
 19051   002E64  19F5               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 19052   002E66  A4D8               	btfss	status,2,c
 19053   002E68  D003               	goto	l20754
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 19057   002E6A  51F0               	movf	APP_nvValueChanged@value& (0+255),w,b
 19058   002E6C  EC0B  F064         	call	_setTimedResponseDelay
 19059   002E70                     l20754:
 19060                           
 19061                           ;../universalNv.c: 121:     if (index == 4) {
 19062   002E70  0E04               	movlw	4
 19063   002E72  0101               	movlb	1	; () banked
 19064   002E74  19F5               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 19065   002E76  B4D8               	btfsc	status,2,c
 19066                           
 19067                           ; BSR set to: 1
 19068                           ;../universalNv.c: 122:         WPUB = value;
 19069   002E78  C1F0  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 19070                           
 19071                           ; BSR set to: 1
 19072                           ;../universalNv.c: 215:     if (index >= 16) {
 19073   002E7C  0E0F               	movlw	15
 19074   002E7E  65F5               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 19075   002E80  0012               	return	
 19076                           
 19077                           ; BSR set to: 1
 19078                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 19079   002E82  0EF0               	movlw	240
 19080   002E84  25F5               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19081   002E86  0100               	movlb	0	; () banked
 19082   002E88  6F97               	movwf	___awdiv@dividend& (0+255),b
 19083   002E8A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19084   002E8C  0EFF               	movlw	255
 19085   002E8E  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19086   002E90  0E00               	movlw	0
 19087   002E92  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19088   002E94  0E07               	movlw	7
 19089   002E96  6F99               	movwf	___awdiv@divisor& (0+255),b
 19090   002E98  EC1B  F054         	call	___awdiv	;wreg free
 19091   002E9C  0100               	movlb	0	; () banked
 19092   002E9E  5197               	movf	?___awdiv& (0+255),w,b
 19093   002EA0  0101               	movlb	1	; () banked
 19094   002EA2  6FF6               	movwf	APP_nvValueChanged@io& (0+255),b
 19095   002EA4  0EF0               	movlw	240
 19096   002EA6  25F5               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19097   002EA8  0100               	movlb	0	; () banked
 19098   002EAA  6F8D               	movwf	___awmod@dividend& (0+255),b
 19099   002EAC  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19100   002EAE  0EFF               	movlw	255
 19101   002EB0  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19102   002EB2  0E00               	movlw	0
 19103   002EB4  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19104   002EB6  0E07               	movlw	7
 19105   002EB8  6F8F               	movwf	___awmod@divisor& (0+255),b
 19106   002EBA  EC30  F058         	call	___awmod	;wreg free
 19107                           
 19108                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 19109   002EBE  D1D3               	goto	l20832
 19110   002EC0                     l20762:
 19111                           
 19112                           ; BSR set to: 0
 19113                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 19114   002EC0  0101               	movlb	1	; () banked
 19115   002EC2  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19116   002EC4  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19117   002EC6  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19118   002EC8  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19119   002ECA  0D07               	mullw	7
 19120   002ECC  0E12               	movlw	18
 19121   002ECE  26F3               	addwf	243,f,c
 19122   002ED0  0E00               	movlw	0
 19123   002ED2  22F4               	addwfc	244,f,c
 19124   002ED4  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19125   002ED6  18F3               	xorwf	243,w,c
 19126   002ED8  E113               	bnz	l20768
 19127   002EDA  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19128   002EDC  18F4               	xorwf	244,w,c
 19129   002EDE  A4D8               	btfss	status,2,c
 19130   002EE0  D00F               	goto	l20768
 19131                           
 19132                           ; BSR set to: 1
 19133                           ;../universalNv.c: 233:                     setServoState(io, 2);
 19134   002EE2  0E02               	movlw	2
 19135   002EE4  0100               	movlb	0	; () banked
 19136   002EE6  6F91               	movwf	setServoState@action& (0+255),b
 19137   002EE8  0101               	movlb	1	; () banked
 19138   002EEA  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19139   002EEC  EC30  F04D         	call	_setServoState
 19140                           
 19141                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 19142   002EF0  0E02               	movlw	2
 19143   002EF2  0100               	movlb	0	; () banked
 19144   002EF4  6F91               	movwf	startServoOutput@action& (0+255),b
 19145   002EF6  0101               	movlb	1	; () banked
 19146   002EF8  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19147   002EFA  EC4E  F04A         	call	_startServoOutput
 19148                           
 19149                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 19150   002EFE  0012               	return	
 19151   002F00                     l20768:
 19152                           
 19153                           ; BSR set to: 1
 19154   002F00  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19155   002F02  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19156   002F04  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19157   002F06  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19158   002F08  0D07               	mullw	7
 19159   002F0A  0E13               	movlw	19
 19160   002F0C  26F3               	addwf	243,f,c
 19161   002F0E  0E00               	movlw	0
 19162   002F10  22F4               	addwfc	244,f,c
 19163   002F12  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19164   002F14  18F3               	xorwf	243,w,c
 19165   002F16  E113               	bnz	l20774
 19166   002F18  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19167   002F1A  18F4               	xorwf	244,w,c
 19168   002F1C  A4D8               	btfss	status,2,c
 19169   002F1E  D00F               	goto	l20774
 19170                           
 19171                           ; BSR set to: 1
 19172                           ;../universalNv.c: 236:                     setServoState(io, 1);
 19173   002F20  0E01               	movlw	1
 19174   002F22  0100               	movlb	0	; () banked
 19175   002F24  6F91               	movwf	setServoState@action& (0+255),b
 19176   002F26  0101               	movlb	1	; () banked
 19177   002F28  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19178   002F2A  EC30  F04D         	call	_setServoState
 19179                           
 19180                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 19181   002F2E  0E01               	movlw	1
 19182   002F30  0100               	movlb	0	; () banked
 19183   002F32  6F91               	movwf	startServoOutput@action& (0+255),b
 19184   002F34  0101               	movlb	1	; () banked
 19185   002F36  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19186   002F38  EC4E  F04A         	call	_startServoOutput
 19187                           
 19188                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 19189   002F3C  0012               	return	
 19190   002F3E                     l20774:
 19191                           
 19192                           ; BSR set to: 1
 19193   002F3E  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19194   002F40  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19195   002F42  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19196   002F44  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19197   002F46  0D07               	mullw	7
 19198   002F48  0E11               	movlw	17
 19199   002F4A  26F3               	addwf	243,f,c
 19200   002F4C  0E00               	movlw	0
 19201   002F4E  22F4               	addwfc	244,f,c
 19202   002F50  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19203   002F52  18F3               	xorwf	243,w,c
 19204   002F54  E103               	bnz	u21451
 19205   002F56  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19206   002F58  18F4               	xorwf	244,w,c
 19207   002F5A  A4D8               	btfss	status,2,c
 19208   002F5C                     u21451:
 19209   002F5C  0012               	return	
 19210                           
 19211                           ; BSR set to: 1
 19212                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 19213   002F5E  AFF0               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19214   002F60  0012               	return	
 19215                           
 19216                           ; BSR set to: 1
 19217   002F62  BFF1               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19218   002F64  0012               	return	
 19219                           
 19220                           ; BSR set to: 1
 19221                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 19222   002F66  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19223   002F68  0D07               	mullw	7
 19224   002F6A  50F3               	movf	243,w,c
 19225   002F6C  0F12               	addlw	18
 19226   002F6E  EC53  F05F         	call	_getNV
 19227   002F72  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19228   002F76  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19229   002F7A  0E00               	movlw	0
 19230   002F7C  0100               	movlb	0	; () banked
 19231   002F7E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19232   002F80  0E02               	movlw	2
 19233   002F82  6F99               	movwf	___awdiv@divisor& (0+255),b
 19234   002F84  EC1B  F054         	call	___awdiv	;wreg free
 19235   002F88  C097  F1F2         	movff	?___awdiv,??_APP_nvValueChanged
 19236   002F8C  C098  F1F3         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19237   002F90  0101               	movlb	1	; () banked
 19238   002F92  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19239   002F94  0D07               	mullw	7
 19240   002F96  50F3               	movf	243,w,c
 19241   002F98  0F13               	addlw	19
 19242   002F9A  EC53  F05F         	call	_getNV
 19243   002F9E  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19244   002FA2  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19245   002FA6  0E00               	movlw	0
 19246   002FA8  0100               	movlb	0	; () banked
 19247   002FAA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19248   002FAC  0E02               	movlw	2
 19249   002FAE  6F99               	movwf	___awdiv@divisor& (0+255),b
 19250   002FB0  EC1B  F054         	call	___awdiv	;wreg free
 19251   002FB4  0100               	movlb	0	; () banked
 19252   002FB6  5197               	movf	?___awdiv& (0+255),w,b
 19253   002FB8  0101               	movlb	1	; () banked
 19254   002FBA  25F2               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19255   002FBC  0100               	movlb	0	; () banked
 19256   002FBE  6F9F               	movwf	setServoPosition@pos& (0+255),b
 19257   002FC0  0101               	movlb	1	; () banked
 19258   002FC2  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19259   002FC4  EC78  F062         	call	_setServoPosition
 19260                           
 19261                           ; BSR set to: 1
 19262                           
 19263                           ;../universalNv.c: 245:                 }
 19264   002FC8  0012               	return	
 19265   002FCA                     l20782:
 19266                           
 19267                           ; BSR set to: 0
 19268                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 19269   002FCA  0101               	movlb	1	; () banked
 19270   002FCC  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19271   002FCE  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19272   002FD0  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19273   002FD2  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19274   002FD4  0D07               	mullw	7
 19275   002FD6  0E13               	movlw	19
 19276   002FD8  26F3               	addwf	243,f,c
 19277   002FDA  0E00               	movlw	0
 19278   002FDC  22F4               	addwfc	244,f,c
 19279   002FDE  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19280   002FE0  18F3               	xorwf	243,w,c
 19281   002FE2  E113               	bnz	l20786
 19282   002FE4  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19283   002FE6  18F4               	xorwf	244,w,c
 19284   002FE8  A4D8               	btfss	status,2,c
 19285   002FEA  D00F               	goto	l20786
 19286                           
 19287                           ; BSR set to: 1
 19288                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 19289   002FEC  0E02               	movlw	2
 19290   002FEE  0100               	movlb	0	; () banked
 19291   002FF0  6F91               	movwf	setBounceState@action& (0+255),b
 19292   002FF2  0101               	movlb	1	; () banked
 19293   002FF4  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19294   002FF6  EC86  F04D         	call	_setBounceState
 19295                           
 19296                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 19297   002FFA  0E02               	movlw	2
 19298   002FFC  0100               	movlb	0	; () banked
 19299   002FFE  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19300   003000  0101               	movlb	1	; () banked
 19301   003002  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19302   003004  ECA8  F059         	call	_startBounceOutput
 19303                           
 19304                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 19305   003008  0012               	return	
 19306   00300A                     l20786:
 19307                           
 19308                           ; BSR set to: 1
 19309   00300A  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19310   00300C  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19311   00300E  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19312   003010  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19313   003012  0D07               	mullw	7
 19314   003014  0E12               	movlw	18
 19315   003016  26F3               	addwf	243,f,c
 19316   003018  0E00               	movlw	0
 19317   00301A  22F4               	addwfc	244,f,c
 19318   00301C  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19319   00301E  18F3               	xorwf	243,w,c
 19320   003020  E113               	bnz	l20790
 19321   003022  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19322   003024  18F4               	xorwf	244,w,c
 19323   003026  A4D8               	btfss	status,2,c
 19324   003028  D00F               	goto	l20790
 19325                           
 19326                           ; BSR set to: 1
 19327                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 19328   00302A  0E01               	movlw	1
 19329   00302C  0100               	movlb	0	; () banked
 19330   00302E  6F91               	movwf	setBounceState@action& (0+255),b
 19331   003030  0101               	movlb	1	; () banked
 19332   003032  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19333   003034  EC86  F04D         	call	_setBounceState
 19334                           
 19335                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 19336   003038  0E01               	movlw	1
 19337   00303A  0100               	movlb	0	; () banked
 19338   00303C  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19339   00303E  0101               	movlb	1	; () banked
 19340   003040  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19341   003042  ECA8  F059         	call	_startBounceOutput
 19342                           
 19343                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 19344   003046  0012               	return	
 19345   003048                     l20790:
 19346                           
 19347                           ; BSR set to: 1
 19348   003048  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19349   00304A  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19350   00304C  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19351   00304E  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19352   003050  0D07               	mullw	7
 19353   003052  0E11               	movlw	17
 19354   003054  26F3               	addwf	243,f,c
 19355   003056  0E00               	movlw	0
 19356   003058  22F4               	addwfc	244,f,c
 19357   00305A  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19358   00305C  18F3               	xorwf	243,w,c
 19359   00305E  E103               	bnz	u21501
 19360   003060  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19361   003062  18F4               	xorwf	244,w,c
 19362   003064  A4D8               	btfss	status,2,c
 19363   003066                     u21501:
 19364   003066  0012               	return	
 19365                           
 19366                           ; BSR set to: 1
 19367                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 19368   003068  AFF0               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19369   00306A  0012               	return	
 19370                           
 19371                           ; BSR set to: 1
 19372   00306C  BFF1               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19373   00306E  0012               	return	
 19374                           
 19375                           ; BSR set to: 1
 19376                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 19377   003070  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19378   003072  0D07               	mullw	7
 19379   003074  50F3               	movf	243,w,c
 19380   003076  0F12               	addlw	18
 19381   003078  EC53  F05F         	call	_getNV
 19382   00307C  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19383   003080  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19384   003084  0E00               	movlw	0
 19385   003086  0100               	movlb	0	; () banked
 19386   003088  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19387   00308A  0E02               	movlw	2
 19388   00308C  6F99               	movwf	___awdiv@divisor& (0+255),b
 19389   00308E  EC1B  F054         	call	___awdiv	;wreg free
 19390   003092  C097  F1F2         	movff	?___awdiv,??_APP_nvValueChanged
 19391   003096  C098  F1F3         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19392   00309A  0101               	movlb	1	; () banked
 19393   00309C  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19394   00309E  0D07               	mullw	7
 19395   0030A0  50F3               	movf	243,w,c
 19396   0030A2  0F13               	addlw	19
 19397   0030A4  EC53  F05F         	call	_getNV
 19398   0030A8  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19399   0030AC  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19400   0030B0  0E00               	movlw	0
 19401   0030B2  0100               	movlb	0	; () banked
 19402   0030B4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19403   0030B6  0E02               	movlw	2
 19404   0030B8  6F99               	movwf	___awdiv@divisor& (0+255),b
 19405   0030BA  EC1B  F054         	call	___awdiv	;wreg free
 19406   0030BE  0100               	movlb	0	; () banked
 19407   0030C0  5197               	movf	?___awdiv& (0+255),w,b
 19408   0030C2  0101               	movlb	1	; () banked
 19409   0030C4  25F2               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19410   0030C6  6FF4               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19411   0030C8  0E30               	movlw	low _currentPos
 19412   0030CA  25F6               	addwf	APP_nvValueChanged@io& (0+255),w,b
 19413   0030CC  6ED9               	movwf	fsr2l,c
 19414   0030CE  6ADA               	clrf	fsr2h,c
 19415   0030D0  0E01               	movlw	high _currentPos
 19416   0030D2  22DA               	addwfc	fsr2h,f,c
 19417   0030D4  C1F4  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19418   0030D8  0012               	return	
 19419   0030DA                     l20798:
 19420                           
 19421                           ; BSR set to: 0
 19422                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 19423   0030DA  0101               	movlb	1	; () banked
 19424   0030DC  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19425   0030DE  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19426   0030E0  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19427   0030E2  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19428   0030E4  0D07               	mullw	7
 19429   0030E6  0E13               	movlw	19
 19430   0030E8  26F3               	addwf	243,f,c
 19431   0030EA  0E00               	movlw	0
 19432   0030EC  22F4               	addwfc	244,f,c
 19433   0030EE  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19434   0030F0  18F3               	xorwf	243,w,c
 19435   0030F2  E113               	bnz	l20804
 19436   0030F4  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19437   0030F6  18F4               	xorwf	244,w,c
 19438   0030F8  A4D8               	btfss	status,2,c
 19439   0030FA  D00F               	goto	l20804
 19440                           
 19441                           ; BSR set to: 1
 19442                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 19443   0030FC  0E00               	movlw	0
 19444   0030FE  0100               	movlb	0	; () banked
 19445   003100  6F91               	movwf	setMultiState@action& (0+255),b
 19446   003102  0101               	movlb	1	; () banked
 19447   003104  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19448   003106  EC84  F047         	call	_setMultiState
 19449                           
 19450                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 19451   00310A  0E00               	movlw	0
 19452   00310C  0100               	movlb	0	; () banked
 19453   00310E  6F91               	movwf	startMultiOutput@action& (0+255),b
 19454   003110  0101               	movlb	1	; () banked
 19455   003112  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19456   003114  ECC2  F04F         	call	_startMultiOutput
 19457                           
 19458                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 19459   003118  0012               	return	
 19460   00311A                     l20804:
 19461                           
 19462                           ; BSR set to: 1
 19463   00311A  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19464   00311C  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19465   00311E  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19466   003120  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19467   003122  0D07               	mullw	7
 19468   003124  0E14               	movlw	20
 19469   003126  26F3               	addwf	243,f,c
 19470   003128  0E00               	movlw	0
 19471   00312A  22F4               	addwfc	244,f,c
 19472   00312C  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19473   00312E  18F3               	xorwf	243,w,c
 19474   003130  E113               	bnz	l20810
 19475   003132  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19476   003134  18F4               	xorwf	244,w,c
 19477   003136  A4D8               	btfss	status,2,c
 19478   003138  D00F               	goto	l20810
 19479                           
 19480                           ; BSR set to: 1
 19481                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 19482   00313A  0E01               	movlw	1
 19483   00313C  0100               	movlb	0	; () banked
 19484   00313E  6F91               	movwf	setMultiState@action& (0+255),b
 19485   003140  0101               	movlb	1	; () banked
 19486   003142  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19487   003144  EC84  F047         	call	_setMultiState
 19488                           
 19489                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 19490   003148  0E01               	movlw	1
 19491   00314A  0100               	movlb	0	; () banked
 19492   00314C  6F91               	movwf	startMultiOutput@action& (0+255),b
 19493   00314E  0101               	movlb	1	; () banked
 19494   003150  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19495   003152  ECC2  F04F         	call	_startMultiOutput
 19496                           
 19497                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 19498   003156  0012               	return	
 19499   003158                     l20810:
 19500                           
 19501                           ; BSR set to: 1
 19502   003158  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19503   00315A  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19504   00315C  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19505   00315E  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19506   003160  0D07               	mullw	7
 19507   003162  0E15               	movlw	21
 19508   003164  26F3               	addwf	243,f,c
 19509   003166  0E00               	movlw	0
 19510   003168  22F4               	addwfc	244,f,c
 19511   00316A  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19512   00316C  18F3               	xorwf	243,w,c
 19513   00316E  E113               	bnz	l20816
 19514   003170  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19515   003172  18F4               	xorwf	244,w,c
 19516   003174  A4D8               	btfss	status,2,c
 19517   003176  D00F               	goto	l20816
 19518                           
 19519                           ; BSR set to: 1
 19520                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 19521   003178  0E02               	movlw	2
 19522   00317A  0100               	movlb	0	; () banked
 19523   00317C  6F91               	movwf	setMultiState@action& (0+255),b
 19524   00317E  0101               	movlb	1	; () banked
 19525   003180  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19526   003182  EC84  F047         	call	_setMultiState
 19527                           
 19528                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 19529   003186  0E02               	movlw	2
 19530   003188  0100               	movlb	0	; () banked
 19531   00318A  6F91               	movwf	startMultiOutput@action& (0+255),b
 19532   00318C  0101               	movlb	1	; () banked
 19533   00318E  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19534   003190  ECC2  F04F         	call	_startMultiOutput
 19535                           
 19536                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 19537   003194  0012               	return	
 19538   003196                     l20816:
 19539                           
 19540                           ; BSR set to: 1
 19541   003196  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19542   003198  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19543   00319A  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19544   00319C  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19545   00319E  0D07               	mullw	7
 19546   0031A0  0E16               	movlw	22
 19547   0031A2  26F3               	addwf	243,f,c
 19548   0031A4  0E00               	movlw	0
 19549   0031A6  22F4               	addwfc	244,f,c
 19550   0031A8  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19551   0031AA  18F3               	xorwf	243,w,c
 19552   0031AC  E113               	bnz	l20822
 19553   0031AE  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19554   0031B0  18F4               	xorwf	244,w,c
 19555   0031B2  A4D8               	btfss	status,2,c
 19556   0031B4  D00F               	goto	l20822
 19557                           
 19558                           ; BSR set to: 1
 19559                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 19560   0031B6  0E03               	movlw	3
 19561   0031B8  0100               	movlb	0	; () banked
 19562   0031BA  6F91               	movwf	setMultiState@action& (0+255),b
 19563   0031BC  0101               	movlb	1	; () banked
 19564   0031BE  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19565   0031C0  EC84  F047         	call	_setMultiState
 19566                           
 19567                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 19568   0031C4  0E03               	movlw	3
 19569   0031C6  0100               	movlb	0	; () banked
 19570   0031C8  6F91               	movwf	startMultiOutput@action& (0+255),b
 19571   0031CA  0101               	movlb	1	; () banked
 19572   0031CC  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19573   0031CE  ECC2  F04F         	call	_startMultiOutput
 19574                           
 19575                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 19576   0031D2  0012               	return	
 19577   0031D4                     l20822:
 19578                           
 19579                           ; BSR set to: 1
 19580   0031D4  51F5               	movf	APP_nvValueChanged@index& (0+255),w,b
 19581   0031D6  6FF2               	movwf	??_APP_nvValueChanged& (0+255),b
 19582   0031D8  6BF3               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19583   0031DA  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19584   0031DC  0D07               	mullw	7
 19585   0031DE  0E11               	movlw	17
 19586   0031E0  26F3               	addwf	243,f,c
 19587   0031E2  0E00               	movlw	0
 19588   0031E4  22F4               	addwfc	244,f,c
 19589   0031E6  51F2               	movf	??_APP_nvValueChanged& (0+255),w,b
 19590   0031E8  18F3               	xorwf	243,w,c
 19591   0031EA  E154               	bnz	l814
 19592   0031EC  51F3               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19593   0031EE  18F4               	xorwf	244,w,c
 19594   0031F0  A4D8               	btfss	status,2,c
 19595   0031F2  0012               	return	
 19596                           
 19597                           ; BSR set to: 1
 19598                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 19599   0031F4  AFF0               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19600   0031F6  0012               	return	
 19601                           
 19602                           ; BSR set to: 1
 19603   0031F8  BFF1               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19604   0031FA  0012               	return	
 19605                           
 19606                           ; BSR set to: 1
 19607                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 19608   0031FC  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19609   0031FE  0D07               	mullw	7
 19610   003200  50F3               	movf	243,w,c
 19611   003202  0F12               	addlw	18
 19612   003204  EC53  F05F         	call	_getNV
 19613   003208  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19614   00320C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19615   003210  0E00               	movlw	0
 19616   003212  0100               	movlb	0	; () banked
 19617   003214  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19618   003216  0E02               	movlw	2
 19619   003218  6F99               	movwf	___awdiv@divisor& (0+255),b
 19620   00321A  EC1B  F054         	call	___awdiv	;wreg free
 19621   00321E  C097  F1F2         	movff	?___awdiv,??_APP_nvValueChanged
 19622   003222  C098  F1F3         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19623   003226  0101               	movlb	1	; () banked
 19624   003228  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19625   00322A  0D07               	mullw	7
 19626   00322C  50F3               	movf	243,w,c
 19627   00322E  0F13               	addlw	19
 19628   003230  EC53  F05F         	call	_getNV
 19629   003234  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19630   003238  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19631   00323C  0E00               	movlw	0
 19632   00323E  0100               	movlb	0	; () banked
 19633   003240  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19634   003242  0E02               	movlw	2
 19635   003244  6F99               	movwf	___awdiv@divisor& (0+255),b
 19636   003246  EC1B  F054         	call	___awdiv	;wreg free
 19637   00324A  0100               	movlb	0	; () banked
 19638   00324C  5197               	movf	?___awdiv& (0+255),w,b
 19639   00324E  0101               	movlb	1	; () banked
 19640   003250  25F2               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19641   003252  6FF4               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19642   003254  0E30               	movlw	low _currentPos
 19643   003256  25F6               	addwf	APP_nvValueChanged@io& (0+255),w,b
 19644   003258  6ED9               	movwf	fsr2l,c
 19645   00325A  6ADA               	clrf	fsr2h,c
 19646   00325C  0E01               	movlw	high _currentPos
 19647   00325E  22DA               	addwfc	fsr2h,f,c
 19648   003260  C1F4  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19649   003264  0012               	return	
 19650   003266                     l20832:
 19651   003266  0101               	movlb	1	; () banked
 19652   003268  51F6               	movf	APP_nvValueChanged@io& (0+255),w,b
 19653   00326A  0D07               	mullw	7
 19654   00326C  50F3               	movf	243,w,c
 19655   00326E  0F10               	addlw	16
 19656   003270  EC53  F05F         	call	_getNV
 19657                           
 19658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19659                           ; Switch size 1, requested type "simple"
 19660                           ; Number of cases is 1, Range of values is 0 to 0
 19661                           ; switch strategies available:
 19662                           ; Name         Instructions Cycles
 19663                           ; simple_byte            4     3 (average)
 19664                           ;	Chosen strategy is simple_byte
 19665   003274  0100               	movlb	0	; () banked
 19666   003276  518E               	movf	(?_getNV+1)& (0+255),w,b
 19667   003278  0A00               	xorlw	0	; case 0
 19668   00327A  A4D8               	btfss	status,2,c
 19669   00327C  0012               	return	
 19670                           
 19671                           ; BSR set to: 0
 19672                           ; Switch size 1, requested type "simple"
 19673                           ; Number of cases is 3, Range of values is 2 to 4
 19674                           ; switch strategies available:
 19675                           ; Name         Instructions Cycles
 19676                           ; simple_byte           10     6 (average)
 19677                           ;	Chosen strategy is simple_byte
 19678   00327E  518D               	movf	?_getNV& (0+255),w,b
 19679   003280  0A02               	xorlw	2	; case 2
 19680   003282  B4D8               	btfsc	status,2,c
 19681   003284  D61D               	goto	l20762
 19682   003286  0A01               	xorlw	1	; case 3
 19683   003288  B4D8               	btfsc	status,2,c
 19684   00328A  D69F               	goto	l20782
 19685   00328C  0A07               	xorlw	7	; case 4
 19686   00328E  A4D8               	btfss	status,2,c
 19687   003290  0012               	return	
 19688   003292  D723               	goto	l20798
 19689   003294                     l814:
 19690   003294  0012               	return		;funcret
 19691   003296                     __end_of_APP_nvValueChanged:
 19692                           	callstack 0
 19693                           
 19694 ;; *************** function _setTimedResponseDelay *****************
 19695 ;; Defined at:
 19696 ;;		line 901 in file "../../VLCBlib_PIC/vlcb.c"
 19697 ;; Parameters:    Size  Location     Type
 19698 ;;  delay           1    wreg     unsigned char 
 19699 ;; Auto vars:     Size  Location     Type
 19700 ;;  delay           1   45[BANK0 ] unsigned char 
 19701 ;; Return value:  Size  Location     Type
 19702 ;;                  1    wreg      void 
 19703 ;; Registers used:
 19704 ;;		wreg
 19705 ;; Tracked objects:
 19706 ;;		On entry : 0/0
 19707 ;;		On exit  : 0/0
 19708 ;;		Unchanged: 0/0
 19709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19711 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19713 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19714 ;;Total ram usage:        1 bytes
 19715 ;; Hardware stack levels used: 1
 19716 ;; Hardware stack levels required when called: 12
 19717 ;; This function calls:
 19718 ;;		Nothing
 19719 ;; This function is called by:
 19720 ;;		_setup
 19721 ;;		_APP_nvValueChanged
 19722 ;; This function uses a non-reentrant model
 19723 ;;
 19724                           
 19725                           	psect	text54
 19726   00C816                     __ptext54:
 19727                           	callstack 0
 19728   00C816                     _setTimedResponseDelay:
 19729                           	callstack 17
 19730                           
 19731                           ;incstack = 0
 19732                           ;setTimedResponseDelay@delay stored from wreg
 19733   00C816  0100               	movlb	0	; () banked
 19734   00C818  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 19735                           
 19736                           ;../../VLCBlib_PIC/vlcb.c: 902:     timedResponseDelay = delay;
 19737   00C81A  C08D  F168         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 19738   00C81E  0012               	return		;funcret
 19739   00C820                     __end_of_setTimedResponseDelay:
 19740                           	callstack 0
 19741                           
 19742 ;; *************** function _setServoPosition *****************
 19743 ;; Defined at:
 19744 ;;		line 694 in file "../servo.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;  io              1    wreg     unsigned char 
 19747 ;;  pos             1   63[BANK0 ] unsigned char 
 19748 ;; Auto vars:     Size  Location     Type
 19749 ;;  io              1   64[BANK0 ] unsigned char 
 19750 ;; Return value:  Size  Location     Type
 19751 ;;                  1    wreg      void 
 19752 ;; Registers used:
 19753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19754 ;; Tracked objects:
 19755 ;;		On entry : 0/0
 19756 ;;		On exit  : 0/0
 19757 ;;		Unchanged: 0/0
 19758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19759 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19760 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19762 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19763 ;;Total ram usage:        2 bytes
 19764 ;; Hardware stack levels used: 1
 19765 ;; Hardware stack levels required when called: 12
 19766 ;; This function calls:
 19767 ;;		Nothing
 19768 ;; This function is called by:
 19769 ;;		_APP_nvValueChanged
 19770 ;;		_setOutputPosition
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text55
 19775   00C4F0                     __ptext55:
 19776                           	callstack 0
 19777   00C4F0                     _setServoPosition:
 19778                           	callstack 15
 19779                           
 19780                           ;incstack = 0
 19781                           ;setServoPosition@io stored from wreg
 19782   00C4F0  0100               	movlb	0	; () banked
 19783   00C4F2  6FA0               	movwf	setServoPosition@io& (0+255),b
 19784                           
 19785                           ;../servo.c: 695:     targetPos[io] = pos;
 19786   00C4F4  0100               	movlb	0	; () banked
 19787   00C4F6  51A0               	movf	setServoPosition@io& (0+255),w,b
 19788   00C4F8  0F2B               	addlw	low _targetPos
 19789   00C4FA  6ED9               	movwf	fsr2l,c
 19790   00C4FC  6ADA               	clrf	fsr2h,c
 19791   00C4FE  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19792                           
 19793                           ;../servo.c: 696:     currentPos[io] = pos;
 19794   00C502  0E30               	movlw	low _currentPos
 19795   00C504  25A0               	addwf	setServoPosition@io& (0+255),w,b
 19796   00C506  6ED9               	movwf	fsr2l,c
 19797   00C508  6ADA               	clrf	fsr2h,c
 19798   00C50A  0E01               	movlw	high _currentPos
 19799   00C50C  22DA               	addwfc	fsr2h,f,c
 19800   00C50E  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19801                           
 19802                           ; BSR set to: 0
 19803   00C512  0012               	return		;funcret
 19804   00C514                     __end_of_setServoPosition:
 19805                           	callstack 0
 19806                           
 19807 ;; *************** function _APP_nvValidate *****************
 19808 ;; Defined at:
 19809 ;;		line 299 in file "../universalNv.c"
 19810 ;; Parameters:    Size  Location     Type
 19811 ;;  index           1    wreg     unsigned char 
 19812 ;;  value           1   63[BANK0 ] unsigned char 
 19813 ;; Auto vars:     Size  Location     Type
 19814 ;;  index           1   64[BANK0 ] unsigned char 
 19815 ;;  io              1    0        unsigned char 
 19816 ;; Return value:  Size  Location     Type
 19817 ;;                  1    wreg      enum E12929
 19818 ;; Registers used:
 19819 ;;		wreg, status,2, status,0, cstack
 19820 ;; Tracked objects:
 19821 ;;		On entry : 0/0
 19822 ;;		On exit  : 0/0
 19823 ;;		Unchanged: 0/0
 19824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19825 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19828 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19829 ;;Total ram usage:        2 bytes
 19830 ;; Hardware stack levels used: 1
 19831 ;; Hardware stack levels required when called: 13
 19832 ;; This function calls:
 19833 ;;		___awdiv
 19834 ;;		___awmod
 19835 ;; This function is called by:
 19836 ;;		_setNV
 19837 ;; This function uses a non-reentrant model
 19838 ;;
 19839                           
 19840                           	psect	text56
 19841   00AF0A                     __ptext56:
 19842                           	callstack 0
 19843   00AF0A                     _APP_nvValidate:
 19844                           	callstack 14
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;incstack = 0
 19848                           ;APP_nvValidate@index stored from wreg
 19849   00AF0A  0100               	movlb	0	; () banked
 19850   00AF0C  6FA0               	movwf	APP_nvValidate@index& (0+255),b
 19851                           
 19852                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 19853   00AF0E  0E0F               	movlw	15
 19854   00AF10  0100               	movlb	0	; () banked
 19855   00AF12  65A0               	cpfsgt	APP_nvValidate@index& (0+255),b
 19856   00AF14  D031               	goto	l820
 19857                           
 19858                           ; BSR set to: 0
 19859   00AF16  0EF0               	movlw	240
 19860   00AF18  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19861   00AF1A  6F8D               	movwf	___awmod@dividend& (0+255),b
 19862   00AF1C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19863   00AF1E  0EFF               	movlw	255
 19864   00AF20  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19865   00AF22  0E00               	movlw	0
 19866   00AF24  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19867   00AF26  0E07               	movlw	7
 19868   00AF28  6F8F               	movwf	___awmod@divisor& (0+255),b
 19869   00AF2A  EC30  F058         	call	___awmod	;wreg free
 19870   00AF2E  0100               	movlb	0	; () banked
 19871   00AF30  518D               	movf	?___awmod& (0+255),w,b
 19872   00AF32  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19873   00AF34  A4D8               	btfss	status,2,c
 19874   00AF36  D020               	goto	l820
 19875                           
 19876                           ; BSR set to: 0
 19877   00AF38  0EF0               	movlw	240
 19878   00AF3A  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19879   00AF3C  6F97               	movwf	___awdiv@dividend& (0+255),b
 19880   00AF3E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19881   00AF40  0EFF               	movlw	255
 19882   00AF42  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19883   00AF44  0E00               	movlw	0
 19884   00AF46  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19885   00AF48  0E07               	movlw	7
 19886   00AF4A  6F99               	movwf	___awdiv@divisor& (0+255),b
 19887   00AF4C  EC1B  F054         	call	___awdiv	;wreg free
 19888                           
 19889                           ;../universalNv.c: 308:         switch (value) {
 19890   00AF50  D002               	goto	l20852
 19891   00AF52                     l20846:
 19892                           
 19893                           ; BSR set to: 0
 19894                           ;../universalNv.c: 331:                 return INVALID;
 19895   00AF52  0E00               	movlw	0
 19896   00AF54  0012               	return	
 19897   00AF56                     l20852:
 19898   00AF56  0100               	movlb	0	; () banked
 19899   00AF58  519F               	movf	APP_nvValidate@value& (0+255),w,b
 19900                           
 19901                           ; Switch size 1, requested type "simple"
 19902                           ; Number of cases is 5, Range of values is 0 to 4
 19903                           ; switch strategies available:
 19904                           ; Name         Instructions Cycles
 19905                           ; simple_byte           16     9 (average)
 19906                           ;	Chosen strategy is simple_byte
 19907   00AF5A  0A00               	xorlw	0	; case 0
 19908   00AF5C  B4D8               	btfsc	status,2,c
 19909   00AF5E  D00C               	goto	l820
 19910   00AF60  0A01               	xorlw	1	; case 1
 19911   00AF62  B4D8               	btfsc	status,2,c
 19912   00AF64  D009               	goto	l820
 19913   00AF66  0A03               	xorlw	3	; case 2
 19914   00AF68  B4D8               	btfsc	status,2,c
 19915   00AF6A  D006               	goto	l820
 19916   00AF6C  0A01               	xorlw	1	; case 3
 19917   00AF6E  B4D8               	btfsc	status,2,c
 19918   00AF70  D003               	goto	l820
 19919   00AF72  0A07               	xorlw	7	; case 4
 19920   00AF74  A4D8               	btfss	status,2,c
 19921   00AF76  D7ED               	goto	l20846
 19922   00AF78                     l820:
 19923                           
 19924                           ; BSR set to: 0
 19925                           ;../universalNv.c: 334:     return VALID;
 19926                           
 19927                           ; BSR set to: 0
 19928   00AF78  0E01               	movlw	1
 19929                           
 19930                           ; BSR set to: 0
 19931   00AF7A  0012               	return		;funcret
 19932   00AF7C                     __end_of_APP_nvValidate:
 19933                           	callstack 0
 19934                           
 19935 ;; *************** function _producerEsdData *****************
 19936 ;; Defined at:
 19937 ;;		line 194 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19938 ;; Parameters:    Size  Location     Type
 19939 ;;  index           1    wreg     unsigned char 
 19940 ;; Auto vars:     Size  Location     Type
 19941 ;;  index           1   45[BANK0 ] unsigned char 
 19942 ;; Return value:  Size  Location     Type
 19943 ;;                  1    wreg      unsigned char 
 19944 ;; Registers used:
 19945 ;;		wreg, status,2, status,0
 19946 ;; Tracked objects:
 19947 ;;		On entry : 0/0
 19948 ;;		On exit  : 0/0
 19949 ;;		Unchanged: 0/0
 19950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19954 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19955 ;;Total ram usage:        1 bytes
 19956 ;; Hardware stack levels used: 1
 19957 ;; Hardware stack levels required when called: 12
 19958 ;; This function calls:
 19959 ;;		Nothing
 19960 ;; This function is called by:
 19961 ;;		_mnsProcessMessage
 19962 ;; This function uses a non-reentrant model
 19963 ;;
 19964                           
 19965                           	psect	text57
 19966   00C5EA                     __ptext57:
 19967                           	callstack 0
 19968   00C5EA                     _producerEsdData:
 19969                           	callstack 16
 19970                           
 19971                           ; BSR set to: 0
 19972                           ;incstack = 0
 19973                           ;producerEsdData@index stored from wreg
 19974   00C5EA  0100               	movlb	0	; () banked
 19975   00C5EC  6F8D               	movwf	producerEsdData@index& (0+255),b
 19976                           
 19977                           ;../../VLCBlib_PIC/event_producer_happening.c: 195:     switch (index){
 19978   00C5EE  D004               	goto	l22792
 19979   00C5F0                     l22778:
 19980                           
 19981                           ; BSR set to: 0
 19982                           ;../../VLCBlib_PIC/event_producer_happening.c: 197:             return PRODUCER_EV_HAPPE
      +                          NING;
 19983   00C5F0  0E01               	movlw	1
 19984   00C5F2  0012               	return	
 19985   00C5F4                     l22786:
 19986                           
 19987                           ; BSR set to: 0
 19988                           ;../../VLCBlib_PIC/event_producer_happening.c: 201:             return 0;
 19989   00C5F4  0E00               	movlw	0
 19990   00C5F6  0012               	return	
 19991   00C5F8                     l22792:
 19992   00C5F8  0100               	movlb	0	; () banked
 19993   00C5FA  518D               	movf	producerEsdData@index& (0+255),w,b
 19994                           
 19995                           ; Switch size 1, requested type "simple"
 19996                           ; Number of cases is 2, Range of values is 0 to 1
 19997                           ; switch strategies available:
 19998                           ; Name         Instructions Cycles
 19999                           ; simple_byte            7     4 (average)
 20000                           ;	Chosen strategy is simple_byte
 20001   00C5FC  0A00               	xorlw	0	; case 0
 20002   00C5FE  B4D8               	btfsc	status,2,c
 20003   00C600  D7F7               	goto	l22778
 20004   00C602  0A01               	xorlw	1	; case 1
 20005   00C604  B4D8               	btfsc	status,2,c
 20006   00C606  D7F4               	goto	l22778
 20007   00C608  D7F5               	goto	l22786
 20008   00C60A                     __end_of_producerEsdData:
 20009                           	callstack 0
 20010                           
 20011 ;; *************** function _canEsdData *****************
 20012 ;; Defined at:
 20013 ;;		line 422 in file "../../VLCBlib_PIC/can18_ecan.c"
 20014 ;; Parameters:    Size  Location     Type
 20015 ;;  id              1    wreg     unsigned char 
 20016 ;; Auto vars:     Size  Location     Type
 20017 ;;  id              1   45[BANK0 ] unsigned char 
 20018 ;; Return value:  Size  Location     Type
 20019 ;;                  1    wreg      unsigned char 
 20020 ;; Registers used:
 20021 ;;		wreg, status,2, status,0
 20022 ;; Tracked objects:
 20023 ;;		On entry : 0/0
 20024 ;;		On exit  : 0/0
 20025 ;;		Unchanged: 0/0
 20026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20031 ;;Total ram usage:        1 bytes
 20032 ;; Hardware stack levels used: 1
 20033 ;; Hardware stack levels required when called: 12
 20034 ;; This function calls:
 20035 ;;		Nothing
 20036 ;; This function is called by:
 20037 ;;		_mnsProcessMessage
 20038 ;; This function uses a non-reentrant model
 20039 ;;
 20040                           
 20041                           	psect	text58
 20042   00C6E0                     __ptext58:
 20043                           	callstack 0
 20044   00C6E0                     _canEsdData:
 20045                           	callstack 16
 20046                           
 20047                           ; BSR set to: 0
 20048                           ;incstack = 0
 20049                           ;canEsdData@id stored from wreg
 20050   00C6E0  0100               	movlb	0	; () banked
 20051   00C6E2  6F8D               	movwf	canEsdData@id& (0+255),b
 20052                           
 20053                           ;../../VLCBlib_PIC/can18_ecan.c: 423:     switch(id) {
 20054   00C6E4  D004               	goto	l22438
 20055   00C6E6                     l22428:
 20056                           
 20057                           ; BSR set to: 0
 20058                           ;../../VLCBlib_PIC/can18_ecan.c: 425:             return CAN_HW_PIC_ECAN;
 20059   00C6E6  0E01               	movlw	1
 20060   00C6E8  0012               	return	
 20061   00C6EA                     l22432:
 20062                           
 20063                           ; BSR set to: 0
 20064                           ;../../VLCBlib_PIC/can18_ecan.c: 427:             return 0;
 20065   00C6EA  0E00               	movlw	0
 20066   00C6EC  0012               	return	
 20067   00C6EE                     l22438:
 20068   00C6EE  0100               	movlb	0	; () banked
 20069   00C6F0  518D               	movf	canEsdData@id& (0+255),w,b
 20070                           
 20071                           ; Switch size 1, requested type "simple"
 20072                           ; Number of cases is 1, Range of values is 1 to 1
 20073                           ; switch strategies available:
 20074                           ; Name         Instructions Cycles
 20075                           ; simple_byte            4     3 (average)
 20076                           ;	Chosen strategy is simple_byte
 20077   00C6F2  0A01               	xorlw	1	; case 1
 20078   00C6F4  B4D8               	btfsc	status,2,c
 20079   00C6F6  D7F7               	goto	l22428
 20080   00C6F8  D7F8               	goto	l22432
 20081   00C6FA                     __end_of_canEsdData:
 20082                           	callstack 0
 20083                           
 20084 ;; *************** function _nvGetESDdata *****************
 20085 ;; Defined at:
 20086 ;;		line 355 in file "../../VLCBlib_PIC/nv.c"
 20087 ;; Parameters:    Size  Location     Type
 20088 ;;  id              1    wreg     unsigned char 
 20089 ;; Auto vars:     Size  Location     Type
 20090 ;;  id              1   45[BANK0 ] unsigned char 
 20091 ;; Return value:  Size  Location     Type
 20092 ;;                  1    wreg      unsigned char 
 20093 ;; Registers used:
 20094 ;;		wreg, status,2, status,0
 20095 ;; Tracked objects:
 20096 ;;		On entry : 0/0
 20097 ;;		On exit  : 0/0
 20098 ;;		Unchanged: 0/0
 20099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20104 ;;Total ram usage:        1 bytes
 20105 ;; Hardware stack levels used: 1
 20106 ;; Hardware stack levels required when called: 12
 20107 ;; This function calls:
 20108 ;;		Nothing
 20109 ;; This function is called by:
 20110 ;;		_mnsProcessMessage
 20111 ;; This function uses a non-reentrant model
 20112 ;;
 20113                           
 20114                           	psect	text59
 20115   00C6FA                     __ptext59:
 20116                           	callstack 0
 20117   00C6FA                     _nvGetESDdata:
 20118                           	callstack 16
 20119                           
 20120                           ; BSR set to: 0
 20121                           ;incstack = 0
 20122                           ;nvGetESDdata@id stored from wreg
 20123   00C6FA  0100               	movlb	0	; () banked
 20124   00C6FC  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 20125                           
 20126                           ;../../VLCBlib_PIC/nv.c: 356:     switch (id) {
 20127   00C6FE  D004               	goto	l22192
 20128   00C700                     l22182:
 20129                           
 20130                           ; BSR set to: 0
 20131   00C700  0E7F               	movlw	127
 20132   00C702  0012               	return	
 20133   00C704                     l22186:
 20134                           
 20135                           ; BSR set to: 0
 20136   00C704  0E00               	movlw	0
 20137   00C706  0012               	return	
 20138   00C708                     l22192:
 20139   00C708  0100               	movlb	0	; () banked
 20140   00C70A  518D               	movf	nvGetESDdata@id& (0+255),w,b
 20141                           
 20142                           ; Switch size 1, requested type "simple"
 20143                           ; Number of cases is 1, Range of values is 1 to 1
 20144                           ; switch strategies available:
 20145                           ; Name         Instructions Cycles
 20146                           ; simple_byte            4     3 (average)
 20147                           ;	Chosen strategy is simple_byte
 20148   00C70C  0A01               	xorlw	1	; case 1
 20149   00C70E  B4D8               	btfsc	status,2,c
 20150   00C710  D7F7               	goto	l22182
 20151   00C712  D7F8               	goto	l22186
 20152   00C714                     __end_of_nvGetESDdata:
 20153                           	callstack 0
 20154                           
 20155 ;; *************** function _bootEsdData *****************
 20156 ;; Defined at:
 20157 ;;		line 257 in file "../../VLCBlib_PIC/boot.c"
 20158 ;; Parameters:    Size  Location     Type
 20159 ;;  id              1    wreg     unsigned char 
 20160 ;; Auto vars:     Size  Location     Type
 20161 ;;  id              1   45[BANK0 ] unsigned char 
 20162 ;; Return value:  Size  Location     Type
 20163 ;;                  1    wreg      unsigned char 
 20164 ;; Registers used:
 20165 ;;		wreg, status,2, status,0
 20166 ;; Tracked objects:
 20167 ;;		On entry : 0/0
 20168 ;;		On exit  : 0/0
 20169 ;;		Unchanged: 0/0
 20170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20174 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20175 ;;Total ram usage:        1 bytes
 20176 ;; Hardware stack levels used: 1
 20177 ;; Hardware stack levels required when called: 12
 20178 ;; This function calls:
 20179 ;;		Nothing
 20180 ;; This function is called by:
 20181 ;;		_mnsProcessMessage
 20182 ;; This function uses a non-reentrant model
 20183 ;;
 20184                           
 20185                           	psect	text60
 20186   00C514                     __ptext60:
 20187                           	callstack 0
 20188   00C514                     _bootEsdData:
 20189                           	callstack 16
 20190                           
 20191                           ; BSR set to: 0
 20192                           ;incstack = 0
 20193                           ;bootEsdData@id stored from wreg
 20194   00C514  0100               	movlb	0	; () banked
 20195   00C516  6F8D               	movwf	bootEsdData@id& (0+255),b
 20196                           
 20197                           ;../../VLCBlib_PIC/boot.c: 258:     switch (id) {
 20198   00C518  D006               	goto	l22052
 20199   00C51A                     l1280:
 20200                           
 20201                           ; BSR set to: 0
 20202                           ;../../VLCBlib_PIC/boot.c: 261:             return bootloaderType;
 20203   00C51A  51C8               	movf	_bootloaderType& (0+255),w,b
 20204   00C51C  0012               	return	
 20205   00C51E                     l1282:
 20206                           
 20207                           ; BSR set to: 0
 20208                           ;../../VLCBlib_PIC/boot.c: 264:             return bootloaderVersion;
 20209   00C51E  51C7               	movf	_bootloaderVersion& (0+255),w,b
 20210   00C520  0012               	return	
 20211   00C522                     l22046:
 20212                           
 20213                           ; BSR set to: 0
 20214                           ;../../VLCBlib_PIC/boot.c: 266:             return 0;
 20215   00C522  0E00               	movlw	0
 20216   00C524  0012               	return	
 20217   00C526                     l22052:
 20218   00C526  0100               	movlb	0	; () banked
 20219   00C528  518D               	movf	bootEsdData@id& (0+255),w,b
 20220                           
 20221                           ; Switch size 1, requested type "simple"
 20222                           ; Number of cases is 2, Range of values is 1 to 2
 20223                           ; switch strategies available:
 20224                           ; Name         Instructions Cycles
 20225                           ; simple_byte            7     4 (average)
 20226                           ;	Chosen strategy is simple_byte
 20227   00C52A  0A01               	xorlw	1	; case 1
 20228   00C52C  B4D8               	btfsc	status,2,c
 20229   00C52E  D7F5               	goto	l1280
 20230   00C530  0A03               	xorlw	3	; case 2
 20231   00C532  B4D8               	btfsc	status,2,c
 20232   00C534  D7F4               	goto	l1282
 20233   00C536  D7F5               	goto	l22046
 20234   00C538                     __end_of_bootEsdData:
 20235                           	callstack 0
 20236                           
 20237 ;; *************** function _consumer2QEsdData *****************
 20238 ;; Defined at:
 20239 ;;		line 364 in file "../event_consumerDualActionQueue.c"
 20240 ;; Parameters:    Size  Location     Type
 20241 ;;  index           1    wreg     unsigned char 
 20242 ;; Auto vars:     Size  Location     Type
 20243 ;;  index           1   45[BANK0 ] unsigned char 
 20244 ;; Return value:  Size  Location     Type
 20245 ;;                  1    wreg      unsigned char 
 20246 ;; Registers used:
 20247 ;;		wreg, status,2, status,0
 20248 ;; Tracked objects:
 20249 ;;		On entry : 0/0
 20250 ;;		On exit  : 0/0
 20251 ;;		Unchanged: 0/0
 20252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20257 ;;Total ram usage:        1 bytes
 20258 ;; Hardware stack levels used: 1
 20259 ;; Hardware stack levels required when called: 12
 20260 ;; This function calls:
 20261 ;;		Nothing
 20262 ;; This function is called by:
 20263 ;;		_mnsProcessMessage
 20264 ;; This function uses a non-reentrant model
 20265 ;;
 20266                           
 20267                           	psect	text61
 20268   00C60A                     __ptext61:
 20269                           	callstack 0
 20270   00C60A                     _consumer2QEsdData:
 20271                           	callstack 16
 20272                           
 20273                           ; BSR set to: 0
 20274                           ;incstack = 0
 20275                           ;consumer2QEsdData@index stored from wreg
 20276   00C60A  0100               	movlb	0	; () banked
 20277   00C60C  6F8D               	movwf	consumer2QEsdData@index& (0+255),b
 20278                           
 20279                           ;../event_consumerDualActionQueue.c: 365:     switch (index){
 20280   00C60E  D004               	goto	l21488
 20281   00C610                     l21474:
 20282                           
 20283                           ; BSR set to: 0
 20284                           ;../event_consumerDualActionQueue.c: 367:             return CONSUMER_EV_ACTIONS;
 20285   00C610  0E01               	movlw	1
 20286   00C612  0012               	return	
 20287   00C614                     l21482:
 20288                           
 20289                           ; BSR set to: 0
 20290                           ;../event_consumerDualActionQueue.c: 371:             return 0;
 20291   00C614  0E00               	movlw	0
 20292   00C616  0012               	return	
 20293   00C618                     l21488:
 20294   00C618  0100               	movlb	0	; () banked
 20295   00C61A  518D               	movf	consumer2QEsdData@index& (0+255),w,b
 20296                           
 20297                           ; Switch size 1, requested type "simple"
 20298                           ; Number of cases is 2, Range of values is 0 to 1
 20299                           ; switch strategies available:
 20300                           ; Name         Instructions Cycles
 20301                           ; simple_byte            7     4 (average)
 20302                           ;	Chosen strategy is simple_byte
 20303   00C61C  0A00               	xorlw	0	; case 0
 20304   00C61E  B4D8               	btfsc	status,2,c
 20305   00C620  D7F7               	goto	l21474
 20306   00C622  0A01               	xorlw	1	; case 1
 20307   00C624  B4D8               	btfsc	status,2,c
 20308   00C626  D7F4               	goto	l21474
 20309   00C628  D7F5               	goto	l21482
 20310   00C62A                     __end_of_consumer2QEsdData:
 20311                           	callstack 0
 20312                           
 20313 ;; *************** function _teachGetESDdata *****************
 20314 ;; Defined at:
 20315 ;;		line 528 in file "../../VLCBlib_PIC/event_teach_large.c"
 20316 ;; Parameters:    Size  Location     Type
 20317 ;;  id              1    wreg     unsigned char 
 20318 ;; Auto vars:     Size  Location     Type
 20319 ;;  id              1   45[BANK0 ] unsigned char 
 20320 ;; Return value:  Size  Location     Type
 20321 ;;                  1    wreg      unsigned char 
 20322 ;; Registers used:
 20323 ;;		wreg, status,2, status,0
 20324 ;; Tracked objects:
 20325 ;;		On entry : 0/0
 20326 ;;		On exit  : 0/0
 20327 ;;		Unchanged: 0/0
 20328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20332 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20333 ;;Total ram usage:        1 bytes
 20334 ;; Hardware stack levels used: 1
 20335 ;; Hardware stack levels required when called: 12
 20336 ;; This function calls:
 20337 ;;		Nothing
 20338 ;; This function is called by:
 20339 ;;		_mnsProcessMessage
 20340 ;; This function uses a non-reentrant model
 20341 ;;
 20342                           
 20343                           	psect	text62
 20344   00C538                     __ptext62:
 20345                           	callstack 0
 20346   00C538                     _teachGetESDdata:
 20347                           	callstack 16
 20348                           
 20349                           ; BSR set to: 0
 20350                           ;incstack = 0
 20351                           ;teachGetESDdata@id stored from wreg
 20352   00C538  0100               	movlb	0	; () banked
 20353   00C53A  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 20354                           
 20355                           ;../../VLCBlib_PIC/event_teach_large.c: 529:     switch (id) {
 20356   00C53C  D006               	goto	l22740
 20357   00C53E                     l22726:
 20358                           
 20359                           ; BSR set to: 0
 20360   00C53E  0EFF               	movlw	255
 20361   00C540  0012               	return	
 20362   00C542                     l22730:
 20363                           
 20364                           ; BSR set to: 0
 20365   00C542  0E14               	movlw	20
 20366   00C544  0012               	return	
 20367   00C546                     l22734:
 20368                           
 20369                           ; BSR set to: 0
 20370   00C546  0E00               	movlw	0
 20371   00C548  0012               	return	
 20372   00C54A                     l22740:
 20373   00C54A  0100               	movlb	0	; () banked
 20374   00C54C  518D               	movf	teachGetESDdata@id& (0+255),w,b
 20375                           
 20376                           ; Switch size 1, requested type "simple"
 20377                           ; Number of cases is 2, Range of values is 1 to 2
 20378                           ; switch strategies available:
 20379                           ; Name         Instructions Cycles
 20380                           ; simple_byte            7     4 (average)
 20381                           ;	Chosen strategy is simple_byte
 20382   00C54E  0A01               	xorlw	1	; case 1
 20383   00C550  B4D8               	btfsc	status,2,c
 20384   00C552  D7F5               	goto	l22726
 20385   00C554  0A03               	xorlw	3	; case 2
 20386   00C556  B4D8               	btfsc	status,2,c
 20387   00C558  D7F4               	goto	l22730
 20388   00C55A  D7F5               	goto	l22734
 20389   00C55C                     __end_of_teachGetESDdata:
 20390                           	callstack 0
 20391                           
 20392 ;; *************** function _producerGetDiagnostic *****************
 20393 ;; Defined at:
 20394 ;;		line 180 in file "../../VLCBlib_PIC/event_producer_happening.c"
 20395 ;; Parameters:    Size  Location     Type
 20396 ;;  index           1    wreg     unsigned char 
 20397 ;; Auto vars:     Size  Location     Type
 20398 ;;  index           1   56[BANK0 ] unsigned char 
 20399 ;; Return value:  Size  Location     Type
 20400 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20401 ;; Registers used:
 20402 ;;		wreg, status,2, status,0, prodl, prodh
 20403 ;; Tracked objects:
 20404 ;;		On entry : 0/0
 20405 ;;		On exit  : 0/0
 20406 ;;		Unchanged: 0/0
 20407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20408 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20411 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20412 ;;Total ram usage:        3 bytes
 20413 ;; Hardware stack levels used: 1
 20414 ;; Hardware stack levels required when called: 12
 20415 ;; This function calls:
 20416 ;;		Nothing
 20417 ;; This function is called by:
 20418 ;;		_mnsTRallDiagnosticsCallback
 20419 ;;		_mnsProcessMessage
 20420 ;; This function uses a non-reentrant model
 20421 ;;
 20422                           
 20423                           	psect	text63
 20424   00C388                     __ptext63:
 20425                           	callstack 0
 20426   00C388                     _producerGetDiagnostic:
 20427                           	callstack 15
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;incstack = 0
 20431                           ;producerGetDiagnostic@index stored from wreg
 20432   00C388  0100               	movlb	0	; () banked
 20433   00C38A  6F98               	movwf	producerGetDiagnostic@index& (0+255),b
 20434                           
 20435                           ;../../VLCBlib_PIC/event_producer_happening.c: 181:     if (index > 1) {
 20436   00C38C  0E01               	movlw	1
 20437   00C38E  0100               	movlb	0	; () banked
 20438   00C390  6598               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 20439   00C392  D005               	goto	l21358
 20440                           
 20441                           ; BSR set to: 0
 20442                           ;../../VLCBlib_PIC/event_producer_happening.c: 182:         return ((void*)0);
 20443   00C394  0E00               	movlw	0
 20444   00C396  6F96               	movwf	?_producerGetDiagnostic& (0+255),b
 20445   00C398  0E00               	movlw	0
 20446   00C39A  6F97               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20447   00C39C  0012               	return	
 20448   00C39E                     l21358:
 20449                           
 20450                           ; BSR set to: 0
 20451                           ;../../VLCBlib_PIC/event_producer_happening.c: 184:     return &(producerDiagnostics[ind
      +                          ex]);
 20452   00C39E  5198               	movf	producerGetDiagnostic@index& (0+255),w,b
 20453   00C3A0  0D02               	mullw	2
 20454   00C3A2  0EAD               	movlw	low _producerDiagnostics
 20455   00C3A4  24F3               	addwf	243,w,c
 20456   00C3A6  6F96               	movwf	?_producerGetDiagnostic& (0+255),b
 20457   00C3A8  0E01               	movlw	high _producerDiagnostics
 20458   00C3AA  20F4               	addwfc	prodh,w,c
 20459   00C3AC  6F97               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20460                           
 20461                           ; BSR set to: 0
 20462   00C3AE  0012               	return		;funcret
 20463   00C3B0                     __end_of_producerGetDiagnostic:
 20464                           	callstack 0
 20465                           
 20466 ;; *************** function _canGetDiagnostic *****************
 20467 ;; Defined at:
 20468 ;;		line 438 in file "../../VLCBlib_PIC/can18_ecan.c"
 20469 ;; Parameters:    Size  Location     Type
 20470 ;;  index           1    wreg     unsigned char 
 20471 ;; Auto vars:     Size  Location     Type
 20472 ;;  index           1   57[BANK0 ] unsigned char 
 20473 ;; Return value:  Size  Location     Type
 20474 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20475 ;; Registers used:
 20476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20477 ;; Tracked objects:
 20478 ;;		On entry : 0/0
 20479 ;;		On exit  : 0/0
 20480 ;;		Unchanged: 0/0
 20481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20484 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20485 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20486 ;;Total ram usage:        4 bytes
 20487 ;; Hardware stack levels used: 1
 20488 ;; Hardware stack levels required when called: 14
 20489 ;; This function calls:
 20490 ;;		_getNumRxBuffersInUse
 20491 ;;		_getNumTxBuffersInUse
 20492 ;; This function is called by:
 20493 ;;		_mnsTRallDiagnosticsCallback
 20494 ;;		_mnsProcessMessage
 20495 ;; This function uses a non-reentrant model
 20496 ;;
 20497                           
 20498                           	psect	text64
 20499   00B1AE                     __ptext64:
 20500                           	callstack 0
 20501   00B1AE                     _canGetDiagnostic:
 20502                           	callstack 13
 20503                           
 20504                           ; BSR set to: 0
 20505                           ;incstack = 0
 20506                           ;canGetDiagnostic@index stored from wreg
 20507   00B1AE  0100               	movlb	0	; () banked
 20508   00B1B0  6F99               	movwf	canGetDiagnostic@index& (0+255),b
 20509                           
 20510                           ;../../VLCBlib_PIC/can18_ecan.c: 439:     if (index > 18) {
 20511   00B1B2  0E12               	movlw	18
 20512   00B1B4  0100               	movlb	0	; () banked
 20513   00B1B6  6599               	cpfsgt	canGetDiagnostic@index& (0+255),b
 20514   00B1B8  D01C               	goto	l21264
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;../../VLCBlib_PIC/can18_ecan.c: 440:         return ((void*)0);
 20518   00B1BA  0E00               	movlw	0
 20519   00B1BC  6F96               	movwf	?_canGetDiagnostic& (0+255),b
 20520   00B1BE  0E00               	movlw	0
 20521   00B1C0  6F97               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20522   00B1C2  0012               	return	
 20523   00B1C4                     l2501:
 20524                           
 20525                           ; BSR set to: 0
 20526                           ;../../VLCBlib_PIC/can18_ecan.c: 444:             canDiagnostics[0x03].asUint = COMSTAT;
 20527   00B1C4  CF71 F170          	movff	3953,_canDiagnostics+6	;volatile
 20528   00B1C8  0101               	movlb	1	; () banked
 20529   00B1CA  6B71               	clrf	(_canDiagnostics+7)& (0+255),b
 20530                           
 20531                           ;../../VLCBlib_PIC/can18_ecan.c: 445:             break;
 20532   00B1CC  D01C               	goto	l21266
 20533   00B1CE                     l21258:
 20534                           
 20535                           ; BSR set to: 0
 20536                           ;../../VLCBlib_PIC/can18_ecan.c: 447:             canDiagnostics[0x04].asUint = getNumTx
      +                          BuffersInUse();
 20537   00B1CE  ECE9  F063         	call	_getNumTxBuffersInUse	;wreg free
 20538   00B1D2  0100               	movlb	0	; () banked
 20539   00B1D4  6F98               	movwf	??_canGetDiagnostic& (0+255),b
 20540   00B1D6  5198               	movf	??_canGetDiagnostic& (0+255),w,b
 20541   00B1D8  0101               	movlb	1	; () banked
 20542   00B1DA  6F72               	movwf	(_canDiagnostics+8)& (0+255),b
 20543   00B1DC  6B73               	clrf	(_canDiagnostics+9)& (0+255),b
 20544                           
 20545                           ;../../VLCBlib_PIC/can18_ecan.c: 448:             break;
 20546   00B1DE  D013               	goto	l21266
 20547   00B1E0                     l21260:
 20548                           
 20549                           ; BSR set to: 0
 20550                           ;../../VLCBlib_PIC/can18_ecan.c: 450:             canDiagnostics[0x07].asUint = getNumRx
      +                          BuffersInUse();
 20551   00B1E0  EC90  F05F         	call	_getNumRxBuffersInUse	;wreg free
 20552   00B1E4  0100               	movlb	0	; () banked
 20553   00B1E6  6F98               	movwf	??_canGetDiagnostic& (0+255),b
 20554   00B1E8  5198               	movf	??_canGetDiagnostic& (0+255),w,b
 20555   00B1EA  0101               	movlb	1	; () banked
 20556   00B1EC  6F78               	movwf	(_canDiagnostics+14)& (0+255),b
 20557   00B1EE  6B79               	clrf	(_canDiagnostics+15)& (0+255),b
 20558                           
 20559                           ;../../VLCBlib_PIC/can18_ecan.c: 451:             break;
 20560   00B1F0  D00A               	goto	l21266
 20561   00B1F2                     l21264:
 20562                           
 20563                           ; BSR set to: 0
 20564   00B1F2  5199               	movf	canGetDiagnostic@index& (0+255),w,b
 20565                           
 20566                           ; Switch size 1, requested type "simple"
 20567                           ; Number of cases is 3, Range of values is 3 to 7
 20568                           ; switch strategies available:
 20569                           ; Name         Instructions Cycles
 20570                           ; simple_byte           10     6 (average)
 20571                           ;	Chosen strategy is simple_byte
 20572   00B1F4  0A03               	xorlw	3	; case 3
 20573   00B1F6  B4D8               	btfsc	status,2,c
 20574   00B1F8  D7E5               	goto	l2501
 20575   00B1FA  0A07               	xorlw	7	; case 4
 20576   00B1FC  B4D8               	btfsc	status,2,c
 20577   00B1FE  D7E7               	goto	l21258
 20578   00B200  0A03               	xorlw	3	; case 7
 20579   00B202  B4D8               	btfsc	status,2,c
 20580   00B204  D7ED               	goto	l21260
 20581   00B206                     l21266:
 20582                           
 20583                           ;../../VLCBlib_PIC/can18_ecan.c: 453:     return &(canDiagnostics[index]);
 20584   00B206  0100               	movlb	0	; () banked
 20585   00B208  5199               	movf	canGetDiagnostic@index& (0+255),w,b
 20586   00B20A  0D02               	mullw	2
 20587   00B20C  0E6A               	movlw	low _canDiagnostics
 20588   00B20E  24F3               	addwf	243,w,c
 20589   00B210  6F96               	movwf	?_canGetDiagnostic& (0+255),b
 20590   00B212  0E01               	movlw	high _canDiagnostics
 20591   00B214  20F4               	addwfc	prodh,w,c
 20592   00B216  6F97               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20593                           
 20594                           ; BSR set to: 0
 20595   00B218  0012               	return		;funcret
 20596   00B21A                     __end_of_canGetDiagnostic:
 20597                           	callstack 0
 20598                           
 20599 ;; *************** function _nvGetDiagnostic *****************
 20600 ;; Defined at:
 20601 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 20602 ;; Parameters:    Size  Location     Type
 20603 ;;  index           1    wreg     unsigned char 
 20604 ;; Auto vars:     Size  Location     Type
 20605 ;;  index           1   56[BANK0 ] unsigned char 
 20606 ;; Return value:  Size  Location     Type
 20607 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20608 ;; Registers used:
 20609 ;;		wreg, status,2, status,0, prodl, prodh
 20610 ;; Tracked objects:
 20611 ;;		On entry : 0/0
 20612 ;;		On exit  : 0/0
 20613 ;;		Unchanged: 0/0
 20614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20615 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20618 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20619 ;;Total ram usage:        3 bytes
 20620 ;; Hardware stack levels used: 1
 20621 ;; Hardware stack levels required when called: 12
 20622 ;; This function calls:
 20623 ;;		Nothing
 20624 ;; This function is called by:
 20625 ;;		_mnsTRallDiagnosticsCallback
 20626 ;;		_mnsProcessMessage
 20627 ;; This function uses a non-reentrant model
 20628 ;;
 20629                           
 20630                           	psect	text65
 20631   00C3B0                     __ptext65:
 20632                           	callstack 0
 20633   00C3B0                     _nvGetDiagnostic:
 20634                           	callstack 15
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;incstack = 0
 20638                           ;nvGetDiagnostic@index stored from wreg
 20639   00C3B0  0100               	movlb	0	; () banked
 20640   00C3B2  6F98               	movwf	nvGetDiagnostic@index& (0+255),b
 20641                           
 20642                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 20643   00C3B4  0E02               	movlw	2
 20644   00C3B6  0100               	movlb	0	; () banked
 20645   00C3B8  6598               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 20646   00C3BA  D005               	goto	l21172
 20647                           
 20648                           ; BSR set to: 0
 20649                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 20650   00C3BC  0E00               	movlw	0
 20651   00C3BE  6F96               	movwf	?_nvGetDiagnostic& (0+255),b
 20652   00C3C0  0E00               	movlw	0
 20653   00C3C2  6F97               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20654   00C3C4  0012               	return	
 20655   00C3C6                     l21172:
 20656                           
 20657                           ; BSR set to: 0
 20658                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 20659   00C3C6  5198               	movf	nvGetDiagnostic@index& (0+255),w,b
 20660   00C3C8  0D02               	mullw	2
 20661   00C3CA  0EA7               	movlw	low _nvDiagnostics
 20662   00C3CC  24F3               	addwf	243,w,c
 20663   00C3CE  6F96               	movwf	?_nvGetDiagnostic& (0+255),b
 20664   00C3D0  0E01               	movlw	high _nvDiagnostics
 20665   00C3D2  20F4               	addwfc	prodh,w,c
 20666   00C3D4  6F97               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20667                           
 20668                           ; BSR set to: 0
 20669   00C3D6  0012               	return		;funcret
 20670   00C3D8                     __end_of_nvGetDiagnostic:
 20671                           	callstack 0
 20672                           
 20673 ;; *************** function _mnsGetDiagnostic *****************
 20674 ;; Defined at:
 20675 ;;		line 785 in file "../../VLCBlib_PIC/mns.c"
 20676 ;; Parameters:    Size  Location     Type
 20677 ;;  index           1    wreg     unsigned char 
 20678 ;; Auto vars:     Size  Location     Type
 20679 ;;  index           1   56[BANK0 ] unsigned char 
 20680 ;; Return value:  Size  Location     Type
 20681 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20682 ;; Registers used:
 20683 ;;		wreg, status,2, status,0, prodl, prodh
 20684 ;; Tracked objects:
 20685 ;;		On entry : 0/0
 20686 ;;		On exit  : 0/0
 20687 ;;		Unchanged: 0/0
 20688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20692 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20693 ;;Total ram usage:        3 bytes
 20694 ;; Hardware stack levels used: 1
 20695 ;; Hardware stack levels required when called: 12
 20696 ;; This function calls:
 20697 ;;		Nothing
 20698 ;; This function is called by:
 20699 ;;		_mnsTRallDiagnosticsCallback
 20700 ;;		_mnsProcessMessage
 20701 ;; This function uses a non-reentrant model
 20702 ;;
 20703                           
 20704                           	psect	text66
 20705   00C3D8                     __ptext66:
 20706                           	callstack 0
 20707   00C3D8                     _mnsGetDiagnostic:
 20708                           	callstack 15
 20709                           
 20710                           ; BSR set to: 0
 20711                           ;incstack = 0
 20712                           ;mnsGetDiagnostic@index stored from wreg
 20713   00C3D8  0100               	movlb	0	; () banked
 20714   00C3DA  6F98               	movwf	mnsGetDiagnostic@index& (0+255),b
 20715                           
 20716                           ;../../VLCBlib_PIC/mns.c: 786:     if (index > 6) {
 20717   00C3DC  0E06               	movlw	6
 20718   00C3DE  0100               	movlb	0	; () banked
 20719   00C3E0  6598               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 20720   00C3E2  D005               	goto	l21110
 20721                           
 20722                           ; BSR set to: 0
 20723                           ;../../VLCBlib_PIC/mns.c: 787:         return ((void*)0);
 20724   00C3E4  0E00               	movlw	0
 20725   00C3E6  6F96               	movwf	?_mnsGetDiagnostic& (0+255),b
 20726   00C3E8  0E00               	movlw	0
 20727   00C3EA  6F97               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20728   00C3EC  0012               	return	
 20729   00C3EE                     l21110:
 20730                           
 20731                           ; BSR set to: 0
 20732                           ;../../VLCBlib_PIC/mns.c: 789:     return &(mnsDiagnostics[index]);
 20733   00C3EE  5198               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20734   00C3F0  0D02               	mullw	2
 20735   00C3F2  0E90               	movlw	low _mnsDiagnostics
 20736   00C3F4  24F3               	addwf	243,w,c
 20737   00C3F6  6F96               	movwf	?_mnsGetDiagnostic& (0+255),b
 20738   00C3F8  0E01               	movlw	high _mnsDiagnostics
 20739   00C3FA  20F4               	addwfc	prodh,w,c
 20740   00C3FC  6F97               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20741                           
 20742                           ; BSR set to: 0
 20743   00C3FE  0012               	return		;funcret
 20744   00C400                     __end_of_mnsGetDiagnostic:
 20745                           	callstack 0
 20746                           
 20747 ;; *************** function _ackGetDiagnostic *****************
 20748 ;; Defined at:
 20749 ;;		line 194 in file "../../VLCBlib_PIC/event_acknowledge.c"
 20750 ;; Parameters:    Size  Location     Type
 20751 ;;  index           1    wreg     unsigned char 
 20752 ;; Auto vars:     Size  Location     Type
 20753 ;;  index           1   56[BANK0 ] unsigned char 
 20754 ;; Return value:  Size  Location     Type
 20755 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20756 ;; Registers used:
 20757 ;;		wreg, status,2, status,0, prodl, prodh
 20758 ;; Tracked objects:
 20759 ;;		On entry : 0/0
 20760 ;;		On exit  : 0/0
 20761 ;;		Unchanged: 0/0
 20762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20763 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20767 ;;Total ram usage:        3 bytes
 20768 ;; Hardware stack levels used: 1
 20769 ;; Hardware stack levels required when called: 12
 20770 ;; This function calls:
 20771 ;;		Nothing
 20772 ;; This function is called by:
 20773 ;;		_mnsTRallDiagnosticsCallback
 20774 ;;		_mnsProcessMessage
 20775 ;; This function uses a non-reentrant model
 20776 ;;
 20777                           
 20778                           	psect	text67
 20779   00C400                     __ptext67:
 20780                           	callstack 0
 20781   00C400                     _ackGetDiagnostic:
 20782                           	callstack 15
 20783                           
 20784                           ; BSR set to: 0
 20785                           ;incstack = 0
 20786                           ;ackGetDiagnostic@index stored from wreg
 20787   00C400  0100               	movlb	0	; () banked
 20788   00C402  6F98               	movwf	ackGetDiagnostic@index& (0+255),b
 20789                           
 20790                           ;../../VLCBlib_PIC/event_acknowledge.c: 195:     if (index > 1) {
 20791   00C404  0E01               	movlw	1
 20792   00C406  0100               	movlb	0	; () banked
 20793   00C408  6598               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 20794   00C40A  D005               	goto	l20990
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;../../VLCBlib_PIC/event_acknowledge.c: 196:         return ((void*)0);
 20798   00C40C  0E00               	movlw	0
 20799   00C40E  6F96               	movwf	?_ackGetDiagnostic& (0+255),b
 20800   00C410  0E00               	movlw	0
 20801   00C412  6F97               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20802   00C414  0012               	return	
 20803   00C416                     l20990:
 20804                           
 20805                           ; BSR set to: 0
 20806                           ;../../VLCBlib_PIC/event_acknowledge.c: 198:     return &(ackDiagnostics[index]);
 20807   00C416  5198               	movf	ackGetDiagnostic@index& (0+255),w,b
 20808   00C418  0D02               	mullw	2
 20809   00C41A  0EB5               	movlw	low _ackDiagnostics
 20810   00C41C  24F3               	addwf	243,w,c
 20811   00C41E  6F96               	movwf	?_ackGetDiagnostic& (0+255),b
 20812   00C420  0E01               	movlw	high _ackDiagnostics
 20813   00C422  20F4               	addwfc	prodh,w,c
 20814   00C424  6F97               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20815                           
 20816                           ; BSR set to: 0
 20817   00C426  0012               	return		;funcret
 20818   00C428                     __end_of_ackGetDiagnostic:
 20819                           	callstack 0
 20820                           
 20821 ;; *************** function _consumer2QGetDiagnostic *****************
 20822 ;; Defined at:
 20823 ;;		line 350 in file "../event_consumerDualActionQueue.c"
 20824 ;; Parameters:    Size  Location     Type
 20825 ;;  index           1    wreg     unsigned char 
 20826 ;; Auto vars:     Size  Location     Type
 20827 ;;  index           1   56[BANK0 ] unsigned char 
 20828 ;; Return value:  Size  Location     Type
 20829 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20830 ;; Registers used:
 20831 ;;		wreg, status,2, status,0, prodl, prodh
 20832 ;; Tracked objects:
 20833 ;;		On entry : 0/0
 20834 ;;		On exit  : 0/0
 20835 ;;		Unchanged: 0/0
 20836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20837 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20840 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20841 ;;Total ram usage:        3 bytes
 20842 ;; Hardware stack levels used: 1
 20843 ;; Hardware stack levels required when called: 12
 20844 ;; This function calls:
 20845 ;;		Nothing
 20846 ;; This function is called by:
 20847 ;;		_mnsTRallDiagnosticsCallback
 20848 ;;		_mnsProcessMessage
 20849 ;; This function uses a non-reentrant model
 20850 ;;
 20851                           
 20852                           	psect	text68
 20853   00C428                     __ptext68:
 20854                           	callstack 0
 20855   00C428                     _consumer2QGetDiagnostic:
 20856                           	callstack 15
 20857                           
 20858                           ; BSR set to: 0
 20859                           ;incstack = 0
 20860                           ;consumer2QGetDiagnostic@index stored from wreg
 20861   00C428  0100               	movlb	0	; () banked
 20862   00C42A  6F98               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 20863                           
 20864                           ;../event_consumerDualActionQueue.c: 351:     if (index > 1) {
 20865   00C42C  0E01               	movlw	1
 20866   00C42E  0100               	movlb	0	; () banked
 20867   00C430  6598               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 20868   00C432  D005               	goto	l20636
 20869                           
 20870                           ; BSR set to: 0
 20871                           ;../event_consumerDualActionQueue.c: 352:         return ((void*)0);
 20872   00C434  0E00               	movlw	0
 20873   00C436  6F96               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20874   00C438  0E00               	movlw	0
 20875   00C43A  6F97               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20876   00C43C  0012               	return	
 20877   00C43E                     l20636:
 20878                           
 20879                           ; BSR set to: 0
 20880                           ;../event_consumerDualActionQueue.c: 354:     return &(consumer2QDiagnostics[index]);
 20881   00C43E  5198               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20882   00C440  0D02               	mullw	2
 20883   00C442  0EB9               	movlw	low _consumer2QDiagnostics
 20884   00C444  24F3               	addwf	243,w,c
 20885   00C446  6F96               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20886   00C448  0E01               	movlw	high _consumer2QDiagnostics
 20887   00C44A  20F4               	addwfc	prodh,w,c
 20888   00C44C  6F97               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20889                           
 20890                           ; BSR set to: 0
 20891   00C44E  0012               	return		;funcret
 20892   00C450                     __end_of_consumer2QGetDiagnostic:
 20893                           	callstack 0
 20894                           
 20895 ;; *************** function _teachGetDiagnostic *****************
 20896 ;; Defined at:
 20897 ;;		line 543 in file "../../VLCBlib_PIC/event_teach_large.c"
 20898 ;; Parameters:    Size  Location     Type
 20899 ;;  index           1    wreg     unsigned char 
 20900 ;; Auto vars:     Size  Location     Type
 20901 ;;  index           1   56[BANK0 ] unsigned char 
 20902 ;; Return value:  Size  Location     Type
 20903 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20904 ;; Registers used:
 20905 ;;		wreg, status,2, status,0, prodl, prodh
 20906 ;; Tracked objects:
 20907 ;;		On entry : 0/0
 20908 ;;		On exit  : 0/0
 20909 ;;		Unchanged: 0/0
 20910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20914 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20915 ;;Total ram usage:        3 bytes
 20916 ;; Hardware stack levels used: 1
 20917 ;; Hardware stack levels required when called: 12
 20918 ;; This function calls:
 20919 ;;		Nothing
 20920 ;; This function is called by:
 20921 ;;		_mnsTRallDiagnosticsCallback
 20922 ;;		_mnsProcessMessage
 20923 ;; This function uses a non-reentrant model
 20924 ;;
 20925                           
 20926                           	psect	text69
 20927   00C450                     __ptext69:
 20928                           	callstack 0
 20929   00C450                     _teachGetDiagnostic:
 20930                           	callstack 15
 20931                           
 20932                           ; BSR set to: 0
 20933                           ;incstack = 0
 20934                           ;teachGetDiagnostic@index stored from wreg
 20935   00C450  0100               	movlb	0	; () banked
 20936   00C452  6F98               	movwf	teachGetDiagnostic@index& (0+255),b
 20937                           
 20938                           ;../../VLCBlib_PIC/event_teach_large.c: 544:     if (index > 1) {
 20939   00C454  0E01               	movlw	1
 20940   00C456  0100               	movlb	0	; () banked
 20941   00C458  6598               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 20942   00C45A  D005               	goto	l21298
 20943                           
 20944                           ; BSR set to: 0
 20945                           ;../../VLCBlib_PIC/event_teach_large.c: 545:         return ((void*)0);
 20946   00C45C  0E00               	movlw	0
 20947   00C45E  6F96               	movwf	?_teachGetDiagnostic& (0+255),b
 20948   00C460  0E00               	movlw	0
 20949   00C462  6F97               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20950   00C464  0012               	return	
 20951   00C466                     l21298:
 20952                           
 20953                           ; BSR set to: 0
 20954                           ;../../VLCBlib_PIC/event_teach_large.c: 547:     return &(teachDiagnostics[index]);
 20955   00C466  5198               	movf	teachGetDiagnostic@index& (0+255),w,b
 20956   00C468  0D02               	mullw	2
 20957   00C46A  0EB1               	movlw	low _teachDiagnostics
 20958   00C46C  24F3               	addwf	243,w,c
 20959   00C46E  6F96               	movwf	?_teachGetDiagnostic& (0+255),b
 20960   00C470  0E01               	movlw	high _teachDiagnostics
 20961   00C472  20F4               	addwfc	prodh,w,c
 20962   00C474  6F97               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20963                           
 20964                           ; BSR set to: 0
 20965   00C476  0012               	return		;funcret
 20966   00C478                     __end_of_teachGetDiagnostic:
 20967                           	callstack 0
 20968                           
 20969 ;; *************** function _sendMessage6 *****************
 20970 ;; Defined at:
 20971 ;;		line 1195 in file "../../VLCBlib_PIC/vlcb.c"
 20972 ;; Parameters:    Size  Location     Type
 20973 ;;  opc             1    wreg     enum E12392
 20974 ;;  data1           1    8[BANK1 ] unsigned char 
 20975 ;;  data2           1    9[BANK1 ] unsigned char 
 20976 ;;  data3           1   10[BANK1 ] unsigned char 
 20977 ;;  data4           1   11[BANK1 ] unsigned char 
 20978 ;;  data5           1   12[BANK1 ] unsigned char 
 20979 ;;  data6           1   13[BANK1 ] unsigned char 
 20980 ;; Auto vars:     Size  Location     Type
 20981 ;;  opc             1   70[BANK0 ] enum E12392
 20982 ;; Return value:  Size  Location     Type
 20983 ;;                  1    wreg      void 
 20984 ;; Registers used:
 20985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20986 ;; Tracked objects:
 20987 ;;		On entry : 0/0
 20988 ;;		On exit  : 0/0
 20989 ;;		Unchanged: 0/0
 20990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20991 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20992 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20994 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20995 ;;Total ram usage:        7 bytes
 20996 ;; Hardware stack levels used: 1
 20997 ;; Hardware stack levels required when called: 16
 20998 ;; This function calls:
 20999 ;;		_sendMessage
 21000 ;; This function is called by:
 21001 ;;		_mnsProcessMessage
 21002 ;;		_mnsTRallDiagnosticsCallback
 21003 ;;		_doReqev
 21004 ;;		_reqevCallback
 21005 ;; This function uses a non-reentrant model
 21006 ;;
 21007                           
 21008                           	psect	text70
 21009   00C134                     __ptext70:
 21010                           	callstack 0
 21011   00C134                     _sendMessage6:
 21012                           	callstack 11
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;incstack = 0
 21016                           ;sendMessage6@opc stored from wreg
 21017   00C134  0100               	movlb	0	; () banked
 21018   00C136  6FA6               	movwf	sendMessage6@opc& (0+255),b
 21019                           
 21020                           ;../../VLCBlib_PIC/vlcb.c: 1196:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 21021   00C138  0E07               	movlw	7
 21022   00C13A  0101               	movlb	1	; () banked
 21023   00C13C  6FBD               	movwf	sendMessage@len& (0+255),b
 21024   00C13E  C1C5  F1BE         	movff	sendMessage6@data1,sendMessage@data1
 21025   00C142  C1C6  F1BF         	movff	sendMessage6@data2,sendMessage@data2
 21026   00C146  C1C7  F1C0         	movff	sendMessage6@data3,sendMessage@data3
 21027   00C14A  C1C8  F1C1         	movff	sendMessage6@data4,sendMessage@data4
 21028   00C14E  C1C9  F1C2         	movff	sendMessage6@data5,sendMessage@data5
 21029   00C152  C1CA  F1C3         	movff	sendMessage6@data6,sendMessage@data6
 21030   00C156  0E00               	movlw	0
 21031   00C158  6FC4               	movwf	sendMessage@data7& (0+255),b
 21032   00C15A  0100               	movlb	0	; () banked
 21033   00C15C  51A6               	movf	sendMessage6@opc& (0+255),w,b
 21034   00C15E  ECA2  F055         	call	_sendMessage
 21035   00C162  0012               	return		;funcret
 21036   00C164                     __end_of_sendMessage6:
 21037                           	callstack 0
 21038                           
 21039 ;; *************** function _sendMessage3 *****************
 21040 ;; Defined at:
 21041 ;;		line 1156 in file "../../VLCBlib_PIC/vlcb.c"
 21042 ;; Parameters:    Size  Location     Type
 21043 ;;  opc             1    wreg     enum E12392
 21044 ;;  data1           1   70[BANK0 ] unsigned char 
 21045 ;;  data2           1   71[BANK0 ] unsigned char 
 21046 ;;  data3           1   72[BANK0 ] unsigned char 
 21047 ;; Auto vars:     Size  Location     Type
 21048 ;;  opc             1    8[BANK1 ] enum E12392
 21049 ;; Return value:  Size  Location     Type
 21050 ;;                  1    wreg      void 
 21051 ;; Registers used:
 21052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21053 ;; Tracked objects:
 21054 ;;		On entry : 0/0
 21055 ;;		On exit  : 0/0
 21056 ;;		Unchanged: 0/0
 21057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21058 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21059 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21061 ;;      Totals:         0       3       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21062 ;;Total ram usage:        4 bytes
 21063 ;; Hardware stack levels used: 1
 21064 ;; Hardware stack levels required when called: 16
 21065 ;; This function calls:
 21066 ;;		_sendMessage
 21067 ;; This function is called by:
 21068 ;;		_mnsProcessMessage
 21069 ;;		_nvProcessMessage
 21070 ;;		_teachProcessMessage
 21071 ;;		_doNnevn
 21072 ;;		_doNenrd
 21073 ;;		_doRqevn
 21074 ;;		_doEvlrn
 21075 ;;		_doReval
 21076 ;;		_doEvuln
 21077 ;;		_doReqev
 21078 ;;		_producerProcessMessage
 21079 ;; This function uses a non-reentrant model
 21080 ;;
 21081                           
 21082                           	psect	text71
 21083   00C280                     __ptext71:
 21084                           	callstack 0
 21085   00C280                     _sendMessage3:
 21086                           	callstack 12
 21087                           
 21088                           ;incstack = 0
 21089                           ;sendMessage3@opc stored from wreg
 21090   00C280  0101               	movlb	1	; () banked
 21091   00C282  6FC5               	movwf	sendMessage3@opc& (0+255),b
 21092                           
 21093                           ;../../VLCBlib_PIC/vlcb.c: 1157:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 21094   00C284  0E04               	movlw	4
 21095   00C286  0101               	movlb	1	; () banked
 21096   00C288  6FBD               	movwf	sendMessage@len& (0+255),b
 21097   00C28A  C0A6  F1BE         	movff	sendMessage3@data1,sendMessage@data1
 21098   00C28E  C0A7  F1BF         	movff	sendMessage3@data2,sendMessage@data2
 21099   00C292  C0A8  F1C0         	movff	sendMessage3@data3,sendMessage@data3
 21100   00C296  0E00               	movlw	0
 21101   00C298  6FC1               	movwf	sendMessage@data4& (0+255),b
 21102   00C29A  0E00               	movlw	0
 21103   00C29C  6FC2               	movwf	sendMessage@data5& (0+255),b
 21104   00C29E  0E00               	movlw	0
 21105   00C2A0  6FC3               	movwf	sendMessage@data6& (0+255),b
 21106   00C2A2  0E00               	movlw	0
 21107   00C2A4  6FC4               	movwf	sendMessage@data7& (0+255),b
 21108   00C2A6  51C5               	movf	sendMessage3@opc& (0+255),w,b
 21109   00C2A8  ECA2  F055         	call	_sendMessage
 21110   00C2AC  0012               	return		;funcret
 21111   00C2AE                     __end_of_sendMessage3:
 21112                           	callstack 0
 21113                           
 21114 ;; *************** function _getParameter *****************
 21115 ;; Defined at:
 21116 ;;		line 816 in file "../../VLCBlib_PIC/mns.c"
 21117 ;; Parameters:    Size  Location     Type
 21118 ;;  idx             1    wreg     unsigned char 
 21119 ;; Auto vars:     Size  Location     Type
 21120 ;;  idx             1   50[BANK0 ] unsigned char 
 21121 ;;  i               1    0        unsigned char 
 21122 ;; Return value:  Size  Location     Type
 21123 ;;                  1    wreg      unsigned char 
 21124 ;; Registers used:
 21125 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21126 ;; Tracked objects:
 21127 ;;		On entry : 0/0
 21128 ;;		On exit  : 0/0
 21129 ;;		Unchanged: 0/0
 21130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21134 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21135 ;;Total ram usage:        1 bytes
 21136 ;; Hardware stack levels used: 1
 21137 ;; Hardware stack levels required when called: 14
 21138 ;; This function calls:
 21139 ;;		_getParameterFlags
 21140 ;;		_have
 21141 ;; This function is called by:
 21142 ;;		_mnsProcessMessage
 21143 ;;		_mnsTRrqnpnCallback
 21144 ;; This function uses a non-reentrant model
 21145 ;;
 21146                           
 21147                           	psect	text72
 21148   008922                     __ptext72:
 21149                           	callstack 0
 21150   008922                     _getParameter:
 21151                           	callstack 13
 21152                           
 21153                           ;incstack = 0
 21154                           ;getParameter@idx stored from wreg
 21155   008922  0100               	movlb	0	; () banked
 21156   008924  6F92               	movwf	getParameter@idx& (0+255),b
 21157                           
 21158                           ;../../VLCBlib_PIC/mns.c: 817:     uint8_t i;;../../VLCBlib_PIC/mns.c: 818:     switch(i
      +                          dx) {
 21159   008926  D031               	goto	l21100
 21160   008928                     l21012:
 21161                           
 21162                           ; BSR set to: 0
 21163                           ;../../VLCBlib_PIC/mns.c: 820:         return 20;
 21164   008928  0E14               	movlw	20
 21165   00892A  0012               	return	
 21166   00892C                     l21016:
 21167                           
 21168                           ; BSR set to: 0
 21169                           ;../../VLCBlib_PIC/mns.c: 822:         return MANU_MERG;
 21170   00892C  0EA5               	movlw	165
 21171   00892E  0012               	return	
 21172   008930                     l21020:
 21173                           
 21174                           ; BSR set to: 0
 21175                           ;../../VLCBlib_PIC/mns.c: 824:         return 'a';
 21176   008930  0E61               	movlw	97
 21177   008932  0012               	return	
 21178   008934                     l21024:
 21179                           
 21180                           ; BSR set to: 0
 21181                           ;../../VLCBlib_PIC/mns.c: 826:         return MTYP_CANMIO;
 21182   008934  0E20               	movlw	32
 21183   008936  0012               	return	
 21184   008938                     l21028:
 21185                           
 21186                           ; BSR set to: 0
 21187                           ;../../VLCBlib_PIC/mns.c: 828:         return 255;
 21188   008938  0EFF               	movlw	255
 21189   00893A  0012               	return	
 21190   00893C                     l21036:
 21191                           
 21192                           ; BSR set to: 0
 21193                           ;../../VLCBlib_PIC/mns.c: 832:         return (15+7*16);
 21194   00893C  0E7F               	movlw	127
 21195   00893E  0012               	return	
 21196   008940                     l21040:
 21197                           
 21198                           ; BSR set to: 0
 21199                           ;../../VLCBlib_PIC/mns.c: 834:         return 4;
 21200   008940  0E04               	movlw	4
 21201   008942  0012               	return	
 21202   008944                     l21044:
 21203                           
 21204                           ; BSR set to: 0
 21205                           ;../../VLCBlib_PIC/mns.c: 836:         return getParameterFlags();
 21206   008944  ECB9  F05B         	call	_getParameterFlags	;wreg free
 21207   008948  0012               	return	
 21208   00894A                     l21048:
 21209                           
 21210                           ; BSR set to: 0
 21211                           ;../../VLCBlib_PIC/mns.c: 838:         return P18F26K80;
 21212   00894A  0E0F               	movlw	15
 21213   00894C  0012               	return	
 21214   00894E                     l21052:
 21215                           
 21216                           ; BSR set to: 0
 21217                           ;../../VLCBlib_PIC/mns.c: 840:         if (have(SERVICE_ID_CAN)) {
 21218   00894E  0E03               	movlw	3
 21219   008950  ECF7  F057         	call	_have
 21220   008954  0900               	iorlw	0
 21221   008956  B4D8               	btfsc	status,2,c
 21222   008958  D002               	goto	l21058
 21223   00895A                     u21850:
 21224                           
 21225                           ;../../VLCBlib_PIC/mns.c: 841:             return PB_CAN;
 21226   00895A  0E01               	movlw	1
 21227   00895C  0012               	return	
 21228   00895E                     l21058:
 21229                           
 21230                           ;../../VLCBlib_PIC/mns.c: 843:         return 0;
 21231   00895E  0E00               	movlw	0
 21232   008960  0012               	return	
 21233   008962                     l21066:
 21234                           
 21235                           ; BSR set to: 0
 21236                           ;../../VLCBlib_PIC/mns.c: 847:         return 0x08;
 21237   008962  0E08               	movlw	8
 21238   008964  0012               	return	
 21239   008966                     l21078:
 21240                           
 21241                           ; BSR set to: 0
 21242                           ;../../VLCBlib_PIC/mns.c: 859:         return *(const uint8_t*)0x3FFFFE;
 21243   008966  0EFE               	movlw	254
 21244   008968  6EF6               	movwf	tblptrl,c
 21245   00896A                     	if	1	;There is more than 1 active tblptr byte
 21246   00896A  0EFF               	movlw	255
 21247   00896C  6EF7               	movwf	tblptrh,c
 21248   00896E                     	endif
 21249   00896E                     	if	1	;There are 3 active tblptr bytes
 21250   00896E  0E3F               	movlw	63
 21251   008970  6EF8               	movwf	tblptru,c
 21252   008972                     	endif
 21253   008972  0008               	tblrd		*
 21254   008974  50F5               	movf	tablat,w,c
 21255   008976  0012               	return	
 21256   008978                     l21082:
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;../../VLCBlib_PIC/mns.c: 861:         return *(const uint8_t*)0x3FFFFF;
 21260   008978  0EFF               	movlw	255
 21261   00897A  6EF6               	movwf	tblptrl,c
 21262   00897C                     	if	1	;There is more than 1 active tblptr byte
 21263   00897C  0EFF               	movlw	255
 21264   00897E  6EF7               	movwf	tblptrh,c
 21265   008980                     	endif
 21266   008980                     	if	1	;There are 3 active tblptr bytes
 21267   008980  0E3F               	movlw	63
 21268   008982  6EF8               	movwf	tblptru,c
 21269   008984                     	endif
 21270   008984  0008               	tblrd		*
 21271   008986  50F5               	movf	tablat,w,c
 21272   008988  0012               	return	
 21273   00898A                     l21100:
 21274   00898A  0100               	movlb	0	; () banked
 21275   00898C  5192               	movf	getParameter@idx& (0+255),w,b
 21276                           
 21277                           ; Switch size 1, requested type "simple"
 21278                           ; Number of cases is 19, Range of values is 0 to 20
 21279                           ; switch strategies available:
 21280                           ; Name         Instructions Cycles
 21281                           ; simple_byte           58    30 (average)
 21282                           ;	Chosen strategy is simple_byte
 21283   00898E  0A00               	xorlw	0	; case 0
 21284   008990  B4D8               	btfsc	status,2,c
 21285   008992  D7CA               	goto	l21012
 21286   008994  0A01               	xorlw	1	; case 1
 21287   008996  B4D8               	btfsc	status,2,c
 21288   008998  D7C9               	goto	l21016
 21289   00899A  0A03               	xorlw	3	; case 2
 21290   00899C  B4D8               	btfsc	status,2,c
 21291   00899E  D7C8               	goto	l21020
 21292   0089A0  0A01               	xorlw	1	; case 3
 21293   0089A2  B4D8               	btfsc	status,2,c
 21294   0089A4  D7C7               	goto	l21024
 21295   0089A6  0A07               	xorlw	7	; case 4
 21296   0089A8  B4D8               	btfsc	status,2,c
 21297   0089AA  D7C6               	goto	l21028
 21298   0089AC  0A01               	xorlw	1	; case 5
 21299   0089AE  B4D8               	btfsc	status,2,c
 21300   0089B0  D7BB               	goto	l21012
 21301   0089B2  0A03               	xorlw	3	; case 6
 21302   0089B4  B4D8               	btfsc	status,2,c
 21303   0089B6  D7C2               	goto	l21036
 21304   0089B8  0A01               	xorlw	1	; case 7
 21305   0089BA  B4D8               	btfsc	status,2,c
 21306   0089BC  D7C1               	goto	l21040
 21307   0089BE  0A0F               	xorlw	15	; case 8
 21308   0089C0  B4D8               	btfsc	status,2,c
 21309   0089C2  D7C0               	goto	l21044
 21310   0089C4  0A01               	xorlw	1	; case 9
 21311   0089C6  B4D8               	btfsc	status,2,c
 21312   0089C8  D7C0               	goto	l21048
 21313   0089CA  0A03               	xorlw	3	; case 10
 21314   0089CC  B4D8               	btfsc	status,2,c
 21315   0089CE  D7BF               	goto	l21052
 21316   0089D0  0A01               	xorlw	1	; case 11
 21317   0089D2  B4D8               	btfsc	status,2,c
 21318   0089D4  D7C4               	goto	l21058
 21319   0089D6  0A07               	xorlw	7	; case 12
 21320   0089D8  B4D8               	btfsc	status,2,c
 21321   0089DA  D7C3               	goto	l21066
 21322   0089DC  0A01               	xorlw	1	; case 13
 21323   0089DE  B4D8               	btfsc	status,2,c
 21324   0089E0  D7BE               	goto	l21058
 21325   0089E2  0A03               	xorlw	3	; case 14
 21326   0089E4  B4D8               	btfsc	status,2,c
 21327   0089E6  D7BB               	goto	l21058
 21328   0089E8  0A1F               	xorlw	31	; case 17
 21329   0089EA  B4D8               	btfsc	status,2,c
 21330   0089EC  D7BC               	goto	l21078
 21331   0089EE  0A03               	xorlw	3	; case 18
 21332   0089F0  B4D8               	btfsc	status,2,c
 21333   0089F2  D7C2               	goto	l21082
 21334   0089F4  0A01               	xorlw	1	; case 19
 21335   0089F6  B4D8               	btfsc	status,2,c
 21336   0089F8  D7B0               	goto	u21850
 21337   0089FA  0A07               	xorlw	7	; case 20
 21338   0089FC  B4D8               	btfsc	status,2,c
 21339   0089FE  D7B1               	goto	l21066
 21340   008A00  D7AE               	goto	l21058
 21341   008A02                     __end_of_getParameter:
 21342                           	callstack 0
 21343                           
 21344 ;; *************** function _getParameterFlags *****************
 21345 ;; Defined at:
 21346 ;;		line 587 in file "../../VLCBlib_PIC/mns.c"
 21347 ;; Parameters:    Size  Location     Type
 21348 ;;		None
 21349 ;; Auto vars:     Size  Location     Type
 21350 ;;  flags           1   49[BANK0 ] unsigned char 
 21351 ;; Return value:  Size  Location     Type
 21352 ;;                  1    wreg      unsigned char 
 21353 ;; Registers used:
 21354 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21355 ;; Tracked objects:
 21356 ;;		On entry : 0/0
 21357 ;;		On exit  : 0/0
 21358 ;;		Unchanged: 0/0
 21359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21363 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21364 ;;Total ram usage:        1 bytes
 21365 ;; Hardware stack levels used: 1
 21366 ;; Hardware stack levels required when called: 13
 21367 ;; This function calls:
 21368 ;;		_have
 21369 ;; This function is called by:
 21370 ;;		_mnsProcessMessage
 21371 ;;		_getParameter
 21372 ;; This function uses a non-reentrant model
 21373 ;;
 21374                           
 21375                           	psect	text73
 21376   00B772                     __ptext73:
 21377                           	callstack 0
 21378   00B772                     _getParameterFlags:
 21379                           	callstack 13
 21380                           
 21381                           ;../../VLCBlib_PIC/mns.c: 588:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 589:     flag
      +                          s = 0;
 21382                           
 21383                           ;incstack = 0
 21384   00B772  0E00               	movlw	0
 21385   00B774  0100               	movlb	0	; () banked
 21386   00B776  6F91               	movwf	getParameterFlags@flags& (0+255),b
 21387                           
 21388                           ; BSR set to: 0
 21389                           ;../../VLCBlib_PIC/mns.c: 590:     if (have(SERVICE_ID_CONSUMER)) {
 21390   00B778  0E06               	movlw	6
 21391   00B77A  ECF7  F057         	call	_have
 21392   00B77E  0900               	iorlw	0
 21393   00B780  B4D8               	btfsc	status,2,c
 21394   00B782  D002               	goto	l20276
 21395                           
 21396                           ;../../VLCBlib_PIC/mns.c: 591:         flags |= 1;
 21397   00B784  0100               	movlb	0	; () banked
 21398   00B786  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 21399   00B788                     l20276:
 21400                           
 21401                           ;../../VLCBlib_PIC/mns.c: 593:     if (have(SERVICE_ID_PRODUCER)) {
 21402   00B788  0E05               	movlw	5
 21403   00B78A  ECF7  F057         	call	_have
 21404   00B78E  0900               	iorlw	0
 21405   00B790  B4D8               	btfsc	status,2,c
 21406   00B792  D002               	goto	l20280
 21407                           
 21408                           ;../../VLCBlib_PIC/mns.c: 594:         flags |= 2;
 21409   00B794  0100               	movlb	0	; () banked
 21410   00B796  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 21411   00B798                     l20280:
 21412                           
 21413                           ;../../VLCBlib_PIC/mns.c: 596:     if (flags == (2 | 1)) flags |= 16;
 21414   00B798  0E03               	movlw	3
 21415   00B79A  0100               	movlb	0	; () banked
 21416   00B79C  1991               	xorwf	getParameterFlags@flags& (0+255),w,b
 21417   00B79E  B4D8               	btfsc	status,2,c
 21418                           
 21419                           ; BSR set to: 0
 21420   00B7A0  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;../../VLCBlib_PIC/mns.c: 597:     if (have(SERVICE_ID_BOOT)) {
 21424   00B7A2  0E0A               	movlw	10
 21425   00B7A4  ECF7  F057         	call	_have
 21426   00B7A8  0900               	iorlw	0
 21427   00B7AA  B4D8               	btfsc	status,2,c
 21428   00B7AC  D002               	goto	l20288
 21429                           
 21430                           ;../../VLCBlib_PIC/mns.c: 598:         flags |= 8;
 21431   00B7AE  0100               	movlb	0	; () banked
 21432   00B7B0  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 21433   00B7B2                     l20288:
 21434                           
 21435                           ;../../VLCBlib_PIC/mns.c: 600:     if (mode_flags & 1) {
 21436   00B7B2  0101               	movlb	1	; () banked
 21437   00B7B4  A169               	btfss	_mode_flags& (0+255),0,b
 21438   00B7B6  D002               	goto	l20292
 21439                           
 21440                           ; BSR set to: 1
 21441                           ;../../VLCBlib_PIC/mns.c: 601:         flags |= 32;
 21442   00B7B8  0100               	movlb	0	; () banked
 21443   00B7BA  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 21444   00B7BC                     l20292:
 21445                           
 21446                           ;../../VLCBlib_PIC/mns.c: 603:     if (mode_state == MODE_NORMAL) {
 21447   00B7BC  0100               	movlb	0	; () banked
 21448   00B7BE  05C4               	decf	_mode_state& (0+255),w,b
 21449   00B7C0  B4D8               	btfsc	status,2,c
 21450                           
 21451                           ; BSR set to: 0
 21452                           ;../../VLCBlib_PIC/mns.c: 604:         flags |= 4;
 21453   00B7C2  8591               	bsf	getParameterFlags@flags& (0+255),2,b
 21454                           
 21455                           ; BSR set to: 0
 21456                           ;../../VLCBlib_PIC/mns.c: 607:     flags |= 64;
 21457                           
 21458                           ;../../VLCBlib_PIC/mns.c: 605:     }
 21459   00B7C4  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;../../VLCBlib_PIC/mns.c: 609:     return flags;
 21463   00B7C6  5191               	movf	getParameterFlags@flags& (0+255),w,b
 21464                           
 21465                           ; BSR set to: 0
 21466   00B7C8  0012               	return		;funcret
 21467   00B7CA                     __end_of_getParameterFlags:
 21468                           	callstack 0
 21469                           
 21470 ;; *************** function _mnsPoll *****************
 21471 ;; Defined at:
 21472 ;;		line 628 in file "../../VLCBlib_PIC/mns.c"
 21473 ;; Parameters:    Size  Location     Type
 21474 ;;		None
 21475 ;; Auto vars:     Size  Location     Type
 21476 ;;		None
 21477 ;; Return value:  Size  Location     Type
 21478 ;;                  1    wreg      void 
 21479 ;; Registers used:
 21480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21481 ;; Tracked objects:
 21482 ;;		On entry : 0/0
 21483 ;;		On exit  : 0/0
 21484 ;;		Unchanged: 0/0
 21485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21488 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21489 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21490 ;;Total ram usage:        4 bytes
 21491 ;; Hardware stack levels used: 1
 21492 ;; Hardware stack levels required when called: 18
 21493 ;; This function calls:
 21494 ;;		_sendMessage2
 21495 ;;		_sendMessage5
 21496 ;;		_setLEDsByMode
 21497 ;;		_tickGet
 21498 ;;		_writeNVM
 21499 ;; This function is called by:
 21500 ;;		_poll
 21501 ;; This function uses a non-reentrant model
 21502 ;;
 21503                           
 21504                           	psect	text74
 21505   003296                     __ptext74:
 21506                           	callstack 0
 21507   003296                     _mnsPoll:
 21508                           	callstack 11
 21509                           
 21510                           ;../../VLCBlib_PIC/mns.c: 631:     if (mode_state == MODE_NORMAL) {
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;incstack = 0
 21514   003296  0100               	movlb	0	; () banked
 21515   003298  05C4               	decf	_mode_state& (0+255),w,b
 21516   00329A  A4D8               	btfss	status,2,c
 21517   00329C  D040               	goto	l23886
 21518                           
 21519                           ; BSR set to: 0
 21520                           ;../../VLCBlib_PIC/mns.c: 632:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 21521   00329E  ECE5  F05B         	call	_tickGet	;wreg free
 21522   0032A2  0101               	movlb	1	; () banked
 21523   0032A4  5150               	movf	_heartbeatTimer& (0+255),w,b
 21524   0032A6  0100               	movlb	0	; () banked
 21525   0032A8  5D8D               	subwf	?_tickGet& (0+255),w,b
 21526   0032AA  0101               	movlb	1	; () banked
 21527   0032AC  6FCA               	movwf	??_mnsPoll& (0+255),b
 21528   0032AE  5151               	movf	(_heartbeatTimer+1)& (0+255),w,b
 21529   0032B0  0100               	movlb	0	; () banked
 21530   0032B2  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21531   0032B4  0101               	movlb	1	; () banked
 21532   0032B6  6FCB               	movwf	(??_mnsPoll+1)& (0+255),b
 21533   0032B8  5152               	movf	(_heartbeatTimer+2)& (0+255),w,b
 21534   0032BA  0100               	movlb	0	; () banked
 21535   0032BC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21536   0032BE  0101               	movlb	1	; () banked
 21537   0032C0  6FCC               	movwf	(??_mnsPoll+2)& (0+255),b
 21538   0032C2  5153               	movf	(_heartbeatTimer+3)& (0+255),w,b
 21539   0032C4  0100               	movlb	0	; () banked
 21540   0032C6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21541   0032C8  0101               	movlb	1	; () banked
 21542   0032CA  6FCD               	movwf	(??_mnsPoll+3)& (0+255),b
 21543   0032CC  51CD               	movf	(??_mnsPoll+3)& (0+255),w,b
 21544   0032CE  E108               	bnz	u25630
 21545   0032D0  0EB5               	movlw	181
 21546   0032D2  5DCA               	subwf	??_mnsPoll& (0+255),w,b
 21547   0032D4  0EC4               	movlw	196
 21548   0032D6  59CB               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21549   0032D8  0E04               	movlw	4
 21550   0032DA  59CC               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21551   0032DC  A0D8               	btfss	status,0,c
 21552   0032DE  D01F               	goto	l23886
 21553   0032E0                     u25630:
 21554                           
 21555                           ; BSR set to: 1
 21556                           ;../../VLCBlib_PIC/mns.c: 633:             if (mode_flags & 4) {
 21557   0032E0  A569               	btfss	_mode_flags& (0+255),2,b
 21558   0032E2  D00F               	goto	l23880
 21559                           
 21560                           ; BSR set to: 1
 21561                           ;../../VLCBlib_PIC/mns.c: 634:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 21562   0032E4  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 21563   0032E8  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 21564   0032EC  C0BF  F1C7         	movff	_heartbeatSequence,sendMessage5@data3
 21565   0032F0  C192  F1C8         	movff	_mnsDiagnostics+2,sendMessage5@data4
 21566   0032F4  0E00               	movlw	0
 21567   0032F6  6FC9               	movwf	sendMessage5@data5& (0+255),b
 21568   0032F8  0EAB               	movlw	171
 21569   0032FA  ECE2  F060         	call	_sendMessage5
 21570   0032FE  0100               	movlb	0	; () banked
 21571   003300  2BBF               	incf	_heartbeatSequence& (0+255),f,b
 21572   003302                     l23880:
 21573                           
 21574                           ;../../VLCBlib_PIC/mns.c: 636:             heartbeatTimer.val = tickGet();
 21575   003302  ECE5  F05B         	call	_tickGet	;wreg free
 21576   003306  C08D  F150         	movff	?_tickGet,_heartbeatTimer
 21577   00330A  C08E  F151         	movff	?_tickGet+1,_heartbeatTimer+1
 21578   00330E  C08F  F152         	movff	?_tickGet+2,_heartbeatTimer+2
 21579   003312  C090  F153         	movff	?_tickGet+3,_heartbeatTimer+3
 21580                           
 21581                           ;../../VLCBlib_PIC/mns.c: 637:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 21582   003316  0101               	movlb	1	; () banked
 21583   003318  5192               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 21584   00331A  A4D8               	btfss	status,2,c
 21585                           
 21586                           ; BSR set to: 1
 21587                           ;../../VLCBlib_PIC/mns.c: 638:                 mnsDiagnostics[0x01].asBytes.lo--;
 21588   00331C  0792               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 21589   00331E                     l23886:
 21590                           
 21591                           ;../../VLCBlib_PIC/mns.c: 645:     if (mode_flags != last_mode_flags) {
 21592   00331E  0100               	movlb	0	; () banked
 21593   003320  51C2               	movf	_last_mode_flags& (0+255),w,b
 21594   003322  0101               	movlb	1	; () banked
 21595   003324  1969               	xorwf	_mode_flags& (0+255),w,b
 21596   003326  B4D8               	btfsc	status,2,c
 21597   003328  D00E               	goto	l23892
 21598                           
 21599                           ; BSR set to: 1
 21600                           ;../../VLCBlib_PIC/mns.c: 646:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 21601   00332A  0EF9               	movlw	249
 21602   00332C  0100               	movlb	0	; () banked
 21603   00332E  6FA4               	movwf	writeNVM@index& (0+255),b
 21604   003330  0E03               	movlw	3
 21605   003332  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21606   003334  0E00               	movlw	0
 21607   003336  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21608   003338  C169  F0A7         	movff	_mode_flags,writeNVM@value
 21609   00333C  0E00               	movlw	0
 21610   00333E  EC61  F05D         	call	_writeNVM
 21611                           
 21612                           ;../../VLCBlib_PIC/mns.c: 647:         last_mode_flags = mode_flags;
 21613   003342  C169  F0C2         	movff	_mode_flags,_last_mode_flags
 21614   003346                     l23892:
 21615                           
 21616                           ;../../VLCBlib_PIC/mns.c: 649:     if (mode_state != last_mode_state) {
 21617   003346  0100               	movlb	0	; () banked
 21618   003348  51C3               	movf	_last_mode_state& (0+255),w,b
 21619   00334A  19C4               	xorwf	_mode_state& (0+255),w,b
 21620   00334C  B4D8               	btfsc	status,2,c
 21621   00334E  D013               	goto	l23902
 21622                           
 21623                           ; BSR set to: 0
 21624                           ;../../VLCBlib_PIC/mns.c: 651:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 21625   003350  29C4               	incf	_mode_state& (0+255),w,b
 21626   003352  B4D8               	btfsc	status,2,c
 21627   003354  D003               	goto	u25690
 21628                           
 21629                           ; BSR set to: 0
 21630   003356  05C4               	decf	_mode_state& (0+255),w,b
 21631   003358  A4D8               	btfss	status,2,c
 21632   00335A  D00B               	goto	l23900
 21633   00335C                     u25690:
 21634                           
 21635                           ; BSR set to: 0
 21636                           ;../../VLCBlib_PIC/mns.c: 652:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 21637   00335C  0EFB               	movlw	251
 21638   00335E  6FA4               	movwf	writeNVM@index& (0+255),b
 21639   003360  0E03               	movlw	3
 21640   003362  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21641   003364  0E00               	movlw	0
 21642   003366  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21643   003368  C0C4  F0A7         	movff	_mode_state,writeNVM@value
 21644   00336C  0E00               	movlw	0
 21645   00336E  EC61  F05D         	call	_writeNVM
 21646   003372                     l23900:
 21647                           
 21648                           ;../../VLCBlib_PIC/mns.c: 654:         last_mode_state = mode_state;
 21649   003372  C0C4  F0C3         	movff	_mode_state,_last_mode_state
 21650   003376                     l23902:
 21651                           
 21652                           ;../../VLCBlib_PIC/mns.c: 658:     if ((tickGet() - uptimeTimer.val) > 62500) {
 21653   003376  ECE5  F05B         	call	_tickGet	;wreg free
 21654   00337A  0101               	movlb	1	; () banked
 21655   00337C  514C               	movf	_uptimeTimer& (0+255),w,b
 21656   00337E  0100               	movlb	0	; () banked
 21657   003380  5D8D               	subwf	?_tickGet& (0+255),w,b
 21658   003382  0101               	movlb	1	; () banked
 21659   003384  6FCA               	movwf	??_mnsPoll& (0+255),b
 21660   003386  514D               	movf	(_uptimeTimer+1)& (0+255),w,b
 21661   003388  0100               	movlb	0	; () banked
 21662   00338A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21663   00338C  0101               	movlb	1	; () banked
 21664   00338E  6FCB               	movwf	(??_mnsPoll+1)& (0+255),b
 21665   003390  514E               	movf	(_uptimeTimer+2)& (0+255),w,b
 21666   003392  0100               	movlb	0	; () banked
 21667   003394  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21668   003396  0101               	movlb	1	; () banked
 21669   003398  6FCC               	movwf	(??_mnsPoll+2)& (0+255),b
 21670   00339A  514F               	movf	(_uptimeTimer+3)& (0+255),w,b
 21671   00339C  0100               	movlb	0	; () banked
 21672   00339E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21673   0033A0  0101               	movlb	1	; () banked
 21674   0033A2  6FCD               	movwf	(??_mnsPoll+3)& (0+255),b
 21675   0033A4  51CD               	movf	(??_mnsPoll+3)& (0+255),w,b
 21676   0033A6  11CC               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21677   0033A8  E106               	bnz	u25700
 21678   0033AA  0E25               	movlw	37
 21679   0033AC  5DCA               	subwf	??_mnsPoll& (0+255),w,b
 21680   0033AE  0EF4               	movlw	244
 21681   0033B0  59CB               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21682   0033B2  A0D8               	btfss	status,0,c
 21683   0033B4  D17F               	goto	l23994
 21684   0033B6                     u25700:
 21685                           
 21686                           ; BSR set to: 1
 21687                           ;../../VLCBlib_PIC/mns.c: 659:         uptimeTimer.val = tickGet();
 21688   0033B6  ECE5  F05B         	call	_tickGet	;wreg free
 21689   0033BA  C08D  F14C         	movff	?_tickGet,_uptimeTimer
 21690   0033BE  C08E  F14D         	movff	?_tickGet+1,_uptimeTimer+1
 21691   0033C2  C08F  F14E         	movff	?_tickGet+2,_uptimeTimer+2
 21692   0033C6  C090  F14F         	movff	?_tickGet+3,_uptimeTimer+3
 21693                           
 21694                           ;../../VLCBlib_PIC/mns.c: 660:         mnsDiagnostics[0x03].asUint++;
 21695   0033CA  0101               	movlb	1	; () banked
 21696   0033CC  4B96               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 21697   0033CE  2B97               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 21698                           
 21699                           ; BSR set to: 1
 21700                           ;../../VLCBlib_PIC/mns.c: 661:         if (mnsDiagnostics[0x03].asUint == 0) {
 21701   0033D0  5196               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 21702   0033D2  1197               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 21703   0033D4  A4D8               	btfss	status,2,c
 21704   0033D6  D16E               	goto	l23994
 21705                           
 21706                           ; BSR set to: 1
 21707                           ;../../VLCBlib_PIC/mns.c: 662:             mnsDiagnostics[0x02].asUint++;
 21708   0033D8  4B94               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 21709   0033DA  2B95               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 21710   0033DC  D16B               	goto	l23994
 21711   0033DE                     l1554:
 21712                           
 21713                           ; BSR set to: 0
 21714                           ;../../VLCBlib_PIC/mns.c: 671:             if ((!(PORTAbits.RA2)) == 0) {
 21715   0033DE  A480               	btfss	128,2,c	;volatile
 21716   0033E0  D00B               	goto	l23914
 21717   0033E2                     u25720:
 21718                           
 21719                           ;../../VLCBlib_PIC/mns.c: 673:                 pbTimer.val = tickGet();
 21720   0033E2  ECE5  F05B         	call	_tickGet	;wreg free
 21721   0033E6  C08D  F0A9         	movff	?_tickGet,_pbTimer
 21722   0033EA  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 21723   0033EE  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 21724   0033F2  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 21725                           
 21726                           ;../../VLCBlib_PIC/mns.c: 674:             } else {
 21727   0033F6  0012               	return	
 21728   0033F8                     l23914:
 21729                           
 21730                           ; BSR set to: 0
 21731                           ;../../VLCBlib_PIC/mns.c: 676:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21732   0033F8  ECE5  F05B         	call	_tickGet	;wreg free
 21733   0033FC  0100               	movlb	0	; () banked
 21734   0033FE  51A9               	movf	_pbTimer& (0+255),w,b
 21735   003400  5D8D               	subwf	?_tickGet& (0+255),w,b
 21736   003402  0101               	movlb	1	; () banked
 21737   003404  6FCA               	movwf	??_mnsPoll& (0+255),b
 21738   003406  0100               	movlb	0	; () banked
 21739   003408  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 21740   00340A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21741   00340C  0101               	movlb	1	; () banked
 21742   00340E  6FCB               	movwf	(??_mnsPoll+1)& (0+255),b
 21743   003410  0100               	movlb	0	; () banked
 21744   003412  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 21745   003414  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21746   003416  0101               	movlb	1	; () banked
 21747   003418  6FCC               	movwf	(??_mnsPoll+2)& (0+255),b
 21748   00341A  0100               	movlb	0	; () banked
 21749   00341C  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 21750   00341E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21751   003420  0101               	movlb	1	; () banked
 21752   003422  6FCD               	movwf	(??_mnsPoll+3)& (0+255),b
 21753   003424  51CD               	movf	(??_mnsPoll+3)& (0+255),w,b
 21754   003426  E108               	bnz	u25730
 21755   003428  0E91               	movlw	145
 21756   00342A  5DCA               	subwf	??_mnsPoll& (0+255),w,b
 21757   00342C  0ED0               	movlw	208
 21758   00342E  59CB               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21759   003430  0E03               	movlw	3
 21760   003432  59CC               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21761   003434  A0D8               	btfss	status,0,c
 21762   003436  0012               	return	
 21763   003438                     u25730:
 21764                           
 21765                           ; BSR set to: 1
 21766                           ;../../VLCBlib_PIC/mns.c: 678:                     mode_state = 0xFD;
 21767   003438  0EFD               	movlw	253
 21768   00343A  0100               	movlb	0	; () banked
 21769   00343C  6FC4               	movwf	_mode_state& (0+255),b
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;../../VLCBlib_PIC/mns.c: 679:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 21773   00343E  69C1               	setf	_setupModePreviousMode& (0+255),b
 21774                           
 21775                           ; BSR set to: 0
 21776                           ;../../VLCBlib_PIC/mns.c: 680:                     setLEDsByMode();
 21777   003440  EC51  F060         	call	_setLEDsByMode	;wreg free
 21778   003444  0012               	return	
 21779   003446                     l1559:
 21780                           
 21781                           ; BSR set to: 0
 21782                           ;../../VLCBlib_PIC/mns.c: 685:             if ((!(PORTAbits.RA2)) == 0) {
 21783   003446  A480               	btfss	128,2,c	;volatile
 21784   003448  D7CC               	goto	u25720
 21785                           
 21786                           ; BSR set to: 0
 21787                           ;../../VLCBlib_PIC/mns.c: 689:                 mode_state = MODE_SETUP;
 21788   00344A  0E00               	movlw	0
 21789   00344C  6FC4               	movwf	_mode_state& (0+255),b
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;../../VLCBlib_PIC/mns.c: 690:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 21793   00344E  69C1               	setf	_setupModePreviousMode& (0+255),b
 21794                           
 21795                           ; BSR set to: 0
 21796                           ;../../VLCBlib_PIC/mns.c: 691:                 pbTimer.val = tickGet();
 21797   003450  ECE5  F05B         	call	_tickGet	;wreg free
 21798   003454  C08D  F0A9         	movff	?_tickGet,_pbTimer
 21799   003458  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 21800   00345C  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 21801   003460  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 21802                           
 21803                           ;../../VLCBlib_PIC/mns.c: 693:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 21804   003464  C0B6  F0A6         	movff	_nn+1,sendMessage2@data1
 21805   003468  C0B5  F0A7         	movff	_nn,sendMessage2@data2
 21806   00346C  0E50               	movlw	80
 21807   00346E  ECB2  F060         	call	_sendMessage2
 21808                           
 21809                           ;../../VLCBlib_PIC/mns.c: 694:                 setLEDsByMode();
 21810   003472  EC51  F060         	call	_setLEDsByMode	;wreg free
 21811   003476  D7B5               	goto	u25720
 21812   003478                     l1561:
 21813                           
 21814                           ; BSR set to: 0
 21815                           ;../../VLCBlib_PIC/mns.c: 699:             if ((!(PORTAbits.RA2)) == 0) {
 21816   003478  A480               	btfss	128,2,c	;volatile
 21817   00347A  D087               	goto	l23958
 21818                           
 21819                           ; BSR set to: 0
 21820                           ;../../VLCBlib_PIC/mns.c: 702:                 if (((tickGet() - pbTimer.val) > 62500) &
      +                          & ((tickGet() - pbTimer.val) < 2*62500)) {
 21821   00347C  ECE5  F05B         	call	_tickGet	;wreg free
 21822   003480  0100               	movlb	0	; () banked
 21823   003482  51A9               	movf	_pbTimer& (0+255),w,b
 21824   003484  5D8D               	subwf	?_tickGet& (0+255),w,b
 21825   003486  0101               	movlb	1	; () banked
 21826   003488  6FCA               	movwf	??_mnsPoll& (0+255),b
 21827   00348A  0100               	movlb	0	; () banked
 21828   00348C  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 21829   00348E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21830   003490  0101               	movlb	1	; () banked
 21831   003492  6FCB               	movwf	(??_mnsPoll+1)& (0+255),b
 21832   003494  0100               	movlb	0	; () banked
 21833   003496  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 21834   003498  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21835   00349A  0101               	movlb	1	; () banked
 21836   00349C  6FCC               	movwf	(??_mnsPoll+2)& (0+255),b
 21837   00349E  0100               	movlb	0	; () banked
 21838   0034A0  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 21839   0034A2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21840   0034A4  0101               	movlb	1	; () banked
 21841   0034A6  6FCD               	movwf	(??_mnsPoll+3)& (0+255),b
 21842   0034A8  51CD               	movf	(??_mnsPoll+3)& (0+255),w,b
 21843   0034AA  11CC               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21844   0034AC  E106               	bnz	u25760
 21845   0034AE  0E25               	movlw	37
 21846   0034B0  5DCA               	subwf	??_mnsPoll& (0+255),w,b
 21847   0034B2  0EF4               	movlw	244
 21848   0034B4  59CB               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21849   0034B6  A0D8               	btfss	status,0,c
 21850   0034B8  D036               	goto	l23950
 21851   0034BA                     u25760:
 21852                           
 21853                           ; BSR set to: 1
 21854   0034BA  ECE5  F05B         	call	_tickGet	;wreg free
 21855   0034BE  0100               	movlb	0	; () banked
 21856   0034C0  51A9               	movf	_pbTimer& (0+255),w,b
 21857   0034C2  5D8D               	subwf	?_tickGet& (0+255),w,b
 21858   0034C4  0101               	movlb	1	; () banked
 21859   0034C6  6FCA               	movwf	??_mnsPoll& (0+255),b
 21860   0034C8  0100               	movlb	0	; () banked
 21861   0034CA  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 21862   0034CC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21863   0034CE  0101               	movlb	1	; () banked
 21864   0034D0  6FCB               	movwf	(??_mnsPoll+1)& (0+255),b
 21865   0034D2  0100               	movlb	0	; () banked
 21866   0034D4  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 21867   0034D6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21868   0034D8  0101               	movlb	1	; () banked
 21869   0034DA  6FCC               	movwf	(??_mnsPoll+2)& (0+255),b
 21870   0034DC  0100               	movlb	0	; () banked
 21871   0034DE  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 21872   0034E0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21873   0034E2  0101               	movlb	1	; () banked
 21874   0034E4  6FCD               	movwf	(??_mnsPoll+3)& (0+255),b
 21875   0034E6  51CD               	movf	(??_mnsPoll+3)& (0+255),w,b
 21876   0034E8  E11E               	bnz	l23950
 21877   0034EA  0E48               	movlw	72
 21878   0034EC  5DCA               	subwf	??_mnsPoll& (0+255),w,b
 21879   0034EE  0EE8               	movlw	232
 21880   0034F0  59CB               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21881   0034F2  0E01               	movlw	1
 21882   0034F4  59CC               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21883   0034F6  B0D8               	btfsc	status,0,c
 21884   0034F8  D016               	goto	l23950
 21885                           
 21886                           ; BSR set to: 1
 21887                           ;../../VLCBlib_PIC/mns.c: 704:                     mode_state = setupModePreviousMode;
 21888   0034FA  C0C1  F0C4         	movff	_setupModePreviousMode,_mode_state
 21889                           
 21890                           ; BSR set to: 1
 21891                           ;../../VLCBlib_PIC/mns.c: 705:                     if (mode_state == MODE_NORMAL) {
 21892   0034FE  0100               	movlb	0	; () banked
 21893   003500  05C4               	decf	_mode_state& (0+255),w,b
 21894   003502  A4D8               	btfss	status,2,c
 21895   003504  D00E               	goto	l23948
 21896                           
 21897                           ; BSR set to: 0
 21898                           ;../../VLCBlib_PIC/mns.c: 707:                         nn.word = previousNN.word;
 21899   003506  C164  F0B5         	movff	_previousNN,_nn
 21900   00350A  C165  F0B6         	movff	_previousNN+1,_nn+1
 21901                           
 21902                           ; BSR set to: 0
 21903                           ;../../VLCBlib_PIC/mns.c: 708:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 21904   00350E  C0B6  F0A6         	movff	_nn+1,sendMessage2@data1
 21905   003512  C0B5  F0A7         	movff	_nn,sendMessage2@data2
 21906   003516  0E52               	movlw	82
 21907   003518  ECB2  F060         	call	_sendMessage2
 21908                           
 21909                           ;../../VLCBlib_PIC/mns.c: 710:                         mnsDiagnostics[0x05].asUint++;
 21910   00351C  0101               	movlb	1	; () banked
 21911   00351E  4B9A               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 21912   003520  2B9B               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 21913   003522                     l23948:
 21914                           
 21915                           ;../../VLCBlib_PIC/mns.c: 713:                     setLEDsByMode();
 21916   003522  EC51  F060         	call	_setLEDsByMode	;wreg free
 21917   003526                     l23950:
 21918                           
 21919                           ;../../VLCBlib_PIC/mns.c: 715:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21920   003526  ECE5  F05B         	call	_tickGet	;wreg free
 21921   00352A  0100               	movlb	0	; () banked
 21922   00352C  51A9               	movf	_pbTimer& (0+255),w,b
 21923   00352E  5D8D               	subwf	?_tickGet& (0+255),w,b
 21924   003530  0101               	movlb	1	; () banked
 21925   003532  6FCA               	movwf	??_mnsPoll& (0+255),b
 21926   003534  0100               	movlb	0	; () banked
 21927   003536  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 21928   003538  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21929   00353A  0101               	movlb	1	; () banked
 21930   00353C  6FCB               	movwf	(??_mnsPoll+1)& (0+255),b
 21931   00353E  0100               	movlb	0	; () banked
 21932   003540  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 21933   003542  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21934   003544  0101               	movlb	1	; () banked
 21935   003546  6FCC               	movwf	(??_mnsPoll+2)& (0+255),b
 21936   003548  0100               	movlb	0	; () banked
 21937   00354A  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 21938   00354C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21939   00354E  0101               	movlb	1	; () banked
 21940   003550  6FCD               	movwf	(??_mnsPoll+3)& (0+255),b
 21941   003552  51CD               	movf	(??_mnsPoll+3)& (0+255),w,b
 21942   003554  E108               	bnz	u25790
 21943   003556  0E91               	movlw	145
 21944   003558  5DCA               	subwf	??_mnsPoll& (0+255),w,b
 21945   00355A  0ED0               	movlw	208
 21946   00355C  59CB               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21947   00355E  0E03               	movlw	3
 21948   003560  59CC               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21949   003562  A0D8               	btfss	status,0,c
 21950   003564  D004               	goto	l1565
 21951   003566                     u25790:
 21952                           
 21953                           ; BSR set to: 1
 21954                           ;../../VLCBlib_PIC/mns.c: 716:                     mode_state = MODE_UNINITIALISED;
 21955   003566  0100               	movlb	0	; () banked
 21956   003568  69C4               	setf	_mode_state& (0+255),b
 21957   00356A                     l23954:
 21958                           
 21959                           ;../../VLCBlib_PIC/mns.c: 717:                     setLEDsByMode();
 21960   00356A  EC51  F060         	call	_setLEDsByMode	;wreg free
 21961   00356E                     l1565:
 21962                           
 21963                           ;../../VLCBlib_PIC/mns.c: 719:                 pbTimer.val = tickGet();
 21964   00356E  ECE5  F05B         	call	_tickGet	;wreg free
 21965   003572  C08D  F0A9         	movff	?_tickGet,_pbTimer
 21966   003576  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 21967   00357A  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 21968   00357E  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 21969                           
 21970                           ;../../VLCBlib_PIC/mns.c: 720:                 pbWasPushed = FALSE;
 21971   003582  0E00               	movlw	0
 21972   003584  0100               	movlb	0	; () banked
 21973   003586  6FC0               	movwf	_pbWasPushed& (0+255),b
 21974                           
 21975                           ;../../VLCBlib_PIC/mns.c: 721:             } else {
 21976   003588  0012               	return	
 21977   00358A                     l23958:
 21978                           
 21979                           ; BSR set to: 0
 21980                           ;../../VLCBlib_PIC/mns.c: 722:                 pbWasPushed = TRUE;
 21981   00358A  0E01               	movlw	1
 21982   00358C  6FC0               	movwf	_pbWasPushed& (0+255),b
 21983   00358E  0012               	return	
 21984   003590                     l1567:
 21985                           
 21986                           ; BSR set to: 0
 21987                           ;../../VLCBlib_PIC/mns.c: 727:             if ((!(PORTAbits.RA2)) == 0) {
 21988   003590  A480               	btfss	128,2,c	;volatile
 21989   003592  D7FB               	goto	l23958
 21990                           
 21991                           ; BSR set to: 0
 21992                           ;../../VLCBlib_PIC/mns.c: 729:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > 1*62500) && ((tickGet() - pbTimer.val) < 2*62500)) {
 21993   003594  51C0               	movf	_pbWasPushed& (0+255),w,b
 21994   003596  B4D8               	btfsc	status,2,c
 21995   003598  D055               	goto	l23974
 21996                           
 21997                           ; BSR set to: 0
 21998   00359A  ECE5  F05B         	call	_tickGet	;wreg free
 21999   00359E  0100               	movlb	0	; () banked
 22000   0035A0  51A9               	movf	_pbTimer& (0+255),w,b
 22001   0035A2  5D8D               	subwf	?_tickGet& (0+255),w,b
 22002   0035A4  0101               	movlb	1	; () banked
 22003   0035A6  6FCA               	movwf	??_mnsPoll& (0+255),b
 22004   0035A8  0100               	movlb	0	; () banked
 22005   0035AA  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 22006   0035AC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22007   0035AE  0101               	movlb	1	; () banked
 22008   0035B0  6FCB               	movwf	(??_mnsPoll+1)& (0+255),b
 22009   0035B2  0100               	movlb	0	; () banked
 22010   0035B4  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 22011   0035B6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22012   0035B8  0101               	movlb	1	; () banked
 22013   0035BA  6FCC               	movwf	(??_mnsPoll+2)& (0+255),b
 22014   0035BC  0100               	movlb	0	; () banked
 22015   0035BE  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 22016   0035C0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22017   0035C2  0101               	movlb	1	; () banked
 22018   0035C4  6FCD               	movwf	(??_mnsPoll+3)& (0+255),b
 22019   0035C6  51CD               	movf	(??_mnsPoll+3)& (0+255),w,b
 22020   0035C8  11CC               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 22021   0035CA  E106               	bnz	u25820
 22022   0035CC  0E25               	movlw	37
 22023   0035CE  5DCA               	subwf	??_mnsPoll& (0+255),w,b
 22024   0035D0  0EF4               	movlw	244
 22025   0035D2  59CB               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22026   0035D4  A0D8               	btfss	status,0,c
 22027   0035D6  D036               	goto	l23974
 22028   0035D8                     u25820:
 22029                           
 22030                           ; BSR set to: 1
 22031   0035D8  ECE5  F05B         	call	_tickGet	;wreg free
 22032   0035DC  0100               	movlb	0	; () banked
 22033   0035DE  51A9               	movf	_pbTimer& (0+255),w,b
 22034   0035E0  5D8D               	subwf	?_tickGet& (0+255),w,b
 22035   0035E2  0101               	movlb	1	; () banked
 22036   0035E4  6FCA               	movwf	??_mnsPoll& (0+255),b
 22037   0035E6  0100               	movlb	0	; () banked
 22038   0035E8  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 22039   0035EA  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22040   0035EC  0101               	movlb	1	; () banked
 22041   0035EE  6FCB               	movwf	(??_mnsPoll+1)& (0+255),b
 22042   0035F0  0100               	movlb	0	; () banked
 22043   0035F2  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 22044   0035F4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22045   0035F6  0101               	movlb	1	; () banked
 22046   0035F8  6FCC               	movwf	(??_mnsPoll+2)& (0+255),b
 22047   0035FA  0100               	movlb	0	; () banked
 22048   0035FC  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 22049   0035FE  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22050   003600  0101               	movlb	1	; () banked
 22051   003602  6FCD               	movwf	(??_mnsPoll+3)& (0+255),b
 22052   003604  51CD               	movf	(??_mnsPoll+3)& (0+255),w,b
 22053   003606  E11E               	bnz	l23974
 22054   003608  0E48               	movlw	72
 22055   00360A  5DCA               	subwf	??_mnsPoll& (0+255),w,b
 22056   00360C  0EE8               	movlw	232
 22057   00360E  59CB               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22058   003610  0E01               	movlw	1
 22059   003612  59CC               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 22060   003614  B0D8               	btfsc	status,0,c
 22061   003616  D016               	goto	l23974
 22062                           
 22063                           ; BSR set to: 1
 22064                           ;../../VLCBlib_PIC/mns.c: 731:                     previousNN.word = nn.word;
 22065   003618  C0B5  F164         	movff	_nn,_previousNN
 22066   00361C  C0B6  F165         	movff	_nn+1,_previousNN+1
 22067                           
 22068                           ; BSR set to: 1
 22069                           ;../../VLCBlib_PIC/mns.c: 732:                     nn.bytes.lo = nn.bytes.hi = 0;
 22070   003620  0E00               	movlw	0
 22071   003622  0100               	movlb	0	; () banked
 22072   003624  6FB6               	movwf	(_nn+1)& (0+255),b
 22073   003626  C0B6  F0B5         	movff	_nn+1,_nn
 22074                           
 22075                           ;../../VLCBlib_PIC/mns.c: 734:                     mode_state = MODE_SETUP;
 22076   00362A  0E00               	movlw	0
 22077   00362C  6FC4               	movwf	_mode_state& (0+255),b
 22078                           
 22079                           ;../../VLCBlib_PIC/mns.c: 735:                     setupModePreviousMode = MODE_NORMAL;
 22080   00362E  0E01               	movlw	1
 22081   003630  6FC1               	movwf	_setupModePreviousMode& (0+255),b
 22082                           
 22083                           ; BSR set to: 0
 22084                           ;../../VLCBlib_PIC/mns.c: 737:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 22085   003632  C165  F0A6         	movff	_previousNN+1,sendMessage2@data1
 22086   003636  C164  F0A7         	movff	_previousNN,sendMessage2@data2
 22087   00363A  0E50               	movlw	80
 22088   00363C  ECB2  F060         	call	_sendMessage2
 22089                           
 22090                           ;../../VLCBlib_PIC/mns.c: 738:                     setLEDsByMode();
 22091   003640  EC51  F060         	call	_setLEDsByMode	;wreg free
 22092   003644                     l23974:
 22093                           
 22094                           ;../../VLCBlib_PIC/mns.c: 740:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 22095   003644  0100               	movlb	0	; () banked
 22096   003646  51C0               	movf	_pbWasPushed& (0+255),w,b
 22097   003648  B4D8               	btfsc	status,2,c
 22098   00364A  D791               	goto	l1565
 22099                           
 22100                           ; BSR set to: 0
 22101   00364C  ECE5  F05B         	call	_tickGet	;wreg free
 22102   003650  0100               	movlb	0	; () banked
 22103   003652  51A9               	movf	_pbTimer& (0+255),w,b
 22104   003654  5D8D               	subwf	?_tickGet& (0+255),w,b
 22105   003656  0101               	movlb	1	; () banked
 22106   003658  6FCA               	movwf	??_mnsPoll& (0+255),b
 22107   00365A  0100               	movlb	0	; () banked
 22108   00365C  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 22109   00365E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22110   003660  0101               	movlb	1	; () banked
 22111   003662  6FCB               	movwf	(??_mnsPoll+1)& (0+255),b
 22112   003664  0100               	movlb	0	; () banked
 22113   003666  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 22114   003668  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22115   00366A  0101               	movlb	1	; () banked
 22116   00366C  6FCC               	movwf	(??_mnsPoll+2)& (0+255),b
 22117   00366E  0100               	movlb	0	; () banked
 22118   003670  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 22119   003672  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22120   003674  0101               	movlb	1	; () banked
 22121   003676  6FCD               	movwf	(??_mnsPoll+3)& (0+255),b
 22122   003678  51CD               	movf	(??_mnsPoll+3)& (0+255),w,b
 22123   00367A  E108               	bnz	u25850
 22124   00367C  0E90               	movlw	144
 22125   00367E  5DCA               	subwf	??_mnsPoll& (0+255),w,b
 22126   003680  0ED0               	movlw	208
 22127   003682  59CB               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22128   003684  0E03               	movlw	3
 22129   003686  59CC               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 22130   003688  A0D8               	btfss	status,0,c
 22131   00368A  D771               	goto	l1565
 22132   00368C                     u25850:
 22133                           
 22134                           ; BSR set to: 1
 22135                           ;../../VLCBlib_PIC/mns.c: 742:                     previousNN.word = nn.word;
 22136   00368C  C0B5  F164         	movff	_nn,_previousNN
 22137   003690  C0B6  F165         	movff	_nn+1,_previousNN+1
 22138                           
 22139                           ; BSR set to: 1
 22140                           ;../../VLCBlib_PIC/mns.c: 743:                     nn.bytes.lo = nn.bytes.hi = 0;
 22141   003694  0E00               	movlw	0
 22142   003696  0100               	movlb	0	; () banked
 22143   003698  6FB6               	movwf	(_nn+1)& (0+255),b
 22144   00369A  C0B6  F0B5         	movff	_nn+1,_nn
 22145                           
 22146                           ; BSR set to: 0
 22147                           ;../../VLCBlib_PIC/mns.c: 745:                     mode_state = MODE_UNINITIALISED;
 22148   00369E  69C4               	setf	_mode_state& (0+255),b
 22149                           
 22150                           ;../../VLCBlib_PIC/mns.c: 746:                     setupModePreviousMode = MODE_NORMAL;
 22151   0036A0  0E01               	movlw	1
 22152   0036A2  6FC1               	movwf	_setupModePreviousMode& (0+255),b
 22153                           
 22154                           ; BSR set to: 0
 22155                           ;../../VLCBlib_PIC/mns.c: 748:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 22156   0036A4  C165  F0A6         	movff	_previousNN+1,sendMessage2@data1
 22157   0036A8  C164  F0A7         	movff	_previousNN,sendMessage2@data2
 22158   0036AC  0E51               	movlw	81
 22159   0036AE  ECB2  F060         	call	_sendMessage2
 22160   0036B2  D75B               	goto	l23954
 22161   0036B4                     l23994:
 22162                           
 22163                           ; BSR set to: 1
 22164   0036B4  0100               	movlb	0	; () banked
 22165   0036B6  51C4               	movf	_mode_state& (0+255),w,b
 22166                           
 22167                           ; Switch size 1, requested type "simple"
 22168                           ; Number of cases is 3, Range of values is 0 to 255
 22169                           ; switch strategies available:
 22170                           ; Name         Instructions Cycles
 22171                           ; simple_byte           10     6 (average)
 22172                           ;	Chosen strategy is simple_byte
 22173   0036B8  0A00               	xorlw	0	; case 0
 22174   0036BA  B4D8               	btfsc	status,2,c
 22175   0036BC  D6DD               	goto	l1561
 22176   0036BE  0AFD               	xorlw	253	; case 253
 22177   0036C0  B4D8               	btfsc	status,2,c
 22178   0036C2  D6C1               	goto	l1559
 22179   0036C4  0A02               	xorlw	2	; case 255
 22180   0036C6  B4D8               	btfsc	status,2,c
 22181   0036C8  D68A               	goto	l1554
 22182   0036CA  D762               	goto	l1567
 22183   0036CC                     __end_of_mnsPoll:
 22184                           	callstack 0
 22185                           
 22186 ;; *************** function _setLEDsByMode *****************
 22187 ;; Defined at:
 22188 ;;		line 796 in file "../../VLCBlib_PIC/mns.c"
 22189 ;; Parameters:    Size  Location     Type
 22190 ;;		None
 22191 ;; Auto vars:     Size  Location     Type
 22192 ;;		None
 22193 ;; Return value:  Size  Location     Type
 22194 ;;                  1    wreg      void 
 22195 ;; Registers used:
 22196 ;;		wreg, status,2, status,0, cstack
 22197 ;; Tracked objects:
 22198 ;;		On entry : 0/0
 22199 ;;		On exit  : 0/0
 22200 ;;		Unchanged: 0/0
 22201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22206 ;;Total ram usage:        0 bytes
 22207 ;; Hardware stack levels used: 1
 22208 ;; Hardware stack levels required when called: 13
 22209 ;; This function calls:
 22210 ;;		_showStatus
 22211 ;; This function is called by:
 22212 ;;		_mnsPowerUp
 22213 ;;		_mnsProcessMessage
 22214 ;;		_mnsPoll
 22215 ;; This function uses a non-reentrant model
 22216 ;;
 22217                           
 22218                           	psect	text75
 22219   00C0A2                     __ptext75:
 22220                           	callstack 0
 22221   00C0A2                     _setLEDsByMode:
 22222                           	callstack 15
 22223                           
 22224                           ;../../VLCBlib_PIC/mns.c: 797:        switch (mode_state) {
 22225                           
 22226                           ;incstack = 0
 22227   00C0A2  D00C               	goto	l22090
 22228   00C0A4                     l22082:
 22229                           
 22230                           ; BSR set to: 0
 22231                           ;../../VLCBlib_PIC/mns.c: 799:             showStatus(STATUS_UNINITIALISED);
 22232   00C0A4  0E01               	movlw	1
 22233   00C0A6  EC1F  F044         	call	_showStatus
 22234                           
 22235                           ;../../VLCBlib_PIC/mns.c: 800:             break;
 22236   00C0AA  0012               	return	
 22237   00C0AC                     l22084:
 22238                           
 22239                           ; BSR set to: 0
 22240                           ;../../VLCBlib_PIC/mns.c: 803:             showStatus(STATUS_SETUP);
 22241   00C0AC  0E02               	movlw	2
 22242   00C0AE  EC1F  F044         	call	_showStatus
 22243                           
 22244                           ;../../VLCBlib_PIC/mns.c: 804:             break;
 22245   00C0B2  0012               	return	
 22246   00C0B4                     l22086:
 22247                           
 22248                           ; BSR set to: 0
 22249                           ;../../VLCBlib_PIC/mns.c: 806:             showStatus(STATUS_NORMAL);
 22250   00C0B4  0E03               	movlw	3
 22251   00C0B6  EC1F  F044         	call	_showStatus
 22252                           
 22253                           ;../../VLCBlib_PIC/mns.c: 807:             break;
 22254   00C0BA  0012               	return	
 22255   00C0BC                     l22090:
 22256   00C0BC  0100               	movlb	0	; () banked
 22257   00C0BE  51C4               	movf	_mode_state& (0+255),w,b
 22258                           
 22259                           ; Switch size 1, requested type "simple"
 22260                           ; Number of cases is 3, Range of values is 0 to 255
 22261                           ; switch strategies available:
 22262                           ; Name         Instructions Cycles
 22263                           ; simple_byte           10     6 (average)
 22264                           ;	Chosen strategy is simple_byte
 22265   00C0C0  0A00               	xorlw	0	; case 0
 22266   00C0C2  B4D8               	btfsc	status,2,c
 22267   00C0C4  D7F3               	goto	l22084
 22268   00C0C6  0AFD               	xorlw	253	; case 253
 22269   00C0C8  B4D8               	btfsc	status,2,c
 22270   00C0CA  D7F0               	goto	l22084
 22271   00C0CC  0A02               	xorlw	2	; case 255
 22272   00C0CE  B4D8               	btfsc	status,2,c
 22273   00C0D0  D7E9               	goto	l22082
 22274   00C0D2  D7F0               	goto	l22086
 22275   00C0D4                     __end_of_setLEDsByMode:
 22276                           	callstack 0
 22277                           
 22278 ;; *************** function _sendMessage2 *****************
 22279 ;; Defined at:
 22280 ;;		line 1145 in file "../../VLCBlib_PIC/vlcb.c"
 22281 ;; Parameters:    Size  Location     Type
 22282 ;;  opc             1    wreg     enum E12392
 22283 ;;  data1           1   70[BANK0 ] unsigned char 
 22284 ;;  data2           1   71[BANK0 ] unsigned char 
 22285 ;; Auto vars:     Size  Location     Type
 22286 ;;  opc             1   72[BANK0 ] enum E12392
 22287 ;; Return value:  Size  Location     Type
 22288 ;;                  1    wreg      void 
 22289 ;; Registers used:
 22290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22291 ;; Tracked objects:
 22292 ;;		On entry : 0/0
 22293 ;;		On exit  : 0/0
 22294 ;;		Unchanged: 0/0
 22295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22296 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22299 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22300 ;;Total ram usage:        3 bytes
 22301 ;; Hardware stack levels used: 1
 22302 ;; Hardware stack levels required when called: 16
 22303 ;; This function calls:
 22304 ;;		_sendMessage
 22305 ;; This function is called by:
 22306 ;;		_mnsProcessMessage
 22307 ;;		_mnsPoll
 22308 ;;		_nvProcessMessage
 22309 ;;		_doNnclr
 22310 ;;		_doEvlrn
 22311 ;;		_doEvuln
 22312 ;; This function uses a non-reentrant model
 22313 ;;
 22314                           
 22315                           	psect	text76
 22316   00C164                     __ptext76:
 22317                           	callstack 0
 22318   00C164                     _sendMessage2:
 22319                           	callstack 11
 22320                           
 22321                           ;incstack = 0
 22322                           ;sendMessage2@opc stored from wreg
 22323   00C164  0100               	movlb	0	; () banked
 22324   00C166  6FA8               	movwf	sendMessage2@opc& (0+255),b
 22325                           
 22326                           ;../../VLCBlib_PIC/vlcb.c: 1146:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 22327   00C168  0E03               	movlw	3
 22328   00C16A  0101               	movlb	1	; () banked
 22329   00C16C  6FBD               	movwf	sendMessage@len& (0+255),b
 22330   00C16E  C0A6  F1BE         	movff	sendMessage2@data1,sendMessage@data1
 22331   00C172  C0A7  F1BF         	movff	sendMessage2@data2,sendMessage@data2
 22332   00C176  0E00               	movlw	0
 22333   00C178  6FC0               	movwf	sendMessage@data3& (0+255),b
 22334   00C17A  0E00               	movlw	0
 22335   00C17C  6FC1               	movwf	sendMessage@data4& (0+255),b
 22336   00C17E  0E00               	movlw	0
 22337   00C180  6FC2               	movwf	sendMessage@data5& (0+255),b
 22338   00C182  0E00               	movlw	0
 22339   00C184  6FC3               	movwf	sendMessage@data6& (0+255),b
 22340   00C186  0E00               	movlw	0
 22341   00C188  6FC4               	movwf	sendMessage@data7& (0+255),b
 22342   00C18A  0100               	movlb	0	; () banked
 22343   00C18C  51A8               	movf	sendMessage2@opc& (0+255),w,b
 22344   00C18E  ECA2  F055         	call	_sendMessage
 22345   00C192  0012               	return		;funcret
 22346   00C194                     __end_of_sendMessage2:
 22347                           	callstack 0
 22348                           
 22349 ;; *************** function _setNormalActions *****************
 22350 ;; Defined at:
 22351 ;;		line 519 in file "../event_consumerDualActionQueue.c"
 22352 ;; Parameters:    Size  Location     Type
 22353 ;;		None
 22354 ;; Auto vars:     Size  Location     Type
 22355 ;;		None
 22356 ;; Return value:  Size  Location     Type
 22357 ;;                  1    wreg      void 
 22358 ;; Registers used:
 22359 ;;		wreg, status,2
 22360 ;; Tracked objects:
 22361 ;;		On entry : 0/0
 22362 ;;		On exit  : 0/0
 22363 ;;		Unchanged: 0/0
 22364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22369 ;;Total ram usage:        0 bytes
 22370 ;; Hardware stack levels used: 1
 22371 ;; Hardware stack levels required when called: 12
 22372 ;; This function calls:
 22373 ;;		Nothing
 22374 ;; This function is called by:
 22375 ;;		_consumer2QProcessMessage
 22376 ;; This function uses a non-reentrant model
 22377 ;;
 22378                           
 22379                           	psect	text77
 22380   00C836                     __ptext77:
 22381                           	callstack 0
 22382   00C836                     _setNormalActions:
 22383                           	callstack 16
 22384                           
 22385                           ;../event_consumerDualActionQueue.c: 520:     expedited = FALSE;
 22386                           
 22387                           ;incstack = 0
 22388   00C836  0E00               	movlw	0
 22389   00C838  6E49               	movwf	_expedited^0,c
 22390   00C83A  0012               	return		;funcret
 22391   00C83C                     __end_of_setNormalActions:
 22392                           	callstack 0
 22393                           
 22394 ;; *************** function _setExpeditedActions *****************
 22395 ;; Defined at:
 22396 ;;		line 512 in file "../event_consumerDualActionQueue.c"
 22397 ;; Parameters:    Size  Location     Type
 22398 ;;		None
 22399 ;; Auto vars:     Size  Location     Type
 22400 ;;		None
 22401 ;; Return value:  Size  Location     Type
 22402 ;;                  1    wreg      void 
 22403 ;; Registers used:
 22404 ;;		wreg, status,2
 22405 ;; Tracked objects:
 22406 ;;		On entry : 0/0
 22407 ;;		On exit  : 0/0
 22408 ;;		Unchanged: 0/0
 22409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22414 ;;Total ram usage:        0 bytes
 22415 ;; Hardware stack levels used: 1
 22416 ;; Hardware stack levels required when called: 12
 22417 ;; This function calls:
 22418 ;;		Nothing
 22419 ;; This function is called by:
 22420 ;;		_consumer2QProcessMessage
 22421 ;; This function uses a non-reentrant model
 22422 ;;
 22423                           
 22424                           	psect	text78
 22425   00C83C                     __ptext78:
 22426                           	callstack 0
 22427   00C83C                     _setExpeditedActions:
 22428                           	callstack 16
 22429                           
 22430                           ;../event_consumerDualActionQueue.c: 513:     expedited = TRUE;
 22431                           
 22432                           ;incstack = 0
 22433   00C83C  0E01               	movlw	1
 22434   00C83E  6E49               	movwf	_expedited^0,c
 22435   00C840  0012               	return		;funcret
 22436   00C842                     __end_of_setExpeditedActions:
 22437                           	callstack 0
 22438                           
 22439 ;; *************** function _pushTwoAction *****************
 22440 ;; Defined at:
 22441 ;;		line 393 in file "../event_consumerDualActionQueue.c"
 22442 ;; Parameters:    Size  Location     Type
 22443 ;;  a               1    wreg     unsigned char 
 22444 ;; Auto vars:     Size  Location     Type
 22445 ;;  a               1   45[BANK0 ] unsigned char 
 22446 ;; Return value:  Size  Location     Type
 22447 ;;                  1    wreg      enum E12766
 22448 ;; Registers used:
 22449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22450 ;; Tracked objects:
 22451 ;;		On entry : 0/0
 22452 ;;		On exit  : 0/0
 22453 ;;		Unchanged: 0/0
 22454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22456 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22458 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22459 ;;Total ram usage:        1 bytes
 22460 ;; Hardware stack levels used: 1
 22461 ;; Hardware stack levels required when called: 12
 22462 ;; This function calls:
 22463 ;;		Nothing
 22464 ;; This function is called by:
 22465 ;;		_consumer2QProcessMessage
 22466 ;; This function uses a non-reentrant model
 22467 ;;
 22468                           
 22469                           	psect	text79
 22470   00B602                     __ptext79:
 22471                           	callstack 0
 22472   00B602                     _pushTwoAction:
 22473                           	callstack 16
 22474                           
 22475                           ;incstack = 0
 22476                           ;pushTwoAction@a stored from wreg
 22477   00B602  0100               	movlb	0	; () banked
 22478   00B604  6F8D               	movwf	pushTwoAction@a& (0+255),b
 22479                           
 22480                           ;../event_consumerDualActionQueue.c: 394:     if (expedited) {
 22481   00B606  5049               	movf	_expedited^0,w,c
 22482   00B608  B4D8               	btfsc	status,2,c
 22483   00B60A  D015               	goto	l21454
 22484                           
 22485                           ;../event_consumerDualActionQueue.c: 395:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 22486   00B60C  0100               	movlb	0	; () banked
 22487   00B60E  29CA               	incf	_expeditedWriteIndex& (0+255),w,b
 22488   00B610  0B07               	andlw	7
 22489   00B612  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 22490   00B614  B4D8               	btfsc	status,2,c
 22491   00B616  0012               	return	
 22492                           
 22493                           ; BSR set to: 0
 22494                           ;../event_consumerDualActionQueue.c: 397:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 22495   00B618  0EC4               	movlw	low _expeditedQueueBuf
 22496   00B61A  25CA               	addwf	_expeditedWriteIndex& (0+255),w,b
 22497   00B61C  6ED9               	movwf	fsr2l,c
 22498   00B61E  6ADA               	clrf	fsr2h,c
 22499   00B620  0E02               	movlw	high _expeditedQueueBuf
 22500   00B622  22DA               	addwfc	fsr2h,f,c
 22501   00B624  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22502                           
 22503                           ; BSR set to: 0
 22504   00B628  2BCA               	incf	_expeditedWriteIndex& (0+255),f,b
 22505                           
 22506                           ; BSR set to: 0
 22507                           ;../event_consumerDualActionQueue.c: 398:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 22508   00B62A  0E07               	movlw	7
 22509   00B62C  65CA               	cpfsgt	_expeditedWriteIndex& (0+255),b
 22510   00B62E  0012               	return	
 22511                           
 22512                           ; BSR set to: 0
 22513   00B630  0E00               	movlw	0
 22514   00B632  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
 22515   00B634  0012               	return	
 22516   00B636                     l21454:
 22517                           
 22518                           ;../event_consumerDualActionQueue.c: 401:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 22519   00B636  0100               	movlb	0	; () banked
 22520   00B638  29CC               	incf	_normalWriteIndex& (0+255),w,b
 22521   00B63A  0B3F               	andlw	63
 22522   00B63C  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 22523   00B63E  B4D8               	btfsc	status,2,c
 22524   00B640  0012               	return	
 22525                           
 22526                           ; BSR set to: 0
 22527                           ;../event_consumerDualActionQueue.c: 403:     normalQueueBuf[normalWriteIndex++] = a;
 22528   00B642  0E80               	movlw	low _normalQueueBuf
 22529   00B644  25CC               	addwf	_normalWriteIndex& (0+255),w,b
 22530   00B646  6ED9               	movwf	fsr2l,c
 22531   00B648  6ADA               	clrf	fsr2h,c
 22532   00B64A  0E04               	movlw	high _normalQueueBuf
 22533   00B64C  22DA               	addwfc	fsr2h,f,c
 22534   00B64E  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22535                           
 22536                           ; BSR set to: 0
 22537   00B652  2BCC               	incf	_normalWriteIndex& (0+255),f,b
 22538                           
 22539                           ; BSR set to: 0
 22540                           ;../event_consumerDualActionQueue.c: 404:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 22541   00B654  0E3F               	movlw	63
 22542   00B656  65CC               	cpfsgt	_normalWriteIndex& (0+255),b
 22543   00B658  0012               	return	
 22544                           
 22545                           ; BSR set to: 0
 22546   00B65A  0E00               	movlw	0
 22547   00B65C  6FCC               	movwf	_normalWriteIndex& (0+255),b
 22548                           
 22549                           ; BSR set to: 0
 22550   00B65E  0012               	return		;funcret
 22551   00B660                     __end_of_pushTwoAction:
 22552                           	callstack 0
 22553                           
 22554 ;; *************** function _canReceiveMessage *****************
 22555 ;; Defined at:
 22556 ;;		line 589 in file "../../VLCBlib_PIC/can18_ecan.c"
 22557 ;; Parameters:    Size  Location     Type
 22558 ;;  m               2   10[BANK1 ] PTR struct Message
 22559 ;;		 -> poll@m(9), 
 22560 ;; Auto vars:     Size  Location     Type
 22561 ;;  p               2   17[BANK1 ] PTR unsigned char 
 22562 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22563 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22564 ;;		 -> NULL(0), 
 22565 ;;  mp              2   14[BANK1 ] PTR struct Message
 22566 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22567 ;;  no              1   16[BANK1 ] unsigned char 
 22568 ;;  messageAvail    1   13[BANK1 ] enum E13077
 22569 ;;  incomingCanI    1    0        unsigned char 
 22570 ;; Return value:  Size  Location     Type
 22571 ;;                  1    wreg      enum E13077
 22572 ;; Registers used:
 22573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22574 ;; Tracked objects:
 22575 ;;		On entry : 0/0
 22576 ;;		On exit  : 0/0
 22577 ;;		Unchanged: 0/0
 22578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22579 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22580 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22581 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22582 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22583 ;;Total ram usage:        9 bytes
 22584 ;; Hardware stack levels used: 1
 22585 ;; Hardware stack levels required when called: 20
 22586 ;; This function calls:
 22587 ;;		_getBufferPointer
 22588 ;;		_getNumRxBuffersInUse
 22589 ;;		_handleSelfEnumeration
 22590 ;;		_memcpy
 22591 ;;		_pop
 22592 ;;		_processEnumeration
 22593 ;; This function is called by:
 22594 ;;		_poll
 22595 ;; This function uses a non-reentrant model
 22596 ;;
 22597                           
 22598                           	psect	text80
 22599   0069BC                     __ptext80:
 22600                           	callstack 0
 22601   0069BC                     _canReceiveMessage:
 22602                           	callstack 9
 22603                           
 22604                           ;../../VLCBlib_PIC/can18_ecan.c: 590:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          591:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 592:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 593:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 595:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 598:     PIE5bits.
      +                          FIFOWMIE = 0;
 22605                           
 22606                           ; BSR set to: 0
 22607                           ;incstack = 0
 22608   0069BC  9076               	bcf	118,0,c	;volatile
 22609                           
 22610                           ;../../VLCBlib_PIC/can18_ecan.c: 599:     processEnumeration();
 22611   0069BE  EC50  F03C         	call	_processEnumeration	;wreg free
 22612                           
 22613                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     no = getNumRxBuffersInUse();
 22614   0069C2  EC90  F05F         	call	_getNumRxBuffersInUse	;wreg free
 22615   0069C6  0101               	movlb	1	; () banked
 22616   0069C8  6FCD               	movwf	canReceiveMessage@no& (0+255),b
 22617                           
 22618                           ; BSR set to: 1
 22619                           ;../../VLCBlib_PIC/can18_ecan.c: 604:     if (canDiagnostics[0x12].asUint < no) {
 22620   0069CA  51CD               	movf	canReceiveMessage@no& (0+255),w,b
 22621   0069CC  5D8E               	subwf	(_canDiagnostics+36)& (0+255),w,b
 22622   0069CE  0E00               	movlw	0
 22623   0069D0  598F               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 22624   0069D2  B0D8               	btfsc	status,0,c
 22625   0069D4  D003               	goto	l24394
 22626                           
 22627                           ; BSR set to: 1
 22628                           ;../../VLCBlib_PIC/can18_ecan.c: 605:         canDiagnostics[0x12].asUint = no;
 22629   0069D6  C1CD  F18E         	movff	canReceiveMessage@no,_canDiagnostics+36
 22630   0069DA  6B8F               	clrf	(_canDiagnostics+37)& (0+255),b
 22631   0069DC                     l24394:
 22632                           
 22633                           ; BSR set to: 1
 22634                           ;../../VLCBlib_PIC/can18_ecan.c: 608:     mp = pop(&rxQueue);
 22635   0069DC  0E4F               	movlw	low _rxQueue
 22636   0069DE  0100               	movlb	0	; () banked
 22637   0069E0  6F8D               	movwf	pop@q& (0+255),b
 22638   0069E2  EC10  F050         	call	_pop	;wreg free
 22639   0069E6  C08D  F1CB         	movff	?_pop,canReceiveMessage@mp
 22640   0069EA  C08E  F1CC         	movff	?_pop+1,canReceiveMessage@mp+1
 22641                           
 22642                           ;../../VLCBlib_PIC/can18_ecan.c: 609:     if (mp != ((void*)0)) {
 22643   0069EE  0101               	movlb	1	; () banked
 22644   0069F0  51CB               	movf	canReceiveMessage@mp& (0+255),w,b
 22645   0069F2  11CC               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 22646   0069F4  B4D8               	btfsc	status,2,c
 22647   0069F6  D012               	goto	l2530
 22648                           
 22649                           ; BSR set to: 1
 22650                           ;../../VLCBlib_PIC/can18_ecan.c: 610:         memcpy(m, mp, sizeof(Message));
 22651   0069F8  C1C7  F08D         	movff	canReceiveMessage@m,memcpy@d1
 22652   0069FC  C1C8  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 22653   006A00  C1CB  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 22654   006A04  C1CC  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 22655   006A08  0E00               	movlw	0
 22656   006A0A  0100               	movlb	0	; () banked
 22657   006A0C  6F92               	movwf	(memcpy@n+1)& (0+255),b
 22658   006A0E  0E09               	movlw	9
 22659   006A10  6F91               	movwf	memcpy@n& (0+255),b
 22660   006A12  ECD2  F05E         	call	_memcpy	;wreg free
 22661                           
 22662                           ;../../VLCBlib_PIC/can18_ecan.c: 611:         PIE5bits.FIFOWMIE = 1;
 22663   006A16  8076               	bsf	118,0,c	;volatile
 22664                           
 22665                           ;../../VLCBlib_PIC/can18_ecan.c: 612:         return RECEIVED;
 22666   006A18  0E01               	movlw	1
 22667   006A1A  0012               	return	
 22668   006A1C                     l2530:
 22669                           
 22670                           ; BSR set to: 1
 22671                           ;../../VLCBlib_PIC/can18_ecan.c: 614:         if (COMSTATbits.NOT_FIFOEMPTY) {
 22672   006A1C  AE71               	btfss	113,7,c	;volatile
 22673   006A1E  D00D               	goto	u26250
 22674                           
 22675                           ; BSR set to: 1
 22676                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             p = getBufferPointer(CANCON & 0x07);
 22677   006A20  506F               	movf	111,w,c	;volatile
 22678   006A22  0B07               	andlw	7
 22679   006A24  EC8D  F051         	call	_getBufferPointer
 22680   006A28  C08D  F1CE         	movff	?_getBufferPointer,canReceiveMessage@p
 22681   006A2C  C08E  F1CF         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 22682                           
 22683                           ;../../VLCBlib_PIC/can18_ecan.c: 616:             if (p == ((void*)0)) {
 22684   006A30  0101               	movlb	1	; () banked
 22685   006A32  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22686   006A34  11CF               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 22687   006A36  A4D8               	btfss	status,2,c
 22688   006A38  D003               	goto	l2534
 22689   006A3A                     u26250:
 22690                           
 22691                           ; BSR set to: 1
 22692                           ;../../VLCBlib_PIC/can18_ecan.c: 618:                 PIE5bits.FIFOWMIE = 1;
 22693   006A3A  8076               	bsf	118,0,c	;volatile
 22694   006A3C                     l24414:
 22695                           
 22696                           ; BSR set to: 1
 22697                           ;../../VLCBlib_PIC/can18_ecan.c: 619:                 return NOT_RECEIVED;
 22698   006A3C  0E00               	movlw	0
 22699   006A3E  0012               	return	
 22700   006A40                     l2534:
 22701                           
 22702                           ; BSR set to: 1
 22703                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             PIR5bits.RXBnIF = 0;
 22704   006A40  9277               	bcf	119,1,c	;volatile
 22705                           
 22706                           ; BSR set to: 1
 22707                           ;../../VLCBlib_PIC/can18_ecan.c: 623:             if (p[2] & 0x08) return NOT_RECEIVED;
 22708   006A42  EE20 F002          	lfsr	2,2
 22709   006A46  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22710   006A48  26D9               	addwf	fsr2l,f,c
 22711   006A4A  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22712   006A4C  22DA               	addwfc	fsr2h,f,c
 22713   006A4E  B6DF               	btfsc	indf2,3,c
 22714   006A50  D7F5               	goto	l24414
 22715                           
 22716                           ; BSR set to: 1
 22717                           ;../../VLCBlib_PIC/can18_ecan.c: 625:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 22718   006A52  C1CE  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 22719   006A56  C1CF  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 22720   006A5A  EC30  F041         	call	_handleSelfEnumeration	;wreg free
 22721   006A5E  06E8               	decf	wreg,f,c
 22722   006A60  A4D8               	btfss	status,2,c
 22723   006A62  D08F               	goto	l24452
 22724                           
 22725                           ;../../VLCBlib_PIC/can18_ecan.c: 628:                 canDiagnostics[0x09].asUint++;
 22726   006A64  0101               	movlb	1	; () banked
 22727   006A66  4B7C               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 22728   006A68  2B7D               	incf	(_canDiagnostics+19)& (0+255),f,b
 22729                           
 22730                           ; BSR set to: 1
 22731                           ;../../VLCBlib_PIC/can18_ecan.c: 633:                     m->opc = p[6];
 22732   006A6A  EE20 F006          	lfsr	2,6
 22733   006A6E  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22734   006A70  26D9               	addwf	fsr2l,f,c
 22735   006A72  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22736   006A74  22DA               	addwfc	fsr2h,f,c
 22737   006A76  EE10 F001          	lfsr	1,1
 22738   006A7A  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22739   006A7C  26E1               	addwf	fsr1l,f,c
 22740   006A7E  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22741   006A80  22E2               	addwfc	fsr1h,f,c
 22742   006A82  CFDF FFE7          	movff	indf2,indf1
 22743                           
 22744                           ; BSR set to: 1
 22745                           ;../../VLCBlib_PIC/can18_ecan.c: 634:                     m->len = p[5] & 0xF;
 22746   006A86  EE20 F005          	lfsr	2,5
 22747   006A8A  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22748   006A8C  26D9               	addwf	fsr2l,f,c
 22749   006A8E  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22750   006A90  22DA               	addwfc	fsr2h,f,c
 22751   006A92  50DF               	movf	indf2,w,c
 22752   006A94  0B0F               	andlw	15
 22753   006A96  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 22754   006A9A  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22755   006A9E  6EDF               	movwf	indf2,c
 22756                           
 22757                           ; BSR set to: 1
 22758                           ;../../VLCBlib_PIC/can18_ecan.c: 635:                     if (m->len > 8) {
 22759   006AA0  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 22760   006AA4  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22761   006AA8  0E08               	movlw	8
 22762   006AAA  64DF               	cpfsgt	indf2,c
 22763   006AAC  D006               	goto	l24436
 22764                           
 22765                           ; BSR set to: 1
 22766                           ;../../VLCBlib_PIC/can18_ecan.c: 636:                         m->len = 8;
 22767   006AAE  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 22768   006AB2  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22769   006AB6  0E08               	movlw	8
 22770   006AB8  6EDF               	movwf	indf2,c
 22771   006ABA                     l24436:
 22772                           
 22773                           ; BSR set to: 1
 22774                           ;../../VLCBlib_PIC/can18_ecan.c: 638:                     m->bytes[0] = p[7];
 22775   006ABA  EE20 F007          	lfsr	2,7
 22776   006ABE  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22777   006AC0  26D9               	addwf	fsr2l,f,c
 22778   006AC2  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22779   006AC4  22DA               	addwfc	fsr2h,f,c
 22780   006AC6  EE10 F002          	lfsr	1,2
 22781   006ACA  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22782   006ACC  26E1               	addwf	fsr1l,f,c
 22783   006ACE  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22784   006AD0  22E2               	addwfc	fsr1h,f,c
 22785   006AD2  CFDF FFE7          	movff	indf2,indf1
 22786                           
 22787                           ; BSR set to: 1
 22788                           ;../../VLCBlib_PIC/can18_ecan.c: 639:                     m->bytes[1] = p[8];
 22789   006AD6  EE20 F008          	lfsr	2,8
 22790   006ADA  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22791   006ADC  26D9               	addwf	fsr2l,f,c
 22792   006ADE  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22793   006AE0  22DA               	addwfc	fsr2h,f,c
 22794   006AE2  EE10 F003          	lfsr	1,3
 22795   006AE6  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22796   006AE8  26E1               	addwf	fsr1l,f,c
 22797   006AEA  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22798   006AEC  22E2               	addwfc	fsr1h,f,c
 22799   006AEE  CFDF FFE7          	movff	indf2,indf1
 22800                           
 22801                           ; BSR set to: 1
 22802                           ;../../VLCBlib_PIC/can18_ecan.c: 640:                     m->bytes[2] = p[9];
 22803   006AF2  EE20 F009          	lfsr	2,9
 22804   006AF6  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22805   006AF8  26D9               	addwf	fsr2l,f,c
 22806   006AFA  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22807   006AFC  22DA               	addwfc	fsr2h,f,c
 22808   006AFE  EE10 F004          	lfsr	1,4
 22809   006B02  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22810   006B04  26E1               	addwf	fsr1l,f,c
 22811   006B06  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22812   006B08  22E2               	addwfc	fsr1h,f,c
 22813   006B0A  CFDF FFE7          	movff	indf2,indf1
 22814                           
 22815                           ; BSR set to: 1
 22816                           ;../../VLCBlib_PIC/can18_ecan.c: 641:                     m->bytes[3] = p[10];
 22817   006B0E  EE20 F00A          	lfsr	2,10
 22818   006B12  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22819   006B14  26D9               	addwf	fsr2l,f,c
 22820   006B16  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22821   006B18  22DA               	addwfc	fsr2h,f,c
 22822   006B1A  EE10 F005          	lfsr	1,5
 22823   006B1E  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22824   006B20  26E1               	addwf	fsr1l,f,c
 22825   006B22  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22826   006B24  22E2               	addwfc	fsr1h,f,c
 22827   006B26  CFDF FFE7          	movff	indf2,indf1
 22828                           
 22829                           ; BSR set to: 1
 22830                           ;../../VLCBlib_PIC/can18_ecan.c: 642:                     m->bytes[4] = p[11];
 22831   006B2A  EE20 F00B          	lfsr	2,11
 22832   006B2E  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22833   006B30  26D9               	addwf	fsr2l,f,c
 22834   006B32  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22835   006B34  22DA               	addwfc	fsr2h,f,c
 22836   006B36  EE10 F006          	lfsr	1,6
 22837   006B3A  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22838   006B3C  26E1               	addwf	fsr1l,f,c
 22839   006B3E  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22840   006B40  22E2               	addwfc	fsr1h,f,c
 22841   006B42  CFDF FFE7          	movff	indf2,indf1
 22842                           
 22843                           ; BSR set to: 1
 22844                           ;../../VLCBlib_PIC/can18_ecan.c: 643:                     m->bytes[5] = p[12];
 22845   006B46  EE20 F00C          	lfsr	2,12
 22846   006B4A  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22847   006B4C  26D9               	addwf	fsr2l,f,c
 22848   006B4E  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22849   006B50  22DA               	addwfc	fsr2h,f,c
 22850   006B52  EE10 F007          	lfsr	1,7
 22851   006B56  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22852   006B58  26E1               	addwf	fsr1l,f,c
 22853   006B5A  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22854   006B5C  22E2               	addwfc	fsr1h,f,c
 22855   006B5E  CFDF FFE7          	movff	indf2,indf1
 22856                           
 22857                           ; BSR set to: 1
 22858                           ;../../VLCBlib_PIC/can18_ecan.c: 644:                     m->bytes[6] = p[13];
 22859   006B62  EE20 F00D          	lfsr	2,13
 22860   006B66  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22861   006B68  26D9               	addwf	fsr2l,f,c
 22862   006B6A  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22863   006B6C  22DA               	addwfc	fsr2h,f,c
 22864   006B6E  EE10 F008          	lfsr	1,8
 22865   006B72  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22866   006B74  26E1               	addwf	fsr1l,f,c
 22867   006B76  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22868   006B78  22E2               	addwfc	fsr1h,f,c
 22869   006B7A  CFDF FFE7          	movff	indf2,indf1
 22870                           
 22871                           ; BSR set to: 1
 22872                           ;../../VLCBlib_PIC/can18_ecan.c: 645:                     messageAvailable = RECEIVED;
 22873   006B7E  0E01               	movlw	1
 22874   006B80  6FCA               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 22875   006B82                     l24452:
 22876                           
 22877                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             if (PIR5bits.IRXIF) {
 22878   006B82  AE77               	btfss	119,7,c	;volatile
 22879   006B84  D004               	goto	l24458
 22880                           
 22881                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 canDiagnostics[0x01].asUint++;
 22882   006B86  0101               	movlb	1	; () banked
 22883   006B88  4B6C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 22884   006B8A  2B6D               	incf	(_canDiagnostics+3)& (0+255),f,b
 22885                           
 22886                           ; BSR set to: 1
 22887                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                 PIR5bits.IRXIF = 0;
 22888   006B8C  9E77               	bcf	119,7,c	;volatile
 22889   006B8E                     l24458:
 22890                           
 22891                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             p[0] &= 0x7f;
 22892   006B8E  C1CE  FFD9         	movff	canReceiveMessage@p,fsr2l
 22893   006B92  C1CF  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 22894   006B96  0E7F               	movlw	127
 22895   006B98  16DF               	andwf	indf2,f,c
 22896                           
 22897                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             PIE5bits.FIFOWMIE = 1;
 22898   006B9A  8076               	bsf	118,0,c	;volatile
 22899                           
 22900                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             return messageAvailable;
 22901   006B9C  0101               	movlb	1	; () banked
 22902   006B9E  51CA               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 22903   006BA0  0012               	return	
 22904   006BA2                     __end_of_canReceiveMessage:
 22905                           	callstack 0
 22906                           
 22907 ;; *************** function _processEnumeration *****************
 22908 ;; Defined at:
 22909 ;;		line 903 in file "../../VLCBlib_PIC/can18_ecan.c"
 22910 ;; Parameters:    Size  Location     Type
 22911 ;;		None
 22912 ;; Auto vars:     Size  Location     Type
 22913 ;;  i               1    9[BANK1 ] unsigned char 
 22914 ;;  newCanId        1    8[BANK1 ] unsigned char 
 22915 ;;  enumResult      1    7[BANK1 ] unsigned char 
 22916 ;; Return value:  Size  Location     Type
 22917 ;;                  1    wreg      void 
 22918 ;; Registers used:
 22919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22920 ;; Tracked objects:
 22921 ;;		On entry : 0/0
 22922 ;;		On exit  : 0/0
 22923 ;;		Unchanged: 0/0
 22924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22926 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22927 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22928 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22929 ;;Total ram usage:        7 bytes
 22930 ;; Hardware stack levels used: 1
 22931 ;; Hardware stack levels required when called: 19
 22932 ;; This function calls:
 22933 ;;		_setNewCanId
 22934 ;;		_tickGet
 22935 ;;		_updateModuleErrorStatus
 22936 ;; This function is called by:
 22937 ;;		_canReceiveMessage
 22938 ;; This function uses a non-reentrant model
 22939 ;;
 22940                           
 22941                           	psect	text81
 22942   0078A0                     __ptext81:
 22943                           	callstack 0
 22944   0078A0                     _processEnumeration:
 22945                           	callstack 9
 22946                           
 22947                           ;../../VLCBlib_PIC/can18_ecan.c: 904:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 906:     switch (enumerationState) {
 22948                           
 22949                           ;incstack = 0
 22950   0078A0  D09B               	goto	l22504
 22951   0078A2                     l22442:
 22952                           
 22953                           ; BSR set to: 1
 22954                           ;../../VLCBlib_PIC/can18_ecan.c: 908:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 22955   0078A2  ECE5  F05B         	call	_tickGet	;wreg free
 22956   0078A6  503B               	movf	_enumerationStartTime^0,w,c
 22957   0078A8  0100               	movlb	0	; () banked
 22958   0078AA  5D8D               	subwf	?_tickGet& (0+255),w,b
 22959   0078AC  0101               	movlb	1	; () banked
 22960   0078AE  6FC0               	movwf	??_processEnumeration& (0+255),b
 22961   0078B0  503C               	movf	(_enumerationStartTime+1)^0,w,c
 22962   0078B2  0100               	movlb	0	; () banked
 22963   0078B4  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22964   0078B6  0101               	movlb	1	; () banked
 22965   0078B8  6FC1               	movwf	(??_processEnumeration+1)& (0+255),b
 22966   0078BA  503D               	movf	(_enumerationStartTime+2)^0,w,c
 22967   0078BC  0100               	movlb	0	; () banked
 22968   0078BE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22969   0078C0  0101               	movlb	1	; () banked
 22970   0078C2  6FC2               	movwf	(??_processEnumeration+2)& (0+255),b
 22971   0078C4  503E               	movf	(_enumerationStartTime+3)^0,w,c
 22972   0078C6  0100               	movlb	0	; () banked
 22973   0078C8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22974   0078CA  0101               	movlb	1	; () banked
 22975   0078CC  6FC3               	movwf	(??_processEnumeration+3)& (0+255),b
 22976   0078CE  51C3               	movf	(??_processEnumeration+3)& (0+255),w,b
 22977   0078D0  11C2               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22978   0078D2  E106               	bnz	u23670
 22979   0078D4  0ED5               	movlw	213
 22980   0078D6  5DC0               	subwf	??_processEnumeration& (0+255),w,b
 22981   0078D8  0E30               	movlw	48
 22982   0078DA  59C1               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22983   0078DC  A0D8               	btfss	status,0,c
 22984   0078DE  0012               	return	
 22985   0078E0                     u23670:
 22986                           
 22987                           ; BSR set to: 1
 22988                           ;../../VLCBlib_PIC/can18_ecan.c: 910:                 for (i=1; i< (0x7F/8)+1; i++) {
 22989   0078E0  0E01               	movlw	1
 22990   0078E2  6FC6               	movwf	processEnumeration@i& (0+255),b
 22991   0078E4                     l22450:
 22992                           
 22993                           ; BSR set to: 1
 22994                           ;../../VLCBlib_PIC/can18_ecan.c: 911:                     enumerationResults[i] = 0;
 22995   0078E4  0E34               	movlw	low _enumerationResults
 22996   0078E6  25C6               	addwf	processEnumeration@i& (0+255),w,b
 22997   0078E8  6ED9               	movwf	fsr2l,c
 22998   0078EA  6ADA               	clrf	fsr2h,c
 22999   0078EC  0E02               	movlw	high _enumerationResults
 23000   0078EE  22DA               	addwfc	fsr2h,f,c
 23001   0078F0  6ADF               	clrf	indf2,c
 23002                           
 23003                           ; BSR set to: 1
 23004                           ;../../VLCBlib_PIC/can18_ecan.c: 912:                 }
 23005   0078F2  2BC6               	incf	processEnumeration@i& (0+255),f,b
 23006                           
 23007                           ; BSR set to: 1
 23008   0078F4  0E0F               	movlw	15
 23009   0078F6  65C6               	cpfsgt	processEnumeration@i& (0+255),b
 23010   0078F8  D7F5               	goto	l22450
 23011                           
 23012                           ; BSR set to: 1
 23013                           ;../../VLCBlib_PIC/can18_ecan.c: 913:                 enumerationResults[0] = 1;
 23014   0078FA  0E01               	movlw	1
 23015   0078FC  0102               	movlb	2	; () banked
 23016   0078FE  6F34               	movwf	_enumerationResults& (0+255),b
 23017                           
 23018                           ;../../VLCBlib_PIC/can18_ecan.c: 915:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 23019   007900  0E02               	movlw	2
 23020   007902  0100               	movlb	0	; () banked
 23021   007904  6FB7               	movwf	_enumerationState& (0+255),b
 23022                           
 23023                           ; BSR set to: 0
 23024                           ;../../VLCBlib_PIC/can18_ecan.c: 916:                 enumerationStartTime.val = tickGet
      +                          ();
 23025   007906  ECE5  F05B         	call	_tickGet	;wreg free
 23026   00790A  C08D  F03B         	movff	?_tickGet,_enumerationStartTime
 23027   00790E  C08E  F03C         	movff	?_tickGet+1,_enumerationStartTime+1
 23028   007912  C08F  F03D         	movff	?_tickGet+2,_enumerationStartTime+2
 23029   007916  C090  F03E         	movff	?_tickGet+3,_enumerationStartTime+3
 23030                           
 23031                           ;../../VLCBlib_PIC/can18_ecan.c: 918:                 canDiagnostics[0x0D].asUint++;
 23032   00791A  0101               	movlb	1	; () banked
 23033   00791C  4B84               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 23034   00791E  2B85               	incf	(_canDiagnostics+27)& (0+255),f,b
 23035                           
 23036                           ; BSR set to: 1
 23037                           ;../../VLCBlib_PIC/can18_ecan.c: 920:                 TXB1CONbits.TXREQ = 1;
 23038   007920  010F               	movlb	15	; () banked
 23039   007922  8710               	bsf	16,3,b	;volatile
 23040   007924  0012               	return	
 23041   007926                     l22464:
 23042                           
 23043                           ; BSR set to: 1
 23044                           ;../../VLCBlib_PIC/can18_ecan.c: 924:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 23045   007926  ECE5  F05B         	call	_tickGet	;wreg free
 23046   00792A  503B               	movf	_enumerationStartTime^0,w,c
 23047   00792C  0100               	movlb	0	; () banked
 23048   00792E  5D8D               	subwf	?_tickGet& (0+255),w,b
 23049   007930  0101               	movlb	1	; () banked
 23050   007932  6FC0               	movwf	??_processEnumeration& (0+255),b
 23051   007934  503C               	movf	(_enumerationStartTime+1)^0,w,c
 23052   007936  0100               	movlb	0	; () banked
 23053   007938  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23054   00793A  0101               	movlb	1	; () banked
 23055   00793C  6FC1               	movwf	(??_processEnumeration+1)& (0+255),b
 23056   00793E  503D               	movf	(_enumerationStartTime+2)^0,w,c
 23057   007940  0100               	movlb	0	; () banked
 23058   007942  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23059   007944  0101               	movlb	1	; () banked
 23060   007946  6FC2               	movwf	(??_processEnumeration+2)& (0+255),b
 23061   007948  503E               	movf	(_enumerationStartTime+3)^0,w,c
 23062   00794A  0100               	movlb	0	; () banked
 23063   00794C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23064   00794E  0101               	movlb	1	; () banked
 23065   007950  6FC3               	movwf	(??_processEnumeration+3)& (0+255),b
 23066   007952  51C3               	movf	(??_processEnumeration+3)& (0+255),w,b
 23067   007954  11C2               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 23068   007956  E106               	bnz	u23690
 23069   007958  0E6B               	movlw	107
 23070   00795A  5DC0               	subwf	??_processEnumeration& (0+255),w,b
 23071   00795C  0E18               	movlw	24
 23072   00795E  59C1               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 23073   007960  A0D8               	btfss	status,0,c
 23074   007962  0012               	return	
 23075   007964                     u23690:
 23076                           
 23077                           ; BSR set to: 1
 23078                           ;../../VLCBlib_PIC/can18_ecan.c: 928:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 23079   007964  0E00               	movlw	0
 23080   007966  6FC6               	movwf	processEnumeration@i& (0+255),b
 23081   007968  D001               	goto	l22470
 23082   00796A                     l22468:
 23083                           
 23084                           ; BSR set to: 1
 23085                           ;../../VLCBlib_PIC/can18_ecan.c: 930:                 }
 23086   00796A  2BC6               	incf	processEnumeration@i& (0+255),f,b
 23087   00796C                     l22470:
 23088                           
 23089                           ; BSR set to: 1
 23090   00796C  0E34               	movlw	low _enumerationResults
 23091   00796E  25C6               	addwf	processEnumeration@i& (0+255),w,b
 23092   007970  6ED9               	movwf	fsr2l,c
 23093   007972  6ADA               	clrf	fsr2h,c
 23094   007974  0E02               	movlw	high _enumerationResults
 23095   007976  22DA               	addwfc	fsr2h,f,c
 23096   007978  28DE               	incf	postinc2,w,c
 23097   00797A  A4D8               	btfss	status,2,c
 23098   00797C  D003               	goto	u23710
 23099                           
 23100                           ; BSR set to: 1
 23101   00797E  0E0F               	movlw	15
 23102   007980  65C6               	cpfsgt	processEnumeration@i& (0+255),b
 23103   007982  D7F3               	goto	l22468
 23104   007984                     u23710:
 23105                           
 23106                           ; BSR set to: 1
 23107                           ;../../VLCBlib_PIC/can18_ecan.c: 931:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 23108   007984  0E34               	movlw	low _enumerationResults
 23109   007986  25C6               	addwf	processEnumeration@i& (0+255),w,b
 23110   007988  6ED9               	movwf	fsr2l,c
 23111   00798A  6ADA               	clrf	fsr2h,c
 23112   00798C  0E02               	movlw	high _enumerationResults
 23113   00798E  22DA               	addwfc	fsr2h,f,c
 23114   007990  50DF               	movf	indf2,w,c
 23115   007992  6FC4               	movwf	processEnumeration@enumResult& (0+255),b
 23116   007994  29C4               	incf	processEnumeration@enumResult& (0+255),w,b
 23117   007996  B4D8               	btfsc	status,2,c
 23118   007998  D017               	goto	l22492
 23119                           
 23120                           ; BSR set to: 1
 23121                           ;../../VLCBlib_PIC/can18_ecan.c: 932:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 23122   00799A  51C6               	movf	processEnumeration@i& (0+255),w,b
 23123   00799C  0D08               	mullw	8
 23124   00799E  CFF3 F1C5          	movff	prodl,processEnumeration@newCanId
 23125   0079A2  D003               	goto	l22482
 23126   0079A4                     l22478:
 23127                           
 23128                           ; BSR set to: 1
 23129                           ;../../VLCBlib_PIC/can18_ecan.c: 933:                         enumResult >>= 1;
 23130   0079A4  90D8               	bcf	status,0,c
 23131   0079A6  33C4               	rrcf	processEnumeration@enumResult& (0+255),f,b
 23132                           
 23133                           ; BSR set to: 1
 23134                           ;../../VLCBlib_PIC/can18_ecan.c: 934:                     }
 23135   0079A8  2BC5               	incf	processEnumeration@newCanId& (0+255),f,b
 23136   0079AA                     l22482:
 23137                           
 23138                           ; BSR set to: 1
 23139   0079AA  B1C4               	btfsc	processEnumeration@enumResult& (0+255),0,b
 23140   0079AC  D7FB               	goto	l22478
 23141                           
 23142                           ; BSR set to: 1
 23143                           ;../../VLCBlib_PIC/can18_ecan.c: 935:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 23144   0079AE  51C5               	movf	processEnumeration@newCanId& (0+255),w,b
 23145   0079B0  B4D8               	btfsc	status,2,c
 23146   0079B2  D00A               	goto	l22492
 23147                           
 23148                           ; BSR set to: 1
 23149   0079B4  0E64               	movlw	100
 23150   0079B6  61C5               	cpfslt	processEnumeration@newCanId& (0+255),b
 23151   0079B8  D007               	goto	l22492
 23152                           
 23153                           ; BSR set to: 1
 23154                           ;../../VLCBlib_PIC/can18_ecan.c: 936:                         canId = newCanId;
 23155   0079BA  C1C5  F0B9         	movff	processEnumeration@newCanId,_canId
 23156                           
 23157                           ; BSR set to: 1
 23158                           ;../../VLCBlib_PIC/can18_ecan.c: 937:                         setNewCanId(canId);
 23159   0079BE  0100               	movlb	0	; () banked
 23160   0079C0  51B9               	movf	_canId& (0+255),w,b
 23161   0079C2  ECDB  F059         	call	_setNewCanId
 23162                           
 23163                           ;../../VLCBlib_PIC/can18_ecan.c: 938:                     } else {
 23164   0079C6  D004               	goto	l22500
 23165   0079C8                     l22492:
 23166                           
 23167                           ; BSR set to: 1
 23168                           ;../../VLCBlib_PIC/can18_ecan.c: 940:                         canDiagnostics[0x10].asUin
      +                          t++;
 23169   0079C8  4B8A               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 23170   0079CA  2B8B               	incf	(_canDiagnostics+33)& (0+255),f,b
 23171                           
 23172                           ; BSR set to: 1
 23173                           ;../../VLCBlib_PIC/can18_ecan.c: 941:                         updateModuleErrorStatus();
 23174   0079CC  ECEF  F063         	call	_updateModuleErrorStatus	;wreg free
 23175   0079D0                     l22500:
 23176                           
 23177                           ;../../VLCBlib_PIC/can18_ecan.c: 953:                 enumerationState = NO_ENUMERATION;
 23178   0079D0  0E00               	movlw	0
 23179   0079D2  0100               	movlb	0	; () banked
 23180   0079D4  6FB7               	movwf	_enumerationState& (0+255),b
 23181   0079D6  0012               	return	
 23182   0079D8                     l22504:
 23183   0079D8  0100               	movlb	0	; () banked
 23184   0079DA  51B7               	movf	_enumerationState& (0+255),w,b
 23185   0079DC  0101               	movlb	1	; () banked
 23186   0079DE  6FC0               	movwf	??_processEnumeration& (0+255),b
 23187   0079E0  6BC1               	clrf	(??_processEnumeration+1)& (0+255),b
 23188                           
 23189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23190                           ; Switch size 1, requested type "simple"
 23191                           ; Number of cases is 1, Range of values is 0 to 0
 23192                           ; switch strategies available:
 23193                           ; Name         Instructions Cycles
 23194                           ; simple_byte            4     3 (average)
 23195                           ;	Chosen strategy is simple_byte
 23196   0079E2  51C1               	movf	(??_processEnumeration+1)& (0+255),w,b
 23197   0079E4  0A00               	xorlw	0	; case 0
 23198   0079E6  A4D8               	btfss	status,2,c
 23199   0079E8  0012               	return	
 23200                           
 23201                           ; BSR set to: 1
 23202                           ; Switch size 1, requested type "simple"
 23203                           ; Number of cases is 2, Range of values is 1 to 2
 23204                           ; switch strategies available:
 23205                           ; Name         Instructions Cycles
 23206                           ; simple_byte            7     4 (average)
 23207                           ;	Chosen strategy is simple_byte
 23208   0079EA  51C0               	movf	??_processEnumeration& (0+255),w,b
 23209   0079EC  0A01               	xorlw	1	; case 1
 23210   0079EE  B4D8               	btfsc	status,2,c
 23211   0079F0  D758               	goto	l22442
 23212   0079F2  0A03               	xorlw	3	; case 2
 23213   0079F4  A4D8               	btfss	status,2,c
 23214   0079F6  0012               	return	
 23215   0079F8  D796               	goto	l22464
 23216   0079FA                     __end_of_processEnumeration:
 23217                           	callstack 0
 23218                           
 23219 ;; *************** function _setNewCanId *****************
 23220 ;; Defined at:
 23221 ;;		line 966 in file "../../VLCBlib_PIC/can18_ecan.c"
 23222 ;; Parameters:    Size  Location     Type
 23223 ;;  newCanId        1    wreg     unsigned char 
 23224 ;; Auto vars:     Size  Location     Type
 23225 ;;  newCanId        1    2[BANK1 ] unsigned char 
 23226 ;; Return value:  Size  Location     Type
 23227 ;;                  1    wreg      enum E13097
 23228 ;; Registers used:
 23229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23230 ;; Tracked objects:
 23231 ;;		On entry : 0/0
 23232 ;;		On exit  : 0/0
 23233 ;;		Unchanged: 0/0
 23234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23236 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23238 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23239 ;;Total ram usage:        1 bytes
 23240 ;; Hardware stack levels used: 1
 23241 ;; Hardware stack levels required when called: 18
 23242 ;; This function calls:
 23243 ;;		_writeNVM
 23244 ;; This function is called by:
 23245 ;;		_processEnumeration
 23246 ;; This function uses a non-reentrant model
 23247 ;;
 23248                           
 23249                           	psect	text82
 23250   00B3B6                     __ptext82:
 23251                           	callstack 0
 23252   00B3B6                     _setNewCanId:
 23253                           	callstack 9
 23254                           
 23255                           ;incstack = 0
 23256                           ;setNewCanId@newCanId stored from wreg
 23257   00B3B6  0101               	movlb	1	; () banked
 23258   00B3B8  6FBF               	movwf	setNewCanId@newCanId& (0+255),b
 23259                           
 23260                           ;../../VLCBlib_PIC/can18_ecan.c: 967:     if ((newCanId >= 1) && (newCanId <= 99)) {
 23261   00B3BA  0101               	movlb	1	; () banked
 23262   00B3BC  51BF               	movf	setNewCanId@newCanId& (0+255),w,b
 23263   00B3BE  B4D8               	btfsc	status,2,c
 23264   00B3C0  0012               	return	
 23265                           
 23266                           ; BSR set to: 1
 23267   00B3C2  0E64               	movlw	100
 23268   00B3C4  61BF               	cpfslt	setNewCanId@newCanId& (0+255),b
 23269   00B3C6  0012               	return	
 23270                           
 23271                           ; BSR set to: 1
 23272                           ;../../VLCBlib_PIC/can18_ecan.c: 968:         canId = newCanId;
 23273   00B3C8  C1BF  F0B9         	movff	setNewCanId@newCanId,_canId
 23274                           
 23275                           ; BSR set to: 1
 23276                           ;../../VLCBlib_PIC/can18_ecan.c: 971:         TXB1SIDH &= 0b11110000;
 23277   00B3CC  0EF0               	movlw	240
 23278   00B3CE  010F               	movlb	15	; () banked
 23279   00B3D0  1711               	andwf	17,f,b	;volatile
 23280                           
 23281                           ;../../VLCBlib_PIC/can18_ecan.c: 972:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 23282   00B3D2  0101               	movlb	1	; () banked
 23283   00B3D4  39BF               	swapf	setNewCanId@newCanId& (0+255),w,b
 23284   00B3D6  46E8               	rlncf	wreg,f,c
 23285   00B3D8  0B1F               	andlw	31
 23286   00B3DA  0B0F               	andlw	15
 23287   00B3DC  010F               	movlb	15	; () banked
 23288   00B3DE  1311               	iorwf	17,f,b	;volatile
 23289                           
 23290                           ; BSR set to: 15
 23291                           ;../../VLCBlib_PIC/can18_ecan.c: 973:         TXB1SIDL = TXB0SIDL;
 23292   00B3E0  CF22 FF12          	movff	3874,3858	;volatile
 23293                           
 23294                           ;../../VLCBlib_PIC/can18_ecan.c: 975:         TXB2SIDH &= 0b11110000;
 23295   00B3E4  0EF0               	movlw	240
 23296   00B3E6  1701               	andwf	1,f,b	;volatile
 23297                           
 23298                           ;../../VLCBlib_PIC/can18_ecan.c: 976:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 23299   00B3E8  0101               	movlb	1	; () banked
 23300   00B3EA  39BF               	swapf	setNewCanId@newCanId& (0+255),w,b
 23301   00B3EC  46E8               	rlncf	wreg,f,c
 23302   00B3EE  0B1F               	andlw	31
 23303   00B3F0  0B0F               	andlw	15
 23304   00B3F2  010F               	movlb	15	; () banked
 23305   00B3F4  1301               	iorwf	1,f,b	;volatile
 23306                           
 23307                           ; BSR set to: 15
 23308                           ;../../VLCBlib_PIC/can18_ecan.c: 977:         TXB2SIDL = TXB0SIDL;
 23309   00B3F6  CF22 FF02          	movff	3874,3842	;volatile
 23310                           
 23311                           ; BSR set to: 15
 23312                           ;../../VLCBlib_PIC/can18_ecan.c: 979:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 23313   00B3FA  0EFE               	movlw	254
 23314   00B3FC  0100               	movlb	0	; () banked
 23315   00B3FE  6FA4               	movwf	writeNVM@index& (0+255),b
 23316   00B400  0E03               	movlw	3
 23317   00B402  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 23318   00B404  0E00               	movlw	0
 23319   00B406  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 23320   00B408  C1BF  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 23321   00B40C  0E00               	movlw	0
 23322   00B40E  EC61  F05D         	call	_writeNVM
 23323                           
 23324                           ;../../VLCBlib_PIC/can18_ecan.c: 981:         canDiagnostics[0x0F].asUint++;
 23325   00B412  0101               	movlb	1	; () banked
 23326   00B414  4B88               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 23327   00B416  2B89               	incf	(_canDiagnostics+31)& (0+255),f,b
 23328                           
 23329                           ; BSR set to: 1
 23330   00B418  0012               	return		;funcret
 23331   00B41A                     __end_of_setNewCanId:
 23332                           	callstack 0
 23333                           
 23334 ;; *************** function _pop *****************
 23335 ;; Defined at:
 23336 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 23337 ;; Parameters:    Size  Location     Type
 23338 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 23339 ;;		 -> txQueue(5), rxQueue(5), 
 23340 ;; Auto vars:     Size  Location     Type
 23341 ;;  ret             2   52[BANK0 ] PTR struct Message
 23342 ;;		 -> txBuffers(72), rxBuffers(288), 
 23343 ;; Return value:  Size  Location     Type
 23344 ;;                  2   45[BANK0 ] PTR struct Message
 23345 ;; Registers used:
 23346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23347 ;; Tracked objects:
 23348 ;;		On entry : 0/0
 23349 ;;		On exit  : 0/0
 23350 ;;		Unchanged: 0/0
 23351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23353 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23354 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23355 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23356 ;;Total ram usage:        9 bytes
 23357 ;; Hardware stack levels used: 1
 23358 ;; Hardware stack levels required when called: 12
 23359 ;; This function calls:
 23360 ;;		Nothing
 23361 ;; This function is called by:
 23362 ;;		_canReceiveMessage
 23363 ;; This function uses a non-reentrant model
 23364 ;;
 23365                           
 23366                           	psect	text83
 23367   00A020                     __ptext83:
 23368                           	callstack 0
 23369   00A020                     _pop:
 23370                           	callstack 16
 23371                           
 23372                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 23373                           
 23374                           ; BSR set to: 1
 23375                           ;incstack = 0
 23376   00A020  0100               	movlb	0	; () banked
 23377   00A022  518D               	movf	pop@q& (0+255),w,b
 23378   00A024  6ED9               	movwf	fsr2l,c
 23379   00A026  6ADA               	clrf	fsr2h,c
 23380   00A028  0E02               	movlw	2
 23381   00A02A  26D9               	addwf	fsr2l,f,c
 23382   00A02C  518D               	movf	pop@q& (0+255),w,b
 23383   00A02E  6EE1               	movwf	fsr1l,c
 23384   00A030  6AE2               	clrf	fsr1h,c
 23385   00A032  0E03               	movlw	3
 23386   00A034  26E1               	addwf	fsr1l,f,c
 23387   00A036  50DE               	movf	postinc2,w,c
 23388   00A038  18E6               	xorwf	postinc1,w,c
 23389   00A03A  A4D8               	btfss	status,2,c
 23390   00A03C  D005               	goto	l22332
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 23394   00A03E  0E00               	movlw	0
 23395   00A040  6F8D               	movwf	?_pop& (0+255),b
 23396   00A042  0E00               	movlw	0
 23397   00A044  6F8E               	movwf	(?_pop+1)& (0+255),b
 23398   00A046  0012               	return	
 23399   00A048                     l22332:
 23400                           
 23401                           ; BSR set to: 0
 23402                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 23403   00A048  518D               	movf	pop@q& (0+255),w,b
 23404   00A04A  6ED9               	movwf	fsr2l,c
 23405   00A04C  6ADA               	clrf	fsr2h,c
 23406   00A04E  0E02               	movlw	2
 23407   00A050  26D9               	addwf	fsr2l,f,c
 23408   00A052  50DF               	movf	indf2,w,c
 23409   00A054  6F8F               	movwf	??_pop& (0+255),b
 23410   00A056  518F               	movf	??_pop& (0+255),w,b
 23411   00A058  0D09               	mullw	9
 23412   00A05A  CFF3 F090          	movff	prodl,??_pop+1
 23413   00A05E  CFF4 F091          	movff	prodh,??_pop+2
 23414   00A062  518D               	movf	pop@q& (0+255),w,b
 23415   00A064  6ED9               	movwf	fsr2l,c
 23416   00A066  6ADA               	clrf	fsr2h,c
 23417   00A068  CFDE F092          	movff	postinc2,??_pop+3
 23418   00A06C  CFDD F093          	movff	postdec2,??_pop+4
 23419   00A070  5190               	movf	(??_pop+1)& (0+255),w,b
 23420   00A072  2592               	addwf	(??_pop+3)& (0+255),w,b
 23421   00A074  6F94               	movwf	pop@ret& (0+255),b
 23422   00A076  5191               	movf	(??_pop+2)& (0+255),w,b
 23423   00A078  2193               	addwfc	(??_pop+4)& (0+255),w,b
 23424   00A07A  6F95               	movwf	(pop@ret+1)& (0+255),b
 23425                           
 23426                           ; BSR set to: 0
 23427   00A07C  518D               	movf	pop@q& (0+255),w,b
 23428   00A07E  6ED9               	movwf	fsr2l,c
 23429   00A080  6ADA               	clrf	fsr2h,c
 23430   00A082  0E02               	movlw	2
 23431   00A084  26D9               	addwf	fsr2l,f,c
 23432   00A086  2ADF               	incf	indf2,f,c
 23433                           
 23434                           ; BSR set to: 0
 23435                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 23436   00A088  518D               	movf	pop@q& (0+255),w,b
 23437   00A08A  6ED9               	movwf	fsr2l,c
 23438   00A08C  6ADA               	clrf	fsr2h,c
 23439   00A08E  0E04               	movlw	4
 23440   00A090  26D9               	addwf	fsr2l,f,c
 23441   00A092  518D               	movf	pop@q& (0+255),w,b
 23442   00A094  6EE1               	movwf	fsr1l,c
 23443   00A096  6AE2               	clrf	fsr1h,c
 23444   00A098  0E02               	movlw	2
 23445   00A09A  26E1               	addwf	fsr1l,f,c
 23446   00A09C  50DE               	movf	postinc2,w,c
 23447   00A09E  5CE6               	subwf	postinc1,w,c
 23448   00A0A0  A0D8               	btfss	status,0,c
 23449   00A0A2  D006               	goto	l22340
 23450                           
 23451                           ; BSR set to: 0
 23452   00A0A4  518D               	movf	pop@q& (0+255),w,b
 23453   00A0A6  6ED9               	movwf	fsr2l,c
 23454   00A0A8  6ADA               	clrf	fsr2h,c
 23455   00A0AA  0E02               	movlw	2
 23456   00A0AC  26D9               	addwf	fsr2l,f,c
 23457   00A0AE  6ADF               	clrf	indf2,c
 23458   00A0B0                     l22340:
 23459                           
 23460                           ; BSR set to: 0
 23461                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 23462   00A0B0  C094  F08D         	movff	pop@ret,?_pop
 23463   00A0B4  C095  F08E         	movff	pop@ret+1,?_pop+1
 23464                           
 23465                           ; BSR set to: 0
 23466   00A0B8  0012               	return		;funcret
 23467   00A0BA                     __end_of_pop:
 23468                           	callstack 0
 23469                           
 23470 ;; *************** function _memcpy *****************
 23471 ;; Defined at:
 23472 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 23473 ;; Parameters:    Size  Location     Type
 23474 ;;  d1              2   45[BANK0 ] PTR void 
 23475 ;;		 -> poll@m(9), 
 23476 ;;  s1              2   47[BANK0 ] PTR const void 
 23477 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23478 ;;  n               2   49[BANK0 ] unsigned int 
 23479 ;; Auto vars:     Size  Location     Type
 23480 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 23481 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23482 ;;  d               2   52[BANK0 ] PTR unsigned char 
 23483 ;;		 -> poll@m(9), 
 23484 ;;  tmp             1   51[BANK0 ] unsigned char 
 23485 ;; Return value:  Size  Location     Type
 23486 ;;                  2   45[BANK0 ] PTR void 
 23487 ;; Registers used:
 23488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23489 ;; Tracked objects:
 23490 ;;		On entry : 0/0
 23491 ;;		On exit  : 0/0
 23492 ;;		Unchanged: 0/0
 23493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23494 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23495 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23497 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23498 ;;Total ram usage:       11 bytes
 23499 ;; Hardware stack levels used: 1
 23500 ;; Hardware stack levels required when called: 12
 23501 ;; This function calls:
 23502 ;;		Nothing
 23503 ;; This function is called by:
 23504 ;;		_canReceiveMessage
 23505 ;; This function uses a non-reentrant model
 23506 ;;
 23507                           
 23508                           	psect	text84
 23509   00BDA4                     __ptext84:
 23510                           	callstack 0
 23511   00BDA4                     _memcpy:
 23512                           	callstack 16
 23513                           
 23514                           ; BSR set to: 0
 23515                           ;incstack = 0
 23516   00BDA4  C08F  F096         	movff	memcpy@s1,memcpy@s
 23517   00BDA8  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 23518   00BDAC  C08D  F094         	movff	memcpy@d1,memcpy@d
 23519   00BDB0  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 23520   00BDB4  D010               	goto	l22520
 23521   00BDB6                     l22512:
 23522                           
 23523                           ; BSR set to: 0
 23524   00BDB6  C096  FFD9         	movff	memcpy@s,fsr2l
 23525   00BDBA  C097  FFDA         	movff	memcpy@s+1,fsr2h
 23526   00BDBE  50DF               	movf	indf2,w,c
 23527   00BDC0  6F93               	movwf	memcpy@tmp& (0+255),b
 23528                           
 23529                           ; BSR set to: 0
 23530   00BDC2  4B96               	infsnz	memcpy@s& (0+255),f,b
 23531   00BDC4  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 23532                           
 23533                           ; BSR set to: 0
 23534   00BDC6  C094  FFD9         	movff	memcpy@d,fsr2l
 23535   00BDCA  C095  FFDA         	movff	memcpy@d+1,fsr2h
 23536   00BDCE  C093  FFDF         	movff	memcpy@tmp,indf2
 23537                           
 23538                           ; BSR set to: 0
 23539   00BDD2  4B94               	infsnz	memcpy@d& (0+255),f,b
 23540   00BDD4  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 23541   00BDD6                     l22520:
 23542   00BDD6  0100               	movlb	0	; () banked
 23543   00BDD8  0791               	decf	memcpy@n& (0+255),f,b
 23544   00BDDA  A0D8               	btfss	status,0,c
 23545   00BDDC  0792               	decf	(memcpy@n+1)& (0+255),f,b
 23546   00BDDE  2991               	incf	memcpy@n& (0+255),w,b
 23547   00BDE0  E1EA               	bnz	l22512
 23548   00BDE2  2992               	incf	(memcpy@n+1)& (0+255),w,b
 23549   00BDE4  B4D8               	btfsc	status,2,c
 23550   00BDE6  0012               	return	
 23551   00BDE8  D7E6               	goto	l22512
 23552   00BDEA                     __end_of_memcpy:
 23553                           	callstack 0
 23554                           
 23555 ;; *************** function _handleSelfEnumeration *****************
 23556 ;; Defined at:
 23557 ;;		line 816 in file "../../VLCBlib_PIC/can18_ecan.c"
 23558 ;; Parameters:    Size  Location     Type
 23559 ;;  p               2   55[BANK0 ] PTR unsigned char 
 23560 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23561 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23562 ;;		 -> NULL(0), 
 23563 ;; Auto vars:     Size  Location     Type
 23564 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 23565 ;; Return value:  Size  Location     Type
 23566 ;;                  1    wreg      enum E13077
 23567 ;; Registers used:
 23568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23569 ;; Tracked objects:
 23570 ;;		On entry : 0/0
 23571 ;;		On exit  : 0/0
 23572 ;;		Unchanged: 0/0
 23573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23576 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23577 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23578 ;;Total ram usage:        7 bytes
 23579 ;; Hardware stack levels used: 1
 23580 ;; Hardware stack levels required when called: 13
 23581 ;; This function calls:
 23582 ;;		_tickGet
 23583 ;; This function is called by:
 23584 ;;		_canReceiveMessage
 23585 ;; This function uses a non-reentrant model
 23586 ;;
 23587                           
 23588                           	psect	text85
 23589   008260                     __ptext85:
 23590                           	callstack 0
 23591   008260                     _handleSelfEnumeration:
 23592                           	callstack 15
 23593                           
 23594                           ;../../VLCBlib_PIC/can18_ecan.c: 817:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 821:     if (p[5] & 0x40 ) {
 23595                           
 23596                           ; BSR set to: 0
 23597                           ;incstack = 0
 23598   008260  0100               	movlb	0	; () banked
 23599   008262  EE20 F005          	lfsr	2,5
 23600   008266  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23601   008268  26D9               	addwf	fsr2l,f,c
 23602   00826A  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23603   00826C  22DA               	addwfc	fsr2h,f,c
 23604   00826E  ACDF               	btfss	indf2,6,c
 23605   008270  D00E               	goto	l22532
 23606                           
 23607                           ; BSR set to: 0
 23608                           ;../../VLCBlib_PIC/can18_ecan.c: 823:         TXB2CONbits.TXREQ = 1;
 23609   008272  010F               	movlb	15	; () banked
 23610   008274  8700               	bsf	0,3,b	;volatile
 23611                           
 23612                           ; BSR set to: 15
 23613                           ;../../VLCBlib_PIC/can18_ecan.c: 824:         enumerationStartTime.val = tickGet();
 23614   008276  ECE5  F05B         	call	_tickGet	;wreg free
 23615   00827A  C08D  F03B         	movff	?_tickGet,_enumerationStartTime
 23616   00827E  C08E  F03C         	movff	?_tickGet+1,_enumerationStartTime+1
 23617   008282  C08F  F03D         	movff	?_tickGet+2,_enumerationStartTime+2
 23618   008286  C090  F03E         	movff	?_tickGet+3,_enumerationStartTime+3
 23619                           
 23620                           ;../../VLCBlib_PIC/can18_ecan.c: 825:         return NOT_RECEIVED;
 23621   00828A  0E00               	movlw	0
 23622   00828C  0012               	return	
 23623   00828E                     l22532:
 23624                           
 23625                           ; BSR set to: 0
 23626                           ;../../VLCBlib_PIC/can18_ecan.c: 827:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 23627   00828E  EE20 F002          	lfsr	2,2
 23628   008292  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23629   008294  26D9               	addwf	fsr2l,f,c
 23630   008296  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23631   008298  22DA               	addwfc	fsr2h,f,c
 23632   00829A  50DF               	movf	indf2,w,c
 23633   00829C  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23634   00829E  0E05               	movlw	5
 23635   0082A0  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23636   0082A2                     u23785:
 23637   0082A2  90D8               	bcf	status,0,c
 23638   0082A4  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 23639   0082A6  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 23640   0082A8  D7FC               	goto	u23785
 23641   0082AA  EE20 F001          	lfsr	2,1
 23642   0082AE  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23643   0082B0  26D9               	addwf	fsr2l,f,c
 23644   0082B2  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23645   0082B4  22DA               	addwfc	fsr2h,f,c
 23646   0082B6  50DF               	movf	indf2,w,c
 23647   0082B8  0D08               	mullw	8
 23648   0082BA  50F3               	movf	243,w,c
 23649   0082BC  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 23650   0082BE  0B7F               	andlw	127
 23651   0082C0  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 23652                           
 23653                           ; BSR set to: 0
 23654                           ;../../VLCBlib_PIC/can18_ecan.c: 829:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 23655   0082C2  0E02               	movlw	2
 23656   0082C4  19B7               	xorwf	_enumerationState& (0+255),w,b
 23657   0082C6  B4D8               	btfsc	status,2,c
 23658   0082C8  D00C               	goto	u23800
 23659                           
 23660                           ; BSR set to: 0
 23661   0082CA  EE20 F005          	lfsr	2,5
 23662   0082CE  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23663   0082D0  26D9               	addwf	fsr2l,f,c
 23664   0082D2  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23665   0082D4  22DA               	addwfc	fsr2h,f,c
 23666   0082D6  50DF               	movf	indf2,w,c
 23667   0082D8  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23668   0082DA  0E0F               	movlw	15
 23669   0082DC  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23670   0082DE  A4D8               	btfss	status,2,c
 23671   0082E0  D01B               	goto	l22540
 23672   0082E2                     u23800:
 23673                           
 23674                           ; BSR set to: 0
 23675                           ;../../VLCBlib_PIC/can18_ecan.c: 830:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 23676   0082E2  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 23677   0082E6  0E07               	movlw	7
 23678   0082E8  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23679   0082EA  0E01               	movlw	1
 23680   0082EC  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23681   0082EE  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 23682   0082F0  D002               	goto	u23814
 23683   0082F2                     u23815:
 23684   0082F2  90D8               	bcf	status,0,c
 23685   0082F4  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 23686   0082F6                     u23814:
 23687   0082F6  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 23688   0082F8  D7FC               	goto	u23815
 23689   0082FA  0100               	movlb	0	; () banked
 23690   0082FC  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23691   0082FE  46E8               	rlncf	wreg,f,c
 23692   008300  0B1F               	andlw	31
 23693   008302  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 23694   008304  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 23695   008306  0E34               	movlw	low _enumerationResults
 23696   008308  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 23697   00830A  6ED9               	movwf	fsr2l,c
 23698   00830C  0E02               	movlw	high _enumerationResults
 23699   00830E  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 23700   008310  6EDA               	movwf	fsr2h,c
 23701   008312  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 23702   008314  12DF               	iorwf	indf2,f,c
 23703                           
 23704                           ;../../VLCBlib_PIC/can18_ecan.c: 831:     } else {
 23705   008316  D016               	goto	l22550
 23706   008318                     l22540:
 23707                           
 23708                           ; BSR set to: 0
 23709                           ;../../VLCBlib_PIC/can18_ecan.c: 832:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 23710   008318  51B7               	movf	_enumerationState& (0+255),w,b
 23711   00831A  A4D8               	btfss	status,2,c
 23712   00831C  D013               	goto	l22550
 23713                           
 23714                           ; BSR set to: 0
 23715   00831E  51B9               	movf	_canId& (0+255),w,b
 23716   008320  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23717   008322  A4D8               	btfss	status,2,c
 23718   008324  D00F               	goto	l22550
 23719                           
 23720                           ; BSR set to: 0
 23721                           ;../../VLCBlib_PIC/can18_ecan.c: 835:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 23722   008326  0E01               	movlw	1
 23723   008328  6FB7               	movwf	_enumerationState& (0+255),b
 23724                           
 23725                           ; BSR set to: 0
 23726                           ;../../VLCBlib_PIC/can18_ecan.c: 836:             canDiagnostics[0x0E].asUint++;
 23727   00832A  0101               	movlb	1	; () banked
 23728   00832C  4B86               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 23729   00832E  2B87               	incf	(_canDiagnostics+29)& (0+255),f,b
 23730                           
 23731                           ; BSR set to: 1
 23732                           ;../../VLCBlib_PIC/can18_ecan.c: 837:             enumerationStartTime.val = tickGet();
 23733   008330  ECE5  F05B         	call	_tickGet	;wreg free
 23734   008334  C08D  F03B         	movff	?_tickGet,_enumerationStartTime
 23735   008338  C08E  F03C         	movff	?_tickGet+1,_enumerationStartTime+1
 23736   00833C  C08F  F03D         	movff	?_tickGet+2,_enumerationStartTime+2
 23737   008340  C090  F03E         	movff	?_tickGet+3,_enumerationStartTime+3
 23738   008344                     l22550:
 23739                           
 23740                           ;../../VLCBlib_PIC/can18_ecan.c: 841:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 23741   008344  0100               	movlb	0	; () banked
 23742   008346  EE20 F005          	lfsr	2,5
 23743   00834A  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23744   00834C  26D9               	addwf	fsr2l,f,c
 23745   00834E  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23746   008350  22DA               	addwfc	fsr2h,f,c
 23747   008352  50DF               	movf	indf2,w,c
 23748   008354  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23749   008356  0E0F               	movlw	15
 23750   008358  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23751   00835A  B4D8               	btfsc	status,2,c
 23752   00835C  D002               	goto	u23840
 23753   00835E  0E01               	movlw	1
 23754   008360  0012               	return	
 23755   008362                     u23840:
 23756   008362  0E00               	movlw	0
 23757   008364  0012               	return		;funcret
 23758   008366                     __end_of_handleSelfEnumeration:
 23759                           	callstack 0
 23760                           
 23761 ;; *************** function _getNumRxBuffersInUse *****************
 23762 ;; Defined at:
 23763 ;;		line 470 in file "../../VLCBlib_PIC/can18_ecan.c"
 23764 ;; Parameters:    Size  Location     Type
 23765 ;;		None
 23766 ;; Auto vars:     Size  Location     Type
 23767 ;;  ptr             2   50[BANK0 ] PTR unsigned char 
 23768 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23769 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23770 ;;		 -> NULL(0), 
 23771 ;;  i               1   53[BANK0 ] unsigned char 
 23772 ;;  no              1   52[BANK0 ] unsigned char 
 23773 ;; Return value:  Size  Location     Type
 23774 ;;                  1    wreg      unsigned char 
 23775 ;; Registers used:
 23776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23777 ;; Tracked objects:
 23778 ;;		On entry : 0/0
 23779 ;;		On exit  : 0/0
 23780 ;;		Unchanged: 0/0
 23781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23783 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23785 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23786 ;;Total ram usage:        4 bytes
 23787 ;; Hardware stack levels used: 1
 23788 ;; Hardware stack levels required when called: 13
 23789 ;; This function calls:
 23790 ;;		_getBufferPointer
 23791 ;;		_quantity
 23792 ;; This function is called by:
 23793 ;;		_canGetDiagnostic
 23794 ;;		_canReceiveMessage
 23795 ;; This function uses a non-reentrant model
 23796 ;;
 23797                           
 23798                           	psect	text86
 23799   00BF20                     __ptext86:
 23800                           	callstack 0
 23801   00BF20                     _getNumRxBuffersInUse:
 23802                           	callstack 13
 23803                           
 23804                           ;../../VLCBlib_PIC/can18_ecan.c: 471:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 47
      +                          2:     uint8_t i;;../../VLCBlib_PIC/can18_ecan.c: 473:     uint8_t * ptr;;../../VLCBlib_
      +                          PIC/can18_ecan.c: 475:     no = quantity(&rxQueue);
 23805                           
 23806                           ;incstack = 0
 23807   00BF20  0E4F               	movlw	low _rxQueue
 23808   00BF22  0100               	movlb	0	; () banked
 23809   00BF24  6F8D               	movwf	quantity@q& (0+255),b
 23810   00BF26  EC03  F060         	call	_quantity	;wreg free
 23811   00BF2A  0100               	movlb	0	; () banked
 23812   00BF2C  6F94               	movwf	getNumRxBuffersInUse@no& (0+255),b
 23813                           
 23814                           ; BSR set to: 0
 23815                           ;../../VLCBlib_PIC/can18_ecan.c: 476:     for (i=0; i<8; i++) {
 23816   00BF2E  0E00               	movlw	0
 23817   00BF30  6F95               	movwf	getNumRxBuffersInUse@i& (0+255),b
 23818   00BF32                     l20308:
 23819                           
 23820                           ; BSR set to: 0
 23821                           ;../../VLCBlib_PIC/can18_ecan.c: 477:         ptr = getBufferPointer(i);
 23822   00BF32  5195               	movf	getNumRxBuffersInUse@i& (0+255),w,b
 23823   00BF34  EC8D  F051         	call	_getBufferPointer
 23824   00BF38  C08D  F092         	movff	?_getBufferPointer,getNumRxBuffersInUse@ptr
 23825   00BF3C  C08E  F093         	movff	?_getBufferPointer+1,getNumRxBuffersInUse@ptr+1
 23826                           
 23827                           ;../../VLCBlib_PIC/can18_ecan.c: 478:         if (ptr[0] & 0x80) {
 23828   00BF40  C092  FFD9         	movff	getNumRxBuffersInUse@ptr,fsr2l
 23829   00BF44  C093  FFDA         	movff	getNumRxBuffersInUse@ptr+1,fsr2h
 23830   00BF48  0100               	movlb	0	; () banked
 23831   00BF4A  BEDF               	btfsc	indf2,7,c
 23832                           
 23833                           ; BSR set to: 0
 23834                           ;../../VLCBlib_PIC/can18_ecan.c: 479:             no++;
 23835   00BF4C  2B94               	incf	getNumRxBuffersInUse@no& (0+255),f,b
 23836                           
 23837                           ; BSR set to: 0
 23838                           ;../../VLCBlib_PIC/can18_ecan.c: 481:     }
 23839                           
 23840                           ;../../VLCBlib_PIC/can18_ecan.c: 480:         }
 23841   00BF4E  2B95               	incf	getNumRxBuffersInUse@i& (0+255),f,b
 23842                           
 23843                           ; BSR set to: 0
 23844   00BF50  0E07               	movlw	7
 23845   00BF52  6595               	cpfsgt	getNumRxBuffersInUse@i& (0+255),b
 23846   00BF54  D7EE               	goto	l20308
 23847                           
 23848                           ; BSR set to: 0
 23849                           ;../../VLCBlib_PIC/can18_ecan.c: 482:     return no;
 23850   00BF56  5194               	movf	getNumRxBuffersInUse@no& (0+255),w,b
 23851                           
 23852                           ; BSR set to: 0
 23853   00BF58  0012               	return		;funcret
 23854   00BF5A                     __end_of_getNumRxBuffersInUse:
 23855                           	callstack 0
 23856                           
 23857 ;; *************** function _getBufferPointer *****************
 23858 ;; Defined at:
 23859 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 23860 ;; Parameters:    Size  Location     Type
 23861 ;;  b               1    wreg     unsigned char 
 23862 ;; Auto vars:     Size  Location     Type
 23863 ;;  b               1   47[BANK0 ] unsigned char 
 23864 ;; Return value:  Size  Location     Type
 23865 ;;                  2   45[BANK0 ] PTR unsigned char 
 23866 ;; Registers used:
 23867 ;;		wreg, status,2, status,0
 23868 ;; Tracked objects:
 23869 ;;		On entry : 0/0
 23870 ;;		On exit  : 0/0
 23871 ;;		Unchanged: 0/0
 23872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23876 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23877 ;;Total ram usage:        3 bytes
 23878 ;; Hardware stack levels used: 1
 23879 ;; Hardware stack levels required when called: 12
 23880 ;; This function calls:
 23881 ;;		Nothing
 23882 ;; This function is called by:
 23883 ;;		_getNumRxBuffersInUse
 23884 ;;		_canReceiveMessage
 23885 ;; This function uses a non-reentrant model
 23886 ;;
 23887                           
 23888                           	psect	text87
 23889   00A31A                     __ptext87:
 23890                           	callstack 0
 23891   00A31A                     _getBufferPointer:
 23892                           	callstack 13
 23893                           
 23894                           ; BSR set to: 0
 23895                           ;incstack = 0
 23896                           ;getBufferPointer@b stored from wreg
 23897   00A31A  0100               	movlb	0	; () banked
 23898   00A31C  6F8F               	movwf	getBufferPointer@b& (0+255),b
 23899                           
 23900                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 23901   00A31E  D02D               	goto	l19960
 23902   00A320                     l19922:
 23903                           
 23904                           ; BSR set to: 0
 23905                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 23906   00A320  0E60               	movlw	96
 23907   00A322  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23908   00A324  0E0F               	movlw	15
 23909   00A326  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23910   00A328  0012               	return	
 23911   00A32A                     l19926:
 23912                           
 23913                           ; BSR set to: 0
 23914                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 23915   00A32A  0E30               	movlw	48
 23916   00A32C  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23917   00A32E  0E0F               	movlw	15
 23918   00A330  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23919   00A332  0012               	return	
 23920   00A334                     l19930:
 23921                           
 23922                           ; BSR set to: 0
 23923                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 23924   00A334  0E80               	movlw	128
 23925   00A336  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23926   00A338  0E0E               	movlw	14
 23927   00A33A  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23928   00A33C  0012               	return	
 23929   00A33E                     l19934:
 23930                           
 23931                           ; BSR set to: 0
 23932                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 23933   00A33E  0E90               	movlw	144
 23934   00A340  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23935   00A342  0E0E               	movlw	14
 23936   00A344  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23937   00A346  0012               	return	
 23938   00A348                     l19938:
 23939                           
 23940                           ; BSR set to: 0
 23941                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 23942   00A348  0EA0               	movlw	160
 23943   00A34A  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23944   00A34C  0E0E               	movlw	14
 23945   00A34E  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23946   00A350  0012               	return	
 23947   00A352                     l19942:
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 23951   00A352  0EB0               	movlw	176
 23952   00A354  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23953   00A356  0E0E               	movlw	14
 23954   00A358  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23955   00A35A  0012               	return	
 23956   00A35C                     l19946:
 23957                           
 23958                           ; BSR set to: 0
 23959                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 23960   00A35C  0EC0               	movlw	192
 23961   00A35E  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23962   00A360  0E0E               	movlw	14
 23963   00A362  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23964   00A364  0012               	return	
 23965   00A366                     l19950:
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 23969   00A366  0ED0               	movlw	208
 23970   00A368  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23971   00A36A  0E0E               	movlw	14
 23972   00A36C  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23973   00A36E  0012               	return	
 23974   00A370                     l19954:
 23975                           
 23976                           ; BSR set to: 0
 23977                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 23978   00A370  0E00               	movlw	0
 23979   00A372  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23980   00A374  0E00               	movlw	0
 23981   00A376  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23982   00A378  0012               	return	
 23983   00A37A                     l19960:
 23984   00A37A  0100               	movlb	0	; () banked
 23985   00A37C  518F               	movf	getBufferPointer@b& (0+255),w,b
 23986                           
 23987                           ; Switch size 1, requested type "simple"
 23988                           ; Number of cases is 8, Range of values is 0 to 7
 23989                           ; switch strategies available:
 23990                           ; Name         Instructions Cycles
 23991                           ; simple_byte           25    13 (average)
 23992                           ;	Chosen strategy is simple_byte
 23993   00A37E  0A00               	xorlw	0	; case 0
 23994   00A380  B4D8               	btfsc	status,2,c
 23995   00A382  D7CE               	goto	l19922
 23996   00A384  0A01               	xorlw	1	; case 1
 23997   00A386  B4D8               	btfsc	status,2,c
 23998   00A388  D7D0               	goto	l19926
 23999   00A38A  0A03               	xorlw	3	; case 2
 24000   00A38C  B4D8               	btfsc	status,2,c
 24001   00A38E  D7D2               	goto	l19930
 24002   00A390  0A01               	xorlw	1	; case 3
 24003   00A392  B4D8               	btfsc	status,2,c
 24004   00A394  D7D4               	goto	l19934
 24005   00A396  0A07               	xorlw	7	; case 4
 24006   00A398  B4D8               	btfsc	status,2,c
 24007   00A39A  D7D6               	goto	l19938
 24008   00A39C  0A01               	xorlw	1	; case 5
 24009   00A39E  B4D8               	btfsc	status,2,c
 24010   00A3A0  D7D8               	goto	l19942
 24011   00A3A2  0A03               	xorlw	3	; case 6
 24012   00A3A4  B4D8               	btfsc	status,2,c
 24013   00A3A6  D7DA               	goto	l19946
 24014   00A3A8  0A01               	xorlw	1	; case 7
 24015   00A3AA  B4D8               	btfsc	status,2,c
 24016   00A3AC  D7DC               	goto	l19950
 24017   00A3AE  D7E0               	goto	l19954
 24018   00A3B0                     __end_of_getBufferPointer:
 24019                           	callstack 0
 24020                           
 24021 ;; *************** function _sendMessage7 *****************
 24022 ;; Defined at:
 24023 ;;		line 1210 in file "../../VLCBlib_PIC/vlcb.c"
 24024 ;; Parameters:    Size  Location     Type
 24025 ;;  opc             1    wreg     enum E12392
 24026 ;;  data1           1    8[BANK1 ] unsigned char 
 24027 ;;  data2           1    9[BANK1 ] unsigned char 
 24028 ;;  data3           1   10[BANK1 ] unsigned char 
 24029 ;;  data4           1   11[BANK1 ] unsigned char 
 24030 ;;  data5           1   12[BANK1 ] unsigned char 
 24031 ;;  data6           1   13[BANK1 ] unsigned char 
 24032 ;;  data7           1   14[BANK1 ] unsigned char 
 24033 ;; Auto vars:     Size  Location     Type
 24034 ;;  opc             1   70[BANK0 ] enum E12392
 24035 ;; Return value:  Size  Location     Type
 24036 ;;                  1    wreg      void 
 24037 ;; Registers used:
 24038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24039 ;; Tracked objects:
 24040 ;;		On entry : 0/0
 24041 ;;		On exit  : 0/0
 24042 ;;		Unchanged: 0/0
 24043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24044 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24047 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24048 ;;Total ram usage:        8 bytes
 24049 ;; Hardware stack levels used: 1
 24050 ;; Hardware stack levels required when called: 16
 24051 ;; This function calls:
 24052 ;;		_sendMessage
 24053 ;; This function is called by:
 24054 ;;		_ackEventProcessMessage
 24055 ;;		_mnsProcessMessage
 24056 ;;		_nerdCallback
 24057 ;; This function uses a non-reentrant model
 24058 ;;
 24059                           
 24060                           	psect	text88
 24061   00C194                     __ptext88:
 24062                           	callstack 0
 24063   00C194                     _sendMessage7:
 24064                           	callstack 11
 24065                           
 24066                           ; BSR set to: 0
 24067                           ;incstack = 0
 24068                           ;sendMessage7@opc stored from wreg
 24069   00C194  0100               	movlb	0	; () banked
 24070   00C196  6FA6               	movwf	sendMessage7@opc& (0+255),b
 24071                           
 24072                           ;../../VLCBlib_PIC/vlcb.c: 1211:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 24073   00C198  0E08               	movlw	8
 24074   00C19A  0101               	movlb	1	; () banked
 24075   00C19C  6FBD               	movwf	sendMessage@len& (0+255),b
 24076   00C19E  C1C5  F1BE         	movff	sendMessage7@data1,sendMessage@data1
 24077   00C1A2  C1C6  F1BF         	movff	sendMessage7@data2,sendMessage@data2
 24078   00C1A6  C1C7  F1C0         	movff	sendMessage7@data3,sendMessage@data3
 24079   00C1AA  C1C8  F1C1         	movff	sendMessage7@data4,sendMessage@data4
 24080   00C1AE  C1C9  F1C2         	movff	sendMessage7@data5,sendMessage@data5
 24081   00C1B2  C1CA  F1C3         	movff	sendMessage7@data6,sendMessage@data6
 24082   00C1B6  C1CB  F1C4         	movff	sendMessage7@data7,sendMessage@data7
 24083   00C1BA  0100               	movlb	0	; () banked
 24084   00C1BC  51A6               	movf	sendMessage7@opc& (0+255),w,b
 24085   00C1BE  ECA2  F055         	call	_sendMessage
 24086   00C1C2  0012               	return		;funcret
 24087   00C1C4                     __end_of_sendMessage7:
 24088                           	callstack 0
 24089                           
 24090 ;; *************** function _isConsumedEvent *****************
 24091 ;; Defined at:
 24092 ;;		line 382 in file "../event_consumerDualActionQueue.c"
 24093 ;; Parameters:    Size  Location     Type
 24094 ;;  eventIndex      1    wreg     unsigned char 
 24095 ;; Auto vars:     Size  Location     Type
 24096 ;;  eventIndex      1   70[BANK0 ] unsigned char 
 24097 ;;  ev              1   71[BANK0 ] unsigned char 
 24098 ;; Return value:  Size  Location     Type
 24099 ;;                  1    wreg      unsigned char 
 24100 ;; Registers used:
 24101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24102 ;; Tracked objects:
 24103 ;;		On entry : 0/0
 24104 ;;		On exit  : 0/0
 24105 ;;		Unchanged: 0/0
 24106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24108 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24110 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24111 ;;Total ram usage:        2 bytes
 24112 ;; Hardware stack levels used: 1
 24113 ;; Hardware stack levels required when called: 16
 24114 ;; This function calls:
 24115 ;;		_getEv
 24116 ;; This function is called by:
 24117 ;;		_ackEventProcessMessage
 24118 ;; This function uses a non-reentrant model
 24119 ;;
 24120                           
 24121                           	psect	text89
 24122   00C55C                     __ptext89:
 24123                           	callstack 0
 24124   00C55C                     _isConsumedEvent:
 24125                           	callstack 12
 24126                           
 24127                           ;incstack = 0
 24128                           ;isConsumedEvent@eventIndex stored from wreg
 24129   00C55C  0100               	movlb	0	; () banked
 24130   00C55E  6FA6               	movwf	isConsumedEvent@eventIndex& (0+255),b
 24131                           
 24132                           ;../event_consumerDualActionQueue.c: 383:     uint8_t ev;;../event_consumerDualActionQue
      +                          ue.c: 384:     ev = (uint8_t)getEv(eventIndex, 1);
 24133   00C560  0E01               	movlw	1
 24134   00C562  0100               	movlb	0	; () banked
 24135   00C564  6F9D               	movwf	getEv@evNum& (0+255),b
 24136   00C566  51A6               	movf	isConsumedEvent@eventIndex& (0+255),w,b
 24137   00C568  ECFD  F03C         	call	_getEv
 24138   00C56C  0100               	movlb	0	; () banked
 24139   00C56E  519D               	movf	?_getEv& (0+255),w,b
 24140   00C570  6FA7               	movwf	isConsumedEvent@ev& (0+255),b
 24141                           
 24142                           ; BSR set to: 0
 24143                           ;../event_consumerDualActionQueue.c: 385:     return (ev != 0);
 24144   00C572  51A7               	movf	isConsumedEvent@ev& (0+255),w,b
 24145   00C574  B4D8               	btfsc	status,2,c
 24146   00C576  D002               	goto	u22180
 24147   00C578  0E01               	movlw	1
 24148   00C57A  0012               	return	
 24149   00C57C                     u22180:
 24150   00C57C  0E00               	movlw	0
 24151                           
 24152                           ; BSR set to: 0
 24153   00C57E  0012               	return		;funcret
 24154   00C580                     __end_of_isConsumedEvent:
 24155                           	callstack 0
 24156                           
 24157 ;; *************** function _findService *****************
 24158 ;; Defined at:
 24159 ;;		line 808 in file "../../VLCBlib_PIC/vlcb.c"
 24160 ;; Parameters:    Size  Location     Type
 24161 ;;  id              1    wreg     unsigned char 
 24162 ;; Auto vars:     Size  Location     Type
 24163 ;;  id              1   49[BANK0 ] unsigned char 
 24164 ;;  i               1   50[BANK0 ] unsigned char 
 24165 ;; Return value:  Size  Location     Type
 24166 ;;                  2   45[BANK0 ] PTR const struct Service
 24167 ;; Registers used:
 24168 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 24169 ;; Tracked objects:
 24170 ;;		On entry : 0/0
 24171 ;;		On exit  : 0/0
 24172 ;;		Unchanged: 0/0
 24173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24177 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24178 ;;Total ram usage:        6 bytes
 24179 ;; Hardware stack levels used: 1
 24180 ;; Hardware stack levels required when called: 12
 24181 ;; This function calls:
 24182 ;;		Nothing
 24183 ;; This function is called by:
 24184 ;;		_ackEventProcessMessage
 24185 ;; This function uses a non-reentrant model
 24186 ;;
 24187                           
 24188                           	psect	text90
 24189   00A154                     __ptext90:
 24190                           	callstack 0
 24191   00A154                     _findService:
 24192                           	callstack 16
 24193                           
 24194                           ; BSR set to: 0
 24195                           ;incstack = 0
 24196                           ;findService@id stored from wreg
 24197   00A154  0100               	movlb	0	; () banked
 24198   00A156  6F91               	movwf	findService@id& (0+255),b
 24199                           
 24200                           ;../../VLCBlib_PIC/vlcb.c: 809:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 810:     for (i
      +                          =0; i<9; i++) {
 24201   00A158  0E00               	movlw	0
 24202   00A15A  0100               	movlb	0	; () banked
 24203   00A15C  6F92               	movwf	findService@i& (0+255),b
 24204   00A15E                     l22064:
 24205                           
 24206                           ; BSR set to: 0
 24207                           ;../../VLCBlib_PIC/vlcb.c: 811:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 24208   00A15E  5192               	movf	findService@i& (0+255),w,b
 24209   00A160  0D02               	mullw	2
 24210   00A162  0E69               	movlw	low _services
 24211   00A164  24F3               	addwf	243,w,c
 24212   00A166  6EF6               	movwf	tblptrl,c
 24213   00A168  0EEE               	movlw	high _services
 24214   00A16A  20F4               	addwfc	244,w,c
 24215   00A16C  6EF7               	movwf	tblptrh,c
 24216   00A16E                     	if	1	;There are 3 active tblptr bytes
 24217   00A16E  6AF8               	clrf	tblptru,c
 24218   00A170  0E00               	movlw	low (__mediumconst shr (0+16))
 24219   00A172  22F8               	addwfc	tblptru,f,c
 24220   00A174                     	endif
 24221   00A174  0009               	tblrd		*+
 24222   00A176  50F5               	movf	tablat,w,c
 24223   00A178  0009               	tblrd		*+
 24224   00A17A  10F5               	iorwf	tablat,w,c
 24225   00A17C  B4D8               	btfsc	status,2,c
 24226   00A17E  D02D               	goto	l22072
 24227                           
 24228                           ; BSR set to: 0
 24229   00A180  5192               	movf	findService@i& (0+255),w,b
 24230   00A182  0D02               	mullw	2
 24231   00A184  0E69               	movlw	low _services
 24232   00A186  24F3               	addwf	243,w,c
 24233   00A188  6EF6               	movwf	tblptrl,c
 24234   00A18A  0EEE               	movlw	high _services
 24235   00A18C  20F4               	addwfc	244,w,c
 24236   00A18E  6EF7               	movwf	tblptrh,c
 24237   00A190                     	if	1	;There are 3 active tblptr bytes
 24238   00A190  6AF8               	clrf	tblptru,c
 24239   00A192  0E00               	movlw	low (__mediumconst shr (0+16))
 24240   00A194  22F8               	addwfc	tblptru,f,c
 24241   00A196                     	endif
 24242   00A196  0009               	tblrd		*+
 24243   00A198  CFF5 F08F          	movff	tablat,??_findService
 24244   00A19C  0009               	tblrd		*+
 24245   00A19E  CFF5 F090          	movff	tablat,??_findService+1
 24246   00A1A2  C08F  FFF6         	movff	??_findService,tblptrl
 24247   00A1A6  C090  FFF7         	movff	??_findService+1,tblptrh
 24248   00A1AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24249   00A1AA  6AF8               	clrf	tblptru,c
 24250   00A1AC                     	endif
 24251   00A1AC                     	if	0	;tblptru may be non-zero
 24252   00A1AC                     	endif
 24253   00A1AC  0008               	tblrd		*
 24254   00A1AE  50F5               	movf	tablat,w,c
 24255   00A1B0  1991               	xorwf	findService@id& (0+255),w,b
 24256   00A1B2  A4D8               	btfss	status,2,c
 24257   00A1B4  D012               	goto	l22072
 24258                           
 24259                           ; BSR set to: 0
 24260                           ;../../VLCBlib_PIC/vlcb.c: 812:             return services[i];
 24261   00A1B6  5192               	movf	findService@i& (0+255),w,b
 24262   00A1B8  0D02               	mullw	2
 24263   00A1BA  0E69               	movlw	low _services
 24264   00A1BC  24F3               	addwf	243,w,c
 24265   00A1BE  6EF6               	movwf	tblptrl,c
 24266   00A1C0  0EEE               	movlw	high _services
 24267   00A1C2  20F4               	addwfc	244,w,c
 24268   00A1C4  6EF7               	movwf	tblptrh,c
 24269   00A1C6                     	if	1	;There are 3 active tblptr bytes
 24270   00A1C6  6AF8               	clrf	tblptru,c
 24271   00A1C8  0E00               	movlw	low (__mediumconst shr (0+16))
 24272   00A1CA  22F8               	addwfc	tblptru,f,c
 24273   00A1CC                     	endif
 24274   00A1CC  0009               	tblrd		*+
 24275   00A1CE  CFF5 F08D          	movff	tablat,?_findService
 24276   00A1D2  000A               	tblrd		*-
 24277   00A1D4  CFF5 F08E          	movff	tablat,?_findService+1
 24278   00A1D8  0012               	return	
 24279   00A1DA                     l22072:
 24280                           
 24281                           ; BSR set to: 0
 24282                           ;../../VLCBlib_PIC/vlcb.c: 814:     }
 24283   00A1DA  2B92               	incf	findService@i& (0+255),f,b
 24284                           
 24285                           ; BSR set to: 0
 24286   00A1DC  0E08               	movlw	8
 24287   00A1DE  6592               	cpfsgt	findService@i& (0+255),b
 24288   00A1E0  D7BE               	goto	l22064
 24289                           
 24290                           ; BSR set to: 0
 24291                           ;../../VLCBlib_PIC/vlcb.c: 815:     return ((void*)0);
 24292   00A1E2  0E00               	movlw	0
 24293   00A1E4  6F8D               	movwf	?_findService& (0+255),b
 24294   00A1E6  0E00               	movlw	0
 24295   00A1E8  6F8E               	movwf	(?_findService+1)& (0+255),b
 24296                           
 24297                           ; BSR set to: 0
 24298   00A1EA  0012               	return		;funcret
 24299   00A1EC                     __end_of_findService:
 24300                           	callstack 0
 24301                           
 24302 ;; *************** function _ackEventCheckLen *****************
 24303 ;; Defined at:
 24304 ;;		line 184 in file "../../VLCBlib_PIC/event_acknowledge.c"
 24305 ;; Parameters:    Size  Location     Type
 24306 ;;  m               2   17[BANK1 ] PTR struct Message
 24307 ;;		 -> poll@m(9), 
 24308 ;;  needed          1   19[BANK1 ] unsigned char 
 24309 ;; Auto vars:     Size  Location     Type
 24310 ;;		None
 24311 ;; Return value:  Size  Location     Type
 24312 ;;                  1    wreg      enum E12799
 24313 ;; Registers used:
 24314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24315 ;; Tracked objects:
 24316 ;;		On entry : 0/0
 24317 ;;		On exit  : 0/0
 24318 ;;		Unchanged: 0/0
 24319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24320 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24323 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24324 ;;Total ram usage:        3 bytes
 24325 ;; Hardware stack levels used: 1
 24326 ;; Hardware stack levels required when called: 18
 24327 ;; This function calls:
 24328 ;;		_checkLen
 24329 ;; This function is called by:
 24330 ;;		_ackEventProcessMessage
 24331 ;; This function uses a non-reentrant model
 24332 ;;
 24333                           
 24334                           	psect	text91
 24335   00C72E                     __ptext91:
 24336                           	callstack 0
 24337   00C72E                     _ackEventCheckLen:
 24338                           	callstack 10
 24339                           
 24340                           ;../../VLCBlib_PIC/event_acknowledge.c: 185:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 24341                           
 24342                           ; BSR set to: 0
 24343                           ;incstack = 0
 24344   00C72E  C1CE  F1CA         	movff	ackEventCheckLen@m,checkLen@m
 24345   00C732  C1CF  F1CB         	movff	ackEventCheckLen@m+1,checkLen@m+1
 24346   00C736  C1D0  F1CC         	movff	ackEventCheckLen@needed,checkLen@needed
 24347   00C73A  0E09               	movlw	9
 24348   00C73C  0101               	movlb	1	; () banked
 24349   00C73E  6FCD               	movwf	checkLen@service& (0+255),b
 24350   00C740  EC24  F055         	call	_checkLen	;wreg free
 24351   00C744  0012               	return		;funcret
 24352   00C746                     __end_of_ackEventCheckLen:
 24353                           	callstack 0
 24354                           
 24355 ;; *************** function _checkLen *****************
 24356 ;; Defined at:
 24357 ;;		line 1096 in file "../../VLCBlib_PIC/vlcb.c"
 24358 ;; Parameters:    Size  Location     Type
 24359 ;;  m               2   13[BANK1 ] PTR struct Message
 24360 ;;		 -> poll@m(9), 
 24361 ;;  needed          1   15[BANK1 ] unsigned char 
 24362 ;;  service         1   16[BANK1 ] unsigned char 
 24363 ;; Auto vars:     Size  Location     Type
 24364 ;;		None
 24365 ;; Return value:  Size  Location     Type
 24366 ;;                  1    wreg      enum E12799
 24367 ;; Registers used:
 24368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24369 ;; Tracked objects:
 24370 ;;		On entry : 0/0
 24371 ;;		On exit  : 0/0
 24372 ;;		Unchanged: 0/0
 24373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24374 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24377 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24378 ;;Total ram usage:        5 bytes
 24379 ;; Hardware stack levels used: 1
 24380 ;; Hardware stack levels required when called: 17
 24381 ;; This function calls:
 24382 ;;		_sendMessage5
 24383 ;; This function is called by:
 24384 ;;		_ackEventCheckLen
 24385 ;;		_teachCheckLen
 24386 ;; This function uses a non-reentrant model
 24387 ;;
 24388                           
 24389                           	psect	text92
 24390   00AA48                     __ptext92:
 24391                           	callstack 0
 24392   00AA48                     _checkLen:
 24393                           	callstack 10
 24394                           
 24395                           ;../../VLCBlib_PIC/vlcb.c: 1097:     if (m->len < needed) {
 24396                           
 24397                           ;incstack = 0
 24398   00AA48  C1CA  FFD9         	movff	checkLen@m,fsr2l
 24399   00AA4C  C1CB  FFDA         	movff	checkLen@m+1,fsr2h
 24400   00AA50  0101               	movlb	1	; () banked
 24401   00AA52  51CC               	movf	checkLen@needed& (0+255),w,b
 24402   00AA54  5CDE               	subwf	postinc2,w,c
 24403   00AA56  B0D8               	btfsc	status,0,c
 24404   00AA58  D034               	goto	l20980
 24405                           
 24406                           ; BSR set to: 1
 24407                           ;../../VLCBlib_PIC/vlcb.c: 1099:         if (m->len > 2) {
 24408   00AA5A  C1CA  FFD9         	movff	checkLen@m,fsr2l
 24409   00AA5E  C1CB  FFDA         	movff	checkLen@m+1,fsr2h
 24410   00AA62  0E02               	movlw	2
 24411   00AA64  64DF               	cpfsgt	indf2,c
 24412   00AA66  D02B               	goto	l20976
 24413                           
 24414                           ; BSR set to: 1
 24415                           ;../../VLCBlib_PIC/vlcb.c: 1100:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 24416   00AA68  EE20 F002          	lfsr	2,2
 24417   00AA6C  51CA               	movf	checkLen@m& (0+255),w,b
 24418   00AA6E  26D9               	addwf	fsr2l,f,c
 24419   00AA70  51CB               	movf	(checkLen@m+1)& (0+255),w,b
 24420   00AA72  22DA               	addwfc	fsr2h,f,c
 24421   00AA74  50DE               	movf	postinc2,w,c
 24422   00AA76  0100               	movlb	0	; () banked
 24423   00AA78  19B6               	xorwf	(_nn+1)& (0+255),w,b
 24424   00AA7A  A4D8               	btfss	status,2,c
 24425   00AA7C  D020               	goto	l20976
 24426                           
 24427                           ; BSR set to: 0
 24428   00AA7E  0101               	movlb	1	; () banked
 24429   00AA80  EE20 F003          	lfsr	2,3
 24430   00AA84  51CA               	movf	checkLen@m& (0+255),w,b
 24431   00AA86  26D9               	addwf	fsr2l,f,c
 24432   00AA88  51CB               	movf	(checkLen@m+1)& (0+255),w,b
 24433   00AA8A  22DA               	addwfc	fsr2h,f,c
 24434   00AA8C  0100               	movlb	0	; () banked
 24435   00AA8E  51B5               	movf	_nn& (0+255),w,b
 24436   00AA90  18DE               	xorwf	postinc2,w,c
 24437   00AA92  A4D8               	btfss	status,2,c
 24438   00AA94  D014               	goto	l20976
 24439                           
 24440                           ; BSR set to: 0
 24441                           ;../../VLCBlib_PIC/vlcb.c: 1101:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 24442   00AA96  C0B6  F1C5         	movff	_nn+1,sendMessage5@data1
 24443   00AA9A  C0B5  F1C6         	movff	_nn,sendMessage5@data2
 24444   00AA9E  0101               	movlb	1	; () banked
 24445   00AAA0  EE20 F001          	lfsr	2,1
 24446   00AAA4  51CA               	movf	checkLen@m& (0+255),w,b
 24447   00AAA6  26D9               	addwf	fsr2l,f,c
 24448   00AAA8  51CB               	movf	(checkLen@m+1)& (0+255),w,b
 24449   00AAAA  22DA               	addwfc	fsr2h,f,c
 24450   00AAAC  50DF               	movf	indf2,w,c
 24451   00AAAE  6FC7               	movwf	sendMessage5@data3& (0+255),b
 24452   00AAB0  C1CD  F1C8         	movff	checkLen@service,sendMessage5@data4
 24453   00AAB4  0E01               	movlw	1
 24454   00AAB6  6FC9               	movwf	sendMessage5@data5& (0+255),b
 24455   00AAB8  0EAF               	movlw	175
 24456   00AABA  ECE2  F060         	call	_sendMessage5
 24457   00AABE                     l20976:
 24458                           
 24459                           ;../../VLCBlib_PIC/vlcb.c: 1105:         return PROCESSED;
 24460   00AABE  0E01               	movlw	1
 24461   00AAC0  0012               	return	
 24462   00AAC2                     l20980:
 24463                           
 24464                           ; BSR set to: 1
 24465                           ;../../VLCBlib_PIC/vlcb.c: 1107:     return NOT_PROCESSED;
 24466   00AAC2  0E00               	movlw	0
 24467   00AAC4  0012               	return		;funcret
 24468   00AAC6                     __end_of_checkLen:
 24469                           	callstack 0
 24470                           
 24471 ;; *************** function _sendMessage5 *****************
 24472 ;; Defined at:
 24473 ;;		line 1181 in file "../../VLCBlib_PIC/vlcb.c"
 24474 ;; Parameters:    Size  Location     Type
 24475 ;;  opc             1    wreg     enum E12392
 24476 ;;  data1           1    8[BANK1 ] unsigned char 
 24477 ;;  data2           1    9[BANK1 ] unsigned char 
 24478 ;;  data3           1   10[BANK1 ] unsigned char 
 24479 ;;  data4           1   11[BANK1 ] unsigned char 
 24480 ;;  data5           1   12[BANK1 ] unsigned char 
 24481 ;; Auto vars:     Size  Location     Type
 24482 ;;  opc             1   70[BANK0 ] enum E12392
 24483 ;; Return value:  Size  Location     Type
 24484 ;;                  1    wreg      void 
 24485 ;; Registers used:
 24486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24487 ;; Tracked objects:
 24488 ;;		On entry : 0/0
 24489 ;;		On exit  : 0/0
 24490 ;;		Unchanged: 0/0
 24491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24492 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24495 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24496 ;;Total ram usage:        6 bytes
 24497 ;; Hardware stack levels used: 1
 24498 ;; Hardware stack levels required when called: 16
 24499 ;; This function calls:
 24500 ;;		_sendMessage
 24501 ;; This function is called by:
 24502 ;;		_mnsProcessMessage
 24503 ;;		_mnsPoll
 24504 ;;		_mnsTRserviceDiscoveryCallback
 24505 ;;		_nvProcessMessage
 24506 ;;		_checkLen
 24507 ;;		_canProcessMessage
 24508 ;;		_teachProcessMessage
 24509 ;;		_teachCheckLen
 24510 ;;		_doNenrd
 24511 ;;		_doNnclr
 24512 ;;		_doEvlrn
 24513 ;;		_doReval
 24514 ;;		_doEvuln
 24515 ;;		_doReqev
 24516 ;; This function uses a non-reentrant model
 24517 ;;
 24518                           
 24519                           	psect	text93
 24520   00C1C4                     __ptext93:
 24521                           	callstack 0
 24522   00C1C4                     _sendMessage5:
 24523                           	callstack 11
 24524                           
 24525                           ;incstack = 0
 24526                           ;sendMessage5@opc stored from wreg
 24527   00C1C4  0100               	movlb	0	; () banked
 24528   00C1C6  6FA6               	movwf	sendMessage5@opc& (0+255),b
 24529                           
 24530                           ;../../VLCBlib_PIC/vlcb.c: 1182:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 24531   00C1C8  0E06               	movlw	6
 24532   00C1CA  0101               	movlb	1	; () banked
 24533   00C1CC  6FBD               	movwf	sendMessage@len& (0+255),b
 24534   00C1CE  C1C5  F1BE         	movff	sendMessage5@data1,sendMessage@data1
 24535   00C1D2  C1C6  F1BF         	movff	sendMessage5@data2,sendMessage@data2
 24536   00C1D6  C1C7  F1C0         	movff	sendMessage5@data3,sendMessage@data3
 24537   00C1DA  C1C8  F1C1         	movff	sendMessage5@data4,sendMessage@data4
 24538   00C1DE  C1C9  F1C2         	movff	sendMessage5@data5,sendMessage@data5
 24539   00C1E2  0E00               	movlw	0
 24540   00C1E4  6FC3               	movwf	sendMessage@data6& (0+255),b
 24541   00C1E6  0E00               	movlw	0
 24542   00C1E8  6FC4               	movwf	sendMessage@data7& (0+255),b
 24543   00C1EA  0100               	movlb	0	; () banked
 24544   00C1EC  51A6               	movf	sendMessage5@opc& (0+255),w,b
 24545   00C1EE  ECA2  F055         	call	_sendMessage
 24546   00C1F2  0012               	return		;funcret
 24547   00C1F4                     __end_of_sendMessage5:
 24548                           	callstack 0
 24549                           
 24550 ;; *************** function _APP_preProcessMessage *****************
 24551 ;; Defined at:
 24552 ;;		line 414 in file "../main.c"
 24553 ;; Parameters:    Size  Location     Type
 24554 ;;  m               2   45[BANK0 ] PTR struct Message
 24555 ;;		 -> poll@m(9), 
 24556 ;; Auto vars:     Size  Location     Type
 24557 ;;		None
 24558 ;; Return value:  Size  Location     Type
 24559 ;;                  1    wreg      enum E12749
 24560 ;; Registers used:
 24561 ;;		wreg
 24562 ;; Tracked objects:
 24563 ;;		On entry : 0/0
 24564 ;;		On exit  : 0/0
 24565 ;;		Unchanged: 0/0
 24566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24570 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24571 ;;Total ram usage:        2 bytes
 24572 ;; Hardware stack levels used: 1
 24573 ;; Hardware stack levels required when called: 12
 24574 ;; This function calls:
 24575 ;;		Nothing
 24576 ;; This function is called by:
 24577 ;;		_poll
 24578 ;; This function uses a non-reentrant model
 24579 ;;
 24580                           
 24581                           	psect	text94
 24582   00C84E                     __ptext94:
 24583                           	callstack 0
 24584   00C84E                     _APP_preProcessMessage:
 24585                           	callstack 17
 24586                           
 24587                           ;../main.c: 415:     return NOT_PROCESSED;
 24588                           
 24589                           ;incstack = 0
 24590   00C84E  0E00               	movlw	0
 24591   00C850  0012               	return		;funcret
 24592   00C852                     __end_of_APP_preProcessMessage:
 24593                           	callstack 0
 24594                           
 24595 ;; *************** function _APP_postProcessMessage *****************
 24596 ;; Defined at:
 24597 ;;		line 421 in file "../main.c"
 24598 ;; Parameters:    Size  Location     Type
 24599 ;;  m               2   45[BANK0 ] PTR struct Message
 24600 ;;		 -> poll@m(9), 
 24601 ;; Auto vars:     Size  Location     Type
 24602 ;;		None
 24603 ;; Return value:  Size  Location     Type
 24604 ;;                  1    wreg      enum E12749
 24605 ;; Registers used:
 24606 ;;		wreg
 24607 ;; Tracked objects:
 24608 ;;		On entry : 0/0
 24609 ;;		On exit  : 0/0
 24610 ;;		Unchanged: 0/0
 24611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24612 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24615 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24616 ;;Total ram usage:        2 bytes
 24617 ;; Hardware stack levels used: 1
 24618 ;; Hardware stack levels required when called: 12
 24619 ;; This function calls:
 24620 ;;		Nothing
 24621 ;; This function is called by:
 24622 ;;		_poll
 24623 ;; This function uses a non-reentrant model
 24624 ;;
 24625                           
 24626                           	psect	text95
 24627   00C852                     __ptext95:
 24628                           	callstack 0
 24629   00C852                     _APP_postProcessMessage:
 24630                           	callstack 17
 24631                           
 24632                           ;../main.c: 422:     return NOT_PROCESSED;
 24633                           
 24634                           ;incstack = 0
 24635   00C852  0E00               	movlw	0
 24636   00C854  0012               	return		;funcret
 24637   00C856                     __end_of_APP_postProcessMessage:
 24638                           	callstack 0
 24639                           
 24640 ;; *************** function _loop *****************
 24641 ;; Defined at:
 24642 ;;		line 353 in file "../main.c"
 24643 ;; Parameters:    Size  Location     Type
 24644 ;;		None
 24645 ;; Auto vars:     Size  Location     Type
 24646 ;;		None
 24647 ;; Return value:  Size  Location     Type
 24648 ;;                  1    wreg      void 
 24649 ;; Registers used:
 24650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24651 ;; Tracked objects:
 24652 ;;		On entry : 0/0
 24653 ;;		On exit  : 0/0
 24654 ;;		Unchanged: 0/0
 24655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24658 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24659 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24660 ;;Total ram usage:        8 bytes
 24661 ;; Hardware stack levels used: 1
 24662 ;; Hardware stack levels required when called: 22
 24663 ;; This function calls:
 24664 ;;		___lmul
 24665 ;;		_getNV
 24666 ;;		_inputScan
 24667 ;;		_processActions
 24668 ;;		_processOutputs
 24669 ;;		_sendProducedEvent
 24670 ;;		_startServos
 24671 ;;		_tickGet
 24672 ;; This function is called by:
 24673 ;;		_main
 24674 ;; This function uses a non-reentrant model
 24675 ;;
 24676                           
 24677                           	psect	text96
 24678   006D74                     __ptext96:
 24679                           	callstack 0
 24680   006D74                     _loop:
 24681                           	callstack 8
 24682                           
 24683                           ;../main.c: 355:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 24684                           
 24685                           ;incstack = 0
 24686   006D74  0100               	movlb	0	; () banked
 24687   006D76  51D0               	movf	_started& (0+255),w,b
 24688   006D78  A4D8               	btfss	status,2,c
 24689   006D7A  D053               	goto	l24898
 24690                           
 24691                           ; BSR set to: 0
 24692   006D7C  ECE5  F05B         	call	_tickGet	;wreg free
 24693   006D80  5043               	movf	_startTime^0,w,c
 24694   006D82  0100               	movlb	0	; () banked
 24695   006D84  5D8D               	subwf	?_tickGet& (0+255),w,b
 24696   006D86  0101               	movlb	1	; () banked
 24697   006D88  6FEB               	movwf	??_loop& (0+255),b
 24698   006D8A  5044               	movf	(_startTime+1)^0,w,c
 24699   006D8C  0100               	movlb	0	; () banked
 24700   006D8E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24701   006D90  0101               	movlb	1	; () banked
 24702   006D92  6FEC               	movwf	(??_loop+1)& (0+255),b
 24703   006D94  5045               	movf	(_startTime+2)^0,w,c
 24704   006D96  0100               	movlb	0	; () banked
 24705   006D98  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24706   006D9A  0101               	movlb	1	; () banked
 24707   006D9C  6FED               	movwf	(??_loop+2)& (0+255),b
 24708   006D9E  5046               	movf	(_startTime+3)^0,w,c
 24709   006DA0  0100               	movlb	0	; () banked
 24710   006DA2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24711   006DA4  0101               	movlb	1	; () banked
 24712   006DA6  6FEE               	movwf	(??_loop+3)& (0+255),b
 24713   006DA8  0E01               	movlw	1
 24714   006DAA  EC53  F05F         	call	_getNV
 24715   006DAE  0100               	movlb	0	; () banked
 24716   006DB0  C08D  F091         	movff	?_getNV,___lmul@multiplier
 24717   006DB4  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 24718   006DB8  0E00               	movlw	0
 24719   006DBA  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 24720   006DBC  0EFF               	movlw	-1
 24721   006DBE  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 24722   006DC0  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 24723   006DC2  0E6A               	movlw	106
 24724   006DC4  6F95               	movwf	___lmul@multiplicand& (0+255),b
 24725   006DC6  0E18               	movlw	24
 24726   006DC8  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24727   006DCA  0E00               	movlw	0
 24728   006DCC  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24729   006DCE  0E00               	movlw	0
 24730   006DD0  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24731   006DD2  EC11  F05C         	call	___lmul	;wreg free
 24732   006DD6  0E48               	movlw	72
 24733   006DD8  0100               	movlb	0	; () banked
 24734   006DDA  2591               	addwf	?___lmul& (0+255),w,b
 24735   006DDC  0101               	movlb	1	; () banked
 24736   006DDE  6FEF               	movwf	(??_loop+4)& (0+255),b
 24737   006DE0  0EE8               	movlw	232
 24738   006DE2  0100               	movlb	0	; () banked
 24739   006DE4  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 24740   006DE6  0101               	movlb	1	; () banked
 24741   006DE8  6FF0               	movwf	(??_loop+5)& (0+255),b
 24742   006DEA  0E01               	movlw	1
 24743   006DEC  0100               	movlb	0	; () banked
 24744   006DEE  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 24745   006DF0  0101               	movlb	1	; () banked
 24746   006DF2  6FF1               	movwf	(??_loop+6)& (0+255),b
 24747   006DF4  0E00               	movlw	0
 24748   006DF6  0100               	movlb	0	; () banked
 24749   006DF8  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 24750   006DFA  0101               	movlb	1	; () banked
 24751   006DFC  6FF2               	movwf	(??_loop+7)& (0+255),b
 24752   006DFE  51EB               	movf	??_loop& (0+255),w,b
 24753   006E00  5DEF               	subwf	(??_loop+4)& (0+255),w,b
 24754   006E02  51EC               	movf	(??_loop+1)& (0+255),w,b
 24755   006E04  59F0               	subwfb	(??_loop+5)& (0+255),w,b
 24756   006E06  51ED               	movf	(??_loop+2)& (0+255),w,b
 24757   006E08  59F1               	subwfb	(??_loop+6)& (0+255),w,b
 24758   006E0A  51EE               	movf	(??_loop+3)& (0+255),w,b
 24759   006E0C  59F2               	subwfb	(??_loop+7)& (0+255),w,b
 24760   006E0E  B0D8               	btfsc	status,0,c
 24761   006E10  D008               	goto	l24898
 24762                           
 24763                           ; BSR set to: 1
 24764                           ;../main.c: 356:         started = TRUE;
 24765   006E12  0E01               	movlw	1
 24766   006E14  0100               	movlb	0	; () banked
 24767   006E16  6FD0               	movwf	_started& (0+255),b
 24768                           
 24769                           ; BSR set to: 0
 24770                           ;../main.c: 357:         sendProducedEvent(1, EVENT_ON);
 24771   006E18  0E01               	movlw	1
 24772   006E1A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 24773   006E1C  0E01               	movlw	1
 24774   006E1E  ECCC  F04B         	call	_sendProducedEvent
 24775   006E22                     l24898:
 24776                           
 24777                           ;../main.c: 361:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 24778   006E22  ECE5  F05B         	call	_tickGet	;wreg free
 24779   006E26  0101               	movlb	1	; () banked
 24780   006E28  5160               	movf	_lastServoStartTime& (0+255),w,b
 24781   006E2A  0100               	movlb	0	; () banked
 24782   006E2C  5D8D               	subwf	?_tickGet& (0+255),w,b
 24783   006E2E  0101               	movlb	1	; () banked
 24784   006E30  6FEB               	movwf	??_loop& (0+255),b
 24785   006E32  5161               	movf	(_lastServoStartTime+1)& (0+255),w,b
 24786   006E34  0100               	movlb	0	; () banked
 24787   006E36  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24788   006E38  0101               	movlb	1	; () banked
 24789   006E3A  6FEC               	movwf	(??_loop+1)& (0+255),b
 24790   006E3C  5162               	movf	(_lastServoStartTime+2)& (0+255),w,b
 24791   006E3E  0100               	movlb	0	; () banked
 24792   006E40  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24793   006E42  0101               	movlb	1	; () banked
 24794   006E44  6FED               	movwf	(??_loop+2)& (0+255),b
 24795   006E46  5163               	movf	(_lastServoStartTime+3)& (0+255),w,b
 24796   006E48  0100               	movlb	0	; () banked
 24797   006E4A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24798   006E4C  0101               	movlb	1	; () banked
 24799   006E4E  6FEE               	movwf	(??_loop+3)& (0+255),b
 24800   006E50  51EE               	movf	(??_loop+3)& (0+255),w,b
 24801   006E52  11ED               	iorwf	(??_loop+2)& (0+255),w,b
 24802   006E54  11EC               	iorwf	(??_loop+1)& (0+255),w,b
 24803   006E56  E104               	bnz	u26810
 24804   006E58  0E9C               	movlw	156
 24805   006E5A  5DEB               	subwf	??_loop& (0+255),w,b
 24806   006E5C  A0D8               	btfss	status,0,c
 24807   006E5E  D00F               	goto	l24904
 24808   006E60                     u26810:
 24809                           
 24810                           ; BSR set to: 1
 24811                           ;../main.c: 362:         if (startServos()) {
 24812   006E60  EC70  F04B         	call	_startServos	;wreg free
 24813   006E64  0900               	iorlw	0
 24814   006E66  B4D8               	btfsc	status,2,c
 24815   006E68  D00A               	goto	l24904
 24816                           
 24817                           ;../main.c: 363:             lastServoStartTime.val = tickGet();
 24818   006E6A  ECE5  F05B         	call	_tickGet	;wreg free
 24819   006E6E  C08D  F160         	movff	?_tickGet,_lastServoStartTime
 24820   006E72  C08E  F161         	movff	?_tickGet+1,_lastServoStartTime+1
 24821   006E76  C08F  F162         	movff	?_tickGet+2,_lastServoStartTime+2
 24822   006E7A  C090  F163         	movff	?_tickGet+3,_lastServoStartTime+3
 24823   006E7E                     l24904:
 24824                           
 24825                           ;../main.c: 367:     if (started) {
 24826   006E7E  0100               	movlb	0	; () banked
 24827   006E80  51D0               	movf	_started& (0+255),w,b
 24828   006E82  B4D8               	btfsc	status,2,c
 24829   006E84  0012               	return	
 24830                           
 24831                           ; BSR set to: 0
 24832                           ;../main.c: 368:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 24833   006E86  ECE5  F05B         	call	_tickGet	;wreg free
 24834   006E8A  0101               	movlb	1	; () banked
 24835   006E8C  515C               	movf	_lastInputScanTime& (0+255),w,b
 24836   006E8E  0100               	movlb	0	; () banked
 24837   006E90  5D8D               	subwf	?_tickGet& (0+255),w,b
 24838   006E92  0101               	movlb	1	; () banked
 24839   006E94  6FEB               	movwf	??_loop& (0+255),b
 24840   006E96  515D               	movf	(_lastInputScanTime+1)& (0+255),w,b
 24841   006E98  0100               	movlb	0	; () banked
 24842   006E9A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24843   006E9C  0101               	movlb	1	; () banked
 24844   006E9E  6FEC               	movwf	(??_loop+1)& (0+255),b
 24845   006EA0  515E               	movf	(_lastInputScanTime+2)& (0+255),w,b
 24846   006EA2  0100               	movlb	0	; () banked
 24847   006EA4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24848   006EA6  0101               	movlb	1	; () banked
 24849   006EA8  6FED               	movwf	(??_loop+2)& (0+255),b
 24850   006EAA  515F               	movf	(_lastInputScanTime+3)& (0+255),w,b
 24851   006EAC  0100               	movlb	0	; () banked
 24852   006EAE  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24853   006EB0  0101               	movlb	1	; () banked
 24854   006EB2  6FEE               	movwf	(??_loop+3)& (0+255),b
 24855   006EB4  51EE               	movf	(??_loop+3)& (0+255),w,b
 24856   006EB6  11ED               	iorwf	(??_loop+2)& (0+255),w,b
 24857   006EB8  E106               	bnz	u26840
 24858   006EBA  0E37               	movlw	55
 24859   006EBC  5DEB               	subwf	??_loop& (0+255),w,b
 24860   006EBE  0E01               	movlw	1
 24861   006EC0  59EC               	subwfb	(??_loop+1)& (0+255),w,b
 24862   006EC2  A0D8               	btfss	status,0,c
 24863   006EC4  D00C               	goto	l24912
 24864   006EC6                     u26840:
 24865                           
 24866                           ; BSR set to: 1
 24867                           ;../main.c: 369:             inputScan();
 24868   006EC6  ECA4  F028         	call	_inputScan	;wreg free
 24869                           
 24870                           ;../main.c: 370:             lastInputScanTime.val = tickGet();
 24871   006ECA  ECE5  F05B         	call	_tickGet	;wreg free
 24872   006ECE  C08D  F15C         	movff	?_tickGet,_lastInputScanTime
 24873   006ED2  C08E  F15D         	movff	?_tickGet+1,_lastInputScanTime+1
 24874   006ED6  C08F  F15E         	movff	?_tickGet+2,_lastInputScanTime+2
 24875   006EDA  C090  F15F         	movff	?_tickGet+3,_lastInputScanTime+3
 24876   006EDE                     l24912:
 24877                           
 24878                           ;../main.c: 372:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 24879   006EDE  ECE5  F05B         	call	_tickGet	;wreg free
 24880   006EE2  0101               	movlb	1	; () banked
 24881   006EE4  5158               	movf	_lastActionPollTime& (0+255),w,b
 24882   006EE6  0100               	movlb	0	; () banked
 24883   006EE8  5D8D               	subwf	?_tickGet& (0+255),w,b
 24884   006EEA  0101               	movlb	1	; () banked
 24885   006EEC  6FEB               	movwf	??_loop& (0+255),b
 24886   006EEE  5159               	movf	(_lastActionPollTime+1)& (0+255),w,b
 24887   006EF0  0100               	movlb	0	; () banked
 24888   006EF2  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24889   006EF4  0101               	movlb	1	; () banked
 24890   006EF6  6FEC               	movwf	(??_loop+1)& (0+255),b
 24891   006EF8  515A               	movf	(_lastActionPollTime+2)& (0+255),w,b
 24892   006EFA  0100               	movlb	0	; () banked
 24893   006EFC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24894   006EFE  0101               	movlb	1	; () banked
 24895   006F00  6FED               	movwf	(??_loop+2)& (0+255),b
 24896   006F02  515B               	movf	(_lastActionPollTime+3)& (0+255),w,b
 24897   006F04  0100               	movlb	0	; () banked
 24898   006F06  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24899   006F08  0101               	movlb	1	; () banked
 24900   006F0A  6FEE               	movwf	(??_loop+3)& (0+255),b
 24901   006F0C  51EE               	movf	(??_loop+3)& (0+255),w,b
 24902   006F0E  11ED               	iorwf	(??_loop+2)& (0+255),w,b
 24903   006F10  E106               	bnz	u26850
 24904   006F12  0E39               	movlw	57
 24905   006F14  5DEB               	subwf	??_loop& (0+255),w,b
 24906   006F16  0E18               	movlw	24
 24907   006F18  59EC               	subwfb	(??_loop+1)& (0+255),w,b
 24908   006F1A  A0D8               	btfss	status,0,c
 24909   006F1C  0012               	return	
 24910   006F1E                     u26850:
 24911                           
 24912                           ; BSR set to: 1
 24913                           ;../main.c: 373:             processActions();
 24914   006F1E  ECC9  F031         	call	_processActions	;wreg free
 24915                           
 24916                           ;../main.c: 374:             processOutputs();
 24917   006F22  ECD1  F035         	call	_processOutputs	;wreg free
 24918                           
 24919                           ;../main.c: 375:             lastActionPollTime.val = tickGet();
 24920   006F26  ECE5  F05B         	call	_tickGet	;wreg free
 24921   006F2A  C08D  F158         	movff	?_tickGet,_lastActionPollTime
 24922   006F2E  C08E  F159         	movff	?_tickGet+1,_lastActionPollTime+1
 24923   006F32  C08F  F15A         	movff	?_tickGet+2,_lastActionPollTime+2
 24924   006F36  C090  F15B         	movff	?_tickGet+3,_lastActionPollTime+3
 24925   006F3A  0012               	return		;funcret
 24926   006F3C                     __end_of_loop:
 24927                           	callstack 0
 24928                           
 24929 ;; *************** function _startServos *****************
 24930 ;; Defined at:
 24931 ;;		line 186 in file "../servo.c"
 24932 ;; Parameters:    Size  Location     Type
 24933 ;;		None
 24934 ;; Auto vars:     Size  Location     Type
 24935 ;;  type            1   30[BANK1 ] unsigned char 
 24936 ;; Return value:  Size  Location     Type
 24937 ;;                  1    wreg      unsigned char 
 24938 ;; Registers used:
 24939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24940 ;; Tracked objects:
 24941 ;;		On entry : 0/0
 24942 ;;		On exit  : 0/0
 24943 ;;		Unchanged: 0/0
 24944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24946 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24948 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24949 ;;Total ram usage:        1 bytes
 24950 ;; Hardware stack levels used: 1
 24951 ;; Hardware stack levels required when called: 19
 24952 ;; This function calls:
 24953 ;;		_getNV
 24954 ;;		_pollServos
 24955 ;;		_setupTimer1
 24956 ;;		_setupTimer3
 24957 ;; This function is called by:
 24958 ;;		_loop
 24959 ;; This function uses a non-reentrant model
 24960 ;;
 24961                           
 24962                           	psect	text97
 24963   0096E0                     __ptext97:
 24964                           	callstack 0
 24965   0096E0                     _startServos:
 24966                           	callstack 10
 24967                           
 24968                           ;../servo.c: 187:     uint8_t type;;../servo.c: 190:     if (servoActive[0] || servoActi
      +                          ve[1]) return 0;
 24969                           
 24970                           ;incstack = 0
 24971   0096E0  0100               	movlb	0	; () banked
 24972   0096E2  51B3               	movf	_servoActive& (0+255),w,b
 24973   0096E4  A4D8               	btfss	status,2,c
 24974   0096E6  D003               	goto	u24190
 24975                           
 24976                           ; BSR set to: 0
 24977   0096E8  51B4               	movf	(_servoActive+1)& (0+255),w,b
 24978   0096EA  B4D8               	btfsc	status,2,c
 24979   0096EC  D002               	goto	l22880
 24980   0096EE                     u24190:
 24981                           
 24982                           ; BSR set to: 0
 24983   0096EE  0E00               	movlw	0
 24984   0096F0  0012               	return	
 24985   0096F2                     l22880:
 24986                           
 24987                           ; BSR set to: 0
 24988                           ;../servo.c: 191:     servoInBlock++;
 24989   0096F2  2BC9               	incf	_servoInBlock& (0+255),f,b
 24990                           
 24991                           ; BSR set to: 0
 24992                           ;../servo.c: 192:     if (servoInBlock >= 8) {
 24993   0096F4  0E07               	movlw	7
 24994   0096F6  65C9               	cpfsgt	_servoInBlock& (0+255),b
 24995   0096F8  D004               	goto	l22888
 24996                           
 24997                           ; BSR set to: 0
 24998                           ;../servo.c: 193:         servoInBlock = 0;
 24999   0096FA  0E00               	movlw	0
 25000   0096FC  6FC9               	movwf	_servoInBlock& (0+255),b
 25001                           
 25002                           ; BSR set to: 0
 25003                           ;../servo.c: 194:         pollServos();
 25004   0096FE  EC28  F004         	call	_pollServos	;wreg free
 25005   009702                     l22888:
 25006                           
 25007                           ;../servo.c: 196:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 25008   009702  0100               	movlb	0	; () banked
 25009   009704  51C9               	movf	_servoInBlock& (0+255),w,b
 25010   009706  0D07               	mullw	7
 25011   009708  50F3               	movf	243,w,c
 25012   00970A  0F10               	addlw	16
 25013   00970C  EC53  F05F         	call	_getNV
 25014   009710  0100               	movlb	0	; () banked
 25015   009712  518D               	movf	?_getNV& (0+255),w,b
 25016   009714  0101               	movlb	1	; () banked
 25017   009716  6FDB               	movwf	startServos@type& (0+255),b
 25018                           
 25019                           ; BSR set to: 1
 25020                           ;../servo.c: 197:     if ((type == 2) || (type == 3) || (type == 4)) {
 25021   009718  0E02               	movlw	2
 25022   00971A  19DB               	xorwf	startServos@type& (0+255),w,b
 25023   00971C  B4D8               	btfsc	status,2,c
 25024   00971E  D008               	goto	u24230
 25025                           
 25026                           ; BSR set to: 1
 25027   009720  0E03               	movlw	3
 25028   009722  19DB               	xorwf	startServos@type& (0+255),w,b
 25029   009724  B4D8               	btfsc	status,2,c
 25030   009726  D004               	goto	u24230
 25031                           
 25032                           ; BSR set to: 1
 25033   009728  0E04               	movlw	4
 25034   00972A  19DB               	xorwf	startServos@type& (0+255),w,b
 25035   00972C  A4D8               	btfss	status,2,c
 25036   00972E  D00D               	goto	l22900
 25037   009730                     u24230:
 25038                           
 25039                           ; BSR set to: 1
 25040                           ;../servo.c: 198:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 25041   009730  0E10               	movlw	low _servoState
 25042   009732  0100               	movlb	0	; () banked
 25043   009734  25C9               	addwf	_servoInBlock& (0+255),w,b
 25044   009736  6ED9               	movwf	fsr2l,c
 25045   009738  6ADA               	clrf	fsr2h,c
 25046   00973A  0E01               	movlw	high _servoState
 25047   00973C  22DA               	addwfc	fsr2h,f,c
 25048   00973E  50DF               	movf	indf2,w,c
 25049   009740  B4D8               	btfsc	status,2,c
 25050   009742  D003               	goto	l22900
 25051                           
 25052                           ; BSR set to: 0
 25053   009744  51C9               	movf	_servoInBlock& (0+255),w,b
 25054   009746  EC24  F04F         	call	_setupTimer1
 25055   00974A                     l22900:
 25056                           
 25057                           ;../servo.c: 200:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 25058   00974A  0100               	movlb	0	; () banked
 25059   00974C  51C9               	movf	_servoInBlock& (0+255),w,b
 25060   00974E  0D07               	mullw	7
 25061   009750  50F3               	movf	243,w,c
 25062   009752  0F48               	addlw	72
 25063   009754  EC53  F05F         	call	_getNV
 25064   009758  0100               	movlb	0	; () banked
 25065   00975A  518D               	movf	?_getNV& (0+255),w,b
 25066   00975C  0101               	movlb	1	; () banked
 25067   00975E  6FDB               	movwf	startServos@type& (0+255),b
 25068                           
 25069                           ; BSR set to: 1
 25070                           ;../servo.c: 201:     if ((type == 2) || (type == 3) || (type == 4)) {
 25071   009760  0E02               	movlw	2
 25072   009762  19DB               	xorwf	startServos@type& (0+255),w,b
 25073   009764  B4D8               	btfsc	status,2,c
 25074   009766  D008               	goto	u24270
 25075                           
 25076                           ; BSR set to: 1
 25077   009768  0E03               	movlw	3
 25078   00976A  19DB               	xorwf	startServos@type& (0+255),w,b
 25079   00976C  B4D8               	btfsc	status,2,c
 25080   00976E  D004               	goto	u24270
 25081                           
 25082                           ; BSR set to: 1
 25083   009770  0E04               	movlw	4
 25084   009772  19DB               	xorwf	startServos@type& (0+255),w,b
 25085   009774  A4D8               	btfss	status,2,c
 25086   009776  D00E               	goto	l22912
 25087   009778                     u24270:
 25088                           
 25089                           ; BSR set to: 1
 25090                           ;../servo.c: 202:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 25091   009778  0E18               	movlw	low (_servoState+8)
 25092   00977A  0100               	movlb	0	; () banked
 25093   00977C  25C9               	addwf	_servoInBlock& (0+255),w,b
 25094   00977E  6ED9               	movwf	fsr2l,c
 25095   009780  6ADA               	clrf	fsr2h,c
 25096   009782  0E01               	movlw	high (_servoState+8)
 25097   009784  22DA               	addwfc	fsr2h,f,c
 25098   009786  50DF               	movf	indf2,w,c
 25099   009788  B4D8               	btfsc	status,2,c
 25100   00978A  D004               	goto	l22912
 25101                           
 25102                           ; BSR set to: 0
 25103   00978C  51C9               	movf	_servoInBlock& (0+255),w,b
 25104   00978E  0F08               	addlw	8
 25105   009790  ECD5  F04E         	call	_setupTimer3
 25106   009794                     l22912:
 25107                           
 25108                           ;../servo.c: 204:     return 1;
 25109   009794  0E01               	movlw	1
 25110   009796  0012               	return		;funcret
 25111   009798                     __end_of_startServos:
 25112                           	callstack 0
 25113                           
 25114 ;; *************** function _setupTimer3 *****************
 25115 ;; Defined at:
 25116 ;;		line 224 in file "../servo.c"
 25117 ;; Parameters:    Size  Location     Type
 25118 ;;  io              1    wreg     unsigned char 
 25119 ;; Auto vars:     Size  Location     Type
 25120 ;;  io              1   60[BANK0 ] unsigned char 
 25121 ;;  ticks           2   58[BANK0 ] unsigned short 
 25122 ;; Return value:  Size  Location     Type
 25123 ;;                  1    wreg      void 
 25124 ;; Registers used:
 25125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25126 ;; Tracked objects:
 25127 ;;		On entry : 0/0
 25128 ;;		On exit  : 0/0
 25129 ;;		Unchanged: 0/0
 25130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25132 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25133 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25134 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25135 ;;Total ram usage:        8 bytes
 25136 ;; Hardware stack levels used: 1
 25137 ;; Hardware stack levels required when called: 13
 25138 ;; This function calls:
 25139 ;;		_getNV
 25140 ;;		_setOutputPin
 25141 ;; This function is called by:
 25142 ;;		_startServos
 25143 ;; This function uses a non-reentrant model
 25144 ;;
 25145                           
 25146                           	psect	text98
 25147   009DAA                     __ptext98:
 25148                           	callstack 0
 25149   009DAA                     _setupTimer3:
 25150                           	callstack 15
 25151                           
 25152                           ;incstack = 0
 25153                           ;setupTimer3@io stored from wreg
 25154   009DAA  0100               	movlb	0	; () banked
 25155   009DAC  6F9C               	movwf	setupTimer3@io& (0+255),b
 25156                           
 25157                           ;../servo.c: 225:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 25158   009DAE  0100               	movlb	0	; () banked
 25159   009DB0  519C               	movf	setupTimer3@io& (0+255),w,b
 25160   009DB2  0D07               	mullw	7
 25161   009DB4  50F3               	movf	243,w,c
 25162   009DB6  0F11               	addlw	17
 25163   009DB8  EC53  F05F         	call	_getNV
 25164   009DBC  0100               	movlb	0	; () banked
 25165   009DBE  BF8D               	btfsc	?_getNV& (0+255),7,b
 25166   009DC0  D013               	goto	l22030
 25167                           
 25168                           ; BSR set to: 0
 25169   009DC2  0E30               	movlw	low _currentPos
 25170   009DC4  259C               	addwf	setupTimer3@io& (0+255),w,b
 25171   009DC6  6ED9               	movwf	fsr2l,c
 25172   009DC8  6ADA               	clrf	fsr2h,c
 25173   009DCA  0E01               	movlw	high _currentPos
 25174   009DCC  22DA               	addwfc	fsr2h,f,c
 25175   009DCE  50DF               	movf	indf2,w,c
 25176   009DD0  6F95               	movwf	??_setupTimer3& (0+255),b
 25177   009DD2  5195               	movf	??_setupTimer3& (0+255),w,b
 25178   009DD4  0D13               	mullw	19
 25179   009DD6  CFF3 F096          	movff	prodl,??_setupTimer3+1
 25180   009DDA  CFF4 F097          	movff	prodh,??_setupTimer3+2
 25181   009DDE  0E10               	movlw	16
 25182   009DE0  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 25183   009DE2  6F98               	movwf	_setupTimer3$1936& (0+255),b
 25184   009DE4  0E0E               	movlw	14
 25185   009DE6  D012               	goto	L5
 25186   009DE8                     l22030:
 25187                           
 25188                           ; BSR set to: 0
 25189   009DE8  0E30               	movlw	low _currentPos
 25190   009DEA  259C               	addwf	setupTimer3@io& (0+255),w,b
 25191   009DEC  6ED9               	movwf	fsr2l,c
 25192   009DEE  6ADA               	clrf	fsr2h,c
 25193   009DF0  0E01               	movlw	high _currentPos
 25194   009DF2  22DA               	addwfc	fsr2h,f,c
 25195   009DF4  50DF               	movf	indf2,w,c
 25196   009DF6  6F95               	movwf	??_setupTimer3& (0+255),b
 25197   009DF8  5195               	movf	??_setupTimer3& (0+255),w,b
 25198   009DFA  0D24               	mullw	36
 25199   009DFC  CFF3 F096          	movff	prodl,??_setupTimer3+1
 25200   009E00  CFF4 F097          	movff	prodh,??_setupTimer3+2
 25201   009E04  0E78               	movlw	120
 25202   009E06  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 25203   009E08  6F98               	movwf	_setupTimer3$1936& (0+255),b
 25204   009E0A  0E05               	movlw	5
 25205   009E0C                     L5:
 25206   009E0C  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 25207   009E0E  6F99               	movwf	(_setupTimer3$1936+1)& (0+255),b
 25208                           
 25209                           ; BSR set to: 0
 25210   009E10  1D98               	comf	_setupTimer3$1936& (0+255),w,b
 25211   009E12  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 25212   009E14  1D99               	comf	(_setupTimer3$1936+1)& (0+255),w,b
 25213   009E16  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 25214                           
 25215                           ; BSR set to: 0
 25216                           ;../servo.c: 228:     TMR3H = ticks >> 8;
 25217   009E18  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 25218   009E1A  6EB3               	movwf	179,c	;volatile
 25219                           
 25220                           ; BSR set to: 0
 25221                           ;../servo.c: 229:     TMR3L = ticks & 0xFF;
 25222   009E1C  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 25223                           
 25224                           ; BSR set to: 0
 25225                           ;../servo.c: 232:     servoActive[1] = 1;
 25226   009E20  0E01               	movlw	1
 25227   009E22  6FB4               	movwf	(_servoActive+1)& (0+255),b
 25228                           
 25229                           ; BSR set to: 0
 25230                           ;../servo.c: 233:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25231   009E24  519C               	movf	setupTimer3@io& (0+255),w,b
 25232   009E26  0D07               	mullw	7
 25233   009E28  50F3               	movf	243,w,c
 25234   009E2A  0F11               	addlw	17
 25235   009E2C  EC53  F05F         	call	_getNV
 25236   009E30  0100               	movlb	0	; () banked
 25237   009E32  BB8D               	btfsc	?_getNV& (0+255),5,b
 25238   009E34  D002               	goto	u23190
 25239   009E36  0E01               	movlw	1
 25240   009E38  D001               	goto	u23200
 25241   009E3A                     u23190:
 25242   009E3A  0E00               	movlw	0
 25243   009E3C                     u23200:
 25244   009E3C  6F91               	movwf	setOutputPin@state& (0+255),b
 25245   009E3E  519C               	movf	setupTimer3@io& (0+255),w,b
 25246   009E40  EC9E  F037         	call	_setOutputPin
 25247                           
 25248                           ;../servo.c: 234:     T3CONbits.TMR3ON = 1;
 25249   009E44  80B1               	bsf	177,0,c	;volatile
 25250   009E46  0012               	return		;funcret
 25251   009E48                     __end_of_setupTimer3:
 25252                           	callstack 0
 25253                           
 25254 ;; *************** function _setupTimer1 *****************
 25255 ;; Defined at:
 25256 ;;		line 212 in file "../servo.c"
 25257 ;; Parameters:    Size  Location     Type
 25258 ;;  io              1    wreg     unsigned char 
 25259 ;; Auto vars:     Size  Location     Type
 25260 ;;  io              1   60[BANK0 ] unsigned char 
 25261 ;;  ticks           2   58[BANK0 ] unsigned short 
 25262 ;; Return value:  Size  Location     Type
 25263 ;;                  1    wreg      void 
 25264 ;; Registers used:
 25265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25266 ;; Tracked objects:
 25267 ;;		On entry : 0/0
 25268 ;;		On exit  : 0/0
 25269 ;;		Unchanged: 0/0
 25270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25272 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25273 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25274 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25275 ;;Total ram usage:        8 bytes
 25276 ;; Hardware stack levels used: 1
 25277 ;; Hardware stack levels required when called: 13
 25278 ;; This function calls:
 25279 ;;		_getNV
 25280 ;;		_setOutputPin
 25281 ;; This function is called by:
 25282 ;;		_startServos
 25283 ;; This function uses a non-reentrant model
 25284 ;;
 25285                           
 25286                           	psect	text99
 25287   009E48                     __ptext99:
 25288                           	callstack 0
 25289   009E48                     _setupTimer1:
 25290                           	callstack 15
 25291                           
 25292                           ;incstack = 0
 25293                           ;setupTimer1@io stored from wreg
 25294   009E48  0100               	movlb	0	; () banked
 25295   009E4A  6F9C               	movwf	setupTimer1@io& (0+255),b
 25296                           
 25297                           ;../servo.c: 213:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 25298   009E4C  0100               	movlb	0	; () banked
 25299   009E4E  519C               	movf	setupTimer1@io& (0+255),w,b
 25300   009E50  0D07               	mullw	7
 25301   009E52  50F3               	movf	243,w,c
 25302   009E54  0F11               	addlw	17
 25303   009E56  EC53  F05F         	call	_getNV
 25304   009E5A  0100               	movlb	0	; () banked
 25305   009E5C  BF8D               	btfsc	?_getNV& (0+255),7,b
 25306   009E5E  D013               	goto	l22012
 25307                           
 25308                           ; BSR set to: 0
 25309   009E60  0E30               	movlw	low _currentPos
 25310   009E62  259C               	addwf	setupTimer1@io& (0+255),w,b
 25311   009E64  6ED9               	movwf	fsr2l,c
 25312   009E66  6ADA               	clrf	fsr2h,c
 25313   009E68  0E01               	movlw	high _currentPos
 25314   009E6A  22DA               	addwfc	fsr2h,f,c
 25315   009E6C  50DF               	movf	indf2,w,c
 25316   009E6E  6F95               	movwf	??_setupTimer1& (0+255),b
 25317   009E70  5195               	movf	??_setupTimer1& (0+255),w,b
 25318   009E72  0D13               	mullw	19
 25319   009E74  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25320   009E78  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25321   009E7C  0E10               	movlw	16
 25322   009E7E  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25323   009E80  6F98               	movwf	_setupTimer1$1932& (0+255),b
 25324   009E82  0E0E               	movlw	14
 25325   009E84  D012               	goto	L6
 25326   009E86                     l22012:
 25327                           
 25328                           ; BSR set to: 0
 25329   009E86  0E30               	movlw	low _currentPos
 25330   009E88  259C               	addwf	setupTimer1@io& (0+255),w,b
 25331   009E8A  6ED9               	movwf	fsr2l,c
 25332   009E8C  6ADA               	clrf	fsr2h,c
 25333   009E8E  0E01               	movlw	high _currentPos
 25334   009E90  22DA               	addwfc	fsr2h,f,c
 25335   009E92  50DF               	movf	indf2,w,c
 25336   009E94  6F95               	movwf	??_setupTimer1& (0+255),b
 25337   009E96  5195               	movf	??_setupTimer1& (0+255),w,b
 25338   009E98  0D24               	mullw	36
 25339   009E9A  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25340   009E9E  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25341   009EA2  0E78               	movlw	120
 25342   009EA4  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25343   009EA6  6F98               	movwf	_setupTimer1$1932& (0+255),b
 25344   009EA8  0E05               	movlw	5
 25345   009EAA                     L6:
 25346   009EAA  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 25347   009EAC  6F99               	movwf	(_setupTimer1$1932+1)& (0+255),b
 25348                           
 25349                           ; BSR set to: 0
 25350   009EAE  1D98               	comf	_setupTimer1$1932& (0+255),w,b
 25351   009EB0  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 25352   009EB2  1D99               	comf	(_setupTimer1$1932+1)& (0+255),w,b
 25353   009EB4  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 25354                           
 25355                           ; BSR set to: 0
 25356                           ;../servo.c: 216:     TMR1H = ticks >> 8;
 25357   009EB6  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 25358   009EB8  6ECF               	movwf	207,c	;volatile
 25359                           
 25360                           ; BSR set to: 0
 25361                           ;../servo.c: 217:     TMR1L = ticks & 0xFF;
 25362   009EBA  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 25363                           
 25364                           ; BSR set to: 0
 25365                           ;../servo.c: 220:     servoActive[0] = 1;
 25366   009EBE  0E01               	movlw	1
 25367   009EC0  6FB3               	movwf	_servoActive& (0+255),b
 25368                           
 25369                           ; BSR set to: 0
 25370                           ;../servo.c: 221:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25371   009EC2  519C               	movf	setupTimer1@io& (0+255),w,b
 25372   009EC4  0D07               	mullw	7
 25373   009EC6  50F3               	movf	243,w,c
 25374   009EC8  0F11               	addlw	17
 25375   009ECA  EC53  F05F         	call	_getNV
 25376   009ECE  0100               	movlb	0	; () banked
 25377   009ED0  BB8D               	btfsc	?_getNV& (0+255),5,b
 25378   009ED2  D002               	goto	u23160
 25379   009ED4  0E01               	movlw	1
 25380   009ED6  D001               	goto	u23170
 25381   009ED8                     u23160:
 25382   009ED8  0E00               	movlw	0
 25383   009EDA                     u23170:
 25384   009EDA  6F91               	movwf	setOutputPin@state& (0+255),b
 25385   009EDC  519C               	movf	setupTimer1@io& (0+255),w,b
 25386   009EDE  EC9E  F037         	call	_setOutputPin
 25387                           
 25388                           ;../servo.c: 222:     T1CONbits.TMR1ON = 1;
 25389   009EE2  80CD               	bsf	205,0,c	;volatile
 25390   009EE4  0012               	return		;funcret
 25391   009EE6                     __end_of_setupTimer1:
 25392                           	callstack 0
 25393                           
 25394 ;; *************** function _pollServos *****************
 25395 ;; Defined at:
 25396 ;;		line 294 in file "../servo.c"
 25397 ;; Parameters:    Size  Location     Type
 25398 ;;		None
 25399 ;; Auto vars:     Size  Location     Type
 25400 ;;  io              1   29[BANK1 ] unsigned char 
 25401 ;;  midway          1   28[BANK1 ] unsigned char 
 25402 ;;  beforeMidway    1   27[BANK1 ] enum E12716
 25403 ;;  target          1   26[BANK1 ] unsigned char 
 25404 ;; Return value:  Size  Location     Type
 25405 ;;                  1    wreg      void 
 25406 ;; Registers used:
 25407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25408 ;; Tracked objects:
 25409 ;;		On entry : 0/0
 25410 ;;		On exit  : 0/0
 25411 ;;		Unchanged: 0/0
 25412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25414 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25415 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25416 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25417 ;;Total ram usage:       12 bytes
 25418 ;; Hardware stack levels used: 1
 25419 ;; Hardware stack levels required when called: 18
 25420 ;; This function calls:
 25421 ;;		___awdiv
 25422 ;;		_bounceDown
 25423 ;;		_bounceUp
 25424 ;;		_getNV
 25425 ;;		_initBounce
 25426 ;;		_sendProducedEvent
 25427 ;;		_setOutputPin
 25428 ;;		_tickGet
 25429 ;;		_writeNVM
 25430 ;; This function is called by:
 25431 ;;		_startServos
 25432 ;; This function uses a non-reentrant model
 25433 ;;
 25434                           
 25435                           	psect	text100
 25436   000850                     __ptext100:
 25437                           	callstack 0
 25438   000850                     _pollServos:
 25439                           	callstack 10
 25440                           
 25441                           ;../servo.c: 295:     uint8_t midway;;../servo.c: 296:     Boolean beforeMidway;;../serv
      +                          o.c: 297:     uint8_t io;;../servo.c: 298:     uint8_t target;;../servo.c: 300:     for 
      +                          (io=0; io<16; io++) {
 25442                           
 25443                           ;incstack = 0
 25444   000850  0E00               	movlw	0
 25445   000852  0101               	movlb	1	; () banked
 25446   000854  6FDA               	movwf	pollServos@io& (0+255),b
 25447   000856  EF29  F00B         	goto	l21960
 25448   00085A                     l21728:
 25449                           
 25450                           ; BSR set to: 0
 25451                           ;../servo.c: 303:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 25452   00085A  0101               	movlb	1	; () banked
 25453   00085C  51DA               	movf	pollServos@io& (0+255),w,b
 25454   00085E  0D07               	mullw	7
 25455   000860  50F3               	movf	243,w,c
 25456   000862  0F12               	addlw	18
 25457   000864  EC53  F05F         	call	_getNV
 25458   000868  0100               	movlb	0	; () banked
 25459   00086A  518D               	movf	?_getNV& (0+255),w,b
 25460   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 25461   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25462   000870  0E00               	movlw	0
 25463   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25464   000874  0E02               	movlw	2
 25465   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 25466   000878  EC1B  F054         	call	___awdiv	;wreg free
 25467   00087C  C097  F1CF         	movff	?___awdiv,??_pollServos
 25468   000880  C098  F1D0         	movff	?___awdiv+1,??_pollServos+1
 25469   000884  0101               	movlb	1	; () banked
 25470   000886  51DA               	movf	pollServos@io& (0+255),w,b
 25471   000888  0D07               	mullw	7
 25472   00088A  50F3               	movf	243,w,c
 25473   00088C  0F13               	addlw	19
 25474   00088E  EC53  F05F         	call	_getNV
 25475   000892  0100               	movlb	0	; () banked
 25476   000894  518D               	movf	?_getNV& (0+255),w,b
 25477   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 25478   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25479   00089A  0E00               	movlw	0
 25480   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25481   00089E  0E02               	movlw	2
 25482   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 25483   0008A2  EC1B  F054         	call	___awdiv	;wreg free
 25484   0008A6  0100               	movlb	0	; () banked
 25485   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 25486   0008AA  0101               	movlb	1	; () banked
 25487   0008AC  25CF               	addwf	??_pollServos& (0+255),w,b
 25488   0008AE  6FD9               	movwf	pollServos@midway& (0+255),b
 25489                           
 25490                           ; BSR set to: 1
 25491                           ;../servo.c: 305:                 beforeMidway=FALSE;
 25492   0008B0  0E00               	movlw	0
 25493   0008B2  6FD8               	movwf	pollServos@beforeMidway& (0+255),b
 25494                           
 25495                           ;../servo.c: 306:                 switch (servoState[io]) {
 25496   0008B4  D248               	goto	l21820
 25497   0008B6                     l21732:
 25498                           
 25499                           ; BSR set to: 1
 25500                           ;../servo.c: 308:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 25501   0008B6  51DA               	movf	pollServos@io& (0+255),w,b
 25502   0008B8  0D07               	mullw	7
 25503   0008BA  50F3               	movf	243,w,c
 25504   0008BC  0F12               	addlw	18
 25505   0008BE  EC53  F05F         	call	_getNV
 25506   0008C2  0E30               	movlw	low _currentPos
 25507   0008C4  0101               	movlb	1	; () banked
 25508   0008C6  25DA               	addwf	pollServos@io& (0+255),w,b
 25509   0008C8  6ED9               	movwf	fsr2l,c
 25510   0008CA  6ADA               	clrf	fsr2h,c
 25511   0008CC  0E01               	movlw	high _currentPos
 25512   0008CE  22DA               	addwfc	fsr2h,f,c
 25513   0008D0  50DF               	movf	indf2,w,c
 25514   0008D2  6FCF               	movwf	??_pollServos& (0+255),b
 25515   0008D4  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25516   0008D6  0100               	movlb	0	; () banked
 25517   0008D8  518D               	movf	?_getNV& (0+255),w,b
 25518   0008DA  0101               	movlb	1	; () banked
 25519   0008DC  19CF               	xorwf	??_pollServos& (0+255),w,b
 25520   0008DE  E118               	bnz	l21736
 25521   0008E0  0100               	movlb	0	; () banked
 25522   0008E2  518E               	movf	(?_getNV+1)& (0+255),w,b
 25523   0008E4  0101               	movlb	1	; () banked
 25524   0008E6  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 25525   0008E8  A4D8               	btfss	status,2,c
 25526   0008EA  D012               	goto	l21736
 25527                           
 25528                           ; BSR set to: 1
 25529                           ;../servo.c: 309:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25530   0008EC  51DA               	movf	pollServos@io& (0+255),w,b
 25531   0008EE  0D07               	mullw	7
 25532   0008F0  50F3               	movf	243,w,c
 25533   0008F2  0F11               	addlw	17
 25534   0008F4  EC53  F05F         	call	_getNV
 25535   0008F8  0100               	movlb	0	; () banked
 25536   0008FA  518D               	movf	?_getNV& (0+255),w,b
 25537   0008FC  0B40               	andlw	64
 25538   0008FE  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25539   000900  0101               	movlb	1	; () banked
 25540   000902  51DA               	movf	pollServos@io& (0+255),w,b
 25541   000904  0D04               	mullw	4
 25542   000906  50F3               	movf	243,w,c
 25543   000908  0F08               	addlw	8
 25544   00090A  ECCC  F04B         	call	_sendProducedEvent
 25545                           
 25546                           ;../servo.c: 310:                         } else {
 25547   00090E  D011               	goto	l21738
 25548   000910                     l21736:
 25549                           
 25550                           ; BSR set to: 1
 25551                           ;../servo.c: 311:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25552   000910  51DA               	movf	pollServos@io& (0+255),w,b
 25553   000912  0D07               	mullw	7
 25554   000914  50F3               	movf	243,w,c
 25555   000916  0F11               	addlw	17
 25556   000918  EC53  F05F         	call	_getNV
 25557   00091C  0100               	movlb	0	; () banked
 25558   00091E  518D               	movf	?_getNV& (0+255),w,b
 25559   000920  0B40               	andlw	64
 25560   000922  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25561   000924  0101               	movlb	1	; () banked
 25562   000926  51DA               	movf	pollServos@io& (0+255),w,b
 25563   000928  0D04               	mullw	4
 25564   00092A  50F3               	movf	243,w,c
 25565   00092C  0F0A               	addlw	10
 25566   00092E  ECCC  F04B         	call	_sendProducedEvent
 25567   000932                     l21738:
 25568                           
 25569                           ;../servo.c: 313:                         servoState[io] = SS_MOVING;
 25570   000932  0E10               	movlw	low _servoState
 25571   000934  0101               	movlb	1	; () banked
 25572   000936  25DA               	addwf	pollServos@io& (0+255),w,b
 25573   000938  6ED9               	movwf	fsr2l,c
 25574   00093A  6ADA               	clrf	fsr2h,c
 25575   00093C  0E01               	movlw	high _servoState
 25576   00093E  22DA               	addwfc	fsr2h,f,c
 25577   000940  0E02               	movlw	2
 25578   000942  6EDF               	movwf	indf2,c
 25579   000944                     l21740:
 25580                           
 25581                           ; BSR set to: 1
 25582                           ;../servo.c: 316:                         if (targetPos[io] > currentPos[io]) {
 25583   000944  51DA               	movf	pollServos@io& (0+255),w,b
 25584   000946  0F2B               	addlw	low _targetPos
 25585   000948  6ED9               	movwf	fsr2l,c
 25586   00094A  6ADA               	clrf	fsr2h,c
 25587   00094C  0E30               	movlw	low _currentPos
 25588   00094E  25DA               	addwf	pollServos@io& (0+255),w,b
 25589   000950  6EE1               	movwf	fsr1l,c
 25590   000952  6AE2               	clrf	fsr1h,c
 25591   000954  0E01               	movlw	high _currentPos
 25592   000956  22E2               	addwfc	fsr1h,f,c
 25593   000958  50DE               	movf	postinc2,w,c
 25594   00095A  5CE6               	subwf	postinc1,w,c
 25595   00095C  B0D8               	btfsc	status,0,c
 25596   00095E  D0B4               	goto	l21772
 25597                           
 25598                           ; BSR set to: 1
 25599                           ;../servo.c: 317:                             if (currentPos[io] < midway) {
 25600   000960  0E30               	movlw	low _currentPos
 25601   000962  25DA               	addwf	pollServos@io& (0+255),w,b
 25602   000964  6ED9               	movwf	fsr2l,c
 25603   000966  6ADA               	clrf	fsr2h,c
 25604   000968  0E01               	movlw	high _currentPos
 25605   00096A  22DA               	addwfc	fsr2h,f,c
 25606   00096C  51D9               	movf	pollServos@midway& (0+255),w,b
 25607   00096E  5CDE               	subwf	postinc2,w,c
 25608   000970  B0D8               	btfsc	status,0,c
 25609   000972  D002               	goto	l21746
 25610                           
 25611                           ; BSR set to: 1
 25612                           ;../servo.c: 318:                                 beforeMidway = TRUE;
 25613   000974  0E01               	movlw	1
 25614   000976  6FD8               	movwf	pollServos@beforeMidway& (0+255),b
 25615   000978                     l21746:
 25616                           
 25617                           ; BSR set to: 1
 25618                           ;../servo.c: 321:                             if (stepsPerPollSpeed[io]) {
 25619   000978  0E00               	movlw	low _stepsPerPollSpeed
 25620   00097A  25DA               	addwf	pollServos@io& (0+255),w,b
 25621   00097C  6ED9               	movwf	fsr2l,c
 25622   00097E  6ADA               	clrf	fsr2h,c
 25623   000980  0E01               	movlw	high _stepsPerPollSpeed
 25624   000982  22DA               	addwfc	fsr2h,f,c
 25625   000984  50DF               	movf	indf2,w,c
 25626   000986  B4D8               	btfsc	status,2,c
 25627   000988  D035               	goto	l21754
 25628                           
 25629                           ; BSR set to: 1
 25630                           ;../servo.c: 322:                                 if ((uint8_t)(currentPos[io] + stepsPe
      +                          rPollSpeed[io]) < currentPos[io]) {
 25631   00098A  0E30               	movlw	low _currentPos
 25632   00098C  25DA               	addwf	pollServos@io& (0+255),w,b
 25633   00098E  6ED9               	movwf	fsr2l,c
 25634   000990  6ADA               	clrf	fsr2h,c
 25635   000992  0E01               	movlw	high _currentPos
 25636   000994  22DA               	addwfc	fsr2h,f,c
 25637   000996  0E00               	movlw	low _stepsPerPollSpeed
 25638   000998  25DA               	addwf	pollServos@io& (0+255),w,b
 25639   00099A  6EE1               	movwf	fsr1l,c
 25640   00099C  6AE2               	clrf	fsr1h,c
 25641   00099E  0E01               	movlw	high _stepsPerPollSpeed
 25642   0009A0  22E2               	addwfc	fsr1h,f,c
 25643   0009A2  50E7               	movf	indf1,w,c
 25644   0009A4  6FD0               	movwf	(??_pollServos+1)& (0+255),b
 25645   0009A6  0E30               	movlw	low _currentPos
 25646   0009A8  25DA               	addwf	pollServos@io& (0+255),w,b
 25647   0009AA  6EE1               	movwf	fsr1l,c
 25648   0009AC  6AE2               	clrf	fsr1h,c
 25649   0009AE  0E01               	movlw	high _currentPos
 25650   0009B0  22E2               	addwfc	fsr1h,f,c
 25651   0009B2  50E7               	movf	indf1,w,c
 25652   0009B4  25D0               	addwf	(??_pollServos+1)& (0+255),w,b
 25653   0009B6  6FD1               	movwf	(??_pollServos+2)& (0+255),b
 25654   0009B8  50DE               	movf	postinc2,w,c
 25655   0009BA  5DD1               	subwf	(??_pollServos+2)& (0+255),w,b
 25656   0009BC  B0D8               	btfsc	status,0,c
 25657   0009BE  D009               	goto	l21752
 25658                           
 25659                           ; BSR set to: 1
 25660                           ;../servo.c: 324:                                     currentPos[io] =255;
 25661   0009C0  0E30               	movlw	low _currentPos
 25662   0009C2  25DA               	addwf	pollServos@io& (0+255),w,b
 25663   0009C4  6ED9               	movwf	fsr2l,c
 25664   0009C6  6ADA               	clrf	fsr2h,c
 25665   0009C8  0E01               	movlw	high _currentPos
 25666   0009CA  22DA               	addwfc	fsr2h,f,c
 25667   0009CC  0EFF               	movlw	255
 25668   0009CE  6EDF               	movwf	indf2,c
 25669                           
 25670                           ;../servo.c: 325:                                 } else {
 25671   0009D0  D03F               	goto	l21762
 25672   0009D2                     l21752:
 25673                           
 25674                           ; BSR set to: 1
 25675                           ;../servo.c: 326:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25676   0009D2  0E00               	movlw	low _stepsPerPollSpeed
 25677   0009D4  25DA               	addwf	pollServos@io& (0+255),w,b
 25678   0009D6  6ED9               	movwf	fsr2l,c
 25679   0009D8  6ADA               	clrf	fsr2h,c
 25680   0009DA  0E01               	movlw	high _stepsPerPollSpeed
 25681   0009DC  22DA               	addwfc	fsr2h,f,c
 25682   0009DE  50DF               	movf	indf2,w,c
 25683   0009E0  6FCF               	movwf	??_pollServos& (0+255),b
 25684   0009E2  0E30               	movlw	low _currentPos
 25685   0009E4  25DA               	addwf	pollServos@io& (0+255),w,b
 25686   0009E6  6ED9               	movwf	fsr2l,c
 25687   0009E8  6ADA               	clrf	fsr2h,c
 25688   0009EA  0E01               	movlw	high _currentPos
 25689   0009EC  22DA               	addwfc	fsr2h,f,c
 25690   0009EE  51CF               	movf	??_pollServos& (0+255),w,b
 25691   0009F0  26DF               	addwf	indf2,f,c
 25692   0009F2  D02E               	goto	l21762
 25693   0009F4                     l21754:
 25694                           
 25695                           ; BSR set to: 1
 25696                           ;../servo.c: 329:                                 pollCount[io]--;
 25697   0009F4  0E64               	movlw	low _pollCount
 25698   0009F6  25DA               	addwf	pollServos@io& (0+255),w,b
 25699   0009F8  6ED9               	movwf	fsr2l,c
 25700   0009FA  6ADA               	clrf	fsr2h,c
 25701   0009FC  0E02               	movlw	high _pollCount
 25702   0009FE  22DA               	addwfc	fsr2h,f,c
 25703   000A00  06DF               	decf	indf2,f,c
 25704                           
 25705                           ;../servo.c: 330:                                 if (pollCount[io] == 0) {
 25706   000A02  0E64               	movlw	low _pollCount
 25707   000A04  25DA               	addwf	pollServos@io& (0+255),w,b
 25708   000A06  6ED9               	movwf	fsr2l,c
 25709   000A08  6ADA               	clrf	fsr2h,c
 25710   000A0A  0E02               	movlw	high _pollCount
 25711   000A0C  22DA               	addwfc	fsr2h,f,c
 25712   000A0E  50DF               	movf	indf2,w,c
 25713   000A10  A4D8               	btfss	status,2,c
 25714   000A12  D01E               	goto	l21762
 25715                           
 25716                           ; BSR set to: 1
 25717                           ;../servo.c: 331:                                     if (currentPos[io] < 255) currentP
      +                          os[io]++;
 25718   000A14  0E30               	movlw	low _currentPos
 25719   000A16  25DA               	addwf	pollServos@io& (0+255),w,b
 25720   000A18  6ED9               	movwf	fsr2l,c
 25721   000A1A  6ADA               	clrf	fsr2h,c
 25722   000A1C  0E01               	movlw	high _currentPos
 25723   000A1E  22DA               	addwfc	fsr2h,f,c
 25724   000A20  28DE               	incf	postinc2,w,c
 25725   000A22  B4D8               	btfsc	status,2,c
 25726   000A24  D007               	goto	l21760
 25727                           
 25728                           ; BSR set to: 1
 25729   000A26  0E30               	movlw	low _currentPos
 25730   000A28  25DA               	addwf	pollServos@io& (0+255),w,b
 25731   000A2A  6ED9               	movwf	fsr2l,c
 25732   000A2C  6ADA               	clrf	fsr2h,c
 25733   000A2E  0E01               	movlw	high _currentPos
 25734   000A30  22DA               	addwfc	fsr2h,f,c
 25735   000A32  2ADF               	incf	indf2,f,c
 25736   000A34                     l21760:
 25737                           
 25738                           ; BSR set to: 1
 25739                           ;../servo.c: 332:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25740   000A34  0E74               	movlw	low _pollsPerStepSpeed
 25741   000A36  25DA               	addwf	pollServos@io& (0+255),w,b
 25742   000A38  6ED9               	movwf	fsr2l,c
 25743   000A3A  6ADA               	clrf	fsr2h,c
 25744   000A3C  0E02               	movlw	high _pollsPerStepSpeed
 25745   000A3E  22DA               	addwfc	fsr2h,f,c
 25746   000A40  0E64               	movlw	low _pollCount
 25747   000A42  25DA               	addwf	pollServos@io& (0+255),w,b
 25748   000A44  6EE1               	movwf	fsr1l,c
 25749   000A46  6AE2               	clrf	fsr1h,c
 25750   000A48  0E02               	movlw	high _pollCount
 25751   000A4A  22E2               	addwfc	fsr1h,f,c
 25752   000A4C  CFDF FFE7          	movff	indf2,indf1
 25753   000A50                     l21762:
 25754                           
 25755                           ; BSR set to: 1
 25756                           ;../servo.c: 336:                             if (currentPos[io] > targetPos[io]) {
 25757   000A50  0E30               	movlw	low _currentPos
 25758   000A52  25DA               	addwf	pollServos@io& (0+255),w,b
 25759   000A54  6ED9               	movwf	fsr2l,c
 25760   000A56  6ADA               	clrf	fsr2h,c
 25761   000A58  0E01               	movlw	high _currentPos
 25762   000A5A  22DA               	addwfc	fsr2h,f,c
 25763   000A5C  51DA               	movf	pollServos@io& (0+255),w,b
 25764   000A5E  0F2B               	addlw	low _targetPos
 25765   000A60  6EE1               	movwf	fsr1l,c
 25766   000A62  6AE2               	clrf	fsr1h,c
 25767   000A64  50DE               	movf	postinc2,w,c
 25768   000A66  5CE6               	subwf	postinc1,w,c
 25769   000A68  B0D8               	btfsc	status,0,c
 25770   000A6A  D00C               	goto	l21766
 25771                           
 25772                           ; BSR set to: 1
 25773                           ;../servo.c: 337:                                 currentPos[io] = targetPos[io];
 25774   000A6C  51DA               	movf	pollServos@io& (0+255),w,b
 25775   000A6E  0F2B               	addlw	low _targetPos
 25776   000A70  6ED9               	movwf	fsr2l,c
 25777   000A72  6ADA               	clrf	fsr2h,c
 25778   000A74  0E30               	movlw	low _currentPos
 25779   000A76  25DA               	addwf	pollServos@io& (0+255),w,b
 25780   000A78  6EE1               	movwf	fsr1l,c
 25781   000A7A  6AE2               	clrf	fsr1h,c
 25782   000A7C  0E01               	movlw	high _currentPos
 25783   000A7E  22E2               	addwfc	fsr1h,f,c
 25784   000A80  CFDF FFE7          	movff	indf2,indf1
 25785   000A84                     l21766:
 25786                           
 25787                           ; BSR set to: 1
 25788                           ;../servo.c: 339:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 25789   000A84  0E30               	movlw	low _currentPos
 25790   000A86  25DA               	addwf	pollServos@io& (0+255),w,b
 25791   000A88  6ED9               	movwf	fsr2l,c
 25792   000A8A  6ADA               	clrf	fsr2h,c
 25793   000A8C  0E01               	movlw	high _currentPos
 25794   000A8E  22DA               	addwfc	fsr2h,f,c
 25795   000A90  51D9               	movf	pollServos@midway& (0+255),w,b
 25796   000A92  5CDE               	subwf	postinc2,w,c
 25797   000A94  A0D8               	btfss	status,0,c
 25798   000A96  D0CA               	goto	l21804
 25799                           
 25800                           ; BSR set to: 1
 25801   000A98  51D8               	movf	pollServos@beforeMidway& (0+255),w,b
 25802   000A9A  B4D8               	btfsc	status,2,c
 25803   000A9C  D0C7               	goto	l21804
 25804                           
 25805                           ; BSR set to: 1
 25806                           ;../servo.c: 343:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25807   000A9E  51DA               	movf	pollServos@io& (0+255),w,b
 25808   000AA0  0D07               	mullw	7
 25809   000AA2  50F3               	movf	243,w,c
 25810   000AA4  0F11               	addlw	17
 25811   000AA6  EC53  F05F         	call	_getNV
 25812   000AAA  0100               	movlb	0	; () banked
 25813   000AAC  BD8D               	btfsc	?_getNV& (0+255),6,b
 25814   000AAE  D002               	goto	u22580
 25815   000AB0  0E01               	movlw	1
 25816   000AB2  D001               	goto	u22590
 25817   000AB4                     u22580:
 25818   000AB4  0E00               	movlw	0
 25819   000AB6                     u22590:
 25820   000AB6  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25821   000AB8  0101               	movlb	1	; () banked
 25822   000ABA  51DA               	movf	pollServos@io& (0+255),w,b
 25823   000ABC  0D04               	mullw	4
 25824   000ABE  50F3               	movf	243,w,c
 25825   000AC0  0F09               	addlw	9
 25826   000AC2  ECCC  F04B         	call	_sendProducedEvent
 25827   000AC6  D0B2               	goto	l21804
 25828   000AC8                     l21772:
 25829                           
 25830                           ; BSR set to: 1
 25831   000AC8  0E30               	movlw	low _currentPos
 25832   000ACA  25DA               	addwf	pollServos@io& (0+255),w,b
 25833   000ACC  6ED9               	movwf	fsr2l,c
 25834   000ACE  6ADA               	clrf	fsr2h,c
 25835   000AD0  0E01               	movlw	high _currentPos
 25836   000AD2  22DA               	addwfc	fsr2h,f,c
 25837   000AD4  51DA               	movf	pollServos@io& (0+255),w,b
 25838   000AD6  0F2B               	addlw	low _targetPos
 25839   000AD8  6EE1               	movwf	fsr1l,c
 25840   000ADA  6AE2               	clrf	fsr1h,c
 25841   000ADC  50DE               	movf	postinc2,w,c
 25842   000ADE  5CE6               	subwf	postinc1,w,c
 25843   000AE0  B0D8               	btfsc	status,0,c
 25844   000AE2  D0A4               	goto	l21804
 25845                           
 25846                           ; BSR set to: 1
 25847                           ;../servo.c: 346:                             if (currentPos[io] > midway) {
 25848   000AE4  0E30               	movlw	low _currentPos
 25849   000AE6  25DA               	addwf	pollServos@io& (0+255),w,b
 25850   000AE8  6ED9               	movwf	fsr2l,c
 25851   000AEA  6ADA               	clrf	fsr2h,c
 25852   000AEC  0E01               	movlw	high _currentPos
 25853   000AEE  22DA               	addwfc	fsr2h,f,c
 25854   000AF0  50DE               	movf	postinc2,w,c
 25855   000AF2  5DD9               	subwf	pollServos@midway& (0+255),w,b
 25856   000AF4  B0D8               	btfsc	status,0,c
 25857   000AF6  D002               	goto	l21778
 25858                           
 25859                           ; BSR set to: 1
 25860                           ;../servo.c: 347:                                 beforeMidway = TRUE;
 25861   000AF8  0E01               	movlw	1
 25862   000AFA  6FD8               	movwf	pollServos@beforeMidway& (0+255),b
 25863   000AFC                     l21778:
 25864                           
 25865                           ; BSR set to: 1
 25866                           ;../servo.c: 350:                             if (stepsPerPollSpeed[io]) {
 25867   000AFC  0E00               	movlw	low _stepsPerPollSpeed
 25868   000AFE  25DA               	addwf	pollServos@io& (0+255),w,b
 25869   000B00  6ED9               	movwf	fsr2l,c
 25870   000B02  6ADA               	clrf	fsr2h,c
 25871   000B04  0E01               	movlw	high _stepsPerPollSpeed
 25872   000B06  22DA               	addwfc	fsr2h,f,c
 25873   000B08  50DF               	movf	indf2,w,c
 25874   000B0A  B4D8               	btfsc	status,2,c
 25875   000B0C  D029               	goto	l21786
 25876                           
 25877                           ; BSR set to: 1
 25878                           ;../servo.c: 351:                                 if (stepsPerPollSpeed[io] >= currentPo
      +                          s[io]) {
 25879   000B0E  0E30               	movlw	low _currentPos
 25880   000B10  25DA               	addwf	pollServos@io& (0+255),w,b
 25881   000B12  6ED9               	movwf	fsr2l,c
 25882   000B14  6ADA               	clrf	fsr2h,c
 25883   000B16  0E01               	movlw	high _currentPos
 25884   000B18  22DA               	addwfc	fsr2h,f,c
 25885   000B1A  0E00               	movlw	low _stepsPerPollSpeed
 25886   000B1C  25DA               	addwf	pollServos@io& (0+255),w,b
 25887   000B1E  6EE1               	movwf	fsr1l,c
 25888   000B20  6AE2               	clrf	fsr1h,c
 25889   000B22  0E01               	movlw	high _stepsPerPollSpeed
 25890   000B24  22E2               	addwfc	fsr1h,f,c
 25891   000B26  50DE               	movf	postinc2,w,c
 25892   000B28  5CE6               	subwf	postinc1,w,c
 25893   000B2A  A0D8               	btfss	status,0,c
 25894   000B2C  D008               	goto	l21784
 25895                           
 25896                           ; BSR set to: 1
 25897                           ;../servo.c: 353:                                     currentPos[io] = 0;
 25898   000B2E  0E30               	movlw	low _currentPos
 25899   000B30  25DA               	addwf	pollServos@io& (0+255),w,b
 25900   000B32  6ED9               	movwf	fsr2l,c
 25901   000B34  6ADA               	clrf	fsr2h,c
 25902   000B36  0E01               	movlw	high _currentPos
 25903   000B38  22DA               	addwfc	fsr2h,f,c
 25904   000B3A  6ADF               	clrf	indf2,c
 25905                           
 25906                           ;../servo.c: 354:                                 } else {
 25907   000B3C  D03F               	goto	l21794
 25908   000B3E                     l21784:
 25909                           
 25910                           ; BSR set to: 1
 25911                           ;../servo.c: 355:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25912   000B3E  0E00               	movlw	low _stepsPerPollSpeed
 25913   000B40  25DA               	addwf	pollServos@io& (0+255),w,b
 25914   000B42  6ED9               	movwf	fsr2l,c
 25915   000B44  6ADA               	clrf	fsr2h,c
 25916   000B46  0E01               	movlw	high _stepsPerPollSpeed
 25917   000B48  22DA               	addwfc	fsr2h,f,c
 25918   000B4A  50DF               	movf	indf2,w,c
 25919   000B4C  6FCF               	movwf	??_pollServos& (0+255),b
 25920   000B4E  0E30               	movlw	low _currentPos
 25921   000B50  25DA               	addwf	pollServos@io& (0+255),w,b
 25922   000B52  6ED9               	movwf	fsr2l,c
 25923   000B54  6ADA               	clrf	fsr2h,c
 25924   000B56  0E01               	movlw	high _currentPos
 25925   000B58  22DA               	addwfc	fsr2h,f,c
 25926   000B5A  51CF               	movf	??_pollServos& (0+255),w,b
 25927   000B5C  5EDF               	subwf	indf2,f,c
 25928   000B5E  D02E               	goto	l21794
 25929   000B60                     l21786:
 25930                           
 25931                           ; BSR set to: 1
 25932                           ;../servo.c: 358:                                 pollCount[io]--;
 25933   000B60  0E64               	movlw	low _pollCount
 25934   000B62  25DA               	addwf	pollServos@io& (0+255),w,b
 25935   000B64  6ED9               	movwf	fsr2l,c
 25936   000B66  6ADA               	clrf	fsr2h,c
 25937   000B68  0E02               	movlw	high _pollCount
 25938   000B6A  22DA               	addwfc	fsr2h,f,c
 25939   000B6C  06DF               	decf	indf2,f,c
 25940                           
 25941                           ;../servo.c: 359:                                 if (pollCount[io] == 0) {
 25942   000B6E  0E64               	movlw	low _pollCount
 25943   000B70  25DA               	addwf	pollServos@io& (0+255),w,b
 25944   000B72  6ED9               	movwf	fsr2l,c
 25945   000B74  6ADA               	clrf	fsr2h,c
 25946   000B76  0E02               	movlw	high _pollCount
 25947   000B78  22DA               	addwfc	fsr2h,f,c
 25948   000B7A  50DF               	movf	indf2,w,c
 25949   000B7C  A4D8               	btfss	status,2,c
 25950   000B7E  D01E               	goto	l21794
 25951                           
 25952                           ; BSR set to: 1
 25953                           ;../servo.c: 360:                                     if (currentPos[io] > 0) currentPos
      +                          [io]--;
 25954   000B80  0E30               	movlw	low _currentPos
 25955   000B82  25DA               	addwf	pollServos@io& (0+255),w,b
 25956   000B84  6ED9               	movwf	fsr2l,c
 25957   000B86  6ADA               	clrf	fsr2h,c
 25958   000B88  0E01               	movlw	high _currentPos
 25959   000B8A  22DA               	addwfc	fsr2h,f,c
 25960   000B8C  50DF               	movf	indf2,w,c
 25961   000B8E  B4D8               	btfsc	status,2,c
 25962   000B90  D007               	goto	l21792
 25963                           
 25964                           ; BSR set to: 1
 25965   000B92  0E30               	movlw	low _currentPos
 25966   000B94  25DA               	addwf	pollServos@io& (0+255),w,b
 25967   000B96  6ED9               	movwf	fsr2l,c
 25968   000B98  6ADA               	clrf	fsr2h,c
 25969   000B9A  0E01               	movlw	high _currentPos
 25970   000B9C  22DA               	addwfc	fsr2h,f,c
 25971   000B9E  06DF               	decf	indf2,f,c
 25972   000BA0                     l21792:
 25973                           
 25974                           ; BSR set to: 1
 25975                           ;../servo.c: 361:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25976   000BA0  0E74               	movlw	low _pollsPerStepSpeed
 25977   000BA2  25DA               	addwf	pollServos@io& (0+255),w,b
 25978   000BA4  6ED9               	movwf	fsr2l,c
 25979   000BA6  6ADA               	clrf	fsr2h,c
 25980   000BA8  0E02               	movlw	high _pollsPerStepSpeed
 25981   000BAA  22DA               	addwfc	fsr2h,f,c
 25982   000BAC  0E64               	movlw	low _pollCount
 25983   000BAE  25DA               	addwf	pollServos@io& (0+255),w,b
 25984   000BB0  6EE1               	movwf	fsr1l,c
 25985   000BB2  6AE2               	clrf	fsr1h,c
 25986   000BB4  0E02               	movlw	high _pollCount
 25987   000BB6  22E2               	addwfc	fsr1h,f,c
 25988   000BB8  CFDF FFE7          	movff	indf2,indf1
 25989   000BBC                     l21794:
 25990                           
 25991                           ; BSR set to: 1
 25992                           ;../servo.c: 365:                             if (currentPos[io] < targetPos[io]) {
 25993   000BBC  51DA               	movf	pollServos@io& (0+255),w,b
 25994   000BBE  0F2B               	addlw	low _targetPos
 25995   000BC0  6ED9               	movwf	fsr2l,c
 25996   000BC2  6ADA               	clrf	fsr2h,c
 25997   000BC4  0E30               	movlw	low _currentPos
 25998   000BC6  25DA               	addwf	pollServos@io& (0+255),w,b
 25999   000BC8  6EE1               	movwf	fsr1l,c
 26000   000BCA  6AE2               	clrf	fsr1h,c
 26001   000BCC  0E01               	movlw	high _currentPos
 26002   000BCE  22E2               	addwfc	fsr1h,f,c
 26003   000BD0  50DE               	movf	postinc2,w,c
 26004   000BD2  5CE6               	subwf	postinc1,w,c
 26005   000BD4  B0D8               	btfsc	status,0,c
 26006   000BD6  D00C               	goto	l21798
 26007                           
 26008                           ; BSR set to: 1
 26009                           ;../servo.c: 366:                                 currentPos[io] = targetPos[io];
 26010   000BD8  51DA               	movf	pollServos@io& (0+255),w,b
 26011   000BDA  0F2B               	addlw	low _targetPos
 26012   000BDC  6ED9               	movwf	fsr2l,c
 26013   000BDE  6ADA               	clrf	fsr2h,c
 26014   000BE0  0E30               	movlw	low _currentPos
 26015   000BE2  25DA               	addwf	pollServos@io& (0+255),w,b
 26016   000BE4  6EE1               	movwf	fsr1l,c
 26017   000BE6  6AE2               	clrf	fsr1h,c
 26018   000BE8  0E01               	movlw	high _currentPos
 26019   000BEA  22E2               	addwfc	fsr1h,f,c
 26020   000BEC  CFDF FFE7          	movff	indf2,indf1
 26021   000BF0                     l21798:
 26022                           
 26023                           ; BSR set to: 1
 26024                           ;../servo.c: 368:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 26025   000BF0  0E30               	movlw	low _currentPos
 26026   000BF2  25DA               	addwf	pollServos@io& (0+255),w,b
 26027   000BF4  6ED9               	movwf	fsr2l,c
 26028   000BF6  6ADA               	clrf	fsr2h,c
 26029   000BF8  0E01               	movlw	high _currentPos
 26030   000BFA  22DA               	addwfc	fsr2h,f,c
 26031   000BFC  50DE               	movf	postinc2,w,c
 26032   000BFE  5DD9               	subwf	pollServos@midway& (0+255),w,b
 26033   000C00  A0D8               	btfss	status,0,c
 26034   000C02  D014               	goto	l21804
 26035                           
 26036                           ; BSR set to: 1
 26037   000C04  51D8               	movf	pollServos@beforeMidway& (0+255),w,b
 26038   000C06  B4D8               	btfsc	status,2,c
 26039   000C08  D011               	goto	l21804
 26040                           
 26041                           ; BSR set to: 1
 26042                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 26043   000C0A  51DA               	movf	pollServos@io& (0+255),w,b
 26044   000C0C  0D07               	mullw	7
 26045   000C0E  50F3               	movf	243,w,c
 26046   000C10  0F11               	addlw	17
 26047   000C12  EC53  F05F         	call	_getNV
 26048   000C16  0100               	movlb	0	; () banked
 26049   000C18  518D               	movf	?_getNV& (0+255),w,b
 26050   000C1A  0B40               	andlw	64
 26051   000C1C  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26052   000C1E  0101               	movlb	1	; () banked
 26053   000C20  51DA               	movf	pollServos@io& (0+255),w,b
 26054   000C22  0D04               	mullw	4
 26055   000C24  50F3               	movf	243,w,c
 26056   000C26  0F09               	addlw	9
 26057   000C28  ECCC  F04B         	call	_sendProducedEvent
 26058   000C2C                     l21804:
 26059                           
 26060                           ;../servo.c: 373:                         if (targetPos[io] == currentPos[io]) {
 26061   000C2C  0E30               	movlw	low _currentPos
 26062   000C2E  0101               	movlb	1	; () banked
 26063   000C30  25DA               	addwf	pollServos@io& (0+255),w,b
 26064   000C32  6ED9               	movwf	fsr2l,c
 26065   000C34  6ADA               	clrf	fsr2h,c
 26066   000C36  0E01               	movlw	high _currentPos
 26067   000C38  22DA               	addwfc	fsr2h,f,c
 26068   000C3A  51DA               	movf	pollServos@io& (0+255),w,b
 26069   000C3C  0F2B               	addlw	low _targetPos
 26070   000C3E  6EE1               	movwf	fsr1l,c
 26071   000C40  6AE2               	clrf	fsr1h,c
 26072   000C42  50DE               	movf	postinc2,w,c
 26073   000C44  18E6               	xorwf	postinc1,w,c
 26074   000C46  A4D8               	btfss	status,2,c
 26075   000C48  EF94  F00B         	goto	l21972
 26076                           
 26077                           ; BSR set to: 1
 26078                           ;../servo.c: 374:                             servoState[io] = SS_STOPPED;
 26079   000C4C  0E10               	movlw	low _servoState
 26080   000C4E  25DA               	addwf	pollServos@io& (0+255),w,b
 26081   000C50  6ED9               	movwf	fsr2l,c
 26082   000C52  6ADA               	clrf	fsr2h,c
 26083   000C54  0E01               	movlw	high _servoState
 26084   000C56  22DA               	addwfc	fsr2h,f,c
 26085   000C58  0E01               	movlw	1
 26086   000C5A  6EDF               	movwf	indf2,c
 26087                           
 26088                           ; BSR set to: 1
 26089                           ;../servo.c: 375:                             ticksWhenStopped[io].val = tickGet();
 26090   000C5C  ECE5  F05B         	call	_tickGet	;wreg free
 26091   000C60  0101               	movlb	1	; () banked
 26092   000C62  51DA               	movf	pollServos@io& (0+255),w,b
 26093   000C64  0D04               	mullw	4
 26094   000C66  0E88               	movlw	low _ticksWhenStopped
 26095   000C68  24F3               	addwf	243,w,c
 26096   000C6A  6ED9               	movwf	fsr2l,c
 26097   000C6C  0E03               	movlw	high _ticksWhenStopped
 26098   000C6E  20F4               	addwfc	prodh,w,c
 26099   000C70  6EDA               	movwf	fsr2h,c
 26100   000C72  0100               	movlb	0	; () banked
 26101   000C74  C08D  FFDE         	movff	?_tickGet,postinc2
 26102   000C78  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26103   000C7C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26104   000C80  C090  FFDE         	movff	?_tickGet+3,postinc2
 26105                           
 26106                           ; BSR set to: 0
 26107                           ;../servo.c: 377:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 26108   000C84  0101               	movlb	1	; () banked
 26109   000C86  51DA               	movf	pollServos@io& (0+255),w,b
 26110   000C88  0D07               	mullw	7
 26111   000C8A  50F3               	movf	243,w,c
 26112   000C8C  0F12               	addlw	18
 26113   000C8E  EC53  F05F         	call	_getNV
 26114   000C92  0E30               	movlw	low _currentPos
 26115   000C94  0101               	movlb	1	; () banked
 26116   000C96  25DA               	addwf	pollServos@io& (0+255),w,b
 26117   000C98  6ED9               	movwf	fsr2l,c
 26118   000C9A  6ADA               	clrf	fsr2h,c
 26119   000C9C  0E01               	movlw	high _currentPos
 26120   000C9E  22DA               	addwfc	fsr2h,f,c
 26121   000CA0  50DF               	movf	indf2,w,c
 26122   000CA2  6FCF               	movwf	??_pollServos& (0+255),b
 26123   000CA4  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26124   000CA6  0100               	movlb	0	; () banked
 26125   000CA8  518D               	movf	?_getNV& (0+255),w,b
 26126   000CAA  0101               	movlb	1	; () banked
 26127   000CAC  19CF               	xorwf	??_pollServos& (0+255),w,b
 26128   000CAE  E11B               	bnz	l21814
 26129   000CB0  0100               	movlb	0	; () banked
 26130   000CB2  518E               	movf	(?_getNV+1)& (0+255),w,b
 26131   000CB4  0101               	movlb	1	; () banked
 26132   000CB6  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 26133   000CB8  A4D8               	btfss	status,2,c
 26134   000CBA  D015               	goto	l21814
 26135                           
 26136                           ; BSR set to: 1
 26137                           ;../servo.c: 378:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26138   000CBC  51DA               	movf	pollServos@io& (0+255),w,b
 26139   000CBE  0D07               	mullw	7
 26140   000CC0  50F3               	movf	243,w,c
 26141   000CC2  0F11               	addlw	17
 26142   000CC4  EC53  F05F         	call	_getNV
 26143   000CC8  0100               	movlb	0	; () banked
 26144   000CCA  BD8D               	btfsc	?_getNV& (0+255),6,b
 26145   000CCC  D002               	goto	u22710
 26146   000CCE  0E01               	movlw	1
 26147   000CD0  D001               	goto	u22720
 26148   000CD2                     u22710:
 26149   000CD2  0E00               	movlw	0
 26150   000CD4                     u22720:
 26151   000CD4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26152   000CD6  0101               	movlb	1	; () banked
 26153   000CD8  51DA               	movf	pollServos@io& (0+255),w,b
 26154   000CDA  0D04               	mullw	4
 26155   000CDC  50F3               	movf	243,w,c
 26156   000CDE  0F08               	addlw	8
 26157   000CE0  ECCC  F04B         	call	_sendProducedEvent
 26158                           
 26159                           ;../servo.c: 379:                             } else {
 26160   000CE4  D014               	goto	l21816
 26161   000CE6                     l21814:
 26162                           
 26163                           ; BSR set to: 1
 26164                           ;../servo.c: 380:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26165   000CE6  51DA               	movf	pollServos@io& (0+255),w,b
 26166   000CE8  0D07               	mullw	7
 26167   000CEA  50F3               	movf	243,w,c
 26168   000CEC  0F11               	addlw	17
 26169   000CEE  EC53  F05F         	call	_getNV
 26170   000CF2  0100               	movlb	0	; () banked
 26171   000CF4  BD8D               	btfsc	?_getNV& (0+255),6,b
 26172   000CF6  D002               	goto	u22730
 26173   000CF8  0E01               	movlw	1
 26174   000CFA  D001               	goto	u22740
 26175   000CFC                     u22730:
 26176   000CFC  0E00               	movlw	0
 26177   000CFE                     u22740:
 26178   000CFE  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26179   000D00  0101               	movlb	1	; () banked
 26180   000D02  51DA               	movf	pollServos@io& (0+255),w,b
 26181   000D04  0D04               	mullw	4
 26182   000D06  50F3               	movf	243,w,c
 26183   000D08  0F0A               	addlw	10
 26184   000D0A  ECCC  F04B         	call	_sendProducedEvent
 26185   000D0E                     l21816:
 26186                           
 26187                           ;../servo.c: 382:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26188   000D0E  0EDE               	movlw	222
 26189   000D10  0101               	movlb	1	; () banked
 26190   000D12  25DA               	addwf	pollServos@io& (0+255),w,b
 26191   000D14  6FCF               	movwf	??_pollServos& (0+255),b
 26192   000D16  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26193   000D18  0E03               	movlw	3
 26194   000D1A  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 26195   000D1C  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 26196   000D20  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26197   000D24  0100               	movlb	0	; () banked
 26198   000D26  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26199   000D28  0E30               	movlw	low _currentPos
 26200   000D2A  0101               	movlb	1	; () banked
 26201   000D2C  25DA               	addwf	pollServos@io& (0+255),w,b
 26202   000D2E  6ED9               	movwf	fsr2l,c
 26203   000D30  6ADA               	clrf	fsr2h,c
 26204   000D32  0E01               	movlw	high _currentPos
 26205   000D34  22DA               	addwfc	fsr2h,f,c
 26206   000D36  50DF               	movf	indf2,w,c
 26207   000D38  0100               	movlb	0	; () banked
 26208   000D3A  6FA7               	movwf	writeNVM@value& (0+255),b
 26209   000D3C  0E00               	movlw	0
 26210   000D3E  EC61  F05D         	call	_writeNVM
 26211   000D42  EF94  F00B         	goto	l21972
 26212   000D46                     l21820:
 26213                           
 26214                           ; BSR set to: 1
 26215   000D46  0E10               	movlw	low _servoState
 26216   000D48  25DA               	addwf	pollServos@io& (0+255),w,b
 26217   000D4A  6ED9               	movwf	fsr2l,c
 26218   000D4C  6ADA               	clrf	fsr2h,c
 26219   000D4E  0E01               	movlw	high _servoState
 26220   000D50  22DA               	addwfc	fsr2h,f,c
 26221   000D52  50DF               	movf	indf2,w,c
 26222   000D54  6FCF               	movwf	??_pollServos& (0+255),b
 26223   000D56  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26224                           
 26225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26226                           ; Switch size 1, requested type "simple"
 26227                           ; Number of cases is 1, Range of values is 0 to 0
 26228                           ; switch strategies available:
 26229                           ; Name         Instructions Cycles
 26230                           ; simple_byte            4     3 (average)
 26231                           ;	Chosen strategy is simple_byte
 26232   000D58  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 26233   000D5A  0A00               	xorlw	0	; case 0
 26234   000D5C  A4D8               	btfss	status,2,c
 26235   000D5E  EF94  F00B         	goto	l21972
 26236                           
 26237                           ; BSR set to: 1
 26238                           ; Switch size 1, requested type "simple"
 26239                           ; Number of cases is 4, Range of values is 0 to 3
 26240                           ; switch strategies available:
 26241                           ; Name         Instructions Cycles
 26242                           ; simple_byte           13     7 (average)
 26243                           ;	Chosen strategy is simple_byte
 26244   000D62  51CF               	movf	??_pollServos& (0+255),w,b
 26245   000D64  0A00               	xorlw	0	; case 0
 26246   000D66  B4D8               	btfsc	status,2,c
 26247   000D68  EF94  F00B         	goto	l21972
 26248   000D6C  0A01               	xorlw	1	; case 1
 26249   000D6E  B4D8               	btfsc	status,2,c
 26250   000D70  EF94  F00B         	goto	l21972
 26251   000D74  0A03               	xorlw	3	; case 2
 26252   000D76  B4D8               	btfsc	status,2,c
 26253   000D78  D5E5               	goto	l21740
 26254   000D7A  0A01               	xorlw	1	; case 3
 26255   000D7C  B4D8               	btfsc	status,2,c
 26256   000D7E  D59B               	goto	l21732
 26257   000D80  EF94  F00B         	goto	l21972
 26258   000D84                     l21822:
 26259                           
 26260                           ; BSR set to: 1
 26261                           ;../servo.c: 393:                         initBounce(io);
 26262   000D84  51DA               	movf	pollServos@io& (0+255),w,b
 26263   000D86  ECAF  F061         	call	_initBounce
 26264                           
 26265                           ;../servo.c: 394:                         servoState[io] = SS_MOVING;
 26266   000D8A  0E10               	movlw	low _servoState
 26267   000D8C  0101               	movlb	1	; () banked
 26268   000D8E  25DA               	addwf	pollServos@io& (0+255),w,b
 26269   000D90  6ED9               	movwf	fsr2l,c
 26270   000D92  6ADA               	clrf	fsr2h,c
 26271   000D94  0E01               	movlw	high _servoState
 26272   000D96  22DA               	addwfc	fsr2h,f,c
 26273   000D98  0E02               	movlw	2
 26274   000D9A  6EDF               	movwf	indf2,c
 26275                           
 26276                           ; BSR set to: 1
 26277                           ;../servo.c: 395:                         loopCount[io] = 0;
 26278   000D9C  0E54               	movlw	low _loopCount
 26279   000D9E  25DA               	addwf	pollServos@io& (0+255),w,b
 26280   000DA0  6ED9               	movwf	fsr2l,c
 26281   000DA2  6ADA               	clrf	fsr2h,c
 26282   000DA4  0E02               	movlw	high _loopCount
 26283   000DA6  22DA               	addwfc	fsr2h,f,c
 26284   000DA8  6ADF               	clrf	indf2,c
 26285   000DAA                     l21828:
 26286                           
 26287                           ; BSR set to: 1
 26288                           ;../servo.c: 399:                         loopCount[io]++;
 26289   000DAA  0E54               	movlw	low _loopCount
 26290   000DAC  25DA               	addwf	pollServos@io& (0+255),w,b
 26291   000DAE  6ED9               	movwf	fsr2l,c
 26292   000DB0  6ADA               	clrf	fsr2h,c
 26293   000DB2  0E02               	movlw	high _loopCount
 26294   000DB4  22DA               	addwfc	fsr2h,f,c
 26295   000DB6  2ADF               	incf	indf2,f,c
 26296                           
 26297                           ; BSR set to: 1
 26298                           ;../servo.c: 400:                         if (loopCount[io] >= 255) {
 26299   000DB8  0E54               	movlw	low _loopCount
 26300   000DBA  25DA               	addwf	pollServos@io& (0+255),w,b
 26301   000DBC  6ED9               	movwf	fsr2l,c
 26302   000DBE  6ADA               	clrf	fsr2h,c
 26303   000DC0  0E02               	movlw	high _loopCount
 26304   000DC2  22DA               	addwfc	fsr2h,f,c
 26305   000DC4  28DE               	incf	postinc2,w,c
 26306   000DC6  A4D8               	btfss	status,2,c
 26307   000DC8  D059               	goto	l21842
 26308                           
 26309                           ; BSR set to: 1
 26310                           ;../servo.c: 401:                             servoState[io] = SS_STOPPED;
 26311   000DCA  0E10               	movlw	low _servoState
 26312   000DCC  25DA               	addwf	pollServos@io& (0+255),w,b
 26313   000DCE  6ED9               	movwf	fsr2l,c
 26314   000DD0  6ADA               	clrf	fsr2h,c
 26315   000DD2  0E01               	movlw	high _servoState
 26316   000DD4  22DA               	addwfc	fsr2h,f,c
 26317   000DD6  0E01               	movlw	1
 26318   000DD8  6EDF               	movwf	indf2,c
 26319                           
 26320                           ; BSR set to: 1
 26321                           ;../servo.c: 402:                             ticksWhenStopped[io].val = tickGet();
 26322   000DDA  ECE5  F05B         	call	_tickGet	;wreg free
 26323   000DDE  0101               	movlb	1	; () banked
 26324   000DE0  51DA               	movf	pollServos@io& (0+255),w,b
 26325   000DE2  0D04               	mullw	4
 26326   000DE4  0E88               	movlw	low _ticksWhenStopped
 26327   000DE6  24F3               	addwf	243,w,c
 26328   000DE8  6ED9               	movwf	fsr2l,c
 26329   000DEA  0E03               	movlw	high _ticksWhenStopped
 26330   000DEC  20F4               	addwfc	prodh,w,c
 26331   000DEE  6EDA               	movwf	fsr2h,c
 26332   000DF0  0100               	movlb	0	; () banked
 26333   000DF2  C08D  FFDE         	movff	?_tickGet,postinc2
 26334   000DF6  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26335   000DFA  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26336   000DFE  C090  FFDE         	movff	?_tickGet+3,postinc2
 26337                           
 26338                           ; BSR set to: 0
 26339                           ;../servo.c: 403:                             currentPos[io] = targetPos[io];
 26340   000E02  0101               	movlb	1	; () banked
 26341   000E04  51DA               	movf	pollServos@io& (0+255),w,b
 26342   000E06  0F2B               	addlw	low _targetPos
 26343   000E08  6ED9               	movwf	fsr2l,c
 26344   000E0A  6ADA               	clrf	fsr2h,c
 26345   000E0C  0E30               	movlw	low _currentPos
 26346   000E0E  25DA               	addwf	pollServos@io& (0+255),w,b
 26347   000E10  6EE1               	movwf	fsr1l,c
 26348   000E12  6AE2               	clrf	fsr1h,c
 26349   000E14  0E01               	movlw	high _currentPos
 26350   000E16  22E2               	addwfc	fsr1h,f,c
 26351   000E18  CFDF FFE7          	movff	indf2,indf1
 26352                           
 26353                           ; BSR set to: 1
 26354                           ;../servo.c: 404:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 26355   000E1C  51DA               	movf	pollServos@io& (0+255),w,b
 26356   000E1E  0D07               	mullw	7
 26357   000E20  50F3               	movf	243,w,c
 26358   000E22  0F11               	addlw	17
 26359   000E24  EC53  F05F         	call	_getNV
 26360   000E28  0100               	movlb	0	; () banked
 26361   000E2A  BD8D               	btfsc	?_getNV& (0+255),6,b
 26362   000E2C  D002               	goto	u22760
 26363   000E2E  0E01               	movlw	1
 26364   000E30  D001               	goto	u22770
 26365   000E32                     u22760:
 26366   000E32  0E00               	movlw	0
 26367   000E34                     u22770:
 26368   000E34  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26369   000E36  0101               	movlb	1	; () banked
 26370   000E38  51DA               	movf	pollServos@io& (0+255),w,b
 26371   000E3A  0D04               	mullw	4
 26372   000E3C  50F3               	movf	243,w,c
 26373   000E3E  0F08               	addlw	8
 26374   000E40  ECCC  F04B         	call	_sendProducedEvent
 26375                           
 26376                           ;../servo.c: 405:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26377   000E44  0EDE               	movlw	222
 26378   000E46  0101               	movlb	1	; () banked
 26379   000E48  25DA               	addwf	pollServos@io& (0+255),w,b
 26380   000E4A  6FCF               	movwf	??_pollServos& (0+255),b
 26381   000E4C  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26382   000E4E  0E03               	movlw	3
 26383   000E50  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 26384   000E52  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 26385   000E56  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26386   000E5A  0100               	movlb	0	; () banked
 26387   000E5C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26388   000E5E  0E30               	movlw	low _currentPos
 26389   000E60  0101               	movlb	1	; () banked
 26390   000E62  25DA               	addwf	pollServos@io& (0+255),w,b
 26391   000E64  6ED9               	movwf	fsr2l,c
 26392   000E66  6ADA               	clrf	fsr2h,c
 26393   000E68  0E01               	movlw	high _currentPos
 26394   000E6A  22DA               	addwfc	fsr2h,f,c
 26395   000E6C  50DF               	movf	indf2,w,c
 26396   000E6E  0100               	movlb	0	; () banked
 26397   000E70  6FA7               	movwf	writeNVM@value& (0+255),b
 26398   000E72  0E00               	movlw	0
 26399   000E74  EC61  F05D         	call	_writeNVM
 26400                           
 26401                           ;../servo.c: 406:                             break;
 26402   000E78  EF94  F00B         	goto	l21972
 26403   000E7C                     l21842:
 26404                           
 26405                           ; BSR set to: 1
 26406                           ;../servo.c: 409:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 26407   000E7C  51DA               	movf	pollServos@io& (0+255),w,b
 26408   000E7E  0D07               	mullw	7
 26409   000E80  50F3               	movf	243,w,c
 26410   000E82  0F12               	addlw	18
 26411   000E84  EC53  F05F         	call	_getNV
 26412   000E88  0100               	movlb	0	; () banked
 26413   000E8A  518D               	movf	?_getNV& (0+255),w,b
 26414   000E8C  0101               	movlb	1	; () banked
 26415   000E8E  6FD7               	movwf	pollServos@target& (0+255),b
 26416                           
 26417                           ; BSR set to: 1
 26418                           ;../servo.c: 413:                         if (targetPos[io] == target) {
 26419   000E90  51DA               	movf	pollServos@io& (0+255),w,b
 26420   000E92  0F2B               	addlw	low _targetPos
 26421   000E94  6ED9               	movwf	fsr2l,c
 26422   000E96  6ADA               	clrf	fsr2h,c
 26423   000E98  51D7               	movf	pollServos@target& (0+255),w,b
 26424   000E9A  18DE               	xorwf	postinc2,w,c
 26425   000E9C  A4D8               	btfss	status,2,c
 26426   000E9E  D060               	goto	l21858
 26427                           
 26428                           ; BSR set to: 1
 26429                           ;../servo.c: 414:                             if (bounceUp(io)) {
 26430   000EA0  51DA               	movf	pollServos@io& (0+255),w,b
 26431   000EA2  ECC4  F02C         	call	_bounceUp
 26432   000EA6  0900               	iorlw	0
 26433   000EA8  B4D8               	btfsc	status,2,c
 26434   000EAA  EF94  F00B         	goto	l21972
 26435                           
 26436                           ;../servo.c: 415:                                 servoState[io] = SS_STOPPED;
 26437   000EAE  0E10               	movlw	low _servoState
 26438   000EB0  0101               	movlb	1	; () banked
 26439   000EB2  25DA               	addwf	pollServos@io& (0+255),w,b
 26440   000EB4  6ED9               	movwf	fsr2l,c
 26441   000EB6  6ADA               	clrf	fsr2h,c
 26442   000EB8  0E01               	movlw	high _servoState
 26443   000EBA  22DA               	addwfc	fsr2h,f,c
 26444   000EBC  0E01               	movlw	1
 26445   000EBE  6EDF               	movwf	indf2,c
 26446                           
 26447                           ; BSR set to: 1
 26448                           ;../servo.c: 416:                                 ticksWhenStopped[io].val = tickGet();
 26449   000EC0  ECE5  F05B         	call	_tickGet	;wreg free
 26450   000EC4  0101               	movlb	1	; () banked
 26451   000EC6  51DA               	movf	pollServos@io& (0+255),w,b
 26452   000EC8  0D04               	mullw	4
 26453   000ECA  0E88               	movlw	low _ticksWhenStopped
 26454   000ECC  24F3               	addwf	243,w,c
 26455   000ECE  6ED9               	movwf	fsr2l,c
 26456   000ED0  0E03               	movlw	high _ticksWhenStopped
 26457   000ED2  20F4               	addwfc	prodh,w,c
 26458   000ED4  6EDA               	movwf	fsr2h,c
 26459   000ED6  0100               	movlb	0	; () banked
 26460   000ED8  C08D  FFDE         	movff	?_tickGet,postinc2
 26461   000EDC  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26462   000EE0  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26463   000EE4  C090  FFDE         	movff	?_tickGet+3,postinc2
 26464                           
 26465                           ; BSR set to: 0
 26466                           ;../servo.c: 417:                                 currentPos[io] = targetPos[io];
 26467   000EE8  0101               	movlb	1	; () banked
 26468   000EEA  51DA               	movf	pollServos@io& (0+255),w,b
 26469   000EEC  0F2B               	addlw	low _targetPos
 26470   000EEE  6ED9               	movwf	fsr2l,c
 26471   000EF0  6ADA               	clrf	fsr2h,c
 26472   000EF2  0E30               	movlw	low _currentPos
 26473   000EF4  25DA               	addwf	pollServos@io& (0+255),w,b
 26474   000EF6  6EE1               	movwf	fsr1l,c
 26475   000EF8  6AE2               	clrf	fsr1h,c
 26476   000EFA  0E01               	movlw	high _currentPos
 26477   000EFC  22E2               	addwfc	fsr1h,f,c
 26478   000EFE  CFDF FFE7          	movff	indf2,indf1
 26479                           
 26480                           ; BSR set to: 1
 26481                           ;../servo.c: 418:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26482   000F02  51DA               	movf	pollServos@io& (0+255),w,b
 26483   000F04  0D07               	mullw	7
 26484   000F06  50F3               	movf	243,w,c
 26485   000F08  0F11               	addlw	17
 26486   000F0A  EC53  F05F         	call	_getNV
 26487   000F0E  0100               	movlb	0	; () banked
 26488   000F10  BD8D               	btfsc	?_getNV& (0+255),6,b
 26489   000F12  D002               	goto	u22800
 26490   000F14  0E01               	movlw	1
 26491   000F16  D001               	goto	u22810
 26492   000F18                     u22800:
 26493   000F18  0E00               	movlw	0
 26494   000F1A                     u22810:
 26495   000F1A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26496   000F1C  0101               	movlb	1	; () banked
 26497   000F1E  51DA               	movf	pollServos@io& (0+255),w,b
 26498   000F20  0D04               	mullw	4
 26499   000F22  50F3               	movf	243,w,c
 26500   000F24  0F08               	addlw	8
 26501   000F26  ECCC  F04B         	call	_sendProducedEvent
 26502                           
 26503                           ;../servo.c: 419:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26504   000F2A  0EDE               	movlw	222
 26505   000F2C  0101               	movlb	1	; () banked
 26506   000F2E  25DA               	addwf	pollServos@io& (0+255),w,b
 26507   000F30  6FCF               	movwf	??_pollServos& (0+255),b
 26508   000F32  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26509   000F34  0E03               	movlw	3
 26510   000F36  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 26511   000F38  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 26512   000F3C  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26513   000F40  0100               	movlb	0	; () banked
 26514   000F42  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26515   000F44  0E30               	movlw	low _currentPos
 26516   000F46  0101               	movlb	1	; () banked
 26517   000F48  25DA               	addwf	pollServos@io& (0+255),w,b
 26518   000F4A  6ED9               	movwf	fsr2l,c
 26519   000F4C  6ADA               	clrf	fsr2h,c
 26520   000F4E  0E01               	movlw	high _currentPos
 26521   000F50  22DA               	addwfc	fsr2h,f,c
 26522   000F52  50DF               	movf	indf2,w,c
 26523   000F54  0100               	movlb	0	; () banked
 26524   000F56  6FA7               	movwf	writeNVM@value& (0+255),b
 26525   000F58  0E00               	movlw	0
 26526   000F5A  EC61  F05D         	call	_writeNVM
 26527   000F5E  D3E4               	goto	l21972
 26528   000F60                     l21858:
 26529                           
 26530                           ; BSR set to: 1
 26531                           ;../servo.c: 422:                             if (bounceDown(io)) {
 26532   000F60  51DA               	movf	pollServos@io& (0+255),w,b
 26533   000F62  EC98  F014         	call	_bounceDown
 26534   000F66  0900               	iorlw	0
 26535   000F68  B4D8               	btfsc	status,2,c
 26536   000F6A  D3DE               	goto	l21972
 26537                           
 26538                           ;../servo.c: 423:                                 servoState[io] = SS_STOPPED;
 26539   000F6C  0E10               	movlw	low _servoState
 26540   000F6E  0101               	movlb	1	; () banked
 26541   000F70  25DA               	addwf	pollServos@io& (0+255),w,b
 26542   000F72  6ED9               	movwf	fsr2l,c
 26543   000F74  6ADA               	clrf	fsr2h,c
 26544   000F76  0E01               	movlw	high _servoState
 26545   000F78  22DA               	addwfc	fsr2h,f,c
 26546   000F7A  0E01               	movlw	1
 26547   000F7C  6EDF               	movwf	indf2,c
 26548                           
 26549                           ; BSR set to: 1
 26550                           ;../servo.c: 424:                                 ticksWhenStopped[io].val = tickGet();
 26551   000F7E  ECE5  F05B         	call	_tickGet	;wreg free
 26552   000F82  0101               	movlb	1	; () banked
 26553   000F84  51DA               	movf	pollServos@io& (0+255),w,b
 26554   000F86  0D04               	mullw	4
 26555   000F88  0E88               	movlw	low _ticksWhenStopped
 26556   000F8A  24F3               	addwf	243,w,c
 26557   000F8C  6ED9               	movwf	fsr2l,c
 26558   000F8E  0E03               	movlw	high _ticksWhenStopped
 26559   000F90  20F4               	addwfc	prodh,w,c
 26560   000F92  6EDA               	movwf	fsr2h,c
 26561   000F94  0100               	movlb	0	; () banked
 26562   000F96  C08D  FFDE         	movff	?_tickGet,postinc2
 26563   000F9A  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26564   000F9E  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26565   000FA2  C090  FFDE         	movff	?_tickGet+3,postinc2
 26566                           
 26567                           ; BSR set to: 0
 26568                           ;../servo.c: 425:                                 currentPos[io] = targetPos[io];
 26569   000FA6  0101               	movlb	1	; () banked
 26570   000FA8  51DA               	movf	pollServos@io& (0+255),w,b
 26571   000FAA  0F2B               	addlw	low _targetPos
 26572   000FAC  6ED9               	movwf	fsr2l,c
 26573   000FAE  6ADA               	clrf	fsr2h,c
 26574   000FB0  0E30               	movlw	low _currentPos
 26575   000FB2  25DA               	addwf	pollServos@io& (0+255),w,b
 26576   000FB4  6EE1               	movwf	fsr1l,c
 26577   000FB6  6AE2               	clrf	fsr1h,c
 26578   000FB8  0E01               	movlw	high _currentPos
 26579   000FBA  22E2               	addwfc	fsr1h,f,c
 26580   000FBC  CFDF FFE7          	movff	indf2,indf1
 26581                           
 26582                           ; BSR set to: 1
 26583                           ;../servo.c: 426:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 26584   000FC0  51DA               	movf	pollServos@io& (0+255),w,b
 26585   000FC2  0D07               	mullw	7
 26586   000FC4  50F3               	movf	243,w,c
 26587   000FC6  0F11               	addlw	17
 26588   000FC8  EC53  F05F         	call	_getNV
 26589   000FCC  0100               	movlb	0	; () banked
 26590   000FCE  518D               	movf	?_getNV& (0+255),w,b
 26591   000FD0  0B40               	andlw	64
 26592   000FD2  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26593   000FD4  0101               	movlb	1	; () banked
 26594   000FD6  51DA               	movf	pollServos@io& (0+255),w,b
 26595   000FD8  0D04               	mullw	4
 26596   000FDA  50F3               	movf	243,w,c
 26597   000FDC  0F08               	addlw	8
 26598   000FDE  ECCC  F04B         	call	_sendProducedEvent
 26599                           
 26600                           ;../servo.c: 427:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26601   000FE2  0EDE               	movlw	222
 26602   000FE4  0101               	movlb	1	; () banked
 26603   000FE6  25DA               	addwf	pollServos@io& (0+255),w,b
 26604   000FE8  6FCF               	movwf	??_pollServos& (0+255),b
 26605   000FEA  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26606   000FEC  0E03               	movlw	3
 26607   000FEE  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 26608   000FF0  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 26609   000FF4  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26610   000FF8  0100               	movlb	0	; () banked
 26611   000FFA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26612   000FFC  0E30               	movlw	low _currentPos
 26613   000FFE  0101               	movlb	1	; () banked
 26614   001000  25DA               	addwf	pollServos@io& (0+255),w,b
 26615   001002  6ED9               	movwf	fsr2l,c
 26616   001004  6ADA               	clrf	fsr2h,c
 26617   001006  0E01               	movlw	high _currentPos
 26618   001008  22DA               	addwfc	fsr2h,f,c
 26619   00100A  50DF               	movf	indf2,w,c
 26620   00100C  0100               	movlb	0	; () banked
 26621   00100E  6FA7               	movwf	writeNVM@value& (0+255),b
 26622   001010  0E00               	movlw	0
 26623   001012  EC61  F05D         	call	_writeNVM
 26624   001016  D388               	goto	l21972
 26625   001018                     l21872:
 26626                           
 26627                           ; BSR set to: 0
 26628   001018  0E10               	movlw	low _servoState
 26629   00101A  0101               	movlb	1	; () banked
 26630   00101C  25DA               	addwf	pollServos@io& (0+255),w,b
 26631   00101E  6ED9               	movwf	fsr2l,c
 26632   001020  6ADA               	clrf	fsr2h,c
 26633   001022  0E01               	movlw	high _servoState
 26634   001024  22DA               	addwfc	fsr2h,f,c
 26635   001026  50DF               	movf	indf2,w,c
 26636   001028  6FCF               	movwf	??_pollServos& (0+255),b
 26637   00102A  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26638                           
 26639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26640                           ; Switch size 1, requested type "simple"
 26641                           ; Number of cases is 1, Range of values is 0 to 0
 26642                           ; switch strategies available:
 26643                           ; Name         Instructions Cycles
 26644                           ; simple_byte            4     3 (average)
 26645                           ;	Chosen strategy is simple_byte
 26646   00102C  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 26647   00102E  0A00               	xorlw	0	; case 0
 26648   001030  A4D8               	btfss	status,2,c
 26649   001032  D37A               	goto	l21972
 26650                           
 26651                           ; BSR set to: 1
 26652                           ; Switch size 1, requested type "simple"
 26653                           ; Number of cases is 4, Range of values is 0 to 3
 26654                           ; switch strategies available:
 26655                           ; Name         Instructions Cycles
 26656                           ; simple_byte           13     7 (average)
 26657                           ;	Chosen strategy is simple_byte
 26658   001034  51CF               	movf	??_pollServos& (0+255),w,b
 26659   001036  0A00               	xorlw	0	; case 0
 26660   001038  B4D8               	btfsc	status,2,c
 26661   00103A  D376               	goto	l21972
 26662   00103C  0A01               	xorlw	1	; case 1
 26663   00103E  B4D8               	btfsc	status,2,c
 26664   001040  D373               	goto	l21972
 26665   001042  0A03               	xorlw	3	; case 2
 26666   001044  B4D8               	btfsc	status,2,c
 26667   001046  D6B1               	goto	l21828
 26668   001048  0A01               	xorlw	1	; case 3
 26669   00104A  B4D8               	btfsc	status,2,c
 26670   00104C  D69B               	goto	l21822
 26671   00104E  D36C               	goto	l21972
 26672   001050                     l21874:
 26673                           
 26674                           ; BSR set to: 1
 26675                           ;../servo.c: 439:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 26676   001050  51DA               	movf	pollServos@io& (0+255),w,b
 26677   001052  0D07               	mullw	7
 26678   001054  50F3               	movf	243,w,c
 26679   001056  0F13               	addlw	19
 26680   001058  EC53  F05F         	call	_getNV
 26681   00105C  0E30               	movlw	low _currentPos
 26682   00105E  0101               	movlb	1	; () banked
 26683   001060  25DA               	addwf	pollServos@io& (0+255),w,b
 26684   001062  6ED9               	movwf	fsr2l,c
 26685   001064  6ADA               	clrf	fsr2h,c
 26686   001066  0E01               	movlw	high _currentPos
 26687   001068  22DA               	addwfc	fsr2h,f,c
 26688   00106A  50DF               	movf	indf2,w,c
 26689   00106C  6FCF               	movwf	??_pollServos& (0+255),b
 26690   00106E  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26691   001070  0100               	movlb	0	; () banked
 26692   001072  518D               	movf	?_getNV& (0+255),w,b
 26693   001074  0101               	movlb	1	; () banked
 26694   001076  19CF               	xorwf	??_pollServos& (0+255),w,b
 26695   001078  E117               	bnz	l21878
 26696   00107A  0100               	movlb	0	; () banked
 26697   00107C  518E               	movf	(?_getNV+1)& (0+255),w,b
 26698   00107E  0101               	movlb	1	; () banked
 26699   001080  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 26700   001082  A4D8               	btfss	status,2,c
 26701   001084  D011               	goto	l21878
 26702                           
 26703                           ; BSR set to: 1
 26704                           ;../servo.c: 440:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26705   001086  51DA               	movf	pollServos@io& (0+255),w,b
 26706   001088  0D07               	mullw	7
 26707   00108A  50F3               	movf	243,w,c
 26708   00108C  0F11               	addlw	17
 26709   00108E  EC53  F05F         	call	_getNV
 26710   001092  0100               	movlb	0	; () banked
 26711   001094  518D               	movf	?_getNV& (0+255),w,b
 26712   001096  0B40               	andlw	64
 26713   001098  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26714   00109A  0101               	movlb	1	; () banked
 26715   00109C  51DA               	movf	pollServos@io& (0+255),w,b
 26716   00109E  0D04               	mullw	4
 26717   0010A0  50F3               	movf	243,w,c
 26718   0010A2  0F08               	addlw	8
 26719   0010A4  ECCC  F04B         	call	_sendProducedEvent
 26720   0010A8                     l21878:
 26721                           
 26722                           ;../servo.c: 442:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 26723   0010A8  0101               	movlb	1	; () banked
 26724   0010AA  51DA               	movf	pollServos@io& (0+255),w,b
 26725   0010AC  0D07               	mullw	7
 26726   0010AE  50F3               	movf	243,w,c
 26727   0010B0  0F14               	addlw	20
 26728   0010B2  EC53  F05F         	call	_getNV
 26729   0010B6  0E30               	movlw	low _currentPos
 26730   0010B8  0101               	movlb	1	; () banked
 26731   0010BA  25DA               	addwf	pollServos@io& (0+255),w,b
 26732   0010BC  6ED9               	movwf	fsr2l,c
 26733   0010BE  6ADA               	clrf	fsr2h,c
 26734   0010C0  0E01               	movlw	high _currentPos
 26735   0010C2  22DA               	addwfc	fsr2h,f,c
 26736   0010C4  50DF               	movf	indf2,w,c
 26737   0010C6  6FCF               	movwf	??_pollServos& (0+255),b
 26738   0010C8  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26739   0010CA  0100               	movlb	0	; () banked
 26740   0010CC  518D               	movf	?_getNV& (0+255),w,b
 26741   0010CE  0101               	movlb	1	; () banked
 26742   0010D0  19CF               	xorwf	??_pollServos& (0+255),w,b
 26743   0010D2  E117               	bnz	l21882
 26744   0010D4  0100               	movlb	0	; () banked
 26745   0010D6  518E               	movf	(?_getNV+1)& (0+255),w,b
 26746   0010D8  0101               	movlb	1	; () banked
 26747   0010DA  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 26748   0010DC  A4D8               	btfss	status,2,c
 26749   0010DE  D011               	goto	l21882
 26750                           
 26751                           ; BSR set to: 1
 26752                           ;../servo.c: 443:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26753   0010E0  51DA               	movf	pollServos@io& (0+255),w,b
 26754   0010E2  0D07               	mullw	7
 26755   0010E4  50F3               	movf	243,w,c
 26756   0010E6  0F11               	addlw	17
 26757   0010E8  EC53  F05F         	call	_getNV
 26758   0010EC  0100               	movlb	0	; () banked
 26759   0010EE  518D               	movf	?_getNV& (0+255),w,b
 26760   0010F0  0B40               	andlw	64
 26761   0010F2  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26762   0010F4  0101               	movlb	1	; () banked
 26763   0010F6  51DA               	movf	pollServos@io& (0+255),w,b
 26764   0010F8  0D04               	mullw	4
 26765   0010FA  50F3               	movf	243,w,c
 26766   0010FC  0F09               	addlw	9
 26767   0010FE  ECCC  F04B         	call	_sendProducedEvent
 26768   001102                     l21882:
 26769                           
 26770                           ;../servo.c: 445:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 26771   001102  0101               	movlb	1	; () banked
 26772   001104  51DA               	movf	pollServos@io& (0+255),w,b
 26773   001106  0D07               	mullw	7
 26774   001108  50F3               	movf	243,w,c
 26775   00110A  0F15               	addlw	21
 26776   00110C  EC53  F05F         	call	_getNV
 26777   001110  0E30               	movlw	low _currentPos
 26778   001112  0101               	movlb	1	; () banked
 26779   001114  25DA               	addwf	pollServos@io& (0+255),w,b
 26780   001116  6ED9               	movwf	fsr2l,c
 26781   001118  6ADA               	clrf	fsr2h,c
 26782   00111A  0E01               	movlw	high _currentPos
 26783   00111C  22DA               	addwfc	fsr2h,f,c
 26784   00111E  50DF               	movf	indf2,w,c
 26785   001120  6FCF               	movwf	??_pollServos& (0+255),b
 26786   001122  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26787   001124  0100               	movlb	0	; () banked
 26788   001126  518D               	movf	?_getNV& (0+255),w,b
 26789   001128  0101               	movlb	1	; () banked
 26790   00112A  19CF               	xorwf	??_pollServos& (0+255),w,b
 26791   00112C  E117               	bnz	l21886
 26792   00112E  0100               	movlb	0	; () banked
 26793   001130  518E               	movf	(?_getNV+1)& (0+255),w,b
 26794   001132  0101               	movlb	1	; () banked
 26795   001134  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 26796   001136  A4D8               	btfss	status,2,c
 26797   001138  D011               	goto	l21886
 26798                           
 26799                           ; BSR set to: 1
 26800                           ;../servo.c: 446:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26801   00113A  51DA               	movf	pollServos@io& (0+255),w,b
 26802   00113C  0D07               	mullw	7
 26803   00113E  50F3               	movf	243,w,c
 26804   001140  0F11               	addlw	17
 26805   001142  EC53  F05F         	call	_getNV
 26806   001146  0100               	movlb	0	; () banked
 26807   001148  518D               	movf	?_getNV& (0+255),w,b
 26808   00114A  0B40               	andlw	64
 26809   00114C  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26810   00114E  0101               	movlb	1	; () banked
 26811   001150  51DA               	movf	pollServos@io& (0+255),w,b
 26812   001152  0D04               	mullw	4
 26813   001154  50F3               	movf	243,w,c
 26814   001156  0F0A               	addlw	10
 26815   001158  ECCC  F04B         	call	_sendProducedEvent
 26816   00115C                     l21886:
 26817                           
 26818                           ;../servo.c: 448:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 26819   00115C  0101               	movlb	1	; () banked
 26820   00115E  51DA               	movf	pollServos@io& (0+255),w,b
 26821   001160  0D07               	mullw	7
 26822   001162  50F3               	movf	243,w,c
 26823   001164  0F16               	addlw	22
 26824   001166  EC53  F05F         	call	_getNV
 26825   00116A  0E30               	movlw	low _currentPos
 26826   00116C  0101               	movlb	1	; () banked
 26827   00116E  25DA               	addwf	pollServos@io& (0+255),w,b
 26828   001170  6ED9               	movwf	fsr2l,c
 26829   001172  6ADA               	clrf	fsr2h,c
 26830   001174  0E01               	movlw	high _currentPos
 26831   001176  22DA               	addwfc	fsr2h,f,c
 26832   001178  50DF               	movf	indf2,w,c
 26833   00117A  6FCF               	movwf	??_pollServos& (0+255),b
 26834   00117C  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26835   00117E  0100               	movlb	0	; () banked
 26836   001180  518D               	movf	?_getNV& (0+255),w,b
 26837   001182  0101               	movlb	1	; () banked
 26838   001184  19CF               	xorwf	??_pollServos& (0+255),w,b
 26839   001186  E117               	bnz	l21890
 26840   001188  0100               	movlb	0	; () banked
 26841   00118A  518E               	movf	(?_getNV+1)& (0+255),w,b
 26842   00118C  0101               	movlb	1	; () banked
 26843   00118E  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 26844   001190  A4D8               	btfss	status,2,c
 26845   001192  D011               	goto	l21890
 26846                           
 26847                           ; BSR set to: 1
 26848                           ;../servo.c: 449:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26849   001194  51DA               	movf	pollServos@io& (0+255),w,b
 26850   001196  0D07               	mullw	7
 26851   001198  50F3               	movf	243,w,c
 26852   00119A  0F11               	addlw	17
 26853   00119C  EC53  F05F         	call	_getNV
 26854   0011A0  0100               	movlb	0	; () banked
 26855   0011A2  518D               	movf	?_getNV& (0+255),w,b
 26856   0011A4  0B40               	andlw	64
 26857   0011A6  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26858   0011A8  0101               	movlb	1	; () banked
 26859   0011AA  51DA               	movf	pollServos@io& (0+255),w,b
 26860   0011AC  0D04               	mullw	4
 26861   0011AE  50F3               	movf	243,w,c
 26862   0011B0  0F0B               	addlw	11
 26863   0011B2  ECCC  F04B         	call	_sendProducedEvent
 26864   0011B6                     l21890:
 26865                           
 26866                           ;../servo.c: 451:                         servoState[io] = SS_MOVING;
 26867   0011B6  0E10               	movlw	low _servoState
 26868   0011B8  0101               	movlb	1	; () banked
 26869   0011BA  25DA               	addwf	pollServos@io& (0+255),w,b
 26870   0011BC  6ED9               	movwf	fsr2l,c
 26871   0011BE  6ADA               	clrf	fsr2h,c
 26872   0011C0  0E01               	movlw	high _servoState
 26873   0011C2  22DA               	addwfc	fsr2h,f,c
 26874   0011C4  0E02               	movlw	2
 26875   0011C6  6EDF               	movwf	indf2,c
 26876   0011C8                     l21892:
 26877                           
 26878                           ; BSR set to: 1
 26879                           ;../servo.c: 454:                         if (targetPos[io] > currentPos[io]) {
 26880   0011C8  51DA               	movf	pollServos@io& (0+255),w,b
 26881   0011CA  0F2B               	addlw	low _targetPos
 26882   0011CC  6ED9               	movwf	fsr2l,c
 26883   0011CE  6ADA               	clrf	fsr2h,c
 26884   0011D0  0E30               	movlw	low _currentPos
 26885   0011D2  25DA               	addwf	pollServos@io& (0+255),w,b
 26886   0011D4  6EE1               	movwf	fsr1l,c
 26887   0011D6  6AE2               	clrf	fsr1h,c
 26888   0011D8  0E01               	movlw	high _currentPos
 26889   0011DA  22E2               	addwfc	fsr1h,f,c
 26890   0011DC  50DE               	movf	postinc2,w,c
 26891   0011DE  5CE6               	subwf	postinc1,w,c
 26892   0011E0  B0D8               	btfsc	status,0,c
 26893   0011E2  D08B               	goto	l21912
 26894                           
 26895                           ; BSR set to: 1
 26896                           ;../servo.c: 455:                             if (stepsPerPollSpeed[io]) {
 26897   0011E4  0E00               	movlw	low _stepsPerPollSpeed
 26898   0011E6  25DA               	addwf	pollServos@io& (0+255),w,b
 26899   0011E8  6ED9               	movwf	fsr2l,c
 26900   0011EA  6ADA               	clrf	fsr2h,c
 26901   0011EC  0E01               	movlw	high _stepsPerPollSpeed
 26902   0011EE  22DA               	addwfc	fsr2h,f,c
 26903   0011F0  50DF               	movf	indf2,w,c
 26904   0011F2  B4D8               	btfsc	status,2,c
 26905   0011F4  D042               	goto	l21902
 26906                           
 26907                           ; BSR set to: 1
 26908                           ;../servo.c: 456:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 26909   0011F6  0E30               	movlw	low _currentPos
 26910   0011F8  25DA               	addwf	pollServos@io& (0+255),w,b
 26911   0011FA  6ED9               	movwf	fsr2l,c
 26912   0011FC  6ADA               	clrf	fsr2h,c
 26913   0011FE  0E01               	movlw	high _currentPos
 26914   001200  22DA               	addwfc	fsr2h,f,c
 26915   001202  50DF               	movf	indf2,w,c
 26916   001204  6FCF               	movwf	??_pollServos& (0+255),b
 26917   001206  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26918   001208  0E30               	movlw	low _currentPos
 26919   00120A  25DA               	addwf	pollServos@io& (0+255),w,b
 26920   00120C  6ED9               	movwf	fsr2l,c
 26921   00120E  6ADA               	clrf	fsr2h,c
 26922   001210  0E01               	movlw	high _currentPos
 26923   001212  22DA               	addwfc	fsr2h,f,c
 26924   001214  50DF               	movf	indf2,w,c
 26925   001216  6FD1               	movwf	(??_pollServos+2)& (0+255),b
 26926   001218  6BD2               	clrf	(??_pollServos+3)& (0+255),b
 26927   00121A  0E00               	movlw	low _stepsPerPollSpeed
 26928   00121C  25DA               	addwf	pollServos@io& (0+255),w,b
 26929   00121E  6ED9               	movwf	fsr2l,c
 26930   001220  6ADA               	clrf	fsr2h,c
 26931   001222  0E01               	movlw	high _stepsPerPollSpeed
 26932   001224  22DA               	addwfc	fsr2h,f,c
 26933   001226  50DF               	movf	indf2,w,c
 26934   001228  6FD3               	movwf	(??_pollServos+4)& (0+255),b
 26935   00122A  51D3               	movf	(??_pollServos+4)& (0+255),w,b
 26936   00122C  27D1               	addwf	(??_pollServos+2)& (0+255),f,b
 26937   00122E  0E00               	movlw	0
 26938   001230  23D2               	addwfc	(??_pollServos+3)& (0+255),f,b
 26939   001232  51CF               	movf	??_pollServos& (0+255),w,b
 26940   001234  5DD1               	subwf	(??_pollServos+2)& (0+255),w,b
 26941   001236  51D2               	movf	(??_pollServos+3)& (0+255),w,b
 26942   001238  0A80               	xorlw	128
 26943   00123A  6FD4               	movwf	(??_pollServos+5)& (0+255),b
 26944   00123C  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 26945   00123E  0A80               	xorlw	128
 26946   001240  59D4               	subwfb	(??_pollServos+5)& (0+255),w,b
 26947   001242  B0D8               	btfsc	status,0,c
 26948   001244  D009               	goto	l21900
 26949                           
 26950                           ; BSR set to: 1
 26951                           ;../servo.c: 458:                                     currentPos[io] =255;
 26952   001246  0E30               	movlw	low _currentPos
 26953   001248  25DA               	addwf	pollServos@io& (0+255),w,b
 26954   00124A  6ED9               	movwf	fsr2l,c
 26955   00124C  6ADA               	clrf	fsr2h,c
 26956   00124E  0E01               	movlw	high _currentPos
 26957   001250  22DA               	addwfc	fsr2h,f,c
 26958   001252  0EFF               	movlw	255
 26959   001254  6EDF               	movwf	indf2,c
 26960                           
 26961                           ;../servo.c: 459:                                 } else {
 26962   001256  D036               	goto	l21908
 26963   001258                     l21900:
 26964                           
 26965                           ; BSR set to: 1
 26966                           ;../servo.c: 460:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 26967   001258  0E00               	movlw	low _stepsPerPollSpeed
 26968   00125A  25DA               	addwf	pollServos@io& (0+255),w,b
 26969   00125C  6ED9               	movwf	fsr2l,c
 26970   00125E  6ADA               	clrf	fsr2h,c
 26971   001260  0E01               	movlw	high _stepsPerPollSpeed
 26972   001262  22DA               	addwfc	fsr2h,f,c
 26973   001264  50DF               	movf	indf2,w,c
 26974   001266  6FCF               	movwf	??_pollServos& (0+255),b
 26975   001268  0E30               	movlw	low _currentPos
 26976   00126A  25DA               	addwf	pollServos@io& (0+255),w,b
 26977   00126C  6ED9               	movwf	fsr2l,c
 26978   00126E  6ADA               	clrf	fsr2h,c
 26979   001270  0E01               	movlw	high _currentPos
 26980   001272  22DA               	addwfc	fsr2h,f,c
 26981   001274  51CF               	movf	??_pollServos& (0+255),w,b
 26982   001276  26DF               	addwf	indf2,f,c
 26983   001278  D025               	goto	l21908
 26984   00127A                     l21902:
 26985                           
 26986                           ; BSR set to: 1
 26987                           ;../servo.c: 463:                                 pollCount[io]--;
 26988   00127A  0E64               	movlw	low _pollCount
 26989   00127C  25DA               	addwf	pollServos@io& (0+255),w,b
 26990   00127E  6ED9               	movwf	fsr2l,c
 26991   001280  6ADA               	clrf	fsr2h,c
 26992   001282  0E02               	movlw	high _pollCount
 26993   001284  22DA               	addwfc	fsr2h,f,c
 26994   001286  06DF               	decf	indf2,f,c
 26995                           
 26996                           ;../servo.c: 464:                                 if (pollCount[io] == 0) {
 26997   001288  0E64               	movlw	low _pollCount
 26998   00128A  25DA               	addwf	pollServos@io& (0+255),w,b
 26999   00128C  6ED9               	movwf	fsr2l,c
 27000   00128E  6ADA               	clrf	fsr2h,c
 27001   001290  0E02               	movlw	high _pollCount
 27002   001292  22DA               	addwfc	fsr2h,f,c
 27003   001294  50DF               	movf	indf2,w,c
 27004   001296  A4D8               	btfss	status,2,c
 27005   001298  D015               	goto	l21908
 27006                           
 27007                           ; BSR set to: 1
 27008                           ;../servo.c: 465:                                     currentPos[io]++;
 27009   00129A  0E30               	movlw	low _currentPos
 27010   00129C  25DA               	addwf	pollServos@io& (0+255),w,b
 27011   00129E  6ED9               	movwf	fsr2l,c
 27012   0012A0  6ADA               	clrf	fsr2h,c
 27013   0012A2  0E01               	movlw	high _currentPos
 27014   0012A4  22DA               	addwfc	fsr2h,f,c
 27015   0012A6  2ADF               	incf	indf2,f,c
 27016                           
 27017                           ; BSR set to: 1
 27018                           ;../servo.c: 466:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 27019   0012A8  0E74               	movlw	low _pollsPerStepSpeed
 27020   0012AA  25DA               	addwf	pollServos@io& (0+255),w,b
 27021   0012AC  6ED9               	movwf	fsr2l,c
 27022   0012AE  6ADA               	clrf	fsr2h,c
 27023   0012B0  0E02               	movlw	high _pollsPerStepSpeed
 27024   0012B2  22DA               	addwfc	fsr2h,f,c
 27025   0012B4  0E64               	movlw	low _pollCount
 27026   0012B6  25DA               	addwf	pollServos@io& (0+255),w,b
 27027   0012B8  6EE1               	movwf	fsr1l,c
 27028   0012BA  6AE2               	clrf	fsr1h,c
 27029   0012BC  0E02               	movlw	high _pollCount
 27030   0012BE  22E2               	addwfc	fsr1h,f,c
 27031   0012C0  CFDF FFE7          	movff	indf2,indf1
 27032   0012C4                     l21908:
 27033                           
 27034                           ; BSR set to: 1
 27035                           ;../servo.c: 469:                             if (currentPos[io] > targetPos[io]) {
 27036   0012C4  0E30               	movlw	low _currentPos
 27037   0012C6  25DA               	addwf	pollServos@io& (0+255),w,b
 27038   0012C8  6ED9               	movwf	fsr2l,c
 27039   0012CA  6ADA               	clrf	fsr2h,c
 27040   0012CC  0E01               	movlw	high _currentPos
 27041   0012CE  22DA               	addwfc	fsr2h,f,c
 27042   0012D0  51DA               	movf	pollServos@io& (0+255),w,b
 27043   0012D2  0F2B               	addlw	low _targetPos
 27044   0012D4  6EE1               	movwf	fsr1l,c
 27045   0012D6  6AE2               	clrf	fsr1h,c
 27046   0012D8  50DE               	movf	postinc2,w,c
 27047   0012DA  5CE6               	subwf	postinc1,w,c
 27048   0012DC  B0D8               	btfsc	status,0,c
 27049   0012DE  D098               	goto	l1104
 27050   0012E0                     u22910:
 27051                           
 27052                           ; BSR set to: 1
 27053                           ;../servo.c: 470:                                 currentPos[io] = targetPos[io];
 27054   0012E0  51DA               	movf	pollServos@io& (0+255),w,b
 27055   0012E2  0F2B               	addlw	low _targetPos
 27056   0012E4  6ED9               	movwf	fsr2l,c
 27057   0012E6  6ADA               	clrf	fsr2h,c
 27058   0012E8  0E30               	movlw	low _currentPos
 27059   0012EA  25DA               	addwf	pollServos@io& (0+255),w,b
 27060   0012EC  6EE1               	movwf	fsr1l,c
 27061   0012EE  6AE2               	clrf	fsr1h,c
 27062   0012F0  0E01               	movlw	high _currentPos
 27063   0012F2  22E2               	addwfc	fsr1h,f,c
 27064   0012F4  CFDF FFE7          	movff	indf2,indf1
 27065   0012F8  D08B               	goto	l1104
 27066   0012FA                     l21912:
 27067                           
 27068                           ; BSR set to: 1
 27069   0012FA  0E30               	movlw	low _currentPos
 27070   0012FC  25DA               	addwf	pollServos@io& (0+255),w,b
 27071   0012FE  6ED9               	movwf	fsr2l,c
 27072   001300  6ADA               	clrf	fsr2h,c
 27073   001302  0E01               	movlw	high _currentPos
 27074   001304  22DA               	addwfc	fsr2h,f,c
 27075   001306  51DA               	movf	pollServos@io& (0+255),w,b
 27076   001308  0F2B               	addlw	low _targetPos
 27077   00130A  6EE1               	movwf	fsr1l,c
 27078   00130C  6AE2               	clrf	fsr1h,c
 27079   00130E  50DE               	movf	postinc2,w,c
 27080   001310  5CE6               	subwf	postinc1,w,c
 27081   001312  B0D8               	btfsc	status,0,c
 27082   001314  D07D               	goto	l1104
 27083                           
 27084                           ; BSR set to: 1
 27085                           ;../servo.c: 474:                             if (stepsPerPollSpeed[io]) {
 27086   001316  0E00               	movlw	low _stepsPerPollSpeed
 27087   001318  25DA               	addwf	pollServos@io& (0+255),w,b
 27088   00131A  6ED9               	movwf	fsr2l,c
 27089   00131C  6ADA               	clrf	fsr2h,c
 27090   00131E  0E01               	movlw	high _stepsPerPollSpeed
 27091   001320  22DA               	addwfc	fsr2h,f,c
 27092   001322  50DF               	movf	indf2,w,c
 27093   001324  B4D8               	btfsc	status,2,c
 27094   001326  D041               	goto	l21922
 27095                           
 27096                           ; BSR set to: 1
 27097                           ;../servo.c: 475:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 27098   001328  0E30               	movlw	low _currentPos
 27099   00132A  25DA               	addwf	pollServos@io& (0+255),w,b
 27100   00132C  6ED9               	movwf	fsr2l,c
 27101   00132E  6ADA               	clrf	fsr2h,c
 27102   001330  0E01               	movlw	high _currentPos
 27103   001332  22DA               	addwfc	fsr2h,f,c
 27104   001334  50DF               	movf	indf2,w,c
 27105   001336  6FCF               	movwf	??_pollServos& (0+255),b
 27106   001338  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 27107   00133A  0E00               	movlw	low _stepsPerPollSpeed
 27108   00133C  25DA               	addwf	pollServos@io& (0+255),w,b
 27109   00133E  6ED9               	movwf	fsr2l,c
 27110   001340  6ADA               	clrf	fsr2h,c
 27111   001342  0E01               	movlw	high _stepsPerPollSpeed
 27112   001344  22DA               	addwfc	fsr2h,f,c
 27113   001346  50DF               	movf	indf2,w,c
 27114   001348  6FD1               	movwf	(??_pollServos+2)& (0+255),b
 27115   00134A  51D1               	movf	(??_pollServos+2)& (0+255),w,b
 27116   00134C  5FCF               	subwf	??_pollServos& (0+255),f,b
 27117   00134E  0E00               	movlw	0
 27118   001350  5BD0               	subwfb	(??_pollServos+1)& (0+255),f,b
 27119   001352  0E30               	movlw	low _currentPos
 27120   001354  25DA               	addwf	pollServos@io& (0+255),w,b
 27121   001356  6ED9               	movwf	fsr2l,c
 27122   001358  6ADA               	clrf	fsr2h,c
 27123   00135A  0E01               	movlw	high _currentPos
 27124   00135C  22DA               	addwfc	fsr2h,f,c
 27125   00135E  50DF               	movf	indf2,w,c
 27126   001360  6FD2               	movwf	(??_pollServos+3)& (0+255),b
 27127   001362  6BD3               	clrf	(??_pollServos+4)& (0+255),b
 27128   001364  51CF               	movf	??_pollServos& (0+255),w,b
 27129   001366  5DD2               	subwf	(??_pollServos+3)& (0+255),w,b
 27130   001368  51D3               	movf	(??_pollServos+4)& (0+255),w,b
 27131   00136A  0A80               	xorlw	128
 27132   00136C  6FD4               	movwf	(??_pollServos+5)& (0+255),b
 27133   00136E  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 27134   001370  0A80               	xorlw	128
 27135   001372  59D4               	subwfb	(??_pollServos+5)& (0+255),w,b
 27136   001374  B0D8               	btfsc	status,0,c
 27137   001376  D008               	goto	l21920
 27138                           
 27139                           ; BSR set to: 1
 27140                           ;../servo.c: 477:                                     currentPos[io] = 0;
 27141   001378  0E30               	movlw	low _currentPos
 27142   00137A  25DA               	addwf	pollServos@io& (0+255),w,b
 27143   00137C  6ED9               	movwf	fsr2l,c
 27144   00137E  6ADA               	clrf	fsr2h,c
 27145   001380  0E01               	movlw	high _currentPos
 27146   001382  22DA               	addwfc	fsr2h,f,c
 27147   001384  6ADF               	clrf	indf2,c
 27148                           
 27149                           ;../servo.c: 478:                                 } else {
 27150   001386  D036               	goto	l21928
 27151   001388                     l21920:
 27152                           
 27153                           ; BSR set to: 1
 27154                           ;../servo.c: 479:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 27155   001388  0E00               	movlw	low _stepsPerPollSpeed
 27156   00138A  25DA               	addwf	pollServos@io& (0+255),w,b
 27157   00138C  6ED9               	movwf	fsr2l,c
 27158   00138E  6ADA               	clrf	fsr2h,c
 27159   001390  0E01               	movlw	high _stepsPerPollSpeed
 27160   001392  22DA               	addwfc	fsr2h,f,c
 27161   001394  50DF               	movf	indf2,w,c
 27162   001396  6FCF               	movwf	??_pollServos& (0+255),b
 27163   001398  0E30               	movlw	low _currentPos
 27164   00139A  25DA               	addwf	pollServos@io& (0+255),w,b
 27165   00139C  6ED9               	movwf	fsr2l,c
 27166   00139E  6ADA               	clrf	fsr2h,c
 27167   0013A0  0E01               	movlw	high _currentPos
 27168   0013A2  22DA               	addwfc	fsr2h,f,c
 27169   0013A4  51CF               	movf	??_pollServos& (0+255),w,b
 27170   0013A6  5EDF               	subwf	indf2,f,c
 27171   0013A8  D025               	goto	l21928
 27172   0013AA                     l21922:
 27173                           
 27174                           ; BSR set to: 1
 27175                           ;../servo.c: 482:                                 pollCount[io]--;
 27176   0013AA  0E64               	movlw	low _pollCount
 27177   0013AC  25DA               	addwf	pollServos@io& (0+255),w,b
 27178   0013AE  6ED9               	movwf	fsr2l,c
 27179   0013B0  6ADA               	clrf	fsr2h,c
 27180   0013B2  0E02               	movlw	high _pollCount
 27181   0013B4  22DA               	addwfc	fsr2h,f,c
 27182   0013B6  06DF               	decf	indf2,f,c
 27183                           
 27184                           ;../servo.c: 483:                                 if (pollCount[io] == 0) {
 27185   0013B8  0E64               	movlw	low _pollCount
 27186   0013BA  25DA               	addwf	pollServos@io& (0+255),w,b
 27187   0013BC  6ED9               	movwf	fsr2l,c
 27188   0013BE  6ADA               	clrf	fsr2h,c
 27189   0013C0  0E02               	movlw	high _pollCount
 27190   0013C2  22DA               	addwfc	fsr2h,f,c
 27191   0013C4  50DF               	movf	indf2,w,c
 27192   0013C6  A4D8               	btfss	status,2,c
 27193   0013C8  D015               	goto	l21928
 27194                           
 27195                           ; BSR set to: 1
 27196                           ;../servo.c: 484:                                     currentPos[io]--;
 27197   0013CA  0E30               	movlw	low _currentPos
 27198   0013CC  25DA               	addwf	pollServos@io& (0+255),w,b
 27199   0013CE  6ED9               	movwf	fsr2l,c
 27200   0013D0  6ADA               	clrf	fsr2h,c
 27201   0013D2  0E01               	movlw	high _currentPos
 27202   0013D4  22DA               	addwfc	fsr2h,f,c
 27203   0013D6  06DF               	decf	indf2,f,c
 27204                           
 27205                           ; BSR set to: 1
 27206                           ;../servo.c: 485:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 27207   0013D8  0E74               	movlw	low _pollsPerStepSpeed
 27208   0013DA  25DA               	addwf	pollServos@io& (0+255),w,b
 27209   0013DC  6ED9               	movwf	fsr2l,c
 27210   0013DE  6ADA               	clrf	fsr2h,c
 27211   0013E0  0E02               	movlw	high _pollsPerStepSpeed
 27212   0013E2  22DA               	addwfc	fsr2h,f,c
 27213   0013E4  0E64               	movlw	low _pollCount
 27214   0013E6  25DA               	addwf	pollServos@io& (0+255),w,b
 27215   0013E8  6EE1               	movwf	fsr1l,c
 27216   0013EA  6AE2               	clrf	fsr1h,c
 27217   0013EC  0E02               	movlw	high _pollCount
 27218   0013EE  22E2               	addwfc	fsr1h,f,c
 27219   0013F0  CFDF FFE7          	movff	indf2,indf1
 27220   0013F4                     l21928:
 27221                           
 27222                           ; BSR set to: 1
 27223                           ;../servo.c: 488:                             if (currentPos[io] < targetPos[io]) {
 27224   0013F4  51DA               	movf	pollServos@io& (0+255),w,b
 27225   0013F6  0F2B               	addlw	low _targetPos
 27226   0013F8  6ED9               	movwf	fsr2l,c
 27227   0013FA  6ADA               	clrf	fsr2h,c
 27228   0013FC  0E30               	movlw	low _currentPos
 27229   0013FE  25DA               	addwf	pollServos@io& (0+255),w,b
 27230   001400  6EE1               	movwf	fsr1l,c
 27231   001402  6AE2               	clrf	fsr1h,c
 27232   001404  0E01               	movlw	high _currentPos
 27233   001406  22E2               	addwfc	fsr1h,f,c
 27234   001408  50DE               	movf	postinc2,w,c
 27235   00140A  5CE6               	subwf	postinc1,w,c
 27236   00140C  A0D8               	btfss	status,0,c
 27237   00140E  D768               	goto	u22910
 27238   001410                     l1104:
 27239                           
 27240                           ; BSR set to: 1
 27241                           ;../servo.c: 492:                         if (targetPos[io] == currentPos[io]) {
 27242   001410  0E30               	movlw	low _currentPos
 27243   001412  25DA               	addwf	pollServos@io& (0+255),w,b
 27244   001414  6ED9               	movwf	fsr2l,c
 27245   001416  6ADA               	clrf	fsr2h,c
 27246   001418  0E01               	movlw	high _currentPos
 27247   00141A  22DA               	addwfc	fsr2h,f,c
 27248   00141C  51DA               	movf	pollServos@io& (0+255),w,b
 27249   00141E  0F2B               	addlw	low _targetPos
 27250   001420  6EE1               	movwf	fsr1l,c
 27251   001422  6AE2               	clrf	fsr1h,c
 27252   001424  50DE               	movf	postinc2,w,c
 27253   001426  18E6               	xorwf	postinc1,w,c
 27254   001428  A4D8               	btfss	status,2,c
 27255   00142A  D17E               	goto	l21972
 27256                           
 27257                           ; BSR set to: 1
 27258                           ;../servo.c: 493:                             servoState[io] = SS_STOPPED;
 27259   00142C  0E10               	movlw	low _servoState
 27260   00142E  25DA               	addwf	pollServos@io& (0+255),w,b
 27261   001430  6ED9               	movwf	fsr2l,c
 27262   001432  6ADA               	clrf	fsr2h,c
 27263   001434  0E01               	movlw	high _servoState
 27264   001436  22DA               	addwfc	fsr2h,f,c
 27265   001438  0E01               	movlw	1
 27266   00143A  6EDF               	movwf	indf2,c
 27267                           
 27268                           ; BSR set to: 1
 27269                           ;../servo.c: 494:                             ticksWhenStopped[io].val = tickGet();
 27270   00143C  ECE5  F05B         	call	_tickGet	;wreg free
 27271   001440  0101               	movlb	1	; () banked
 27272   001442  51DA               	movf	pollServos@io& (0+255),w,b
 27273   001444  0D04               	mullw	4
 27274   001446  0E88               	movlw	low _ticksWhenStopped
 27275   001448  24F3               	addwf	243,w,c
 27276   00144A  6ED9               	movwf	fsr2l,c
 27277   00144C  0E03               	movlw	high _ticksWhenStopped
 27278   00144E  20F4               	addwfc	prodh,w,c
 27279   001450  6EDA               	movwf	fsr2h,c
 27280   001452  0100               	movlb	0	; () banked
 27281   001454  C08D  FFDE         	movff	?_tickGet,postinc2
 27282   001458  C08E  FFDE         	movff	?_tickGet+1,postinc2
 27283   00145C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 27284   001460  C090  FFDE         	movff	?_tickGet+3,postinc2
 27285                           
 27286                           ; BSR set to: 0
 27287                           ;../servo.c: 496:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 27288   001464  0101               	movlb	1	; () banked
 27289   001466  51DA               	movf	pollServos@io& (0+255),w,b
 27290   001468  0D07               	mullw	7
 27291   00146A  50F3               	movf	243,w,c
 27292   00146C  0F13               	addlw	19
 27293   00146E  EC53  F05F         	call	_getNV
 27294   001472  0E30               	movlw	low _currentPos
 27295   001474  0101               	movlb	1	; () banked
 27296   001476  25DA               	addwf	pollServos@io& (0+255),w,b
 27297   001478  6ED9               	movwf	fsr2l,c
 27298   00147A  6ADA               	clrf	fsr2h,c
 27299   00147C  0E01               	movlw	high _currentPos
 27300   00147E  22DA               	addwfc	fsr2h,f,c
 27301   001480  50DF               	movf	indf2,w,c
 27302   001482  6FCF               	movwf	??_pollServos& (0+255),b
 27303   001484  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 27304   001486  0100               	movlb	0	; () banked
 27305   001488  518D               	movf	?_getNV& (0+255),w,b
 27306   00148A  0101               	movlb	1	; () banked
 27307   00148C  19CF               	xorwf	??_pollServos& (0+255),w,b
 27308   00148E  E11A               	bnz	l21940
 27309   001490  0100               	movlb	0	; () banked
 27310   001492  518E               	movf	(?_getNV+1)& (0+255),w,b
 27311   001494  0101               	movlb	1	; () banked
 27312   001496  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 27313   001498  A4D8               	btfss	status,2,c
 27314   00149A  D014               	goto	l21940
 27315                           
 27316                           ; BSR set to: 1
 27317                           ;../servo.c: 497:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27318   00149C  51DA               	movf	pollServos@io& (0+255),w,b
 27319   00149E  0D07               	mullw	7
 27320   0014A0  50F3               	movf	243,w,c
 27321   0014A2  0F11               	addlw	17
 27322   0014A4  EC53  F05F         	call	_getNV
 27323   0014A8  0100               	movlb	0	; () banked
 27324   0014AA  BD8D               	btfsc	?_getNV& (0+255),6,b
 27325   0014AC  D002               	goto	u22990
 27326   0014AE  0E01               	movlw	1
 27327   0014B0  D001               	goto	u23000
 27328   0014B2                     u22990:
 27329   0014B2  0E00               	movlw	0
 27330   0014B4                     u23000:
 27331   0014B4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27332   0014B6  0101               	movlb	1	; () banked
 27333   0014B8  51DA               	movf	pollServos@io& (0+255),w,b
 27334   0014BA  0D04               	mullw	4
 27335   0014BC  50F3               	movf	243,w,c
 27336   0014BE  0F08               	addlw	8
 27337   0014C0  ECCC  F04B         	call	_sendProducedEvent
 27338   0014C4                     l21940:
 27339                           
 27340                           ;../servo.c: 499:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 27341   0014C4  0101               	movlb	1	; () banked
 27342   0014C6  51DA               	movf	pollServos@io& (0+255),w,b
 27343   0014C8  0D07               	mullw	7
 27344   0014CA  50F3               	movf	243,w,c
 27345   0014CC  0F14               	addlw	20
 27346   0014CE  EC53  F05F         	call	_getNV
 27347   0014D2  0E30               	movlw	low _currentPos
 27348   0014D4  0101               	movlb	1	; () banked
 27349   0014D6  25DA               	addwf	pollServos@io& (0+255),w,b
 27350   0014D8  6ED9               	movwf	fsr2l,c
 27351   0014DA  6ADA               	clrf	fsr2h,c
 27352   0014DC  0E01               	movlw	high _currentPos
 27353   0014DE  22DA               	addwfc	fsr2h,f,c
 27354   0014E0  50DF               	movf	indf2,w,c
 27355   0014E2  6FCF               	movwf	??_pollServos& (0+255),b
 27356   0014E4  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 27357   0014E6  0100               	movlb	0	; () banked
 27358   0014E8  518D               	movf	?_getNV& (0+255),w,b
 27359   0014EA  0101               	movlb	1	; () banked
 27360   0014EC  19CF               	xorwf	??_pollServos& (0+255),w,b
 27361   0014EE  E11A               	bnz	l21944
 27362   0014F0  0100               	movlb	0	; () banked
 27363   0014F2  518E               	movf	(?_getNV+1)& (0+255),w,b
 27364   0014F4  0101               	movlb	1	; () banked
 27365   0014F6  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 27366   0014F8  A4D8               	btfss	status,2,c
 27367   0014FA  D014               	goto	l21944
 27368                           
 27369                           ; BSR set to: 1
 27370                           ;../servo.c: 500:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27371   0014FC  51DA               	movf	pollServos@io& (0+255),w,b
 27372   0014FE  0D07               	mullw	7
 27373   001500  50F3               	movf	243,w,c
 27374   001502  0F11               	addlw	17
 27375   001504  EC53  F05F         	call	_getNV
 27376   001508  0100               	movlb	0	; () banked
 27377   00150A  BD8D               	btfsc	?_getNV& (0+255),6,b
 27378   00150C  D002               	goto	u23020
 27379   00150E  0E01               	movlw	1
 27380   001510  D001               	goto	u23030
 27381   001512                     u23020:
 27382   001512  0E00               	movlw	0
 27383   001514                     u23030:
 27384   001514  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27385   001516  0101               	movlb	1	; () banked
 27386   001518  51DA               	movf	pollServos@io& (0+255),w,b
 27387   00151A  0D04               	mullw	4
 27388   00151C  50F3               	movf	243,w,c
 27389   00151E  0F09               	addlw	9
 27390   001520  ECCC  F04B         	call	_sendProducedEvent
 27391   001524                     l21944:
 27392                           
 27393                           ;../servo.c: 502:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 27394   001524  0101               	movlb	1	; () banked
 27395   001526  51DA               	movf	pollServos@io& (0+255),w,b
 27396   001528  0D07               	mullw	7
 27397   00152A  50F3               	movf	243,w,c
 27398   00152C  0F15               	addlw	21
 27399   00152E  EC53  F05F         	call	_getNV
 27400   001532  0E30               	movlw	low _currentPos
 27401   001534  0101               	movlb	1	; () banked
 27402   001536  25DA               	addwf	pollServos@io& (0+255),w,b
 27403   001538  6ED9               	movwf	fsr2l,c
 27404   00153A  6ADA               	clrf	fsr2h,c
 27405   00153C  0E01               	movlw	high _currentPos
 27406   00153E  22DA               	addwfc	fsr2h,f,c
 27407   001540  50DF               	movf	indf2,w,c
 27408   001542  6FCF               	movwf	??_pollServos& (0+255),b
 27409   001544  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 27410   001546  0100               	movlb	0	; () banked
 27411   001548  518D               	movf	?_getNV& (0+255),w,b
 27412   00154A  0101               	movlb	1	; () banked
 27413   00154C  19CF               	xorwf	??_pollServos& (0+255),w,b
 27414   00154E  E11A               	bnz	l21948
 27415   001550  0100               	movlb	0	; () banked
 27416   001552  518E               	movf	(?_getNV+1)& (0+255),w,b
 27417   001554  0101               	movlb	1	; () banked
 27418   001556  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 27419   001558  A4D8               	btfss	status,2,c
 27420   00155A  D014               	goto	l21948
 27421                           
 27422                           ; BSR set to: 1
 27423                           ;../servo.c: 503:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27424   00155C  51DA               	movf	pollServos@io& (0+255),w,b
 27425   00155E  0D07               	mullw	7
 27426   001560  50F3               	movf	243,w,c
 27427   001562  0F11               	addlw	17
 27428   001564  EC53  F05F         	call	_getNV
 27429   001568  0100               	movlb	0	; () banked
 27430   00156A  BD8D               	btfsc	?_getNV& (0+255),6,b
 27431   00156C  D002               	goto	u23050
 27432   00156E  0E01               	movlw	1
 27433   001570  D001               	goto	u23060
 27434   001572                     u23050:
 27435   001572  0E00               	movlw	0
 27436   001574                     u23060:
 27437   001574  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27438   001576  0101               	movlb	1	; () banked
 27439   001578  51DA               	movf	pollServos@io& (0+255),w,b
 27440   00157A  0D04               	mullw	4
 27441   00157C  50F3               	movf	243,w,c
 27442   00157E  0F0A               	addlw	10
 27443   001580  ECCC  F04B         	call	_sendProducedEvent
 27444   001584                     l21948:
 27445                           
 27446                           ;../servo.c: 505:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 27447   001584  0101               	movlb	1	; () banked
 27448   001586  51DA               	movf	pollServos@io& (0+255),w,b
 27449   001588  0D07               	mullw	7
 27450   00158A  50F3               	movf	243,w,c
 27451   00158C  0F16               	addlw	22
 27452   00158E  EC53  F05F         	call	_getNV
 27453   001592  0E30               	movlw	low _currentPos
 27454   001594  0101               	movlb	1	; () banked
 27455   001596  25DA               	addwf	pollServos@io& (0+255),w,b
 27456   001598  6ED9               	movwf	fsr2l,c
 27457   00159A  6ADA               	clrf	fsr2h,c
 27458   00159C  0E01               	movlw	high _currentPos
 27459   00159E  22DA               	addwfc	fsr2h,f,c
 27460   0015A0  50DF               	movf	indf2,w,c
 27461   0015A2  6FCF               	movwf	??_pollServos& (0+255),b
 27462   0015A4  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 27463   0015A6  0100               	movlb	0	; () banked
 27464   0015A8  518D               	movf	?_getNV& (0+255),w,b
 27465   0015AA  0101               	movlb	1	; () banked
 27466   0015AC  19CF               	xorwf	??_pollServos& (0+255),w,b
 27467   0015AE  E11A               	bnz	l21952
 27468   0015B0  0100               	movlb	0	; () banked
 27469   0015B2  518E               	movf	(?_getNV+1)& (0+255),w,b
 27470   0015B4  0101               	movlb	1	; () banked
 27471   0015B6  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 27472   0015B8  A4D8               	btfss	status,2,c
 27473   0015BA  D014               	goto	l21952
 27474                           
 27475                           ; BSR set to: 1
 27476                           ;../servo.c: 506:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27477   0015BC  51DA               	movf	pollServos@io& (0+255),w,b
 27478   0015BE  0D07               	mullw	7
 27479   0015C0  50F3               	movf	243,w,c
 27480   0015C2  0F11               	addlw	17
 27481   0015C4  EC53  F05F         	call	_getNV
 27482   0015C8  0100               	movlb	0	; () banked
 27483   0015CA  BD8D               	btfsc	?_getNV& (0+255),6,b
 27484   0015CC  D002               	goto	u23080
 27485   0015CE  0E01               	movlw	1
 27486   0015D0  D001               	goto	u23090
 27487   0015D2                     u23080:
 27488   0015D2  0E00               	movlw	0
 27489   0015D4                     u23090:
 27490   0015D4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27491   0015D6  0101               	movlb	1	; () banked
 27492   0015D8  51DA               	movf	pollServos@io& (0+255),w,b
 27493   0015DA  0D04               	mullw	4
 27494   0015DC  50F3               	movf	243,w,c
 27495   0015DE  0F0B               	addlw	11
 27496   0015E0  ECCC  F04B         	call	_sendProducedEvent
 27497   0015E4                     l21952:
 27498                           
 27499                           ;../servo.c: 508:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 27500   0015E4  0EDE               	movlw	222
 27501   0015E6  0101               	movlb	1	; () banked
 27502   0015E8  25DA               	addwf	pollServos@io& (0+255),w,b
 27503   0015EA  6FCF               	movwf	??_pollServos& (0+255),b
 27504   0015EC  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 27505   0015EE  0E03               	movlw	3
 27506   0015F0  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 27507   0015F2  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 27508   0015F6  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 27509   0015FA  0100               	movlb	0	; () banked
 27510   0015FC  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 27511   0015FE  0E30               	movlw	low _currentPos
 27512   001600  0101               	movlb	1	; () banked
 27513   001602  25DA               	addwf	pollServos@io& (0+255),w,b
 27514   001604  6ED9               	movwf	fsr2l,c
 27515   001606  6ADA               	clrf	fsr2h,c
 27516   001608  0E01               	movlw	high _currentPos
 27517   00160A  22DA               	addwfc	fsr2h,f,c
 27518   00160C  50DF               	movf	indf2,w,c
 27519   00160E  0100               	movlb	0	; () banked
 27520   001610  6FA7               	movwf	writeNVM@value& (0+255),b
 27521   001612  0E00               	movlw	0
 27522   001614  EC61  F05D         	call	_writeNVM
 27523   001618  D087               	goto	l21972
 27524   00161A                     l21956:
 27525                           
 27526                           ; BSR set to: 0
 27527   00161A  0E10               	movlw	low _servoState
 27528   00161C  0101               	movlb	1	; () banked
 27529   00161E  25DA               	addwf	pollServos@io& (0+255),w,b
 27530   001620  6ED9               	movwf	fsr2l,c
 27531   001622  6ADA               	clrf	fsr2h,c
 27532   001624  0E01               	movlw	high _servoState
 27533   001626  22DA               	addwfc	fsr2h,f,c
 27534   001628  50DF               	movf	indf2,w,c
 27535   00162A  6FCF               	movwf	??_pollServos& (0+255),b
 27536   00162C  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 27537                           
 27538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27539                           ; Switch size 1, requested type "simple"
 27540                           ; Number of cases is 1, Range of values is 0 to 0
 27541                           ; switch strategies available:
 27542                           ; Name         Instructions Cycles
 27543                           ; simple_byte            4     3 (average)
 27544                           ;	Chosen strategy is simple_byte
 27545   00162E  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 27546   001630  0A00               	xorlw	0	; case 0
 27547   001632  A4D8               	btfss	status,2,c
 27548   001634  D079               	goto	l21972
 27549                           
 27550                           ; BSR set to: 1
 27551                           ; Switch size 1, requested type "simple"
 27552                           ; Number of cases is 4, Range of values is 0 to 3
 27553                           ; switch strategies available:
 27554                           ; Name         Instructions Cycles
 27555                           ; simple_byte           13     7 (average)
 27556                           ;	Chosen strategy is simple_byte
 27557   001636  51CF               	movf	??_pollServos& (0+255),w,b
 27558   001638  0A00               	xorlw	0	; case 0
 27559   00163A  B4D8               	btfsc	status,2,c
 27560   00163C  D075               	goto	l21972
 27561   00163E  0A01               	xorlw	1	; case 1
 27562   001640  B4D8               	btfsc	status,2,c
 27563   001642  D072               	goto	l21972
 27564   001644  0A03               	xorlw	3	; case 2
 27565   001646  B4D8               	btfsc	status,2,c
 27566   001648  D5BF               	goto	l21892
 27567   00164A  0A01               	xorlw	1	; case 3
 27568   00164C  B4D8               	btfsc	status,2,c
 27569   00164E  D500               	goto	l21874
 27570   001650  D06B               	goto	l21972
 27571   001652                     l21960:
 27572                           
 27573                           ; BSR set to: 1
 27574   001652  51DA               	movf	pollServos@io& (0+255),w,b
 27575   001654  0D07               	mullw	7
 27576   001656  50F3               	movf	243,w,c
 27577   001658  0F10               	addlw	16
 27578   00165A  EC53  F05F         	call	_getNV
 27579                           
 27580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27581                           ; Switch size 1, requested type "simple"
 27582                           ; Number of cases is 1, Range of values is 0 to 0
 27583                           ; switch strategies available:
 27584                           ; Name         Instructions Cycles
 27585                           ; simple_byte            4     3 (average)
 27586                           ;	Chosen strategy is simple_byte
 27587   00165E  0100               	movlb	0	; () banked
 27588   001660  518E               	movf	(?_getNV+1)& (0+255),w,b
 27589   001662  0A00               	xorlw	0	; case 0
 27590   001664  A4D8               	btfss	status,2,c
 27591   001666  D060               	goto	l21972
 27592                           
 27593                           ; BSR set to: 0
 27594                           ; Switch size 1, requested type "simple"
 27595                           ; Number of cases is 3, Range of values is 2 to 4
 27596                           ; switch strategies available:
 27597                           ; Name         Instructions Cycles
 27598                           ; simple_byte           10     6 (average)
 27599                           ;	Chosen strategy is simple_byte
 27600   001668  518D               	movf	?_getNV& (0+255),w,b
 27601   00166A  0A02               	xorlw	2	; case 2
 27602   00166C  B4D8               	btfsc	status,2,c
 27603   00166E  EF2D  F004         	goto	l21728
 27604   001672  0A01               	xorlw	1	; case 3
 27605   001674  B4D8               	btfsc	status,2,c
 27606   001676  D4D0               	goto	l21872
 27607   001678  0A07               	xorlw	7	; case 4
 27608   00167A  B4D8               	btfsc	status,2,c
 27609   00167C  D7CE               	goto	l21956
 27610                           
 27611                           ; BSR set to: 1
 27612                           ;../servo.c: 517:         switch (servoState[io]) {
 27613   00167E  D054               	goto	l21972
 27614   001680                     l21962:
 27615                           
 27616                           ; BSR set to: 1
 27617                           ;../servo.c: 524:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 27618   001680  51DA               	movf	pollServos@io& (0+255),w,b
 27619   001682  0D07               	mullw	7
 27620   001684  50F3               	movf	243,w,c
 27621   001686  0F11               	addlw	17
 27622   001688  EC53  F05F         	call	_getNV
 27623   00168C  0100               	movlb	0	; () banked
 27624   00168E  A38D               	btfss	?_getNV& (0+255),1,b
 27625   001690  D063               	goto	l21974
 27626                           
 27627                           ; BSR set to: 0
 27628                           ;../servo.c: 525:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 27629   001692  0101               	movlb	1	; () banked
 27630   001694  51DA               	movf	pollServos@io& (0+255),w,b
 27631   001696  0D04               	mullw	4
 27632   001698  0E88               	movlw	low _ticksWhenStopped
 27633   00169A  24F3               	addwf	243,w,c
 27634   00169C  6ED9               	movwf	fsr2l,c
 27635   00169E  0E03               	movlw	high _ticksWhenStopped
 27636   0016A0  20F4               	addwfc	prodh,w,c
 27637   0016A2  6EDA               	movwf	fsr2h,c
 27638   0016A4  CFDE F1CF          	movff	postinc2,??_pollServos
 27639   0016A8  CFDE F1D0          	movff	postinc2,??_pollServos+1
 27640   0016AC  CFDE F1D1          	movff	postinc2,??_pollServos+2
 27641   0016B0  CFDE F1D2          	movff	postinc2,??_pollServos+3
 27642   0016B4  ECE5  F05B         	call	_tickGet	;wreg free
 27643   0016B8  0101               	movlb	1	; () banked
 27644   0016BA  51CF               	movf	??_pollServos& (0+255),w,b
 27645   0016BC  0100               	movlb	0	; () banked
 27646   0016BE  5D8D               	subwf	?_tickGet& (0+255),w,b
 27647   0016C0  0101               	movlb	1	; () banked
 27648   0016C2  6FD3               	movwf	(??_pollServos+4)& (0+255),b
 27649   0016C4  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 27650   0016C6  0100               	movlb	0	; () banked
 27651   0016C8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 27652   0016CA  0101               	movlb	1	; () banked
 27653   0016CC  6FD4               	movwf	(??_pollServos+5)& (0+255),b
 27654   0016CE  51D1               	movf	(??_pollServos+2)& (0+255),w,b
 27655   0016D0  0100               	movlb	0	; () banked
 27656   0016D2  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 27657   0016D4  0101               	movlb	1	; () banked
 27658   0016D6  6FD5               	movwf	(??_pollServos+6)& (0+255),b
 27659   0016D8  51D2               	movf	(??_pollServos+3)& (0+255),w,b
 27660   0016DA  0100               	movlb	0	; () banked
 27661   0016DC  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 27662   0016DE  0101               	movlb	1	; () banked
 27663   0016E0  6FD6               	movwf	(??_pollServos+7)& (0+255),b
 27664   0016E2  51D6               	movf	(??_pollServos+7)& (0+255),w,b
 27665   0016E4  11D5               	iorwf	(??_pollServos+6)& (0+255),w,b
 27666   0016E6  E106               	bnz	u23110
 27667   0016E8  0E25               	movlw	37
 27668   0016EA  5DD3               	subwf	(??_pollServos+4)& (0+255),w,b
 27669   0016EC  0EF4               	movlw	244
 27670   0016EE  59D4               	subwfb	(??_pollServos+5)& (0+255),w,b
 27671   0016F0  A0D8               	btfss	status,0,c
 27672   0016F2  D032               	goto	l21974
 27673   0016F4                     u23110:
 27674                           
 27675                           ; BSR set to: 1
 27676                           ;../servo.c: 526:                         servoState[io] = SS_OFF;
 27677   0016F4  0E10               	movlw	low _servoState
 27678   0016F6  25DA               	addwf	pollServos@io& (0+255),w,b
 27679   0016F8  6ED9               	movwf	fsr2l,c
 27680   0016FA  6ADA               	clrf	fsr2h,c
 27681   0016FC  0E01               	movlw	high _servoState
 27682   0016FE  22DA               	addwfc	fsr2h,f,c
 27683   001700  6ADF               	clrf	indf2,c
 27684   001702  D02A               	goto	l21974
 27685   001704                     l21968:
 27686                           
 27687                           ; BSR set to: 1
 27688                           ;../servo.c: 533:                 setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 27689   001704  51DA               	movf	pollServos@io& (0+255),w,b
 27690   001706  0D07               	mullw	7
 27691   001708  50F3               	movf	243,w,c
 27692   00170A  0F11               	addlw	17
 27693   00170C  EC53  F05F         	call	_getNV
 27694   001710  0100               	movlb	0	; () banked
 27695   001712  BB8D               	btfsc	?_getNV& (0+255),5,b
 27696   001714  D002               	goto	u23120
 27697   001716  0E01               	movlw	1
 27698   001718  D001               	goto	u23130
 27699   00171A                     u23120:
 27700   00171A  0E00               	movlw	0
 27701   00171C                     u23130:
 27702   00171C  6F91               	movwf	setOutputPin@state& (0+255),b
 27703   00171E  0101               	movlb	1	; () banked
 27704   001720  51DA               	movf	pollServos@io& (0+255),w,b
 27705   001722  EC9E  F037         	call	_setOutputPin
 27706                           
 27707                           ;../servo.c: 535:                 break;
 27708   001726  D018               	goto	l21974
 27709   001728                     l21972:
 27710   001728  0E10               	movlw	low _servoState
 27711   00172A  0101               	movlb	1	; () banked
 27712   00172C  25DA               	addwf	pollServos@io& (0+255),w,b
 27713   00172E  6ED9               	movwf	fsr2l,c
 27714   001730  6ADA               	clrf	fsr2h,c
 27715   001732  0E01               	movlw	high _servoState
 27716   001734  22DA               	addwfc	fsr2h,f,c
 27717   001736  50DF               	movf	indf2,w,c
 27718   001738  6FCF               	movwf	??_pollServos& (0+255),b
 27719   00173A  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 27720                           
 27721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27722                           ; Switch size 1, requested type "simple"
 27723                           ; Number of cases is 1, Range of values is 0 to 0
 27724                           ; switch strategies available:
 27725                           ; Name         Instructions Cycles
 27726                           ; simple_byte            4     3 (average)
 27727                           ;	Chosen strategy is simple_byte
 27728   00173C  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 27729   00173E  0A00               	xorlw	0	; case 0
 27730   001740  A4D8               	btfss	status,2,c
 27731   001742  D00A               	goto	l21974
 27732                           
 27733                           ; BSR set to: 1
 27734                           ; Switch size 1, requested type "simple"
 27735                           ; Number of cases is 4, Range of values is 0 to 3
 27736                           ; switch strategies available:
 27737                           ; Name         Instructions Cycles
 27738                           ; simple_byte           13     7 (average)
 27739                           ;	Chosen strategy is simple_byte
 27740   001744  51CF               	movf	??_pollServos& (0+255),w,b
 27741   001746  0A00               	xorlw	0	; case 0
 27742   001748  B4D8               	btfsc	status,2,c
 27743   00174A  D7DC               	goto	l21968
 27744   00174C  0A01               	xorlw	1	; case 1
 27745   00174E  B4D8               	btfsc	status,2,c
 27746   001750  D797               	goto	l21962
 27747   001752  0A03               	xorlw	3	; case 2
 27748   001754  A4D8               	btfss	status,2,c
 27749   001756  0A01               	xorlw	1	; case 3
 27750   001758                     l21974:
 27751                           
 27752                           ;../servo.c: 537:     }
 27753   001758  0101               	movlb	1	; () banked
 27754   00175A  2BDA               	incf	pollServos@io& (0+255),f,b
 27755                           
 27756                           ; BSR set to: 1
 27757   00175C  0E0F               	movlw	15
 27758   00175E  65DA               	cpfsgt	pollServos@io& (0+255),b
 27759   001760  D778               	goto	l21960
 27760   001762  0012               	return	
 27761   001764                     __end_of_pollServos:
 27762                           	callstack 0
 27763                           
 27764 ;; *************** function _initBounce *****************
 27765 ;; Defined at:
 27766 ;;		line 89 in file "../bounce.c"
 27767 ;; Parameters:    Size  Location     Type
 27768 ;;  io              1    wreg     unsigned char 
 27769 ;; Auto vars:     Size  Location     Type
 27770 ;;  io              1   45[BANK0 ] unsigned char 
 27771 ;; Return value:  Size  Location     Type
 27772 ;;                  1    wreg      void 
 27773 ;; Registers used:
 27774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27775 ;; Tracked objects:
 27776 ;;		On entry : 0/0
 27777 ;;		On exit  : 0/0
 27778 ;;		Unchanged: 0/0
 27779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27781 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27783 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27784 ;;Total ram usage:        1 bytes
 27785 ;; Hardware stack levels used: 1
 27786 ;; Hardware stack levels required when called: 12
 27787 ;; This function calls:
 27788 ;;		Nothing
 27789 ;; This function is called by:
 27790 ;;		_pollServos
 27791 ;; This function uses a non-reentrant model
 27792 ;;
 27793                           
 27794                           	psect	text101
 27795   00C35E                     __ptext101:
 27796                           	callstack 0
 27797   00C35E                     _initBounce:
 27798                           	callstack 15
 27799                           
 27800                           ; BSR set to: 1
 27801                           ;incstack = 0
 27802                           ;initBounce@io stored from wreg
 27803   00C35E  0100               	movlb	0	; () banked
 27804   00C360  6F8D               	movwf	initBounce@io& (0+255),b
 27805                           
 27806                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 27807   00C362  0E44               	movlw	low _bounceState
 27808   00C364  0100               	movlb	0	; () banked
 27809   00C366  258D               	addwf	initBounce@io& (0+255),w,b
 27810   00C368  6ED9               	movwf	fsr2l,c
 27811   00C36A  6ADA               	clrf	fsr2h,c
 27812   00C36C  0E02               	movlw	high _bounceState
 27813   00C36E  22DA               	addwfc	fsr2h,f,c
 27814   00C370  6ADF               	clrf	indf2,c
 27815                           
 27816                           ; BSR set to: 0
 27817                           ;../bounce.c: 91:     speed[io] = 0;
 27818   00C372  518D               	movf	initBounce@io& (0+255),w,b
 27819   00C374  0D02               	mullw	2
 27820   00C376  0E00               	movlw	low _speed
 27821   00C378  24F3               	addwf	243,w,c
 27822   00C37A  6ED9               	movwf	fsr2l,c
 27823   00C37C  0E02               	movlw	high _speed
 27824   00C37E  20F4               	addwfc	prodh,w,c
 27825   00C380  6EDA               	movwf	fsr2h,c
 27826   00C382  6ADE               	clrf	postinc2,c
 27827   00C384  6ADD               	clrf	postdec2,c
 27828                           
 27829                           ; BSR set to: 0
 27830   00C386  0012               	return		;funcret
 27831   00C388                     __end_of_initBounce:
 27832                           	callstack 0
 27833                           
 27834 ;; *************** function _bounceUp *****************
 27835 ;; Defined at:
 27836 ;;		line 161 in file "../bounce.c"
 27837 ;; Parameters:    Size  Location     Type
 27838 ;;  io              1    wreg     unsigned char 
 27839 ;; Auto vars:     Size  Location     Type
 27840 ;;  io              1   71[BANK0 ] unsigned char 
 27841 ;;  midway          1   70[BANK0 ] unsigned char 
 27842 ;;  reversed        1   69[BANK0 ] enum E12716
 27843 ;; Return value:  Size  Location     Type
 27844 ;;                  1    wreg      enum E12716
 27845 ;; Registers used:
 27846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27847 ;; Tracked objects:
 27848 ;;		On entry : 0/0
 27849 ;;		On exit  : 0/0
 27850 ;;		Unchanged: 0/0
 27851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27853 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27854 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27855 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27856 ;;Total ram usage:        9 bytes
 27857 ;; Hardware stack levels used: 1
 27858 ;; Hardware stack levels required when called: 13
 27859 ;; This function calls:
 27860 ;;		___awdiv
 27861 ;;		_getNV
 27862 ;; This function is called by:
 27863 ;;		_pollServos
 27864 ;; This function uses a non-reentrant model
 27865 ;;
 27866                           
 27867                           	psect	text102
 27868   005988                     __ptext102:
 27869                           	callstack 0
 27870   005988                     _bounceUp:
 27871                           	callstack 14
 27872                           
 27873                           ; BSR set to: 0
 27874                           ;incstack = 0
 27875                           ;bounceUp@io stored from wreg
 27876   005988  0100               	movlb	0	; () banked
 27877   00598A  6FA7               	movwf	bounceUp@io& (0+255),b
 27878                           
 27879                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 27880   00598C  0100               	movlb	0	; () banked
 27881   00598E  51A7               	movf	bounceUp@io& (0+255),w,b
 27882   005990  0D07               	mullw	7
 27883   005992  50F3               	movf	243,w,c
 27884   005994  0F12               	addlw	18
 27885   005996  EC53  F05F         	call	_getNV
 27886   00599A  C08D  F09F         	movff	?_getNV,??_bounceUp
 27887   00599E  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 27888   0059A2  0100               	movlb	0	; () banked
 27889   0059A4  51A7               	movf	bounceUp@io& (0+255),w,b
 27890   0059A6  0D07               	mullw	7
 27891   0059A8  50F3               	movf	243,w,c
 27892   0059AA  0F13               	addlw	19
 27893   0059AC  EC53  F05F         	call	_getNV
 27894   0059B0  0100               	movlb	0	; () banked
 27895   0059B2  518D               	movf	?_getNV& (0+255),w,b
 27896   0059B4  5D9F               	subwf	??_bounceUp& (0+255),w,b
 27897   0059B6  B0D8               	btfsc	status,0,c
 27898   0059B8  D002               	goto	u21620
 27899   0059BA  0E01               	movlw	1
 27900   0059BC  D001               	goto	u21630
 27901   0059BE                     u21620:
 27902   0059BE  0E00               	movlw	0
 27903   0059C0                     u21630:
 27904   0059C0  6FA5               	movwf	bounceUp@reversed& (0+255),b
 27905                           
 27906                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 27907   0059C2  D116               	goto	l20914
 27908   0059C4                     l20864:
 27909                           
 27910                           ; BSR set to: 0
 27911                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 27912   0059C4  51A7               	movf	bounceUp@io& (0+255),w,b
 27913   0059C6  0D07               	mullw	7
 27914   0059C8  50F3               	movf	243,w,c
 27915   0059CA  0F12               	addlw	18
 27916   0059CC  EC53  F05F         	call	_getNV
 27917   0059D0  0100               	movlb	0	; () banked
 27918   0059D2  518D               	movf	?_getNV& (0+255),w,b
 27919   0059D4  6F97               	movwf	___awdiv@dividend& (0+255),b
 27920   0059D6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27921   0059D8  0E00               	movlw	0
 27922   0059DA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27923   0059DC  0E02               	movlw	2
 27924   0059DE  6F99               	movwf	___awdiv@divisor& (0+255),b
 27925   0059E0  EC1B  F054         	call	___awdiv	;wreg free
 27926   0059E4  C097  F09F         	movff	?___awdiv,??_bounceUp
 27927   0059E8  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 27928   0059EC  0100               	movlb	0	; () banked
 27929   0059EE  51A7               	movf	bounceUp@io& (0+255),w,b
 27930   0059F0  0D07               	mullw	7
 27931   0059F2  50F3               	movf	243,w,c
 27932   0059F4  0F13               	addlw	19
 27933   0059F6  EC53  F05F         	call	_getNV
 27934   0059FA  0100               	movlb	0	; () banked
 27935   0059FC  518D               	movf	?_getNV& (0+255),w,b
 27936   0059FE  6F97               	movwf	___awdiv@dividend& (0+255),b
 27937   005A00  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27938   005A02  0E00               	movlw	0
 27939   005A04  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27940   005A06  0E02               	movlw	2
 27941   005A08  6F99               	movwf	___awdiv@divisor& (0+255),b
 27942   005A0A  EC1B  F054         	call	___awdiv	;wreg free
 27943   005A0E  0100               	movlb	0	; () banked
 27944   005A10  5197               	movf	?___awdiv& (0+255),w,b
 27945   005A12  259F               	addwf	??_bounceUp& (0+255),w,b
 27946   005A14  6FA6               	movwf	bounceUp@midway& (0+255),b
 27947                           
 27948                           ; BSR set to: 0
 27949                           ;../bounce.c: 169:         if (reversed) {
 27950   005A16  51A5               	movf	bounceUp@reversed& (0+255),w,b
 27951   005A18  B4D8               	btfsc	status,2,c
 27952   005A1A  D028               	goto	l20876
 27953                           
 27954                           ; BSR set to: 0
 27955                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 27956   005A1C  51A7               	movf	bounceUp@io& (0+255),w,b
 27957   005A1E  0D07               	mullw	7
 27958   005A20  50F3               	movf	243,w,c
 27959   005A22  0F15               	addlw	21
 27960   005A24  EC53  F05F         	call	_getNV
 27961   005A28  0E30               	movlw	low _currentPos
 27962   005A2A  0100               	movlb	0	; () banked
 27963   005A2C  25A7               	addwf	bounceUp@io& (0+255),w,b
 27964   005A2E  6ED9               	movwf	fsr2l,c
 27965   005A30  6ADA               	clrf	fsr2h,c
 27966   005A32  0E01               	movlw	high _currentPos
 27967   005A34  22DA               	addwfc	fsr2h,f,c
 27968   005A36  518D               	movf	?_getNV& (0+255),w,b
 27969   005A38  5EDF               	subwf	indf2,f,c
 27970                           
 27971                           ; BSR set to: 0
 27972                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 27973   005A3A  0E30               	movlw	low _currentPos
 27974   005A3C  25A7               	addwf	bounceUp@io& (0+255),w,b
 27975   005A3E  6ED9               	movwf	fsr2l,c
 27976   005A40  6ADA               	clrf	fsr2h,c
 27977   005A42  0E01               	movlw	high _currentPos
 27978   005A44  22DA               	addwfc	fsr2h,f,c
 27979   005A46  50DE               	movf	postinc2,w,c
 27980   005A48  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 27981   005A4A  A0D8               	btfss	status,0,c
 27982   005A4C  D0E9               	goto	l20916
 27983                           
 27984                           ; BSR set to: 0
 27985                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 27986   005A4E  0E44               	movlw	low _bounceState
 27987   005A50  25A7               	addwf	bounceUp@io& (0+255),w,b
 27988   005A52  6ED9               	movwf	fsr2l,c
 27989   005A54  6ADA               	clrf	fsr2h,c
 27990   005A56  0E02               	movlw	high _bounceState
 27991   005A58  22DA               	addwfc	fsr2h,f,c
 27992   005A5A  0E01               	movlw	1
 27993   005A5C  6EDF               	movwf	indf2,c
 27994                           
 27995                           ; BSR set to: 0
 27996                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 27997   005A5E  51A7               	movf	bounceUp@io& (0+255),w,b
 27998   005A60  0D07               	mullw	7
 27999   005A62  50F3               	movf	243,w,c
 28000   005A64  0F16               	addlw	22
 28001   005A66  EC53  F05F         	call	_getNV
 28002   005A6A  D027               	goto	L7
 28003   005A6C                     l20876:
 28004                           
 28005                           ; BSR set to: 0
 28006                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 28007   005A6C  51A7               	movf	bounceUp@io& (0+255),w,b
 28008   005A6E  0D07               	mullw	7
 28009   005A70  50F3               	movf	243,w,c
 28010   005A72  0F15               	addlw	21
 28011   005A74  EC53  F05F         	call	_getNV
 28012   005A78  0E30               	movlw	low _currentPos
 28013   005A7A  0100               	movlb	0	; () banked
 28014   005A7C  25A7               	addwf	bounceUp@io& (0+255),w,b
 28015   005A7E  6ED9               	movwf	fsr2l,c
 28016   005A80  6ADA               	clrf	fsr2h,c
 28017   005A82  0E01               	movlw	high _currentPos
 28018   005A84  22DA               	addwfc	fsr2h,f,c
 28019   005A86  518D               	movf	?_getNV& (0+255),w,b
 28020   005A88  26DF               	addwf	indf2,f,c
 28021                           
 28022                           ; BSR set to: 0
 28023                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 28024   005A8A  0E30               	movlw	low _currentPos
 28025   005A8C  25A7               	addwf	bounceUp@io& (0+255),w,b
 28026   005A8E  6ED9               	movwf	fsr2l,c
 28027   005A90  6ADA               	clrf	fsr2h,c
 28028   005A92  0E01               	movlw	high _currentPos
 28029   005A94  22DA               	addwfc	fsr2h,f,c
 28030   005A96  51A6               	movf	bounceUp@midway& (0+255),w,b
 28031   005A98  5CDE               	subwf	postinc2,w,c
 28032   005A9A  A0D8               	btfss	status,0,c
 28033   005A9C  D0C1               	goto	l20916
 28034                           
 28035                           ; BSR set to: 0
 28036                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 28037   005A9E  0E44               	movlw	low _bounceState
 28038   005AA0  25A7               	addwf	bounceUp@io& (0+255),w,b
 28039   005AA2  6ED9               	movwf	fsr2l,c
 28040   005AA4  6ADA               	clrf	fsr2h,c
 28041   005AA6  0E02               	movlw	high _bounceState
 28042   005AA8  22DA               	addwfc	fsr2h,f,c
 28043   005AAA  0E01               	movlw	1
 28044   005AAC  6EDF               	movwf	indf2,c
 28045                           
 28046                           ; BSR set to: 0
 28047                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 28048   005AAE  51A7               	movf	bounceUp@io& (0+255),w,b
 28049   005AB0  0D07               	mullw	7
 28050   005AB2  50F3               	movf	243,w,c
 28051   005AB4  0F16               	addlw	22
 28052   005AB6  EC53  F05F         	call	_getNV
 28053   005ABA                     L7:
 28054   005ABA  0100               	movlb	0	; () banked
 28055   005ABC  518D               	movf	?_getNV& (0+255),w,b
 28056   005ABE  6F9F               	movwf	??_bounceUp& (0+255),b
 28057   005AC0  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 28058   005AC2  51A7               	movf	bounceUp@io& (0+255),w,b
 28059   005AC4  0D02               	mullw	2
 28060   005AC6  0E00               	movlw	low _speed
 28061   005AC8  24F3               	addwf	243,w,c
 28062   005ACA  6ED9               	movwf	fsr2l,c
 28063   005ACC  0E02               	movlw	high _speed
 28064   005ACE  20F4               	addwfc	prodh,w,c
 28065   005AD0  6EDA               	movwf	fsr2h,c
 28066   005AD2  C09F  FFDE         	movff	??_bounceUp,postinc2
 28067   005AD6  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 28068   005ADA  D0A2               	goto	l20916
 28069   005ADC                     l20884:
 28070                           
 28071                           ; BSR set to: 0
 28072                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 28073   005ADC  51A7               	movf	bounceUp@io& (0+255),w,b
 28074   005ADE  0D02               	mullw	2
 28075   005AE0  0E00               	movlw	low _speed
 28076   005AE2  24F3               	addwf	243,w,c
 28077   005AE4  6ED9               	movwf	fsr2l,c
 28078   005AE6  0E02               	movlw	high _speed
 28079   005AE8  20F4               	addwfc	prodh,w,c
 28080   005AEA  6EDA               	movwf	fsr2h,c
 28081   005AEC  50DE               	movf	postinc2,w,c
 28082   005AEE  10DE               	iorwf	postinc2,w,c
 28083   005AF0  A4D8               	btfss	status,2,c
 28084   005AF2  D008               	goto	l20888
 28085                           
 28086                           ; BSR set to: 0
 28087   005AF4  0E44               	movlw	low _bounceState
 28088   005AF6  25A7               	addwf	bounceUp@io& (0+255),w,b
 28089   005AF8  6ED9               	movwf	fsr2l,c
 28090   005AFA  6ADA               	clrf	fsr2h,c
 28091   005AFC  0E02               	movlw	high _bounceState
 28092   005AFE  22DA               	addwfc	fsr2h,f,c
 28093   005B00  0E02               	movlw	2
 28094   005B02  6EDF               	movwf	indf2,c
 28095   005B04                     l20888:
 28096                           
 28097                           ; BSR set to: 0
 28098                           ;../bounce.c: 186:         speed[io]--;
 28099   005B04  51A7               	movf	bounceUp@io& (0+255),w,b
 28100   005B06  0D02               	mullw	2
 28101   005B08  0E00               	movlw	low _speed
 28102   005B0A  24F3               	addwf	243,w,c
 28103   005B0C  6ED9               	movwf	fsr2l,c
 28104   005B0E  0E02               	movlw	high _speed
 28105   005B10  20F4               	addwfc	prodh,w,c
 28106   005B12  6EDA               	movwf	fsr2h,c
 28107   005B14  06DE               	decf	postinc2,f,c
 28108   005B16  0E00               	movlw	0
 28109   005B18  5ADD               	subwfb	postdec2,f,c
 28110                           
 28111                           ;../bounce.c: 187:         break;
 28112   005B1A  D082               	goto	l20916
 28113   005B1C                     l20890:
 28114                           
 28115                           ; BSR set to: 0
 28116                           ;../bounce.c: 190:         if (reversed) {
 28117   005B1C  51A5               	movf	bounceUp@reversed& (0+255),w,b
 28118   005B1E  B4D8               	btfsc	status,2,c
 28119   005B20  D038               	goto	l20902
 28120                           
 28121                           ; BSR set to: 0
 28122                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 28123   005B22  51A7               	movf	bounceUp@io& (0+255),w,b
 28124   005B24  0D07               	mullw	7
 28125   005B26  50F3               	movf	243,w,c
 28126   005B28  0F15               	addlw	21
 28127   005B2A  EC53  F05F         	call	_getNV
 28128   005B2E  0E30               	movlw	low _currentPos
 28129   005B30  0100               	movlb	0	; () banked
 28130   005B32  25A7               	addwf	bounceUp@io& (0+255),w,b
 28131   005B34  6ED9               	movwf	fsr2l,c
 28132   005B36  6ADA               	clrf	fsr2h,c
 28133   005B38  0E01               	movlw	high _currentPos
 28134   005B3A  22DA               	addwfc	fsr2h,f,c
 28135   005B3C  518D               	movf	?_getNV& (0+255),w,b
 28136   005B3E  5EDF               	subwf	indf2,f,c
 28137                           
 28138                           ; BSR set to: 0
 28139                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 28140   005B40  0E30               	movlw	low _currentPos
 28141   005B42  25A7               	addwf	bounceUp@io& (0+255),w,b
 28142   005B44  6ED9               	movwf	fsr2l,c
 28143   005B46  6ADA               	clrf	fsr2h,c
 28144   005B48  0E01               	movlw	high _currentPos
 28145   005B4A  22DA               	addwfc	fsr2h,f,c
 28146   005B4C  50DF               	movf	indf2,w,c
 28147   005B4E  6F9F               	movwf	??_bounceUp& (0+255),b
 28148   005B50  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 28149   005B52  51A7               	movf	bounceUp@io& (0+255),w,b
 28150   005B54  0F2B               	addlw	low _targetPos
 28151   005B56  6ED9               	movwf	fsr2l,c
 28152   005B58  6ADA               	clrf	fsr2h,c
 28153   005B5A  50DF               	movf	indf2,w,c
 28154   005B5C  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 28155   005B5E  0EFD               	movlw	253
 28156   005B60  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 28157   005B62  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 28158   005B64  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 28159   005B66  0EFF               	movlw	255
 28160   005B68  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 28161   005B6A  519F               	movf	??_bounceUp& (0+255),w,b
 28162   005B6C  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 28163   005B6E  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 28164   005B70  0A80               	xorlw	128
 28165   005B72  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 28166   005B74  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 28167   005B76  0A80               	xorlw	128
 28168   005B78  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 28169   005B7A  A0D8               	btfss	status,0,c
 28170   005B7C  D051               	goto	l20916
 28171   005B7E                     u21690:
 28172                           
 28173                           ; BSR set to: 0
 28174                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 28175   005B7E  0E44               	movlw	low _bounceState
 28176   005B80  25A7               	addwf	bounceUp@io& (0+255),w,b
 28177   005B82  6ED9               	movwf	fsr2l,c
 28178   005B84  6ADA               	clrf	fsr2h,c
 28179   005B86  0E02               	movlw	high _bounceState
 28180   005B88  22DA               	addwfc	fsr2h,f,c
 28181   005B8A  0E03               	movlw	3
 28182   005B8C  6EDF               	movwf	indf2,c
 28183                           
 28184                           ; BSR set to: 0
 28185                           ;../bounce.c: 194:                 return TRUE;
 28186   005B8E  0E01               	movlw	1
 28187   005B90  0012               	return	
 28188   005B92                     l20902:
 28189                           
 28190                           ; BSR set to: 0
 28191                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 28192   005B92  51A7               	movf	bounceUp@io& (0+255),w,b
 28193   005B94  0D07               	mullw	7
 28194   005B96  50F3               	movf	243,w,c
 28195   005B98  0F15               	addlw	21
 28196   005B9A  EC53  F05F         	call	_getNV
 28197   005B9E  0E30               	movlw	low _currentPos
 28198   005BA0  0100               	movlb	0	; () banked
 28199   005BA2  25A7               	addwf	bounceUp@io& (0+255),w,b
 28200   005BA4  6ED9               	movwf	fsr2l,c
 28201   005BA6  6ADA               	clrf	fsr2h,c
 28202   005BA8  0E01               	movlw	high _currentPos
 28203   005BAA  22DA               	addwfc	fsr2h,f,c
 28204   005BAC  518D               	movf	?_getNV& (0+255),w,b
 28205   005BAE  26DF               	addwf	indf2,f,c
 28206                           
 28207                           ; BSR set to: 0
 28208                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 28209   005BB0  51A7               	movf	bounceUp@io& (0+255),w,b
 28210   005BB2  0F2B               	addlw	low _targetPos
 28211   005BB4  6ED9               	movwf	fsr2l,c
 28212   005BB6  6ADA               	clrf	fsr2h,c
 28213   005BB8  50DF               	movf	indf2,w,c
 28214   005BBA  6F9F               	movwf	??_bounceUp& (0+255),b
 28215   005BBC  0EFD               	movlw	253
 28216   005BBE  259F               	addwf	??_bounceUp& (0+255),w,b
 28217   005BC0  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 28218   005BC2  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 28219   005BC4  0EFF               	movlw	255
 28220   005BC6  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 28221   005BC8  0E30               	movlw	low _currentPos
 28222   005BCA  25A7               	addwf	bounceUp@io& (0+255),w,b
 28223   005BCC  6ED9               	movwf	fsr2l,c
 28224   005BCE  6ADA               	clrf	fsr2h,c
 28225   005BD0  0E01               	movlw	high _currentPos
 28226   005BD2  22DA               	addwfc	fsr2h,f,c
 28227   005BD4  50DF               	movf	indf2,w,c
 28228   005BD6  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 28229   005BD8  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 28230   005BDA  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 28231   005BDC  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 28232   005BDE  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 28233   005BE0  0A80               	xorlw	128
 28234   005BE2  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 28235   005BE4  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 28236   005BE6  0A80               	xorlw	128
 28237   005BE8  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 28238   005BEA  B0D8               	btfsc	status,0,c
 28239   005BEC  D7C8               	goto	u21690
 28240   005BEE  D018               	goto	l20916
 28241   005BF0                     l20914:
 28242                           
 28243                           ; BSR set to: 0
 28244   005BF0  0E44               	movlw	low _bounceState
 28245   005BF2  25A7               	addwf	bounceUp@io& (0+255),w,b
 28246   005BF4  6ED9               	movwf	fsr2l,c
 28247   005BF6  6ADA               	clrf	fsr2h,c
 28248   005BF8  0E02               	movlw	high _bounceState
 28249   005BFA  22DA               	addwfc	fsr2h,f,c
 28250   005BFC  50DF               	movf	indf2,w,c
 28251   005BFE  6F9F               	movwf	??_bounceUp& (0+255),b
 28252   005C00  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 28253                           
 28254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28255                           ; Switch size 1, requested type "simple"
 28256                           ; Number of cases is 1, Range of values is 0 to 0
 28257                           ; switch strategies available:
 28258                           ; Name         Instructions Cycles
 28259                           ; simple_byte            4     3 (average)
 28260                           ;	Chosen strategy is simple_byte
 28261   005C02  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 28262   005C04  0A00               	xorlw	0	; case 0
 28263   005C06  A4D8               	btfss	status,2,c
 28264   005C08  D00B               	goto	l20916
 28265                           
 28266                           ; BSR set to: 0
 28267                           ; Switch size 1, requested type "simple"
 28268                           ; Number of cases is 4, Range of values is 0 to 3
 28269                           ; switch strategies available:
 28270                           ; Name         Instructions Cycles
 28271                           ; simple_byte           13     7 (average)
 28272                           ;	Chosen strategy is simple_byte
 28273   005C0A  519F               	movf	??_bounceUp& (0+255),w,b
 28274   005C0C  0A00               	xorlw	0	; case 0
 28275   005C0E  B4D8               	btfsc	status,2,c
 28276   005C10  D6D9               	goto	l20864
 28277   005C12  0A01               	xorlw	1	; case 1
 28278   005C14  B4D8               	btfsc	status,2,c
 28279   005C16  D762               	goto	l20884
 28280   005C18  0A03               	xorlw	3	; case 2
 28281   005C1A  B4D8               	btfsc	status,2,c
 28282   005C1C  D77F               	goto	l20890
 28283   005C1E  0A01               	xorlw	1	; case 3
 28284   005C20                     l20916:
 28285                           
 28286                           ; BSR set to: 0
 28287                           ;../bounce.c: 207:     return FALSE;
 28288   005C20  0E00               	movlw	0
 28289                           
 28290                           ; BSR set to: 0
 28291   005C22  0012               	return		;funcret
 28292   005C24                     __end_of_bounceUp:
 28293                           	callstack 0
 28294                           
 28295 ;; *************** function _bounceDown *****************
 28296 ;; Defined at:
 28297 ;;		line 103 in file "../bounce.c"
 28298 ;; Parameters:    Size  Location     Type
 28299 ;;  io              1    wreg     unsigned char 
 28300 ;; Auto vars:     Size  Location     Type
 28301 ;;  io              1    3[BANK1 ] unsigned char 
 28302 ;;  tmp             2    1[BANK1 ] int 
 28303 ;;  reversed        1    0[BANK1 ] enum E12716
 28304 ;; Return value:  Size  Location     Type
 28305 ;;                  1    wreg      enum E12716
 28306 ;; Registers used:
 28307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28308 ;; Tracked objects:
 28309 ;;		On entry : 0/0
 28310 ;;		On exit  : 0/0
 28311 ;;		Unchanged: 0/0
 28312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28314 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28315 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28316 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28317 ;;Total ram usage:       11 bytes
 28318 ;; Hardware stack levels used: 1
 28319 ;; Hardware stack levels required when called: 13
 28320 ;; This function calls:
 28321 ;;		___awdiv
 28322 ;;		___wmul
 28323 ;;		_getNV
 28324 ;; This function is called by:
 28325 ;;		_pollServos
 28326 ;; This function uses a non-reentrant model
 28327 ;;
 28328                           
 28329                           	psect	text103
 28330   002930                     __ptext103:
 28331                           	callstack 0
 28332   002930                     _bounceDown:
 28333                           	callstack 14
 28334                           
 28335                           ; BSR set to: 0
 28336                           ;incstack = 0
 28337                           ;bounceDown@io stored from wreg
 28338   002930  0101               	movlb	1	; () banked
 28339   002932  6FC0               	movwf	bounceDown@io& (0+255),b
 28340                           
 28341                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 28342   002934  0E30               	movlw	low _currentPos
 28343   002936  0101               	movlb	1	; () banked
 28344   002938  25C0               	addwf	bounceDown@io& (0+255),w,b
 28345   00293A  6ED9               	movwf	fsr2l,c
 28346   00293C  6ADA               	clrf	fsr2h,c
 28347   00293E  0E01               	movlw	high _currentPos
 28348   002940  22DA               	addwfc	fsr2h,f,c
 28349   002942  50DF               	movf	indf2,w,c
 28350   002944  0100               	movlb	0	; () banked
 28351   002946  6F9F               	movwf	??_bounceDown& (0+255),b
 28352   002948  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28353   00294A  0101               	movlb	1	; () banked
 28354   00294C  51C0               	movf	bounceDown@io& (0+255),w,b
 28355   00294E  0F2B               	addlw	low _targetPos
 28356   002950  6ED9               	movwf	fsr2l,c
 28357   002952  6ADA               	clrf	fsr2h,c
 28358   002954  50DF               	movf	indf2,w,c
 28359   002956  0100               	movlb	0	; () banked
 28360   002958  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28361   00295A  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 28362   00295C  0E03               	movlw	3
 28363   00295E  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 28364   002960  0E00               	movlw	0
 28365   002962  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 28366   002964  519F               	movf	??_bounceDown& (0+255),w,b
 28367   002966  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28368   002968  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28369   00296A  0A80               	xorlw	128
 28370   00296C  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28371   00296E  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28372   002970  0A80               	xorlw	128
 28373   002972  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 28374   002974  A0D8               	btfss	status,0,c
 28375   002976  D047               	goto	u21740
 28376                           
 28377                           ; BSR set to: 0
 28378   002978  0101               	movlb	1	; () banked
 28379   00297A  51C0               	movf	bounceDown@io& (0+255),w,b
 28380   00297C  0F2B               	addlw	low _targetPos
 28381   00297E  6ED9               	movwf	fsr2l,c
 28382   002980  6ADA               	clrf	fsr2h,c
 28383   002982  50DF               	movf	indf2,w,c
 28384   002984  0100               	movlb	0	; () banked
 28385   002986  6F9F               	movwf	??_bounceDown& (0+255),b
 28386   002988  0EFD               	movlw	253
 28387   00298A  259F               	addwf	??_bounceDown& (0+255),w,b
 28388   00298C  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 28389   00298E  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 28390   002990  0EFF               	movlw	255
 28391   002992  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 28392   002994  0E30               	movlw	low _currentPos
 28393   002996  0101               	movlb	1	; () banked
 28394   002998  25C0               	addwf	bounceDown@io& (0+255),w,b
 28395   00299A  6ED9               	movwf	fsr2l,c
 28396   00299C  6ADA               	clrf	fsr2h,c
 28397   00299E  0E01               	movlw	high _currentPos
 28398   0029A0  22DA               	addwfc	fsr2h,f,c
 28399   0029A2  50DF               	movf	indf2,w,c
 28400   0029A4  0100               	movlb	0	; () banked
 28401   0029A6  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28402   0029A8  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 28403   0029AA  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28404   0029AC  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 28405   0029AE  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28406   0029B0  0A80               	xorlw	128
 28407   0029B2  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 28408   0029B4  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28409   0029B6  0A80               	xorlw	128
 28410   0029B8  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 28411   0029BA  A0D8               	btfss	status,0,c
 28412   0029BC  D024               	goto	u21740
 28413                           
 28414                           ; BSR set to: 0
 28415   0029BE  0101               	movlb	1	; () banked
 28416   0029C0  51C0               	movf	bounceDown@io& (0+255),w,b
 28417   0029C2  0D02               	mullw	2
 28418   0029C4  0E00               	movlw	low _speed
 28419   0029C6  24F3               	addwf	243,w,c
 28420   0029C8  6ED9               	movwf	fsr2l,c
 28421   0029CA  0E02               	movlw	high _speed
 28422   0029CC  20F4               	addwfc	prodh,w,c
 28423   0029CE  6EDA               	movwf	fsr2h,c
 28424   0029D0  0E01               	movlw	1
 28425   0029D2  BEDB               	btfsc	plusw2,7,c
 28426   0029D4  D007               	goto	u21730
 28427   0029D6  0E01               	movlw	1
 28428   0029D8  50DB               	movf	plusw2,w,c
 28429   0029DA  E115               	bnz	l20932
 28430   0029DC  0E04               	movlw	4
 28431   0029DE  5CDE               	subwf	postinc2,w,c
 28432   0029E0  B0D8               	btfsc	status,0,c
 28433   0029E2  D011               	goto	u21740
 28434   0029E4                     u21730:
 28435                           
 28436                           ; BSR set to: 1
 28437   0029E4  51C0               	movf	bounceDown@io& (0+255),w,b
 28438   0029E6  0D02               	mullw	2
 28439   0029E8  0E00               	movlw	low _speed
 28440   0029EA  24F3               	addwf	243,w,c
 28441   0029EC  6ED9               	movwf	fsr2l,c
 28442   0029EE  0E02               	movlw	high _speed
 28443   0029F0  20F4               	addwfc	prodh,w,c
 28444   0029F2  6EDA               	movwf	fsr2h,c
 28445   0029F4  0E01               	movlw	1
 28446   0029F6  AEDB               	btfss	plusw2,7,c
 28447   0029F8  D201               	goto	l20960
 28448   0029FA  0EFD               	movlw	253
 28449   0029FC  5CDE               	subwf	postinc2,w,c
 28450   0029FE  0EFF               	movlw	255
 28451   002A00  58DE               	subwfb	postinc2,w,c
 28452   002A02  B0D8               	btfsc	status,0,c
 28453   002A04  D1FB               	goto	l20960
 28454   002A06                     u21740:
 28455   002A06                     l20932:
 28456                           
 28457                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 28458   002A06  0101               	movlb	1	; () banked
 28459   002A08  51C0               	movf	bounceDown@io& (0+255),w,b
 28460   002A0A  0D07               	mullw	7
 28461   002A0C  50F3               	movf	243,w,c
 28462   002A0E  0F12               	addlw	18
 28463   002A10  EC53  F05F         	call	_getNV
 28464   002A14  C08D  F09F         	movff	?_getNV,??_bounceDown
 28465   002A18  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 28466   002A1C  0101               	movlb	1	; () banked
 28467   002A1E  51C0               	movf	bounceDown@io& (0+255),w,b
 28468   002A20  0D07               	mullw	7
 28469   002A22  50F3               	movf	243,w,c
 28470   002A24  0F13               	addlw	19
 28471   002A26  EC53  F05F         	call	_getNV
 28472   002A2A  0100               	movlb	0	; () banked
 28473   002A2C  518D               	movf	?_getNV& (0+255),w,b
 28474   002A2E  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28475   002A30  B0D8               	btfsc	status,0,c
 28476   002A32  D002               	goto	u21750
 28477   002A34  0E01               	movlw	1
 28478   002A36  D001               	goto	u21760
 28479   002A38                     u21750:
 28480   002A38  0E00               	movlw	0
 28481   002A3A                     u21760:
 28482   002A3A  0101               	movlb	1	; () banked
 28483   002A3C  6FBD               	movwf	bounceDown@reversed& (0+255),b
 28484                           
 28485                           ; BSR set to: 1
 28486                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 28487   002A3E  51BD               	movf	bounceDown@reversed& (0+255),w,b
 28488   002A40  A4D8               	btfss	status,2,c
 28489   002A42  D0F0               	goto	l20946
 28490                           
 28491                           ; BSR set to: 1
 28492                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 28493   002A44  51C0               	movf	bounceDown@io& (0+255),w,b
 28494   002A46  0D02               	mullw	2
 28495   002A48  0E00               	movlw	low _speed
 28496   002A4A  24F3               	addwf	243,w,c
 28497   002A4C  6ED9               	movwf	fsr2l,c
 28498   002A4E  0E02               	movlw	high _speed
 28499   002A50  20F4               	addwfc	prodh,w,c
 28500   002A52  6EDA               	movwf	fsr2h,c
 28501   002A54  CFDE F097          	movff	postinc2,___awdiv@dividend
 28502   002A58  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28503   002A5C  0E00               	movlw	0
 28504   002A5E  0100               	movlb	0	; () banked
 28505   002A60  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28506   002A62  0E1E               	movlw	30
 28507   002A64  6F99               	movwf	___awdiv@divisor& (0+255),b
 28508   002A66  EC1B  F054         	call	___awdiv	;wreg free
 28509   002A6A  C097  F09F         	movff	?___awdiv,??_bounceDown
 28510   002A6E  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 28511   002A72  0101               	movlb	1	; () banked
 28512   002A74  51C0               	movf	bounceDown@io& (0+255),w,b
 28513   002A76  0D07               	mullw	7
 28514   002A78  50F3               	movf	243,w,c
 28515   002A7A  0F13               	addlw	19
 28516   002A7C  EC53  F05F         	call	_getNV
 28517   002A80  0100               	movlb	0	; () banked
 28518   002A82  518D               	movf	?_getNV& (0+255),w,b
 28519   002A84  259F               	addwf	??_bounceDown& (0+255),w,b
 28520   002A86  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28521   002A88  0E00               	movlw	0
 28522   002A8A  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28523   002A8C  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28524   002A8E  0E30               	movlw	low _currentPos
 28525   002A90  0101               	movlb	1	; () banked
 28526   002A92  25C0               	addwf	bounceDown@io& (0+255),w,b
 28527   002A94  6ED9               	movwf	fsr2l,c
 28528   002A96  6ADA               	clrf	fsr2h,c
 28529   002A98  0E01               	movlw	high _currentPos
 28530   002A9A  22DA               	addwfc	fsr2h,f,c
 28531   002A9C  50DF               	movf	indf2,w,c
 28532   002A9E  0100               	movlb	0	; () banked
 28533   002AA0  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28534   002AA2  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28535   002AA4  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28536   002AA6  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28537   002AA8  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28538   002AAA  0A80               	xorlw	128
 28539   002AAC  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28540   002AAE  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28541   002AB0  0A80               	xorlw	128
 28542   002AB2  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28543   002AB4  B0D8               	btfsc	status,0,c
 28544   002AB6  D088               	goto	l20942
 28545                           
 28546                           ; BSR set to: 0
 28547                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28548   002AB8  0101               	movlb	1	; () banked
 28549   002ABA  51C0               	movf	bounceDown@io& (0+255),w,b
 28550   002ABC  0D07               	mullw	7
 28551   002ABE  50F3               	movf	243,w,c
 28552   002AC0  0F14               	addlw	20
 28553   002AC2  EC53  F05F         	call	_getNV
 28554   002AC6  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28555   002ACA  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28556   002ACE  0101               	movlb	1	; () banked
 28557   002AD0  51C0               	movf	bounceDown@io& (0+255),w,b
 28558   002AD2  0D02               	mullw	2
 28559   002AD4  0E00               	movlw	low _speed
 28560   002AD6  24F3               	addwf	243,w,c
 28561   002AD8  6ED9               	movwf	fsr2l,c
 28562   002ADA  0E02               	movlw	high _speed
 28563   002ADC  20F4               	addwfc	prodh,w,c
 28564   002ADE  6EDA               	movwf	fsr2h,c
 28565   002AE0  CFDE F09F          	movff	postinc2,??_bounceDown
 28566   002AE4  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28567   002AE8  0100               	movlb	0	; () banked
 28568   002AEA  1F9F               	comf	??_bounceDown& (0+255),f,b
 28569   002AEC  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28570   002AEE  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28571   002AF0  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28572   002AF2  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28573   002AF6  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28574   002AFA  EC50  F062         	call	___wmul	;wreg free
 28575   002AFE  C091  F097         	movff	?___wmul,___awdiv@dividend
 28576   002B02  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28577   002B06  0E00               	movlw	0
 28578   002B08  0100               	movlb	0	; () banked
 28579   002B0A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28580   002B0C  0E64               	movlw	100
 28581   002B0E  6F99               	movwf	___awdiv@divisor& (0+255),b
 28582   002B10  EC1B  F054         	call	___awdiv	;wreg free
 28583   002B14  0101               	movlb	1	; () banked
 28584   002B16  51C0               	movf	bounceDown@io& (0+255),w,b
 28585   002B18  0D02               	mullw	2
 28586   002B1A  0E00               	movlw	low _speed
 28587   002B1C  24F3               	addwf	243,w,c
 28588   002B1E  6ED9               	movwf	fsr2l,c
 28589   002B20  0E02               	movlw	high _speed
 28590   002B22  20F4               	addwfc	prodh,w,c
 28591   002B24  6EDA               	movwf	fsr2h,c
 28592   002B26  0100               	movlb	0	; () banked
 28593   002B28  C097  FFDE         	movff	?___awdiv,postinc2
 28594   002B2C  C098  FFDD         	movff	?___awdiv+1,postdec2
 28595                           
 28596                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 28597   002B30  0101               	movlb	1	; () banked
 28598   002B32  51C0               	movf	bounceDown@io& (0+255),w,b
 28599   002B34  0D07               	mullw	7
 28600   002B36  50F3               	movf	243,w,c
 28601   002B38  0F13               	addlw	19
 28602   002B3A  EC53  F05F         	call	_getNV
 28603   002B3E  0100               	movlb	0	; () banked
 28604   002B40  518D               	movf	?_getNV& (0+255),w,b
 28605   002B42  6F9F               	movwf	??_bounceDown& (0+255),b
 28606   002B44  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28607   002B46  0101               	movlb	1	; () banked
 28608   002B48  51C0               	movf	bounceDown@io& (0+255),w,b
 28609   002B4A  0D07               	mullw	7
 28610   002B4C  50F3               	movf	243,w,c
 28611   002B4E  0F13               	addlw	19
 28612   002B50  EC53  F05F         	call	_getNV
 28613   002B54  0100               	movlb	0	; () banked
 28614   002B56  518D               	movf	?_getNV& (0+255),w,b
 28615   002B58  279F               	addwf	??_bounceDown& (0+255),f,b
 28616   002B5A  0E00               	movlw	0
 28617   002B5C  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28618   002B5E  0E30               	movlw	low _currentPos
 28619   002B60  0101               	movlb	1	; () banked
 28620   002B62  25C0               	addwf	bounceDown@io& (0+255),w,b
 28621   002B64  6ED9               	movwf	fsr2l,c
 28622   002B66  6ADA               	clrf	fsr2h,c
 28623   002B68  0E01               	movlw	high _currentPos
 28624   002B6A  22DA               	addwfc	fsr2h,f,c
 28625   002B6C  50DF               	movf	indf2,w,c
 28626   002B6E  0100               	movlb	0	; () banked
 28627   002B70  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28628   002B72  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28629   002B74  5F9F               	subwf	??_bounceDown& (0+255),f,b
 28630   002B76  0E00               	movlw	0
 28631   002B78  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 28632   002B7A  0101               	movlb	1	; () banked
 28633   002B7C  51C0               	movf	bounceDown@io& (0+255),w,b
 28634   002B7E  0D02               	mullw	2
 28635   002B80  0E00               	movlw	low _speed
 28636   002B82  24F3               	addwf	243,w,c
 28637   002B84  6ED9               	movwf	fsr2l,c
 28638   002B86  0E02               	movlw	high _speed
 28639   002B88  20F4               	addwfc	prodh,w,c
 28640   002B8A  6EDA               	movwf	fsr2h,c
 28641   002B8C  CFDE F097          	movff	postinc2,___awdiv@dividend
 28642   002B90  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28643   002B94  0E00               	movlw	0
 28644   002B96  0100               	movlb	0	; () banked
 28645   002B98  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28646   002B9A  0E1E               	movlw	30
 28647   002B9C  6F99               	movwf	___awdiv@divisor& (0+255),b
 28648   002B9E  EC1B  F054         	call	___awdiv	;wreg free
 28649   002BA2  0100               	movlb	0	; () banked
 28650   002BA4  5197               	movf	?___awdiv& (0+255),w,b
 28651   002BA6  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28652   002BA8  0101               	movlb	1	; () banked
 28653   002BAA  6FBE               	movwf	bounceDown@tmp& (0+255),b
 28654   002BAC  0100               	movlb	0	; () banked
 28655   002BAE  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28656   002BB0  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 28657   002BB2  0101               	movlb	1	; () banked
 28658   002BB4  6FBF               	movwf	(bounceDown@tmp+1)& (0+255),b
 28659                           
 28660                           ; BSR set to: 1
 28661                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 28662   002BB6  0E30               	movlw	low _currentPos
 28663   002BB8  25C0               	addwf	bounceDown@io& (0+255),w,b
 28664   002BBA  6ED9               	movwf	fsr2l,c
 28665   002BBC  6ADA               	clrf	fsr2h,c
 28666   002BBE  0E01               	movlw	high _currentPos
 28667   002BC0  22DA               	addwfc	fsr2h,f,c
 28668   002BC2  C1BE  FFDF         	movff	bounceDown@tmp,indf2
 28669                           
 28670                           ;../bounce.c: 121:             } else {
 28671   002BC6  D118               	goto	l20956
 28672   002BC8                     l20942:
 28673                           
 28674                           ; BSR set to: 0
 28675                           ;../bounce.c: 124:                 speed[io] += 3;
 28676   002BC8  0101               	movlb	1	; () banked
 28677   002BCA  51C0               	movf	bounceDown@io& (0+255),w,b
 28678   002BCC  0D02               	mullw	2
 28679   002BCE  0E00               	movlw	low _speed
 28680   002BD0  24F3               	addwf	243,w,c
 28681   002BD2  6ED9               	movwf	fsr2l,c
 28682   002BD4  0E02               	movlw	high _speed
 28683   002BD6  20F4               	addwfc	prodh,w,c
 28684   002BD8  6EDA               	movwf	fsr2h,c
 28685   002BDA  0E03               	movlw	3
 28686   002BDC  26DE               	addwf	postinc2,f,c
 28687   002BDE  0E00               	movlw	0
 28688   002BE0  22DD               	addwfc	postdec2,f,c
 28689                           
 28690                           ; BSR set to: 1
 28691                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 28692   002BE2  51C0               	movf	bounceDown@io& (0+255),w,b
 28693   002BE4  0D02               	mullw	2
 28694   002BE6  0E00               	movlw	low _speed
 28695   002BE8  24F3               	addwf	243,w,c
 28696   002BEA  6ED9               	movwf	fsr2l,c
 28697   002BEC  0E02               	movlw	high _speed
 28698   002BEE  20F4               	addwfc	prodh,w,c
 28699   002BF0  6EDA               	movwf	fsr2h,c
 28700   002BF2  CFDE F097          	movff	postinc2,___awdiv@dividend
 28701   002BF6  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28702   002BFA  0E00               	movlw	0
 28703   002BFC  0100               	movlb	0	; () banked
 28704   002BFE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28705   002C00  0E1E               	movlw	30
 28706   002C02  6F99               	movwf	___awdiv@divisor& (0+255),b
 28707   002C04  EC1B  F054         	call	___awdiv	;wreg free
 28708   002C08  0E01               	movlw	1
 28709   002C0A  0100               	movlb	0	; () banked
 28710   002C0C  2797               	addwf	?___awdiv& (0+255),f,b
 28711   002C0E  0E30               	movlw	low _currentPos
 28712   002C10  0101               	movlb	1	; () banked
 28713   002C12  25C0               	addwf	bounceDown@io& (0+255),w,b
 28714   002C14  6ED9               	movwf	fsr2l,c
 28715   002C16  6ADA               	clrf	fsr2h,c
 28716   002C18  0E01               	movlw	high _currentPos
 28717   002C1A  22DA               	addwfc	fsr2h,f,c
 28718   002C1C  0100               	movlb	0	; () banked
 28719   002C1E  5197               	movf	?___awdiv& (0+255),w,b
 28720   002C20  5EDF               	subwf	indf2,f,c
 28721   002C22  D0EA               	goto	l20956
 28722   002C24                     l20946:
 28723                           
 28724                           ; BSR set to: 1
 28725                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 28726   002C24  0E30               	movlw	low _currentPos
 28727   002C26  25C0               	addwf	bounceDown@io& (0+255),w,b
 28728   002C28  6ED9               	movwf	fsr2l,c
 28729   002C2A  6ADA               	clrf	fsr2h,c
 28730   002C2C  0E01               	movlw	high _currentPos
 28731   002C2E  22DA               	addwfc	fsr2h,f,c
 28732   002C30  50DF               	movf	indf2,w,c
 28733   002C32  0100               	movlb	0	; () banked
 28734   002C34  6F9F               	movwf	??_bounceDown& (0+255),b
 28735   002C36  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28736   002C38  0101               	movlb	1	; () banked
 28737   002C3A  51C0               	movf	bounceDown@io& (0+255),w,b
 28738   002C3C  0D07               	mullw	7
 28739   002C3E  50F3               	movf	243,w,c
 28740   002C40  0F13               	addlw	19
 28741   002C42  EC53  F05F         	call	_getNV
 28742   002C46  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 28743   002C4A  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 28744   002C4E  0101               	movlb	1	; () banked
 28745   002C50  51C0               	movf	bounceDown@io& (0+255),w,b
 28746   002C52  0D02               	mullw	2
 28747   002C54  0E00               	movlw	low _speed
 28748   002C56  24F3               	addwf	243,w,c
 28749   002C58  6ED9               	movwf	fsr2l,c
 28750   002C5A  0E02               	movlw	high _speed
 28751   002C5C  20F4               	addwfc	prodh,w,c
 28752   002C5E  6EDA               	movwf	fsr2h,c
 28753   002C60  CFDE F097          	movff	postinc2,___awdiv@dividend
 28754   002C64  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28755   002C68  0E00               	movlw	0
 28756   002C6A  0100               	movlb	0	; () banked
 28757   002C6C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28758   002C6E  0E1E               	movlw	30
 28759   002C70  6F99               	movwf	___awdiv@divisor& (0+255),b
 28760   002C72  EC1B  F054         	call	___awdiv	;wreg free
 28761   002C76  0100               	movlb	0	; () banked
 28762   002C78  5197               	movf	?___awdiv& (0+255),w,b
 28763   002C7A  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28764   002C7C  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28765   002C7E  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28766   002C80  A0D8               	btfss	status,0,c
 28767   002C82  2998               	incf	(?___awdiv+1)& (0+255),w,b
 28768   002C84  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28769   002C86  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 28770   002C88  519F               	movf	??_bounceDown& (0+255),w,b
 28771   002C8A  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28772   002C8C  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28773   002C8E  0A80               	xorlw	128
 28774   002C90  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28775   002C92  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28776   002C94  0A80               	xorlw	128
 28777   002C96  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28778   002C98  B0D8               	btfsc	status,0,c
 28779   002C9A  D081               	goto	l20952
 28780                           
 28781                           ; BSR set to: 0
 28782                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28783   002C9C  0101               	movlb	1	; () banked
 28784   002C9E  51C0               	movf	bounceDown@io& (0+255),w,b
 28785   002CA0  0D07               	mullw	7
 28786   002CA2  50F3               	movf	243,w,c
 28787   002CA4  0F14               	addlw	20
 28788   002CA6  EC53  F05F         	call	_getNV
 28789   002CAA  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28790   002CAE  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28791   002CB2  0101               	movlb	1	; () banked
 28792   002CB4  51C0               	movf	bounceDown@io& (0+255),w,b
 28793   002CB6  0D02               	mullw	2
 28794   002CB8  0E00               	movlw	low _speed
 28795   002CBA  24F3               	addwf	243,w,c
 28796   002CBC  6ED9               	movwf	fsr2l,c
 28797   002CBE  0E02               	movlw	high _speed
 28798   002CC0  20F4               	addwfc	prodh,w,c
 28799   002CC2  6EDA               	movwf	fsr2h,c
 28800   002CC4  CFDE F09F          	movff	postinc2,??_bounceDown
 28801   002CC8  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28802   002CCC  0100               	movlb	0	; () banked
 28803   002CCE  1F9F               	comf	??_bounceDown& (0+255),f,b
 28804   002CD0  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28805   002CD2  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28806   002CD4  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28807   002CD6  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28808   002CDA  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28809   002CDE  EC50  F062         	call	___wmul	;wreg free
 28810   002CE2  C091  F097         	movff	?___wmul,___awdiv@dividend
 28811   002CE6  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28812   002CEA  0E00               	movlw	0
 28813   002CEC  0100               	movlb	0	; () banked
 28814   002CEE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28815   002CF0  0E64               	movlw	100
 28816   002CF2  6F99               	movwf	___awdiv@divisor& (0+255),b
 28817   002CF4  EC1B  F054         	call	___awdiv	;wreg free
 28818   002CF8  0101               	movlb	1	; () banked
 28819   002CFA  51C0               	movf	bounceDown@io& (0+255),w,b
 28820   002CFC  0D02               	mullw	2
 28821   002CFE  0E00               	movlw	low _speed
 28822   002D00  24F3               	addwf	243,w,c
 28823   002D02  6ED9               	movwf	fsr2l,c
 28824   002D04  0E02               	movlw	high _speed
 28825   002D06  20F4               	addwfc	prodh,w,c
 28826   002D08  6EDA               	movwf	fsr2h,c
 28827   002D0A  0100               	movlb	0	; () banked
 28828   002D0C  C097  FFDE         	movff	?___awdiv,postinc2
 28829   002D10  C098  FFDD         	movff	?___awdiv+1,postdec2
 28830                           
 28831                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 28832   002D14  0101               	movlb	1	; () banked
 28833   002D16  51C0               	movf	bounceDown@io& (0+255),w,b
 28834   002D18  0D07               	mullw	7
 28835   002D1A  50F3               	movf	243,w,c
 28836   002D1C  0F13               	addlw	19
 28837   002D1E  EC53  F05F         	call	_getNV
 28838   002D22  0100               	movlb	0	; () banked
 28839   002D24  518D               	movf	?_getNV& (0+255),w,b
 28840   002D26  6F9F               	movwf	??_bounceDown& (0+255),b
 28841   002D28  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28842   002D2A  0101               	movlb	1	; () banked
 28843   002D2C  51C0               	movf	bounceDown@io& (0+255),w,b
 28844   002D2E  0D07               	mullw	7
 28845   002D30  50F3               	movf	243,w,c
 28846   002D32  0F13               	addlw	19
 28847   002D34  EC53  F05F         	call	_getNV
 28848   002D38  0100               	movlb	0	; () banked
 28849   002D3A  518D               	movf	?_getNV& (0+255),w,b
 28850   002D3C  279F               	addwf	??_bounceDown& (0+255),f,b
 28851   002D3E  0E00               	movlw	0
 28852   002D40  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28853   002D42  0101               	movlb	1	; () banked
 28854   002D44  51C0               	movf	bounceDown@io& (0+255),w,b
 28855   002D46  0D02               	mullw	2
 28856   002D48  0E00               	movlw	low _speed
 28857   002D4A  24F3               	addwf	243,w,c
 28858   002D4C  6ED9               	movwf	fsr2l,c
 28859   002D4E  0E02               	movlw	high _speed
 28860   002D50  20F4               	addwfc	prodh,w,c
 28861   002D52  6EDA               	movwf	fsr2h,c
 28862   002D54  CFDE F097          	movff	postinc2,___awdiv@dividend
 28863   002D58  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28864   002D5C  0E00               	movlw	0
 28865   002D5E  0100               	movlb	0	; () banked
 28866   002D60  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28867   002D62  0E1E               	movlw	30
 28868   002D64  6F99               	movwf	___awdiv@divisor& (0+255),b
 28869   002D66  EC1B  F054         	call	___awdiv	;wreg free
 28870   002D6A  0100               	movlb	0	; () banked
 28871   002D6C  5197               	movf	?___awdiv& (0+255),w,b
 28872   002D6E  259F               	addwf	??_bounceDown& (0+255),w,b
 28873   002D70  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28874   002D72  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28875   002D74  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28876   002D76  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28877   002D78  0E30               	movlw	low _currentPos
 28878   002D7A  0101               	movlb	1	; () banked
 28879   002D7C  25C0               	addwf	bounceDown@io& (0+255),w,b
 28880   002D7E  6ED9               	movwf	fsr2l,c
 28881   002D80  6ADA               	clrf	fsr2h,c
 28882   002D82  0E01               	movlw	high _currentPos
 28883   002D84  22DA               	addwfc	fsr2h,f,c
 28884   002D86  50DF               	movf	indf2,w,c
 28885   002D88  0100               	movlb	0	; () banked
 28886   002D8A  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28887   002D8C  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28888   002D8E  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28889   002D90  0101               	movlb	1	; () banked
 28890   002D92  6FBE               	movwf	bounceDown@tmp& (0+255),b
 28891   002D94  0100               	movlb	0	; () banked
 28892   002D96  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28893   002D98  A0D8               	btfss	status,0,c
 28894   002D9A  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 28895   002D9C  D70A               	goto	L8
 28896   002D9E                     l20952:
 28897                           
 28898                           ; BSR set to: 0
 28899                           ;../bounce.c: 142:                 speed[io] += 3;
 28900   002D9E  0101               	movlb	1	; () banked
 28901   002DA0  51C0               	movf	bounceDown@io& (0+255),w,b
 28902   002DA2  0D02               	mullw	2
 28903   002DA4  0E00               	movlw	low _speed
 28904   002DA6  24F3               	addwf	243,w,c
 28905   002DA8  6ED9               	movwf	fsr2l,c
 28906   002DAA  0E02               	movlw	high _speed
 28907   002DAC  20F4               	addwfc	prodh,w,c
 28908   002DAE  6EDA               	movwf	fsr2h,c
 28909   002DB0  0E03               	movlw	3
 28910   002DB2  26DE               	addwf	postinc2,f,c
 28911   002DB4  0E00               	movlw	0
 28912   002DB6  22DD               	addwfc	postdec2,f,c
 28913                           
 28914                           ; BSR set to: 1
 28915                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 28916   002DB8  51C0               	movf	bounceDown@io& (0+255),w,b
 28917   002DBA  0D02               	mullw	2
 28918   002DBC  0E00               	movlw	low _speed
 28919   002DBE  24F3               	addwf	243,w,c
 28920   002DC0  6ED9               	movwf	fsr2l,c
 28921   002DC2  0E02               	movlw	high _speed
 28922   002DC4  20F4               	addwfc	prodh,w,c
 28923   002DC6  6EDA               	movwf	fsr2h,c
 28924   002DC8  CFDE F097          	movff	postinc2,___awdiv@dividend
 28925   002DCC  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28926   002DD0  0E00               	movlw	0
 28927   002DD2  0100               	movlb	0	; () banked
 28928   002DD4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28929   002DD6  0E1E               	movlw	30
 28930   002DD8  6F99               	movwf	___awdiv@divisor& (0+255),b
 28931   002DDA  EC1B  F054         	call	___awdiv	;wreg free
 28932   002DDE  0E01               	movlw	1
 28933   002DE0  0100               	movlb	0	; () banked
 28934   002DE2  2797               	addwf	?___awdiv& (0+255),f,b
 28935   002DE4  0E30               	movlw	low _currentPos
 28936   002DE6  0101               	movlb	1	; () banked
 28937   002DE8  25C0               	addwf	bounceDown@io& (0+255),w,b
 28938   002DEA  6ED9               	movwf	fsr2l,c
 28939   002DEC  6ADA               	clrf	fsr2h,c
 28940   002DEE  0E01               	movlw	high _currentPos
 28941   002DF0  22DA               	addwfc	fsr2h,f,c
 28942   002DF2  0100               	movlb	0	; () banked
 28943   002DF4  5197               	movf	?___awdiv& (0+255),w,b
 28944   002DF6  26DF               	addwf	indf2,f,c
 28945   002DF8                     l20956:
 28946                           
 28947                           ;../bounce.c: 147:         return FALSE;
 28948   002DF8  0E00               	movlw	0
 28949   002DFA  0012               	return	
 28950   002DFC                     l20960:
 28951                           
 28952                           ; BSR set to: 1
 28953                           ;../bounce.c: 149:     return TRUE;
 28954   002DFC  0E01               	movlw	1
 28955   002DFE  0012               	return		;funcret
 28956   002E00                     __end_of_bounceDown:
 28957                           	callstack 0
 28958                           
 28959 ;; *************** function _processOutputs *****************
 28960 ;; Defined at:
 28961 ;;		line 178 in file "../digitalOut.c"
 28962 ;; Parameters:    Size  Location     Type
 28963 ;;		None
 28964 ;; Auto vars:     Size  Location     Type
 28965 ;;  io              1   19[BANK1 ] unsigned char 
 28966 ;; Return value:  Size  Location     Type
 28967 ;;                  1    wreg      void 
 28968 ;; Registers used:
 28969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28970 ;; Tracked objects:
 28971 ;;		On entry : 0/0
 28972 ;;		On exit  : 0/0
 28973 ;;		Unchanged: 0/0
 28974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28976 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28977 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28978 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28979 ;;Total ram usage:        2 bytes
 28980 ;; Hardware stack levels used: 1
 28981 ;; Hardware stack levels required when called: 18
 28982 ;; This function calls:
 28983 ;;		_getNV
 28984 ;;		_sendProducedEvent
 28985 ;;		_setOutputPin
 28986 ;; This function is called by:
 28987 ;;		_loop
 28988 ;; This function uses a non-reentrant model
 28989 ;;
 28990                           
 28991                           	psect	text104
 28992   006BA2                     __ptext104:
 28993                           	callstack 0
 28994   006BA2                     _processOutputs:
 28995                           	callstack 11
 28996                           
 28997                           ;../digitalOut.c: 179:     uint8_t io;;../digitalOut.c: 180:     for (io=0; io<16; io++)
      +                           {
 28998                           
 28999                           ;incstack = 0
 29000   006BA2  0E00               	movlw	0
 29001   006BA4  0101               	movlb	1	; () banked
 29002   006BA6  6FD0               	movwf	processOutputs@io& (0+255),b
 29003   006BA8                     l23094:
 29004                           
 29005                           ; BSR set to: 1
 29006                           ;../digitalOut.c: 181:         if (getNV((16 + 7*(io) + 0)) == 1) {
 29007   006BA8  51D0               	movf	processOutputs@io& (0+255),w,b
 29008   006BAA  0D07               	mullw	7
 29009   006BAC  50F3               	movf	243,w,c
 29010   006BAE  0F10               	addlw	16
 29011   006BB0  EC53  F05F         	call	_getNV
 29012   006BB4  0100               	movlb	0	; () banked
 29013   006BB6  058D               	decf	?_getNV& (0+255),w,b
 29014   006BB8  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29015   006BBA  A4D8               	btfss	status,2,c
 29016   006BBC  D0D5               	goto	l282
 29017                           
 29018                           ; BSR set to: 0
 29019                           ;../digitalOut.c: 183:             if (flashDelays[io] == 1) {
 29020   006BBE  0E20               	movlw	low _flashDelays
 29021   006BC0  0101               	movlb	1	; () banked
 29022   006BC2  25D0               	addwf	processOutputs@io& (0+255),w,b
 29023   006BC4  6ED9               	movwf	fsr2l,c
 29024   006BC6  6ADA               	clrf	fsr2h,c
 29025   006BC8  0E01               	movlw	high _flashDelays
 29026   006BCA  22DA               	addwfc	fsr2h,f,c
 29027   006BCC  04DE               	decf	postinc2,w,c
 29028   006BCE  A4D8               	btfss	status,2,c
 29029   006BD0  D02F               	goto	l23104
 29030                           
 29031                           ; BSR set to: 1
 29032                           ;../digitalOut.c: 184:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 29033   006BD2  51D0               	movf	processOutputs@io& (0+255),w,b
 29034   006BD4  0D07               	mullw	7
 29035   006BD6  50F3               	movf	243,w,c
 29036   006BD8  0F11               	addlw	17
 29037   006BDA  EC53  F05F         	call	_getNV
 29038   006BDE  0100               	movlb	0	; () banked
 29039   006BE0  518D               	movf	?_getNV& (0+255),w,b
 29040   006BE2  0B20               	andlw	32
 29041   006BE4  6F91               	movwf	setOutputPin@state& (0+255),b
 29042   006BE6  0101               	movlb	1	; () banked
 29043   006BE8  51D0               	movf	processOutputs@io& (0+255),w,b
 29044   006BEA  EC9E  F037         	call	_setOutputPin
 29045                           
 29046                           ;../digitalOut.c: 185:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 29047   006BEE  0101               	movlb	1	; () banked
 29048   006BF0  51D0               	movf	processOutputs@io& (0+255),w,b
 29049   006BF2  0D07               	mullw	7
 29050   006BF4  50F3               	movf	243,w,c
 29051   006BF6  0F13               	addlw	19
 29052   006BF8  EC53  F05F         	call	_getNV
 29053   006BFC  0E20               	movlw	low _flashDelays
 29054   006BFE  0101               	movlb	1	; () banked
 29055   006C00  25D0               	addwf	processOutputs@io& (0+255),w,b
 29056   006C02  6ED9               	movwf	fsr2l,c
 29057   006C04  6ADA               	clrf	fsr2h,c
 29058   006C06  0E01               	movlw	high _flashDelays
 29059   006C08  22DA               	addwfc	fsr2h,f,c
 29060   006C0A  0100               	movlb	0	; () banked
 29061   006C0C  C08D  FFDF         	movff	?_getNV,indf2
 29062                           
 29063                           ; BSR set to: 0
 29064                           ;../digitalOut.c: 186:                 flashDelays[io] = - flashDelays[io];
 29065   006C10  0E20               	movlw	low _flashDelays
 29066   006C12  0101               	movlb	1	; () banked
 29067   006C14  25D0               	addwf	processOutputs@io& (0+255),w,b
 29068   006C16  6ED9               	movwf	fsr2l,c
 29069   006C18  6ADA               	clrf	fsr2h,c
 29070   006C1A  0E01               	movlw	high _flashDelays
 29071   006C1C  22DA               	addwfc	fsr2h,f,c
 29072   006C1E  0E20               	movlw	low _flashDelays
 29073   006C20  25D0               	addwf	processOutputs@io& (0+255),w,b
 29074   006C22  6EE1               	movwf	fsr1l,c
 29075   006C24  6AE2               	clrf	fsr1h,c
 29076   006C26  0E01               	movlw	high _flashDelays
 29077   006C28  22E2               	addwfc	fsr1h,f,c
 29078   006C2A  50E7               	movf	indf1,w,c
 29079   006C2C  0800               	sublw	0
 29080   006C2E  6EDF               	movwf	indf2,c
 29081   006C30                     l23104:
 29082                           
 29083                           ; BSR set to: 1
 29084                           ;../digitalOut.c: 188:             if (flashDelays[io] == -1) {
 29085   006C30  0E20               	movlw	low _flashDelays
 29086   006C32  25D0               	addwf	processOutputs@io& (0+255),w,b
 29087   006C34  6ED9               	movwf	fsr2l,c
 29088   006C36  6ADA               	clrf	fsr2h,c
 29089   006C38  0E01               	movlw	high _flashDelays
 29090   006C3A  22DA               	addwfc	fsr2h,f,c
 29091   006C3C  28DE               	incf	postinc2,w,c
 29092   006C3E  A4D8               	btfss	status,2,c
 29093   006C40  D022               	goto	l23110
 29094                           
 29095                           ; BSR set to: 1
 29096                           ;../digitalOut.c: 189:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 29097   006C42  51D0               	movf	processOutputs@io& (0+255),w,b
 29098   006C44  0D07               	mullw	7
 29099   006C46  50F3               	movf	243,w,c
 29100   006C48  0F11               	addlw	17
 29101   006C4A  EC53  F05F         	call	_getNV
 29102   006C4E  0100               	movlb	0	; () banked
 29103   006C50  BB8D               	btfsc	?_getNV& (0+255),5,b
 29104   006C52  D002               	goto	u24690
 29105   006C54  0E01               	movlw	1
 29106   006C56  D001               	goto	u24700
 29107   006C58                     u24690:
 29108   006C58  0E00               	movlw	0
 29109   006C5A                     u24700:
 29110   006C5A  6F91               	movwf	setOutputPin@state& (0+255),b
 29111   006C5C  0101               	movlb	1	; () banked
 29112   006C5E  51D0               	movf	processOutputs@io& (0+255),w,b
 29113   006C60  EC9E  F037         	call	_setOutputPin
 29114                           
 29115                           ;../digitalOut.c: 190:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 29116   006C64  0101               	movlb	1	; () banked
 29117   006C66  51D0               	movf	processOutputs@io& (0+255),w,b
 29118   006C68  0D07               	mullw	7
 29119   006C6A  50F3               	movf	243,w,c
 29120   006C6C  0F13               	addlw	19
 29121   006C6E  EC53  F05F         	call	_getNV
 29122   006C72  0E20               	movlw	low _flashDelays
 29123   006C74  0101               	movlb	1	; () banked
 29124   006C76  25D0               	addwf	processOutputs@io& (0+255),w,b
 29125   006C78  6ED9               	movwf	fsr2l,c
 29126   006C7A  6ADA               	clrf	fsr2h,c
 29127   006C7C  0E01               	movlw	high _flashDelays
 29128   006C7E  22DA               	addwfc	fsr2h,f,c
 29129   006C80  0100               	movlb	0	; () banked
 29130   006C82  C08D  FFDF         	movff	?_getNV,indf2
 29131   006C86                     l23110:
 29132                           
 29133                           ;../digitalOut.c: 192:             if (flashDelays[io] > 1) {
 29134   006C86  0E20               	movlw	low _flashDelays
 29135   006C88  0101               	movlb	1	; () banked
 29136   006C8A  25D0               	addwf	processOutputs@io& (0+255),w,b
 29137   006C8C  6ED9               	movwf	fsr2l,c
 29138   006C8E  6ADA               	clrf	fsr2h,c
 29139   006C90  0E01               	movlw	high _flashDelays
 29140   006C92  22DA               	addwfc	fsr2h,f,c
 29141   006C94  50DF               	movf	indf2,w,c
 29142   006C96  0A80               	xorlw	128
 29143   006C98  0F7E               	addlw	-130
 29144   006C9A  A0D8               	btfss	status,0,c
 29145   006C9C  D008               	goto	l23114
 29146                           
 29147                           ; BSR set to: 1
 29148                           ;../digitalOut.c: 193:                 flashDelays[io]--;
 29149   006C9E  0E20               	movlw	low _flashDelays
 29150   006CA0  25D0               	addwf	processOutputs@io& (0+255),w,b
 29151   006CA2  6ED9               	movwf	fsr2l,c
 29152   006CA4  6ADA               	clrf	fsr2h,c
 29153   006CA6  0E01               	movlw	high _flashDelays
 29154   006CA8  22DA               	addwfc	fsr2h,f,c
 29155   006CAA  06DF               	decf	indf2,f,c
 29156                           
 29157                           ;../digitalOut.c: 194:             } else if (flashDelays[io] < -1) {
 29158   006CAC  D012               	goto	l280
 29159   006CAE                     l23114:
 29160                           
 29161                           ; BSR set to: 1
 29162   006CAE  0E20               	movlw	low _flashDelays
 29163   006CB0  25D0               	addwf	processOutputs@io& (0+255),w,b
 29164   006CB2  6ED9               	movwf	fsr2l,c
 29165   006CB4  6ADA               	clrf	fsr2h,c
 29166   006CB6  0E01               	movlw	high _flashDelays
 29167   006CB8  22DA               	addwfc	fsr2h,f,c
 29168   006CBA  50DF               	movf	indf2,w,c
 29169   006CBC  0A80               	xorlw	128
 29170   006CBE  0F81               	addlw	129
 29171   006CC0  B0D8               	btfsc	status,0,c
 29172   006CC2  D007               	goto	l280
 29173                           
 29174                           ; BSR set to: 1
 29175                           ;../digitalOut.c: 195:                 flashDelays[io]++;
 29176   006CC4  0E20               	movlw	low _flashDelays
 29177   006CC6  25D0               	addwf	processOutputs@io& (0+255),w,b
 29178   006CC8  6ED9               	movwf	fsr2l,c
 29179   006CCA  6ADA               	clrf	fsr2h,c
 29180   006CCC  0E01               	movlw	high _flashDelays
 29181   006CCE  22DA               	addwfc	fsr2h,f,c
 29182   006CD0  2ADF               	incf	indf2,f,c
 29183   006CD2                     l280:
 29184                           
 29185                           ; BSR set to: 1
 29186                           ;../digitalOut.c: 198:             if (pulseDelays[io] != 0) {
 29187   006CD2  0EA4               	movlw	low _pulseDelays
 29188   006CD4  25D0               	addwf	processOutputs@io& (0+255),w,b
 29189   006CD6  6ED9               	movwf	fsr2l,c
 29190   006CD8  6ADA               	clrf	fsr2h,c
 29191   006CDA  0E02               	movlw	high _pulseDelays
 29192   006CDC  22DA               	addwfc	fsr2h,f,c
 29193   006CDE  50DF               	movf	indf2,w,c
 29194   006CE0  B4D8               	btfsc	status,2,c
 29195   006CE2  D042               	goto	l282
 29196                           
 29197                           ; BSR set to: 1
 29198                           ;../digitalOut.c: 199:                 pulseDelays[io]--;
 29199   006CE4  0EA4               	movlw	low _pulseDelays
 29200   006CE6  25D0               	addwf	processOutputs@io& (0+255),w,b
 29201   006CE8  6ED9               	movwf	fsr2l,c
 29202   006CEA  6ADA               	clrf	fsr2h,c
 29203   006CEC  0E02               	movlw	high _pulseDelays
 29204   006CEE  22DA               	addwfc	fsr2h,f,c
 29205   006CF0  06DF               	decf	indf2,f,c
 29206                           
 29207                           ;../digitalOut.c: 202:                 if (pulseDelays[io] == 1) {
 29208   006CF2  0EA4               	movlw	low _pulseDelays
 29209   006CF4  25D0               	addwf	processOutputs@io& (0+255),w,b
 29210   006CF6  6ED9               	movwf	fsr2l,c
 29211   006CF8  6ADA               	clrf	fsr2h,c
 29212   006CFA  0E02               	movlw	high _pulseDelays
 29213   006CFC  22DA               	addwfc	fsr2h,f,c
 29214   006CFE  04DE               	decf	postinc2,w,c
 29215   006D00  A4D8               	btfss	status,2,c
 29216   006D02  D032               	goto	l282
 29217                           
 29218                           ; BSR set to: 1
 29219                           ;../digitalOut.c: 204:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 29220   006D04  51D0               	movf	processOutputs@io& (0+255),w,b
 29221   006D06  0D07               	mullw	7
 29222   006D08  50F3               	movf	243,w,c
 29223   006D0A  0F11               	addlw	17
 29224   006D0C  EC53  F05F         	call	_getNV
 29225   006D10  0100               	movlb	0	; () banked
 29226   006D12  AB8D               	btfss	?_getNV& (0+255),5,b
 29227   006D14  D007               	goto	l23124
 29228                           
 29229                           ; BSR set to: 0
 29230                           ;../digitalOut.c: 205:                         setOutputPin(io, TRUE);
 29231   006D16  0E01               	movlw	1
 29232   006D18  6F91               	movwf	setOutputPin@state& (0+255),b
 29233   006D1A  0101               	movlb	1	; () banked
 29234   006D1C  51D0               	movf	processOutputs@io& (0+255),w,b
 29235   006D1E  EC9E  F037         	call	_setOutputPin
 29236                           
 29237                           ;../digitalOut.c: 206:                     } else {
 29238   006D22  D006               	goto	l23126
 29239   006D24                     l23124:
 29240                           
 29241                           ; BSR set to: 0
 29242                           ;../digitalOut.c: 207:                         setOutputPin(io, FALSE);
 29243   006D24  0E00               	movlw	0
 29244   006D26  6F91               	movwf	setOutputPin@state& (0+255),b
 29245   006D28  0101               	movlb	1	; () banked
 29246   006D2A  51D0               	movf	processOutputs@io& (0+255),w,b
 29247   006D2C  EC9E  F037         	call	_setOutputPin
 29248   006D30                     l23126:
 29249                           
 29250                           ;../digitalOut.c: 210:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 29251   006D30  0101               	movlb	1	; () banked
 29252   006D32  51D0               	movf	processOutputs@io& (0+255),w,b
 29253   006D34  0D07               	mullw	7
 29254   006D36  50F3               	movf	243,w,c
 29255   006D38  0F11               	addlw	17
 29256   006D3A  EC53  F05F         	call	_getNV
 29257   006D3E  0100               	movlb	0	; () banked
 29258   006D40  B78D               	btfsc	?_getNV& (0+255),3,b
 29259   006D42  D012               	goto	l282
 29260                           
 29261                           ; BSR set to: 0
 29262                           ;../digitalOut.c: 212:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 29263   006D44  0101               	movlb	1	; () banked
 29264   006D46  51D0               	movf	processOutputs@io& (0+255),w,b
 29265   006D48  0D07               	mullw	7
 29266   006D4A  50F3               	movf	243,w,c
 29267   006D4C  0F11               	addlw	17
 29268   006D4E  EC53  F05F         	call	_getNV
 29269   006D52  0100               	movlb	0	; () banked
 29270   006D54  518D               	movf	?_getNV& (0+255),w,b
 29271   006D56  0B40               	andlw	64
 29272   006D58  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 29273   006D5A  0101               	movlb	1	; () banked
 29274   006D5C  51D0               	movf	processOutputs@io& (0+255),w,b
 29275   006D5E  0D04               	mullw	4
 29276   006D60  50F3               	movf	243,w,c
 29277   006D62  0F08               	addlw	8
 29278   006D64  ECCC  F04B         	call	_sendProducedEvent
 29279   006D68                     l282:
 29280                           
 29281                           ;../digitalOut.c: 217:     }
 29282                           
 29283                           ; BSR set to: 0
 29284   006D68  0101               	movlb	1	; () banked
 29285   006D6A  2BD0               	incf	processOutputs@io& (0+255),f,b
 29286                           
 29287                           ; BSR set to: 1
 29288   006D6C  0E0F               	movlw	15
 29289   006D6E  65D0               	cpfsgt	processOutputs@io& (0+255),b
 29290   006D70  D71B               	goto	l23094
 29291   006D72  0012               	return	
 29292   006D74                     __end_of_processOutputs:
 29293                           	callstack 0
 29294                           
 29295 ;; *************** function _processActions *****************
 29296 ;; Defined at:
 29297 ;;		line 233 in file "../universalEvents.c"
 29298 ;; Parameters:    Size  Location     Type
 29299 ;;		None
 29300 ;; Auto vars:     Size  Location     Type
 29301 ;;  nextAction      1   43[BANK1 ] unsigned char 
 29302 ;;  nextIo          1   40[BANK1 ] unsigned char 
 29303 ;;  nextType        1   39[BANK1 ] unsigned char 
 29304 ;;  action          1   45[BANK1 ] unsigned char 
 29305 ;;  io              1   44[BANK1 ] unsigned char 
 29306 ;;  ioAction        1   42[BANK1 ] unsigned char 
 29307 ;;  type            1   41[BANK1 ] unsigned char 
 29308 ;;  peekItem        1   38[BANK1 ] unsigned char 
 29309 ;;  simultaneous    1   37[BANK1 ] unsigned char 
 29310 ;; Return value:  Size  Location     Type
 29311 ;;                  1    wreg      void 
 29312 ;; Registers used:
 29313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29314 ;; Tracked objects:
 29315 ;;		On entry : 0/0
 29316 ;;		On exit  : 0/0
 29317 ;;		Unchanged: 0/0
 29318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29320 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29322 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29323 ;;Total ram usage:        9 bytes
 29324 ;; Hardware stack levels used: 1
 29325 ;; Hardware stack levels required when called: 21
 29326 ;; This function calls:
 29327 ;;		___awdiv
 29328 ;;		___awmod
 29329 ;;		_completed
 29330 ;;		_deleteTwoActionQueue
 29331 ;;		_doSOD
 29332 ;;		_doWait
 29333 ;;		_doneTwoAction
 29334 ;;		_finaliseOutput
 29335 ;;		_getNV
 29336 ;;		_getTwoAction
 29337 ;;		_needsStarting
 29338 ;;		_peekTwoActionQueue
 29339 ;;		_setOutputState
 29340 ;;		_startOutput
 29341 ;; This function is called by:
 29342 ;;		_loop
 29343 ;; This function uses a non-reentrant model
 29344 ;;
 29345                           
 29346                           	psect	text105
 29347   006392                     __ptext105:
 29348                           	callstack 0
 29349   006392                     _processActions:
 29350                           	callstack 8
 29351                           
 29352                           ;../universalEvents.c: 242:         action = getTwoAction();
 29353                           
 29354                           ; BSR set to: 1
 29355                           ;incstack = 0
 29356                           ;../universalEvents.c: 234:     uint8_t io;;../universalEvents.c: 235:     uint8_t type;
      +                          ;../universalEvents.c: 236:     uint8_t action;;../universalEvents.c: 237:     uint8_t i
      +                          oAction;;../universalEvents.c: 238:     uint8_t simultaneous;;../universalEvents.c: 239:
      +                               uint8_t peekItem;;../universalEvents.c: 241:     while (1) {
 29357   006392  EC10  F064         	call	_getTwoAction	;wreg free
 29358   006396  0101               	movlb	1	; () banked
 29359   006398  6FEA               	movwf	processActions@action& (0+255),b
 29360                           
 29361                           ; BSR set to: 1
 29362                           ;../universalEvents.c: 244:         if (action == 0) {
 29363   00639A  51EA               	movf	processActions@action& (0+255),w,b
 29364   00639C  A4D8               	btfss	status,2,c
 29365   00639E  D003               	goto	l22996
 29366   0063A0                     u24510:
 29367                           
 29368                           ;../universalEvents.c: 245:             doneTwoAction();
 29369   0063A0  EC21  F064         	call	_doneTwoAction	;wreg free
 29370   0063A4  0012               	return	
 29371   0063A6                     l22996:
 29372                           
 29373                           ; BSR set to: 1
 29374                           ;../universalEvents.c: 249:         if (action == 1) {
 29375   0063A6  05EA               	decf	processActions@action& (0+255),w,b
 29376   0063A8  A4D8               	btfss	status,2,c
 29377   0063AA  D003               	goto	l23004
 29378                           
 29379                           ; BSR set to: 1
 29380                           ;../universalEvents.c: 251:             doSOD();
 29381   0063AC  EC8A  F063         	call	_doSOD	;wreg free
 29382   0063B0  D7F7               	goto	u24510
 29383   0063B2                     l23004:
 29384                           
 29385                           ; BSR set to: 1
 29386                           ;../universalEvents.c: 255:         if (action == 2) {
 29387   0063B2  0E02               	movlw	2
 29388   0063B4  19EA               	xorwf	processActions@action& (0+255),w,b
 29389   0063B6  A4D8               	btfss	status,2,c
 29390   0063B8  D008               	goto	l23010
 29391                           
 29392                           ; BSR set to: 1
 29393                           ;../universalEvents.c: 256:             doWait(5);
 29394   0063BA  0E00               	movlw	0
 29395   0063BC  0100               	movlb	0	; () banked
 29396   0063BE  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29397   0063C0  0E05               	movlw	5
 29398   0063C2  6F9D               	movwf	doWait@duration& (0+255),b
 29399   0063C4  EC73  F04F         	call	_doWait	;wreg free
 29400   0063C8  0012               	return	
 29401   0063CA                     l23010:
 29402                           
 29403                           ; BSR set to: 1
 29404                           ;../universalEvents.c: 259:         if (action == 3) {
 29405   0063CA  0E03               	movlw	3
 29406   0063CC  19EA               	xorwf	processActions@action& (0+255),w,b
 29407   0063CE  A4D8               	btfss	status,2,c
 29408   0063D0  D008               	goto	l23016
 29409                           
 29410                           ; BSR set to: 1
 29411                           ;../universalEvents.c: 260:             doWait(10);
 29412   0063D2  0E00               	movlw	0
 29413   0063D4  0100               	movlb	0	; () banked
 29414   0063D6  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29415   0063D8  0E0A               	movlw	10
 29416   0063DA  6F9D               	movwf	doWait@duration& (0+255),b
 29417   0063DC  EC73  F04F         	call	_doWait	;wreg free
 29418   0063E0  0012               	return	
 29419   0063E2                     l23016:
 29420                           
 29421                           ; BSR set to: 1
 29422                           ;../universalEvents.c: 263:         if (action == 4) {
 29423   0063E2  0E04               	movlw	4
 29424   0063E4  19EA               	xorwf	processActions@action& (0+255),w,b
 29425   0063E6  A4D8               	btfss	status,2,c
 29426   0063E8  D008               	goto	l23022
 29427                           
 29428                           ; BSR set to: 1
 29429                           ;../universalEvents.c: 264:             doWait(20);
 29430   0063EA  0E00               	movlw	0
 29431   0063EC  0100               	movlb	0	; () banked
 29432   0063EE  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29433   0063F0  0E14               	movlw	20
 29434   0063F2  6F9D               	movwf	doWait@duration& (0+255),b
 29435   0063F4  EC73  F04F         	call	_doWait	;wreg free
 29436   0063F8  0012               	return	
 29437   0063FA                     l23022:
 29438                           
 29439                           ; BSR set to: 1
 29440                           ;../universalEvents.c: 267:         if (action == 5) {
 29441   0063FA  0E05               	movlw	5
 29442   0063FC  19EA               	xorwf	processActions@action& (0+255),w,b
 29443   0063FE  A4D8               	btfss	status,2,c
 29444   006400  D008               	goto	l23028
 29445                           
 29446                           ; BSR set to: 1
 29447                           ;../universalEvents.c: 268:             doWait(50);
 29448   006402  0E00               	movlw	0
 29449   006404  0100               	movlb	0	; () banked
 29450   006406  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29451   006408  0E32               	movlw	50
 29452   00640A  6F9D               	movwf	doWait@duration& (0+255),b
 29453   00640C  EC73  F04F         	call	_doWait	;wreg free
 29454   006410  0012               	return	
 29455   006412                     l23028:
 29456                           
 29457                           ; BSR set to: 1
 29458                           ;../universalEvents.c: 271:         simultaneous = action & 0x80;
 29459   006412  51EA               	movf	processActions@action& (0+255),w,b
 29460   006414  0B80               	andlw	128
 29461   006416  6FE2               	movwf	processActions@simultaneous& (0+255),b
 29462                           
 29463                           ;../universalEvents.c: 272:         ioAction = action&0x7F;
 29464   006418  51EA               	movf	processActions@action& (0+255),w,b
 29465   00641A  0B7F               	andlw	127
 29466   00641C  6FE7               	movwf	processActions@ioAction& (0+255),b
 29467                           
 29468                           ;../universalEvents.c: 273:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 29469   00641E  0E07               	movlw	7
 29470   006420  65E7               	cpfsgt	processActions@ioAction& (0+255),b
 29471   006422  D0D0               	goto	l23086
 29472                           
 29473                           ; BSR set to: 1
 29474   006424  0E58               	movlw	88
 29475   006426  61E7               	cpfslt	processActions@ioAction& (0+255),b
 29476   006428  D0CD               	goto	l23086
 29477                           
 29478                           ; BSR set to: 1
 29479                           ;../universalEvents.c: 276:             io = (((ioAction)-8)/5);
 29480   00642A  0EF8               	movlw	248
 29481   00642C  25E7               	addwf	processActions@ioAction& (0+255),w,b
 29482   00642E  0100               	movlb	0	; () banked
 29483   006430  6F97               	movwf	___awdiv@dividend& (0+255),b
 29484   006432  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29485   006434  0EFF               	movlw	255
 29486   006436  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29487   006438  0E00               	movlw	0
 29488   00643A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29489   00643C  0E05               	movlw	5
 29490   00643E  6F99               	movwf	___awdiv@divisor& (0+255),b
 29491   006440  EC1B  F054         	call	___awdiv	;wreg free
 29492   006444  0100               	movlb	0	; () banked
 29493   006446  5197               	movf	?___awdiv& (0+255),w,b
 29494   006448  0101               	movlb	1	; () banked
 29495   00644A  6FE9               	movwf	processActions@io& (0+255),b
 29496                           
 29497                           ;../universalEvents.c: 277:             ioAction = (((ioAction)-8)%5);
 29498   00644C  0EF8               	movlw	248
 29499   00644E  25E7               	addwf	processActions@ioAction& (0+255),w,b
 29500   006450  0100               	movlb	0	; () banked
 29501   006452  6F8D               	movwf	___awmod@dividend& (0+255),b
 29502   006454  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29503   006456  0EFF               	movlw	255
 29504   006458  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29505   00645A  0E00               	movlw	0
 29506   00645C  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29507   00645E  0E05               	movlw	5
 29508   006460  6F8F               	movwf	___awmod@divisor& (0+255),b
 29509   006462  EC30  F058         	call	___awmod	;wreg free
 29510   006466  0100               	movlb	0	; () banked
 29511   006468  518D               	movf	?___awmod& (0+255),w,b
 29512   00646A  0101               	movlb	1	; () banked
 29513   00646C  6FE7               	movwf	processActions@ioAction& (0+255),b
 29514                           
 29515                           ; BSR set to: 1
 29516                           ;../universalEvents.c: 278:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 29517   00646E  51E9               	movf	processActions@io& (0+255),w,b
 29518   006470  0D07               	mullw	7
 29519   006472  50F3               	movf	243,w,c
 29520   006474  0F10               	addlw	16
 29521   006476  EC53  F05F         	call	_getNV
 29522   00647A  0100               	movlb	0	; () banked
 29523   00647C  518D               	movf	?_getNV& (0+255),w,b
 29524   00647E  0101               	movlb	1	; () banked
 29525   006480  6FE6               	movwf	processActions@type& (0+255),b
 29526                           
 29527                           ; BSR set to: 1
 29528                           ;../universalEvents.c: 280:             setOutputState(io, ioAction, type);
 29529   006482  C1E7  F093         	movff	processActions@ioAction,setOutputState@act
 29530   006486  C1E6  F094         	movff	processActions@type,setOutputState@type
 29531   00648A  51E9               	movf	processActions@io& (0+255),w,b
 29532   00648C  EC69  F05C         	call	_setOutputState
 29533                           
 29534                           ;../universalEvents.c: 281:             if (needsStarting(io, ioAction, type)) {
 29535   006490  C1E7  F08D         	movff	processActions@ioAction,needsStarting@act
 29536   006494  C1E6  F08E         	movff	processActions@type,needsStarting@type
 29537   006498  0101               	movlb	1	; () banked
 29538   00649A  51E9               	movf	processActions@io& (0+255),w,b
 29539   00649C  ECE3  F054         	call	_needsStarting
 29540   0064A0  0900               	iorlw	0
 29541   0064A2  B4D8               	btfsc	status,2,c
 29542   0064A4  D008               	goto	l23042
 29543                           
 29544                           ;../universalEvents.c: 282:                 startOutput(io, ioAction, type);
 29545   0064A6  C1E7  F1DF         	movff	processActions@ioAction,startOutput@act
 29546   0064AA  C1E6  F1E0         	movff	processActions@type,startOutput@type
 29547   0064AE  0101               	movlb	1	; () banked
 29548   0064B0  51E9               	movf	processActions@io& (0+255),w,b
 29549   0064B2  EC5F  F05B         	call	_startOutput
 29550   0064B6                     l23042:
 29551                           
 29552                           ;../universalEvents.c: 285:             peekItem = 1;
 29553   0064B6  0E01               	movlw	1
 29554   0064B8  0101               	movlb	1	; () banked
 29555   0064BA  6FE3               	movwf	processActions@peekItem& (0+255),b
 29556                           
 29557                           ;../universalEvents.c: 286:             while (simultaneous) {
 29558   0064BC  D06D               	goto	l23078
 29559   0064BE                     l23044:
 29560                           
 29561                           ; BSR set to: 1
 29562                           ;../universalEvents.c: 287:                 uint8_t nextAction;;../universalEvents.c: 28
      +                          8:                 uint8_t nextIo;;../universalEvents.c: 289:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 291:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 29563   0064BE  51E3               	movf	processActions@peekItem& (0+255),w,b
 29564   0064C0  ECD6  F053         	call	_peekTwoActionQueue
 29565   0064C4  0101               	movlb	1	; () banked
 29566   0064C6  6FE8               	movwf	processActions@nextAction& (0+255),b
 29567                           
 29568                           ; BSR set to: 1
 29569                           ;../universalEvents.c: 293:                 if (nextAction == 0) break;
 29570   0064C8  51E8               	movf	processActions@nextAction& (0+255),w,b
 29571   0064CA  B4D8               	btfsc	status,2,c
 29572   0064CC  D068               	goto	u24640
 29573                           
 29574                           ; BSR set to: 1
 29575                           ;../universalEvents.c: 294:                 simultaneous = nextAction & 0x80;
 29576   0064CE  51E8               	movf	processActions@nextAction& (0+255),w,b
 29577   0064D0  0B80               	andlw	128
 29578   0064D2  6FE2               	movwf	processActions@simultaneous& (0+255),b
 29579                           
 29580                           ; BSR set to: 1
 29581                           ;../universalEvents.c: 295:                 nextAction &= 0x7F;
 29582   0064D4  9FE8               	bcf	processActions@nextAction& (0+255),7,b
 29583                           
 29584                           ; BSR set to: 1
 29585                           ;../universalEvents.c: 296:                 nextIo = (((nextAction)-8)/5);
 29586   0064D6  0EF8               	movlw	248
 29587   0064D8  25E8               	addwf	processActions@nextAction& (0+255),w,b
 29588   0064DA  0100               	movlb	0	; () banked
 29589   0064DC  6F97               	movwf	___awdiv@dividend& (0+255),b
 29590   0064DE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29591   0064E0  0EFF               	movlw	255
 29592   0064E2  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29593   0064E4  0E00               	movlw	0
 29594   0064E6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29595   0064E8  0E05               	movlw	5
 29596   0064EA  6F99               	movwf	___awdiv@divisor& (0+255),b
 29597   0064EC  EC1B  F054         	call	___awdiv	;wreg free
 29598   0064F0  0100               	movlb	0	; () banked
 29599   0064F2  5197               	movf	?___awdiv& (0+255),w,b
 29600   0064F4  0101               	movlb	1	; () banked
 29601   0064F6  6FE5               	movwf	processActions@nextIo& (0+255),b
 29602                           
 29603                           ; BSR set to: 1
 29604                           ;../universalEvents.c: 297:                 if (nextIo == io) {
 29605   0064F8  51E9               	movf	processActions@io& (0+255),w,b
 29606   0064FA  19E5               	xorwf	processActions@nextIo& (0+255),w,b
 29607   0064FC  B4D8               	btfsc	status,2,c
 29608   0064FE  D04F               	goto	u24640
 29609                           
 29610                           ; BSR set to: 1
 29611                           ;../universalEvents.c: 303:                 nextAction = (((nextAction)-8)%5);
 29612   006500  0EF8               	movlw	248
 29613   006502  25E8               	addwf	processActions@nextAction& (0+255),w,b
 29614   006504  0100               	movlb	0	; () banked
 29615   006506  6F8D               	movwf	___awmod@dividend& (0+255),b
 29616   006508  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29617   00650A  0EFF               	movlw	255
 29618   00650C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29619   00650E  0E00               	movlw	0
 29620   006510  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29621   006512  0E05               	movlw	5
 29622   006514  6F8F               	movwf	___awmod@divisor& (0+255),b
 29623   006516  EC30  F058         	call	___awmod	;wreg free
 29624   00651A  0100               	movlb	0	; () banked
 29625   00651C  518D               	movf	?___awmod& (0+255),w,b
 29626   00651E  0101               	movlb	1	; () banked
 29627   006520  6FE8               	movwf	processActions@nextAction& (0+255),b
 29628                           
 29629                           ; BSR set to: 1
 29630                           ;../universalEvents.c: 304:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 29631   006522  51E9               	movf	processActions@io& (0+255),w,b
 29632   006524  0D07               	mullw	7
 29633   006526  50F3               	movf	243,w,c
 29634   006528  0F10               	addlw	16
 29635   00652A  EC53  F05F         	call	_getNV
 29636   00652E  0100               	movlb	0	; () banked
 29637   006530  518D               	movf	?_getNV& (0+255),w,b
 29638   006532  0101               	movlb	1	; () banked
 29639   006534  6FE4               	movwf	processActions@nextType& (0+255),b
 29640                           
 29641                           ; BSR set to: 1
 29642                           ;../universalEvents.c: 305:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 29643   006536  C1E8  F093         	movff	processActions@nextAction,setOutputState@act
 29644   00653A  C1E4  F094         	movff	processActions@nextType,setOutputState@type
 29645   00653E  51E5               	movf	processActions@nextIo& (0+255),w,b
 29646   006540  EC69  F05C         	call	_setOutputState
 29647                           
 29648                           ;../universalEvents.c: 306:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 29649   006544  C1E8  F08D         	movff	processActions@nextAction,needsStarting@act
 29650   006548  C1E4  F08E         	movff	processActions@nextType,needsStarting@type
 29651   00654C  0101               	movlb	1	; () banked
 29652   00654E  51E5               	movf	processActions@nextIo& (0+255),w,b
 29653   006550  ECE3  F054         	call	_needsStarting
 29654   006554  0900               	iorlw	0
 29655   006556  B4D8               	btfsc	status,2,c
 29656   006558  D008               	goto	l23070
 29657                           
 29658                           ;../universalEvents.c: 307:                     startOutput(nextIo, nextAction, nextType
      +                          );
 29659   00655A  C1E8  F1DF         	movff	processActions@nextAction,startOutput@act
 29660   00655E  C1E4  F1E0         	movff	processActions@nextType,startOutput@type
 29661   006562  0101               	movlb	1	; () banked
 29662   006564  51E5               	movf	processActions@nextIo& (0+255),w,b
 29663   006566  EC5F  F05B         	call	_startOutput
 29664   00656A                     l23070:
 29665                           
 29666                           ;../universalEvents.c: 309:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 29667   00656A  C1E8  F08D         	movff	processActions@nextAction,completed@action
 29668   00656E  C1E4  F08E         	movff	processActions@nextType,completed@type
 29669   006572  0101               	movlb	1	; () banked
 29670   006574  51E5               	movf	processActions@nextIo& (0+255),w,b
 29671   006576  EC6D  F052         	call	_completed
 29672   00657A  0900               	iorlw	0
 29673   00657C  B4D8               	btfsc	status,2,c
 29674   00657E  D00A               	goto	l23076
 29675                           
 29676                           ;../universalEvents.c: 310:                     deleteTwoActionQueue(peekItem);
 29677   006580  0101               	movlb	1	; () banked
 29678   006582  51E3               	movf	processActions@peekItem& (0+255),w,b
 29679   006584  EC63  F055         	call	_deleteTwoActionQueue
 29680                           
 29681                           ;../universalEvents.c: 311:                     finaliseOutput(io, type);
 29682   006588  C1E6  F08D         	movff	processActions@type,finaliseOutput@type
 29683   00658C  0101               	movlb	1	; () banked
 29684   00658E  51E9               	movf	processActions@io& (0+255),w,b
 29685   006590  EC14  F064         	call	_finaliseOutput
 29686   006594                     l23076:
 29687                           
 29688                           ;../universalEvents.c: 313:                 peekItem++;
 29689   006594  0101               	movlb	1	; () banked
 29690   006596  2BE3               	incf	processActions@peekItem& (0+255),f,b
 29691   006598                     l23078:
 29692                           
 29693                           ; BSR set to: 1
 29694                           ;../universalEvents.c: 286:             while (simultaneous) {
 29695   006598  51E2               	movf	processActions@simultaneous& (0+255),w,b
 29696   00659A  A4D8               	btfss	status,2,c
 29697   00659C  D790               	goto	l23044
 29698   00659E                     u24640:
 29699                           
 29700                           ; BSR set to: 1
 29701                           ;../universalEvents.c: 316:             if (completed(io, action, type)) {
 29702   00659E  C1EA  F08D         	movff	processActions@action,completed@action
 29703   0065A2  C1E6  F08E         	movff	processActions@type,completed@type
 29704   0065A6  51E9               	movf	processActions@io& (0+255),w,b
 29705   0065A8  EC6D  F052         	call	_completed
 29706   0065AC  0900               	iorlw	0
 29707   0065AE  B4D8               	btfsc	status,2,c
 29708   0065B0  0012               	return	
 29709                           
 29710                           ;../universalEvents.c: 317:                 doneTwoAction();
 29711   0065B2  EC21  F064         	call	_doneTwoAction	;wreg free
 29712                           
 29713                           ;../universalEvents.c: 318:                 finaliseOutput(io, type);
 29714   0065B6  C1E6  F08D         	movff	processActions@type,finaliseOutput@type
 29715   0065BA  0101               	movlb	1	; () banked
 29716   0065BC  51E9               	movf	processActions@io& (0+255),w,b
 29717   0065BE  EC14  F064         	call	_finaliseOutput
 29718                           
 29719                           ;../universalEvents.c: 319:             } else {
 29720   0065C2  D6E7               	goto	__ptext105
 29721   0065C4                     l23086:
 29722                           
 29723                           ; BSR set to: 1
 29724                           ;../universalEvents.c: 327:             doneTwoAction();
 29725   0065C4  EC21  F064         	call	_doneTwoAction	;wreg free
 29726   0065C8  D6E4               	goto	__ptext105
 29727   0065CA                     __end_of_processActions:
 29728                           	callstack 0
 29729                           
 29730 ;; *************** function _startOutput *****************
 29731 ;; Defined at:
 29732 ;;		line 72 in file "../outputs.c"
 29733 ;; Parameters:    Size  Location     Type
 29734 ;;  io              1    wreg     unsigned char 
 29735 ;;  act             1   34[BANK1 ] unsigned char 
 29736 ;;  type            1   35[BANK1 ] unsigned char 
 29737 ;; Auto vars:     Size  Location     Type
 29738 ;;  io              1   36[BANK1 ] unsigned char 
 29739 ;; Return value:  Size  Location     Type
 29740 ;;                  1    wreg      void 
 29741 ;; Registers used:
 29742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29743 ;; Tracked objects:
 29744 ;;		On entry : 0/0
 29745 ;;		On exit  : 0/0
 29746 ;;		Unchanged: 0/0
 29747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29748 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29749 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29751 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29752 ;;Total ram usage:        3 bytes
 29753 ;; Hardware stack levels used: 1
 29754 ;; Hardware stack levels required when called: 20
 29755 ;; This function calls:
 29756 ;;		_startBounceOutput
 29757 ;;		_startDigitalOutput
 29758 ;;		_startMultiOutput
 29759 ;;		_startServoOutput
 29760 ;; This function is called by:
 29761 ;;		_processActions
 29762 ;; This function uses a non-reentrant model
 29763 ;;
 29764                           
 29765                           	psect	text106
 29766   00B6BE                     __ptext106:
 29767                           	callstack 0
 29768   00B6BE                     _startOutput:
 29769                           	callstack 8
 29770                           
 29771                           ;incstack = 0
 29772                           ;startOutput@io stored from wreg
 29773   00B6BE  0101               	movlb	1	; () banked
 29774   00B6C0  6FE1               	movwf	startOutput@io& (0+255),b
 29775                           
 29776                           ;../outputs.c: 73:     switch(type) {
 29777   00B6C2  D018               	goto	l21612
 29778   00B6C4                     l21594:
 29779                           
 29780                           ; BSR set to: 1
 29781                           ;../outputs.c: 78:             startDigitalOutput(io, act);
 29782   00B6C4  C1DF  F1D7         	movff	startOutput@act,startDigitalOutput@state
 29783   00B6C8  51E1               	movf	startOutput@io& (0+255),w,b
 29784   00B6CA  EC69  F02B         	call	_startDigitalOutput
 29785   00B6CE  0012               	return	
 29786   00B6D0                     l21598:
 29787                           
 29788                           ; BSR set to: 1
 29789                           ;../outputs.c: 82:             startBounceOutput(io, act);
 29790   00B6D0  C1DF  F08D         	movff	startOutput@act,startBounceOutput@action
 29791   00B6D4  51E1               	movf	startOutput@io& (0+255),w,b
 29792   00B6D6  ECA8  F059         	call	_startBounceOutput
 29793   00B6DA  0012               	return	
 29794   00B6DC                     l21602:
 29795                           
 29796                           ; BSR set to: 1
 29797                           ;../outputs.c: 87:             startServoOutput(io, act);
 29798   00B6DC  C1DF  F091         	movff	startOutput@act,startServoOutput@action
 29799   00B6E0  51E1               	movf	startOutput@io& (0+255),w,b
 29800   00B6E2  EC4E  F04A         	call	_startServoOutput
 29801   00B6E6  0012               	return	
 29802   00B6E8                     l21606:
 29803                           
 29804                           ; BSR set to: 1
 29805                           ;../outputs.c: 92:             startMultiOutput(io, act);
 29806   00B6E8  C1DF  F091         	movff	startOutput@act,startMultiOutput@action
 29807   00B6EC  51E1               	movf	startOutput@io& (0+255),w,b
 29808   00B6EE  ECC2  F04F         	call	_startMultiOutput
 29809   00B6F2  0012               	return	
 29810   00B6F4                     l21612:
 29811   00B6F4  0101               	movlb	1	; () banked
 29812   00B6F6  51E0               	movf	startOutput@type& (0+255),w,b
 29813                           
 29814                           ; Switch size 1, requested type "simple"
 29815                           ; Number of cases is 5, Range of values is 0 to 4
 29816                           ; switch strategies available:
 29817                           ; Name         Instructions Cycles
 29818                           ; simple_byte           16     9 (average)
 29819                           ;	Chosen strategy is simple_byte
 29820   00B6F8  0A00               	xorlw	0	; case 0
 29821   00B6FA  B4D8               	btfsc	status,2,c
 29822   00B6FC  0012               	return	
 29823   00B6FE  0A01               	xorlw	1	; case 1
 29824   00B700  B4D8               	btfsc	status,2,c
 29825   00B702  D7E0               	goto	l21594
 29826   00B704  0A03               	xorlw	3	; case 2
 29827   00B706  B4D8               	btfsc	status,2,c
 29828   00B708  D7E9               	goto	l21602
 29829   00B70A  0A01               	xorlw	1	; case 3
 29830   00B70C  B4D8               	btfsc	status,2,c
 29831   00B70E  D7E0               	goto	l21598
 29832   00B710  0A07               	xorlw	7	; case 4
 29833   00B712  A4D8               	btfss	status,2,c
 29834   00B714  0012               	return	
 29835   00B716  D7E8               	goto	l21606
 29836   00B718                     __end_of_startOutput:
 29837                           	callstack 0
 29838                           
 29839 ;; *************** function _startServoOutput *****************
 29840 ;; Defined at:
 29841 ;;		line 549 in file "../servo.c"
 29842 ;; Parameters:    Size  Location     Type
 29843 ;;  io              1    wreg     unsigned char 
 29844 ;;  action          1   49[BANK0 ] unsigned char 
 29845 ;; Auto vars:     Size  Location     Type
 29846 ;;  io              1   51[BANK0 ] unsigned char 
 29847 ;; Return value:  Size  Location     Type
 29848 ;;                  1    wreg      void 
 29849 ;; Registers used:
 29850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29851 ;; Tracked objects:
 29852 ;;		On entry : 0/0
 29853 ;;		On exit  : 0/0
 29854 ;;		Unchanged: 0/0
 29855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29856 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29859 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29860 ;;Total ram usage:        3 bytes
 29861 ;; Hardware stack levels used: 1
 29862 ;; Hardware stack levels required when called: 13
 29863 ;; This function calls:
 29864 ;;		_getNV
 29865 ;; This function is called by:
 29866 ;;		_APP_nvValueChanged
 29867 ;;		_startOutput
 29868 ;; This function uses a non-reentrant model
 29869 ;;
 29870                           
 29871                           	psect	text107
 29872   00949C                     __ptext107:
 29873                           	callstack 0
 29874   00949C                     _startServoOutput:
 29875                           	callstack 13
 29876                           
 29877                           ;incstack = 0
 29878                           ;startServoOutput@io stored from wreg
 29879   00949C  0100               	movlb	0	; () banked
 29880   00949E  6F93               	movwf	startServoOutput@io& (0+255),b
 29881                           
 29882                           ;../servo.c: 550:     switch (action) {
 29883   0094A0  D017               	goto	l20190
 29884   0094A2                     l20184:
 29885                           
 29886                           ; BSR set to: 0
 29887                           ;../servo.c: 552:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29888   0094A2  5193               	movf	startServoOutput@io& (0+255),w,b
 29889   0094A4  0D07               	mullw	7
 29890   0094A6  50F3               	movf	243,w,c
 29891   0094A8  0F15               	addlw	21
 29892   0094AA  EC53  F05F         	call	_getNV
 29893   0094AE  D006               	goto	L9
 29894   0094B0                     l20186:
 29895                           
 29896                           ; BSR set to: 0
 29897                           ;../servo.c: 555:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 29898   0094B0  5193               	movf	startServoOutput@io& (0+255),w,b
 29899   0094B2  0D07               	mullw	7
 29900   0094B4  50F3               	movf	243,w,c
 29901   0094B6  0F14               	addlw	20
 29902   0094B8  EC53  F05F         	call	_getNV
 29903   0094BC                     L9:
 29904   0094BC  0E00               	movlw	low _stepsPerPollSpeed
 29905   0094BE  0100               	movlb	0	; () banked
 29906   0094C0  2593               	addwf	startServoOutput@io& (0+255),w,b
 29907   0094C2  6ED9               	movwf	fsr2l,c
 29908   0094C4  6ADA               	clrf	fsr2h,c
 29909   0094C6  0E01               	movlw	high _stepsPerPollSpeed
 29910   0094C8  22DA               	addwfc	fsr2h,f,c
 29911   0094CA  C08D  FFDF         	movff	?_getNV,indf2
 29912                           
 29913                           ;../servo.c: 556:             break;
 29914   0094CE  D008               	goto	l20192
 29915   0094D0                     l20190:
 29916   0094D0  0100               	movlb	0	; () banked
 29917   0094D2  5191               	movf	startServoOutput@action& (0+255),w,b
 29918                           
 29919                           ; Switch size 1, requested type "simple"
 29920                           ; Number of cases is 2, Range of values is 1 to 2
 29921                           ; switch strategies available:
 29922                           ; Name         Instructions Cycles
 29923                           ; simple_byte            7     4 (average)
 29924                           ;	Chosen strategy is simple_byte
 29925   0094D4  0A01               	xorlw	1	; case 1
 29926   0094D6  B4D8               	btfsc	status,2,c
 29927   0094D8  D7EB               	goto	l20186
 29928   0094DA  0A03               	xorlw	3	; case 2
 29929   0094DC  B4D8               	btfsc	status,2,c
 29930   0094DE  D7E1               	goto	l20184
 29931   0094E0                     l20192:
 29932                           
 29933                           ; BSR set to: 0
 29934                           ;../servo.c: 558:     if (stepsPerPollSpeed[io] > 234) {
 29935   0094E0  0E00               	movlw	low _stepsPerPollSpeed
 29936   0094E2  2593               	addwf	startServoOutput@io& (0+255),w,b
 29937   0094E4  6ED9               	movwf	fsr2l,c
 29938   0094E6  6ADA               	clrf	fsr2h,c
 29939   0094E8  0E01               	movlw	high _stepsPerPollSpeed
 29940   0094EA  22DA               	addwfc	fsr2h,f,c
 29941   0094EC  0EEA               	movlw	234
 29942   0094EE  64DF               	cpfsgt	indf2,c
 29943   0094F0  D00E               	goto	l20196
 29944                           
 29945                           ; BSR set to: 0
 29946                           ;../servo.c: 559:         stepsPerPollSpeed[io] -= 234;
 29947   0094F2  0E00               	movlw	low _stepsPerPollSpeed
 29948   0094F4  2593               	addwf	startServoOutput@io& (0+255),w,b
 29949   0094F6  6ED9               	movwf	fsr2l,c
 29950   0094F8  6ADA               	clrf	fsr2h,c
 29951   0094FA  0E01               	movlw	high _stepsPerPollSpeed
 29952   0094FC  22DA               	addwfc	fsr2h,f,c
 29953   0094FE  0EEA               	movlw	234
 29954   009500  5EDF               	subwf	indf2,f,c
 29955                           
 29956                           ;../servo.c: 560:         pollsPerStepSpeed[io] = 0;
 29957   009502  0E74               	movlw	low _pollsPerStepSpeed
 29958   009504  2593               	addwf	startServoOutput@io& (0+255),w,b
 29959   009506  6ED9               	movwf	fsr2l,c
 29960   009508  6ADA               	clrf	fsr2h,c
 29961   00950A  0E02               	movlw	high _pollsPerStepSpeed
 29962   00950C  D01E               	goto	L10
 29963   00950E                     l20196:
 29964                           
 29965                           ; BSR set to: 0
 29966                           ;../servo.c: 562:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 29967   00950E  0E74               	movlw	low _pollsPerStepSpeed
 29968   009510  2593               	addwf	startServoOutput@io& (0+255),w,b
 29969   009512  6ED9               	movwf	fsr2l,c
 29970   009514  6ADA               	clrf	fsr2h,c
 29971   009516  0E02               	movlw	high _pollsPerStepSpeed
 29972   009518  22DA               	addwfc	fsr2h,f,c
 29973   00951A  0E00               	movlw	low _stepsPerPollSpeed
 29974   00951C  2593               	addwf	startServoOutput@io& (0+255),w,b
 29975   00951E  6EE1               	movwf	fsr1l,c
 29976   009520  6AE2               	clrf	fsr1h,c
 29977   009522  0E01               	movlw	high _stepsPerPollSpeed
 29978   009524  22E2               	addwfc	fsr1h,f,c
 29979   009526  50E7               	movf	indf1,w,c
 29980   009528  6F92               	movwf	??_startServoOutput& (0+255),b
 29981   00952A  5192               	movf	??_startServoOutput& (0+255),w,b
 29982   00952C  08EB               	sublw	235
 29983   00952E  6EDF               	movwf	indf2,c
 29984                           
 29985                           ; BSR set to: 0
 29986                           ;../servo.c: 563:         pollCount[io] = 1;
 29987   009530  0E64               	movlw	low _pollCount
 29988   009532  2593               	addwf	startServoOutput@io& (0+255),w,b
 29989   009534  6ED9               	movwf	fsr2l,c
 29990   009536  6ADA               	clrf	fsr2h,c
 29991   009538  0E02               	movlw	high _pollCount
 29992   00953A  22DA               	addwfc	fsr2h,f,c
 29993   00953C  0E01               	movlw	1
 29994   00953E  6EDF               	movwf	indf2,c
 29995                           
 29996                           ; BSR set to: 0
 29997                           ;../servo.c: 564:         stepsPerPollSpeed[io] = 0;
 29998   009540  0E00               	movlw	low _stepsPerPollSpeed
 29999   009542  2593               	addwf	startServoOutput@io& (0+255),w,b
 30000   009544  6ED9               	movwf	fsr2l,c
 30001   009546  6ADA               	clrf	fsr2h,c
 30002   009548  0E01               	movlw	high _stepsPerPollSpeed
 30003   00954A                     L10:
 30004   00954A  22DA               	addwfc	fsr2h,f,c
 30005   00954C  6ADF               	clrf	indf2,c
 30006                           
 30007                           ; BSR set to: 0
 30008                           ;../servo.c: 566:     servoState[io] = SS_STARTING;
 30009   00954E  0E10               	movlw	low _servoState
 30010   009550  2593               	addwf	startServoOutput@io& (0+255),w,b
 30011   009552  6ED9               	movwf	fsr2l,c
 30012   009554  6ADA               	clrf	fsr2h,c
 30013   009556  0E01               	movlw	high _servoState
 30014   009558  22DA               	addwfc	fsr2h,f,c
 30015   00955A  0E03               	movlw	3
 30016   00955C  6EDF               	movwf	indf2,c
 30017                           
 30018                           ; BSR set to: 0
 30019   00955E  0012               	return		;funcret
 30020   009560                     __end_of_startServoOutput:
 30021                           	callstack 0
 30022                           
 30023 ;; *************** function _startMultiOutput *****************
 30024 ;; Defined at:
 30025 ;;		line 595 in file "../servo.c"
 30026 ;; Parameters:    Size  Location     Type
 30027 ;;  io              1    wreg     unsigned char 
 30028 ;;  action          1   49[BANK0 ] unsigned char 
 30029 ;; Auto vars:     Size  Location     Type
 30030 ;;  io              1   51[BANK0 ] unsigned char 
 30031 ;; Return value:  Size  Location     Type
 30032 ;;                  1    wreg      void 
 30033 ;; Registers used:
 30034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30035 ;; Tracked objects:
 30036 ;;		On entry : 0/0
 30037 ;;		On exit  : 0/0
 30038 ;;		Unchanged: 0/0
 30039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30040 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30041 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30042 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30043 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30044 ;;Total ram usage:        3 bytes
 30045 ;; Hardware stack levels used: 1
 30046 ;; Hardware stack levels required when called: 13
 30047 ;; This function calls:
 30048 ;;		_getNV
 30049 ;; This function is called by:
 30050 ;;		_APP_nvValueChanged
 30051 ;;		_startOutput
 30052 ;; This function uses a non-reentrant model
 30053 ;;
 30054                           
 30055                           	psect	text108
 30056   009F84                     __ptext108:
 30057                           	callstack 0
 30058   009F84                     _startMultiOutput:
 30059                           	callstack 13
 30060                           
 30061                           ; BSR set to: 0
 30062                           ;incstack = 0
 30063                           ;startMultiOutput@io stored from wreg
 30064   009F84  0100               	movlb	0	; () banked
 30065   009F86  6F93               	movwf	startMultiOutput@io& (0+255),b
 30066                           
 30067                           ;../servo.c: 597:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 30068   009F88  0E03               	movlw	3
 30069   009F8A  EC53  F05F         	call	_getNV
 30070   009F8E  0E00               	movlw	low _stepsPerPollSpeed
 30071   009F90  0100               	movlb	0	; () banked
 30072   009F92  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30073   009F94  6ED9               	movwf	fsr2l,c
 30074   009F96  6ADA               	clrf	fsr2h,c
 30075   009F98  0E01               	movlw	high _stepsPerPollSpeed
 30076   009F9A  22DA               	addwfc	fsr2h,f,c
 30077   009F9C  C08D  FFDF         	movff	?_getNV,indf2
 30078                           
 30079                           ; BSR set to: 0
 30080                           ;../servo.c: 598:     if (stepsPerPollSpeed[io] > 234) {
 30081   009FA0  0E00               	movlw	low _stepsPerPollSpeed
 30082   009FA2  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30083   009FA4  6ED9               	movwf	fsr2l,c
 30084   009FA6  6ADA               	clrf	fsr2h,c
 30085   009FA8  0E01               	movlw	high _stepsPerPollSpeed
 30086   009FAA  22DA               	addwfc	fsr2h,f,c
 30087   009FAC  0EEA               	movlw	234
 30088   009FAE  64DF               	cpfsgt	indf2,c
 30089   009FB0  D00E               	goto	l20260
 30090                           
 30091                           ; BSR set to: 0
 30092                           ;../servo.c: 599:         stepsPerPollSpeed[io] -= 234;
 30093   009FB2  0E00               	movlw	low _stepsPerPollSpeed
 30094   009FB4  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30095   009FB6  6ED9               	movwf	fsr2l,c
 30096   009FB8  6ADA               	clrf	fsr2h,c
 30097   009FBA  0E01               	movlw	high _stepsPerPollSpeed
 30098   009FBC  22DA               	addwfc	fsr2h,f,c
 30099   009FBE  0EEA               	movlw	234
 30100   009FC0  5EDF               	subwf	indf2,f,c
 30101                           
 30102                           ;../servo.c: 600:         pollsPerStepSpeed[io] = 0;
 30103   009FC2  0E74               	movlw	low _pollsPerStepSpeed
 30104   009FC4  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30105   009FC6  6ED9               	movwf	fsr2l,c
 30106   009FC8  6ADA               	clrf	fsr2h,c
 30107   009FCA  0E02               	movlw	high _pollsPerStepSpeed
 30108   009FCC  D01E               	goto	L11
 30109   009FCE                     l20260:
 30110                           
 30111                           ; BSR set to: 0
 30112                           ;../servo.c: 602:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 30113   009FCE  0E74               	movlw	low _pollsPerStepSpeed
 30114   009FD0  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30115   009FD2  6ED9               	movwf	fsr2l,c
 30116   009FD4  6ADA               	clrf	fsr2h,c
 30117   009FD6  0E02               	movlw	high _pollsPerStepSpeed
 30118   009FD8  22DA               	addwfc	fsr2h,f,c
 30119   009FDA  0E00               	movlw	low _stepsPerPollSpeed
 30120   009FDC  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30121   009FDE  6EE1               	movwf	fsr1l,c
 30122   009FE0  6AE2               	clrf	fsr1h,c
 30123   009FE2  0E01               	movlw	high _stepsPerPollSpeed
 30124   009FE4  22E2               	addwfc	fsr1h,f,c
 30125   009FE6  50E7               	movf	indf1,w,c
 30126   009FE8  6F92               	movwf	??_startMultiOutput& (0+255),b
 30127   009FEA  5192               	movf	??_startMultiOutput& (0+255),w,b
 30128   009FEC  08EB               	sublw	235
 30129   009FEE  6EDF               	movwf	indf2,c
 30130                           
 30131                           ; BSR set to: 0
 30132                           ;../servo.c: 603:         pollCount[io] = 1;
 30133   009FF0  0E64               	movlw	low _pollCount
 30134   009FF2  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30135   009FF4  6ED9               	movwf	fsr2l,c
 30136   009FF6  6ADA               	clrf	fsr2h,c
 30137   009FF8  0E02               	movlw	high _pollCount
 30138   009FFA  22DA               	addwfc	fsr2h,f,c
 30139   009FFC  0E01               	movlw	1
 30140   009FFE  6EDF               	movwf	indf2,c
 30141                           
 30142                           ; BSR set to: 0
 30143                           ;../servo.c: 604:         stepsPerPollSpeed[io] = 0;
 30144   00A000  0E00               	movlw	low _stepsPerPollSpeed
 30145   00A002  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30146   00A004  6ED9               	movwf	fsr2l,c
 30147   00A006  6ADA               	clrf	fsr2h,c
 30148   00A008  0E01               	movlw	high _stepsPerPollSpeed
 30149   00A00A                     L11:
 30150   00A00A  22DA               	addwfc	fsr2h,f,c
 30151   00A00C  6ADF               	clrf	indf2,c
 30152                           
 30153                           ; BSR set to: 0
 30154                           ;../servo.c: 606:     servoState[io] = SS_STARTING;
 30155   00A00E  0E10               	movlw	low _servoState
 30156   00A010  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30157   00A012  6ED9               	movwf	fsr2l,c
 30158   00A014  6ADA               	clrf	fsr2h,c
 30159   00A016  0E01               	movlw	high _servoState
 30160   00A018  22DA               	addwfc	fsr2h,f,c
 30161   00A01A  0E03               	movlw	3
 30162   00A01C  6EDF               	movwf	indf2,c
 30163                           
 30164                           ; BSR set to: 0
 30165   00A01E  0012               	return		;funcret
 30166   00A020                     __end_of_startMultiOutput:
 30167                           	callstack 0
 30168                           
 30169 ;; *************** function _startDigitalOutput *****************
 30170 ;; Defined at:
 30171 ;;		line 107 in file "../digitalOut.c"
 30172 ;; Parameters:    Size  Location     Type
 30173 ;;  io              1    wreg     unsigned char 
 30174 ;;  state           1   26[BANK1 ] unsigned char 
 30175 ;; Auto vars:     Size  Location     Type
 30176 ;;  io              1   33[BANK1 ] unsigned char 
 30177 ;;  actionState     1   32[BANK1 ] enum E12766
 30178 ;;  pinState        1   31[BANK1 ] enum E12766
 30179 ;; Return value:  Size  Location     Type
 30180 ;;                  1    wreg      void 
 30181 ;; Registers used:
 30182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30183 ;; Tracked objects:
 30184 ;;		On entry : 0/0
 30185 ;;		On exit  : 0/0
 30186 ;;		Unchanged: 0/0
 30187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30188 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30189 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30190 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30191 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30192 ;;Total ram usage:        8 bytes
 30193 ;; Hardware stack levels used: 1
 30194 ;; Hardware stack levels required when called: 19
 30195 ;; This function calls:
 30196 ;;		_getNV
 30197 ;;		_sendInvertedProducedEvent
 30198 ;;		_setOutputPin
 30199 ;;		_writeNVM
 30200 ;; This function is called by:
 30201 ;;		_startOutput
 30202 ;; This function uses a non-reentrant model
 30203 ;;
 30204                           
 30205                           	psect	text109
 30206   0056D2                     __ptext109:
 30207                           	callstack 0
 30208   0056D2                     _startDigitalOutput:
 30209                           	callstack 8
 30210                           
 30211                           ; BSR set to: 0
 30212                           ;incstack = 0
 30213                           ;startDigitalOutput@io stored from wreg
 30214   0056D2  0101               	movlb	1	; () banked
 30215   0056D4  6FDE               	movwf	startDigitalOutput@io& (0+255),b
 30216                           
 30217                           ;../digitalOut.c: 108:     Boolean pinState;;../digitalOut.c: 109:     Boolean actionSta
      +                          te;;../digitalOut.c: 116:     if (state == 3) {
 30218   0056D6  0E03               	movlw	3
 30219   0056D8  0101               	movlb	1	; () banked
 30220   0056DA  19D7               	xorwf	startDigitalOutput@state& (0+255),w,b
 30221   0056DC  A4D8               	btfss	status,2,c
 30222   0056DE  D058               	goto	l20580
 30223                           
 30224                           ; BSR set to: 1
 30225                           ;../digitalOut.c: 117:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 30226   0056E0  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30227   0056E2  0D07               	mullw	7
 30228   0056E4  50F3               	movf	243,w,c
 30229   0056E6  0F13               	addlw	19
 30230   0056E8  EC53  F05F         	call	_getNV
 30231   0056EC  0E20               	movlw	low _flashDelays
 30232   0056EE  0101               	movlb	1	; () banked
 30233   0056F0  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30234   0056F2  6ED9               	movwf	fsr2l,c
 30235   0056F4  6ADA               	clrf	fsr2h,c
 30236   0056F6  0E01               	movlw	high _flashDelays
 30237   0056F8  22DA               	addwfc	fsr2h,f,c
 30238   0056FA  0100               	movlb	0	; () banked
 30239   0056FC  C08D  FFDF         	movff	?_getNV,indf2
 30240                           
 30241                           ; BSR set to: 0
 30242                           ;../digitalOut.c: 118:         pulseDelays[io] = 1;
 30243   005700  0EA4               	movlw	low _pulseDelays
 30244   005702  0101               	movlb	1	; () banked
 30245   005704  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30246   005706  6ED9               	movwf	fsr2l,c
 30247   005708  6ADA               	clrf	fsr2h,c
 30248   00570A  0E02               	movlw	high _pulseDelays
 30249   00570C  22DA               	addwfc	fsr2h,f,c
 30250   00570E  0E01               	movlw	1
 30251   005710  6EDF               	movwf	indf2,c
 30252                           
 30253                           ; BSR set to: 1
 30254                           ;../digitalOut.c: 119:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 30255   005712  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30256   005714  0D07               	mullw	7
 30257   005716  50F3               	movf	243,w,c
 30258   005718  0F11               	addlw	17
 30259   00571A  0B20               	andlw	32
 30260   00571C  EC53  F05F         	call	_getNV
 30261   005720  0100               	movlb	0	; () banked
 30262   005722  518D               	movf	?_getNV& (0+255),w,b
 30263   005724  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30264   005726  A4D8               	btfss	status,2,c
 30265   005728  D002               	goto	u20960
 30266   00572A  0E01               	movlw	1
 30267   00572C  D001               	goto	u20970
 30268   00572E                     u20960:
 30269   00572E  0E00               	movlw	0
 30270   005730                     u20970:
 30271   005730  6F91               	movwf	setOutputPin@state& (0+255),b
 30272   005732  0101               	movlb	1	; () banked
 30273   005734  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30274   005736  EC9E  F037         	call	_setOutputPin
 30275                           
 30276                           ;../digitalOut.c: 120:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 30277   00573A  0EDE               	movlw	222
 30278   00573C  0101               	movlb	1	; () banked
 30279   00573E  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30280   005740  6FD8               	movwf	??_startDigitalOutput& (0+255),b
 30281   005742  6BD9               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30282   005744  0E03               	movlw	3
 30283   005746  23D9               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30284   005748  C1D8  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30285   00574C  C1D9  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30286   005750  0100               	movlb	0	; () banked
 30287   005752  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30288   005754  C1D7  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 30289   005758  0E00               	movlw	0
 30290   00575A  EC61  F05D         	call	_writeNVM
 30291                           
 30292                           ;../digitalOut.c: 121:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 30293   00575E  0E01               	movlw	1
 30294   005760  0101               	movlb	1	; () banked
 30295   005762  6FCF               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30296   005764  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30297   005766  0D07               	mullw	7
 30298   005768  50F3               	movf	243,w,c
 30299   00576A  0F11               	addlw	17
 30300   00576C  EC53  F05F         	call	_getNV
 30301   005770  0100               	movlb	0	; () banked
 30302   005772  518D               	movf	?_getNV& (0+255),w,b
 30303   005774  0B40               	andlw	64
 30304   005776  0101               	movlb	1	; () banked
 30305   005778  6FD0               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30306   00577A  0E01               	movlw	1
 30307   00577C  6FD1               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30308   00577E  0E01               	movlw	1
 30309   005780  6FD2               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30310   005782  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30311   005784  0D04               	mullw	4
 30312   005786  50F3               	movf	243,w,c
 30313   005788  0F08               	addlw	8
 30314   00578A  ECF8  F05D         	call	_sendInvertedProducedEvent
 30315   00578E  0012               	return	
 30316   005790                     l20580:
 30317                           
 30318                           ; BSR set to: 1
 30319                           ;../digitalOut.c: 125:     flashDelays[io] = 0;
 30320   005790  0E20               	movlw	low _flashDelays
 30321   005792  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30322   005794  6ED9               	movwf	fsr2l,c
 30323   005796  6ADA               	clrf	fsr2h,c
 30324   005798  0E01               	movlw	high _flashDelays
 30325   00579A  22DA               	addwfc	fsr2h,f,c
 30326   00579C  6ADF               	clrf	indf2,c
 30327                           
 30328                           ; BSR set to: 1
 30329                           ;../digitalOut.c: 127:     actionState = (state == 1);
 30330   00579E  05D7               	decf	startDigitalOutput@state& (0+255),w,b
 30331   0057A0  A4D8               	btfss	status,2,c
 30332   0057A2  D002               	goto	u20980
 30333   0057A4  0E01               	movlw	1
 30334   0057A6  D001               	goto	u20990
 30335   0057A8                     u20980:
 30336   0057A8  0E00               	movlw	0
 30337   0057AA                     u20990:
 30338   0057AA  6FDD               	movwf	startDigitalOutput@actionState& (0+255),b
 30339                           
 30340                           ; BSR set to: 1
 30341                           ;../digitalOut.c: 130:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30342   0057AC  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30343   0057AE  0D07               	mullw	7
 30344   0057B0  50F3               	movf	243,w,c
 30345   0057B2  0F11               	addlw	17
 30346   0057B4  EC53  F05F         	call	_getNV
 30347   0057B8  0100               	movlb	0	; () banked
 30348   0057BA  A18D               	btfss	?_getNV& (0+255),0,b
 30349   0057BC  D008               	goto	l260
 30350                           
 30351                           ; BSR set to: 0
 30352                           ;../digitalOut.c: 131:         actionState = !actionState;
 30353   0057BE  0101               	movlb	1	; () banked
 30354   0057C0  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 30355   0057C2  A4D8               	btfss	status,2,c
 30356   0057C4  D002               	goto	u21010
 30357   0057C6  0E01               	movlw	1
 30358   0057C8  D001               	goto	u21020
 30359   0057CA                     u21010:
 30360   0057CA  0E00               	movlw	0
 30361   0057CC                     u21020:
 30362   0057CC  6FDD               	movwf	startDigitalOutput@actionState& (0+255),b
 30363   0057CE                     l260:
 30364                           
 30365                           ;../digitalOut.c: 135:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 30366   0057CE  0101               	movlb	1	; () banked
 30367   0057D0  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 30368   0057D2  A4D8               	btfss	status,2,c
 30369   0057D4  D015               	goto	l20594
 30370                           
 30371                           ; BSR set to: 1
 30372   0057D6  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30373   0057D8  0D07               	mullw	7
 30374   0057DA  50F3               	movf	243,w,c
 30375   0057DC  0F12               	addlw	18
 30376   0057DE  EC53  F05F         	call	_getNV
 30377   0057E2  0100               	movlb	0	; () banked
 30378   0057E4  518D               	movf	?_getNV& (0+255),w,b
 30379   0057E6  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30380   0057E8  B4D8               	btfsc	status,2,c
 30381   0057EA  D00A               	goto	l20594
 30382                           
 30383                           ; BSR set to: 0
 30384                           ;../digitalOut.c: 136:         pulseDelays[io] = 1;
 30385   0057EC  0EA4               	movlw	low _pulseDelays
 30386   0057EE  0101               	movlb	1	; () banked
 30387   0057F0  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30388   0057F2  6ED9               	movwf	fsr2l,c
 30389   0057F4  6ADA               	clrf	fsr2h,c
 30390   0057F6  0E02               	movlw	high _pulseDelays
 30391   0057F8  22DA               	addwfc	fsr2h,f,c
 30392   0057FA  0E01               	movlw	1
 30393   0057FC  6EDF               	movwf	indf2,c
 30394   0057FE  0012               	return	
 30395   005800                     l20594:
 30396                           
 30397                           ;../digitalOut.c: 142:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 30398   005800  0101               	movlb	1	; () banked
 30399   005802  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 30400   005804  B4D8               	btfsc	status,2,c
 30401   005806  D038               	goto	l20604
 30402                           
 30403                           ; BSR set to: 1
 30404   005808  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30405   00580A  0D07               	mullw	7
 30406   00580C  50F3               	movf	243,w,c
 30407   00580E  0F12               	addlw	18
 30408   005810  EC53  F05F         	call	_getNV
 30409   005814  0100               	movlb	0	; () banked
 30410   005816  518D               	movf	?_getNV& (0+255),w,b
 30411   005818  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30412   00581A  B4D8               	btfsc	status,2,c
 30413   00581C  D02D               	goto	l20604
 30414                           
 30415                           ; BSR set to: 0
 30416   00581E  0EA4               	movlw	low _pulseDelays
 30417   005820  0101               	movlb	1	; () banked
 30418   005822  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30419   005824  6ED9               	movwf	fsr2l,c
 30420   005826  6ADA               	clrf	fsr2h,c
 30421   005828  0E02               	movlw	high _pulseDelays
 30422   00582A  22DA               	addwfc	fsr2h,f,c
 30423   00582C  50DF               	movf	indf2,w,c
 30424   00582E  A4D8               	btfss	status,2,c
 30425   005830  D023               	goto	l20604
 30426                           
 30427                           ; BSR set to: 1
 30428                           ;../digitalOut.c: 143:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30429   005832  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30430   005834  0D07               	mullw	7
 30431   005836  50F3               	movf	243,w,c
 30432   005838  0F12               	addlw	18
 30433   00583A  EC53  F05F         	call	_getNV
 30434   00583E  0EA4               	movlw	low _pulseDelays
 30435   005840  0101               	movlb	1	; () banked
 30436   005842  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30437   005844  6ED9               	movwf	fsr2l,c
 30438   005846  6ADA               	clrf	fsr2h,c
 30439   005848  0E02               	movlw	high _pulseDelays
 30440   00584A  22DA               	addwfc	fsr2h,f,c
 30441   00584C  0100               	movlb	0	; () banked
 30442   00584E  C08D  FFDF         	movff	?_getNV,indf2
 30443                           
 30444                           ; BSR set to: 0
 30445                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 30446   005852  0EDE               	movlw	222
 30447   005854  0101               	movlb	1	; () banked
 30448   005856  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30449   005858  6FD8               	movwf	??_startDigitalOutput& (0+255),b
 30450   00585A  6BD9               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30451   00585C  0E03               	movlw	3
 30452   00585E  23D9               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30453   005860  C1D8  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30454   005864  C1D9  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30455   005868  0100               	movlb	0	; () banked
 30456   00586A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30457   00586C  0E02               	movlw	2
 30458   00586E  6FA7               	movwf	writeNVM@value& (0+255),b
 30459   005870  0E00               	movlw	0
 30460   005872  EC61  F05D         	call	_writeNVM
 30461                           
 30462                           ;../digitalOut.c: 147:     } else {
 30463   005876  D025               	goto	l20614
 30464   005878                     l20604:
 30465                           
 30466                           ;../digitalOut.c: 148:         pulseDelays[io] = 1;
 30467   005878  0EA4               	movlw	low _pulseDelays
 30468   00587A  0101               	movlb	1	; () banked
 30469   00587C  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30470   00587E  6ED9               	movwf	fsr2l,c
 30471   005880  6ADA               	clrf	fsr2h,c
 30472   005882  0E02               	movlw	high _pulseDelays
 30473   005884  22DA               	addwfc	fsr2h,f,c
 30474   005886  0E01               	movlw	1
 30475   005888  6EDF               	movwf	indf2,c
 30476                           
 30477                           ; BSR set to: 1
 30478                           ;../digitalOut.c: 149:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 30479   00588A  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 30480   00588C  A4D8               	btfss	status,2,c
 30481   00588E  D004               	goto	l20610
 30482                           
 30483                           ; BSR set to: 1
 30484   005890  0E00               	movlw	0
 30485   005892  6FDB               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30486   005894  0E02               	movlw	2
 30487   005896  D003               	goto	L12
 30488   005898                     l20610:
 30489                           
 30490                           ; BSR set to: 1
 30491   005898  0E00               	movlw	0
 30492   00589A  6FDB               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30493   00589C  0E01               	movlw	1
 30494   00589E                     L12:
 30495   00589E  6FDA               	movwf	_startDigitalOutput$808& (0+255),b
 30496                           
 30497                           ; BSR set to: 1
 30498   0058A0  0EDE               	movlw	222
 30499   0058A2  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 30500   0058A4  6FD8               	movwf	??_startDigitalOutput& (0+255),b
 30501   0058A6  6BD9               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30502   0058A8  0E03               	movlw	3
 30503   0058AA  23D9               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30504   0058AC  C1D8  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30505   0058B0  C1D9  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30506   0058B4  0100               	movlb	0	; () banked
 30507   0058B6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30508   0058B8  C1DA  F0A7         	movff	_startDigitalOutput$808,writeNVM@value
 30509   0058BC  0E00               	movlw	0
 30510   0058BE  EC61  F05D         	call	_writeNVM
 30511   0058C2                     l20614:
 30512                           
 30513                           ;../digitalOut.c: 152:     pinState = actionState;
 30514   0058C2  C1DD  F1DC         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 30515                           
 30516                           ;../digitalOut.c: 153:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 30517   0058C6  0101               	movlb	1	; () banked
 30518   0058C8  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30519   0058CA  0D07               	mullw	7
 30520   0058CC  50F3               	movf	243,w,c
 30521   0058CE  0F11               	addlw	17
 30522   0058D0  EC53  F05F         	call	_getNV
 30523   0058D4  0100               	movlb	0	; () banked
 30524   0058D6  AB8D               	btfss	?_getNV& (0+255),5,b
 30525   0058D8  D008               	goto	l20620
 30526                           
 30527                           ; BSR set to: 0
 30528                           ;../digitalOut.c: 154:         pinState = !pinState;
 30529   0058DA  0101               	movlb	1	; () banked
 30530   0058DC  51DC               	movf	startDigitalOutput@pinState& (0+255),w,b
 30531   0058DE  A4D8               	btfss	status,2,c
 30532   0058E0  D002               	goto	u21100
 30533   0058E2  0E01               	movlw	1
 30534   0058E4  D001               	goto	u21110
 30535   0058E6                     u21100:
 30536   0058E6  0E00               	movlw	0
 30537   0058E8                     u21110:
 30538   0058E8  6FDC               	movwf	startDigitalOutput@pinState& (0+255),b
 30539   0058EA                     l20620:
 30540                           
 30541                           ;../digitalOut.c: 156:     setOutputPin(io, pinState);
 30542   0058EA  C1DC  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 30543   0058EE  0101               	movlb	1	; () banked
 30544   0058F0  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30545   0058F2  EC9E  F037         	call	_setOutputPin
 30546                           
 30547                           ;../digitalOut.c: 161:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 30548   0058F6  0101               	movlb	1	; () banked
 30549   0058F8  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30550   0058FA  0D07               	mullw	7
 30551   0058FC  50F3               	movf	243,w,c
 30552   0058FE  0F11               	addlw	17
 30553   005900  EC53  F05F         	call	_getNV
 30554   005904  0100               	movlb	0	; () banked
 30555   005906  A78D               	btfss	?_getNV& (0+255),3,b
 30556   005908  D021               	goto	l20628
 30557                           
 30558                           ; BSR set to: 0
 30559                           ;../digitalOut.c: 162:         if (actionState) {
 30560   00590A  0101               	movlb	1	; () banked
 30561   00590C  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 30562   00590E  B4D8               	btfsc	status,2,c
 30563   005910  0012               	return	
 30564                           
 30565                           ; BSR set to: 1
 30566                           ;../digitalOut.c: 165:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 30567   005912  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 30568   005914  B4D8               	btfsc	status,2,c
 30569   005916  D002               	goto	u21140
 30570   005918  0E01               	movlw	1
 30571   00591A  D001               	goto	u21150
 30572   00591C                     u21140:
 30573   00591C  0E00               	movlw	0
 30574   00591E                     u21150:
 30575   00591E  6FCF               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30576   005920  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30577   005922  0D07               	mullw	7
 30578   005924  50F3               	movf	243,w,c
 30579   005926  0F11               	addlw	17
 30580   005928  EC53  F05F         	call	_getNV
 30581   00592C  0100               	movlb	0	; () banked
 30582   00592E  518D               	movf	?_getNV& (0+255),w,b
 30583   005930  0B40               	andlw	64
 30584   005932  0101               	movlb	1	; () banked
 30585   005934  6FD0               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30586   005936  0E01               	movlw	1
 30587   005938  6FD1               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30588   00593A  0E01               	movlw	1
 30589   00593C  6FD2               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30590   00593E  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30591   005940  0D04               	mullw	4
 30592   005942  50F3               	movf	243,w,c
 30593   005944  0F08               	addlw	8
 30594   005946  ECF8  F05D         	call	_sendInvertedProducedEvent
 30595   00594A  0012               	return	
 30596   00594C                     l20628:
 30597                           
 30598                           ; BSR set to: 0
 30599                           ;../digitalOut.c: 170:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 30600   00594C  0101               	movlb	1	; () banked
 30601   00594E  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 30602   005950  B4D8               	btfsc	status,2,c
 30603   005952  D002               	goto	u21160
 30604   005954  0E01               	movlw	1
 30605   005956  D001               	goto	u21170
 30606   005958                     u21160:
 30607   005958  0E00               	movlw	0
 30608   00595A                     u21170:
 30609   00595A  6FCF               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30610   00595C  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30611   00595E  0D07               	mullw	7
 30612   005960  50F3               	movf	243,w,c
 30613   005962  0F11               	addlw	17
 30614   005964  EC53  F05F         	call	_getNV
 30615   005968  0100               	movlb	0	; () banked
 30616   00596A  518D               	movf	?_getNV& (0+255),w,b
 30617   00596C  0B40               	andlw	64
 30618   00596E  0101               	movlb	1	; () banked
 30619   005970  6FD0               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30620   005972  0E01               	movlw	1
 30621   005974  6FD1               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30622   005976  0E01               	movlw	1
 30623   005978  6FD2               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30624   00597A  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 30625   00597C  0D04               	mullw	4
 30626   00597E  50F3               	movf	243,w,c
 30627   005980  0F08               	addlw	8
 30628   005982  ECF8  F05D         	call	_sendInvertedProducedEvent
 30629   005986  0012               	return		;funcret
 30630   005988                     __end_of_startDigitalOutput:
 30631                           	callstack 0
 30632                           
 30633 ;; *************** function _sendInvertedProducedEvent *****************
 30634 ;; Defined at:
 30635 ;;		line 362 in file "../universalEvents.c"
 30636 ;; Parameters:    Size  Location     Type
 30637 ;;  happening       1    wreg     unsigned char 
 30638 ;;  state           1   18[BANK1 ] enum E12787
 30639 ;;  invert          1   19[BANK1 ] enum E12767
 30640 ;;  can_send_on     1   20[BANK1 ] enum E12767
 30641 ;;  can_send_off    1   21[BANK1 ] enum E12767
 30642 ;; Auto vars:     Size  Location     Type
 30643 ;;  happening       1   22[BANK1 ] unsigned char 
 30644 ;;  state_to_sen    1   25[BANK1 ] enum E12787
 30645 ;; Return value:  Size  Location     Type
 30646 ;;                  1    wreg      enum E12766
 30647 ;; Registers used:
 30648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30649 ;; Tracked objects:
 30650 ;;		On entry : 0/0
 30651 ;;		On exit  : 0/0
 30652 ;;		Unchanged: 0/0
 30653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30654 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30655 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30657 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30658 ;;Total ram usage:        8 bytes
 30659 ;; Hardware stack levels used: 1
 30660 ;; Hardware stack levels required when called: 18
 30661 ;; This function calls:
 30662 ;;		_sendProducedEvent
 30663 ;; This function is called by:
 30664 ;;		_startDigitalOutput
 30665 ;;		_sodTRCallback
 30666 ;; This function uses a non-reentrant model
 30667 ;;
 30668                           
 30669                           	psect	text110
 30670   00BBF0                     __ptext110:
 30671                           	callstack 0
 30672   00BBF0                     _sendInvertedProducedEvent:
 30673                           	callstack 9
 30674                           
 30675                           ;incstack = 0
 30676                           ;sendInvertedProducedEvent@happening stored from wreg
 30677   00BBF0  0101               	movlb	1	; () banked
 30678   00BBF2  6FD3               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 30679                           
 30680                           ;../universalEvents.c: 363:  EventState state_to_send = invert?!state:state;
 30681   00BBF4  0101               	movlb	1	; () banked
 30682   00BBF6  51D0               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 30683   00BBF8  A4D8               	btfss	status,2,c
 30684   00BBFA  D003               	goto	l20072
 30685                           
 30686                           ; BSR set to: 1
 30687   00BBFC  C1CF  F1D4         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1404
 30688   00BC00  D007               	goto	L13
 30689   00BC02                     l20072:
 30690                           
 30691                           ; BSR set to: 1
 30692   00BC02  51CF               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 30693   00BC04  A4D8               	btfss	status,2,c
 30694   00BC06  D002               	goto	u20270
 30695   00BC08  0E01               	movlw	1
 30696   00BC0A  D001               	goto	u20280
 30697   00BC0C                     u20270:
 30698   00BC0C  0E00               	movlw	0
 30699   00BC0E                     u20280:
 30700   00BC0E  6FD4               	movwf	_sendInvertedProducedEvent$1404& (0+255),b
 30701   00BC10                     L13:
 30702   00BC10  6BD5               	clrf	(_sendInvertedProducedEvent$1404+1)& (0+255),b
 30703                           
 30704                           ; BSR set to: 1
 30705   00BC12  C1D4  F1D6         	movff	_sendInvertedProducedEvent$1404,sendInvertedProducedEvent@state_to_send
 30706                           
 30707                           ;../universalEvents.c: 364:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 30708   00BC16  51D6               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30709   00BC18  B4D8               	btfsc	status,2,c
 30710   00BC1A  D003               	goto	u20300
 30711                           
 30712                           ; BSR set to: 1
 30713   00BC1C  51D1               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 30714   00BC1E  A4D8               	btfss	status,2,c
 30715   00BC20  D006               	goto	u20320
 30716   00BC22                     u20300:
 30717                           
 30718                           ; BSR set to: 1
 30719   00BC22  51D6               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30720   00BC24  A4D8               	btfss	status,2,c
 30721   00BC26  0012               	return	
 30722                           
 30723                           ; BSR set to: 1
 30724   00BC28  51D2               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 30725   00BC2A  B4D8               	btfsc	status,2,c
 30726   00BC2C  0012               	return	
 30727   00BC2E                     u20320:
 30728                           
 30729                           ; BSR set to: 1
 30730                           ;../universalEvents.c: 365:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 30731   00BC2E  C1D6  F0A7         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 30732   00BC32  51D3               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 30733   00BC34  ECCC  F04B         	call	_sendProducedEvent
 30734   00BC38  0012               	return		;funcret
 30735   00BC3A                     __end_of_sendInvertedProducedEvent:
 30736                           	callstack 0
 30737                           
 30738 ;; *************** function _startBounceOutput *****************
 30739 ;; Defined at:
 30740 ;;		line 577 in file "../servo.c"
 30741 ;; Parameters:    Size  Location     Type
 30742 ;;  io              1    wreg     unsigned char 
 30743 ;;  action          1   45[BANK0 ] unsigned char 
 30744 ;; Auto vars:     Size  Location     Type
 30745 ;;  io              1   46[BANK0 ] unsigned char 
 30746 ;; Return value:  Size  Location     Type
 30747 ;;                  1    wreg      void 
 30748 ;; Registers used:
 30749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30750 ;; Tracked objects:
 30751 ;;		On entry : 0/0
 30752 ;;		On exit  : 0/0
 30753 ;;		Unchanged: 0/0
 30754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30755 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30756 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30758 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30759 ;;Total ram usage:        2 bytes
 30760 ;; Hardware stack levels used: 1
 30761 ;; Hardware stack levels required when called: 12
 30762 ;; This function calls:
 30763 ;;		Nothing
 30764 ;; This function is called by:
 30765 ;;		_APP_nvValueChanged
 30766 ;;		_startOutput
 30767 ;; This function uses a non-reentrant model
 30768 ;;
 30769                           
 30770                           	psect	text111
 30771   00B350                     __ptext111:
 30772                           	callstack 0
 30773   00B350                     _startBounceOutput:
 30774                           	callstack 14
 30775                           
 30776                           ;incstack = 0
 30777                           ;startBounceOutput@io stored from wreg
 30778   00B350  0100               	movlb	0	; () banked
 30779   00B352  6F8E               	movwf	startBounceOutput@io& (0+255),b
 30780                           
 30781                           ;../servo.c: 578:     switch (action) {
 30782   00B354  D018               	goto	l20232
 30783   00B356                     l20226:
 30784                           
 30785                           ; BSR set to: 0
 30786                           ;../servo.c: 580:             speed[io] = 0;
 30787   00B356  518E               	movf	startBounceOutput@io& (0+255),w,b
 30788   00B358  0D02               	mullw	2
 30789   00B35A  0E00               	movlw	low _speed
 30790   00B35C  24F3               	addwf	243,w,c
 30791   00B35E  6ED9               	movwf	fsr2l,c
 30792   00B360  0E02               	movlw	high _speed
 30793   00B362  20F4               	addwfc	prodh,w,c
 30794   00B364  6EDA               	movwf	fsr2h,c
 30795   00B366  6ADE               	clrf	postinc2,c
 30796   00B368  6ADD               	clrf	postdec2,c
 30797                           
 30798                           ;../servo.c: 581:             break;
 30799   00B36A  D015               	goto	l20234
 30800   00B36C                     l20228:
 30801                           
 30802                           ; BSR set to: 0
 30803                           ;../servo.c: 583:             speed[io] = 12;
 30804   00B36C  518E               	movf	startBounceOutput@io& (0+255),w,b
 30805   00B36E  0D02               	mullw	2
 30806   00B370  0E00               	movlw	low _speed
 30807   00B372  24F3               	addwf	243,w,c
 30808   00B374  6ED9               	movwf	fsr2l,c
 30809   00B376  0E02               	movlw	high _speed
 30810   00B378  20F4               	addwfc	prodh,w,c
 30811   00B37A  6EDA               	movwf	fsr2h,c
 30812   00B37C  0E0C               	movlw	12
 30813   00B37E  6EDE               	movwf	postinc2,c
 30814   00B380  0E00               	movlw	0
 30815   00B382  6EDD               	movwf	postdec2,c
 30816                           
 30817                           ;../servo.c: 584:             break;
 30818   00B384  D008               	goto	l20234
 30819   00B386                     l20232:
 30820   00B386  0100               	movlb	0	; () banked
 30821   00B388  518D               	movf	startBounceOutput@action& (0+255),w,b
 30822                           
 30823                           ; Switch size 1, requested type "simple"
 30824                           ; Number of cases is 2, Range of values is 1 to 2
 30825                           ; switch strategies available:
 30826                           ; Name         Instructions Cycles
 30827                           ; simple_byte            7     4 (average)
 30828                           ;	Chosen strategy is simple_byte
 30829   00B38A  0A01               	xorlw	1	; case 1
 30830   00B38C  B4D8               	btfsc	status,2,c
 30831   00B38E  D7EE               	goto	l20228
 30832   00B390  0A03               	xorlw	3	; case 2
 30833   00B392  B4D8               	btfsc	status,2,c
 30834   00B394  D7E0               	goto	l20226
 30835   00B396                     l20234:
 30836                           
 30837                           ; BSR set to: 0
 30838                           ;../servo.c: 586:     servoState[io] = SS_STARTING;
 30839   00B396  0E10               	movlw	low _servoState
 30840   00B398  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30841   00B39A  6ED9               	movwf	fsr2l,c
 30842   00B39C  6ADA               	clrf	fsr2h,c
 30843   00B39E  0E01               	movlw	high _servoState
 30844   00B3A0  22DA               	addwfc	fsr2h,f,c
 30845   00B3A2  0E03               	movlw	3
 30846   00B3A4  6EDF               	movwf	indf2,c
 30847                           
 30848                           ;../servo.c: 587:     loopCount[io] = 0;
 30849   00B3A6  0E54               	movlw	low _loopCount
 30850   00B3A8  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30851   00B3AA  6ED9               	movwf	fsr2l,c
 30852   00B3AC  6ADA               	clrf	fsr2h,c
 30853   00B3AE  0E02               	movlw	high _loopCount
 30854   00B3B0  22DA               	addwfc	fsr2h,f,c
 30855   00B3B2  6ADF               	clrf	indf2,c
 30856                           
 30857                           ; BSR set to: 0
 30858   00B3B4  0012               	return		;funcret
 30859   00B3B6                     __end_of_startBounceOutput:
 30860                           	callstack 0
 30861                           
 30862 ;; *************** function _setOutputState *****************
 30863 ;; Defined at:
 30864 ;;		line 110 in file "../outputs.c"
 30865 ;; Parameters:    Size  Location     Type
 30866 ;;  io              1    wreg     unsigned char 
 30867 ;;  act             1   51[BANK0 ] unsigned char 
 30868 ;;  type            1   52[BANK0 ] unsigned char 
 30869 ;; Auto vars:     Size  Location     Type
 30870 ;;  io              1   53[BANK0 ] unsigned char 
 30871 ;; Return value:  Size  Location     Type
 30872 ;;                  1    wreg      void 
 30873 ;; Registers used:
 30874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30875 ;; Tracked objects:
 30876 ;;		On entry : 0/0
 30877 ;;		On exit  : 0/0
 30878 ;;		Unchanged: 0/0
 30879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30880 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30881 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30883 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30884 ;;Total ram usage:        3 bytes
 30885 ;; Hardware stack levels used: 1
 30886 ;; Hardware stack levels required when called: 14
 30887 ;; This function calls:
 30888 ;;		_setBounceState
 30889 ;;		_setMultiState
 30890 ;;		_setServoState
 30891 ;; This function is called by:
 30892 ;;		_processActions
 30893 ;; This function uses a non-reentrant model
 30894 ;;
 30895                           
 30896                           	psect	text112
 30897   00B8D2                     __ptext112:
 30898                           	callstack 0
 30899   00B8D2                     _setOutputState:
 30900                           	callstack 14
 30901                           
 30902                           ; BSR set to: 0
 30903                           ;incstack = 0
 30904                           ;setOutputState@io stored from wreg
 30905   00B8D2  0100               	movlb	0	; () banked
 30906   00B8D4  6F95               	movwf	setOutputState@io& (0+255),b
 30907                           
 30908                           ;../outputs.c: 111:     switch(type) {
 30909   00B8D6  D012               	goto	l21562
 30910   00B8D8                     l21548:
 30911                           
 30912                           ; BSR set to: 0
 30913                           ;../outputs.c: 124:             setBounceState(io, act);
 30914   00B8D8  C093  F091         	movff	setOutputState@act,setBounceState@action
 30915   00B8DC  5195               	movf	setOutputState@io& (0+255),w,b
 30916   00B8DE  EC86  F04D         	call	_setBounceState
 30917   00B8E2  0012               	return	
 30918   00B8E4                     l21552:
 30919                           
 30920                           ; BSR set to: 0
 30921                           ;../outputs.c: 129:             setServoState(io, act);
 30922   00B8E4  C093  F091         	movff	setOutputState@act,setServoState@action
 30923   00B8E8  5195               	movf	setOutputState@io& (0+255),w,b
 30924   00B8EA  EC30  F04D         	call	_setServoState
 30925   00B8EE  0012               	return	
 30926   00B8F0                     l21556:
 30927                           
 30928                           ; BSR set to: 0
 30929                           ;../outputs.c: 134:             setMultiState(io, act);
 30930   00B8F0  C093  F091         	movff	setOutputState@act,setMultiState@action
 30931   00B8F4  5195               	movf	setOutputState@io& (0+255),w,b
 30932   00B8F6  EC84  F047         	call	_setMultiState
 30933   00B8FA  0012               	return	
 30934   00B8FC                     l21562:
 30935   00B8FC  0100               	movlb	0	; () banked
 30936   00B8FE  5194               	movf	setOutputState@type& (0+255),w,b
 30937                           
 30938                           ; Switch size 1, requested type "simple"
 30939                           ; Number of cases is 7, Range of values is 0 to 6
 30940                           ; switch strategies available:
 30941                           ; Name         Instructions Cycles
 30942                           ; simple_byte           22    12 (average)
 30943                           ;	Chosen strategy is simple_byte
 30944   00B900  0A00               	xorlw	0	; case 0
 30945   00B902  B4D8               	btfsc	status,2,c
 30946   00B904  0012               	return	
 30947   00B906  0A01               	xorlw	1	; case 1
 30948   00B908  B4D8               	btfsc	status,2,c
 30949   00B90A  0012               	return	
 30950   00B90C  0A03               	xorlw	3	; case 2
 30951   00B90E  B4D8               	btfsc	status,2,c
 30952   00B910  D7E9               	goto	l21552
 30953   00B912  0A01               	xorlw	1	; case 3
 30954   00B914  B4D8               	btfsc	status,2,c
 30955   00B916  D7E0               	goto	l21548
 30956   00B918  0A07               	xorlw	7	; case 4
 30957   00B91A  B4D8               	btfsc	status,2,c
 30958   00B91C  D7E9               	goto	l21556
 30959   00B91E  0A01               	xorlw	1	; case 5
 30960   00B920  B4D8               	btfsc	status,2,c
 30961   00B922  0012               	return	
 30962   00B924  0A03               	xorlw	3	; case 6
 30963   00B926  0012               	return	
 30964   00B928                     __end_of_setOutputState:
 30965                           	callstack 0
 30966                           
 30967 ;; *************** function _setServoState *****************
 30968 ;; Defined at:
 30969 ;;		line 617 in file "../servo.c"
 30970 ;; Parameters:    Size  Location     Type
 30971 ;;  io              1    wreg     unsigned char 
 30972 ;;  action          1   49[BANK0 ] unsigned char 
 30973 ;; Auto vars:     Size  Location     Type
 30974 ;;  io              1   50[BANK0 ] unsigned char 
 30975 ;; Return value:  Size  Location     Type
 30976 ;;                  1    wreg      void 
 30977 ;; Registers used:
 30978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30979 ;; Tracked objects:
 30980 ;;		On entry : 0/0
 30981 ;;		On exit  : 0/0
 30982 ;;		Unchanged: 0/0
 30983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30984 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30988 ;;Total ram usage:        2 bytes
 30989 ;; Hardware stack levels used: 1
 30990 ;; Hardware stack levels required when called: 13
 30991 ;; This function calls:
 30992 ;;		_getNV
 30993 ;; This function is called by:
 30994 ;;		_APP_nvValueChanged
 30995 ;;		_setOutputState
 30996 ;; This function uses a non-reentrant model
 30997 ;;
 30998                           
 30999                           	psect	text113
 31000   009A60                     __ptext113:
 31001                           	callstack 0
 31002   009A60                     _setServoState:
 31003                           	callstack 13
 31004                           
 31005                           ;incstack = 0
 31006                           ;setServoState@io stored from wreg
 31007   009A60  0100               	movlb	0	; () banked
 31008   009A62  6F92               	movwf	setServoState@io& (0+255),b
 31009                           
 31010                           ;../servo.c: 618:     switch (action) {
 31011   009A64  D04A               	goto	l20180
 31012   009A66                     l20166:
 31013                           
 31014                           ; BSR set to: 0
 31015                           ;../servo.c: 620:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31016   009A66  5192               	movf	setServoState@io& (0+255),w,b
 31017   009A68  0D07               	mullw	7
 31018   009A6A  50F3               	movf	243,w,c
 31019   009A6C  0F11               	addlw	17
 31020   009A6E  EC53  F05F         	call	_getNV
 31021   009A72  0100               	movlb	0	; () banked
 31022   009A74  A18D               	btfss	?_getNV& (0+255),0,b
 31023   009A76  D00E               	goto	l20170
 31024                           
 31025                           ; BSR set to: 0
 31026                           ;../servo.c: 621:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31027   009A78  5192               	movf	setServoState@io& (0+255),w,b
 31028   009A7A  0D07               	mullw	7
 31029   009A7C  50F3               	movf	243,w,c
 31030   009A7E  0F13               	addlw	19
 31031   009A80  EC53  F05F         	call	_getNV
 31032   009A84  0100               	movlb	0	; () banked
 31033   009A86  5192               	movf	setServoState@io& (0+255),w,b
 31034   009A88  0F2B               	addlw	low _targetPos
 31035   009A8A  6ED9               	movwf	fsr2l,c
 31036   009A8C  6ADA               	clrf	fsr2h,c
 31037   009A8E  C08D  FFDF         	movff	?_getNV,indf2
 31038                           
 31039                           ;../servo.c: 622:             } else {
 31040   009A92  0012               	return	
 31041   009A94                     l20170:
 31042                           
 31043                           ; BSR set to: 0
 31044                           ;../servo.c: 623:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31045   009A94  5192               	movf	setServoState@io& (0+255),w,b
 31046   009A96  0D07               	mullw	7
 31047   009A98  50F3               	movf	243,w,c
 31048   009A9A  0F12               	addlw	18
 31049   009A9C  EC53  F05F         	call	_getNV
 31050   009AA0  0100               	movlb	0	; () banked
 31051   009AA2  5192               	movf	setServoState@io& (0+255),w,b
 31052   009AA4  0F2B               	addlw	low _targetPos
 31053   009AA6  6ED9               	movwf	fsr2l,c
 31054   009AA8  6ADA               	clrf	fsr2h,c
 31055   009AAA  C08D  FFDF         	movff	?_getNV,indf2
 31056   009AAE  0012               	return	
 31057   009AB0                     l20172:
 31058                           
 31059                           ; BSR set to: 0
 31060                           ;../servo.c: 627:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31061   009AB0  5192               	movf	setServoState@io& (0+255),w,b
 31062   009AB2  0D07               	mullw	7
 31063   009AB4  50F3               	movf	243,w,c
 31064   009AB6  0F11               	addlw	17
 31065   009AB8  EC53  F05F         	call	_getNV
 31066   009ABC  0100               	movlb	0	; () banked
 31067   009ABE  A18D               	btfss	?_getNV& (0+255),0,b
 31068   009AC0  D00E               	goto	l20176
 31069                           
 31070                           ; BSR set to: 0
 31071                           ;../servo.c: 628:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31072   009AC2  5192               	movf	setServoState@io& (0+255),w,b
 31073   009AC4  0D07               	mullw	7
 31074   009AC6  50F3               	movf	243,w,c
 31075   009AC8  0F12               	addlw	18
 31076   009ACA  EC53  F05F         	call	_getNV
 31077   009ACE  0100               	movlb	0	; () banked
 31078   009AD0  5192               	movf	setServoState@io& (0+255),w,b
 31079   009AD2  0F2B               	addlw	low _targetPos
 31080   009AD4  6ED9               	movwf	fsr2l,c
 31081   009AD6  6ADA               	clrf	fsr2h,c
 31082   009AD8  C08D  FFDF         	movff	?_getNV,indf2
 31083                           
 31084                           ;../servo.c: 629:             } else {
 31085   009ADC  0012               	return	
 31086   009ADE                     l20176:
 31087                           
 31088                           ; BSR set to: 0
 31089                           ;../servo.c: 630:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31090   009ADE  5192               	movf	setServoState@io& (0+255),w,b
 31091   009AE0  0D07               	mullw	7
 31092   009AE2  50F3               	movf	243,w,c
 31093   009AE4  0F13               	addlw	19
 31094   009AE6  EC53  F05F         	call	_getNV
 31095   009AEA  0100               	movlb	0	; () banked
 31096   009AEC  5192               	movf	setServoState@io& (0+255),w,b
 31097   009AEE  0F2B               	addlw	low _targetPos
 31098   009AF0  6ED9               	movwf	fsr2l,c
 31099   009AF2  6ADA               	clrf	fsr2h,c
 31100   009AF4  C08D  FFDF         	movff	?_getNV,indf2
 31101   009AF8  0012               	return	
 31102   009AFA                     l20180:
 31103   009AFA  0100               	movlb	0	; () banked
 31104   009AFC  5191               	movf	setServoState@action& (0+255),w,b
 31105                           
 31106                           ; Switch size 1, requested type "simple"
 31107                           ; Number of cases is 2, Range of values is 1 to 2
 31108                           ; switch strategies available:
 31109                           ; Name         Instructions Cycles
 31110                           ; simple_byte            7     4 (average)
 31111                           ;	Chosen strategy is simple_byte
 31112   009AFE  0A01               	xorlw	1	; case 1
 31113   009B00  B4D8               	btfsc	status,2,c
 31114   009B02  D7D6               	goto	l20172
 31115   009B04  0A03               	xorlw	3	; case 2
 31116   009B06  A4D8               	btfss	status,2,c
 31117   009B08  0012               	return	
 31118   009B0A  D7AD               	goto	l20166
 31119   009B0C                     __end_of_setServoState:
 31120                           	callstack 0
 31121                           
 31122 ;; *************** function _setMultiState *****************
 31123 ;; Defined at:
 31124 ;;		line 668 in file "../servo.c"
 31125 ;; Parameters:    Size  Location     Type
 31126 ;;  io              1    wreg     unsigned char 
 31127 ;;  action          1   49[BANK0 ] unsigned char 
 31128 ;; Auto vars:     Size  Location     Type
 31129 ;;  io              1   50[BANK0 ] unsigned char 
 31130 ;; Return value:  Size  Location     Type
 31131 ;;                  1    wreg      void 
 31132 ;; Registers used:
 31133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31134 ;; Tracked objects:
 31135 ;;		On entry : 0/0
 31136 ;;		On exit  : 0/0
 31137 ;;		Unchanged: 0/0
 31138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31139 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31142 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31143 ;;Total ram usage:        2 bytes
 31144 ;; Hardware stack levels used: 1
 31145 ;; Hardware stack levels required when called: 13
 31146 ;; This function calls:
 31147 ;;		_getNV
 31148 ;; This function is called by:
 31149 ;;		_APP_nvValueChanged
 31150 ;;		_setOutputState
 31151 ;; This function uses a non-reentrant model
 31152 ;;
 31153                           
 31154                           	psect	text114
 31155   008F08                     __ptext114:
 31156                           	callstack 0
 31157   008F08                     _setMultiState:
 31158                           	callstack 13
 31159                           
 31160                           ; BSR set to: 0
 31161                           ;incstack = 0
 31162                           ;setMultiState@io stored from wreg
 31163   008F08  0100               	movlb	0	; () banked
 31164   008F0A  6F92               	movwf	setMultiState@io& (0+255),b
 31165                           
 31166                           ;../servo.c: 669:     switch (action) {
 31167   008F0C  D056               	goto	l20252
 31168   008F0E                     l20238:
 31169                           
 31170                           ; BSR set to: 0
 31171                           ;../servo.c: 671:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31172   008F0E  5192               	movf	setMultiState@io& (0+255),w,b
 31173   008F10  0D07               	mullw	7
 31174   008F12  50F3               	movf	243,w,c
 31175   008F14  0F13               	addlw	19
 31176   008F16  EC53  F05F         	call	_getNV
 31177   008F1A  0100               	movlb	0	; () banked
 31178   008F1C  5192               	movf	setMultiState@io& (0+255),w,b
 31179   008F1E  0F2B               	addlw	low _targetPos
 31180   008F20  6ED9               	movwf	fsr2l,c
 31181   008F22  6ADA               	clrf	fsr2h,c
 31182   008F24  C08D  FFDF         	movff	?_getNV,indf2
 31183                           
 31184                           ;../servo.c: 672:             break;
 31185   008F28  0012               	return	
 31186   008F2A                     l20240:
 31187                           
 31188                           ; BSR set to: 0
 31189                           ;../servo.c: 674:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 31190   008F2A  5192               	movf	setMultiState@io& (0+255),w,b
 31191   008F2C  0D07               	mullw	7
 31192   008F2E  50F3               	movf	243,w,c
 31193   008F30  0F14               	addlw	20
 31194   008F32  EC53  F05F         	call	_getNV
 31195   008F36  0100               	movlb	0	; () banked
 31196   008F38  5192               	movf	setMultiState@io& (0+255),w,b
 31197   008F3A  0F2B               	addlw	low _targetPos
 31198   008F3C  6ED9               	movwf	fsr2l,c
 31199   008F3E  6ADA               	clrf	fsr2h,c
 31200   008F40  C08D  FFDF         	movff	?_getNV,indf2
 31201                           
 31202                           ;../servo.c: 675:             break;
 31203   008F44  0012               	return	
 31204   008F46                     l20242:
 31205                           
 31206                           ; BSR set to: 0
 31207                           ;../servo.c: 677:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 31208   008F46  5192               	movf	setMultiState@io& (0+255),w,b
 31209   008F48  0D07               	mullw	7
 31210   008F4A  50F3               	movf	243,w,c
 31211   008F4C  0F12               	addlw	18
 31212   008F4E  EC53  F05F         	call	_getNV
 31213   008F52  0100               	movlb	0	; () banked
 31214   008F54  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 31215   008F56  0012               	return	
 31216   008F58  518E               	movf	(?_getNV+1)& (0+255),w,b
 31217   008F5A  E104               	bnz	u20430
 31218   008F5C  0E03               	movlw	3
 31219   008F5E  5D8D               	subwf	?_getNV& (0+255),w,b
 31220   008F60  A0D8               	btfss	status,0,c
 31221   008F62  0012               	return	
 31222   008F64                     u20430:
 31223                           
 31224                           ; BSR set to: 0
 31225                           ;../servo.c: 678:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 31226   008F64  5192               	movf	setMultiState@io& (0+255),w,b
 31227   008F66  0D07               	mullw	7
 31228   008F68  50F3               	movf	243,w,c
 31229   008F6A  0F15               	addlw	21
 31230   008F6C  EC53  F05F         	call	_getNV
 31231   008F70  0100               	movlb	0	; () banked
 31232   008F72  5192               	movf	setMultiState@io& (0+255),w,b
 31233   008F74  0F2B               	addlw	low _targetPos
 31234   008F76  6ED9               	movwf	fsr2l,c
 31235   008F78  6ADA               	clrf	fsr2h,c
 31236   008F7A  C08D  FFDF         	movff	?_getNV,indf2
 31237   008F7E  0012               	return	
 31238   008F80                     l20246:
 31239                           
 31240                           ; BSR set to: 0
 31241                           ;../servo.c: 682:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 31242   008F80  5192               	movf	setMultiState@io& (0+255),w,b
 31243   008F82  0D07               	mullw	7
 31244   008F84  50F3               	movf	243,w,c
 31245   008F86  0F12               	addlw	18
 31246   008F88  EC53  F05F         	call	_getNV
 31247   008F8C  0100               	movlb	0	; () banked
 31248   008F8E  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 31249   008F90  0012               	return	
 31250   008F92  518E               	movf	(?_getNV+1)& (0+255),w,b
 31251   008F94  E104               	bnz	u20440
 31252   008F96  0E04               	movlw	4
 31253   008F98  5D8D               	subwf	?_getNV& (0+255),w,b
 31254   008F9A  A0D8               	btfss	status,0,c
 31255   008F9C  0012               	return	
 31256   008F9E                     u20440:
 31257                           
 31258                           ; BSR set to: 0
 31259                           ;../servo.c: 683:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 31260   008F9E  5192               	movf	setMultiState@io& (0+255),w,b
 31261   008FA0  0D07               	mullw	7
 31262   008FA2  50F3               	movf	243,w,c
 31263   008FA4  0F16               	addlw	22
 31264   008FA6  EC53  F05F         	call	_getNV
 31265   008FAA  0100               	movlb	0	; () banked
 31266   008FAC  5192               	movf	setMultiState@io& (0+255),w,b
 31267   008FAE  0F2B               	addlw	low _targetPos
 31268   008FB0  6ED9               	movwf	fsr2l,c
 31269   008FB2  6ADA               	clrf	fsr2h,c
 31270   008FB4  C08D  FFDF         	movff	?_getNV,indf2
 31271   008FB8  0012               	return	
 31272   008FBA                     l20252:
 31273   008FBA  0100               	movlb	0	; () banked
 31274   008FBC  5191               	movf	setMultiState@action& (0+255),w,b
 31275                           
 31276                           ; Switch size 1, requested type "simple"
 31277                           ; Number of cases is 4, Range of values is 0 to 3
 31278                           ; switch strategies available:
 31279                           ; Name         Instructions Cycles
 31280                           ; simple_byte           13     7 (average)
 31281                           ;	Chosen strategy is simple_byte
 31282   008FBE  0A00               	xorlw	0	; case 0
 31283   008FC0  B4D8               	btfsc	status,2,c
 31284   008FC2  D7A5               	goto	l20238
 31285   008FC4  0A01               	xorlw	1	; case 1
 31286   008FC6  B4D8               	btfsc	status,2,c
 31287   008FC8  D7B0               	goto	l20240
 31288   008FCA  0A03               	xorlw	3	; case 2
 31289   008FCC  B4D8               	btfsc	status,2,c
 31290   008FCE  D7BB               	goto	l20242
 31291   008FD0  0A01               	xorlw	1	; case 3
 31292   008FD2  A4D8               	btfss	status,2,c
 31293   008FD4  0012               	return	
 31294   008FD6  D7D4               	goto	l20246
 31295   008FD8                     __end_of_setMultiState:
 31296                           	callstack 0
 31297                           
 31298 ;; *************** function _setBounceState *****************
 31299 ;; Defined at:
 31300 ;;		line 644 in file "../servo.c"
 31301 ;; Parameters:    Size  Location     Type
 31302 ;;  io              1    wreg     unsigned char 
 31303 ;;  action          1   49[BANK0 ] unsigned char 
 31304 ;; Auto vars:     Size  Location     Type
 31305 ;;  io              1   50[BANK0 ] unsigned char 
 31306 ;; Return value:  Size  Location     Type
 31307 ;;                  1    wreg      void 
 31308 ;; Registers used:
 31309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31310 ;; Tracked objects:
 31311 ;;		On entry : 0/0
 31312 ;;		On exit  : 0/0
 31313 ;;		Unchanged: 0/0
 31314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31315 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31318 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31319 ;;Total ram usage:        2 bytes
 31320 ;; Hardware stack levels used: 1
 31321 ;; Hardware stack levels required when called: 13
 31322 ;; This function calls:
 31323 ;;		_getNV
 31324 ;; This function is called by:
 31325 ;;		_APP_nvValueChanged
 31326 ;;		_setOutputState
 31327 ;; This function uses a non-reentrant model
 31328 ;;
 31329                           
 31330                           	psect	text115
 31331   009B0C                     __ptext115:
 31332                           	callstack 0
 31333   009B0C                     _setBounceState:
 31334                           	callstack 13
 31335                           
 31336                           ; BSR set to: 0
 31337                           ;incstack = 0
 31338                           ;setBounceState@io stored from wreg
 31339   009B0C  0100               	movlb	0	; () banked
 31340   009B0E  6F92               	movwf	setBounceState@io& (0+255),b
 31341                           
 31342                           ;../servo.c: 645:     switch (action) {
 31343   009B10  D04A               	goto	l20222
 31344   009B12                     l20208:
 31345                           
 31346                           ; BSR set to: 0
 31347                           ;../servo.c: 647:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31348   009B12  5192               	movf	setBounceState@io& (0+255),w,b
 31349   009B14  0D07               	mullw	7
 31350   009B16  50F3               	movf	243,w,c
 31351   009B18  0F11               	addlw	17
 31352   009B1A  EC53  F05F         	call	_getNV
 31353   009B1E  0100               	movlb	0	; () banked
 31354   009B20  A18D               	btfss	?_getNV& (0+255),0,b
 31355   009B22  D00E               	goto	l20212
 31356                           
 31357                           ; BSR set to: 0
 31358                           ;../servo.c: 648:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31359   009B24  5192               	movf	setBounceState@io& (0+255),w,b
 31360   009B26  0D07               	mullw	7
 31361   009B28  50F3               	movf	243,w,c
 31362   009B2A  0F12               	addlw	18
 31363   009B2C  EC53  F05F         	call	_getNV
 31364   009B30  0100               	movlb	0	; () banked
 31365   009B32  5192               	movf	setBounceState@io& (0+255),w,b
 31366   009B34  0F2B               	addlw	low _targetPos
 31367   009B36  6ED9               	movwf	fsr2l,c
 31368   009B38  6ADA               	clrf	fsr2h,c
 31369   009B3A  C08D  FFDF         	movff	?_getNV,indf2
 31370                           
 31371                           ;../servo.c: 649:             } else {
 31372   009B3E  0012               	return	
 31373   009B40                     l20212:
 31374                           
 31375                           ; BSR set to: 0
 31376                           ;../servo.c: 650:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31377   009B40  5192               	movf	setBounceState@io& (0+255),w,b
 31378   009B42  0D07               	mullw	7
 31379   009B44  50F3               	movf	243,w,c
 31380   009B46  0F13               	addlw	19
 31381   009B48  EC53  F05F         	call	_getNV
 31382   009B4C  0100               	movlb	0	; () banked
 31383   009B4E  5192               	movf	setBounceState@io& (0+255),w,b
 31384   009B50  0F2B               	addlw	low _targetPos
 31385   009B52  6ED9               	movwf	fsr2l,c
 31386   009B54  6ADA               	clrf	fsr2h,c
 31387   009B56  C08D  FFDF         	movff	?_getNV,indf2
 31388   009B5A  0012               	return	
 31389   009B5C                     l20214:
 31390                           
 31391                           ; BSR set to: 0
 31392                           ;../servo.c: 654:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31393   009B5C  5192               	movf	setBounceState@io& (0+255),w,b
 31394   009B5E  0D07               	mullw	7
 31395   009B60  50F3               	movf	243,w,c
 31396   009B62  0F11               	addlw	17
 31397   009B64  EC53  F05F         	call	_getNV
 31398   009B68  0100               	movlb	0	; () banked
 31399   009B6A  A18D               	btfss	?_getNV& (0+255),0,b
 31400   009B6C  D00E               	goto	l20218
 31401                           
 31402                           ; BSR set to: 0
 31403                           ;../servo.c: 655:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31404   009B6E  5192               	movf	setBounceState@io& (0+255),w,b
 31405   009B70  0D07               	mullw	7
 31406   009B72  50F3               	movf	243,w,c
 31407   009B74  0F13               	addlw	19
 31408   009B76  EC53  F05F         	call	_getNV
 31409   009B7A  0100               	movlb	0	; () banked
 31410   009B7C  5192               	movf	setBounceState@io& (0+255),w,b
 31411   009B7E  0F2B               	addlw	low _targetPos
 31412   009B80  6ED9               	movwf	fsr2l,c
 31413   009B82  6ADA               	clrf	fsr2h,c
 31414   009B84  C08D  FFDF         	movff	?_getNV,indf2
 31415                           
 31416                           ;../servo.c: 656:             } else {
 31417   009B88  0012               	return	
 31418   009B8A                     l20218:
 31419                           
 31420                           ; BSR set to: 0
 31421                           ;../servo.c: 657:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31422   009B8A  5192               	movf	setBounceState@io& (0+255),w,b
 31423   009B8C  0D07               	mullw	7
 31424   009B8E  50F3               	movf	243,w,c
 31425   009B90  0F12               	addlw	18
 31426   009B92  EC53  F05F         	call	_getNV
 31427   009B96  0100               	movlb	0	; () banked
 31428   009B98  5192               	movf	setBounceState@io& (0+255),w,b
 31429   009B9A  0F2B               	addlw	low _targetPos
 31430   009B9C  6ED9               	movwf	fsr2l,c
 31431   009B9E  6ADA               	clrf	fsr2h,c
 31432   009BA0  C08D  FFDF         	movff	?_getNV,indf2
 31433   009BA4  0012               	return	
 31434   009BA6                     l20222:
 31435   009BA6  0100               	movlb	0	; () banked
 31436   009BA8  5191               	movf	setBounceState@action& (0+255),w,b
 31437                           
 31438                           ; Switch size 1, requested type "simple"
 31439                           ; Number of cases is 2, Range of values is 1 to 2
 31440                           ; switch strategies available:
 31441                           ; Name         Instructions Cycles
 31442                           ; simple_byte            7     4 (average)
 31443                           ;	Chosen strategy is simple_byte
 31444   009BAA  0A01               	xorlw	1	; case 1
 31445   009BAC  B4D8               	btfsc	status,2,c
 31446   009BAE  D7D6               	goto	l20214
 31447   009BB0  0A03               	xorlw	3	; case 2
 31448   009BB2  A4D8               	btfss	status,2,c
 31449   009BB4  0012               	return	
 31450   009BB6  D7AD               	goto	l20208
 31451   009BB8                     __end_of_setBounceState:
 31452                           	callstack 0
 31453                           
 31454 ;; *************** function _needsStarting *****************
 31455 ;; Defined at:
 31456 ;;		line 182 in file "../outputs.c"
 31457 ;; Parameters:    Size  Location     Type
 31458 ;;  io              1    wreg     unsigned char 
 31459 ;;  act             1   45[BANK0 ] unsigned char 
 31460 ;;  type            1   46[BANK0 ] unsigned char 
 31461 ;; Auto vars:     Size  Location     Type
 31462 ;;  io              1   49[BANK0 ] unsigned char 
 31463 ;; Return value:  Size  Location     Type
 31464 ;;                  1    wreg      enum E12767
 31465 ;; Registers used:
 31466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31467 ;; Tracked objects:
 31468 ;;		On entry : 0/0
 31469 ;;		On exit  : 0/0
 31470 ;;		Unchanged: 0/0
 31471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31472 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31475 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31476 ;;Total ram usage:        5 bytes
 31477 ;; Hardware stack levels used: 1
 31478 ;; Hardware stack levels required when called: 12
 31479 ;; This function calls:
 31480 ;;		Nothing
 31481 ;; This function is called by:
 31482 ;;		_processActions
 31483 ;; This function uses a non-reentrant model
 31484 ;;
 31485                           
 31486                           	psect	text116
 31487   00A9C6                     __ptext116:
 31488                           	callstack 0
 31489   00A9C6                     _needsStarting:
 31490                           	callstack 16
 31491                           
 31492                           ; BSR set to: 0
 31493                           ;incstack = 0
 31494                           ;needsStarting@io stored from wreg
 31495   00A9C6  0100               	movlb	0	; () banked
 31496   00A9C8  6F91               	movwf	needsStarting@io& (0+255),b
 31497                           
 31498                           ;../outputs.c: 183:     switch(type) {
 31499   00A9CA  D02B               	goto	l21586
 31500   00A9CC                     l21566:
 31501                           
 31502                           ; BSR set to: 0
 31503                           ;../outputs.c: 186:             return FALSE;
 31504   00A9CC  0E00               	movlw	0
 31505   00A9CE  0012               	return	
 31506   00A9D0                     l21570:
 31507                           
 31508                           ; BSR set to: 0
 31509                           ;../outputs.c: 195:             return (pulseDelays[io] == 0);
 31510   00A9D0  0EA4               	movlw	low _pulseDelays
 31511   00A9D2  2591               	addwf	needsStarting@io& (0+255),w,b
 31512   00A9D4  6ED9               	movwf	fsr2l,c
 31513   00A9D6  6ADA               	clrf	fsr2h,c
 31514   00A9D8  0E02               	movlw	high _pulseDelays
 31515   00A9DA  22DA               	addwfc	fsr2h,f,c
 31516   00A9DC  50DF               	movf	indf2,w,c
 31517   00A9DE  A4D8               	btfss	status,2,c
 31518   00A9E0  D002               	goto	u22290
 31519   00A9E2  0E01               	movlw	1
 31520   00A9E4  0012               	return	
 31521   00A9E6                     u22290:
 31522   00A9E6  0E00               	movlw	0
 31523   00A9E8  0012               	return	
 31524   00A9EA                     l21574:
 31525                           
 31526                           ; BSR set to: 0
 31527                           ;../outputs.c: 205:             if (targetPos[io] == currentPos[io]) {
 31528   00A9EA  0E30               	movlw	low _currentPos
 31529   00A9EC  2591               	addwf	needsStarting@io& (0+255),w,b
 31530   00A9EE  6ED9               	movwf	fsr2l,c
 31531   00A9F0  6ADA               	clrf	fsr2h,c
 31532   00A9F2  0E01               	movlw	high _currentPos
 31533   00A9F4  22DA               	addwfc	fsr2h,f,c
 31534   00A9F6  5191               	movf	needsStarting@io& (0+255),w,b
 31535   00A9F8  0F2B               	addlw	low _targetPos
 31536   00A9FA  6EE1               	movwf	fsr1l,c
 31537   00A9FC  6AE2               	clrf	fsr1h,c
 31538   00A9FE  50DE               	movf	postinc2,w,c
 31539   00AA00  18E6               	xorwf	postinc1,w,c
 31540   00AA02  B4D8               	btfsc	status,2,c
 31541   00AA04  D7E3               	goto	l21566
 31542                           
 31543                           ; BSR set to: 0
 31544                           ;../outputs.c: 209:             return (servoState[io] != SS_MOVING);
 31545   00AA06  0E10               	movlw	low _servoState
 31546   00AA08  2591               	addwf	needsStarting@io& (0+255),w,b
 31547   00AA0A  6ED9               	movwf	fsr2l,c
 31548   00AA0C  6ADA               	clrf	fsr2h,c
 31549   00AA0E  0E01               	movlw	high _servoState
 31550   00AA10  22DA               	addwfc	fsr2h,f,c
 31551   00AA12  0E02               	movlw	2
 31552   00AA14  18DE               	xorwf	postinc2,w,c
 31553   00AA16  B4D8               	btfsc	status,2,c
 31554   00AA18  D002               	goto	u22320
 31555   00AA1A  0E01               	movlw	1
 31556   00AA1C  0012               	return	
 31557   00AA1E                     u22320:
 31558   00AA1E  0E00               	movlw	0
 31559   00AA20  0012               	return	
 31560   00AA22                     l21586:
 31561   00AA22  0100               	movlb	0	; () banked
 31562   00AA24  518E               	movf	needsStarting@type& (0+255),w,b
 31563                           
 31564                           ; Switch size 1, requested type "simple"
 31565                           ; Number of cases is 5, Range of values is 0 to 4
 31566                           ; switch strategies available:
 31567                           ; Name         Instructions Cycles
 31568                           ; simple_byte           16     9 (average)
 31569                           ;	Chosen strategy is simple_byte
 31570   00AA26  0A00               	xorlw	0	; case 0
 31571   00AA28  B4D8               	btfsc	status,2,c
 31572   00AA2A  D7D0               	goto	l21566
 31573   00AA2C  0A01               	xorlw	1	; case 1
 31574   00AA2E  B4D8               	btfsc	status,2,c
 31575   00AA30  D7CF               	goto	l21570
 31576   00AA32  0A03               	xorlw	3	; case 2
 31577   00AA34  B4D8               	btfsc	status,2,c
 31578   00AA36  D7D9               	goto	l21574
 31579   00AA38  0A01               	xorlw	1	; case 3
 31580   00AA3A  B4D8               	btfsc	status,2,c
 31581   00AA3C  D7D6               	goto	l21574
 31582   00AA3E  0A07               	xorlw	7	; case 4
 31583   00AA40  B4D8               	btfsc	status,2,c
 31584   00AA42  D7D3               	goto	l21574
 31585                           
 31586                           ; BSR set to: 0
 31587                           ;../outputs.c: 212:     return TRUE;
 31588   00AA44  0E01               	movlw	1
 31589                           
 31590                           ; BSR set to: 0
 31591   00AA46  0012               	return		;funcret
 31592   00AA48                     __end_of_needsStarting:
 31593                           	callstack 0
 31594                           
 31595 ;; *************** function _getTwoAction *****************
 31596 ;; Defined at:
 31597 ;;		line 414 in file "../event_consumerDualActionQueue.c"
 31598 ;; Parameters:    Size  Location     Type
 31599 ;;		None
 31600 ;; Auto vars:     Size  Location     Type
 31601 ;;		None
 31602 ;; Return value:  Size  Location     Type
 31603 ;;                  1    wreg      unsigned char 
 31604 ;; Registers used:
 31605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31606 ;; Tracked objects:
 31607 ;;		On entry : 0/0
 31608 ;;		On exit  : 0/0
 31609 ;;		Unchanged: 0/0
 31610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31615 ;;Total ram usage:        0 bytes
 31616 ;; Hardware stack levels used: 1
 31617 ;; Hardware stack levels required when called: 13
 31618 ;; This function calls:
 31619 ;;		_peekTwoActionQueue
 31620 ;; This function is called by:
 31621 ;;		_processActions
 31622 ;; This function uses a non-reentrant model
 31623 ;;
 31624                           
 31625                           	psect	text117
 31626   00C820                     __ptext117:
 31627                           	callstack 0
 31628   00C820                     _getTwoAction:
 31629                           	callstack 15
 31630                           
 31631                           ;../event_consumerDualActionQueue.c: 415:  return peekTwoActionQueue(0);
 31632                           
 31633                           ; BSR set to: 0
 31634                           ;incstack = 0
 31635   00C820  0E00               	movlw	0
 31636   00C822  ECD6  F053         	call	_peekTwoActionQueue
 31637   00C826  0012               	return		;funcret
 31638   00C828                     __end_of_getTwoAction:
 31639                           	callstack 0
 31640                           
 31641 ;; *************** function _peekTwoActionQueue *****************
 31642 ;; Defined at:
 31643 ;;		line 453 in file "../event_consumerDualActionQueue.c"
 31644 ;; Parameters:    Size  Location     Type
 31645 ;;  index           1    wreg     unsigned char 
 31646 ;; Auto vars:     Size  Location     Type
 31647 ;;  index           1   46[BANK0 ] unsigned char 
 31648 ;;  qty             1   45[BANK0 ] unsigned char 
 31649 ;; Return value:  Size  Location     Type
 31650 ;;                  1    wreg      unsigned char 
 31651 ;; Registers used:
 31652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31653 ;; Tracked objects:
 31654 ;;		On entry : 0/0
 31655 ;;		On exit  : 0/0
 31656 ;;		Unchanged: 0/0
 31657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31661 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31662 ;;Total ram usage:        2 bytes
 31663 ;; Hardware stack levels used: 1
 31664 ;; Hardware stack levels required when called: 12
 31665 ;; This function calls:
 31666 ;;		Nothing
 31667 ;; This function is called by:
 31668 ;;		_getTwoAction
 31669 ;;		_processActions
 31670 ;; This function uses a non-reentrant model
 31671 ;;
 31672                           
 31673                           	psect	text118
 31674   00A7AC                     __ptext118:
 31675                           	callstack 0
 31676   00A7AC                     _peekTwoActionQueue:
 31677                           	callstack 16
 31678                           
 31679                           ;incstack = 0
 31680                           ;peekTwoActionQueue@index stored from wreg
 31681   00A7AC  0100               	movlb	0	; () banked
 31682   00A7AE  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 31683                           
 31684                           ;../event_consumerDualActionQueue.c: 454:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 455:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31685   00A7B0  0100               	movlb	0	; () banked
 31686   00A7B2  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31687   00A7B4  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 31688   00A7B6  0B07               	andlw	7
 31689   00A7B8  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31690                           
 31691                           ;../event_consumerDualActionQueue.c: 456:     if (index < qty) {
 31692   00A7BA  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31693   00A7BC  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31694   00A7BE  B0D8               	btfsc	status,0,c
 31695   00A7C0  D019               	goto	l20660
 31696                           
 31697                           ; BSR set to: 0
 31698                           ;../event_consumerDualActionQueue.c: 457:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 31699   00A7C2  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31700   00A7C4  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 31701   00A7C6  A4D8               	btfss	status,2,c
 31702   00A7C8  D002               	goto	l20648
 31703   00A7CA                     u21200:
 31704                           
 31705                           ; BSR set to: 0
 31706   00A7CA  0E00               	movlw	0
 31707   00A7CC  0012               	return	
 31708   00A7CE                     l20648:
 31709                           
 31710                           ; BSR set to: 0
 31711                           ;../event_consumerDualActionQueue.c: 458:         index += expeditedReadIndex;
 31712   00A7CE  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31713   00A7D0  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31714                           
 31715                           ;../event_consumerDualActionQueue.c: 459:         if (index >= 8) {
 31716   00A7D2  0E07               	movlw	7
 31717   00A7D4  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31718   00A7D6  D002               	goto	l547
 31719                           
 31720                           ; BSR set to: 0
 31721                           ;../event_consumerDualActionQueue.c: 460:             index -= 8;
 31722   00A7D8  0E08               	movlw	8
 31723   00A7DA  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31724   00A7DC                     l547:
 31725                           
 31726                           ; BSR set to: 0
 31727                           ;../event_consumerDualActionQueue.c: 462:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 31728   00A7DC  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31729   00A7DE  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31730   00A7E0  B4D8               	btfsc	status,2,c
 31731   00A7E2  D7F3               	goto	u21200
 31732                           
 31733                           ; BSR set to: 0
 31734                           ;../event_consumerDualActionQueue.c: 463:         return expeditedQueueBuf[index];
 31735   00A7E4  0EC4               	movlw	low _expeditedQueueBuf
 31736   00A7E6  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31737   00A7E8  6ED9               	movwf	fsr2l,c
 31738   00A7EA  6ADA               	clrf	fsr2h,c
 31739   00A7EC  0E02               	movlw	high _expeditedQueueBuf
 31740   00A7EE  22DA               	addwfc	fsr2h,f,c
 31741   00A7F0  50DF               	movf	indf2,w,c
 31742   00A7F2  0012               	return	
 31743   00A7F4                     l20660:
 31744                           
 31745                           ; BSR set to: 0
 31746                           ;../event_consumerDualActionQueue.c: 465:     index -= qty;
 31747   00A7F4  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31748   00A7F6  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31749                           
 31750                           ;../event_consumerDualActionQueue.c: 466:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31751   00A7F8  51CD               	movf	_normalReadIndex& (0+255),w,b
 31752   00A7FA  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 31753   00A7FC  0B3F               	andlw	63
 31754   00A7FE  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31755                           
 31756                           ;../event_consumerDualActionQueue.c: 467:     if (index < qty) {
 31757   00A800  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31758   00A802  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31759   00A804  B0D8               	btfsc	status,0,c
 31760   00A806  D7E1               	goto	u21200
 31761                           
 31762                           ; BSR set to: 0
 31763                           ;../event_consumerDualActionQueue.c: 468:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 31764   00A808  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31765   00A80A  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 31766   00A80C  B4D8               	btfsc	status,2,c
 31767   00A80E  D7DD               	goto	u21200
 31768                           
 31769                           ; BSR set to: 0
 31770                           ;../event_consumerDualActionQueue.c: 469:         index += normalReadIndex;
 31771   00A810  51CD               	movf	_normalReadIndex& (0+255),w,b
 31772   00A812  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31773                           
 31774                           ;../event_consumerDualActionQueue.c: 470:         if (index >= 64) {
 31775   00A814  0E3F               	movlw	63
 31776   00A816  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31777   00A818  D002               	goto	l551
 31778                           
 31779                           ; BSR set to: 0
 31780                           ;../event_consumerDualActionQueue.c: 471:             index -= 64;
 31781   00A81A  0E40               	movlw	64
 31782   00A81C  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31783   00A81E                     l551:
 31784                           
 31785                           ; BSR set to: 0
 31786                           ;../event_consumerDualActionQueue.c: 473:         if (index == normalWriteIndex) return 
      +                          0;
 31787   00A81E  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31788   00A820  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31789   00A822  B4D8               	btfsc	status,2,c
 31790   00A824  D7D2               	goto	u21200
 31791                           
 31792                           ; BSR set to: 0
 31793                           ;../event_consumerDualActionQueue.c: 474:         return normalQueueBuf[index];
 31794   00A826  0E80               	movlw	low _normalQueueBuf
 31795   00A828  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31796   00A82A  6ED9               	movwf	fsr2l,c
 31797   00A82C  6ADA               	clrf	fsr2h,c
 31798   00A82E  0E04               	movlw	high _normalQueueBuf
 31799   00A830  22DA               	addwfc	fsr2h,f,c
 31800   00A832  50DF               	movf	indf2,w,c
 31801                           
 31802                           ; BSR set to: 0
 31803   00A834  0012               	return		;funcret
 31804   00A836                     __end_of_peekTwoActionQueue:
 31805                           	callstack 0
 31806                           
 31807 ;; *************** function _finaliseOutput *****************
 31808 ;; Defined at:
 31809 ;;		line 253 in file "../outputs.c"
 31810 ;; Parameters:    Size  Location     Type
 31811 ;;  io              1    wreg     unsigned char 
 31812 ;;  type            1   45[BANK0 ] unsigned char 
 31813 ;; Auto vars:     Size  Location     Type
 31814 ;;  io              1    0[COMRAM] unsigned char 
 31815 ;; Return value:  Size  Location     Type
 31816 ;;                  1    wreg      void 
 31817 ;; Registers used:
 31818 ;;		wreg, status,2, status,0
 31819 ;; Tracked objects:
 31820 ;;		On entry : 0/0
 31821 ;;		On exit  : 0/0
 31822 ;;		Unchanged: 0/0
 31823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31824 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31827 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31828 ;;Total ram usage:        1 bytes
 31829 ;; Hardware stack levels used: 1
 31830 ;; Hardware stack levels required when called: 12
 31831 ;; This function calls:
 31832 ;;		Nothing
 31833 ;; This function is called by:
 31834 ;;		_processActions
 31835 ;; This function uses a non-reentrant model
 31836 ;;
 31837                           
 31838                           	psect	text119
 31839   00C828                     __ptext119:
 31840                           	callstack 0
 31841   00C828                     _finaliseOutput:
 31842                           	callstack 16
 31843                           
 31844                           ;../outputs.c: 254:     switch(type) {
 31845                           
 31846                           ; BSR set to: 0
 31847                           ;incstack = 0
 31848   00C828  0100               	movlb	0	; () banked
 31849   00C82A  518D               	movf	finaliseOutput@type& (0+255),w,b
 31850                           
 31851                           ; Switch size 1, requested type "simple"
 31852                           ; Number of cases is 1, Range of values is 1 to 1
 31853                           ; switch strategies available:
 31854                           ; Name         Instructions Cycles
 31855                           ; simple_byte            4     3 (average)
 31856                           ;	Chosen strategy is simple_byte
 31857   00C82C  0A01               	xorlw	1	; case 1
 31858   00C82E  0012               	return	
 31859   00C830                     __end_of_finaliseOutput:
 31860                           	callstack 0
 31861                           
 31862 ;; *************** function _doWait *****************
 31863 ;; Defined at:
 31864 ;;		line 337 in file "../universalEvents.c"
 31865 ;; Parameters:    Size  Location     Type
 31866 ;;  duration        2   61[BANK0 ] unsigned short 
 31867 ;; Auto vars:     Size  Location     Type
 31868 ;;		None
 31869 ;; Return value:  Size  Location     Type
 31870 ;;                  1    wreg      void 
 31871 ;; Registers used:
 31872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31873 ;; Tracked objects:
 31874 ;;		On entry : 0/0
 31875 ;;		On exit  : 0/0
 31876 ;;		Unchanged: 0/0
 31877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31881 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31882 ;;Total ram usage:        6 bytes
 31883 ;; Hardware stack levels used: 1
 31884 ;; Hardware stack levels required when called: 14
 31885 ;; This function calls:
 31886 ;;		___lmul
 31887 ;;		_doneTwoAction
 31888 ;;		_tickGet
 31889 ;; This function is called by:
 31890 ;;		_processActions
 31891 ;; This function uses a non-reentrant model
 31892 ;;
 31893                           
 31894                           	psect	text120
 31895   009EE6                     __ptext120:
 31896                           	callstack 0
 31897   009EE6                     _doWait:
 31898                           	callstack 14
 31899                           
 31900                           ;../universalEvents.c: 339:     if (startWait.val == 0) {
 31901                           
 31902                           ; BSR set to: 0
 31903                           ;incstack = 0
 31904   009EE6  0101               	movlb	1	; () banked
 31905   009EE8  5154               	movf	_startWait& (0+255),w,b
 31906   009EEA  1155               	iorwf	(_startWait+1)& (0+255),w,b
 31907   009EEC  1156               	iorwf	(_startWait+2)& (0+255),w,b
 31908   009EEE  1157               	iorwf	(_startWait+3)& (0+255),w,b
 31909   009EF0  A4D8               	btfss	status,2,c
 31910   009EF2  D00B               	goto	l21538
 31911                           
 31912                           ; BSR set to: 1
 31913                           ;../universalEvents.c: 340:         startWait.val = tickGet();
 31914   009EF4  ECE5  F05B         	call	_tickGet	;wreg free
 31915   009EF8  C08D  F154         	movff	?_tickGet,_startWait
 31916   009EFC  C08E  F155         	movff	?_tickGet+1,_startWait+1
 31917   009F00  C08F  F156         	movff	?_tickGet+2,_startWait+2
 31918   009F04  C090  F157         	movff	?_tickGet+3,_startWait+3
 31919   009F08  0012               	return	
 31920   009F0A                     l21538:
 31921                           
 31922                           ; BSR set to: 1
 31923                           ;../universalEvents.c: 344:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 31924   009F0A  ECE5  F05B         	call	_tickGet	;wreg free
 31925   009F0E  0101               	movlb	1	; () banked
 31926   009F10  5154               	movf	_startWait& (0+255),w,b
 31927   009F12  0100               	movlb	0	; () banked
 31928   009F14  5D8D               	subwf	?_tickGet& (0+255),w,b
 31929   009F16  6F9F               	movwf	??_doWait& (0+255),b
 31930   009F18  0101               	movlb	1	; () banked
 31931   009F1A  5155               	movf	(_startWait+1)& (0+255),w,b
 31932   009F1C  0100               	movlb	0	; () banked
 31933   009F1E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 31934   009F20  6FA0               	movwf	(??_doWait+1)& (0+255),b
 31935   009F22  0101               	movlb	1	; () banked
 31936   009F24  5156               	movf	(_startWait+2)& (0+255),w,b
 31937   009F26  0100               	movlb	0	; () banked
 31938   009F28  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 31939   009F2A  6FA1               	movwf	(??_doWait+2)& (0+255),b
 31940   009F2C  0101               	movlb	1	; () banked
 31941   009F2E  5157               	movf	(_startWait+3)& (0+255),w,b
 31942   009F30  0100               	movlb	0	; () banked
 31943   009F32  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 31944   009F34  6FA2               	movwf	(??_doWait+3)& (0+255),b
 31945   009F36  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 31946   009F3A  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 31947   009F3E  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 31948   009F40  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 31949   009F42  0E6A               	movlw	106
 31950   009F44  6F95               	movwf	___lmul@multiplicand& (0+255),b
 31951   009F46  0E18               	movlw	24
 31952   009F48  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31953   009F4A  0E00               	movlw	0
 31954   009F4C  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31955   009F4E  0E00               	movlw	0
 31956   009F50  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31957   009F52  EC11  F05C         	call	___lmul	;wreg free
 31958   009F56  0100               	movlb	0	; () banked
 31959   009F58  519F               	movf	??_doWait& (0+255),w,b
 31960   009F5A  5D91               	subwf	?___lmul& (0+255),w,b
 31961   009F5C  51A0               	movf	(??_doWait+1)& (0+255),w,b
 31962   009F5E  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 31963   009F60  51A1               	movf	(??_doWait+2)& (0+255),w,b
 31964   009F62  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 31965   009F64  51A2               	movf	(??_doWait+3)& (0+255),w,b
 31966   009F66  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 31967   009F68  B0D8               	btfsc	status,0,c
 31968   009F6A  0012               	return	
 31969                           
 31970                           ; BSR set to: 0
 31971                           ;../universalEvents.c: 345:             doneTwoAction();
 31972   009F6C  EC21  F064         	call	_doneTwoAction	;wreg free
 31973                           
 31974                           ;../universalEvents.c: 346:             startWait.val = 0;
 31975   009F70  0E00               	movlw	0
 31976   009F72  0101               	movlb	1	; () banked
 31977   009F74  6F54               	movwf	_startWait& (0+255),b
 31978   009F76  0E00               	movlw	0
 31979   009F78  6F55               	movwf	(_startWait+1)& (0+255),b
 31980   009F7A  0E00               	movlw	0
 31981   009F7C  6F56               	movwf	(_startWait+2)& (0+255),b
 31982   009F7E  0E00               	movlw	0
 31983   009F80  6F57               	movwf	(_startWait+3)& (0+255),b
 31984   009F82  0012               	return		;funcret
 31985   009F84                     __end_of_doWait:
 31986                           	callstack 0
 31987                           
 31988 ;; *************** function _doneTwoAction *****************
 31989 ;; Defined at:
 31990 ;;		line 444 in file "../event_consumerDualActionQueue.c"
 31991 ;; Parameters:    Size  Location     Type
 31992 ;;		None
 31993 ;; Auto vars:     Size  Location     Type
 31994 ;;		None
 31995 ;; Return value:  Size  Location     Type
 31996 ;;                  1    wreg      void 
 31997 ;; Registers used:
 31998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31999 ;; Tracked objects:
 32000 ;;		On entry : 0/0
 32001 ;;		On exit  : 0/0
 32002 ;;		Unchanged: 0/0
 32003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32008 ;;Total ram usage:        0 bytes
 32009 ;; Hardware stack levels used: 1
 32010 ;; Hardware stack levels required when called: 13
 32011 ;; This function calls:
 32012 ;;		_popTwoAction
 32013 ;; This function is called by:
 32014 ;;		_processActions
 32015 ;;		_doWait
 32016 ;; This function uses a non-reentrant model
 32017 ;;
 32018                           
 32019                           	psect	text121
 32020   00C842                     __ptext121:
 32021                           	callstack 0
 32022   00C842                     _doneTwoAction:
 32023                           	callstack 15
 32024                           
 32025                           ;../event_consumerDualActionQueue.c: 445:  popTwoAction();
 32026                           
 32027                           ;incstack = 0
 32028   00C842  EC57  F061         	call	_popTwoAction	;wreg free
 32029   00C846  0012               	return		;funcret
 32030   00C848                     __end_of_doneTwoAction:
 32031                           	callstack 0
 32032                           
 32033 ;; *************** function _popTwoAction *****************
 32034 ;; Defined at:
 32035 ;;		line 423 in file "../event_consumerDualActionQueue.c"
 32036 ;; Parameters:    Size  Location     Type
 32037 ;;		None
 32038 ;; Auto vars:     Size  Location     Type
 32039 ;;  ret             1    0        unsigned char 
 32040 ;; Return value:  Size  Location     Type
 32041 ;;                  1    wreg      unsigned char 
 32042 ;; Registers used:
 32043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32044 ;; Tracked objects:
 32045 ;;		On entry : 0/0
 32046 ;;		On exit  : 0/0
 32047 ;;		Unchanged: 0/0
 32048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32053 ;;Total ram usage:        0 bytes
 32054 ;; Hardware stack levels used: 1
 32055 ;; Hardware stack levels required when called: 12
 32056 ;; This function calls:
 32057 ;;		Nothing
 32058 ;; This function is called by:
 32059 ;;		_doneTwoAction
 32060 ;; This function uses a non-reentrant model
 32061 ;;
 32062                           
 32063                           	psect	text122
 32064   00C2AE                     __ptext122:
 32065                           	callstack 0
 32066   00C2AE                     _popTwoAction:
 32067                           	callstack 15
 32068                           
 32069                           ;../event_consumerDualActionQueue.c: 424:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 426:  if (expeditedWriteIndex != expeditedReadIndex) {
 32070                           
 32071                           ;incstack = 0
 32072   00C2AE  0100               	movlb	0	; () banked
 32073   00C2B0  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32074   00C2B2  19CA               	xorwf	_expeditedWriteIndex& (0+255),w,b
 32075   00C2B4  B4D8               	btfsc	status,2,c
 32076   00C2B6  D007               	goto	l20100
 32077                           
 32078                           ; BSR set to: 0
 32079                           
 32080                           ; BSR set to: 0
 32081   00C2B8  2BCB               	incf	_expeditedReadIndex& (0+255),f,b
 32082                           
 32083                           ; BSR set to: 0
 32084                           ;../event_consumerDualActionQueue.c: 429:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 32085   00C2BA  0E07               	movlw	7
 32086   00C2BC  65CB               	cpfsgt	_expeditedReadIndex& (0+255),b
 32087   00C2BE  0012               	return	
 32088                           
 32089                           ; BSR set to: 0
 32090   00C2C0  0E00               	movlw	0
 32091   00C2C2  6FCB               	movwf	_expeditedReadIndex& (0+255),b
 32092   00C2C4  0012               	return	
 32093   00C2C6                     l20100:
 32094                           
 32095                           ; BSR set to: 0
 32096                           ;../event_consumerDualActionQueue.c: 433:  if (normalWriteIndex == normalReadIndex) {
 32097   00C2C6  51CD               	movf	_normalReadIndex& (0+255),w,b
 32098   00C2C8  19CC               	xorwf	_normalWriteIndex& (0+255),w,b
 32099   00C2CA  B4D8               	btfsc	status,2,c
 32100   00C2CC  0012               	return	
 32101                           
 32102                           ; BSR set to: 0
 32103                           
 32104                           ; BSR set to: 0
 32105   00C2CE  2BCD               	incf	_normalReadIndex& (0+255),f,b
 32106                           
 32107                           ; BSR set to: 0
 32108                           ;../event_consumerDualActionQueue.c: 437:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 32109   00C2D0  0E3F               	movlw	63
 32110   00C2D2  65CD               	cpfsgt	_normalReadIndex& (0+255),b
 32111   00C2D4  0012               	return	
 32112                           
 32113                           ; BSR set to: 0
 32114   00C2D6  0E00               	movlw	0
 32115   00C2D8  6FCD               	movwf	_normalReadIndex& (0+255),b
 32116                           
 32117                           ; BSR set to: 0
 32118   00C2DA  0012               	return		;funcret
 32119   00C2DC                     __end_of_popTwoAction:
 32120                           	callstack 0
 32121                           
 32122 ;; *************** function _doSOD *****************
 32123 ;; Defined at:
 32124 ;;		line 387 in file "../universalEvents.c"
 32125 ;; Parameters:    Size  Location     Type
 32126 ;;		None
 32127 ;; Auto vars:     Size  Location     Type
 32128 ;;		None
 32129 ;; Return value:  Size  Location     Type
 32130 ;;                  1    wreg      void 
 32131 ;; Registers used:
 32132 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32133 ;; Tracked objects:
 32134 ;;		On entry : 0/0
 32135 ;;		On exit  : 0/0
 32136 ;;		Unchanged: 0/0
 32137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32142 ;;Total ram usage:        0 bytes
 32143 ;; Hardware stack levels used: 1
 32144 ;; Hardware stack levels required when called: 13
 32145 ;; This function calls:
 32146 ;;		_findServiceIndex
 32147 ;;		_startTimedResponse
 32148 ;; This function is called by:
 32149 ;;		_processActions
 32150 ;; This function uses a non-reentrant model
 32151 ;;
 32152                           
 32153                           	psect	text123
 32154   00C714                     __ptext123:
 32155                           	callstack 0
 32156   00C714                     _doSOD:
 32157                           	callstack 15
 32158                           
 32159                           ;../universalEvents.c: 388:     startTimedResponse(1, findServiceIndex(SERVICE_ID_PRODUC
      +                          ER), sodTRCallback);
 32160                           
 32161                           ; BSR set to: 0
 32162                           ;incstack = 0
 32163   00C714  0E05               	movlw	5
 32164   00C716  ECBE  F057         	call	_findServiceIndex
 32165   00C71A  0100               	movlb	0	; () banked
 32166   00C71C  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 32167   00C71E  0E6E               	movlw	low _sodTRCallback
 32168   00C720  6F92               	movwf	startTimedResponse@callback& (0+255),b
 32169   00C722  0E85               	movlw	high _sodTRCallback
 32170   00C724  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 32171   00C726  0E01               	movlw	1
 32172   00C728  EC15  F05F         	call	_startTimedResponse
 32173   00C72C  0012               	return		;funcret
 32174   00C72E                     __end_of_doSOD:
 32175                           	callstack 0
 32176                           
 32177 ;; *************** function _startTimedResponse *****************
 32178 ;; Defined at:
 32179 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 32180 ;; Parameters:    Size  Location     Type
 32181 ;;  type            1    wreg     unsigned char 
 32182 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 32183 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 32184 ;;		 -> reqevCallback(1), nerdCallback(1), nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), 
 32185 ;;		 -> mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), sodTRCallback(1), 
 32186 ;; Auto vars:     Size  Location     Type
 32187 ;;  type            1   52[BANK0 ] unsigned char 
 32188 ;; Return value:  Size  Location     Type
 32189 ;;                  1    wreg      void 
 32190 ;; Registers used:
 32191 ;;		wreg, status,2, status,0
 32192 ;; Tracked objects:
 32193 ;;		On entry : 0/0
 32194 ;;		On exit  : 0/0
 32195 ;;		Unchanged: 0/0
 32196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32197 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32200 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32201 ;;Total ram usage:        4 bytes
 32202 ;; Hardware stack levels used: 1
 32203 ;; Hardware stack levels required when called: 12
 32204 ;; This function calls:
 32205 ;;		Nothing
 32206 ;; This function is called by:
 32207 ;;		_doSOD
 32208 ;;		_mnsProcessMessage
 32209 ;;		_nvProcessMessage
 32210 ;;		_doNerd
 32211 ;;		_doReqev
 32212 ;; This function uses a non-reentrant model
 32213 ;;
 32214                           
 32215                           	psect	text124
 32216   00BE2A                     __ptext124:
 32217                           	callstack 0
 32218   00BE2A                     _startTimedResponse:
 32219                           	callstack 15
 32220                           
 32221                           ;incstack = 0
 32222                           ;startTimedResponse@type stored from wreg
 32223   00BE2A  0100               	movlb	0	; () banked
 32224   00BE2C  6F94               	movwf	startTimedResponse@type& (0+255),b
 32225                           
 32226                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 32227   00BE2E  C094  F0BC         	movff	startTimedResponse@type,_timedResponseType
 32228                           
 32229                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 32230   00BE32  0100               	movlb	0	; () banked
 32231   00BE34  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 32232   00BE36  A4D8               	btfss	status,2,c
 32233   00BE38  D004               	goto	l20730
 32234                           
 32235                           ; BSR set to: 0
 32236                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 32237   00BE3A  0E01               	movlw	1
 32238   00BE3C  6FBD               	movwf	_timedResponseAllServicesFlag& (0+255),b
 32239                           
 32240                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 32241   00BE3E  0E00               	movlw	0
 32242   00BE40  D00B               	goto	L14
 32243   00BE42                     l20730:
 32244                           
 32245                           ; BSR set to: 0
 32246                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 32247   00BE42  0E00               	movlw	0
 32248   00BE44  6FBD               	movwf	_timedResponseAllServicesFlag& (0+255),b
 32249                           
 32250                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 32251   00BE46  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 32252   00BE48  B4D8               	btfsc	status,2,c
 32253   00BE4A  D003               	goto	u21370
 32254                           
 32255                           ; BSR set to: 0
 32256   00BE4C  0E09               	movlw	9
 32257   00BE4E  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 32258   00BE50  D002               	goto	l20734
 32259   00BE52                     u21370:
 32260                           
 32261                           ; BSR set to: 0
 32262                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 32263   00BE52  69BC               	setf	_timedResponseType& (0+255),b
 32264                           
 32265                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 32266   00BE54  0012               	return	
 32267   00BE56                     l20734:
 32268                           
 32269                           ; BSR set to: 0
 32270                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 32271   00BE56  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 32272   00BE58                     L14:
 32273   00BE58  6FBE               	movwf	_timedResponseServiceIndex& (0+255),b
 32274                           
 32275                           ; BSR set to: 0
 32276                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 32277   00BE5A  0E00               	movlw	0
 32278   00BE5C  6FBB               	movwf	_timedResponseStep& (0+255),b
 32279                           
 32280                           ; BSR set to: 0
 32281                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 32282   00BE5E  C092  F0AD         	movff	startTimedResponse@callback,_timedResponseCallback
 32283   00BE62  C093  F0AE         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 32284                           
 32285                           ; BSR set to: 0
 32286   00BE66  0012               	return		;funcret
 32287   00BE68                     __end_of_startTimedResponse:
 32288                           	callstack 0
 32289                           
 32290 ;; *************** function _findServiceIndex *****************
 32291 ;; Defined at:
 32292 ;;		line 823 in file "../../VLCBlib_PIC/vlcb.c"
 32293 ;; Parameters:    Size  Location     Type
 32294 ;;  serviceType     1    wreg     unsigned char 
 32295 ;; Auto vars:     Size  Location     Type
 32296 ;;  serviceType     1   47[BANK0 ] unsigned char 
 32297 ;;  i               1   48[BANK0 ] unsigned char 
 32298 ;; Return value:  Size  Location     Type
 32299 ;;                  1    wreg      unsigned char 
 32300 ;; Registers used:
 32301 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32302 ;; Tracked objects:
 32303 ;;		On entry : 0/0
 32304 ;;		On exit  : 0/0
 32305 ;;		Unchanged: 0/0
 32306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32308 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32309 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32310 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32311 ;;Total ram usage:        4 bytes
 32312 ;; Hardware stack levels used: 1
 32313 ;; Hardware stack levels required when called: 12
 32314 ;; This function calls:
 32315 ;;		Nothing
 32316 ;; This function is called by:
 32317 ;;		_doSOD
 32318 ;;		_mnsProcessMessage
 32319 ;;		_nvProcessMessage
 32320 ;;		_doNerd
 32321 ;;		_doReqev
 32322 ;; This function uses a non-reentrant model
 32323 ;;
 32324                           
 32325                           	psect	text125
 32326   00AF7C                     __ptext125:
 32327                           	callstack 0
 32328   00AF7C                     _findServiceIndex:
 32329                           	callstack 15
 32330                           
 32331                           ; BSR set to: 0
 32332                           ;incstack = 0
 32333                           ;findServiceIndex@serviceType stored from wreg
 32334   00AF7C  0100               	movlb	0	; () banked
 32335   00AF7E  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 32336                           
 32337                           ;../../VLCBlib_PIC/vlcb.c: 824:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 825:     for (i
      +                          =0; i<9; i++) {
 32338   00AF80  0E00               	movlw	0
 32339   00AF82  0100               	movlb	0	; () banked
 32340   00AF84  6F90               	movwf	findServiceIndex@i& (0+255),b
 32341   00AF86                     l20708:
 32342                           
 32343                           ; BSR set to: 0
 32344                           ;../../VLCBlib_PIC/vlcb.c: 826:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32345   00AF86  5190               	movf	findServiceIndex@i& (0+255),w,b
 32346   00AF88  0D02               	mullw	2
 32347   00AF8A  0E69               	movlw	low _services
 32348   00AF8C  24F3               	addwf	243,w,c
 32349   00AF8E  6EF6               	movwf	tblptrl,c
 32350   00AF90  0EEE               	movlw	high _services
 32351   00AF92  20F4               	addwfc	244,w,c
 32352   00AF94  6EF7               	movwf	tblptrh,c
 32353   00AF96                     	if	1	;There are 3 active tblptr bytes
 32354   00AF96  6AF8               	clrf	tblptru,c
 32355   00AF98  0E00               	movlw	low (__mediumconst shr (0+16))
 32356   00AF9A  22F8               	addwfc	tblptru,f,c
 32357   00AF9C                     	endif
 32358   00AF9C  0009               	tblrd		*+
 32359   00AF9E  50F5               	movf	tablat,w,c
 32360   00AFA0  0009               	tblrd		*+
 32361   00AFA2  10F5               	iorwf	tablat,w,c
 32362   00AFA4  B4D8               	btfsc	status,2,c
 32363   00AFA6  D01D               	goto	l20716
 32364                           
 32365                           ; BSR set to: 0
 32366   00AFA8  5190               	movf	findServiceIndex@i& (0+255),w,b
 32367   00AFAA  0D02               	mullw	2
 32368   00AFAC  0E69               	movlw	low _services
 32369   00AFAE  24F3               	addwf	243,w,c
 32370   00AFB0  6EF6               	movwf	tblptrl,c
 32371   00AFB2  0EEE               	movlw	high _services
 32372   00AFB4  20F4               	addwfc	244,w,c
 32373   00AFB6  6EF7               	movwf	tblptrh,c
 32374   00AFB8                     	if	1	;There are 3 active tblptr bytes
 32375   00AFB8  6AF8               	clrf	tblptru,c
 32376   00AFBA  0E00               	movlw	low (__mediumconst shr (0+16))
 32377   00AFBC  22F8               	addwfc	tblptru,f,c
 32378   00AFBE                     	endif
 32379   00AFBE  0009               	tblrd		*+
 32380   00AFC0  CFF5 F08D          	movff	tablat,??_findServiceIndex
 32381   00AFC4  0009               	tblrd		*+
 32382   00AFC6  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 32383   00AFCA  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 32384   00AFCE  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 32385   00AFD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32386   00AFD2  6AF8               	clrf	tblptru,c
 32387   00AFD4                     	endif
 32388   00AFD4                     	if	0	;tblptru may be non-zero
 32389   00AFD4                     	endif
 32390   00AFD4  0008               	tblrd		*
 32391   00AFD6  50F5               	movf	tablat,w,c
 32392   00AFD8  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 32393   00AFDA  A4D8               	btfss	status,2,c
 32394   00AFDC  D002               	goto	l20716
 32395                           
 32396                           ; BSR set to: 0
 32397                           ;../../VLCBlib_PIC/vlcb.c: 827:             return i;
 32398   00AFDE  5190               	movf	findServiceIndex@i& (0+255),w,b
 32399   00AFE0  0012               	return	
 32400   00AFE2                     l20716:
 32401                           
 32402                           ; BSR set to: 0
 32403                           ;../../VLCBlib_PIC/vlcb.c: 829:     }
 32404   00AFE2  2B90               	incf	findServiceIndex@i& (0+255),f,b
 32405                           
 32406                           ; BSR set to: 0
 32407   00AFE4  0E08               	movlw	8
 32408   00AFE6  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 32409   00AFE8  D7CE               	goto	l20708
 32410                           
 32411                           ; BSR set to: 0
 32412                           ;../../VLCBlib_PIC/vlcb.c: 830:     return 0xFF;
 32413   00AFEA  0EFF               	movlw	255
 32414                           
 32415                           ; BSR set to: 0
 32416   00AFEC  0012               	return		;funcret
 32417   00AFEE                     __end_of_findServiceIndex:
 32418                           	callstack 0
 32419                           
 32420 ;; *************** function _deleteTwoActionQueue *****************
 32421 ;; Defined at:
 32422 ;;		line 483 in file "../event_consumerDualActionQueue.c"
 32423 ;; Parameters:    Size  Location     Type
 32424 ;;  index           1    wreg     unsigned char 
 32425 ;; Auto vars:     Size  Location     Type
 32426 ;;  index           1   46[BANK0 ] unsigned char 
 32427 ;;  qty             1   45[BANK0 ] unsigned char 
 32428 ;; Return value:  Size  Location     Type
 32429 ;;                  1    wreg      void 
 32430 ;; Registers used:
 32431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32432 ;; Tracked objects:
 32433 ;;		On entry : 0/0
 32434 ;;		On exit  : 0/0
 32435 ;;		Unchanged: 0/0
 32436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32440 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32441 ;;Total ram usage:        2 bytes
 32442 ;; Hardware stack levels used: 1
 32443 ;; Hardware stack levels required when called: 12
 32444 ;; This function calls:
 32445 ;;		Nothing
 32446 ;; This function is called by:
 32447 ;;		_processActions
 32448 ;; This function uses a non-reentrant model
 32449 ;;
 32450                           
 32451                           	psect	text126
 32452   00AAC6                     __ptext126:
 32453                           	callstack 0
 32454   00AAC6                     _deleteTwoActionQueue:
 32455                           	callstack 16
 32456                           
 32457                           ; BSR set to: 0
 32458                           ;incstack = 0
 32459                           ;deleteTwoActionQueue@index stored from wreg
 32460   00AAC6  0100               	movlb	0	; () banked
 32461   00AAC8  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 32462                           
 32463                           ;../event_consumerDualActionQueue.c: 484:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 485:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 32464   00AACA  0100               	movlb	0	; () banked
 32465   00AACC  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32466   00AACE  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 32467   00AAD0  0B07               	andlw	7
 32468   00AAD2  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32469                           
 32470                           ;../event_consumerDualActionQueue.c: 486:     if (index < qty) {
 32471   00AAD4  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32472   00AAD6  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32473   00AAD8  B0D8               	btfsc	status,0,c
 32474   00AADA  D013               	goto	l21512
 32475                           
 32476                           ; BSR set to: 0
 32477                           ;../event_consumerDualActionQueue.c: 487:         index += expeditedReadIndex;
 32478   00AADC  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32479   00AADE  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32480                           
 32481                           ;../event_consumerDualActionQueue.c: 488:         if (index >= 8) {
 32482   00AAE0  0E07               	movlw	7
 32483   00AAE2  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32484   00AAE4  D002               	goto	l556
 32485                           
 32486                           ; BSR set to: 0
 32487                           ;../event_consumerDualActionQueue.c: 489:             index -= 8;
 32488   00AAE6  0E08               	movlw	8
 32489   00AAE8  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32490   00AAEA                     l556:
 32491                           
 32492                           ; BSR set to: 0
 32493                           ;../event_consumerDualActionQueue.c: 491:         if (index == expeditedWriteIndex) retu
      +                          rn;
 32494   00AAEA  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 32495   00AAEC  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32496   00AAEE  B4D8               	btfsc	status,2,c
 32497   00AAF0  0012               	return	
 32498                           
 32499                           ; BSR set to: 0
 32500                           ;../event_consumerDualActionQueue.c: 492:         expeditedQueueBuf[index] = 0;
 32501   00AAF2  0EC4               	movlw	low _expeditedQueueBuf
 32502   00AAF4  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32503   00AAF6  6ED9               	movwf	fsr2l,c
 32504   00AAF8  6ADA               	clrf	fsr2h,c
 32505   00AAFA  0E02               	movlw	high _expeditedQueueBuf
 32506   00AAFC  22DA               	addwfc	fsr2h,f,c
 32507   00AAFE  6ADF               	clrf	indf2,c
 32508   00AB00  0012               	return	
 32509   00AB02                     l21512:
 32510                           
 32511                           ; BSR set to: 0
 32512                           ;../event_consumerDualActionQueue.c: 495:     index -= qty;
 32513   00AB02  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32514   00AB04  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32515                           
 32516                           ;../event_consumerDualActionQueue.c: 496:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 32517   00AB06  51CD               	movf	_normalReadIndex& (0+255),w,b
 32518   00AB08  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 32519   00AB0A  0B3F               	andlw	63
 32520   00AB0C  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32521                           
 32522                           ;../event_consumerDualActionQueue.c: 497:     if (index < qty) {
 32523   00AB0E  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32524   00AB10  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32525   00AB12  B0D8               	btfsc	status,0,c
 32526   00AB14  0012               	return	
 32527                           
 32528                           ; BSR set to: 0
 32529                           ;../event_consumerDualActionQueue.c: 498:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 32530   00AB16  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32531   00AB18  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 32532   00AB1A  B4D8               	btfsc	status,2,c
 32533   00AB1C  0012               	return	
 32534                           
 32535                           ; BSR set to: 0
 32536                           ;../event_consumerDualActionQueue.c: 499:         index += normalReadIndex;
 32537   00AB1E  51CD               	movf	_normalReadIndex& (0+255),w,b
 32538   00AB20  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32539                           
 32540                           ;../event_consumerDualActionQueue.c: 500:         if (index >= 64) {
 32541   00AB22  0E3F               	movlw	63
 32542   00AB24  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32543   00AB26  D002               	goto	l561
 32544                           
 32545                           ; BSR set to: 0
 32546                           ;../event_consumerDualActionQueue.c: 501:             index -= 64;
 32547   00AB28  0E40               	movlw	64
 32548   00AB2A  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32549   00AB2C                     l561:
 32550                           
 32551                           ; BSR set to: 0
 32552                           ;../event_consumerDualActionQueue.c: 503:         if (index == normalWriteIndex) return;
 32553   00AB2C  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32554   00AB2E  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32555   00AB30  B4D8               	btfsc	status,2,c
 32556   00AB32  0012               	return	
 32557                           
 32558                           ; BSR set to: 0
 32559                           ;../event_consumerDualActionQueue.c: 504:         normalQueueBuf[index] = 0;
 32560   00AB34  0E80               	movlw	low _normalQueueBuf
 32561   00AB36  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32562   00AB38  6ED9               	movwf	fsr2l,c
 32563   00AB3A  6ADA               	clrf	fsr2h,c
 32564   00AB3C  0E04               	movlw	high _normalQueueBuf
 32565   00AB3E  22DA               	addwfc	fsr2h,f,c
 32566   00AB40  6ADF               	clrf	indf2,c
 32567                           
 32568                           ; BSR set to: 0
 32569   00AB42  0012               	return		;funcret
 32570   00AB44                     __end_of_deleteTwoActionQueue:
 32571                           	callstack 0
 32572                           
 32573 ;; *************** function _completed *****************
 32574 ;; Defined at:
 32575 ;;		line 219 in file "../outputs.c"
 32576 ;; Parameters:    Size  Location     Type
 32577 ;;  io              1    wreg     unsigned char 
 32578 ;;  action          1   45[BANK0 ] unsigned char 
 32579 ;;  type            1   46[BANK0 ] unsigned char 
 32580 ;; Auto vars:     Size  Location     Type
 32581 ;;  io              1   50[BANK0 ] unsigned char 
 32582 ;; Return value:  Size  Location     Type
 32583 ;;                  1    wreg      enum E12767
 32584 ;; Registers used:
 32585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32586 ;; Tracked objects:
 32587 ;;		On entry : 0/0
 32588 ;;		On exit  : 0/0
 32589 ;;		Unchanged: 0/0
 32590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32594 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32595 ;;Total ram usage:        6 bytes
 32596 ;; Hardware stack levels used: 1
 32597 ;; Hardware stack levels required when called: 12
 32598 ;; This function calls:
 32599 ;;		Nothing
 32600 ;; This function is called by:
 32601 ;;		_processActions
 32602 ;; This function uses a non-reentrant model
 32603 ;;
 32604                           
 32605                           	psect	text127
 32606   00A4DA                     __ptext127:
 32607                           	callstack 0
 32608   00A4DA                     _completed:
 32609                           	callstack 16
 32610                           
 32611                           ; BSR set to: 0
 32612                           ;incstack = 0
 32613                           ;completed@io stored from wreg
 32614   00A4DA  0100               	movlb	0	; () banked
 32615   00A4DC  6F92               	movwf	completed@io& (0+255),b
 32616                           
 32617                           ;../outputs.c: 220:     switch(type) {
 32618   00A4DE  D035               	goto	l21638
 32619   00A4E0                     l21616:
 32620                           
 32621                           ; BSR set to: 0
 32622                           ;../outputs.c: 223:             return TRUE;
 32623   00A4E0  0E01               	movlw	1
 32624   00A4E2  0012               	return	
 32625   00A4E4                     l21620:
 32626                           
 32627                           ; BSR set to: 0
 32628                           ;../outputs.c: 226:             return pulseDelays[io] == 1;
 32629   00A4E4  0EA4               	movlw	low _pulseDelays
 32630   00A4E6  2592               	addwf	completed@io& (0+255),w,b
 32631   00A4E8  6ED9               	movwf	fsr2l,c
 32632   00A4EA  6ADA               	clrf	fsr2h,c
 32633   00A4EC  0E02               	movlw	high _pulseDelays
 32634   00A4EE  22DA               	addwfc	fsr2h,f,c
 32635   00A4F0  04DE               	decf	postinc2,w,c
 32636   00A4F2  A4D8               	btfss	status,2,c
 32637   00A4F4  D002               	goto	u22340
 32638   00A4F6  0E01               	movlw	1
 32639   00A4F8  0012               	return	
 32640   00A4FA                     u22340:
 32641   00A4FA  0E00               	movlw	0
 32642   00A4FC  0012               	return	
 32643   00A4FE                     l21624:
 32644                           
 32645                           ; BSR set to: 0
 32646                           ;../outputs.c: 235:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 32647   00A4FE  0E00               	movlw	0
 32648   00A500  6F91               	movwf	_completed$1545& (0+255),b
 32649                           
 32650                           ; BSR set to: 0
 32651   00A502  0E30               	movlw	low _currentPos
 32652   00A504  2592               	addwf	completed@io& (0+255),w,b
 32653   00A506  6ED9               	movwf	fsr2l,c
 32654   00A508  6ADA               	clrf	fsr2h,c
 32655   00A50A  0E01               	movlw	high _currentPos
 32656   00A50C  22DA               	addwfc	fsr2h,f,c
 32657   00A50E  5192               	movf	completed@io& (0+255),w,b
 32658   00A510  0F2B               	addlw	low _targetPos
 32659   00A512  6EE1               	movwf	fsr1l,c
 32660   00A514  6AE2               	clrf	fsr1h,c
 32661   00A516  50DE               	movf	postinc2,w,c
 32662   00A518  18E6               	xorwf	postinc1,w,c
 32663   00A51A  A4D8               	btfss	status,2,c
 32664   00A51C  D014               	goto	l917
 32665                           
 32666                           ; BSR set to: 0
 32667   00A51E  0E10               	movlw	low _servoState
 32668   00A520  2592               	addwf	completed@io& (0+255),w,b
 32669   00A522  6ED9               	movwf	fsr2l,c
 32670   00A524  6ADA               	clrf	fsr2h,c
 32671   00A526  0E01               	movlw	high _servoState
 32672   00A528  22DA               	addwfc	fsr2h,f,c
 32673   00A52A  04DE               	decf	postinc2,w,c
 32674   00A52C  B4D8               	btfsc	status,2,c
 32675   00A52E  D009               	goto	u22380
 32676                           
 32677                           ; BSR set to: 0
 32678   00A530  0E10               	movlw	low _servoState
 32679   00A532  2592               	addwf	completed@io& (0+255),w,b
 32680   00A534  6ED9               	movwf	fsr2l,c
 32681   00A536  6ADA               	clrf	fsr2h,c
 32682   00A538  0E01               	movlw	high _servoState
 32683   00A53A  22DA               	addwfc	fsr2h,f,c
 32684   00A53C  50DF               	movf	indf2,w,c
 32685   00A53E  A4D8               	btfss	status,2,c
 32686   00A540  D002               	goto	l917
 32687   00A542                     u22380:
 32688                           
 32689                           ; BSR set to: 0
 32690   00A542  0E01               	movlw	1
 32691   00A544  6F91               	movwf	_completed$1545& (0+255),b
 32692   00A546                     l917:
 32693                           
 32694                           ; BSR set to: 0
 32695   00A546  5191               	movf	_completed$1545& (0+255),w,b
 32696   00A548  0012               	return	
 32697   00A54A                     l21638:
 32698   00A54A  0100               	movlb	0	; () banked
 32699   00A54C  518E               	movf	completed@type& (0+255),w,b
 32700                           
 32701                           ; Switch size 1, requested type "simple"
 32702                           ; Number of cases is 5, Range of values is 0 to 4
 32703                           ; switch strategies available:
 32704                           ; Name         Instructions Cycles
 32705                           ; simple_byte           16     9 (average)
 32706                           ;	Chosen strategy is simple_byte
 32707   00A54E  0A00               	xorlw	0	; case 0
 32708   00A550  B4D8               	btfsc	status,2,c
 32709   00A552  D7C6               	goto	l21616
 32710   00A554  0A01               	xorlw	1	; case 1
 32711   00A556  B4D8               	btfsc	status,2,c
 32712   00A558  D7C5               	goto	l21620
 32713   00A55A  0A03               	xorlw	3	; case 2
 32714   00A55C  B4D8               	btfsc	status,2,c
 32715   00A55E  D7CF               	goto	l21624
 32716   00A560  0A01               	xorlw	1	; case 3
 32717   00A562  B4D8               	btfsc	status,2,c
 32718   00A564  D7CC               	goto	l21624
 32719   00A566  0A07               	xorlw	7	; case 4
 32720   00A568  B4D8               	btfsc	status,2,c
 32721   00A56A  D7C9               	goto	l21624
 32722   00A56C  D7B9               	goto	l21616
 32723   00A56E                     __end_of_completed:
 32724                           	callstack 0
 32725                           
 32726 ;; *************** function _inputScan *****************
 32727 ;; Defined at:
 32728 ;;		line 101 in file "../inputs.c"
 32729 ;; Parameters:    Size  Location     Type
 32730 ;;		None
 32731 ;; Auto vars:     Size  Location     Type
 32732 ;;  change          1   20[BANK1 ] enum E12717
 32733 ;;  input           1   21[BANK1 ] unsigned char 
 32734 ;; Return value:  Size  Location     Type
 32735 ;;                  1    wreg      void 
 32736 ;; Registers used:
 32737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32738 ;; Tracked objects:
 32739 ;;		On entry : 0/0
 32740 ;;		On exit  : 0/0
 32741 ;;		Unchanged: 0/0
 32742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32744 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32745 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32746 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32747 ;;Total ram usage:        4 bytes
 32748 ;; Hardware stack levels used: 1
 32749 ;; Hardware stack levels required when called: 18
 32750 ;; This function calls:
 32751 ;;		_getNV
 32752 ;;		_readInput
 32753 ;;		_sendProducedEvent
 32754 ;;		_writeNVM
 32755 ;; This function is called by:
 32756 ;;		_loop
 32757 ;; This function uses a non-reentrant model
 32758 ;;
 32759                           
 32760                           	psect	text128
 32761   005148                     __ptext128:
 32762                           	callstack 0
 32763   005148                     _inputScan:
 32764                           	callstack 11
 32765                           
 32766                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 32767                           
 32768                           ; BSR set to: 0
 32769                           ;incstack = 0
 32770   005148  0E00               	movlw	0
 32771   00514A  0100               	movlb	0	; () banked
 32772   00514C  6FCE               	movwf	_io@inputs$F849& (0+255),b
 32773   00514E                     l22918:
 32774                           
 32775                           ; BSR set to: 0
 32776   00514E  0E0F               	movlw	15
 32777   005150  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
 32778   005152  D001               	goto	l22922
 32779   005154  0012               	return	
 32780   005156                     l22922:
 32781                           
 32782                           ; BSR set to: 0
 32783                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 32784   005156  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32785   005158  0D07               	mullw	7
 32786   00515A  50F3               	movf	243,w,c
 32787   00515C  0F10               	addlw	16
 32788   00515E  EC53  F05F         	call	_getNV
 32789   005162  0100               	movlb	0	; () banked
 32790   005164  518D               	movf	?_getNV& (0+255),w,b
 32791   005166  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 32792   005168  A4D8               	btfss	status,2,c
 32793   00516A  D151               	goto	l22984
 32794                           
 32795                           ; BSR set to: 0
 32796                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 32797   00516C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32798   00516E  ECAB  F040         	call	_readInput
 32799   005172  0101               	movlb	1	; () banked
 32800   005174  6FD2               	movwf	inputScan@input& (0+255),b
 32801                           
 32802                           ; BSR set to: 1
 32803                           ;../inputs.c: 105:             if (input != inputState[io]) {
 32804   005176  0E94               	movlw	low _inputState
 32805   005178  0100               	movlb	0	; () banked
 32806   00517A  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32807   00517C  6ED9               	movwf	fsr2l,c
 32808   00517E  6ADA               	clrf	fsr2h,c
 32809   005180  0E02               	movlw	high _inputState
 32810   005182  22DA               	addwfc	fsr2h,f,c
 32811   005184  0101               	movlb	1	; () banked
 32812   005186  51D2               	movf	inputScan@input& (0+255),w,b
 32813   005188  18DE               	xorwf	postinc2,w,c
 32814   00518A  B4D8               	btfsc	status,2,c
 32815   00518C  D138               	goto	l22982
 32816                           
 32817                           ; BSR set to: 1
 32818                           ;../inputs.c: 106:                 Boolean change = FALSE;
 32819   00518E  0E00               	movlw	0
 32820   005190  6FD1               	movwf	inputScan@change& (0+255),b
 32821                           
 32822                           ; BSR set to: 1
 32823                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 32824   005192  0E94               	movlw	low _inputState
 32825   005194  0100               	movlb	0	; () banked
 32826   005196  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32827   005198  6ED9               	movwf	fsr2l,c
 32828   00519A  6ADA               	clrf	fsr2h,c
 32829   00519C  0E02               	movlw	high _inputState
 32830   00519E  22DA               	addwfc	fsr2h,f,c
 32831   0051A0  50DF               	movf	indf2,w,c
 32832   0051A2  B4D8               	btfsc	status,2,c
 32833   0051A4  D01E               	goto	l22936
 32834                           
 32835                           ; BSR set to: 0
 32836   0051A6  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32837   0051A8  0D07               	mullw	7
 32838   0051AA  50F3               	movf	243,w,c
 32839   0051AC  0F12               	addlw	18
 32840   0051AE  EC53  F05F         	call	_getNV
 32841   0051B2  0E84               	movlw	low _delayCount
 32842   0051B4  0100               	movlb	0	; () banked
 32843   0051B6  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32844   0051B8  6ED9               	movwf	fsr2l,c
 32845   0051BA  6ADA               	clrf	fsr2h,c
 32846   0051BC  0E02               	movlw	high _delayCount
 32847   0051BE  22DA               	addwfc	fsr2h,f,c
 32848   0051C0  50DF               	movf	indf2,w,c
 32849   0051C2  0101               	movlb	1	; () banked
 32850   0051C4  6FCF               	movwf	??_inputScan& (0+255),b
 32851   0051C6  6BD0               	clrf	(??_inputScan+1)& (0+255),b
 32852   0051C8  0100               	movlb	0	; () banked
 32853   0051CA  518D               	movf	?_getNV& (0+255),w,b
 32854   0051CC  0101               	movlb	1	; () banked
 32855   0051CE  19CF               	xorwf	??_inputScan& (0+255),w,b
 32856   0051D0  E108               	bnz	l22936
 32857   0051D2  0100               	movlb	0	; () banked
 32858   0051D4  518E               	movf	(?_getNV+1)& (0+255),w,b
 32859   0051D6  0101               	movlb	1	; () banked
 32860   0051D8  19D0               	xorwf	(??_inputScan+1)& (0+255),w,b
 32861   0051DA  A4D8               	btfss	status,2,c
 32862   0051DC  D002               	goto	l22936
 32863                           
 32864                           ; BSR set to: 1
 32865                           ;../inputs.c: 109:                     change = TRUE;
 32866   0051DE  0E01               	movlw	1
 32867   0051E0  6FD1               	movwf	inputScan@change& (0+255),b
 32868   0051E2                     l22936:
 32869                           
 32870                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 32871   0051E2  0E94               	movlw	low _inputState
 32872   0051E4  0100               	movlb	0	; () banked
 32873   0051E6  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32874   0051E8  6ED9               	movwf	fsr2l,c
 32875   0051EA  6ADA               	clrf	fsr2h,c
 32876   0051EC  0E02               	movlw	high _inputState
 32877   0051EE  22DA               	addwfc	fsr2h,f,c
 32878   0051F0  50DF               	movf	indf2,w,c
 32879   0051F2  A4D8               	btfss	status,2,c
 32880   0051F4  D01E               	goto	l353
 32881                           
 32882                           ; BSR set to: 0
 32883   0051F6  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32884   0051F8  0D07               	mullw	7
 32885   0051FA  50F3               	movf	243,w,c
 32886   0051FC  0F13               	addlw	19
 32887   0051FE  EC53  F05F         	call	_getNV
 32888   005202  0E84               	movlw	low _delayCount
 32889   005204  0100               	movlb	0	; () banked
 32890   005206  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32891   005208  6ED9               	movwf	fsr2l,c
 32892   00520A  6ADA               	clrf	fsr2h,c
 32893   00520C  0E02               	movlw	high _delayCount
 32894   00520E  22DA               	addwfc	fsr2h,f,c
 32895   005210  50DF               	movf	indf2,w,c
 32896   005212  0101               	movlb	1	; () banked
 32897   005214  6FCF               	movwf	??_inputScan& (0+255),b
 32898   005216  6BD0               	clrf	(??_inputScan+1)& (0+255),b
 32899   005218  0100               	movlb	0	; () banked
 32900   00521A  518D               	movf	?_getNV& (0+255),w,b
 32901   00521C  0101               	movlb	1	; () banked
 32902   00521E  19CF               	xorwf	??_inputScan& (0+255),w,b
 32903   005220  E108               	bnz	l353
 32904   005222  0100               	movlb	0	; () banked
 32905   005224  518E               	movf	(?_getNV+1)& (0+255),w,b
 32906   005226  0101               	movlb	1	; () banked
 32907   005228  19D0               	xorwf	(??_inputScan+1)& (0+255),w,b
 32908   00522A  A4D8               	btfss	status,2,c
 32909   00522C  D002               	goto	l353
 32910                           
 32911                           ; BSR set to: 1
 32912                           ;../inputs.c: 112:                     change = TRUE;
 32913   00522E  0E01               	movlw	1
 32914   005230  6FD1               	movwf	inputScan@change& (0+255),b
 32915   005232                     l353:
 32916                           
 32917                           ;../inputs.c: 114:                 if (change) {
 32918   005232  0101               	movlb	1	; () banked
 32919   005234  51D1               	movf	inputScan@change& (0+255),w,b
 32920   005236  B4D8               	btfsc	status,2,c
 32921   005238  D0D9               	goto	l22980
 32922                           
 32923                           ; BSR set to: 1
 32924                           ;../inputs.c: 116:                     delayCount[io] = 0;
 32925   00523A  0E84               	movlw	low _delayCount
 32926   00523C  0100               	movlb	0	; () banked
 32927   00523E  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32928   005240  6ED9               	movwf	fsr2l,c
 32929   005242  6ADA               	clrf	fsr2h,c
 32930   005244  0E02               	movlw	high _delayCount
 32931   005246  22DA               	addwfc	fsr2h,f,c
 32932   005248  6ADF               	clrf	indf2,c
 32933                           
 32934                           ;../inputs.c: 117:                     inputState[io] = input;
 32935   00524A  0E94               	movlw	low _inputState
 32936   00524C  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32937   00524E  6ED9               	movwf	fsr2l,c
 32938   005250  6ADA               	clrf	fsr2h,c
 32939   005252  0E02               	movlw	high _inputState
 32940   005254  22DA               	addwfc	fsr2h,f,c
 32941   005256  C1D2  FFDF         	movff	inputScan@input,indf2
 32942                           
 32943                           ; BSR set to: 0
 32944                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 32945   00525A  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32946   00525C  0D07               	mullw	7
 32947   00525E  50F3               	movf	243,w,c
 32948   005260  0F11               	addlw	17
 32949   005262  EC53  F05F         	call	_getNV
 32950   005266  0100               	movlb	0	; () banked
 32951   005268  B18D               	btfsc	?_getNV& (0+255),0,b
 32952   00526A  D008               	goto	l22948
 32953                           
 32954                           ; BSR set to: 0
 32955                           ;../inputs.c: 120:                         input = !input;
 32956   00526C  0101               	movlb	1	; () banked
 32957   00526E  51D2               	movf	inputScan@input& (0+255),w,b
 32958   005270  A4D8               	btfss	status,2,c
 32959   005272  D002               	goto	u24380
 32960   005274  0E01               	movlw	1
 32961   005276  D001               	goto	u24390
 32962   005278                     u24380:
 32963   005278  0E00               	movlw	0
 32964   00527A                     u24390:
 32965   00527A  6FD2               	movwf	inputScan@input& (0+255),b
 32966   00527C                     l22948:
 32967                           
 32968                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 32969   00527C  0100               	movlb	0	; () banked
 32970   00527E  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32971   005280  0D07               	mullw	7
 32972   005282  50F3               	movf	243,w,c
 32973   005284  0F11               	addlw	17
 32974   005286  EC53  F05F         	call	_getNV
 32975   00528A  0100               	movlb	0	; () banked
 32976   00528C  A98D               	btfss	?_getNV& (0+255),4,b
 32977   00528E  D031               	goto	l22956
 32978                           
 32979                           ; BSR set to: 0
 32980                           ;../inputs.c: 124:                         if (input) {
 32981   005290  0101               	movlb	1	; () banked
 32982   005292  51D2               	movf	inputScan@input& (0+255),w,b
 32983   005294  B4D8               	btfsc	status,2,c
 32984   005296  D0BB               	goto	l22984
 32985                           
 32986                           ; BSR set to: 1
 32987                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 32988   005298  0EB4               	movlw	low _outputState
 32989   00529A  0100               	movlb	0	; () banked
 32990   00529C  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32991   00529E  6ED9               	movwf	fsr2l,c
 32992   0052A0  6ADA               	clrf	fsr2h,c
 32993   0052A2  0E02               	movlw	high _outputState
 32994   0052A4  22DA               	addwfc	fsr2h,f,c
 32995   0052A6  0EB4               	movlw	low _outputState
 32996   0052A8  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32997   0052AA  6EE1               	movwf	fsr1l,c
 32998   0052AC  6AE2               	clrf	fsr1h,c
 32999   0052AE  0E02               	movlw	high _outputState
 33000   0052B0  22E2               	addwfc	fsr1h,f,c
 33001   0052B2  50E7               	movf	indf1,w,c
 33002   0052B4  A4D8               	btfss	status,2,c
 33003   0052B6  D002               	goto	u24420
 33004   0052B8  0E01               	movlw	1
 33005   0052BA  D001               	goto	u24430
 33006   0052BC                     u24420:
 33007   0052BC  0E00               	movlw	0
 33008   0052BE                     u24430:
 33009   0052BE  6EDF               	movwf	indf2,c
 33010                           
 33011                           ; BSR set to: 0
 33012                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 33013                           
 33014                           ;../inputs.c: 126:                         } else {
 33015   0052C0  0EDE               	movlw	222
 33016   0052C2  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33017   0052C4  0101               	movlb	1	; () banked
 33018   0052C6  6FCF               	movwf	??_inputScan& (0+255),b
 33019   0052C8  6BD0               	clrf	(??_inputScan+1)& (0+255),b
 33020   0052CA  0E03               	movlw	3
 33021   0052CC  23D0               	addwfc	(??_inputScan+1)& (0+255),f,b
 33022   0052CE  C1CF  F0A4         	movff	??_inputScan,writeNVM@index
 33023   0052D2  C1D0  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 33024   0052D6  0100               	movlb	0	; () banked
 33025   0052D8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 33026   0052DA  0EB4               	movlw	low _outputState
 33027   0052DC  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33028   0052DE  6ED9               	movwf	fsr2l,c
 33029   0052E0  6ADA               	clrf	fsr2h,c
 33030   0052E2  0E02               	movlw	high _outputState
 33031   0052E4  22DA               	addwfc	fsr2h,f,c
 33032   0052E6  50DF               	movf	indf2,w,c
 33033   0052E8  6FA7               	movwf	writeNVM@value& (0+255),b
 33034   0052EA  0E00               	movlw	0
 33035   0052EC  EC61  F05D         	call	_writeNVM
 33036                           
 33037                           ;../inputs.c: 130:                      } else {
 33038   0052F0  D008               	goto	l22958
 33039   0052F2                     l22956:
 33040                           
 33041                           ; BSR set to: 0
 33042                           ;../inputs.c: 131:                         outputState[io] = input;
 33043   0052F2  0EB4               	movlw	low _outputState
 33044   0052F4  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33045   0052F6  6ED9               	movwf	fsr2l,c
 33046   0052F8  6ADA               	clrf	fsr2h,c
 33047   0052FA  0E02               	movlw	high _outputState
 33048   0052FC  22DA               	addwfc	fsr2h,f,c
 33049   0052FE  C1D2  FFDF         	movff	inputScan@input,indf2
 33050   005302                     l22958:
 33051                           
 33052                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 33053   005302  0100               	movlb	0	; () banked
 33054   005304  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33055   005306  0D07               	mullw	7
 33056   005308  50F3               	movf	243,w,c
 33057   00530A  0F11               	addlw	17
 33058   00530C  EC53  F05F         	call	_getNV
 33059   005310  0100               	movlb	0	; () banked
 33060   005312  A78D               	btfss	?_getNV& (0+255),3,b
 33061   005314  D03F               	goto	l22974
 33062                           
 33063                           ; BSR set to: 0
 33064                           ;../inputs.c: 136:                         if (outputState[io]) {
 33065   005316  0EB4               	movlw	low _outputState
 33066   005318  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33067   00531A  6ED9               	movwf	fsr2l,c
 33068   00531C  6ADA               	clrf	fsr2h,c
 33069   00531E  0E02               	movlw	high _outputState
 33070   005320  22DA               	addwfc	fsr2h,f,c
 33071   005322  50DF               	movf	indf2,w,c
 33072   005324  B4D8               	btfsc	status,2,c
 33073   005326  D01B               	goto	l22968
 33074                           
 33075                           ; BSR set to: 0
 33076                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 33077   005328  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33078   00532A  0D07               	mullw	7
 33079   00532C  50F3               	movf	243,w,c
 33080   00532E  0F11               	addlw	17
 33081   005330  EC53  F05F         	call	_getNV
 33082   005334  0100               	movlb	0	; () banked
 33083   005336  AD8D               	btfss	?_getNV& (0+255),6,b
 33084   005338  D009               	goto	l22966
 33085                           
 33086                           ; BSR set to: 0
 33087                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 33088   00533A  0E00               	movlw	0
 33089   00533C  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 33090   00533E  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33091   005340  0D04               	mullw	4
 33092   005342  50F3               	movf	243,w,c
 33093   005344  0F08               	addlw	8
 33094   005346  ECCC  F04B         	call	_sendProducedEvent
 33095                           
 33096                           ;../inputs.c: 141:                             } else {
 33097   00534A  D061               	goto	l22984
 33098   00534C                     l22966:
 33099                           
 33100                           ; BSR set to: 0
 33101                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 33102   00534C  0E01               	movlw	1
 33103   00534E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 33104   005350  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33105   005352  0D04               	mullw	4
 33106   005354  50F3               	movf	243,w,c
 33107   005356  0F08               	addlw	8
 33108   005358  ECCC  F04B         	call	_sendProducedEvent
 33109   00535C  D058               	goto	l22984
 33110   00535E                     l22968:
 33111                           
 33112                           ; BSR set to: 0
 33113                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 33114   00535E  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33115   005360  0D07               	mullw	7
 33116   005362  50F3               	movf	243,w,c
 33117   005364  0F11               	addlw	17
 33118   005366  EC53  F05F         	call	_getNV
 33119   00536A  0100               	movlb	0	; () banked
 33120   00536C  AD8D               	btfss	?_getNV& (0+255),6,b
 33121   00536E  D009               	goto	l22972
 33122                           
 33123                           ; BSR set to: 0
 33124                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 33125   005370  0E00               	movlw	0
 33126   005372  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 33127   005374  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33128   005376  0D04               	mullw	4
 33129   005378  50F3               	movf	243,w,c
 33130   00537A  0F09               	addlw	9
 33131   00537C  ECCC  F04B         	call	_sendProducedEvent
 33132                           
 33133                           ;../inputs.c: 147:                             } else {
 33134   005380  D046               	goto	l22984
 33135   005382                     l22972:
 33136                           
 33137                           ; BSR set to: 0
 33138                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 33139   005382  0E01               	movlw	1
 33140   005384  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 33141   005386  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33142   005388  0D04               	mullw	4
 33143   00538A  50F3               	movf	243,w,c
 33144   00538C  0F09               	addlw	9
 33145   00538E  ECCC  F04B         	call	_sendProducedEvent
 33146   005392  D03D               	goto	l22984
 33147   005394                     l22974:
 33148                           
 33149                           ; BSR set to: 0
 33150                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 33151   005394  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33152   005396  0D07               	mullw	7
 33153   005398  50F3               	movf	243,w,c
 33154   00539A  0F11               	addlw	17
 33155   00539C  EC53  F05F         	call	_getNV
 33156   0053A0  0100               	movlb	0	; () banked
 33157   0053A2  AD8D               	btfss	?_getNV& (0+255),6,b
 33158   0053A4  D014               	goto	l22978
 33159                           
 33160                           ; BSR set to: 0
 33161                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 33162   0053A6  0EB4               	movlw	low _outputState
 33163   0053A8  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33164   0053AA  6ED9               	movwf	fsr2l,c
 33165   0053AC  6ADA               	clrf	fsr2h,c
 33166   0053AE  0E02               	movlw	high _outputState
 33167   0053B0  22DA               	addwfc	fsr2h,f,c
 33168   0053B2  50DF               	movf	indf2,w,c
 33169   0053B4  A4D8               	btfss	status,2,c
 33170   0053B6  D002               	goto	u24490
 33171   0053B8  0E01               	movlw	1
 33172   0053BA  D001               	goto	u24500
 33173   0053BC                     u24490:
 33174   0053BC  0E00               	movlw	0
 33175   0053BE                     u24500:
 33176   0053BE  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 33177   0053C0  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33178   0053C2  0D04               	mullw	4
 33179   0053C4  50F3               	movf	243,w,c
 33180   0053C6  0F08               	addlw	8
 33181   0053C8  ECCC  F04B         	call	_sendProducedEvent
 33182                           
 33183                           ;../inputs.c: 155:                         } else {
 33184   0053CC  D020               	goto	l22984
 33185   0053CE                     l22978:
 33186                           
 33187                           ; BSR set to: 0
 33188                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 33189   0053CE  0EB4               	movlw	low _outputState
 33190   0053D0  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33191   0053D2  6ED9               	movwf	fsr2l,c
 33192   0053D4  6ADA               	clrf	fsr2h,c
 33193   0053D6  0E02               	movlw	high _outputState
 33194   0053D8  22DA               	addwfc	fsr2h,f,c
 33195   0053DA  50DF               	movf	indf2,w,c
 33196   0053DC  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 33197   0053DE  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33198   0053E0  0D04               	mullw	4
 33199   0053E2  50F3               	movf	243,w,c
 33200   0053E4  0F08               	addlw	8
 33201   0053E6  ECCC  F04B         	call	_sendProducedEvent
 33202   0053EA  D011               	goto	l22984
 33203   0053EC                     l22980:
 33204                           
 33205                           ; BSR set to: 1
 33206                           ;../inputs.c: 160:                     delayCount[io]++;
 33207   0053EC  0E84               	movlw	low _delayCount
 33208   0053EE  0100               	movlb	0	; () banked
 33209   0053F0  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33210   0053F2  6ED9               	movwf	fsr2l,c
 33211   0053F4  6ADA               	clrf	fsr2h,c
 33212   0053F6  0E02               	movlw	high _delayCount
 33213   0053F8  22DA               	addwfc	fsr2h,f,c
 33214   0053FA  2ADF               	incf	indf2,f,c
 33215   0053FC  D008               	goto	l22984
 33216   0053FE                     l22982:
 33217                           
 33218                           ; BSR set to: 1
 33219                           ;../inputs.c: 163:                 delayCount[io] = 0;
 33220   0053FE  0E84               	movlw	low _delayCount
 33221   005400  0100               	movlb	0	; () banked
 33222   005402  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33223   005404  6ED9               	movwf	fsr2l,c
 33224   005406  6ADA               	clrf	fsr2h,c
 33225   005408  0E02               	movlw	high _delayCount
 33226   00540A  22DA               	addwfc	fsr2h,f,c
 33227   00540C  6ADF               	clrf	indf2,c
 33228   00540E                     l22984:
 33229   00540E  0100               	movlb	0	; () banked
 33230   005410  2BCE               	incf	_io@inputs$F849& (0+255),f,b
 33231   005412  D69D               	goto	l22918
 33232   005414                     __end_of_inputScan:
 33233                           	callstack 0
 33234                           
 33235 ;; *************** function _sendProducedEvent *****************
 33236 ;; Defined at:
 33237 ;;		line 217 in file "../../VLCBlib_PIC/event_producer_happening.c"
 33238 ;; Parameters:    Size  Location     Type
 33239 ;;  happening       1    wreg     unsigned char 
 33240 ;;  onOff           1   71[BANK0 ] enum E12736
 33241 ;; Auto vars:     Size  Location     Type
 33242 ;;  happening       1   17[BANK1 ] unsigned char 
 33243 ;;  producedEven    2   15[BANK1 ] struct Word
 33244 ;;  producedEven    2   13[BANK1 ] struct Word
 33245 ;;  opc             1   12[BANK1 ] unsigned char 
 33246 ;; Return value:  Size  Location     Type
 33247 ;;                  1    wreg      enum E12716
 33248 ;; Registers used:
 33249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33250 ;; Tracked objects:
 33251 ;;		On entry : 0/0
 33252 ;;		On exit  : 0/0
 33253 ;;		Unchanged: 0/0
 33254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33255 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33256 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33258 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33259 ;;Total ram usage:        8 bytes
 33260 ;; Hardware stack levels used: 1
 33261 ;; Hardware stack levels required when called: 17
 33262 ;; This function calls:
 33263 ;;		_getEN
 33264 ;;		_getNN
 33265 ;;		_sendMessage4
 33266 ;; This function is called by:
 33267 ;;		_loop
 33268 ;;		_processOutputs
 33269 ;;		_inputScan
 33270 ;;		_sendInvertedProducedEvent
 33271 ;;		_pollServos
 33272 ;;		_alwaysSendInvertedProducedEvent
 33273 ;; This function uses a non-reentrant model
 33274 ;;
 33275                           
 33276                           	psect	text129
 33277   009798                     __ptext129:
 33278                           	callstack 0
 33279   009798                     _sendProducedEvent:
 33280                           	callstack 9
 33281                           
 33282                           ; BSR set to: 0
 33283                           ;incstack = 0
 33284                           ;sendProducedEvent@happening stored from wreg
 33285   009798  0101               	movlb	1	; () banked
 33286   00979A  6FCE               	movwf	sendProducedEvent@happening& (0+255),b
 33287                           
 33288                           ;../../VLCBlib_PIC/event_producer_happening.c: 218:     Word producedEventNN;;../../VLCB
      +                          lib_PIC/event_producer_happening.c: 219:     Word producedEventEN;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 220:     uint8_t opc;;../../VLCBlib_PIC/event_producer_happenin
      +                          g.c: 226:     if ((happening < 1) || (happening > (7+16*4))) return FALSE;
 33289   00979C  0101               	movlb	1	; () banked
 33290   00979E  51CE               	movf	sendProducedEvent@happening& (0+255),w,b
 33291   0097A0  B4D8               	btfsc	status,2,c
 33292   0097A2  D003               	goto	u20050
 33293                           
 33294                           ; BSR set to: 1
 33295   0097A4  0E47               	movlw	71
 33296   0097A6  65CE               	cpfsgt	sendProducedEvent@happening& (0+255),b
 33297   0097A8  D002               	goto	l19856
 33298   0097AA                     u20050:
 33299                           
 33300                           ; BSR set to: 1
 33301   0097AA  0E00               	movlw	0
 33302   0097AC  0012               	return	
 33303   0097AE                     l19856:
 33304                           
 33305                           ; BSR set to: 1
 33306                           ;../../VLCBlib_PIC/event_producer_happening.c: 227:     if (happening2Event[happening-1]
      +                           == 0xff) return FALSE;
 33307   0097AE  0EFF               	movlw	low (_happening2Event+65535)
 33308   0097B0  25CE               	addwf	sendProducedEvent@happening& (0+255),w,b
 33309   0097B2  6ED9               	movwf	fsr2l,c
 33310   0097B4  6ADA               	clrf	fsr2h,c
 33311   0097B6  0E02               	movlw	high (_happening2Event+65535)
 33312   0097B8  22DA               	addwfc	fsr2h,f,c
 33313   0097BA  28DE               	incf	postinc2,w,c
 33314   0097BC  B4D8               	btfsc	status,2,c
 33315   0097BE  D7F5               	goto	u20050
 33316                           
 33317                           ; BSR set to: 1
 33318                           ;../../VLCBlib_PIC/event_producer_happening.c: 228:     producedEventNN.word = getNN(hap
      +                          pening2Event[happening-1]);
 33319   0097C0  0EFF               	movlw	low (_happening2Event+65535)
 33320   0097C2  25CE               	addwf	sendProducedEvent@happening& (0+255),w,b
 33321   0097C4  6ED9               	movwf	fsr2l,c
 33322   0097C6  6ADA               	clrf	fsr2h,c
 33323   0097C8  0E02               	movlw	high (_happening2Event+65535)
 33324   0097CA  22DA               	addwfc	fsr2h,f,c
 33325   0097CC  50DF               	movf	indf2,w,c
 33326   0097CE  ECB0  F04A         	call	_getNN
 33327   0097D2  C097  F1CC         	movff	?_getNN,sendProducedEvent@producedEventNN
 33328   0097D6  C098  F1CD         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 33329                           
 33330                           ;../../VLCBlib_PIC/event_producer_happening.c: 229:     producedEventEN.word = getEN(hap
      +                          pening2Event[happening-1]);
 33331   0097DA  0EFF               	movlw	low (_happening2Event+65535)
 33332   0097DC  0101               	movlb	1	; () banked
 33333   0097DE  25CE               	addwf	sendProducedEvent@happening& (0+255),w,b
 33334   0097E0  6ED9               	movwf	fsr2l,c
 33335   0097E2  6ADA               	clrf	fsr2h,c
 33336   0097E4  0E02               	movlw	high (_happening2Event+65535)
 33337   0097E6  22DA               	addwfc	fsr2h,f,c
 33338   0097E8  50DF               	movf	indf2,w,c
 33339   0097EA  EC9A  F056         	call	_getEN
 33340   0097EE  C097  F1CA         	movff	?_getEN,sendProducedEvent@producedEventEN
 33341   0097F2  C098  F1CB         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 33342                           
 33343                           ;../../VLCBlib_PIC/event_producer_happening.c: 253:                 if (producedEventNN.
      +                          word == 0) {
 33344   0097F6  0101               	movlb	1	; () banked
 33345   0097F8  51CC               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 33346   0097FA  11CD               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 33347   0097FC  A4D8               	btfss	status,2,c
 33348   0097FE  D00E               	goto	l19874
 33349                           
 33350                           ; BSR set to: 1
 33351                           ;../../VLCBlib_PIC/event_producer_happening.c: 255:                     if (onOff == EVE
      +                          NT_ON) {
 33352   009800  0100               	movlb	0	; () banked
 33353   009802  05A7               	decf	sendProducedEvent@onOff& (0+255),w,b
 33354   009804  A4D8               	btfss	status,2,c
 33355   009806  D002               	goto	l19870
 33356                           
 33357                           ; BSR set to: 0
 33358                           ;../../VLCBlib_PIC/event_producer_happening.c: 256:                         opc = OPC_AS
      +                          ON;
 33359   009808  0E98               	movlw	152
 33360   00980A  D001               	goto	L15
 33361   00980C                     l19870:
 33362                           
 33363                           ; BSR set to: 0
 33364                           ;../../VLCBlib_PIC/event_producer_happening.c: 258:                         opc = OPC_AS
      +                          OF;
 33365   00980C  0E99               	movlw	153
 33366   00980E                     L15:
 33367   00980E  0101               	movlb	1	; () banked
 33368   009810  6FC9               	movwf	sendProducedEvent@opc& (0+255),b
 33369                           
 33370                           ; BSR set to: 1
 33371                           ;../../VLCBlib_PIC/event_producer_happening.c: 260:                     producedEventNN.
      +                          word = nn.word;
 33372   009812  C0B5  F1CC         	movff	_nn,sendProducedEvent@producedEventNN
 33373   009816  C0B6  F1CD         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 33374                           
 33375                           ;../../VLCBlib_PIC/event_producer_happening.c: 261:                 } else {
 33376   00981A  D009               	goto	l19880
 33377   00981C                     l19874:
 33378                           
 33379                           ; BSR set to: 1
 33380                           ;../../VLCBlib_PIC/event_producer_happening.c: 263:                     if (onOff == EVE
      +                          NT_ON) {
 33381   00981C  0100               	movlb	0	; () banked
 33382   00981E  05A7               	decf	sendProducedEvent@onOff& (0+255),w,b
 33383   009820  A4D8               	btfss	status,2,c
 33384   009822  D002               	goto	l19878
 33385                           
 33386                           ; BSR set to: 0
 33387                           ;../../VLCBlib_PIC/event_producer_happening.c: 264:                         opc = OPC_AC
      +                          ON;
 33388   009824  0E90               	movlw	144
 33389   009826  D001               	goto	L16
 33390   009828                     l19878:
 33391                           
 33392                           ; BSR set to: 0
 33393                           ;../../VLCBlib_PIC/event_producer_happening.c: 266:                         opc = OPC_AC
      +                          OF;
 33394   009828  0E91               	movlw	145
 33395   00982A                     L16:
 33396   00982A  0101               	movlb	1	; () banked
 33397   00982C  6FC9               	movwf	sendProducedEvent@opc& (0+255),b
 33398   00982E                     l19880:
 33399                           
 33400                           ; BSR set to: 1
 33401                           ;../../VLCBlib_PIC/event_producer_happening.c: 269:                 sendMessage4(opc, pr
      +                          oducedEventNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEven
      +                          tEN.bytes.lo);
 33402   00982E  C1CD  F1C5         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 33403   009832  C1CC  F1C6         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 33404   009836  C1CB  F1C7         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 33405   00983A  C1CA  F1C8         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 33406   00983E  51C9               	movf	sendProducedEvent@opc& (0+255),w,b
 33407   009840  ECFA  F060         	call	_sendMessage4
 33408                           
 33409                           ;../../VLCBlib_PIC/event_producer_happening.c: 271:                 producerDiagnostics[
      +                          1].asUint++;
 33410   009844  0101               	movlb	1	; () banked
 33411   009846  4BAF               	infsnz	(_producerDiagnostics+2)& (0+255),f,b
 33412   009848  2BB0               	incf	(_producerDiagnostics+3)& (0+255),f,b
 33413                           
 33414                           ; BSR set to: 1
 33415                           ;../../VLCBlib_PIC/event_producer_happening.c: 273:                 return TRUE;
 33416   00984A  0E01               	movlw	1
 33417                           
 33418                           ; BSR set to: 1
 33419   00984C  0012               	return		;funcret
 33420   00984E                     __end_of_sendProducedEvent:
 33421                           	callstack 0
 33422                           
 33423 ;; *************** function _sendMessage4 *****************
 33424 ;; Defined at:
 33425 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 33426 ;; Parameters:    Size  Location     Type
 33427 ;;  opc             1    wreg     enum E12392
 33428 ;;  data1           1    8[BANK1 ] unsigned char 
 33429 ;;  data2           1    9[BANK1 ] unsigned char 
 33430 ;;  data3           1   10[BANK1 ] unsigned char 
 33431 ;;  data4           1   11[BANK1 ] unsigned char 
 33432 ;; Auto vars:     Size  Location     Type
 33433 ;;  opc             1   70[BANK0 ] enum E12392
 33434 ;; Return value:  Size  Location     Type
 33435 ;;                  1    wreg      void 
 33436 ;; Registers used:
 33437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33438 ;; Tracked objects:
 33439 ;;		On entry : 0/0
 33440 ;;		On exit  : 0/0
 33441 ;;		Unchanged: 0/0
 33442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33443 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33446 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33447 ;;Total ram usage:        5 bytes
 33448 ;; Hardware stack levels used: 1
 33449 ;; Hardware stack levels required when called: 16
 33450 ;; This function calls:
 33451 ;;		_sendMessage
 33452 ;; This function is called by:
 33453 ;;		_mnsProcessMessage
 33454 ;;		_mnsTRrqnpnCallback
 33455 ;;		_nvProcessMessage
 33456 ;;		_nvTRnvrdCallback
 33457 ;;		_producerProcessMessage
 33458 ;;		_sendProducedEvent
 33459 ;; This function uses a non-reentrant model
 33460 ;;
 33461                           
 33462                           	psect	text130
 33463   00C1F4                     __ptext130:
 33464                           	callstack 0
 33465   00C1F4                     _sendMessage4:
 33466                           	callstack 12
 33467                           
 33468                           ; BSR set to: 1
 33469                           ;incstack = 0
 33470                           ;sendMessage4@opc stored from wreg
 33471   00C1F4  0100               	movlb	0	; () banked
 33472   00C1F6  6FA6               	movwf	sendMessage4@opc& (0+255),b
 33473                           
 33474                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 33475   00C1F8  0E05               	movlw	5
 33476   00C1FA  0101               	movlb	1	; () banked
 33477   00C1FC  6FBD               	movwf	sendMessage@len& (0+255),b
 33478   00C1FE  C1C5  F1BE         	movff	sendMessage4@data1,sendMessage@data1
 33479   00C202  C1C6  F1BF         	movff	sendMessage4@data2,sendMessage@data2
 33480   00C206  C1C7  F1C0         	movff	sendMessage4@data3,sendMessage@data3
 33481   00C20A  C1C8  F1C1         	movff	sendMessage4@data4,sendMessage@data4
 33482   00C20E  0E00               	movlw	0
 33483   00C210  6FC2               	movwf	sendMessage@data5& (0+255),b
 33484   00C212  0E00               	movlw	0
 33485   00C214  6FC3               	movwf	sendMessage@data6& (0+255),b
 33486   00C216  0E00               	movlw	0
 33487   00C218  6FC4               	movwf	sendMessage@data7& (0+255),b
 33488   00C21A  0100               	movlb	0	; () banked
 33489   00C21C  51A6               	movf	sendMessage4@opc& (0+255),w,b
 33490   00C21E  ECA2  F055         	call	_sendMessage
 33491   00C222  0012               	return		;funcret
 33492   00C224                     __end_of_sendMessage4:
 33493                           	callstack 0
 33494                           
 33495 ;; *************** function _sendMessage *****************
 33496 ;; Defined at:
 33497 ;;		line 1226 in file "../../VLCBlib_PIC/vlcb.c"
 33498 ;; Parameters:    Size  Location     Type
 33499 ;;  opc             1    wreg     enum E12392
 33500 ;;  len             1    0[BANK1 ] unsigned char 
 33501 ;;  data1           1    1[BANK1 ] unsigned char 
 33502 ;;  data2           1    2[BANK1 ] unsigned char 
 33503 ;;  data3           1    3[BANK1 ] unsigned char 
 33504 ;;  data4           1    4[BANK1 ] unsigned char 
 33505 ;;  data5           1    5[BANK1 ] unsigned char 
 33506 ;;  data6           1    6[BANK1 ] unsigned char 
 33507 ;;  data7           1    7[BANK1 ] unsigned char 
 33508 ;; Auto vars:     Size  Location     Type
 33509 ;;  opc             1   69[BANK0 ] enum E12392
 33510 ;; Return value:  Size  Location     Type
 33511 ;;                  1    wreg      void 
 33512 ;; Registers used:
 33513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33514 ;; Tracked objects:
 33515 ;;		On entry : 0/0
 33516 ;;		On exit  : 0/0
 33517 ;;		Unchanged: 0/0
 33518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33519 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33522 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33523 ;;Total ram usage:       11 bytes
 33524 ;; Hardware stack levels used: 1
 33525 ;; Hardware stack levels required when called: 15
 33526 ;; This function calls:
 33527 ;;		_canSendMessage
 33528 ;; This function is called by:
 33529 ;;		_sendMessage2
 33530 ;;		_sendMessage3
 33531 ;;		_sendMessage4
 33532 ;;		_sendMessage5
 33533 ;;		_sendMessage6
 33534 ;;		_sendMessage7
 33535 ;;		_sendMessage0
 33536 ;;		_sendMessage1
 33537 ;; This function uses a non-reentrant model
 33538 ;;
 33539                           
 33540                           	psect	text131
 33541   00AB44                     __ptext131:
 33542                           	callstack 0
 33543   00AB44                     _sendMessage:
 33544                           	callstack 11
 33545                           
 33546                           ;incstack = 0
 33547                           ;sendMessage@opc stored from wreg
 33548   00AB44  0100               	movlb	0	; () banked
 33549   00AB46  6FA5               	movwf	sendMessage@opc& (0+255),b
 33550                           
 33551                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.opc = opc;
 33552   00AB48  C0A5  F19F         	movff	sendMessage@opc,_tmpMessage+1
 33553                           
 33554                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.len = len;
 33555   00AB4C  C1BD  F19E         	movff	sendMessage@len,_tmpMessage
 33556                           
 33557                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[0] = data1;
 33558   00AB50  C1BE  F1A0         	movff	sendMessage@data1,_tmpMessage+2
 33559                           
 33560                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[1] = data2;
 33561   00AB54  C1BF  F1A1         	movff	sendMessage@data2,_tmpMessage+3
 33562                           
 33563                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[2] = data3;
 33564   00AB58  C1C0  F1A2         	movff	sendMessage@data3,_tmpMessage+4
 33565                           
 33566                           ;../../VLCBlib_PIC/vlcb.c: 1232:     tmpMessage.bytes[3] = data4;
 33567   00AB5C  C1C1  F1A3         	movff	sendMessage@data4,_tmpMessage+5
 33568                           
 33569                           ;../../VLCBlib_PIC/vlcb.c: 1233:     tmpMessage.bytes[4] = data5;
 33570   00AB60  C1C2  F1A4         	movff	sendMessage@data5,_tmpMessage+6
 33571                           
 33572                           ;../../VLCBlib_PIC/vlcb.c: 1234:     tmpMessage.bytes[5] = data6;
 33573   00AB64  C1C3  F1A5         	movff	sendMessage@data6,_tmpMessage+7
 33574                           
 33575                           ;../../VLCBlib_PIC/vlcb.c: 1235:     tmpMessage.bytes[6] = data7;
 33576   00AB68  C1C4  F1A6         	movff	sendMessage@data7,_tmpMessage+8
 33577                           
 33578                           ;../../VLCBlib_PIC/vlcb.c: 1236:     if (transport != ((void*)0)) {
 33579   00AB6C  0101               	movlb	1	; () banked
 33580   00AB6E  5166               	movf	_transport& (0+255),w,b
 33581   00AB70  1167               	iorwf	(_transport+1)& (0+255),w,b
 33582   00AB72  B4D8               	btfsc	status,2,c
 33583   00AB74  0012               	return	
 33584                           
 33585                           ; BSR set to: 1
 33586                           ;../../VLCBlib_PIC/vlcb.c: 1237:         if (transport->sendMessage != ((void*)0)) {
 33587   00AB76  C166  FFF6         	movff	_transport,tblptrl
 33588   00AB7A  C167  FFF7         	movff	_transport+1,tblptrh
 33589   00AB7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33590   00AB7E  6AF8               	clrf	tblptru,c
 33591   00AB80                     	endif
 33592   00AB80                     	if	0	;tblptru may be non-zero
 33593   00AB80                     	endif
 33594   00AB80  0009               	tblrd		*+
 33595   00AB82  50F5               	movf	tablat,w,c
 33596   00AB84  0009               	tblrd		*+
 33597   00AB86  10F5               	iorwf	tablat,w,c
 33598   00AB88  B4D8               	btfsc	status,2,c
 33599   00AB8A  0012               	return	
 33600                           
 33601                           ; BSR set to: 1
 33602                           ;../../VLCBlib_PIC/vlcb.c: 1238:             transport->sendMessage(&tmpMessage);
 33603   00AB8C  0E9E               	movlw	low _tmpMessage
 33604   00AB8E  0100               	movlb	0	; () banked
 33605   00AB90  6F99               	movwf	canSendMessage@mp& (0+255),b
 33606   00AB92  0E01               	movlw	high _tmpMessage
 33607   00AB94  6F9A               	movwf	(canSendMessage@mp+1)& (0+255),b
 33608   00AB96  C166  FFF6         	movff	_transport,tblptrl
 33609   00AB9A  C167  FFF7         	movff	_transport+1,tblptrh
 33610   00AB9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33611   00AB9E  6AF8               	clrf	tblptru,c
 33612   00ABA0                     	endif
 33613   00ABA0                     	if	0	;tblptru may be non-zero
 33614   00ABA0                     	endif
 33615   00ABA0  0009               	tblrd		*+
 33616   00ABA2  CFF5 F0A3          	movff	tablat,??_sendMessage
 33617   00ABA6  0009               	tblrd		*+
 33618   00ABA8  CFF5 F0A4          	movff	tablat,??_sendMessage+1
 33619   00ABAC  D801               	call	u19708
 33620   00ABAE  0012               	return	
 33621   00ABB0                     u19708:
 33622   00ABB0  0005               	push	
 33623   00ABB2  6EFA               	movwf	pclath,c
 33624   00ABB4  51A3               	movf	??_sendMessage& (0+255),w,b
 33625   00ABB6  6EFD               	movwf	tosl,c
 33626   00ABB8  51A4               	movf	(??_sendMessage+1)& (0+255),w,b
 33627   00ABBA  6EFE               	movwf	tosh,c
 33628   00ABBC  6AFF               	clrf	tosu,c
 33629   00ABBE  50FA               	movf	pclath,w,c
 33630   00ABC0  0012               	return		;indir
 33631   00ABC2                     __end_of_sendMessage:
 33632                           	callstack 0
 33633                           
 33634 ;; *************** function _canSendMessage *****************
 33635 ;; Defined at:
 33636 ;;		line 493 in file "../../VLCBlib_PIC/can18_ecan.c"
 33637 ;; Parameters:    Size  Location     Type
 33638 ;;  mp              2   57[BANK0 ] PTR struct Message
 33639 ;;		 -> tmpMessage(9), 
 33640 ;; Auto vars:     Size  Location     Type
 33641 ;;  m               2   65[BANK0 ] PTR struct Message
 33642 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 33643 ;;  no              1   64[BANK0 ] unsigned char 
 33644 ;; Return value:  Size  Location     Type
 33645 ;;                  1    wreg      enum E13081
 33646 ;; Registers used:
 33647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33648 ;; Tracked objects:
 33649 ;;		On entry : 0/0
 33650 ;;		On exit  : 0/0
 33651 ;;		Unchanged: 0/0
 33652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33654 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33655 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33656 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33657 ;;Total ram usage:       10 bytes
 33658 ;; Hardware stack levels used: 1
 33659 ;; Hardware stack levels required when called: 14
 33660 ;; This function calls:
 33661 ;;		_getNextWriteMessage
 33662 ;;		_getNumTxBuffersInUse
 33663 ;;		_have
 33664 ;;		_isEvent
 33665 ;;		_push
 33666 ;;		_quantity
 33667 ;;		_updateModuleErrorStatus
 33668 ;; This function is called by:
 33669 ;;		_sendMessage
 33670 ;; This function uses a non-reentrant model
 33671 ;;
 33672                           
 33673                           	psect	text132
 33674   004B6E                     __ptext132:
 33675                           	callstack 0
 33676   004B6E                     _canSendMessage:
 33677                           	callstack 11
 33678                           
 33679                           ;../../VLCBlib_PIC/can18_ecan.c: 495:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          98:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 502:     PIE5bits.TXBnIE = 0;
 33680                           
 33681                           ;incstack = 0
 33682   004B6E  9876               	bcf	118,4,c	;volatile
 33683                           
 33684                           ;../../VLCBlib_PIC/can18_ecan.c: 503:     if (quantity(&txQueue) == 0) {
 33685   004B70  0E4A               	movlw	low _txQueue
 33686   004B72  0100               	movlb	0	; () banked
 33687   004B74  6F8D               	movwf	quantity@q& (0+255),b
 33688   004B76  EC03  F060         	call	_quantity	;wreg free
 33689   004B7A  0900               	iorlw	0
 33690   004B7C  A4D8               	btfss	status,2,c
 33691   004B7E  D150               	goto	l19488
 33692                           
 33693                           ;../../VLCBlib_PIC/can18_ecan.c: 505:         if (TXB0CONbits.TXREQ == 0) {
 33694   004B80  010F               	movlb	15	; () banked
 33695   004B82  B720               	btfsc	32,3,b	;volatile
 33696   004B84  D14D               	goto	l19488
 33697                           
 33698                           ; BSR set to: 15
 33699                           ;../../VLCBlib_PIC/can18_ecan.c: 507:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 33700   004B86  0100               	movlb	0	; () banked
 33701   004B88  51B9               	movf	_canId& (0+255),w,b
 33702   004B8A  A4D8               	btfss	status,2,c
 33703   004B8C  D007               	goto	l19424
 33704                           
 33705                           ; BSR set to: 0
 33706   004B8E  51B7               	movf	_enumerationState& (0+255),w,b
 33707   004B90  A4D8               	btfss	status,2,c
 33708   004B92  D004               	goto	l19424
 33709                           
 33710                           ; BSR set to: 0
 33711                           ;../../VLCBlib_PIC/can18_ecan.c: 508:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 33712   004B94  0E01               	movlw	1
 33713   004B96  6FB7               	movwf	_enumerationState& (0+255),b
 33714                           
 33715                           ;../../VLCBlib_PIC/can18_ecan.c: 509:                 canId = 1;
 33716   004B98  0E01               	movlw	1
 33717   004B9A  6FB9               	movwf	_canId& (0+255),b
 33718   004B9C                     l19424:
 33719                           
 33720                           ; BSR set to: 0
 33721                           ;../../VLCBlib_PIC/can18_ecan.c: 511:             PIE5bits.TXBnIE = 1;
 33722   004B9C  8876               	bsf	118,4,c	;volatile
 33723                           
 33724                           ; BSR set to: 0
 33725                           ;../../VLCBlib_PIC/can18_ecan.c: 513:             if (mp->len >8) mp->len = 8;
 33726   004B9E  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33727   004BA2  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33728   004BA6  0E08               	movlw	8
 33729   004BA8  64DF               	cpfsgt	indf2,c
 33730   004BAA  D006               	goto	l19430
 33731                           
 33732                           ; BSR set to: 0
 33733   004BAC  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33734   004BB0  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33735   004BB4  0E08               	movlw	8
 33736   004BB6  6EDF               	movwf	indf2,c
 33737   004BB8                     l19430:
 33738                           
 33739                           ; BSR set to: 0
 33740                           ;../../VLCBlib_PIC/can18_ecan.c: 515:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 33741   004BB8  EE20 F001          	lfsr	2,1
 33742   004BBC  5199               	movf	canSendMessage@mp& (0+255),w,b
 33743   004BBE  26D9               	addwf	fsr2l,f,c
 33744   004BC0  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33745   004BC2  22DA               	addwfc	fsr2h,f,c
 33746   004BC4  50DF               	movf	indf2,w,c
 33747   004BC6  6F9B               	movwf	??_canSendMessage& (0+255),b
 33748   004BC8  6B9C               	clrf	(??_canSendMessage+1)& (0+255),b
 33749   004BCA  0E29               	movlw	low _priorities
 33750   004BCC  259B               	addwf	??_canSendMessage& (0+255),w,b
 33751   004BCE  6EF6               	movwf	tblptrl,c
 33752   004BD0  0EED               	movlw	high _priorities
 33753   004BD2  219C               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 33754   004BD4  6EF7               	movwf	tblptrh,c
 33755   004BD6                     	if	1	;There are 3 active tblptr bytes
 33756   004BD6  6AF8               	clrf	tblptru,c
 33757   004BD8  0E00               	movlw	low (__mediumconst shr (0+16))
 33758   004BDA  22F8               	addwfc	tblptru,f,c
 33759   004BDC                     	endif
 33760   004BDC  0008               	tblrd		*
 33761   004BDE  50F5               	movf	tablat,w,c
 33762   004BE0  6F9D               	movwf	(??_canSendMessage+2)& (0+255),b
 33763   004BE2  6B9E               	clrf	(??_canSendMessage+3)& (0+255),b
 33764   004BE4  0E86               	movlw	low _canPri
 33765   004BE6  259D               	addwf	(??_canSendMessage+2)& (0+255),w,b
 33766   004BE8  6EF6               	movwf	tblptrl,c
 33767   004BEA  0EEE               	movlw	high _canPri
 33768   004BEC  219E               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 33769   004BEE  6EF7               	movwf	tblptrh,c
 33770   004BF0                     	if	1	;There are 3 active tblptr bytes
 33771   004BF0  6AF8               	clrf	tblptru,c
 33772   004BF2  0E00               	movlw	low (__mediumconst shr (0+16))
 33773   004BF4  22F8               	addwfc	tblptru,f,c
 33774   004BF6                     	endif
 33775   004BF6  0008               	tblrd		*
 33776   004BF8  CFF5 F09F          	movff	tablat,??_canSendMessage+4
 33777   004BFC  39B9               	swapf	_canId& (0+255),w,b
 33778   004BFE  46E8               	rlncf	wreg,f,c
 33779   004C00  0B1F               	andlw	31
 33780   004C02  0B0F               	andlw	15
 33781   004C04  119F               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 33782   004C06  010F               	movlb	15	; () banked
 33783   004C08  6F21               	movwf	33,b	;volatile
 33784                           
 33785                           ; BSR set to: 15
 33786                           ;../../VLCBlib_PIC/can18_ecan.c: 516:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 33787   004C0A  C0B9  F09B         	movff	_canId,??_canSendMessage
 33788   004C0E  0E07               	movlw	7
 33789   004C10  0100               	movlb	0	; () banked
 33790   004C12  179B               	andwf	??_canSendMessage& (0+255),f,b
 33791   004C14  0E05               	movlw	5
 33792   004C16  6F9C               	movwf	(??_canSendMessage+1)& (0+255),b
 33793   004C18                     u19365:
 33794   004C18  90D8               	bcf	status,0,c
 33795   004C1A  379B               	rlcf	??_canSendMessage& (0+255),f,b
 33796   004C1C  2F9C               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 33797   004C1E  D7FC               	goto	u19365
 33798   004C20  519B               	movf	??_canSendMessage& (0+255),w,b
 33799   004C22  010F               	movlb	15	; () banked
 33800   004C24  6F22               	movwf	34,b	;volatile
 33801                           
 33802                           ; BSR set to: 15
 33803                           ;../../VLCBlib_PIC/can18_ecan.c: 517:             TXB0D0 = mp->opc;
 33804   004C26  0100               	movlb	0	; () banked
 33805   004C28  EE20 F001          	lfsr	2,1
 33806   004C2C  5199               	movf	canSendMessage@mp& (0+255),w,b
 33807   004C2E  26D9               	addwf	fsr2l,f,c
 33808   004C30  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33809   004C32  22DA               	addwfc	fsr2h,f,c
 33810   004C34  50DF               	movf	indf2,w,c
 33811   004C36  010F               	movlb	15	; () banked
 33812   004C38  6F26               	movwf	38,b	;volatile
 33813                           
 33814                           ; BSR set to: 15
 33815                           ;../../VLCBlib_PIC/can18_ecan.c: 518:             TXB0D1 = mp->bytes[0];
 33816   004C3A  0100               	movlb	0	; () banked
 33817   004C3C  EE20 F002          	lfsr	2,2
 33818   004C40  5199               	movf	canSendMessage@mp& (0+255),w,b
 33819   004C42  26D9               	addwf	fsr2l,f,c
 33820   004C44  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33821   004C46  22DA               	addwfc	fsr2h,f,c
 33822   004C48  50DF               	movf	indf2,w,c
 33823   004C4A  010F               	movlb	15	; () banked
 33824   004C4C  6F27               	movwf	39,b	;volatile
 33825                           
 33826                           ; BSR set to: 15
 33827                           ;../../VLCBlib_PIC/can18_ecan.c: 519:             TXB0D2 = mp->bytes[1];
 33828   004C4E  0100               	movlb	0	; () banked
 33829   004C50  EE20 F003          	lfsr	2,3
 33830   004C54  5199               	movf	canSendMessage@mp& (0+255),w,b
 33831   004C56  26D9               	addwf	fsr2l,f,c
 33832   004C58  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33833   004C5A  22DA               	addwfc	fsr2h,f,c
 33834   004C5C  50DF               	movf	indf2,w,c
 33835   004C5E  010F               	movlb	15	; () banked
 33836   004C60  6F28               	movwf	40,b	;volatile
 33837                           
 33838                           ; BSR set to: 15
 33839                           ;../../VLCBlib_PIC/can18_ecan.c: 520:             TXB0D3 = mp->bytes[2];
 33840   004C62  0100               	movlb	0	; () banked
 33841   004C64  EE20 F004          	lfsr	2,4
 33842   004C68  5199               	movf	canSendMessage@mp& (0+255),w,b
 33843   004C6A  26D9               	addwf	fsr2l,f,c
 33844   004C6C  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33845   004C6E  22DA               	addwfc	fsr2h,f,c
 33846   004C70  50DF               	movf	indf2,w,c
 33847   004C72  010F               	movlb	15	; () banked
 33848   004C74  6F29               	movwf	41,b	;volatile
 33849                           
 33850                           ; BSR set to: 15
 33851                           ;../../VLCBlib_PIC/can18_ecan.c: 521:             TXB0D4 = mp->bytes[3];
 33852   004C76  0100               	movlb	0	; () banked
 33853   004C78  EE20 F005          	lfsr	2,5
 33854   004C7C  5199               	movf	canSendMessage@mp& (0+255),w,b
 33855   004C7E  26D9               	addwf	fsr2l,f,c
 33856   004C80  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33857   004C82  22DA               	addwfc	fsr2h,f,c
 33858   004C84  50DF               	movf	indf2,w,c
 33859   004C86  010F               	movlb	15	; () banked
 33860   004C88  6F2A               	movwf	42,b	;volatile
 33861                           
 33862                           ; BSR set to: 15
 33863                           ;../../VLCBlib_PIC/can18_ecan.c: 522:             TXB0D5 = mp->bytes[4];
 33864   004C8A  0100               	movlb	0	; () banked
 33865   004C8C  EE20 F006          	lfsr	2,6
 33866   004C90  5199               	movf	canSendMessage@mp& (0+255),w,b
 33867   004C92  26D9               	addwf	fsr2l,f,c
 33868   004C94  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33869   004C96  22DA               	addwfc	fsr2h,f,c
 33870   004C98  50DF               	movf	indf2,w,c
 33871   004C9A  010F               	movlb	15	; () banked
 33872   004C9C  6F2B               	movwf	43,b	;volatile
 33873                           
 33874                           ; BSR set to: 15
 33875                           ;../../VLCBlib_PIC/can18_ecan.c: 523:             TXB0D6 = mp->bytes[5];
 33876   004C9E  0100               	movlb	0	; () banked
 33877   004CA0  EE20 F007          	lfsr	2,7
 33878   004CA4  5199               	movf	canSendMessage@mp& (0+255),w,b
 33879   004CA6  26D9               	addwf	fsr2l,f,c
 33880   004CA8  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33881   004CAA  22DA               	addwfc	fsr2h,f,c
 33882   004CAC  50DF               	movf	indf2,w,c
 33883   004CAE  010F               	movlb	15	; () banked
 33884   004CB0  6F2C               	movwf	44,b	;volatile
 33885                           
 33886                           ; BSR set to: 15
 33887                           ;../../VLCBlib_PIC/can18_ecan.c: 524:             TXB0D7 = mp->bytes[6];
 33888   004CB2  0100               	movlb	0	; () banked
 33889   004CB4  EE20 F008          	lfsr	2,8
 33890   004CB8  5199               	movf	canSendMessage@mp& (0+255),w,b
 33891   004CBA  26D9               	addwf	fsr2l,f,c
 33892   004CBC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33893   004CBE  22DA               	addwfc	fsr2h,f,c
 33894   004CC0  50DF               	movf	indf2,w,c
 33895   004CC2  010F               	movlb	15	; () banked
 33896   004CC4  6F2D               	movwf	45,b	;volatile
 33897                           
 33898                           ; BSR set to: 15
 33899                           ;../../VLCBlib_PIC/can18_ecan.c: 525:             TXB0DLC = mp->len & 0x0F;
 33900   004CC6  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33901   004CCA  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33902   004CCE  50DF               	movf	indf2,w,c
 33903   004CD0  0B0F               	andlw	15
 33904   004CD2  6F25               	movwf	37,b	;volatile
 33905                           
 33906                           ; BSR set to: 15
 33907                           ;../../VLCBlib_PIC/can18_ecan.c: 527:             TXB0CONbits.TXREQ = 1;
 33908   004CD4  8720               	bsf	32,3,b	;volatile
 33909                           
 33910                           ; BSR set to: 15
 33911                           ;../../VLCBlib_PIC/can18_ecan.c: 529:             canDiagnostics[0x06].asUint++;
 33912   004CD6  0101               	movlb	1	; () banked
 33913   004CD8  4B76               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 33914   004CDA  2B77               	incf	(_canDiagnostics+13)& (0+255),f,b
 33915                           
 33916                           ; BSR set to: 1
 33917                           ;../../VLCBlib_PIC/can18_ecan.c: 534:             if (isEvent(mp->opc)) {
 33918   004CDC  0100               	movlb	0	; () banked
 33919   004CDE  EE20 F001          	lfsr	2,1
 33920   004CE2  5199               	movf	canSendMessage@mp& (0+255),w,b
 33921   004CE4  26D9               	addwf	fsr2l,f,c
 33922   004CE6  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33923   004CE8  22DA               	addwfc	fsr2h,f,c
 33924   004CEA  50DF               	movf	indf2,w,c
 33925   004CEC  EC3C  F062         	call	_isEvent
 33926   004CF0  0900               	iorlw	0
 33927   004CF2  B4D8               	btfsc	status,2,c
 33928   004CF4  0012               	return	
 33929                           
 33930                           ;../../VLCBlib_PIC/can18_ecan.c: 535:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 33931   004CF6  0E08               	movlw	8
 33932   004CF8  ECF7  F057         	call	_have
 33933   004CFC  0900               	iorlw	0
 33934   004CFE  B4D8               	btfsc	status,2,c
 33935   004D00  0012               	return	
 33936                           
 33937                           ;../../VLCBlib_PIC/can18_ecan.c: 537:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 33938   004D02  0E4F               	movlw	low _rxQueue
 33939   004D04  0100               	movlb	0	; () banked
 33940   004D06  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 33941   004D08  EC49  F046         	call	_getNextWriteMessage	;wreg free
 33942   004D0C  C08D  F0A1         	movff	?_getNextWriteMessage,canSendMessage@m
 33943   004D10  C08E  F0A2         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 33944                           
 33945                           ;../../VLCBlib_PIC/can18_ecan.c: 538:                     if (m == ((void*)0)) {
 33946   004D14  0100               	movlb	0	; () banked
 33947   004D16  51A1               	movf	canSendMessage@m& (0+255),w,b
 33948   004D18  11A2               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 33949   004D1A  A4D8               	btfss	status,2,c
 33950   004D1C  D006               	goto	l19468
 33951                           
 33952                           ; BSR set to: 0
 33953                           ;../../VLCBlib_PIC/can18_ecan.c: 540:                         canDiagnostics[0x08].asUin
      +                          t++;
 33954   004D1E  0101               	movlb	1	; () banked
 33955   004D20  4B7A               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 33956   004D22  2B7B               	incf	(_canDiagnostics+17)& (0+255),f,b
 33957                           
 33958                           ; BSR set to: 1
 33959                           ;../../VLCBlib_PIC/can18_ecan.c: 541:                         updateModuleErrorStatus();
 33960   004D24  ECEF  F063         	call	_updateModuleErrorStatus	;wreg free
 33961                           
 33962                           ;../../VLCBlib_PIC/can18_ecan.c: 543:                     } else {
 33963   004D28  0012               	return	
 33964   004D2A                     l19468:
 33965                           
 33966                           ; BSR set to: 0
 33967                           ;../../VLCBlib_PIC/can18_ecan.c: 545:                         m->opc = mp->opc;
 33968   004D2A  EE20 F001          	lfsr	2,1
 33969   004D2E  5199               	movf	canSendMessage@mp& (0+255),w,b
 33970   004D30  26D9               	addwf	fsr2l,f,c
 33971   004D32  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33972   004D34  22DA               	addwfc	fsr2h,f,c
 33973   004D36  EE10 F001          	lfsr	1,1
 33974   004D3A  51A1               	movf	canSendMessage@m& (0+255),w,b
 33975   004D3C  26E1               	addwf	fsr1l,f,c
 33976   004D3E  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33977   004D40  22E2               	addwfc	fsr1h,f,c
 33978   004D42  CFDF FFE7          	movff	indf2,indf1
 33979                           
 33980                           ; BSR set to: 0
 33981                           ;../../VLCBlib_PIC/can18_ecan.c: 546:                         m->len = mp->len;
 33982   004D46  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33983   004D4A  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33984   004D4E  C0A1  FFE1         	movff	canSendMessage@m,fsr1l
 33985   004D52  C0A2  FFE2         	movff	canSendMessage@m+1,fsr1h
 33986   004D56  CFDF FFE7          	movff	indf2,indf1
 33987                           
 33988                           ; BSR set to: 0
 33989                           ;../../VLCBlib_PIC/can18_ecan.c: 547:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 33990   004D5A  EE20 F002          	lfsr	2,2
 33991   004D5E  5199               	movf	canSendMessage@mp& (0+255),w,b
 33992   004D60  26D9               	addwf	fsr2l,f,c
 33993   004D62  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33994   004D64  22DA               	addwfc	fsr2h,f,c
 33995   004D66  EE10 F002          	lfsr	1,2
 33996   004D6A  51A1               	movf	canSendMessage@m& (0+255),w,b
 33997   004D6C  26E1               	addwf	fsr1l,f,c
 33998   004D6E  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33999   004D70  22E2               	addwfc	fsr1h,f,c
 34000   004D72  CFDF FFE7          	movff	indf2,indf1
 34001                           
 34002                           ; BSR set to: 0
 34003                           ;../../VLCBlib_PIC/can18_ecan.c: 548:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 34004   004D76  EE20 F003          	lfsr	2,3
 34005   004D7A  5199               	movf	canSendMessage@mp& (0+255),w,b
 34006   004D7C  26D9               	addwf	fsr2l,f,c
 34007   004D7E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34008   004D80  22DA               	addwfc	fsr2h,f,c
 34009   004D82  EE10 F003          	lfsr	1,3
 34010   004D86  51A1               	movf	canSendMessage@m& (0+255),w,b
 34011   004D88  26E1               	addwf	fsr1l,f,c
 34012   004D8A  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 34013   004D8C  22E2               	addwfc	fsr1h,f,c
 34014   004D8E  CFDF FFE7          	movff	indf2,indf1
 34015                           
 34016                           ; BSR set to: 0
 34017                           ;../../VLCBlib_PIC/can18_ecan.c: 549:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 34018   004D92  EE20 F004          	lfsr	2,4
 34019   004D96  5199               	movf	canSendMessage@mp& (0+255),w,b
 34020   004D98  26D9               	addwf	fsr2l,f,c
 34021   004D9A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34022   004D9C  22DA               	addwfc	fsr2h,f,c
 34023   004D9E  EE10 F004          	lfsr	1,4
 34024   004DA2  51A1               	movf	canSendMessage@m& (0+255),w,b
 34025   004DA4  26E1               	addwf	fsr1l,f,c
 34026   004DA6  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 34027   004DA8  22E2               	addwfc	fsr1h,f,c
 34028   004DAA  CFDF FFE7          	movff	indf2,indf1
 34029                           
 34030                           ; BSR set to: 0
 34031                           ;../../VLCBlib_PIC/can18_ecan.c: 550:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 34032   004DAE  EE20 F005          	lfsr	2,5
 34033   004DB2  5199               	movf	canSendMessage@mp& (0+255),w,b
 34034   004DB4  26D9               	addwf	fsr2l,f,c
 34035   004DB6  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34036   004DB8  22DA               	addwfc	fsr2h,f,c
 34037   004DBA  EE10 F005          	lfsr	1,5
 34038   004DBE  51A1               	movf	canSendMessage@m& (0+255),w,b
 34039   004DC0  26E1               	addwf	fsr1l,f,c
 34040   004DC2  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 34041   004DC4  22E2               	addwfc	fsr1h,f,c
 34042   004DC6  CFDF FFE7          	movff	indf2,indf1
 34043                           
 34044                           ; BSR set to: 0
 34045                           ;../../VLCBlib_PIC/can18_ecan.c: 551:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 34046   004DCA  EE20 F006          	lfsr	2,6
 34047   004DCE  5199               	movf	canSendMessage@mp& (0+255),w,b
 34048   004DD0  26D9               	addwf	fsr2l,f,c
 34049   004DD2  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34050   004DD4  22DA               	addwfc	fsr2h,f,c
 34051   004DD6  EE10 F006          	lfsr	1,6
 34052   004DDA  51A1               	movf	canSendMessage@m& (0+255),w,b
 34053   004DDC  26E1               	addwf	fsr1l,f,c
 34054   004DDE  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 34055   004DE0  22E2               	addwfc	fsr1h,f,c
 34056   004DE2  CFDF FFE7          	movff	indf2,indf1
 34057                           
 34058                           ; BSR set to: 0
 34059                           ;../../VLCBlib_PIC/can18_ecan.c: 552:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 34060   004DE6  EE20 F007          	lfsr	2,7
 34061   004DEA  5199               	movf	canSendMessage@mp& (0+255),w,b
 34062   004DEC  26D9               	addwf	fsr2l,f,c
 34063   004DEE  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34064   004DF0  22DA               	addwfc	fsr2h,f,c
 34065   004DF2  EE10 F007          	lfsr	1,7
 34066   004DF6  51A1               	movf	canSendMessage@m& (0+255),w,b
 34067   004DF8  26E1               	addwf	fsr1l,f,c
 34068   004DFA  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 34069   004DFC  22E2               	addwfc	fsr1h,f,c
 34070   004DFE  CFDF FFE7          	movff	indf2,indf1
 34071                           
 34072                           ; BSR set to: 0
 34073                           ;../../VLCBlib_PIC/can18_ecan.c: 553:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 34074   004E02  EE20 F008          	lfsr	2,8
 34075   004E06  5199               	movf	canSendMessage@mp& (0+255),w,b
 34076   004E08  26D9               	addwf	fsr2l,f,c
 34077   004E0A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34078   004E0C  22DA               	addwfc	fsr2h,f,c
 34079   004E0E  EE10 F008          	lfsr	1,8
 34080   004E12  51A1               	movf	canSendMessage@m& (0+255),w,b
 34081   004E14  26E1               	addwf	fsr1l,f,c
 34082   004E16  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 34083   004E18  22E2               	addwfc	fsr1h,f,c
 34084   004E1A  CFDF FFE7          	movff	indf2,indf1
 34085   004E1E  0012               	return	
 34086   004E20                     l19488:
 34087                           
 34088                           ;../../VLCBlib_PIC/can18_ecan.c: 562:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 34089   004E20  0E4A               	movlw	low _txQueue
 34090   004E22  0100               	movlb	0	; () banked
 34091   004E24  6F8D               	movwf	push@q& (0+255),b
 34092   004E26  C099  F08E         	movff	canSendMessage@mp,push@m
 34093   004E2A  C09A  F08F         	movff	canSendMessage@mp+1,push@m+1
 34094   004E2E  EC71  F022         	call	_push	;wreg free
 34095   004E32  0900               	iorlw	0
 34096   004E34  A4D8               	btfss	status,2,c
 34097   004E36  D007               	goto	l19498
 34098                           
 34099                           ;../../VLCBlib_PIC/can18_ecan.c: 564:         canDiagnostics[0x05].asUint++;
 34100   004E38  0101               	movlb	1	; () banked
 34101   004E3A  4B74               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 34102   004E3C  2B75               	incf	(_canDiagnostics+11)& (0+255),f,b
 34103                           
 34104                           ; BSR set to: 1
 34105                           ;../../VLCBlib_PIC/can18_ecan.c: 565:         updateModuleErrorStatus();
 34106   004E3E  ECEF  F063         	call	_updateModuleErrorStatus	;wreg free
 34107                           
 34108                           ;../../VLCBlib_PIC/can18_ecan.c: 567:         PIE5bits.TXBnIE = 1;
 34109   004E42  8876               	bsf	118,4,c	;volatile
 34110   004E44  0012               	return	
 34111   004E46                     l19498:
 34112                           
 34113                           ;../../VLCBlib_PIC/can18_ecan.c: 571:     no = getNumTxBuffersInUse();
 34114   004E46  ECE9  F063         	call	_getNumTxBuffersInUse	;wreg free
 34115   004E4A  0100               	movlb	0	; () banked
 34116   004E4C  6FA0               	movwf	canSendMessage@no& (0+255),b
 34117                           
 34118                           ; BSR set to: 0
 34119                           ;../../VLCBlib_PIC/can18_ecan.c: 572:     if (canDiagnostics[0x11].asUint < no) {
 34120   004E4E  51A0               	movf	canSendMessage@no& (0+255),w,b
 34121   004E50  0101               	movlb	1	; () banked
 34122   004E52  5D8C               	subwf	(_canDiagnostics+34)& (0+255),w,b
 34123   004E54  0E00               	movlw	0
 34124   004E56  598D               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 34125   004E58  B0D8               	btfsc	status,0,c
 34126   004E5A  D003               	goto	l2526
 34127                           
 34128                           ; BSR set to: 1
 34129                           ;../../VLCBlib_PIC/can18_ecan.c: 573:         canDiagnostics[0x11].asUint = no;
 34130   004E5C  C0A0  F18C         	movff	canSendMessage@no,_canDiagnostics+34
 34131   004E60  6B8D               	clrf	(_canDiagnostics+35)& (0+255),b
 34132   004E62                     l2526:
 34133                           
 34134                           ; BSR set to: 1
 34135                           ;../../VLCBlib_PIC/can18_ecan.c: 576:     PIE5bits.TXBnIE = 1;
 34136   004E62  8876               	bsf	118,4,c	;volatile
 34137                           
 34138                           ;../../VLCBlib_PIC/can18_ecan.c: 577:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 34139   004E64  0012               	return		;funcret
 34140   004E66                     __end_of_canSendMessage:
 34141                           	callstack 0
 34142                           
 34143 ;; *************** function _push *****************
 34144 ;; Defined at:
 34145 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 34146 ;; Parameters:    Size  Location     Type
 34147 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34148 ;;		 -> txQueue(5), 
 34149 ;;  m               2   46[BANK0 ] PTR struct Message
 34150 ;;		 -> tmpMessage(9), 
 34151 ;; Auto vars:     Size  Location     Type
 34152 ;;		None
 34153 ;; Return value:  Size  Location     Type
 34154 ;;                  1    wreg      enum E12934
 34155 ;; Registers used:
 34156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34157 ;; Tracked objects:
 34158 ;;		On entry : 0/0
 34159 ;;		On exit  : 0/0
 34160 ;;		Unchanged: 0/0
 34161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34162 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34164 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34165 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34166 ;;Total ram usage:       12 bytes
 34167 ;; Hardware stack levels used: 1
 34168 ;; Hardware stack levels required when called: 12
 34169 ;; This function calls:
 34170 ;;		Nothing
 34171 ;; This function is called by:
 34172 ;;		_canSendMessage
 34173 ;; This function uses a non-reentrant model
 34174 ;;
 34175                           
 34176                           	psect	text133
 34177   0044E2                     __ptext133:
 34178                           	callstack 0
 34179   0044E2                     _push:
 34180                           	callstack 12
 34181                           
 34182                           ;incstack = 0
 34183   0044E2  0100               	movlb	0	; () banked
 34184   0044E4  518D               	movf	push@q& (0+255),w,b
 34185   0044E6  6ED9               	movwf	fsr2l,c
 34186   0044E8  6ADA               	clrf	fsr2h,c
 34187   0044EA  0E02               	movlw	2
 34188   0044EC  26D9               	addwf	fsr2l,f,c
 34189   0044EE  50DF               	movf	indf2,w,c
 34190   0044F0  6F90               	movwf	??_push& (0+255),b
 34191   0044F2  6B91               	clrf	(??_push+1)& (0+255),b
 34192   0044F4  518D               	movf	push@q& (0+255),w,b
 34193   0044F6  6ED9               	movwf	fsr2l,c
 34194   0044F8  6ADA               	clrf	fsr2h,c
 34195   0044FA  0E04               	movlw	4
 34196   0044FC  26D9               	addwf	fsr2l,f,c
 34197   0044FE  50DF               	movf	indf2,w,c
 34198   004500  6F92               	movwf	(??_push+2)& (0+255),b
 34199   004502  0EFF               	movlw	255
 34200   004504  2592               	addwf	(??_push+2)& (0+255),w,b
 34201   004506  6F93               	movwf	(??_push+3)& (0+255),b
 34202   004508  6B94               	clrf	(??_push+4)& (0+255),b
 34203   00450A  0EFF               	movlw	255
 34204   00450C  2394               	addwfc	(??_push+4)& (0+255),f,b
 34205   00450E  518D               	movf	push@q& (0+255),w,b
 34206   004510  6ED9               	movwf	fsr2l,c
 34207   004512  6ADA               	clrf	fsr2h,c
 34208   004514  0E03               	movlw	3
 34209   004516  26D9               	addwf	fsr2l,f,c
 34210   004518  50DF               	movf	indf2,w,c
 34211   00451A  6F95               	movwf	(??_push+5)& (0+255),b
 34212   00451C  6B96               	clrf	(??_push+6)& (0+255),b
 34213   00451E  0E01               	movlw	1
 34214   004520  2795               	addwf	(??_push+5)& (0+255),f,b
 34215   004522  0E00               	movlw	0
 34216   004524  2396               	addwfc	(??_push+6)& (0+255),f,b
 34217   004526  5193               	movf	(??_push+3)& (0+255),w,b
 34218   004528  1595               	andwf	(??_push+5)& (0+255),w,b
 34219   00452A  6F97               	movwf	(??_push+7)& (0+255),b
 34220   00452C  5194               	movf	(??_push+4)& (0+255),w,b
 34221   00452E  1596               	andwf	(??_push+6)& (0+255),w,b
 34222   004530  6F98               	movwf	(??_push+8)& (0+255),b
 34223   004532  5190               	movf	??_push& (0+255),w,b
 34224   004534  1997               	xorwf	(??_push+7)& (0+255),w,b
 34225   004536  E106               	bnz	l19290
 34226   004538  5191               	movf	(??_push+1)& (0+255),w,b
 34227   00453A  1998               	xorwf	(??_push+8)& (0+255),w,b
 34228   00453C  A4D8               	btfss	status,2,c
 34229   00453E  D002               	goto	l19290
 34230                           
 34231                           ; BSR set to: 0
 34232   004540  0E00               	movlw	0
 34233   004542  0012               	return	
 34234   004544                     l19290:
 34235                           
 34236                           ; BSR set to: 0
 34237   004544  EE20 F001          	lfsr	2,1
 34238   004548  518E               	movf	push@m& (0+255),w,b
 34239   00454A  26D9               	addwf	fsr2l,f,c
 34240   00454C  518F               	movf	(push@m+1)& (0+255),w,b
 34241   00454E  22DA               	addwfc	fsr2h,f,c
 34242   004550  518D               	movf	push@q& (0+255),w,b
 34243   004552  6EE1               	movwf	fsr1l,c
 34244   004554  6AE2               	clrf	fsr1h,c
 34245   004556  0E03               	movlw	3
 34246   004558  26E1               	addwf	fsr1l,f,c
 34247   00455A  50E7               	movf	indf1,w,c
 34248   00455C  6F90               	movwf	??_push& (0+255),b
 34249   00455E  5190               	movf	??_push& (0+255),w,b
 34250   004560  0D09               	mullw	9
 34251   004562  CFF3 F091          	movff	prodl,??_push+1
 34252   004566  CFF4 F092          	movff	prodh,??_push+2
 34253   00456A  518D               	movf	push@q& (0+255),w,b
 34254   00456C  6EE1               	movwf	fsr1l,c
 34255   00456E  6AE2               	clrf	fsr1h,c
 34256   004570  CFE6 F093          	movff	postinc1,??_push+3
 34257   004574  CFE5 F094          	movff	postdec1,??_push+4
 34258   004578  5191               	movf	(??_push+1)& (0+255),w,b
 34259   00457A  2593               	addwf	(??_push+3)& (0+255),w,b
 34260   00457C  6F95               	movwf	(??_push+5)& (0+255),b
 34261   00457E  5192               	movf	(??_push+2)& (0+255),w,b
 34262   004580  2194               	addwfc	(??_push+4)& (0+255),w,b
 34263   004582  6F96               	movwf	(??_push+6)& (0+255),b
 34264   004584  0E01               	movlw	1
 34265   004586  2595               	addwf	(??_push+5)& (0+255),w,b
 34266   004588  6EE1               	movwf	fsr1l,c
 34267   00458A  0E00               	movlw	0
 34268   00458C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34269   00458E  6EE2               	movwf	fsr1h,c
 34270   004590  CFDF FFE7          	movff	indf2,indf1
 34271   004594  EE20 F002          	lfsr	2,2
 34272   004598  518E               	movf	push@m& (0+255),w,b
 34273   00459A  26D9               	addwf	fsr2l,f,c
 34274   00459C  518F               	movf	(push@m+1)& (0+255),w,b
 34275   00459E  22DA               	addwfc	fsr2h,f,c
 34276   0045A0  518D               	movf	push@q& (0+255),w,b
 34277   0045A2  6EE1               	movwf	fsr1l,c
 34278   0045A4  6AE2               	clrf	fsr1h,c
 34279   0045A6  0E03               	movlw	3
 34280   0045A8  26E1               	addwf	fsr1l,f,c
 34281   0045AA  50E7               	movf	indf1,w,c
 34282   0045AC  6F90               	movwf	??_push& (0+255),b
 34283   0045AE  5190               	movf	??_push& (0+255),w,b
 34284   0045B0  0D09               	mullw	9
 34285   0045B2  CFF3 F091          	movff	prodl,??_push+1
 34286   0045B6  CFF4 F092          	movff	prodh,??_push+2
 34287   0045BA  518D               	movf	push@q& (0+255),w,b
 34288   0045BC  6EE1               	movwf	fsr1l,c
 34289   0045BE  6AE2               	clrf	fsr1h,c
 34290   0045C0  CFE6 F093          	movff	postinc1,??_push+3
 34291   0045C4  CFE5 F094          	movff	postdec1,??_push+4
 34292   0045C8  5191               	movf	(??_push+1)& (0+255),w,b
 34293   0045CA  2593               	addwf	(??_push+3)& (0+255),w,b
 34294   0045CC  6F95               	movwf	(??_push+5)& (0+255),b
 34295   0045CE  5192               	movf	(??_push+2)& (0+255),w,b
 34296   0045D0  2194               	addwfc	(??_push+4)& (0+255),w,b
 34297   0045D2  6F96               	movwf	(??_push+6)& (0+255),b
 34298   0045D4  0E02               	movlw	2
 34299   0045D6  2595               	addwf	(??_push+5)& (0+255),w,b
 34300   0045D8  6EE1               	movwf	fsr1l,c
 34301   0045DA  0E00               	movlw	0
 34302   0045DC  2196               	addwfc	(??_push+6)& (0+255),w,b
 34303   0045DE  6EE2               	movwf	fsr1h,c
 34304   0045E0  CFDF FFE7          	movff	indf2,indf1
 34305   0045E4  EE20 F003          	lfsr	2,3
 34306   0045E8  518E               	movf	push@m& (0+255),w,b
 34307   0045EA  26D9               	addwf	fsr2l,f,c
 34308   0045EC  518F               	movf	(push@m+1)& (0+255),w,b
 34309   0045EE  22DA               	addwfc	fsr2h,f,c
 34310   0045F0  518D               	movf	push@q& (0+255),w,b
 34311   0045F2  6EE1               	movwf	fsr1l,c
 34312   0045F4  6AE2               	clrf	fsr1h,c
 34313   0045F6  0E03               	movlw	3
 34314   0045F8  26E1               	addwf	fsr1l,f,c
 34315   0045FA  50E7               	movf	indf1,w,c
 34316   0045FC  6F90               	movwf	??_push& (0+255),b
 34317   0045FE  5190               	movf	??_push& (0+255),w,b
 34318   004600  0D09               	mullw	9
 34319   004602  CFF3 F091          	movff	prodl,??_push+1
 34320   004606  CFF4 F092          	movff	prodh,??_push+2
 34321   00460A  518D               	movf	push@q& (0+255),w,b
 34322   00460C  6EE1               	movwf	fsr1l,c
 34323   00460E  6AE2               	clrf	fsr1h,c
 34324   004610  CFE6 F093          	movff	postinc1,??_push+3
 34325   004614  CFE5 F094          	movff	postdec1,??_push+4
 34326   004618  5191               	movf	(??_push+1)& (0+255),w,b
 34327   00461A  2593               	addwf	(??_push+3)& (0+255),w,b
 34328   00461C  6F95               	movwf	(??_push+5)& (0+255),b
 34329   00461E  5192               	movf	(??_push+2)& (0+255),w,b
 34330   004620  2194               	addwfc	(??_push+4)& (0+255),w,b
 34331   004622  6F96               	movwf	(??_push+6)& (0+255),b
 34332   004624  0E03               	movlw	3
 34333   004626  2595               	addwf	(??_push+5)& (0+255),w,b
 34334   004628  6EE1               	movwf	fsr1l,c
 34335   00462A  0E00               	movlw	0
 34336   00462C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34337   00462E  6EE2               	movwf	fsr1h,c
 34338   004630  CFDF FFE7          	movff	indf2,indf1
 34339   004634  EE20 F004          	lfsr	2,4
 34340   004638  518E               	movf	push@m& (0+255),w,b
 34341   00463A  26D9               	addwf	fsr2l,f,c
 34342   00463C  518F               	movf	(push@m+1)& (0+255),w,b
 34343   00463E  22DA               	addwfc	fsr2h,f,c
 34344   004640  518D               	movf	push@q& (0+255),w,b
 34345   004642  6EE1               	movwf	fsr1l,c
 34346   004644  6AE2               	clrf	fsr1h,c
 34347   004646  0E03               	movlw	3
 34348   004648  26E1               	addwf	fsr1l,f,c
 34349   00464A  50E7               	movf	indf1,w,c
 34350   00464C  6F90               	movwf	??_push& (0+255),b
 34351   00464E  5190               	movf	??_push& (0+255),w,b
 34352   004650  0D09               	mullw	9
 34353   004652  CFF3 F091          	movff	prodl,??_push+1
 34354   004656  CFF4 F092          	movff	prodh,??_push+2
 34355   00465A  518D               	movf	push@q& (0+255),w,b
 34356   00465C  6EE1               	movwf	fsr1l,c
 34357   00465E  6AE2               	clrf	fsr1h,c
 34358   004660  CFE6 F093          	movff	postinc1,??_push+3
 34359   004664  CFE5 F094          	movff	postdec1,??_push+4
 34360   004668  5191               	movf	(??_push+1)& (0+255),w,b
 34361   00466A  2593               	addwf	(??_push+3)& (0+255),w,b
 34362   00466C  6F95               	movwf	(??_push+5)& (0+255),b
 34363   00466E  5192               	movf	(??_push+2)& (0+255),w,b
 34364   004670  2194               	addwfc	(??_push+4)& (0+255),w,b
 34365   004672  6F96               	movwf	(??_push+6)& (0+255),b
 34366   004674  0E04               	movlw	4
 34367   004676  2595               	addwf	(??_push+5)& (0+255),w,b
 34368   004678  6EE1               	movwf	fsr1l,c
 34369   00467A  0E00               	movlw	0
 34370   00467C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34371   00467E  6EE2               	movwf	fsr1h,c
 34372   004680  CFDF FFE7          	movff	indf2,indf1
 34373   004684  EE20 F005          	lfsr	2,5
 34374   004688  518E               	movf	push@m& (0+255),w,b
 34375   00468A  26D9               	addwf	fsr2l,f,c
 34376   00468C  518F               	movf	(push@m+1)& (0+255),w,b
 34377   00468E  22DA               	addwfc	fsr2h,f,c
 34378   004690  518D               	movf	push@q& (0+255),w,b
 34379   004692  6EE1               	movwf	fsr1l,c
 34380   004694  6AE2               	clrf	fsr1h,c
 34381   004696  0E03               	movlw	3
 34382   004698  26E1               	addwf	fsr1l,f,c
 34383   00469A  50E7               	movf	indf1,w,c
 34384   00469C  6F90               	movwf	??_push& (0+255),b
 34385   00469E  5190               	movf	??_push& (0+255),w,b
 34386   0046A0  0D09               	mullw	9
 34387   0046A2  CFF3 F091          	movff	prodl,??_push+1
 34388   0046A6  CFF4 F092          	movff	prodh,??_push+2
 34389   0046AA  518D               	movf	push@q& (0+255),w,b
 34390   0046AC  6EE1               	movwf	fsr1l,c
 34391   0046AE  6AE2               	clrf	fsr1h,c
 34392   0046B0  CFE6 F093          	movff	postinc1,??_push+3
 34393   0046B4  CFE5 F094          	movff	postdec1,??_push+4
 34394   0046B8  5191               	movf	(??_push+1)& (0+255),w,b
 34395   0046BA  2593               	addwf	(??_push+3)& (0+255),w,b
 34396   0046BC  6F95               	movwf	(??_push+5)& (0+255),b
 34397   0046BE  5192               	movf	(??_push+2)& (0+255),w,b
 34398   0046C0  2194               	addwfc	(??_push+4)& (0+255),w,b
 34399   0046C2  6F96               	movwf	(??_push+6)& (0+255),b
 34400   0046C4  0E05               	movlw	5
 34401   0046C6  2595               	addwf	(??_push+5)& (0+255),w,b
 34402   0046C8  6EE1               	movwf	fsr1l,c
 34403   0046CA  0E00               	movlw	0
 34404   0046CC  2196               	addwfc	(??_push+6)& (0+255),w,b
 34405   0046CE  6EE2               	movwf	fsr1h,c
 34406   0046D0  CFDF FFE7          	movff	indf2,indf1
 34407   0046D4  EE20 F006          	lfsr	2,6
 34408   0046D8  518E               	movf	push@m& (0+255),w,b
 34409   0046DA  26D9               	addwf	fsr2l,f,c
 34410   0046DC  518F               	movf	(push@m+1)& (0+255),w,b
 34411   0046DE  22DA               	addwfc	fsr2h,f,c
 34412   0046E0  518D               	movf	push@q& (0+255),w,b
 34413   0046E2  6EE1               	movwf	fsr1l,c
 34414   0046E4  6AE2               	clrf	fsr1h,c
 34415   0046E6  0E03               	movlw	3
 34416   0046E8  26E1               	addwf	fsr1l,f,c
 34417   0046EA  50E7               	movf	indf1,w,c
 34418   0046EC  6F90               	movwf	??_push& (0+255),b
 34419   0046EE  5190               	movf	??_push& (0+255),w,b
 34420   0046F0  0D09               	mullw	9
 34421   0046F2  CFF3 F091          	movff	prodl,??_push+1
 34422   0046F6  CFF4 F092          	movff	prodh,??_push+2
 34423   0046FA  518D               	movf	push@q& (0+255),w,b
 34424   0046FC  6EE1               	movwf	fsr1l,c
 34425   0046FE  6AE2               	clrf	fsr1h,c
 34426   004700  CFE6 F093          	movff	postinc1,??_push+3
 34427   004704  CFE5 F094          	movff	postdec1,??_push+4
 34428   004708  5191               	movf	(??_push+1)& (0+255),w,b
 34429   00470A  2593               	addwf	(??_push+3)& (0+255),w,b
 34430   00470C  6F95               	movwf	(??_push+5)& (0+255),b
 34431   00470E  5192               	movf	(??_push+2)& (0+255),w,b
 34432   004710  2194               	addwfc	(??_push+4)& (0+255),w,b
 34433   004712  6F96               	movwf	(??_push+6)& (0+255),b
 34434   004714  0E06               	movlw	6
 34435   004716  2595               	addwf	(??_push+5)& (0+255),w,b
 34436   004718  6EE1               	movwf	fsr1l,c
 34437   00471A  0E00               	movlw	0
 34438   00471C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34439   00471E  6EE2               	movwf	fsr1h,c
 34440   004720  CFDF FFE7          	movff	indf2,indf1
 34441   004724  EE20 F007          	lfsr	2,7
 34442   004728  518E               	movf	push@m& (0+255),w,b
 34443   00472A  26D9               	addwf	fsr2l,f,c
 34444   00472C  518F               	movf	(push@m+1)& (0+255),w,b
 34445   00472E  22DA               	addwfc	fsr2h,f,c
 34446   004730  518D               	movf	push@q& (0+255),w,b
 34447   004732  6EE1               	movwf	fsr1l,c
 34448   004734  6AE2               	clrf	fsr1h,c
 34449   004736  0E03               	movlw	3
 34450   004738  26E1               	addwf	fsr1l,f,c
 34451   00473A  50E7               	movf	indf1,w,c
 34452   00473C  6F90               	movwf	??_push& (0+255),b
 34453   00473E  5190               	movf	??_push& (0+255),w,b
 34454   004740  0D09               	mullw	9
 34455   004742  CFF3 F091          	movff	prodl,??_push+1
 34456   004746  CFF4 F092          	movff	prodh,??_push+2
 34457   00474A  518D               	movf	push@q& (0+255),w,b
 34458   00474C  6EE1               	movwf	fsr1l,c
 34459   00474E  6AE2               	clrf	fsr1h,c
 34460   004750  CFE6 F093          	movff	postinc1,??_push+3
 34461   004754  CFE5 F094          	movff	postdec1,??_push+4
 34462   004758  5191               	movf	(??_push+1)& (0+255),w,b
 34463   00475A  2593               	addwf	(??_push+3)& (0+255),w,b
 34464   00475C  6F95               	movwf	(??_push+5)& (0+255),b
 34465   00475E  5192               	movf	(??_push+2)& (0+255),w,b
 34466   004760  2194               	addwfc	(??_push+4)& (0+255),w,b
 34467   004762  6F96               	movwf	(??_push+6)& (0+255),b
 34468   004764  0E07               	movlw	7
 34469   004766  2595               	addwf	(??_push+5)& (0+255),w,b
 34470   004768  6EE1               	movwf	fsr1l,c
 34471   00476A  0E00               	movlw	0
 34472   00476C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34473   00476E  6EE2               	movwf	fsr1h,c
 34474   004770  CFDF FFE7          	movff	indf2,indf1
 34475   004774  EE20 F008          	lfsr	2,8
 34476   004778  518E               	movf	push@m& (0+255),w,b
 34477   00477A  26D9               	addwf	fsr2l,f,c
 34478   00477C  518F               	movf	(push@m+1)& (0+255),w,b
 34479   00477E  22DA               	addwfc	fsr2h,f,c
 34480   004780  518D               	movf	push@q& (0+255),w,b
 34481   004782  6EE1               	movwf	fsr1l,c
 34482   004784  6AE2               	clrf	fsr1h,c
 34483   004786  0E03               	movlw	3
 34484   004788  26E1               	addwf	fsr1l,f,c
 34485   00478A  50E7               	movf	indf1,w,c
 34486   00478C  6F90               	movwf	??_push& (0+255),b
 34487   00478E  5190               	movf	??_push& (0+255),w,b
 34488   004790  0D09               	mullw	9
 34489   004792  CFF3 F091          	movff	prodl,??_push+1
 34490   004796  CFF4 F092          	movff	prodh,??_push+2
 34491   00479A  518D               	movf	push@q& (0+255),w,b
 34492   00479C  6EE1               	movwf	fsr1l,c
 34493   00479E  6AE2               	clrf	fsr1h,c
 34494   0047A0  CFE6 F093          	movff	postinc1,??_push+3
 34495   0047A4  CFE5 F094          	movff	postdec1,??_push+4
 34496   0047A8  5191               	movf	(??_push+1)& (0+255),w,b
 34497   0047AA  2593               	addwf	(??_push+3)& (0+255),w,b
 34498   0047AC  6F95               	movwf	(??_push+5)& (0+255),b
 34499   0047AE  5192               	movf	(??_push+2)& (0+255),w,b
 34500   0047B0  2194               	addwfc	(??_push+4)& (0+255),w,b
 34501   0047B2  6F96               	movwf	(??_push+6)& (0+255),b
 34502   0047B4  0E08               	movlw	8
 34503   0047B6  2595               	addwf	(??_push+5)& (0+255),w,b
 34504   0047B8  6EE1               	movwf	fsr1l,c
 34505   0047BA  0E00               	movlw	0
 34506   0047BC  2196               	addwfc	(??_push+6)& (0+255),w,b
 34507   0047BE  6EE2               	movwf	fsr1h,c
 34508   0047C0  CFDF FFE7          	movff	indf2,indf1
 34509   0047C4  C08E  FFD9         	movff	push@m,fsr2l
 34510   0047C8  C08F  FFDA         	movff	push@m+1,fsr2h
 34511   0047CC  518D               	movf	push@q& (0+255),w,b
 34512   0047CE  6EE1               	movwf	fsr1l,c
 34513   0047D0  6AE2               	clrf	fsr1h,c
 34514   0047D2  0E03               	movlw	3
 34515   0047D4  26E1               	addwf	fsr1l,f,c
 34516   0047D6  50E7               	movf	indf1,w,c
 34517   0047D8  6F90               	movwf	??_push& (0+255),b
 34518   0047DA  5190               	movf	??_push& (0+255),w,b
 34519   0047DC  0D09               	mullw	9
 34520   0047DE  CFF3 F091          	movff	prodl,??_push+1
 34521   0047E2  CFF4 F092          	movff	prodh,??_push+2
 34522   0047E6  518D               	movf	push@q& (0+255),w,b
 34523   0047E8  6EE1               	movwf	fsr1l,c
 34524   0047EA  6AE2               	clrf	fsr1h,c
 34525   0047EC  CFE6 F093          	movff	postinc1,??_push+3
 34526   0047F0  CFE5 F094          	movff	postdec1,??_push+4
 34527   0047F4  5191               	movf	(??_push+1)& (0+255),w,b
 34528   0047F6  2593               	addwf	(??_push+3)& (0+255),w,b
 34529   0047F8  6EE1               	movwf	fsr1l,c
 34530   0047FA  5192               	movf	(??_push+2)& (0+255),w,b
 34531   0047FC  2194               	addwfc	(??_push+4)& (0+255),w,b
 34532   0047FE  6EE2               	movwf	fsr1h,c
 34533   004800  CFDF FFE7          	movff	indf2,indf1
 34534                           
 34535                           ; BSR set to: 0
 34536   004804  518D               	movf	push@q& (0+255),w,b
 34537   004806  6ED9               	movwf	fsr2l,c
 34538   004808  6ADA               	clrf	fsr2h,c
 34539   00480A  0E03               	movlw	3
 34540   00480C  26D9               	addwf	fsr2l,f,c
 34541   00480E  2ADF               	incf	indf2,f,c
 34542                           
 34543                           ; BSR set to: 0
 34544   004810  518D               	movf	push@q& (0+255),w,b
 34545   004812  6ED9               	movwf	fsr2l,c
 34546   004814  6ADA               	clrf	fsr2h,c
 34547   004816  0E04               	movlw	4
 34548   004818  26D9               	addwf	fsr2l,f,c
 34549   00481A  518D               	movf	push@q& (0+255),w,b
 34550   00481C  6EE1               	movwf	fsr1l,c
 34551   00481E  6AE2               	clrf	fsr1h,c
 34552   004820  0E03               	movlw	3
 34553   004822  26E1               	addwf	fsr1l,f,c
 34554   004824  50DE               	movf	postinc2,w,c
 34555   004826  5CE6               	subwf	postinc1,w,c
 34556   004828  A0D8               	btfss	status,0,c
 34557   00482A  D006               	goto	l19298
 34558                           
 34559                           ; BSR set to: 0
 34560   00482C  518D               	movf	push@q& (0+255),w,b
 34561   00482E  6ED9               	movwf	fsr2l,c
 34562   004830  6ADA               	clrf	fsr2h,c
 34563   004832  0E03               	movlw	3
 34564   004834  26D9               	addwf	fsr2l,f,c
 34565   004836  6ADF               	clrf	indf2,c
 34566   004838                     l19298:
 34567                           
 34568                           ; BSR set to: 0
 34569   004838  0E01               	movlw	1
 34570                           
 34571                           ; BSR set to: 0
 34572   00483A  0012               	return		;funcret
 34573   00483C                     __end_of_push:
 34574                           	callstack 0
 34575                           
 34576 ;; *************** function _isEvent *****************
 34577 ;; Defined at:
 34578 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 34579 ;; Parameters:    Size  Location     Type
 34580 ;;  opc             1    wreg     unsigned char 
 34581 ;; Auto vars:     Size  Location     Type
 34582 ;;  opc             1   46[BANK0 ] unsigned char 
 34583 ;; Return value:  Size  Location     Type
 34584 ;;                  1    wreg      enum E12766
 34585 ;; Registers used:
 34586 ;;		wreg, status,2, status,0
 34587 ;; Tracked objects:
 34588 ;;		On entry : 0/0
 34589 ;;		On exit  : 0/0
 34590 ;;		Unchanged: 0/0
 34591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34596 ;;Total ram usage:        2 bytes
 34597 ;; Hardware stack levels used: 1
 34598 ;; Hardware stack levels required when called: 12
 34599 ;; This function calls:
 34600 ;;		Nothing
 34601 ;; This function is called by:
 34602 ;;		_canSendMessage
 34603 ;; This function uses a non-reentrant model
 34604 ;;
 34605                           
 34606                           	psect	text134
 34607   00C478                     __ptext134:
 34608                           	callstack 0
 34609   00C478                     _isEvent:
 34610                           	callstack 12
 34611                           
 34612                           ; BSR set to: 0
 34613                           ;incstack = 0
 34614                           ;isEvent@opc stored from wreg
 34615   00C478  0100               	movlb	0	; () banked
 34616   00C47A  6F8E               	movwf	isEvent@opc& (0+255),b
 34617                           
 34618                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 34619   00C47C  0E00               	movlw	0
 34620   00C47E  0100               	movlb	0	; () banked
 34621   00C480  6F8D               	movwf	_isEvent$4896& (0+255),b
 34622                           
 34623                           ; BSR set to: 0
 34624   00C482  518E               	movf	isEvent@opc& (0+255),w,b
 34625   00C484  0B90               	andlw	144
 34626   00C486  0A90               	xorlw	144
 34627   00C488  A4D8               	btfss	status,2,c
 34628   00C48A  D008               	goto	l2064
 34629                           
 34630                           ; BSR set to: 0
 34631   00C48C  518E               	movf	isEvent@opc& (0+255),w,b
 34632   00C48E  0AFF               	xorlw	255
 34633   00C490  0B06               	andlw	6
 34634   00C492  0A06               	xorlw	6
 34635   00C494  A4D8               	btfss	status,2,c
 34636   00C496  D002               	goto	l2064
 34637                           
 34638                           ; BSR set to: 0
 34639   00C498  0E01               	movlw	1
 34640   00C49A  6F8D               	movwf	_isEvent$4896& (0+255),b
 34641   00C49C                     l2064:
 34642                           
 34643                           ; BSR set to: 0
 34644   00C49C  518D               	movf	_isEvent$4896& (0+255),w,b
 34645                           
 34646                           ; BSR set to: 0
 34647   00C49E  0012               	return		;funcret
 34648   00C4A0                     __end_of_isEvent:
 34649                           	callstack 0
 34650                           
 34651 ;; *************** function _have *****************
 34652 ;; Defined at:
 34653 ;;		line 838 in file "../../VLCBlib_PIC/vlcb.c"
 34654 ;; Parameters:    Size  Location     Type
 34655 ;;  id              1    wreg     unsigned char 
 34656 ;; Auto vars:     Size  Location     Type
 34657 ;;  id              1   47[BANK0 ] unsigned char 
 34658 ;;  i               1   48[BANK0 ] unsigned char 
 34659 ;; Return value:  Size  Location     Type
 34660 ;;                  1    wreg      enum E12897
 34661 ;; Registers used:
 34662 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 34663 ;; Tracked objects:
 34664 ;;		On entry : 0/0
 34665 ;;		On exit  : 0/0
 34666 ;;		Unchanged: 0/0
 34667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34670 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34671 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34672 ;;Total ram usage:        4 bytes
 34673 ;; Hardware stack levels used: 1
 34674 ;; Hardware stack levels required when called: 12
 34675 ;; This function calls:
 34676 ;;		Nothing
 34677 ;; This function is called by:
 34678 ;;		_getParameterFlags
 34679 ;;		_getParameter
 34680 ;;		_canSendMessage
 34681 ;; This function uses a non-reentrant model
 34682 ;;
 34683                           
 34684                           	psect	text135
 34685   00AFEE                     __ptext135:
 34686                           	callstack 0
 34687   00AFEE                     _have:
 34688                           	callstack 12
 34689                           
 34690                           ; BSR set to: 0
 34691                           ;incstack = 0
 34692                           ;have@id stored from wreg
 34693   00AFEE  0100               	movlb	0	; () banked
 34694   00AFF0  6F8F               	movwf	have@id& (0+255),b
 34695                           
 34696                           ;../../VLCBlib_PIC/vlcb.c: 839:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 840:     for (i
      +                          =0; i<9; i++) {
 34697   00AFF2  0E00               	movlw	0
 34698   00AFF4  0100               	movlb	0	; () banked
 34699   00AFF6  6F90               	movwf	have@i& (0+255),b
 34700   00AFF8                     l19258:
 34701                           
 34702                           ; BSR set to: 0
 34703                           ;../../VLCBlib_PIC/vlcb.c: 841:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 34704   00AFF8  5190               	movf	have@i& (0+255),w,b
 34705   00AFFA  0D02               	mullw	2
 34706   00AFFC  0E69               	movlw	low _services
 34707   00AFFE  24F3               	addwf	243,w,c
 34708   00B000  6EF6               	movwf	tblptrl,c
 34709   00B002  0EEE               	movlw	high _services
 34710   00B004  20F4               	addwfc	244,w,c
 34711   00B006  6EF7               	movwf	tblptrh,c
 34712   00B008                     	if	1	;There are 3 active tblptr bytes
 34713   00B008  6AF8               	clrf	tblptru,c
 34714   00B00A  0E00               	movlw	low (__mediumconst shr (0+16))
 34715   00B00C  22F8               	addwfc	tblptru,f,c
 34716   00B00E                     	endif
 34717   00B00E  0009               	tblrd		*+
 34718   00B010  50F5               	movf	tablat,w,c
 34719   00B012  0009               	tblrd		*+
 34720   00B014  10F5               	iorwf	tablat,w,c
 34721   00B016  B4D8               	btfsc	status,2,c
 34722   00B018  D01D               	goto	l19266
 34723                           
 34724                           ; BSR set to: 0
 34725   00B01A  5190               	movf	have@i& (0+255),w,b
 34726   00B01C  0D02               	mullw	2
 34727   00B01E  0E69               	movlw	low _services
 34728   00B020  24F3               	addwf	243,w,c
 34729   00B022  6EF6               	movwf	tblptrl,c
 34730   00B024  0EEE               	movlw	high _services
 34731   00B026  20F4               	addwfc	244,w,c
 34732   00B028  6EF7               	movwf	tblptrh,c
 34733   00B02A                     	if	1	;There are 3 active tblptr bytes
 34734   00B02A  6AF8               	clrf	tblptru,c
 34735   00B02C  0E00               	movlw	low (__mediumconst shr (0+16))
 34736   00B02E  22F8               	addwfc	tblptru,f,c
 34737   00B030                     	endif
 34738   00B030  0009               	tblrd		*+
 34739   00B032  CFF5 F08D          	movff	tablat,??_have
 34740   00B036  0009               	tblrd		*+
 34741   00B038  CFF5 F08E          	movff	tablat,??_have+1
 34742   00B03C  C08D  FFF6         	movff	??_have,tblptrl
 34743   00B040  C08E  FFF7         	movff	??_have+1,tblptrh
 34744   00B044                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34745   00B044  6AF8               	clrf	tblptru,c
 34746   00B046                     	endif
 34747   00B046                     	if	0	;tblptru may be non-zero
 34748   00B046                     	endif
 34749   00B046  0008               	tblrd		*
 34750   00B048  50F5               	movf	tablat,w,c
 34751   00B04A  198F               	xorwf	have@id& (0+255),w,b
 34752   00B04C  A4D8               	btfss	status,2,c
 34753   00B04E  D002               	goto	l19266
 34754                           
 34755                           ; BSR set to: 0
 34756                           ;../../VLCBlib_PIC/vlcb.c: 842:             return PRESENT;
 34757   00B050  0E01               	movlw	1
 34758   00B052  0012               	return	
 34759   00B054                     l19266:
 34760                           
 34761                           ; BSR set to: 0
 34762                           ;../../VLCBlib_PIC/vlcb.c: 844:     }
 34763   00B054  2B90               	incf	have@i& (0+255),f,b
 34764                           
 34765                           ; BSR set to: 0
 34766   00B056  0E08               	movlw	8
 34767   00B058  6590               	cpfsgt	have@i& (0+255),b
 34768   00B05A  D7CE               	goto	l19258
 34769                           
 34770                           ; BSR set to: 0
 34771                           ;../../VLCBlib_PIC/vlcb.c: 845:     return NOT_PRESENT;
 34772   00B05C  0E00               	movlw	0
 34773                           
 34774                           ; BSR set to: 0
 34775   00B05E  0012               	return		;funcret
 34776   00B060                     __end_of_have:
 34777                           	callstack 0
 34778                           
 34779 ;; *************** function _getNumTxBuffersInUse *****************
 34780 ;; Defined at:
 34781 ;;		line 461 in file "../../VLCBlib_PIC/can18_ecan.c"
 34782 ;; Parameters:    Size  Location     Type
 34783 ;;		None
 34784 ;; Auto vars:     Size  Location     Type
 34785 ;;		None
 34786 ;; Return value:  Size  Location     Type
 34787 ;;                  1    wreg      unsigned char 
 34788 ;; Registers used:
 34789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34790 ;; Tracked objects:
 34791 ;;		On entry : 0/0
 34792 ;;		On exit  : 0/0
 34793 ;;		Unchanged: 0/0
 34794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34799 ;;Total ram usage:        0 bytes
 34800 ;; Hardware stack levels used: 1
 34801 ;; Hardware stack levels required when called: 13
 34802 ;; This function calls:
 34803 ;;		_quantity
 34804 ;; This function is called by:
 34805 ;;		_canGetDiagnostic
 34806 ;;		_canSendMessage
 34807 ;; This function uses a non-reentrant model
 34808 ;;
 34809                           
 34810                           	psect	text136
 34811   00C7D2                     __ptext136:
 34812                           	callstack 0
 34813   00C7D2                     _getNumTxBuffersInUse:
 34814                           	callstack 11
 34815                           
 34816                           ;../../VLCBlib_PIC/can18_ecan.c: 462:     return quantity(&txQueue);
 34817                           
 34818                           ; BSR set to: 0
 34819                           ;incstack = 0
 34820   00C7D2  0E4A               	movlw	low _txQueue
 34821   00C7D4  0100               	movlb	0	; () banked
 34822   00C7D6  6F8D               	movwf	quantity@q& (0+255),b
 34823   00C7D8  EC03  F060         	call	_quantity	;wreg free
 34824   00C7DC  0012               	return		;funcret
 34825   00C7DE                     __end_of_getNumTxBuffersInUse:
 34826                           	callstack 0
 34827                           
 34828 ;; *************** function _quantity *****************
 34829 ;; Defined at:
 34830 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 34831 ;; Parameters:    Size  Location     Type
 34832 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34833 ;;		 -> txQueue(5), rxQueue(5), 
 34834 ;; Auto vars:     Size  Location     Type
 34835 ;;		None
 34836 ;; Return value:  Size  Location     Type
 34837 ;;                  1    wreg      unsigned char 
 34838 ;; Registers used:
 34839 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34840 ;; Tracked objects:
 34841 ;;		On entry : 0/0
 34842 ;;		On exit  : 0/0
 34843 ;;		Unchanged: 0/0
 34844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34845 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34847 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34848 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34849 ;;Total ram usage:        5 bytes
 34850 ;; Hardware stack levels used: 1
 34851 ;; Hardware stack levels required when called: 12
 34852 ;; This function calls:
 34853 ;;		Nothing
 34854 ;; This function is called by:
 34855 ;;		_getNumTxBuffersInUse
 34856 ;;		_getNumRxBuffersInUse
 34857 ;;		_canSendMessage
 34858 ;; This function uses a non-reentrant model
 34859 ;;
 34860                           
 34861                           	psect	text137
 34862   00C006                     __ptext137:
 34863                           	callstack 0
 34864   00C006                     _quantity:
 34865                           	callstack 12
 34866                           
 34867                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 34868                           
 34869                           ;incstack = 0
 34870   00C006  0100               	movlb	0	; () banked
 34871   00C008  518D               	movf	quantity@q& (0+255),w,b
 34872   00C00A  6ED9               	movwf	fsr2l,c
 34873   00C00C  6ADA               	clrf	fsr2h,c
 34874   00C00E  0E02               	movlw	2
 34875   00C010  26D9               	addwf	fsr2l,f,c
 34876   00C012  50DF               	movf	indf2,w,c
 34877   00C014  6F8E               	movwf	??_quantity& (0+255),b
 34878   00C016  518D               	movf	quantity@q& (0+255),w,b
 34879   00C018  6ED9               	movwf	fsr2l,c
 34880   00C01A  6ADA               	clrf	fsr2h,c
 34881   00C01C  0E03               	movlw	3
 34882   00C01E  26D9               	addwf	fsr2l,f,c
 34883   00C020  50DF               	movf	indf2,w,c
 34884   00C022  6F8F               	movwf	(??_quantity+1)& (0+255),b
 34885   00C024  518E               	movf	??_quantity& (0+255),w,b
 34886   00C026  5D8F               	subwf	(??_quantity+1)& (0+255),w,b
 34887   00C028  6F90               	movwf	(??_quantity+2)& (0+255),b
 34888   00C02A  518D               	movf	quantity@q& (0+255),w,b
 34889   00C02C  6ED9               	movwf	fsr2l,c
 34890   00C02E  6ADA               	clrf	fsr2h,c
 34891   00C030  0E04               	movlw	4
 34892   00C032  26D9               	addwf	fsr2l,f,c
 34893   00C034  50DF               	movf	indf2,w,c
 34894   00C036  6F91               	movwf	(??_quantity+3)& (0+255),b
 34895   00C038  0591               	decf	(??_quantity+3)& (0+255),w,b
 34896   00C03A  1590               	andwf	(??_quantity+2)& (0+255),w,b
 34897                           
 34898                           ; BSR set to: 0
 34899   00C03C  0012               	return		;funcret
 34900   00C03E                     __end_of_quantity:
 34901                           	callstack 0
 34902                           
 34903 ;; *************** function _getNextWriteMessage *****************
 34904 ;; Defined at:
 34905 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 34906 ;; Parameters:    Size  Location     Type
 34907 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34908 ;;		 -> rxQueue(5), 
 34909 ;; Auto vars:     Size  Location     Type
 34910 ;;  wr              1   56[BANK0 ] unsigned char 
 34911 ;; Return value:  Size  Location     Type
 34912 ;;                  2   45[BANK0 ] PTR struct Message
 34913 ;; Registers used:
 34914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34915 ;; Tracked objects:
 34916 ;;		On entry : 0/0
 34917 ;;		On exit  : 0/0
 34918 ;;		Unchanged: 0/0
 34919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34922 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34923 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34924 ;;Total ram usage:       12 bytes
 34925 ;; Hardware stack levels used: 1
 34926 ;; Hardware stack levels required when called: 12
 34927 ;; This function calls:
 34928 ;;		Nothing
 34929 ;; This function is called by:
 34930 ;;		_canSendMessage
 34931 ;; This function uses a non-reentrant model
 34932 ;;
 34933                           
 34934                           	psect	text138
 34935   008C92                     __ptext138:
 34936                           	callstack 0
 34937   008C92                     _getNextWriteMessage:
 34938                           	callstack 12
 34939                           
 34940                           ; BSR set to: 0
 34941                           ;incstack = 0
 34942   008C92  0100               	movlb	0	; () banked
 34943   008C94  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34944   008C96  6ED9               	movwf	fsr2l,c
 34945   008C98  6ADA               	clrf	fsr2h,c
 34946   008C9A  0E02               	movlw	2
 34947   008C9C  26D9               	addwf	fsr2l,f,c
 34948   008C9E  50DF               	movf	indf2,w,c
 34949   008CA0  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 34950   008CA2  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 34951   008CA4  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34952   008CA6  6ED9               	movwf	fsr2l,c
 34953   008CA8  6ADA               	clrf	fsr2h,c
 34954   008CAA  0E04               	movlw	4
 34955   008CAC  26D9               	addwf	fsr2l,f,c
 34956   008CAE  50DF               	movf	indf2,w,c
 34957   008CB0  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 34958   008CB2  0EFF               	movlw	255
 34959   008CB4  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 34960   008CB6  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 34961   008CB8  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 34962   008CBA  0EFF               	movlw	255
 34963   008CBC  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 34964   008CBE  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34965   008CC0  6ED9               	movwf	fsr2l,c
 34966   008CC2  6ADA               	clrf	fsr2h,c
 34967   008CC4  0E03               	movlw	3
 34968   008CC6  26D9               	addwf	fsr2l,f,c
 34969   008CC8  50DF               	movf	indf2,w,c
 34970   008CCA  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 34971   008CCC  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 34972   008CCE  0E01               	movlw	1
 34973   008CD0  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 34974   008CD2  0E00               	movlw	0
 34975   008CD4  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 34976   008CD6  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 34977   008CD8  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 34978   008CDA  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 34979   008CDC  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 34980   008CDE  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 34981   008CE0  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 34982   008CE2  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 34983   008CE4  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 34984   008CE6  E109               	bnz	l19308
 34985   008CE8  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 34986   008CEA  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 34987   008CEC  A4D8               	btfss	status,2,c
 34988   008CEE  D005               	goto	l19308
 34989                           
 34990                           ; BSR set to: 0
 34991   008CF0  0E00               	movlw	0
 34992   008CF2  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 34993   008CF4  0E00               	movlw	0
 34994   008CF6  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 34995   008CF8  0012               	return	
 34996   008CFA                     l19308:
 34997                           
 34998                           ; BSR set to: 0
 34999   008CFA  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35000   008CFC  6ED9               	movwf	fsr2l,c
 35001   008CFE  6ADA               	clrf	fsr2h,c
 35002   008D00  0E03               	movlw	3
 35003   008D02  26D9               	addwf	fsr2l,f,c
 35004   008D04  50DF               	movf	indf2,w,c
 35005   008D06  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 35006   008D08  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35007   008D0A  6ED9               	movwf	fsr2l,c
 35008   008D0C  6ADA               	clrf	fsr2h,c
 35009   008D0E  0E03               	movlw	3
 35010   008D10  26D9               	addwf	fsr2l,f,c
 35011   008D12  2ADF               	incf	indf2,f,c
 35012                           
 35013                           ; BSR set to: 0
 35014   008D14  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35015   008D16  6ED9               	movwf	fsr2l,c
 35016   008D18  6ADA               	clrf	fsr2h,c
 35017   008D1A  0E04               	movlw	4
 35018   008D1C  26D9               	addwf	fsr2l,f,c
 35019   008D1E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35020   008D20  6EE1               	movwf	fsr1l,c
 35021   008D22  6AE2               	clrf	fsr1h,c
 35022   008D24  0E03               	movlw	3
 35023   008D26  26E1               	addwf	fsr1l,f,c
 35024   008D28  50DE               	movf	postinc2,w,c
 35025   008D2A  5CE6               	subwf	postinc1,w,c
 35026   008D2C  A0D8               	btfss	status,0,c
 35027   008D2E  D006               	goto	l19314
 35028                           
 35029                           ; BSR set to: 0
 35030   008D30  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35031   008D32  6ED9               	movwf	fsr2l,c
 35032   008D34  6ADA               	clrf	fsr2h,c
 35033   008D36  0E03               	movlw	3
 35034   008D38  26D9               	addwf	fsr2l,f,c
 35035   008D3A  6ADF               	clrf	indf2,c
 35036   008D3C                     l19314:
 35037                           
 35038                           ; BSR set to: 0
 35039   008D3C  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 35040   008D3E  0D09               	mullw	9
 35041   008D40  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 35042   008D44  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 35043   008D48  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35044   008D4A  6ED9               	movwf	fsr2l,c
 35045   008D4C  6ADA               	clrf	fsr2h,c
 35046   008D4E  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 35047   008D52  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 35048   008D56  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 35049   008D58  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 35050   008D5A  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 35051   008D5C  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 35052   008D5E  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 35053   008D60  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 35054                           
 35055                           ; BSR set to: 0
 35056   008D62  0012               	return		;funcret
 35057   008D64                     __end_of_getNextWriteMessage:
 35058                           	callstack 0
 35059                           
 35060 ;; *************** function _readInput *****************
 35061 ;; Defined at:
 35062 ;;		line 174 in file "../inputs.c"
 35063 ;; Parameters:    Size  Location     Type
 35064 ;;  io              1    wreg     unsigned char 
 35065 ;; Auto vars:     Size  Location     Type
 35066 ;;  io              1   51[BANK0 ] unsigned char 
 35067 ;; Return value:  Size  Location     Type
 35068 ;;                  1    wreg      enum E12717
 35069 ;; Registers used:
 35070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35071 ;; Tracked objects:
 35072 ;;		On entry : 0/0
 35073 ;;		On exit  : 0/0
 35074 ;;		Unchanged: 0/0
 35075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35078 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35079 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35080 ;;Total ram usage:        3 bytes
 35081 ;; Hardware stack levels used: 1
 35082 ;; Hardware stack levels required when called: 13
 35083 ;; This function calls:
 35084 ;;		_getNV
 35085 ;; This function is called by:
 35086 ;;		_initInputScan
 35087 ;;		_inputScan
 35088 ;; This function uses a non-reentrant model
 35089 ;;
 35090                           
 35091                           	psect	text139
 35092   008156                     __ptext139:
 35093                           	callstack 0
 35094   008156                     _readInput:
 35095                           	callstack 15
 35096                           
 35097                           ; BSR set to: 0
 35098                           ;incstack = 0
 35099                           ;readInput@io stored from wreg
 35100   008156  0100               	movlb	0	; () banked
 35101   008158  6F93               	movwf	readInput@io& (0+255),b
 35102                           
 35103                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 35104   00815A  0100               	movlb	0	; () banked
 35105   00815C  5193               	movf	readInput@io& (0+255),w,b
 35106   00815E  0D07               	mullw	7
 35107   008160  50F3               	movf	243,w,c
 35108   008162  0F10               	addlw	16
 35109   008164  EC53  F05F         	call	_getNV
 35110   008168  0100               	movlb	0	; () banked
 35111   00816A  518D               	movf	?_getNV& (0+255),w,b
 35112   00816C  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 35113   00816E  B4D8               	btfsc	status,2,c
 35114   008170  D05B               	goto	l21432
 35115   008172  D074               	goto	l21434
 35116   008174                     l21418:
 35117                           
 35118                           ; BSR set to: 0
 35119                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 35120   008174  5193               	movf	readInput@io& (0+255),w,b
 35121   008176  0D04               	mullw	4
 35122   008178  0E02               	movlw	2
 35123   00817A  26F3               	addwf	243,f,c
 35124   00817C  0E00               	movlw	0
 35125   00817E  22F4               	addwfc	244,f,c
 35126   008180  0E29               	movlw	low _configs
 35127   008182  24F3               	addwf	243,w,c
 35128   008184  6EF6               	movwf	tblptrl,c
 35129   008186  0EEE               	movlw	high _configs
 35130   008188  20F4               	addwfc	244,w,c
 35131   00818A  6EF7               	movwf	tblptrh,c
 35132   00818C                     	if	1	;There are 3 active tblptr bytes
 35133   00818C  6AF8               	clrf	tblptru,c
 35134   00818E  0E00               	movlw	low (__mediumconst shr (0+16))
 35135   008190  22F8               	addwfc	tblptru,f,c
 35136   008192                     	endif
 35137   008192  0008               	tblrd		*
 35138   008194  CFF5 F091          	movff	tablat,??_readInput
 35139   008198  0E01               	movlw	1
 35140   00819A  6F92               	movwf	(??_readInput+1)& (0+255),b
 35141   00819C  2B91               	incf	??_readInput& (0+255),f,b
 35142   00819E  D002               	goto	u22104
 35143   0081A0                     u22105:
 35144   0081A0  90D8               	bcf	status,0,c
 35145   0081A2  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 35146   0081A4                     u22104:
 35147   0081A4  2F91               	decfsz	??_readInput& (0+255),f,b
 35148   0081A6  D7FC               	goto	u22105
 35149   0081A8  0100               	movlb	0	; () banked
 35150   0081AA  5192               	movf	(??_readInput+1)& (0+255),w,b
 35151   0081AC  1480               	andwf	128,w,c	;volatile
 35152   0081AE  0012               	return	
 35153   0081B0                     l21422:
 35154                           
 35155                           ; BSR set to: 0
 35156                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 35157   0081B0  5193               	movf	readInput@io& (0+255),w,b
 35158   0081B2  0D04               	mullw	4
 35159   0081B4  0E02               	movlw	2
 35160   0081B6  26F3               	addwf	243,f,c
 35161   0081B8  0E00               	movlw	0
 35162   0081BA  22F4               	addwfc	244,f,c
 35163   0081BC  0E29               	movlw	low _configs
 35164   0081BE  24F3               	addwf	243,w,c
 35165   0081C0  6EF6               	movwf	tblptrl,c
 35166   0081C2  0EEE               	movlw	high _configs
 35167   0081C4  20F4               	addwfc	244,w,c
 35168   0081C6  6EF7               	movwf	tblptrh,c
 35169   0081C8                     	if	1	;There are 3 active tblptr bytes
 35170   0081C8  6AF8               	clrf	tblptru,c
 35171   0081CA  0E00               	movlw	low (__mediumconst shr (0+16))
 35172   0081CC  22F8               	addwfc	tblptru,f,c
 35173   0081CE                     	endif
 35174   0081CE  0008               	tblrd		*
 35175   0081D0  CFF5 F091          	movff	tablat,??_readInput
 35176   0081D4  0E01               	movlw	1
 35177   0081D6  6F92               	movwf	(??_readInput+1)& (0+255),b
 35178   0081D8  2B91               	incf	??_readInput& (0+255),f,b
 35179   0081DA  D002               	goto	u22114
 35180   0081DC                     u22115:
 35181   0081DC  90D8               	bcf	status,0,c
 35182   0081DE  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 35183   0081E0                     u22114:
 35184   0081E0  2F91               	decfsz	??_readInput& (0+255),f,b
 35185   0081E2  D7FC               	goto	u22115
 35186   0081E4  0100               	movlb	0	; () banked
 35187   0081E6  5192               	movf	(??_readInput+1)& (0+255),w,b
 35188   0081E8  1481               	andwf	129,w,c	;volatile
 35189   0081EA  0012               	return	
 35190   0081EC                     l21426:
 35191                           
 35192                           ; BSR set to: 0
 35193                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 35194   0081EC  5193               	movf	readInput@io& (0+255),w,b
 35195   0081EE  0D04               	mullw	4
 35196   0081F0  0E02               	movlw	2
 35197   0081F2  26F3               	addwf	243,f,c
 35198   0081F4  0E00               	movlw	0
 35199   0081F6  22F4               	addwfc	244,f,c
 35200   0081F8  0E29               	movlw	low _configs
 35201   0081FA  24F3               	addwf	243,w,c
 35202   0081FC  6EF6               	movwf	tblptrl,c
 35203   0081FE  0EEE               	movlw	high _configs
 35204   008200  20F4               	addwfc	244,w,c
 35205   008202  6EF7               	movwf	tblptrh,c
 35206   008204                     	if	1	;There are 3 active tblptr bytes
 35207   008204  6AF8               	clrf	tblptru,c
 35208   008206  0E00               	movlw	low (__mediumconst shr (0+16))
 35209   008208  22F8               	addwfc	tblptru,f,c
 35210   00820A                     	endif
 35211   00820A  0008               	tblrd		*
 35212   00820C  CFF5 F091          	movff	tablat,??_readInput
 35213   008210  0E01               	movlw	1
 35214   008212  6F92               	movwf	(??_readInput+1)& (0+255),b
 35215   008214  2B91               	incf	??_readInput& (0+255),f,b
 35216   008216  D002               	goto	u22124
 35217   008218                     u22125:
 35218   008218  90D8               	bcf	status,0,c
 35219   00821A  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 35220   00821C                     u22124:
 35221   00821C  2F91               	decfsz	??_readInput& (0+255),f,b
 35222   00821E  D7FC               	goto	u22125
 35223   008220  0100               	movlb	0	; () banked
 35224   008222  5192               	movf	(??_readInput+1)& (0+255),w,b
 35225   008224  1482               	andwf	130,w,c	;volatile
 35226   008226  0012               	return	
 35227   008228                     l21432:
 35228                           
 35229                           ; BSR set to: 0
 35230   008228  5193               	movf	readInput@io& (0+255),w,b
 35231   00822A  0D04               	mullw	4
 35232   00822C  0E01               	movlw	1
 35233   00822E  26F3               	addwf	243,f,c
 35234   008230  0E00               	movlw	0
 35235   008232  22F4               	addwfc	244,f,c
 35236   008234  0E29               	movlw	low _configs
 35237   008236  24F3               	addwf	243,w,c
 35238   008238  6EF6               	movwf	tblptrl,c
 35239   00823A  0EEE               	movlw	high _configs
 35240   00823C  20F4               	addwfc	244,w,c
 35241   00823E  6EF7               	movwf	tblptrh,c
 35242   008240                     	if	1	;There are 3 active tblptr bytes
 35243   008240  6AF8               	clrf	tblptru,c
 35244   008242  0E00               	movlw	low (__mediumconst shr (0+16))
 35245   008244  22F8               	addwfc	tblptru,f,c
 35246   008246                     	endif
 35247   008246  0008               	tblrd		*
 35248   008248  50F5               	movf	tablat,w,c
 35249                           
 35250                           ; Switch size 1, requested type "simple"
 35251                           ; Number of cases is 3, Range of values is 65 to 67
 35252                           ; switch strategies available:
 35253                           ; Name         Instructions Cycles
 35254                           ; simple_byte           10     6 (average)
 35255                           ;	Chosen strategy is simple_byte
 35256   00824A  0A41               	xorlw	65	; case 65
 35257   00824C  B4D8               	btfsc	status,2,c
 35258   00824E  D792               	goto	l21418
 35259   008250  0A03               	xorlw	3	; case 66
 35260   008252  B4D8               	btfsc	status,2,c
 35261   008254  D7AD               	goto	l21422
 35262   008256  0A01               	xorlw	1	; case 67
 35263   008258  B4D8               	btfsc	status,2,c
 35264   00825A  D7C8               	goto	l21426
 35265   00825C                     l21434:
 35266                           
 35267                           ; BSR set to: 0
 35268                           ;../inputs.c: 191:     return FALSE;
 35269   00825C  0E00               	movlw	0
 35270                           
 35271                           ; BSR set to: 0
 35272   00825E  0012               	return		;funcret
 35273   008260                     __end_of_readInput:
 35274                           	callstack 0
 35275                           
 35276 ;; *************** function _initRomOps *****************
 35277 ;; Defined at:
 35278 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 35279 ;; Parameters:    Size  Location     Type
 35280 ;;		None
 35281 ;; Auto vars:     Size  Location     Type
 35282 ;;		None
 35283 ;; Return value:  Size  Location     Type
 35284 ;;                  1    wreg      void 
 35285 ;; Registers used:
 35286 ;;		wreg, status,2
 35287 ;; Tracked objects:
 35288 ;;		On entry : 0/0
 35289 ;;		On exit  : 0/0
 35290 ;;		Unchanged: 0/0
 35291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35296 ;;Total ram usage:        0 bytes
 35297 ;; Hardware stack levels used: 1
 35298 ;; Hardware stack levels required when called: 12
 35299 ;; This function calls:
 35300 ;;		Nothing
 35301 ;; This function is called by:
 35302 ;;		_main
 35303 ;; This function uses a non-reentrant model
 35304 ;;
 35305                           
 35306                           	psect	text140
 35307   00C788                     __ptext140:
 35308                           	callstack 0
 35309   00C788                     _initRomOps:
 35310                           	callstack 18
 35311                           
 35312                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 35313                           
 35314                           ; BSR set to: 0
 35315                           ;incstack = 0
 35316   00C788  0E00               	movlw	0
 35317   00C78A  0100               	movlb	0	; () banked
 35318   00C78C  6FBA               	movwf	_flashFlags& (0+255),b
 35319                           
 35320                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0700;
 35321   00C78E  0E07               	movlw	7
 35322   00C790  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 35323   00C792  0E00               	movlw	0
 35324   00C794  6FD1               	movwf	_flashBlock& (0+255),b
 35325                           
 35326                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 35327   00C796  0E00               	movlw	0
 35328   00C798  6EF8               	movwf	248,c	;volatile
 35329                           
 35330                           ; BSR set to: 0
 35331   00C79A  0012               	return		;funcret
 35332   00C79C                     __end_of_initRomOps:
 35333                           	callstack 0
 35334                           
 35335 ;; *************** function _checkPowerOnPb *****************
 35336 ;; Defined at:
 35337 ;;		line 954 in file "../../VLCBlib_PIC/vlcb.c"
 35338 ;; Parameters:    Size  Location     Type
 35339 ;;		None
 35340 ;; Auto vars:     Size  Location     Type
 35341 ;;  i               1   57[BANK1 ] unsigned char 
 35342 ;; Return value:  Size  Location     Type
 35343 ;;                  1    wreg      void 
 35344 ;; Registers used:
 35345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35346 ;; Tracked objects:
 35347 ;;		On entry : 0/0
 35348 ;;		On exit  : 0/0
 35349 ;;		Unchanged: 0/0
 35350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35352 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35354 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35355 ;;Total ram usage:        1 bytes
 35356 ;; Hardware stack levels used: 1
 35357 ;; Hardware stack levels required when called: 27
 35358 ;; This function calls:
 35359 ;;		_APP_testMode
 35360 ;;		_factoryReset
 35361 ;;		_pbDownTimer
 35362 ;;		_pbUpTimer
 35363 ;;		_showStatus
 35364 ;; This function is called by:
 35365 ;;		_main
 35366 ;; This function uses a non-reentrant model
 35367 ;;
 35368                           
 35369                           	psect	text141
 35370   00B660                     __ptext141:
 35371                           	callstack 0
 35372   00B660                     _checkPowerOnPb:
 35373                           	callstack 3
 35374                           
 35375                           ;../../VLCBlib_PIC/vlcb.c: 955:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 958:     if ((!
      +                          (PORTAbits.RA2))) {
 35376                           
 35377                           ; BSR set to: 0
 35378                           ;incstack = 0
 35379   00B660  B480               	btfsc	128,2,c	;volatile
 35380   00B662  0012               	return	
 35381                           
 35382                           ;../../VLCBlib_PIC/vlcb.c: 960:         i = pbDownTimer(30);
 35383   00B664  0E1E               	movlw	30
 35384   00B666  ECD8  F04C         	call	_pbDownTimer
 35385   00B66A  0101               	movlb	1	; () banked
 35386   00B66C  6FF6               	movwf	checkPowerOnPb@i& (0+255),b
 35387                           
 35388                           ; BSR set to: 1
 35389                           ;../../VLCBlib_PIC/vlcb.c: 961:         if (i == 0) {
 35390   00B66E  51F6               	movf	checkPowerOnPb@i& (0+255),w,b
 35391   00B670  B4D8               	btfsc	status,2,c
 35392   00B672  0012               	return	
 35393                           
 35394                           ; BSR set to: 1
 35395                           
 35396                           ; BSR set to: 1
 35397                           ;../../VLCBlib_PIC/vlcb.c: 963:             return;
 35398   00B674  0E01               	movlw	1
 35399   00B676  65F6               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35400   00B678  D006               	goto	l24958
 35401                           
 35402                           ; BSR set to: 1
 35403   00B67A  0E06               	movlw	6
 35404   00B67C  61F6               	cpfslt	checkPowerOnPb@i& (0+255),b
 35405   00B67E  D003               	goto	l24958
 35406                           
 35407                           ; BSR set to: 1
 35408                           ;../../VLCBlib_PIC/vlcb.c: 965:             APP_testMode();
 35409   00B680  EC2C  F064         	call	_APP_testMode	;wreg free
 35410                           
 35411                           ;../../VLCBlib_PIC/vlcb.c: 966:         } else if (i >= 10) {
 35412   00B684  0012               	return	
 35413   00B686                     l24958:
 35414                           
 35415                           ; BSR set to: 1
 35416   00B686  0E09               	movlw	9
 35417   00B688  65F6               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35418   00B68A  0012               	return	
 35419                           
 35420                           ; BSR set to: 1
 35421                           ;../../VLCBlib_PIC/vlcb.c: 967:             showStatus(STATUS_RESET_WARNING);
 35422   00B68C  0E04               	movlw	4
 35423   00B68E  EC1F  F044         	call	_showStatus
 35424                           
 35425                           ;../../VLCBlib_PIC/vlcb.c: 969:             i = pbUpTimer(5);
 35426   00B692  0E05               	movlw	5
 35427   00B694  EC80  F04C         	call	_pbUpTimer
 35428   00B698  0101               	movlb	1	; () banked
 35429   00B69A  6FF6               	movwf	checkPowerOnPb@i& (0+255),b
 35430                           
 35431                           ; BSR set to: 1
 35432                           ;../../VLCBlib_PIC/vlcb.c: 970:             if (i == 0) {
 35433   00B69C  51F6               	movf	checkPowerOnPb@i& (0+255),w,b
 35434   00B69E  B4D8               	btfsc	status,2,c
 35435   00B6A0  0012               	return	
 35436                           
 35437                           ; BSR set to: 1
 35438                           ;../../VLCBlib_PIC/vlcb.c: 974:             i = pbDownTimer(5);
 35439   00B6A2  0E05               	movlw	5
 35440   00B6A4  ECD8  F04C         	call	_pbDownTimer
 35441   00B6A8  0101               	movlb	1	; () banked
 35442   00B6AA  6FF6               	movwf	checkPowerOnPb@i& (0+255),b
 35443                           
 35444                           ; BSR set to: 1
 35445                           ;../../VLCBlib_PIC/vlcb.c: 975:             if ((i>=2) && (i < 4)) {
 35446   00B6AC  0E01               	movlw	1
 35447   00B6AE  65F6               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35448   00B6B0  0012               	return	
 35449                           
 35450                           ; BSR set to: 1
 35451   00B6B2  0E04               	movlw	4
 35452   00B6B4  61F6               	cpfslt	checkPowerOnPb@i& (0+255),b
 35453   00B6B6  0012               	return	
 35454                           
 35455                           ; BSR set to: 1
 35456                           ;../../VLCBlib_PIC/vlcb.c: 976:                 factoryReset();
 35457   00B6B8  ECAC  F043         	call	_factoryReset	;wreg free
 35458   00B6BC  0012               	return		;funcret
 35459   00B6BE                     __end_of_checkPowerOnPb:
 35460                           	callstack 0
 35461                           
 35462 ;; *************** function _showStatus *****************
 35463 ;; Defined at:
 35464 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 35465 ;; Parameters:    Size  Location     Type
 35466 ;;  s               1    wreg     enum E12897
 35467 ;; Auto vars:     Size  Location     Type
 35468 ;;  s               1   47[BANK0 ] enum E12897
 35469 ;; Return value:  Size  Location     Type
 35470 ;;                  1    wreg      void 
 35471 ;; Registers used:
 35472 ;;		wreg, status,2, status,0
 35473 ;; Tracked objects:
 35474 ;;		On entry : 0/0
 35475 ;;		On exit  : 0/0
 35476 ;;		Unchanged: 0/0
 35477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35481 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35482 ;;Total ram usage:        3 bytes
 35483 ;; Hardware stack levels used: 1
 35484 ;; Hardware stack levels required when called: 12
 35485 ;; This function calls:
 35486 ;;		Nothing
 35487 ;; This function is called by:
 35488 ;;		_setLEDsByMode
 35489 ;;		_checkPowerOnPb
 35490 ;;		_poll
 35491 ;; This function uses a non-reentrant model
 35492 ;;
 35493                           
 35494                           	psect	text142
 35495   00883E                     __ptext142:
 35496                           	callstack 0
 35497   00883E                     _showStatus:
 35498                           	callstack 15
 35499                           
 35500                           ;incstack = 0
 35501                           ;showStatus@s stored from wreg
 35502   00883E  0100               	movlb	0	; () banked
 35503   008840  6F8F               	movwf	showStatus@s& (0+255),b
 35504                           
 35505                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 35506   008842  D03E               	goto	l21146
 35507   008844                     l21116:
 35508                           
 35509                           ; BSR set to: 0
 35510                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 35511   008844  0E00               	movlw	0
 35512   008846  6FB1               	movwf	_ledState& (0+255),b
 35513                           
 35514                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 35515   008848  0E00               	movlw	0
 35516   00884A  6FB2               	movwf	(_ledState+1)& (0+255),b
 35517                           
 35518                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 35519   00884C  0012               	return	
 35520   00884E                     l21118:
 35521                           
 35522                           ; BSR set to: 0
 35523                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 35524   00884E  0E01               	movlw	1
 35525   008850  6FB1               	movwf	_ledState& (0+255),b
 35526                           
 35527                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 35528   008852  0E00               	movlw	0
 35529   008854  6FB2               	movwf	(_ledState+1)& (0+255),b
 35530                           
 35531                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 35532   008856  0012               	return	
 35533   008858                     l21120:
 35534                           
 35535                           ; BSR set to: 0
 35536                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 35537   008858  0E00               	movlw	0
 35538   00885A  6FB1               	movwf	_ledState& (0+255),b
 35539                           
 35540                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 35541   00885C  0E03               	movlw	3
 35542   00885E  6FB2               	movwf	(_ledState+1)& (0+255),b
 35543                           
 35544                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 35545   008860  0012               	return	
 35546   008862                     l1817:
 35547                           
 35548                           ; BSR set to: 0
 35549                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 35550                           
 35551                           ; BSR set to: 0
 35552   008862  0E00               	movlw	0
 35553   008864  6FB1               	movwf	_ledState& (0+255),b
 35554                           
 35555                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 35556   008866  0E01               	movlw	1
 35557   008868  6FB2               	movwf	(_ledState+1)& (0+255),b
 35558                           
 35559                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 35560   00886A  0012               	return	
 35561   00886C                     l21124:
 35562                           
 35563                           ; BSR set to: 0
 35564                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 35565   00886C  0E00               	movlw	0
 35566   00886E  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 35567                           
 35568                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 35569   008870  0E19               	movlw	25
 35570   008872  6FAF               	movwf	_flashCounter& (0+255),b
 35571                           
 35572                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 35573   008874  0E02               	movlw	2
 35574   008876  6FB1               	movwf	_ledState& (0+255),b
 35575                           
 35576                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 35577   008878  0E02               	movlw	2
 35578   00887A  6FB2               	movwf	(_ledState+1)& (0+255),b
 35579                           
 35580                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 35581   00887C  0012               	return	
 35582   00887E                     l21126:
 35583                           
 35584                           ; BSR set to: 0
 35585                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35586   00887E  29C4               	incf	_mode_state& (0+255),w,b
 35587   008880  A4D8               	btfss	status,2,c
 35588   008882  D003               	goto	l21130
 35589                           
 35590                           ; BSR set to: 0
 35591                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 35592   008884  0E06               	movlw	6
 35593   008886  6FB2               	movwf	(_ledState+1)& (0+255),b
 35594                           
 35595                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35596   008888  0012               	return	
 35597   00888A                     l21130:
 35598                           
 35599                           ; BSR set to: 0
 35600   00888A  05C4               	decf	_mode_state& (0+255),w,b
 35601   00888C  A4D8               	btfss	status,2,c
 35602   00888E  0012               	return	
 35603                           
 35604                           ; BSR set to: 0
 35605                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 35606   008890  0E06               	movlw	6
 35607   008892  6FB1               	movwf	_ledState& (0+255),b
 35608   008894  0012               	return	
 35609   008896                     l21134:
 35610                           
 35611                           ; BSR set to: 0
 35612                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35613   008896  29C4               	incf	_mode_state& (0+255),w,b
 35614   008898  A4D8               	btfss	status,2,c
 35615   00889A  D003               	goto	l21138
 35616                           
 35617                           ; BSR set to: 0
 35618                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 35619   00889C  0E08               	movlw	8
 35620   00889E  6FB2               	movwf	(_ledState+1)& (0+255),b
 35621                           
 35622                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35623   0088A0  0012               	return	
 35624   0088A2                     l21138:
 35625                           
 35626                           ; BSR set to: 0
 35627   0088A2  05C4               	decf	_mode_state& (0+255),w,b
 35628   0088A4  A4D8               	btfss	status,2,c
 35629   0088A6  0012               	return	
 35630                           
 35631                           ; BSR set to: 0
 35632                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 35633   0088A8  0E08               	movlw	8
 35634   0088AA  6FB1               	movwf	_ledState& (0+255),b
 35635   0088AC  0012               	return	
 35636   0088AE                     l21142:
 35637                           
 35638                           ; BSR set to: 0
 35639                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 35640   0088AE  0E00               	movlw	0
 35641   0088B0  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 35642                           
 35643                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 35644   0088B2  0E00               	movlw	0
 35645   0088B4  6FAF               	movwf	_flashCounter& (0+255),b
 35646                           
 35647                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 35648   0088B6  0E02               	movlw	2
 35649   0088B8  6FB1               	movwf	_ledState& (0+255),b
 35650                           
 35651                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 35652   0088BA  0E02               	movlw	2
 35653   0088BC  6FB2               	movwf	(_ledState+1)& (0+255),b
 35654                           
 35655                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 35656   0088BE  0012               	return	
 35657   0088C0                     l21146:
 35658   0088C0  0100               	movlb	0	; () banked
 35659   0088C2  518F               	movf	showStatus@s& (0+255),w,b
 35660   0088C4  6F8D               	movwf	??_showStatus& (0+255),b
 35661   0088C6  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 35662                           
 35663                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35664                           ; Switch size 1, requested type "simple"
 35665                           ; Number of cases is 1, Range of values is 0 to 0
 35666                           ; switch strategies available:
 35667                           ; Name         Instructions Cycles
 35668                           ; simple_byte            4     3 (average)
 35669                           ;	Chosen strategy is simple_byte
 35670   0088C8  518E               	movf	(??_showStatus+1)& (0+255),w,b
 35671   0088CA  0A00               	xorlw	0	; case 0
 35672   0088CC  A4D8               	btfss	status,2,c
 35673   0088CE  0012               	return	
 35674                           
 35675                           ; BSR set to: 0
 35676                           ; Switch size 1, requested type "simple"
 35677                           ; Number of cases is 13, Range of values is 0 to 12
 35678                           ; switch strategies available:
 35679                           ; Name         Instructions Cycles
 35680                           ; simple_byte           40    21 (average)
 35681                           ;	Chosen strategy is simple_byte
 35682   0088D0  518D               	movf	??_showStatus& (0+255),w,b
 35683   0088D2  0A00               	xorlw	0	; case 0
 35684   0088D4  B4D8               	btfsc	status,2,c
 35685   0088D6  D7B6               	goto	l21116
 35686   0088D8  0A01               	xorlw	1	; case 1
 35687   0088DA  B4D8               	btfsc	status,2,c
 35688   0088DC  D7B8               	goto	l21118
 35689   0088DE  0A03               	xorlw	3	; case 2
 35690   0088E0  B4D8               	btfsc	status,2,c
 35691   0088E2  D7BA               	goto	l21120
 35692   0088E4  0A01               	xorlw	1	; case 3
 35693   0088E6  B4D8               	btfsc	status,2,c
 35694   0088E8  D7BC               	goto	l1817
 35695   0088EA  0A07               	xorlw	7	; case 4
 35696   0088EC  B4D8               	btfsc	status,2,c
 35697   0088EE  D7BE               	goto	l21124
 35698   0088F0  0A01               	xorlw	1	; case 5
 35699   0088F2  B4D8               	btfsc	status,2,c
 35700   0088F4  D7B6               	goto	l1817
 35701   0088F6  0A03               	xorlw	3	; case 6
 35702   0088F8  B4D8               	btfsc	status,2,c
 35703   0088FA  D7B3               	goto	l1817
 35704   0088FC  0A01               	xorlw	1	; case 7
 35705   0088FE  B4D8               	btfsc	status,2,c
 35706   008900  D7BE               	goto	l21126
 35707   008902  0A0F               	xorlw	15	; case 8
 35708   008904  B4D8               	btfsc	status,2,c
 35709   008906  D7C7               	goto	l21134
 35710   008908  0A01               	xorlw	1	; case 9
 35711   00890A  B4D8               	btfsc	status,2,c
 35712   00890C  D7AA               	goto	l1817
 35713   00890E  0A03               	xorlw	3	; case 10
 35714   008910  B4D8               	btfsc	status,2,c
 35715   008912  D7A7               	goto	l1817
 35716   008914  0A01               	xorlw	1	; case 11
 35717   008916  B4D8               	btfsc	status,2,c
 35718   008918  D7CA               	goto	l21142
 35719   00891A  0A07               	xorlw	7	; case 12
 35720   00891C  A4D8               	btfss	status,2,c
 35721   00891E  0012               	return	
 35722   008920  D7C6               	goto	l21142
 35723   008922                     __end_of_showStatus:
 35724                           	callstack 0
 35725                           
 35726 ;; *************** function _pbUpTimer *****************
 35727 ;; Defined at:
 35728 ;;		line 931 in file "../../VLCBlib_PIC/vlcb.c"
 35729 ;; Parameters:    Size  Location     Type
 35730 ;;  timeout         1    wreg     unsigned char 
 35731 ;; Auto vars:     Size  Location     Type
 35732 ;;  timeout         1   72[BANK0 ] unsigned char 
 35733 ;; Return value:  Size  Location     Type
 35734 ;;                  1    wreg      unsigned char 
 35735 ;; Registers used:
 35736 ;;		wreg, status,2, status,0, cstack
 35737 ;; Tracked objects:
 35738 ;;		On entry : 0/0
 35739 ;;		On exit  : 0/0
 35740 ;;		Unchanged: 0/0
 35741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35743 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35744 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35745 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35746 ;;Total ram usage:        5 bytes
 35747 ;; Hardware stack levels used: 1
 35748 ;; Hardware stack levels required when called: 14
 35749 ;; This function calls:
 35750 ;;		___lldiv
 35751 ;;		___lmul
 35752 ;;		_leds_poll
 35753 ;;		_tickGet
 35754 ;; This function is called by:
 35755 ;;		_checkPowerOnPb
 35756 ;; This function uses a non-reentrant model
 35757 ;;
 35758                           
 35759                           	psect	text143
 35760   009900                     __ptext143:
 35761                           	callstack 0
 35762   009900                     _pbUpTimer:
 35763                           	callstack 15
 35764                           
 35765                           ; BSR set to: 0
 35766                           ;incstack = 0
 35767                           ;pbUpTimer@timeout stored from wreg
 35768   009900  0100               	movlb	0	; () banked
 35769   009902  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 35770                           
 35771                           ;../../VLCBlib_PIC/vlcb.c: 933:     pbTimer.val = tickGet();
 35772   009904  ECE5  F05B         	call	_tickGet	;wreg free
 35773   009908  C08D  F0A9         	movff	?_tickGet,_pbTimer
 35774   00990C  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 35775   009910  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 35776   009914  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 35777                           
 35778                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35779   009918  D02D               	goto	l2008
 35780   00991A                     l24236:
 35781                           
 35782                           ;../../VLCBlib_PIC/vlcb.c: 935:         leds_poll();
 35783   00991A  EC92  F030         	call	_leds_poll	;wreg free
 35784                           
 35785                           ;../../VLCBlib_PIC/vlcb.c: 936:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35786   00991E  ECE5  F05B         	call	_tickGet	;wreg free
 35787   009922  0100               	movlb	0	; () banked
 35788   009924  51A9               	movf	_pbTimer& (0+255),w,b
 35789   009926  5D8D               	subwf	?_tickGet& (0+255),w,b
 35790   009928  6FA4               	movwf	??_pbUpTimer& (0+255),b
 35791   00992A  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 35792   00992C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35793   00992E  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 35794   009930  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 35795   009932  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35796   009934  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 35797   009936  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 35798   009938  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35799   00993A  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 35800   00993C  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 35801   00993E  6F91               	movwf	___lmul@multiplier& (0+255),b
 35802   009940  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35803   009942  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35804   009944  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35805   009946  0E24               	movlw	36
 35806   009948  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35807   00994A  0EF4               	movlw	244
 35808   00994C  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35809   00994E  0E00               	movlw	0
 35810   009950  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35811   009952  0E00               	movlw	0
 35812   009954  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35813   009956  EC11  F05C         	call	___lmul	;wreg free
 35814   00995A  0100               	movlb	0	; () banked
 35815   00995C  51A4               	movf	??_pbUpTimer& (0+255),w,b
 35816   00995E  5D91               	subwf	?___lmul& (0+255),w,b
 35817   009960  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 35818   009962  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35819   009964  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 35820   009966  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35821   009968  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 35822   00996A  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35823   00996C  B0D8               	btfsc	status,0,c
 35824   00996E  D002               	goto	l2008
 35825                           
 35826                           ; BSR set to: 0
 35827                           ;../../VLCBlib_PIC/vlcb.c: 937:             return 0;
 35828   009970  0E00               	movlw	0
 35829   009972  0012               	return	
 35830   009974                     l2008:
 35831                           
 35832                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35833   009974  B480               	btfsc	128,2,c	;volatile
 35834   009976  D7D1               	goto	l24236
 35835                           
 35836                           ;../../VLCBlib_PIC/vlcb.c: 941:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35837   009978  ECE5  F05B         	call	_tickGet	;wreg free
 35838   00997C  0100               	movlb	0	; () banked
 35839   00997E  51A9               	movf	_pbTimer& (0+255),w,b
 35840   009980  5D8D               	subwf	?_tickGet& (0+255),w,b
 35841   009982  6F97               	movwf	___lldiv@dividend& (0+255),b
 35842   009984  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 35843   009986  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35844   009988  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35845   00998A  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 35846   00998C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35847   00998E  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35848   009990  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 35849   009992  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35850   009994  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35851   009996  0E24               	movlw	36
 35852   009998  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35853   00999A  0EF4               	movlw	244
 35854   00999C  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35855   00999E  0E00               	movlw	0
 35856   0099A0  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35857   0099A2  0E00               	movlw	0
 35858   0099A4  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 35859   0099A6  ECA1  F054         	call	___lldiv	;wreg free
 35860   0099AA  0100               	movlb	0	; () banked
 35861   0099AC  5197               	movf	?___lldiv& (0+255),w,b
 35862                           
 35863                           ; BSR set to: 0
 35864   0099AE  0012               	return		;funcret
 35865   0099B0                     __end_of_pbUpTimer:
 35866                           	callstack 0
 35867                           
 35868 ;; *************** function _pbDownTimer *****************
 35869 ;; Defined at:
 35870 ;;		line 912 in file "../../VLCBlib_PIC/vlcb.c"
 35871 ;; Parameters:    Size  Location     Type
 35872 ;;  timeout         1    wreg     unsigned char 
 35873 ;; Auto vars:     Size  Location     Type
 35874 ;;  timeout         1   72[BANK0 ] unsigned char 
 35875 ;; Return value:  Size  Location     Type
 35876 ;;                  1    wreg      unsigned char 
 35877 ;; Registers used:
 35878 ;;		wreg, status,2, status,0, cstack
 35879 ;; Tracked objects:
 35880 ;;		On entry : 0/0
 35881 ;;		On exit  : 0/0
 35882 ;;		Unchanged: 0/0
 35883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35886 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35887 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35888 ;;Total ram usage:        5 bytes
 35889 ;; Hardware stack levels used: 1
 35890 ;; Hardware stack levels required when called: 14
 35891 ;; This function calls:
 35892 ;;		___lldiv
 35893 ;;		___lmul
 35894 ;;		_leds_poll
 35895 ;;		_tickGet
 35896 ;; This function is called by:
 35897 ;;		_checkPowerOnPb
 35898 ;; This function uses a non-reentrant model
 35899 ;;
 35900                           
 35901                           	psect	text144
 35902   0099B0                     __ptext144:
 35903                           	callstack 0
 35904   0099B0                     _pbDownTimer:
 35905                           	callstack 15
 35906                           
 35907                           ; BSR set to: 0
 35908                           ;incstack = 0
 35909                           ;pbDownTimer@timeout stored from wreg
 35910   0099B0  0100               	movlb	0	; () banked
 35911   0099B2  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 35912                           
 35913                           ;../../VLCBlib_PIC/vlcb.c: 914:     pbTimer.val = tickGet();
 35914   0099B4  ECE5  F05B         	call	_tickGet	;wreg free
 35915   0099B8  C08D  F0A9         	movff	?_tickGet,_pbTimer
 35916   0099BC  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 35917   0099C0  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 35918   0099C4  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 35919                           
 35920                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 35921   0099C8  D02D               	goto	l2001
 35922   0099CA                     l24224:
 35923                           
 35924                           ;../../VLCBlib_PIC/vlcb.c: 916:         leds_poll();
 35925   0099CA  EC92  F030         	call	_leds_poll	;wreg free
 35926                           
 35927                           ;../../VLCBlib_PIC/vlcb.c: 917:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35928   0099CE  ECE5  F05B         	call	_tickGet	;wreg free
 35929   0099D2  0100               	movlb	0	; () banked
 35930   0099D4  51A9               	movf	_pbTimer& (0+255),w,b
 35931   0099D6  5D8D               	subwf	?_tickGet& (0+255),w,b
 35932   0099D8  6FA4               	movwf	??_pbDownTimer& (0+255),b
 35933   0099DA  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 35934   0099DC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35935   0099DE  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 35936   0099E0  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 35937   0099E2  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35938   0099E4  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 35939   0099E6  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 35940   0099E8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35941   0099EA  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 35942   0099EC  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 35943   0099EE  6F91               	movwf	___lmul@multiplier& (0+255),b
 35944   0099F0  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35945   0099F2  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35946   0099F4  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35947   0099F6  0E24               	movlw	36
 35948   0099F8  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35949   0099FA  0EF4               	movlw	244
 35950   0099FC  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35951   0099FE  0E00               	movlw	0
 35952   009A00  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35953   009A02  0E00               	movlw	0
 35954   009A04  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35955   009A06  EC11  F05C         	call	___lmul	;wreg free
 35956   009A0A  0100               	movlb	0	; () banked
 35957   009A0C  51A4               	movf	??_pbDownTimer& (0+255),w,b
 35958   009A0E  5D91               	subwf	?___lmul& (0+255),w,b
 35959   009A10  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 35960   009A12  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35961   009A14  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 35962   009A16  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35963   009A18  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 35964   009A1A  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35965   009A1C  B0D8               	btfsc	status,0,c
 35966   009A1E  D002               	goto	l2001
 35967                           
 35968                           ; BSR set to: 0
 35969                           ;../../VLCBlib_PIC/vlcb.c: 918:             return 0;
 35970   009A20  0E00               	movlw	0
 35971   009A22  0012               	return	
 35972   009A24                     l2001:
 35973                           
 35974                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 35975   009A24  A480               	btfss	128,2,c	;volatile
 35976   009A26  D7D1               	goto	l24224
 35977                           
 35978                           ;../../VLCBlib_PIC/vlcb.c: 922:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35979   009A28  ECE5  F05B         	call	_tickGet	;wreg free
 35980   009A2C  0100               	movlb	0	; () banked
 35981   009A2E  51A9               	movf	_pbTimer& (0+255),w,b
 35982   009A30  5D8D               	subwf	?_tickGet& (0+255),w,b
 35983   009A32  6F97               	movwf	___lldiv@dividend& (0+255),b
 35984   009A34  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 35985   009A36  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35986   009A38  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35987   009A3A  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 35988   009A3C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35989   009A3E  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35990   009A40  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 35991   009A42  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35992   009A44  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35993   009A46  0E24               	movlw	36
 35994   009A48  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35995   009A4A  0EF4               	movlw	244
 35996   009A4C  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35997   009A4E  0E00               	movlw	0
 35998   009A50  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35999   009A52  0E00               	movlw	0
 36000   009A54  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 36001   009A56  ECA1  F054         	call	___lldiv	;wreg free
 36002   009A5A  0100               	movlb	0	; () banked
 36003   009A5C  5197               	movf	?___lldiv& (0+255),w,b
 36004                           
 36005                           ; BSR set to: 0
 36006   009A5E  0012               	return		;funcret
 36007   009A60                     __end_of_pbDownTimer:
 36008                           	callstack 0
 36009                           
 36010 ;; *************** function _leds_poll *****************
 36011 ;; Defined at:
 36012 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 36013 ;; Parameters:    Size  Location     Type
 36014 ;;		None
 36015 ;; Auto vars:     Size  Location     Type
 36016 ;;		None
 36017 ;; Return value:  Size  Location     Type
 36018 ;;                  1    wreg      void 
 36019 ;; Registers used:
 36020 ;;		wreg, status,2, status,0, cstack
 36021 ;; Tracked objects:
 36022 ;;		On entry : 0/0
 36023 ;;		On exit  : 0/0
 36024 ;;		Unchanged: 0/0
 36025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36028 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36029 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36030 ;;Total ram usage:        4 bytes
 36031 ;; Hardware stack levels used: 1
 36032 ;; Hardware stack levels required when called: 13
 36033 ;; This function calls:
 36034 ;;		___awdiv
 36035 ;;		_tickGet
 36036 ;; This function is called by:
 36037 ;;		_pbDownTimer
 36038 ;;		_pbUpTimer
 36039 ;;		_poll
 36040 ;; This function uses a non-reentrant model
 36041 ;;
 36042                           
 36043                           	psect	text145
 36044   006124                     __ptext145:
 36045                           	callstack 0
 36046   006124                     _leds_poll:
 36047                           	callstack 16
 36048                           
 36049                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 36050                           
 36051                           ; BSR set to: 0
 36052                           ;incstack = 0
 36053   006124  ECE5  F05B         	call	_tickGet	;wreg free
 36054   006128  0101               	movlb	1	; () banked
 36055   00612A  5148               	movf	_ledTimer& (0+255),w,b
 36056   00612C  0100               	movlb	0	; () banked
 36057   00612E  5D8D               	subwf	?_tickGet& (0+255),w,b
 36058   006130  6F9F               	movwf	??_leds_poll& (0+255),b
 36059   006132  0101               	movlb	1	; () banked
 36060   006134  5149               	movf	(_ledTimer+1)& (0+255),w,b
 36061   006136  0100               	movlb	0	; () banked
 36062   006138  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 36063   00613A  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 36064   00613C  0101               	movlb	1	; () banked
 36065   00613E  514A               	movf	(_ledTimer+2)& (0+255),w,b
 36066   006140  0100               	movlb	0	; () banked
 36067   006142  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 36068   006144  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 36069   006146  0101               	movlb	1	; () banked
 36070   006148  514B               	movf	(_ledTimer+3)& (0+255),w,b
 36071   00614A  0100               	movlb	0	; () banked
 36072   00614C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 36073   00614E  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 36074   006150  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 36075   006152  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 36076   006154  E106               	bnz	u23370
 36077   006156  0E72               	movlw	114
 36078   006158  5D9F               	subwf	??_leds_poll& (0+255),w,b
 36079   00615A  0E02               	movlw	2
 36080   00615C  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 36081   00615E  A0D8               	btfss	status,0,c
 36082   006160  D06B               	goto	l22266
 36083   006162                     u23370:
 36084                           
 36085                           ; BSR set to: 0
 36086                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 36087   006162  2BAF               	incf	_flashCounter& (0+255),f,b
 36088                           
 36089                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 36090   006164  2BB0               	incf	(_flashCounter+1)& (0+255),f,b
 36091                           
 36092                           ; BSR set to: 0
 36093                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 36094   006166  ECE5  F05B         	call	_tickGet	;wreg free
 36095   00616A  C08D  F148         	movff	?_tickGet,_ledTimer
 36096   00616E  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
 36097   006172  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
 36098   006176  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
 36099   00617A  D05E               	goto	l22266
 36100   00617C                     l1767:
 36101                           
 36102                           ; BSR set to: 0
 36103                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 36104   00617C  8C8A               	bsf	138,6,c	;volatile
 36105   00617E                     l22222:
 36106                           
 36107                           ; BSR set to: 0
 36108                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 36109   00617E  0E00               	movlw	0
 36110   006180  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 36111                           
 36112                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 36113   006182  D0E0               	goto	l22312
 36114   006184                     l1769:
 36115                           
 36116                           ; BSR set to: 0
 36117                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 36118   006184  9C8A               	bcf	138,6,c	;volatile
 36119   006186  D7FB               	goto	l22222
 36120   006188                     l22226:
 36121                           
 36122                           ; BSR set to: 0
 36123                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 36124   006188  C0B0  F097         	movff	_flashCounter+1,___awdiv@dividend
 36125   00618C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36126   00618E  0E00               	movlw	0
 36127   006190  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36128   006192  0E19               	movlw	25
 36129   006194  6F99               	movwf	___awdiv@divisor& (0+255),b
 36130   006196  EC1B  F054         	call	___awdiv	;wreg free
 36131   00619A  0100               	movlb	0	; () banked
 36132   00619C  3B97               	swapf	?___awdiv& (0+255),f,b
 36133   00619E  4797               	rlncf	?___awdiv& (0+255),f,b
 36134   0061A0  4797               	rlncf	?___awdiv& (0+255),f,b
 36135   0061A2  508A               	movf	138,w,c	;volatile
 36136   0061A4  1997               	xorwf	?___awdiv& (0+255),w,b
 36137   0061A6  0BBF               	andlw	-65
 36138   0061A8  1997               	xorwf	?___awdiv& (0+255),w,b
 36139   0061AA  6E8A               	movwf	138,c	;volatile
 36140                           
 36141                           ; BSR set to: 0
 36142                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 36143   0061AC  0E31               	movlw	49
 36144   0061AE                     L17:
 36145   0061AE  65B0               	cpfsgt	(_flashCounter+1)& (0+255),b
 36146   0061B0  D0C9               	goto	l22312
 36147   0061B2  D7E5               	goto	l22222
 36148   0061B4                     l22232:
 36149                           
 36150                           ; BSR set to: 0
 36151                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 36152   0061B4  C0B0  F097         	movff	_flashCounter+1,___awdiv@dividend
 36153   0061B8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36154   0061BA  0E00               	movlw	0
 36155   0061BC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36156   0061BE  0E32               	movlw	50
 36157   0061C0  6F99               	movwf	___awdiv@divisor& (0+255),b
 36158   0061C2  EC1B  F054         	call	___awdiv	;wreg free
 36159   0061C6  0100               	movlb	0	; () banked
 36160   0061C8  3B97               	swapf	?___awdiv& (0+255),f,b
 36161   0061CA  4797               	rlncf	?___awdiv& (0+255),f,b
 36162   0061CC  4797               	rlncf	?___awdiv& (0+255),f,b
 36163   0061CE  508A               	movf	138,w,c	;volatile
 36164   0061D0  1997               	xorwf	?___awdiv& (0+255),w,b
 36165   0061D2  0BBF               	andlw	-65
 36166   0061D4  1997               	xorwf	?___awdiv& (0+255),w,b
 36167   0061D6  6E8A               	movwf	138,c	;volatile
 36168                           
 36169                           ; BSR set to: 0
 36170                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 36171   0061D8  0E63               	movlw	99
 36172   0061DA  D7E9               	goto	L17
 36173   0061DC                     l22238:
 36174                           
 36175                           ; BSR set to: 0
 36176                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 36177   0061DC  C0B0  F097         	movff	_flashCounter+1,___awdiv@dividend
 36178   0061E0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36179   0061E2  0E00               	movlw	0
 36180   0061E4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36181   0061E6  0E64               	movlw	100
 36182   0061E8  6F99               	movwf	___awdiv@divisor& (0+255),b
 36183   0061EA  EC1B  F054         	call	___awdiv	;wreg free
 36184   0061EE  0100               	movlb	0	; () banked
 36185   0061F0  3B97               	swapf	?___awdiv& (0+255),f,b
 36186   0061F2  4797               	rlncf	?___awdiv& (0+255),f,b
 36187   0061F4  4797               	rlncf	?___awdiv& (0+255),f,b
 36188   0061F6  508A               	movf	138,w,c	;volatile
 36189   0061F8  1997               	xorwf	?___awdiv& (0+255),w,b
 36190   0061FA  0BBF               	andlw	-65
 36191   0061FC  1997               	xorwf	?___awdiv& (0+255),w,b
 36192   0061FE  6E8A               	movwf	138,c	;volatile
 36193                           
 36194                           ; BSR set to: 0
 36195                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 36196   006200  0EC7               	movlw	199
 36197   006202  D7D5               	goto	L17
 36198   006204                     l1776:
 36199                           
 36200                           ; BSR set to: 0
 36201                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 36202   006204  8C8A               	bsf	138,6,c	;volatile
 36203                           
 36204                           ; BSR set to: 0
 36205                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 36206   006206  0E18               	movlw	24
 36207   006208  65B0               	cpfsgt	(_flashCounter+1)& (0+255),b
 36208   00620A  D09C               	goto	l22312
 36209                           
 36210                           ; BSR set to: 0
 36211                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 36212   00620C  0E00               	movlw	0
 36213   00620E  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 36214                           
 36215                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 36216   006210  0E00               	movlw	0
 36217   006212  D007               	goto	L18
 36218   006214                     l1778:
 36219                           
 36220                           ; BSR set to: 0
 36221                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 36222   006214  9C8A               	bcf	138,6,c	;volatile
 36223                           
 36224                           ; BSR set to: 0
 36225                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 36226   006216  0E18               	movlw	24
 36227   006218  65B0               	cpfsgt	(_flashCounter+1)& (0+255),b
 36228   00621A  D094               	goto	l22312
 36229                           
 36230                           ; BSR set to: 0
 36231                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 36232   00621C  0E00               	movlw	0
 36233   00621E  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 36234                           
 36235                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 36236   006220  0E01               	movlw	1
 36237   006222                     L18:
 36238   006222  6FB2               	movwf	(_ledState+1)& (0+255),b
 36239   006224  D08F               	goto	l22312
 36240   006226                     l1780:
 36241                           
 36242                           ; BSR set to: 0
 36243                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 36244   006226  8C8A               	bsf	138,6,c	;volatile
 36245                           
 36246                           ; BSR set to: 0
 36247                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 36248   006228  0E31               	movlw	49
 36249   00622A  D7EE               	goto	L21
 36250   00622C                     l1782:
 36251                           
 36252                           ; BSR set to: 0
 36253                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 36254   00622C  9C8A               	bcf	138,6,c	;volatile
 36255                           
 36256                           ; BSR set to: 0
 36257                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 36258   00622E  0E31               	movlw	49
 36259   006230  D7F3               	goto	L22
 36260   006232                     l1784:
 36261                           
 36262                           ; BSR set to: 0
 36263                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 36264   006232  9C8A               	bcf	138,6,c	;volatile
 36265                           
 36266                           ; BSR set to: 0
 36267                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 36268   006234  0E63               	movlw	99
 36269   006236  D7F0               	goto	L22
 36270   006238                     l22266:
 36271   006238  0100               	movlb	0	; () banked
 36272   00623A  51B2               	movf	(_ledState+1)& (0+255),w,b
 36273   00623C  6F9F               	movwf	??_leds_poll& (0+255),b
 36274   00623E  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 36275                           
 36276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36277                           ; Switch size 1, requested type "simple"
 36278                           ; Number of cases is 1, Range of values is 0 to 0
 36279                           ; switch strategies available:
 36280                           ; Name         Instructions Cycles
 36281                           ; simple_byte            4     3 (average)
 36282                           ;	Chosen strategy is simple_byte
 36283   006240  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 36284   006242  0A00               	xorlw	0	; case 0
 36285   006244  A4D8               	btfss	status,2,c
 36286   006246  D07E               	goto	l22312
 36287                           
 36288                           ; BSR set to: 0
 36289                           ; Switch size 1, requested type "simple"
 36290                           ; Number of cases is 10, Range of values is 0 to 9
 36291                           ; switch strategies available:
 36292                           ; Name         Instructions Cycles
 36293                           ; simple_byte           31    16 (average)
 36294                           ;	Chosen strategy is simple_byte
 36295   006248  519F               	movf	??_leds_poll& (0+255),w,b
 36296   00624A  0A00               	xorlw	0	; case 0
 36297   00624C  B4D8               	btfsc	status,2,c
 36298   00624E  D79A               	goto	l1769
 36299   006250  0A01               	xorlw	1	; case 1
 36300   006252  B4D8               	btfsc	status,2,c
 36301   006254  D793               	goto	l1767
 36302   006256  0A03               	xorlw	3	; case 2
 36303   006258  B4D8               	btfsc	status,2,c
 36304   00625A  D796               	goto	l22226
 36305   00625C  0A01               	xorlw	1	; case 3
 36306   00625E  B4D8               	btfsc	status,2,c
 36307   006260  D7A9               	goto	l22232
 36308   006262  0A07               	xorlw	7	; case 4
 36309   006264  B4D8               	btfsc	status,2,c
 36310   006266  D7BA               	goto	l22238
 36311   006268  0A01               	xorlw	1	; case 5
 36312   00626A  B4D8               	btfsc	status,2,c
 36313   00626C  D7D3               	goto	l1778
 36314   00626E  0A03               	xorlw	3	; case 6
 36315   006270  B4D8               	btfsc	status,2,c
 36316   006272  D7C8               	goto	l1776
 36317   006274  0A01               	xorlw	1	; case 7
 36318   006276  B4D8               	btfsc	status,2,c
 36319   006278  D7D9               	goto	l1782
 36320   00627A  0A0F               	xorlw	15	; case 8
 36321   00627C  B4D8               	btfsc	status,2,c
 36322   00627E  D7D3               	goto	l1780
 36323   006280  0A01               	xorlw	1	; case 9
 36324   006282  B4D8               	btfsc	status,2,c
 36325   006284  D7D6               	goto	l1784
 36326   006286  D05E               	goto	l22312
 36327   006288                     l1787:
 36328                           
 36329                           ; BSR set to: 0
 36330                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 36331   006288  8E8A               	bsf	138,7,c	;volatile
 36332   00628A                     l22268:
 36333                           
 36334                           ; BSR set to: 0
 36335                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 36336   00628A  0E00               	movlw	0
 36337   00628C  6FAF               	movwf	_flashCounter& (0+255),b
 36338                           
 36339                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 36340   00628E  0012               	return	
 36341   006290                     l1789:
 36342                           
 36343                           ; BSR set to: 0
 36344                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 36345   006290  9E8A               	bcf	138,7,c	;volatile
 36346   006292  D7FB               	goto	l22268
 36347   006294                     l22272:
 36348                           
 36349                           ; BSR set to: 0
 36350                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 36351   006294  C0AF  F097         	movff	_flashCounter,___awdiv@dividend
 36352   006298  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36353   00629A  0E00               	movlw	0
 36354   00629C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36355   00629E  0E19               	movlw	25
 36356   0062A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 36357   0062A2  EC1B  F054         	call	___awdiv	;wreg free
 36358   0062A6  0100               	movlb	0	; () banked
 36359   0062A8  3397               	rrcf	?___awdiv& (0+255),f,b
 36360   0062AA  3397               	rrcf	?___awdiv& (0+255),f,b
 36361   0062AC  508A               	movf	138,w,c	;volatile
 36362   0062AE  1997               	xorwf	?___awdiv& (0+255),w,b
 36363   0062B0  0B7F               	andlw	-129
 36364   0062B2  1997               	xorwf	?___awdiv& (0+255),w,b
 36365   0062B4  6E8A               	movwf	138,c	;volatile
 36366                           
 36367                           ; BSR set to: 0
 36368                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 36369   0062B6  0E31               	movlw	49
 36370   0062B8                     L20:
 36371   0062B8  65AF               	cpfsgt	_flashCounter& (0+255),b
 36372   0062BA  0012               	return	
 36373   0062BC  D7E6               	goto	l22268
 36374   0062BE                     l22278:
 36375                           
 36376                           ; BSR set to: 0
 36377                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 36378   0062BE  C0AF  F097         	movff	_flashCounter,___awdiv@dividend
 36379   0062C2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36380   0062C4  0E00               	movlw	0
 36381   0062C6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36382   0062C8  0E32               	movlw	50
 36383   0062CA  6F99               	movwf	___awdiv@divisor& (0+255),b
 36384   0062CC  EC1B  F054         	call	___awdiv	;wreg free
 36385   0062D0  0100               	movlb	0	; () banked
 36386   0062D2  3397               	rrcf	?___awdiv& (0+255),f,b
 36387   0062D4  3397               	rrcf	?___awdiv& (0+255),f,b
 36388   0062D6  508A               	movf	138,w,c	;volatile
 36389   0062D8  1997               	xorwf	?___awdiv& (0+255),w,b
 36390   0062DA  0B7F               	andlw	-129
 36391   0062DC  1997               	xorwf	?___awdiv& (0+255),w,b
 36392   0062DE  6E8A               	movwf	138,c	;volatile
 36393                           
 36394                           ; BSR set to: 0
 36395                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 36396   0062E0  0E63               	movlw	99
 36397   0062E2  D7EA               	goto	L20
 36398   0062E4                     l22284:
 36399                           
 36400                           ; BSR set to: 0
 36401                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 36402   0062E4  C0AF  F097         	movff	_flashCounter,___awdiv@dividend
 36403   0062E8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36404   0062EA  0E00               	movlw	0
 36405   0062EC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36406   0062EE  0E64               	movlw	100
 36407   0062F0  6F99               	movwf	___awdiv@divisor& (0+255),b
 36408   0062F2  EC1B  F054         	call	___awdiv	;wreg free
 36409   0062F6  0100               	movlb	0	; () banked
 36410   0062F8  3397               	rrcf	?___awdiv& (0+255),f,b
 36411   0062FA  3397               	rrcf	?___awdiv& (0+255),f,b
 36412   0062FC  508A               	movf	138,w,c	;volatile
 36413   0062FE  1997               	xorwf	?___awdiv& (0+255),w,b
 36414   006300  0B7F               	andlw	-129
 36415   006302  1997               	xorwf	?___awdiv& (0+255),w,b
 36416   006304  6E8A               	movwf	138,c	;volatile
 36417                           
 36418                           ; BSR set to: 0
 36419                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 36420   006306  0EC7               	movlw	199
 36421   006308  D7D7               	goto	L20
 36422   00630A                     l1796:
 36423                           
 36424                           ; BSR set to: 0
 36425                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 36426   00630A  8E8A               	bsf	138,7,c	;volatile
 36427                           
 36428                           ; BSR set to: 0
 36429                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 36430   00630C  0E18               	movlw	24
 36431   00630E  D00F               	goto	L24
 36432   006310                     u23490:
 36433                           
 36434                           ; BSR set to: 0
 36435                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 36436   006310  0E00               	movlw	0
 36437   006312  6FAF               	movwf	_flashCounter& (0+255),b
 36438                           
 36439                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 36440   006314  0E00               	movlw	0
 36441   006316  6FB1               	movwf	_ledState& (0+255),b
 36442   006318  0012               	return	
 36443   00631A                     l1798:
 36444                           
 36445                           ; BSR set to: 0
 36446                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 36447   00631A  9E8A               	bcf	138,7,c	;volatile
 36448                           
 36449                           ; BSR set to: 0
 36450                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 36451   00631C  0E18               	movlw	24
 36452   00631E  D00C               	goto	L23
 36453   006320                     u23500:
 36454                           
 36455                           ; BSR set to: 0
 36456                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 36457   006320  0E00               	movlw	0
 36458   006322  6FAF               	movwf	_flashCounter& (0+255),b
 36459                           
 36460                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 36461   006324  0E01               	movlw	1
 36462   006326  6FB1               	movwf	_ledState& (0+255),b
 36463   006328  0012               	return	
 36464   00632A                     l1800:
 36465                           
 36466                           ; BSR set to: 0
 36467                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 36468   00632A  8E8A               	bsf	138,7,c	;volatile
 36469                           
 36470                           ; BSR set to: 0
 36471                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 36472   00632C  0E31               	movlw	49
 36473   00632E                     L24:
 36474   00632E  65AF               	cpfsgt	_flashCounter& (0+255),b
 36475   006330  0012               	return	
 36476   006332  D7EE               	goto	u23490
 36477   006334                     l1802:
 36478                           
 36479                           ; BSR set to: 0
 36480                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 36481   006334  9E8A               	bcf	138,7,c	;volatile
 36482                           
 36483                           ; BSR set to: 0
 36484                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 36485   006336  0E31               	movlw	49
 36486   006338                     L23:
 36487   006338  65AF               	cpfsgt	_flashCounter& (0+255),b
 36488   00633A  0012               	return	
 36489   00633C  D7F1               	goto	u23500
 36490   00633E                     l1804:
 36491                           
 36492                           ; BSR set to: 0
 36493                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 36494   00633E  9E8A               	bcf	138,7,c	;volatile
 36495                           
 36496                           ; BSR set to: 0
 36497                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 36498   006340  0E63               	movlw	99
 36499   006342  D7FA               	goto	L23
 36500   006344                     l22312:
 36501                           
 36502                           ; BSR set to: 0
 36503   006344  51B1               	movf	_ledState& (0+255),w,b
 36504   006346  6F9F               	movwf	??_leds_poll& (0+255),b
 36505   006348  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 36506                           
 36507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36508                           ; Switch size 1, requested type "simple"
 36509                           ; Number of cases is 1, Range of values is 0 to 0
 36510                           ; switch strategies available:
 36511                           ; Name         Instructions Cycles
 36512                           ; simple_byte            4     3 (average)
 36513                           ;	Chosen strategy is simple_byte
 36514   00634A  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 36515   00634C  0A00               	xorlw	0	; case 0
 36516   00634E  A4D8               	btfss	status,2,c
 36517   006350  0012               	return	
 36518                           
 36519                           ; BSR set to: 0
 36520                           ; Switch size 1, requested type "simple"
 36521                           ; Number of cases is 10, Range of values is 0 to 9
 36522                           ; switch strategies available:
 36523                           ; Name         Instructions Cycles
 36524                           ; simple_byte           31    16 (average)
 36525                           ;	Chosen strategy is simple_byte
 36526   006352  519F               	movf	??_leds_poll& (0+255),w,b
 36527   006354  0A00               	xorlw	0	; case 0
 36528   006356  B4D8               	btfsc	status,2,c
 36529   006358  D79B               	goto	l1789
 36530   00635A  0A01               	xorlw	1	; case 1
 36531   00635C  B4D8               	btfsc	status,2,c
 36532   00635E  D794               	goto	l1787
 36533   006360  0A03               	xorlw	3	; case 2
 36534   006362  B4D8               	btfsc	status,2,c
 36535   006364  D797               	goto	l22272
 36536   006366  0A01               	xorlw	1	; case 3
 36537   006368  B4D8               	btfsc	status,2,c
 36538   00636A  D7A9               	goto	l22278
 36539   00636C  0A07               	xorlw	7	; case 4
 36540   00636E  B4D8               	btfsc	status,2,c
 36541   006370  D7B9               	goto	l22284
 36542   006372  0A01               	xorlw	1	; case 5
 36543   006374  B4D8               	btfsc	status,2,c
 36544   006376  D7D1               	goto	l1798
 36545   006378  0A03               	xorlw	3	; case 6
 36546   00637A  B4D8               	btfsc	status,2,c
 36547   00637C  D7C6               	goto	l1796
 36548   00637E  0A01               	xorlw	1	; case 7
 36549   006380  B4D8               	btfsc	status,2,c
 36550   006382  D7D8               	goto	l1802
 36551   006384  0A0F               	xorlw	15	; case 8
 36552   006386  B4D8               	btfsc	status,2,c
 36553   006388  D7D0               	goto	l1800
 36554   00638A  0A01               	xorlw	1	; case 9
 36555   00638C  A4D8               	btfss	status,2,c
 36556   00638E  0012               	return	
 36557   006390  D7D6               	goto	l1804
 36558   006392                     __end_of_leds_poll:
 36559                           	callstack 0
 36560                           
 36561 ;; *************** function _tickGet *****************
 36562 ;; Defined at:
 36563 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 36564 ;; Parameters:    Size  Location     Type
 36565 ;;		None
 36566 ;; Auto vars:     Size  Location     Type
 36567 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 36568 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 36569 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 36570 ;; Return value:  Size  Location     Type
 36571 ;;                  4   45[BANK0 ] unsigned long 
 36572 ;; Registers used:
 36573 ;;		wreg, status,2, status,0
 36574 ;; Tracked objects:
 36575 ;;		On entry : 0/0
 36576 ;;		On exit  : 0/0
 36577 ;;		Unchanged: 0/0
 36578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36579 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36580 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36582 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36583 ;;Total ram usage:       10 bytes
 36584 ;; Hardware stack levels used: 1
 36585 ;; Hardware stack levels required when called: 12
 36586 ;; This function calls:
 36587 ;;		Nothing
 36588 ;; This function is called by:
 36589 ;;		_setup
 36590 ;;		_loop
 36591 ;;		_doWait
 36592 ;;		_initServos
 36593 ;;		_pollServos
 36594 ;;		_mnsPowerUp
 36595 ;;		_mnsPoll
 36596 ;;		_leds_powerUp
 36597 ;;		_leds_poll
 36598 ;;		_pbDownTimer
 36599 ;;		_pbUpTimer
 36600 ;;		_poll
 36601 ;;		_canPowerUp
 36602 ;;		_handleSelfEnumeration
 36603 ;;		_processEnumeration
 36604 ;; This function uses a non-reentrant model
 36605 ;;
 36606                           
 36607                           	psect	text146
 36608   00B7CA                     __ptext146:
 36609                           	callstack 0
 36610   00B7CA                     _tickGet:
 36611                           	callstack 17
 36612                           
 36613                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 36614                           
 36615                           ; BSR set to: 0
 36616                           ;incstack = 0
 36617   00B7CA  0E00               	movlw	0
 36618   00B7CC  0100               	movlb	0	; () banked
 36619   00B7CE  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 36620                           
 36621                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 36622   00B7D0  0E00               	movlw	0
 36623   00B7D2  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 36624                           
 36625                           ; BSR set to: 0
 36626                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 36627   00B7D4  9AF2               	bcf	242,5,c	;volatile
 36628   00B7D6                     l20444:
 36629                           
 36630                           ; BSR set to: 0
 36631                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 36632   00B7D6  0E00               	movlw	0
 36633   00B7D8  B4F2               	btfsc	242,2,c	;volatile
 36634   00B7DA  0E01               	movlw	1
 36635   00B7DC  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 36636                           
 36637                           ; BSR set to: 0
 36638                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 36639   00B7DE  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 36640                           
 36641                           ; BSR set to: 0
 36642                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 36643   00B7E2  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 36644                           
 36645                           ; BSR set to: 0
 36646                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 36647   00B7E6  0E00               	movlw	0
 36648   00B7E8  B4F2               	btfsc	242,2,c	;volatile
 36649   00B7EA  0E01               	movlw	1
 36650   00B7EC  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 36651                           
 36652                           ; BSR set to: 0
 36653                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 36654   00B7EE  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 36655   00B7F0  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 36656   00B7F2  A4D8               	btfss	status,2,c
 36657   00B7F4  D7F0               	goto	l20444
 36658                           
 36659                           ; BSR set to: 0
 36660                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 36661   00B7F6  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 36662   00B7F8  B4D8               	btfsc	status,2,c
 36663   00B7FA  D005               	goto	l20464
 36664                           
 36665                           ; BSR set to: 0
 36666                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 36667   00B7FC  94F2               	bcf	242,2,c	;volatile
 36668                           
 36669                           ; BSR set to: 0
 36670                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 36671   00B7FE  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 36672                           
 36673                           ; BSR set to: 0
 36674                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 36675   00B800  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 36676   00B802  B4D8               	btfsc	status,2,c
 36677                           
 36678                           ; BSR set to: 0
 36679                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 36680   00B804  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 36681   00B806                     l20464:
 36682                           
 36683                           ; BSR set to: 0
 36684                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 36685   00B806  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 36686   00B808  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 36687                           
 36688                           ; BSR set to: 0
 36689                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 36690   00B80A  51C5               	movf	_timerExtension2& (0+255),w,b	;volatile
 36691   00B80C  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 36692                           
 36693                           ; BSR set to: 0
 36694                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 36695   00B80E  8AF2               	bsf	242,5,c	;volatile
 36696                           
 36697                           ; BSR set to: 0
 36698                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 36699   00B810  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 36700   00B814  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 36701   00B818  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 36702   00B81C  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 36703                           
 36704                           ; BSR set to: 0
 36705   00B820  0012               	return		;funcret
 36706   00B822                     __end_of_tickGet:
 36707                           	callstack 0
 36708                           
 36709 ;; *************** function ___lmul *****************
 36710 ;; Defined at:
 36711 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 36712 ;; Parameters:    Size  Location     Type
 36713 ;;  multiplier      4   49[BANK0 ] unsigned long 
 36714 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 36715 ;; Auto vars:     Size  Location     Type
 36716 ;;  product         4   57[BANK0 ] unsigned long 
 36717 ;; Return value:  Size  Location     Type
 36718 ;;                  4   49[BANK0 ] unsigned long 
 36719 ;; Registers used:
 36720 ;;		wreg, status,2, status,0
 36721 ;; Tracked objects:
 36722 ;;		On entry : 0/0
 36723 ;;		On exit  : 0/0
 36724 ;;		Unchanged: 0/0
 36725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36726 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36727 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36729 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36730 ;;Total ram usage:       12 bytes
 36731 ;; Hardware stack levels used: 1
 36732 ;; Hardware stack levels required when called: 12
 36733 ;; This function calls:
 36734 ;;		Nothing
 36735 ;; This function is called by:
 36736 ;;		_loop
 36737 ;;		_doWait
 36738 ;;		_pbDownTimer
 36739 ;;		_pbUpTimer
 36740 ;;		_poll
 36741 ;; This function uses a non-reentrant model
 36742 ;;
 36743                           
 36744                           	psect	text147
 36745   00B822                     __ptext147:
 36746                           	callstack 0
 36747   00B822                     ___lmul:
 36748                           	callstack 17
 36749                           
 36750                           ; BSR set to: 0
 36751                           ;incstack = 0
 36752   00B822  0E00               	movlw	0
 36753   00B824  0100               	movlb	0	; () banked
 36754   00B826  6F99               	movwf	___lmul@product& (0+255),b
 36755   00B828  0E00               	movlw	0
 36756   00B82A  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 36757   00B82C  0E00               	movlw	0
 36758   00B82E  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 36759   00B830  0E00               	movlw	0
 36760   00B832  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 36761   00B834                     l21364:
 36762                           
 36763                           ; BSR set to: 0
 36764   00B834  A191               	btfss	___lmul@multiplier& (0+255),0,b
 36765   00B836  D008               	goto	l21368
 36766                           
 36767                           ; BSR set to: 0
 36768   00B838  5195               	movf	___lmul@multiplicand& (0+255),w,b
 36769   00B83A  2799               	addwf	___lmul@product& (0+255),f,b
 36770   00B83C  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 36771   00B83E  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 36772   00B840  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 36773   00B842  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 36774   00B844  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 36775   00B846  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 36776   00B848                     l21368:
 36777                           
 36778                           ; BSR set to: 0
 36779   00B848  90D8               	bcf	status,0,c
 36780   00B84A  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 36781   00B84C  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 36782   00B84E  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 36783   00B850  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 36784                           
 36785                           ; BSR set to: 0
 36786   00B852  90D8               	bcf	status,0,c
 36787   00B854  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 36788   00B856  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 36789   00B858  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 36790   00B85A  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 36791   00B85C  5191               	movf	___lmul@multiplier& (0+255),w,b
 36792   00B85E  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 36793   00B860  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 36794   00B862  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 36795   00B864  A4D8               	btfss	status,2,c
 36796   00B866  D7E6               	goto	l21364
 36797                           
 36798                           ; BSR set to: 0
 36799   00B868  C099  F091         	movff	___lmul@product,?___lmul
 36800   00B86C  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 36801   00B870  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 36802   00B874  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 36803                           
 36804                           ; BSR set to: 0
 36805   00B878  0012               	return		;funcret
 36806   00B87A                     __end_of___lmul:
 36807                           	callstack 0
 36808                           
 36809 ;; *************** function ___lldiv *****************
 36810 ;; Defined at:
 36811 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 36812 ;; Parameters:    Size  Location     Type
 36813 ;;  dividend        4   55[BANK0 ] unsigned long 
 36814 ;;  divisor         4   59[BANK0 ] unsigned long 
 36815 ;; Auto vars:     Size  Location     Type
 36816 ;;  quotient        4   63[BANK0 ] unsigned long 
 36817 ;;  counter         1   67[BANK0 ] unsigned char 
 36818 ;; Return value:  Size  Location     Type
 36819 ;;                  4   55[BANK0 ] unsigned long 
 36820 ;; Registers used:
 36821 ;;		wreg, status,2, status,0
 36822 ;; Tracked objects:
 36823 ;;		On entry : 0/0
 36824 ;;		On exit  : 0/0
 36825 ;;		Unchanged: 0/0
 36826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36827 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36828 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36830 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36831 ;;Total ram usage:       13 bytes
 36832 ;; Hardware stack levels used: 1
 36833 ;; Hardware stack levels required when called: 12
 36834 ;; This function calls:
 36835 ;;		Nothing
 36836 ;; This function is called by:
 36837 ;;		_pbDownTimer
 36838 ;;		_pbUpTimer
 36839 ;; This function uses a non-reentrant model
 36840 ;;
 36841                           
 36842                           	psect	text148
 36843   00A942                     __ptext148:
 36844                           	callstack 0
 36845   00A942                     ___lldiv:
 36846                           	callstack 16
 36847                           
 36848                           ; BSR set to: 0
 36849                           ;incstack = 0
 36850   00A942  0E00               	movlw	0
 36851   00A944  0100               	movlb	0	; () banked
 36852   00A946  6F9F               	movwf	___lldiv@quotient& (0+255),b
 36853   00A948  0E00               	movlw	0
 36854   00A94A  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 36855   00A94C  0E00               	movlw	0
 36856   00A94E  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 36857   00A950  0E00               	movlw	0
 36858   00A952  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 36859                           
 36860                           ; BSR set to: 0
 36861   00A954  519B               	movf	___lldiv@divisor& (0+255),w,b
 36862   00A956  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 36863   00A958  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 36864   00A95A  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 36865   00A95C  B4D8               	btfsc	status,2,c
 36866   00A95E  D02A               	goto	l3142
 36867                           
 36868                           ; BSR set to: 0
 36869   00A960  0E01               	movlw	1
 36870   00A962  6FA3               	movwf	___lldiv@counter& (0+255),b
 36871   00A964  D006               	goto	l15562
 36872   00A966                     l15560:
 36873                           
 36874                           ; BSR set to: 0
 36875   00A966  90D8               	bcf	status,0,c
 36876   00A968  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 36877   00A96A  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 36878   00A96C  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 36879   00A96E  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 36880   00A970  2BA3               	incf	___lldiv@counter& (0+255),f,b
 36881   00A972                     l15562:
 36882                           
 36883                           ; BSR set to: 0
 36884   00A972  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 36885   00A974  D7F8               	goto	l15560
 36886   00A976                     u15130:
 36887                           
 36888                           ; BSR set to: 0
 36889   00A976  90D8               	bcf	status,0,c
 36890   00A978  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 36891   00A97A  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 36892   00A97C  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 36893   00A97E  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 36894                           
 36895                           ; BSR set to: 0
 36896   00A980  519B               	movf	___lldiv@divisor& (0+255),w,b
 36897   00A982  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 36898   00A984  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36899   00A986  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 36900   00A988  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36901   00A98A  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 36902   00A98C  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36903   00A98E  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 36904   00A990  A0D8               	btfss	status,0,c
 36905   00A992  D009               	goto	l15572
 36906                           
 36907                           ; BSR set to: 0
 36908   00A994  519B               	movf	___lldiv@divisor& (0+255),w,b
 36909   00A996  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 36910   00A998  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36911   00A99A  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 36912   00A99C  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36913   00A99E  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 36914   00A9A0  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36915   00A9A2  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 36916                           
 36917                           ; BSR set to: 0
 36918   00A9A4  819F               	bsf	___lldiv@quotient& (0+255),0,b
 36919   00A9A6                     l15572:
 36920                           
 36921                           ; BSR set to: 0
 36922   00A9A6  90D8               	bcf	status,0,c
 36923   00A9A8  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 36924   00A9AA  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 36925   00A9AC  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 36926   00A9AE  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 36927                           
 36928                           ; BSR set to: 0
 36929   00A9B0  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 36930   00A9B2  D7E1               	goto	u15130
 36931   00A9B4                     l3142:
 36932                           
 36933                           ; BSR set to: 0
 36934   00A9B4  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 36935   00A9B8  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 36936   00A9BC  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 36937   00A9C0  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 36938                           
 36939                           ; BSR set to: 0
 36940   00A9C4  0012               	return		;funcret
 36941   00A9C6                     __end_of___lldiv:
 36942                           	callstack 0
 36943                           
 36944 ;; *************** function _factoryReset *****************
 36945 ;; Defined at:
 36946 ;;		line 857 in file "../../VLCBlib_PIC/vlcb.c"
 36947 ;; Parameters:    Size  Location     Type
 36948 ;;		None
 36949 ;; Auto vars:     Size  Location     Type
 36950 ;;  i               1   56[BANK1 ] unsigned char 
 36951 ;; Return value:  Size  Location     Type
 36952 ;;                  1    wreg      void 
 36953 ;; Registers used:
 36954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36955 ;; Tracked objects:
 36956 ;;		On entry : 0/0
 36957 ;;		On exit  : 0/0
 36958 ;;		Unchanged: 0/0
 36959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36961 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36962 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36963 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36964 ;;Total ram usage:        5 bytes
 36965 ;; Hardware stack levels used: 1
 36966 ;; Hardware stack levels required when called: 26
 36967 ;; This function calls:
 36968 ;;		NULL
 36969 ;;		_APP_factoryReset
 36970 ;;		_canFactoryReset
 36971 ;;		_mnsFactoryReset
 36972 ;;		_nvFactoryReset
 36973 ;;		_teachFactoryReset
 36974 ;;		_writeNVM
 36975 ;; This function is called by:
 36976 ;;		_mnsProcessMessage
 36977 ;;		_checkPowerOnPb
 36978 ;;		_main
 36979 ;; This function uses a non-reentrant model
 36980 ;;
 36981                           
 36982                           	psect	text149
 36983   008758                     __ptext149:
 36984                           	callstack 0
 36985   008758                     _factoryReset:
 36986                           	callstack 2
 36987                           
 36988                           ;../../VLCBlib_PIC/vlcb.c: 858:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 860:     for (i
      +                          =0; i<9; i++) {
 36989                           
 36990                           ; BSR set to: 0
 36991                           ;incstack = 0
 36992   008758  0E00               	movlw	0
 36993   00875A  0101               	movlb	1	; () banked
 36994   00875C  6FF5               	movwf	factoryReset@i& (0+255),b
 36995   00875E                     l22098:
 36996                           
 36997                           ; BSR set to: 1
 36998                           ;../../VLCBlib_PIC/vlcb.c: 861:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 36999   00875E  51F5               	movf	factoryReset@i& (0+255),w,b
 37000   008760  0D02               	mullw	2
 37001   008762  0E69               	movlw	low _services
 37002   008764  24F3               	addwf	243,w,c
 37003   008766  6EF6               	movwf	tblptrl,c
 37004   008768  0EEE               	movlw	high _services
 37005   00876A  20F4               	addwfc	244,w,c
 37006   00876C  6EF7               	movwf	tblptrh,c
 37007   00876E                     	if	1	;There are 3 active tblptr bytes
 37008   00876E  6AF8               	clrf	tblptru,c
 37009   008770  0E00               	movlw	low (__mediumconst shr (0+16))
 37010   008772  22F8               	addwfc	tblptru,f,c
 37011   008774                     	endif
 37012   008774  0009               	tblrd		*+
 37013   008776  50F5               	movf	tablat,w,c
 37014   008778  0009               	tblrd		*+
 37015   00877A  10F5               	iorwf	tablat,w,c
 37016   00877C  B4D8               	btfsc	status,2,c
 37017   00877E  D04B               	goto	u23269
 37018                           
 37019                           ; BSR set to: 1
 37020   008780  51F5               	movf	factoryReset@i& (0+255),w,b
 37021   008782  0D02               	mullw	2
 37022   008784  0E69               	movlw	low _services
 37023   008786  24F3               	addwf	243,w,c
 37024   008788  6EF6               	movwf	tblptrl,c
 37025   00878A  0EEE               	movlw	high _services
 37026   00878C  20F4               	addwfc	244,w,c
 37027   00878E  6EF7               	movwf	tblptrh,c
 37028   008790                     	if	1	;There are 3 active tblptr bytes
 37029   008790  6AF8               	clrf	tblptru,c
 37030   008792  0E00               	movlw	low (__mediumconst shr (0+16))
 37031   008794  22F8               	addwfc	tblptru,f,c
 37032   008796                     	endif
 37033   008796  0009               	tblrd		*+
 37034   008798  CFF5 F1F1          	movff	tablat,??_factoryReset
 37035   00879C  0009               	tblrd		*+
 37036   00879E  CFF5 F1F2          	movff	tablat,??_factoryReset+1
 37037   0087A2  0E02               	movlw	2
 37038   0087A4  27F1               	addwf	??_factoryReset& (0+255),f,b
 37039   0087A6  0E00               	movlw	0
 37040   0087A8  23F2               	addwfc	(??_factoryReset+1)& (0+255),f,b
 37041   0087AA  C1F1  FFF6         	movff	??_factoryReset,tblptrl
 37042   0087AE  C1F2  FFF7         	movff	??_factoryReset+1,tblptrh
 37043   0087B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37044   0087B2  6AF8               	clrf	tblptru,c
 37045   0087B4                     	endif
 37046   0087B4                     	if	0	;tblptru may be non-zero
 37047   0087B4                     	endif
 37048   0087B4  0009               	tblrd		*+
 37049   0087B6  50F5               	movf	tablat,w,c
 37050   0087B8  0009               	tblrd		*+
 37051   0087BA  10F5               	iorwf	tablat,w,c
 37052   0087BC  B4D8               	btfsc	status,2,c
 37053   0087BE  D02B               	goto	u23269
 37054                           
 37055                           ; BSR set to: 1
 37056                           ;../../VLCBlib_PIC/vlcb.c: 862:             services[i]->factoryReset();
 37057   0087C0  51F5               	movf	factoryReset@i& (0+255),w,b
 37058   0087C2  0D02               	mullw	2
 37059   0087C4  0E69               	movlw	low _services
 37060   0087C6  24F3               	addwf	243,w,c
 37061   0087C8  6EF6               	movwf	tblptrl,c
 37062   0087CA  0EEE               	movlw	high _services
 37063   0087CC  20F4               	addwfc	244,w,c
 37064   0087CE  6EF7               	movwf	tblptrh,c
 37065   0087D0                     	if	1	;There are 3 active tblptr bytes
 37066   0087D0  6AF8               	clrf	tblptru,c
 37067   0087D2  0E00               	movlw	low (__mediumconst shr (0+16))
 37068   0087D4  22F8               	addwfc	tblptru,f,c
 37069   0087D6                     	endif
 37070   0087D6  0009               	tblrd		*+
 37071   0087D8  CFF5 F1F1          	movff	tablat,??_factoryReset
 37072   0087DC  0009               	tblrd		*+
 37073   0087DE  CFF5 F1F2          	movff	tablat,??_factoryReset+1
 37074   0087E2  0E02               	movlw	2
 37075   0087E4  27F1               	addwf	??_factoryReset& (0+255),f,b
 37076   0087E6  0E00               	movlw	0
 37077   0087E8  23F2               	addwfc	(??_factoryReset+1)& (0+255),f,b
 37078   0087EA  C1F1  FFF6         	movff	??_factoryReset,tblptrl
 37079   0087EE  C1F2  FFF7         	movff	??_factoryReset+1,tblptrh
 37080   0087F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37081   0087F2  6AF8               	clrf	tblptru,c
 37082   0087F4                     	endif
 37083   0087F4                     	if	0	;tblptru may be non-zero
 37084   0087F4                     	endif
 37085   0087F4  0009               	tblrd		*+
 37086   0087F6  CFF5 F1F3          	movff	tablat,??_factoryReset+2
 37087   0087FA  0009               	tblrd		*+
 37088   0087FC  CFF5 F1F4          	movff	tablat,??_factoryReset+3
 37089   008800  D801               	call	u23268
 37090   008802  D009               	goto	u23269
 37091   008804                     u23268:
 37092   008804  0005               	push	
 37093   008806  6EFA               	movwf	pclath,c
 37094   008808  51F3               	movf	(??_factoryReset+2)& (0+255),w,b
 37095   00880A  6EFD               	movwf	tosl,c
 37096   00880C  51F4               	movf	(??_factoryReset+3)& (0+255),w,b
 37097   00880E  6EFE               	movwf	tosh,c
 37098   008810  6AFF               	clrf	tosu,c
 37099   008812  50FA               	movf	pclath,w,c
 37100   008814  0012               	return		;indir
 37101   008816                     u23269:
 37102                           
 37103                           ;../../VLCBlib_PIC/vlcb.c: 864:     }
 37104   008816  0101               	movlb	1	; () banked
 37105   008818  2BF5               	incf	factoryReset@i& (0+255),f,b
 37106                           
 37107                           ; BSR set to: 1
 37108   00881A  0E08               	movlw	8
 37109   00881C  65F5               	cpfsgt	factoryReset@i& (0+255),b
 37110   00881E  D79F               	goto	l22098
 37111                           
 37112                           ; BSR set to: 1
 37113                           ;../../VLCBlib_PIC/vlcb.c: 866:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 37114   008820  0EFA               	movlw	250
 37115   008822  0100               	movlb	0	; () banked
 37116   008824  6FA4               	movwf	writeNVM@index& (0+255),b
 37117   008826  0E03               	movlw	3
 37118   008828  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37119   00882A  0E00               	movlw	0
 37120   00882C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37121   00882E  0E01               	movlw	1
 37122   008830  6FA7               	movwf	writeNVM@value& (0+255),b
 37123   008832  0E00               	movlw	0
 37124   008834  EC61  F05D         	call	_writeNVM
 37125                           
 37126                           ;../../VLCBlib_PIC/vlcb.c: 868:     APP_factoryReset();
 37127   008838  ECC0  F062         	call	_APP_factoryReset	;wreg free
 37128   00883C  0012               	return		;funcret
 37129   00883E                     __end_of_factoryReset:
 37130                           	callstack 0
 37131                           
 37132 ;; *************** function _canFactoryReset *****************
 37133 ;; Defined at:
 37134 ;;		line 204 in file "../../VLCBlib_PIC/can18_ecan.c"
 37135 ;; Parameters:    Size  Location     Type
 37136 ;;		None
 37137 ;; Auto vars:     Size  Location     Type
 37138 ;;		None
 37139 ;; Return value:  Size  Location     Type
 37140 ;;                  1    wreg      void 
 37141 ;; Registers used:
 37142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37143 ;; Tracked objects:
 37144 ;;		On entry : 0/0
 37145 ;;		On exit  : 0/0
 37146 ;;		Unchanged: 0/0
 37147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37152 ;;Total ram usage:        0 bytes
 37153 ;; Hardware stack levels used: 1
 37154 ;; Hardware stack levels required when called: 18
 37155 ;; This function calls:
 37156 ;;		_writeNVM
 37157 ;; This function is called by:
 37158 ;;		_factoryReset
 37159 ;; This function uses a non-reentrant model
 37160 ;;
 37161                           
 37162                           	psect	text150
 37163   00C68A                     __ptext150:
 37164                           	callstack 0
 37165   00C68A                     _canFactoryReset:
 37166                           	callstack 9
 37167                           
 37168                           ;../../VLCBlib_PIC/can18_ecan.c: 205:     canId = 0;
 37169                           
 37170                           ;incstack = 0
 37171   00C68A  0E00               	movlw	0
 37172   00C68C  0100               	movlb	0	; () banked
 37173   00C68E  6FB9               	movwf	_canId& (0+255),b
 37174                           
 37175                           ; BSR set to: 0
 37176                           ;../../VLCBlib_PIC/can18_ecan.c: 206:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 37177   00C690  0EFE               	movlw	254
 37178   00C692  6FA4               	movwf	writeNVM@index& (0+255),b
 37179   00C694  0E03               	movlw	3
 37180   00C696  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37181   00C698  0E00               	movlw	0
 37182   00C69A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37183   00C69C  C0B9  F0A7         	movff	_canId,writeNVM@value
 37184   00C6A0  0E00               	movlw	0
 37185   00C6A2  EC61  F05D         	call	_writeNVM
 37186   00C6A6  0012               	return		;funcret
 37187   00C6A8                     __end_of_canFactoryReset:
 37188                           	callstack 0
 37189                           
 37190 ;; *************** function _nvFactoryReset *****************
 37191 ;; Defined at:
 37192 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 37193 ;; Parameters:    Size  Location     Type
 37194 ;;		None
 37195 ;; Auto vars:     Size  Location     Type
 37196 ;;  i               1    4[BANK1 ] unsigned char 
 37197 ;; Return value:  Size  Location     Type
 37198 ;;                  1    wreg      void 
 37199 ;; Registers used:
 37200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37201 ;; Tracked objects:
 37202 ;;		On entry : 0/0
 37203 ;;		On exit  : 0/0
 37204 ;;		Unchanged: 0/0
 37205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37207 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37208 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37209 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37210 ;;Total ram usage:        3 bytes
 37211 ;; Hardware stack levels used: 1
 37212 ;; Hardware stack levels required when called: 18
 37213 ;; This function calls:
 37214 ;;		_APP_nvDefault
 37215 ;;		_writeNVM
 37216 ;; This function is called by:
 37217 ;;		_factoryReset
 37218 ;; This function uses a non-reentrant model
 37219 ;;
 37220                           
 37221                           	psect	text151
 37222   00BEE4                     __ptext151:
 37223                           	callstack 0
 37224   00BEE4                     _nvFactoryReset:
 37225                           	callstack 9
 37226                           
 37227                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= (15+7*16); i++) {
 37228                           
 37229                           ;incstack = 0
 37230   00BEE4  0E01               	movlw	1
 37231   00BEE6  0101               	movlb	1	; () banked
 37232   00BEE8  6FC1               	movwf	nvFactoryReset@i& (0+255),b
 37233   00BEEA                     l21160:
 37234                           
 37235                           ; BSR set to: 1
 37236                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 37237   00BEEA  0E80               	movlw	128
 37238   00BEEC  25C1               	addwf	nvFactoryReset@i& (0+255),w,b
 37239   00BEEE  6FBF               	movwf	??_nvFactoryReset& (0+255),b
 37240   00BEF0  6BC0               	clrf	(??_nvFactoryReset+1)& (0+255),b
 37241   00BEF2  0EFF               	movlw	255
 37242   00BEF4  23C0               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 37243   00BEF6  C1BF  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 37244   00BEFA  C1C0  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 37245   00BEFE  0100               	movlb	0	; () banked
 37246   00BF00  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37247   00BF02  0101               	movlb	1	; () banked
 37248   00BF04  51C1               	movf	nvFactoryReset@i& (0+255),w,b
 37249   00BF06  ECB2  F046         	call	_APP_nvDefault
 37250   00BF0A  0100               	movlb	0	; () banked
 37251   00BF0C  6FA7               	movwf	writeNVM@value& (0+255),b
 37252   00BF0E  0E01               	movlw	1
 37253   00BF10  EC61  F05D         	call	_writeNVM
 37254                           
 37255                           ;../../VLCBlib_PIC/nv.c: 130:     }
 37256   00BF14  0101               	movlb	1	; () banked
 37257   00BF16  2BC1               	incf	nvFactoryReset@i& (0+255),f,b
 37258                           
 37259                           ; BSR set to: 1
 37260   00BF18  0E7F               	movlw	127
 37261   00BF1A  65C1               	cpfsgt	nvFactoryReset@i& (0+255),b
 37262   00BF1C  D7E6               	goto	l21160
 37263   00BF1E  0012               	return	
 37264   00BF20                     __end_of_nvFactoryReset:
 37265                           	callstack 0
 37266                           
 37267 ;; *************** function _mnsFactoryReset *****************
 37268 ;; Defined at:
 37269 ;;		line 280 in file "../../VLCBlib_PIC/mns.c"
 37270 ;; Parameters:    Size  Location     Type
 37271 ;;		None
 37272 ;; Auto vars:     Size  Location     Type
 37273 ;;		None
 37274 ;; Return value:  Size  Location     Type
 37275 ;;                  1    wreg      void 
 37276 ;; Registers used:
 37277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37278 ;; Tracked objects:
 37279 ;;		On entry : 0/0
 37280 ;;		On exit  : 0/0
 37281 ;;		Unchanged: 0/0
 37282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37287 ;;Total ram usage:        0 bytes
 37288 ;; Hardware stack levels used: 1
 37289 ;; Hardware stack levels required when called: 18
 37290 ;; This function calls:
 37291 ;;		_writeNVM
 37292 ;; This function is called by:
 37293 ;;		_factoryReset
 37294 ;; This function uses a non-reentrant model
 37295 ;;
 37296                           
 37297                           	psect	text152
 37298   00ADAE                     __ptext152:
 37299                           	callstack 0
 37300   00ADAE                     _mnsFactoryReset:
 37301                           	callstack 9
 37302                           
 37303                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.hi = 0;
 37304                           
 37305                           ; BSR set to: 1
 37306                           ;incstack = 0
 37307   00ADAE  0E00               	movlw	0
 37308   00ADB0  0100               	movlb	0	; () banked
 37309   00ADB2  6FB6               	movwf	(_nn+1)& (0+255),b
 37310                           
 37311                           ;../../VLCBlib_PIC/mns.c: 282:     nn.bytes.lo = 0;
 37312   00ADB4  0E00               	movlw	0
 37313   00ADB6  6FB5               	movwf	_nn& (0+255),b
 37314                           
 37315                           ; BSR set to: 0
 37316                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 37317   00ADB8  0EFD               	movlw	253
 37318   00ADBA  6FA4               	movwf	writeNVM@index& (0+255),b
 37319   00ADBC  0E03               	movlw	3
 37320   00ADBE  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37321   00ADC0  0E00               	movlw	0
 37322   00ADC2  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37323   00ADC4  C0B6  F0A7         	movff	_nn+1,writeNVM@value
 37324   00ADC8  0E00               	movlw	0
 37325   00ADCA  EC61  F05D         	call	_writeNVM
 37326                           
 37327                           ;../../VLCBlib_PIC/mns.c: 284:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 37328   00ADCE  0EFC               	movlw	252
 37329   00ADD0  0100               	movlb	0	; () banked
 37330   00ADD2  6FA4               	movwf	writeNVM@index& (0+255),b
 37331   00ADD4  0E03               	movlw	3
 37332   00ADD6  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37333   00ADD8  0E00               	movlw	0
 37334   00ADDA  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37335   00ADDC  C0B5  F0A7         	movff	_nn,writeNVM@value
 37336   00ADE0  0E00               	movlw	0
 37337   00ADE2  EC61  F05D         	call	_writeNVM
 37338                           
 37339                           ;../../VLCBlib_PIC/mns.c: 286:     last_mode_state = mode_state = MODE_UNINITIALISED;
 37340   00ADE6  0100               	movlb	0	; () banked
 37341   00ADE8  69C4               	setf	_mode_state& (0+255),b
 37342   00ADEA  69C3               	setf	_last_mode_state& (0+255),b
 37343                           
 37344                           ; BSR set to: 0
 37345                           ;../../VLCBlib_PIC/mns.c: 287:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 37346   00ADEC  0EFB               	movlw	251
 37347   00ADEE  6FA4               	movwf	writeNVM@index& (0+255),b
 37348   00ADF0  0E03               	movlw	3
 37349   00ADF2  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37350   00ADF4  0E00               	movlw	0
 37351   00ADF6  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37352   00ADF8  C0C4  F0A7         	movff	_mode_state,writeNVM@value
 37353   00ADFC  0E00               	movlw	0
 37354   00ADFE  EC61  F05D         	call	_writeNVM
 37355                           
 37356                           ;../../VLCBlib_PIC/mns.c: 290:     last_mode_flags = mode_flags = 0;
 37357   00AE02  0E00               	movlw	0
 37358   00AE04  0101               	movlb	1	; () banked
 37359   00AE06  6F69               	movwf	_mode_flags& (0+255),b
 37360   00AE08  C169  F0C2         	movff	_mode_flags,_last_mode_flags
 37361                           
 37362                           ;../../VLCBlib_PIC/mns.c: 291:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 37363   00AE0C  0EF9               	movlw	249
 37364   00AE0E  0100               	movlb	0	; () banked
 37365   00AE10  6FA4               	movwf	writeNVM@index& (0+255),b
 37366   00AE12  0E03               	movlw	3
 37367   00AE14  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37368   00AE16  0E00               	movlw	0
 37369   00AE18  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37370   00AE1A  C169  F0A7         	movff	_mode_flags,writeNVM@value
 37371   00AE1E  0E00               	movlw	0
 37372   00AE20  EC61  F05D         	call	_writeNVM
 37373   00AE24  0012               	return		;funcret
 37374   00AE26                     __end_of_mnsFactoryReset:
 37375                           	callstack 0
 37376                           
 37377 ;; *************** function _teachFactoryReset *****************
 37378 ;; Defined at:
 37379 ;;		line 352 in file "../../VLCBlib_PIC/event_teach_large.c"
 37380 ;; Parameters:    Size  Location     Type
 37381 ;;		None
 37382 ;; Auto vars:     Size  Location     Type
 37383 ;;		None
 37384 ;; Return value:  Size  Location     Type
 37385 ;;                  1    wreg      void 
 37386 ;; Registers used:
 37387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37388 ;; Tracked objects:
 37389 ;;		On entry : 0/0
 37390 ;;		On exit  : 0/0
 37391 ;;		Unchanged: 0/0
 37392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37397 ;;Total ram usage:        0 bytes
 37398 ;; Hardware stack levels used: 1
 37399 ;; Hardware stack levels required when called: 19
 37400 ;; This function calls:
 37401 ;;		_clearAllEvents
 37402 ;; This function is called by:
 37403 ;;		_factoryReset
 37404 ;; This function uses a non-reentrant model
 37405 ;;
 37406                           
 37407                           	psect	text153
 37408   00C848                     __ptext153:
 37409                           	callstack 0
 37410   00C848                     _teachFactoryReset:
 37411                           	callstack 8
 37412                           
 37413                           ;../../VLCBlib_PIC/event_teach_large.c: 353:     clearAllEvents();
 37414                           
 37415                           ;incstack = 0
 37416   00C848  EC94  F05C         	call	_clearAllEvents	;wreg free
 37417   00C84C  0012               	return		;funcret
 37418   00C84E                     __end_of_teachFactoryReset:
 37419                           	callstack 0
 37420                           
 37421 ;; *************** function _clearAllEvents *****************
 37422 ;; Defined at:
 37423 ;;		line 558 in file "../../VLCBlib_PIC/event_teach_large.c"
 37424 ;; Parameters:    Size  Location     Type
 37425 ;;		None
 37426 ;; Auto vars:     Size  Location     Type
 37427 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 37428 ;; Return value:  Size  Location     Type
 37429 ;;                  1    wreg      void 
 37430 ;; Registers used:
 37431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37432 ;; Tracked objects:
 37433 ;;		On entry : 0/0
 37434 ;;		On exit  : 0/0
 37435 ;;		Unchanged: 0/0
 37436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37438 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37439 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37440 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37441 ;;Total ram usage:        5 bytes
 37442 ;; Hardware stack levels used: 1
 37443 ;; Hardware stack levels required when called: 18
 37444 ;; This function calls:
 37445 ;;		_flushFlashBlock
 37446 ;;		_rebuildHashtable
 37447 ;;		_writeNVM
 37448 ;; This function is called by:
 37449 ;;		_teachFactoryReset
 37450 ;;		_doNnclr
 37451 ;; This function uses a non-reentrant model
 37452 ;;
 37453                           
 37454                           	psect	text154
 37455   00B928                     __ptext154:
 37456                           	callstack 0
 37457   00B928                     _clearAllEvents:
 37458                           	callstack 9
 37459                           
 37460                           ;../../VLCBlib_PIC/event_teach_large.c: 559:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 560:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 37461                           
 37462                           ;incstack = 0
 37463   00B928  0E00               	movlw	0
 37464   00B92A  0101               	movlb	1	; () banked
 37465   00B92C  6FCA               	movwf	clearAllEvents@tableIndex& (0+255),b
 37466   00B92E                     l20326:
 37467                           
 37468                           ; BSR set to: 1
 37469                           ;../../VLCBlib_PIC/event_teach_large.c: 562:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex + 0, 0xff);
 37470   00B92E  51CA               	movf	clearAllEvents@tableIndex& (0+255),w,b
 37471   00B930  6FC6               	movwf	??_clearAllEvents& (0+255),b
 37472   00B932  6BC7               	clrf	(??_clearAllEvents+1)& (0+255),b
 37473   00B934  3BC6               	swapf	??_clearAllEvents& (0+255),f,b
 37474   00B936  3BC7               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 37475   00B938  0EF0               	movlw	240
 37476   00B93A  17C7               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 37477   00B93C  51C6               	movf	??_clearAllEvents& (0+255),w,b
 37478   00B93E  0B0F               	andlw	15
 37479   00B940  13C7               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 37480   00B942  0EF0               	movlw	240
 37481   00B944  17C6               	andwf	??_clearAllEvents& (0+255),f,b
 37482   00B946  0E80               	movlw	128
 37483   00B948  25C6               	addwf	??_clearAllEvents& (0+255),w,b
 37484   00B94A  6FC8               	movwf	(??_clearAllEvents+2)& (0+255),b
 37485   00B94C  0EEF               	movlw	239
 37486   00B94E  21C7               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 37487   00B950  6FC9               	movwf	(??_clearAllEvents+3)& (0+255),b
 37488   00B952  C1C8  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 37489   00B956  C1C9  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 37490   00B95A  0100               	movlb	0	; () banked
 37491   00B95C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37492   00B95E  0EFF               	movlw	255
 37493   00B960  6FA7               	movwf	writeNVM@value& (0+255),b
 37494   00B962  0E01               	movlw	1
 37495   00B964  EC61  F05D         	call	_writeNVM
 37496                           
 37497                           ;../../VLCBlib_PIC/event_teach_large.c: 563:     }
 37498   00B968  0101               	movlb	1	; () banked
 37499   00B96A  2BCA               	incf	clearAllEvents@tableIndex& (0+255),f,b
 37500                           
 37501                           ; BSR set to: 1
 37502   00B96C  29CA               	incf	clearAllEvents@tableIndex& (0+255),w,b
 37503   00B96E  A4D8               	btfss	status,2,c
 37504   00B970  D7DE               	goto	l20326
 37505                           
 37506                           ; BSR set to: 1
 37507                           ;../../VLCBlib_PIC/event_teach_large.c: 564:     flushFlashBlock();
 37508   00B972  EC5E  F054         	call	_flushFlashBlock	;wreg free
 37509                           
 37510                           ;../../VLCBlib_PIC/event_teach_large.c: 566:     rebuildHashtable();
 37511   00B976  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 37512   00B97A  0012               	return		;funcret
 37513   00B97C                     __end_of_clearAllEvents:
 37514                           	callstack 0
 37515                           
 37516 ;; *************** function _APP_nvDefault *****************
 37517 ;; Defined at:
 37518 ;;		line 73 in file "../universalNv.c"
 37519 ;; Parameters:    Size  Location     Type
 37520 ;;  index           1    wreg     unsigned char 
 37521 ;; Auto vars:     Size  Location     Type
 37522 ;;  index           1   67[BANK0 ] unsigned char 
 37523 ;; Return value:  Size  Location     Type
 37524 ;;                  1    wreg      unsigned char 
 37525 ;; Registers used:
 37526 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37527 ;; Tracked objects:
 37528 ;;		On entry : 0/0
 37529 ;;		On exit  : 0/0
 37530 ;;		Unchanged: 0/0
 37531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37535 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37536 ;;Total ram usage:        5 bytes
 37537 ;; Hardware stack levels used: 1
 37538 ;; Hardware stack levels required when called: 13
 37539 ;; This function calls:
 37540 ;;		___awdiv
 37541 ;;		___awmod
 37542 ;;		___wmul
 37543 ;; This function is called by:
 37544 ;;		_nvFactoryReset
 37545 ;; This function uses a non-reentrant model
 37546 ;;
 37547                           
 37548                           	psect	text155
 37549   008D64                     __ptext155:
 37550                           	callstack 0
 37551   008D64                     _APP_nvDefault:
 37552                           	callstack 13
 37553                           
 37554                           ;incstack = 0
 37555                           ;APP_nvDefault@index stored from wreg
 37556   008D64  0100               	movlb	0	; () banked
 37557   008D66  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 37558                           
 37559                           ;../universalNv.c: 74:     if (index < 16) {
 37560   008D68  0E10               	movlw	16
 37561   008D6A  0100               	movlb	0	; () banked
 37562   008D6C  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 37563   008D6E  D02A               	goto	l20154
 37564   008D70  D00C               	goto	l20152
 37565   008D72                     l20118:
 37566                           
 37567                           ; BSR set to: 0
 37568                           ;../universalNv.c: 78:                 return 0;
 37569   008D72  0E00               	movlw	0
 37570   008D74  0012               	return	
 37571   008D76                     l20126:
 37572                           
 37573                           ; BSR set to: 0
 37574                           ;../universalNv.c: 82:                 return 234;
 37575   008D76  0EEA               	movlw	234
 37576   008D78  0012               	return	
 37577   008D7A                     l20130:
 37578                           
 37579                           ; BSR set to: 0
 37580                           ;../universalNv.c: 84:                 return 0x33;
 37581   008D7A  0E33               	movlw	51
 37582   008D7C  0012               	return	
 37583   008D7E                     l20134:
 37584                           
 37585                           ; BSR set to: 0
 37586                           ;../universalNv.c: 86:                 return 2;
 37587   008D7E  0E02               	movlw	2
 37588   008D80  0012               	return	
 37589   008D82                     l20138:
 37590                           
 37591                           ; BSR set to: 0
 37592                           ;../universalNv.c: 90:                 return 0xFF;
 37593   008D82  0EFF               	movlw	255
 37594   008D84  0012               	return	
 37595   008D86                     l20142:
 37596                           
 37597                           ; BSR set to: 0
 37598                           ;../universalNv.c: 92:                 return 20;
 37599   008D86  0E14               	movlw	20
 37600   008D88  0012               	return	
 37601   008D8A                     l20152:
 37602                           
 37603                           ; BSR set to: 0
 37604   008D8A  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 37605                           
 37606                           ; Switch size 1, requested type "simple"
 37607                           ; Number of cases is 9, Range of values is 1 to 9
 37608                           ; switch strategies available:
 37609                           ; Name         Instructions Cycles
 37610                           ; simple_byte           28    15 (average)
 37611                           ;	Chosen strategy is simple_byte
 37612   008D8C  0A01               	xorlw	1	; case 1
 37613   008D8E  B4D8               	btfsc	status,2,c
 37614   008D90  D7F0               	goto	l20118
 37615   008D92  0A03               	xorlw	3	; case 2
 37616   008D94  B4D8               	btfsc	status,2,c
 37617   008D96  D7ED               	goto	l20118
 37618   008D98  0A01               	xorlw	1	; case 3
 37619   008D9A  B4D8               	btfsc	status,2,c
 37620   008D9C  D7EC               	goto	l20126
 37621   008D9E  0A07               	xorlw	7	; case 4
 37622   008DA0  B4D8               	btfsc	status,2,c
 37623   008DA2  D7EB               	goto	l20130
 37624   008DA4  0A01               	xorlw	1	; case 5
 37625   008DA6  B4D8               	btfsc	status,2,c
 37626   008DA8  D7EA               	goto	l20134
 37627   008DAA  0A03               	xorlw	3	; case 6
 37628   008DAC  B4D8               	btfsc	status,2,c
 37629   008DAE  D7E9               	goto	l20138
 37630   008DB0  0A01               	xorlw	1	; case 7
 37631   008DB2  B4D8               	btfsc	status,2,c
 37632   008DB4  D7E6               	goto	l20138
 37633   008DB6  0A0F               	xorlw	15	; case 8
 37634   008DB8  B4D8               	btfsc	status,2,c
 37635   008DBA  D7E3               	goto	l20138
 37636   008DBC  0A01               	xorlw	1	; case 9
 37637   008DBE  B4D8               	btfsc	status,2,c
 37638   008DC0  D7E2               	goto	l20142
 37639   008DC2  D7D7               	goto	l20118
 37640   008DC4                     l20154:
 37641                           
 37642                           ; BSR set to: 0
 37643                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 37644   008DC4  0EF0               	movlw	240
 37645   008DC6  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37646   008DC8  6F97               	movwf	___awdiv@dividend& (0+255),b
 37647   008DCA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 37648   008DCC  0EFF               	movlw	255
 37649   008DCE  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 37650   008DD0  0E00               	movlw	0
 37651   008DD2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 37652   008DD4  0E07               	movlw	7
 37653   008DD6  6F99               	movwf	___awdiv@divisor& (0+255),b
 37654   008DD8  EC1B  F054         	call	___awdiv	;wreg free
 37655   008DDC  0E00               	movlw	0
 37656   008DDE  0100               	movlb	0	; () banked
 37657   008DE0  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 37658   008DE2  0E00               	movlw	0
 37659   008DE4  6F91               	movwf	___wmul@multiplier& (0+255),b
 37660   008DE6  0E00               	movlw	0
 37661   008DE8  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 37662   008DEA  0E07               	movlw	7
 37663   008DEC  6F93               	movwf	___wmul@multiplicand& (0+255),b
 37664   008DEE  EC50  F062         	call	___wmul	;wreg free
 37665   008DF2  0E8B               	movlw	low _channelDefaultNVs
 37666   008DF4  0100               	movlb	0	; () banked
 37667   008DF6  2591               	addwf	?___wmul& (0+255),w,b
 37668   008DF8  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 37669   008DFA  0EEE               	movlw	high _channelDefaultNVs
 37670   008DFC  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 37671   008DFE  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 37672   008E00  0EF0               	movlw	240
 37673   008E02  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37674   008E04  6F8D               	movwf	___awmod@dividend& (0+255),b
 37675   008E06  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 37676   008E08  0EFF               	movlw	255
 37677   008E0A  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 37678   008E0C  0E00               	movlw	0
 37679   008E0E  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 37680   008E10  0E07               	movlw	7
 37681   008E12  6F8F               	movwf	___awmod@divisor& (0+255),b
 37682   008E14  EC30  F058         	call	___awmod	;wreg free
 37683   008E18  0100               	movlb	0	; () banked
 37684   008E1A  518D               	movf	?___awmod& (0+255),w,b
 37685   008E1C  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 37686   008E1E  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 37687   008E20  518E               	movf	(?___awmod+1)& (0+255),w,b
 37688   008E22  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 37689   008E24  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 37690   008E26  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 37691   008E2A  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 37692   008E2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37693   008E2E  6AF8               	clrf	tblptru,c
 37694   008E30                     	endif
 37695   008E30                     	if	0	;tblptru may be non-zero
 37696   008E30                     	endif
 37697   008E30  0008               	tblrd		*
 37698   008E32  50F5               	movf	tablat,w,c
 37699                           
 37700                           ; BSR set to: 0
 37701   008E34  0012               	return		;funcret
 37702   008E36                     __end_of_APP_nvDefault:
 37703                           	callstack 0
 37704                           
 37705 ;; *************** function ___wmul *****************
 37706 ;; Defined at:
 37707 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 37708 ;; Parameters:    Size  Location     Type
 37709 ;;  multiplier      2   49[BANK0 ] unsigned int 
 37710 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 37711 ;; Auto vars:     Size  Location     Type
 37712 ;;  product         2   53[BANK0 ] unsigned int 
 37713 ;; Return value:  Size  Location     Type
 37714 ;;                  2   49[BANK0 ] unsigned int 
 37715 ;; Registers used:
 37716 ;;		wreg, status,2, status,0, prodl, prodh
 37717 ;; Tracked objects:
 37718 ;;		On entry : 0/0
 37719 ;;		On exit  : 0/0
 37720 ;;		Unchanged: 0/0
 37721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37725 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37726 ;;Total ram usage:        6 bytes
 37727 ;; Hardware stack levels used: 1
 37728 ;; Hardware stack levels required when called: 12
 37729 ;; This function calls:
 37730 ;;		Nothing
 37731 ;; This function is called by:
 37732 ;;		_APP_nvDefault
 37733 ;;		_bounceDown
 37734 ;; This function uses a non-reentrant model
 37735 ;;
 37736                           
 37737                           	psect	text156
 37738   00C4A0                     __ptext156:
 37739                           	callstack 0
 37740   00C4A0                     ___wmul:
 37741                           	callstack 13
 37742                           
 37743                           ; BSR set to: 0
 37744                           ;incstack = 0
 37745   00C4A0  0100               	movlb	0	; () banked
 37746   00C4A2  5191               	movf	___wmul@multiplier& (0+255),w,b
 37747   00C4A4  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37748   00C4A6  CFF3 F095          	movff	prodl,___wmul@product
 37749   00C4AA  CFF4 F096          	movff	prodh,___wmul@product+1
 37750   00C4AE  5191               	movf	___wmul@multiplier& (0+255),w,b
 37751   00C4B0  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 37752   00C4B2  50F3               	movf	243,w,c
 37753   00C4B4  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37754   00C4B6  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 37755   00C4B8  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37756   00C4BA  50F3               	movf	243,w,c
 37757   00C4BC  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37758                           
 37759                           ; BSR set to: 0
 37760   00C4BE  C095  F091         	movff	___wmul@product,?___wmul
 37761   00C4C2  C096  F092         	movff	___wmul@product+1,?___wmul+1
 37762                           
 37763                           ; BSR set to: 0
 37764   00C4C6  0012               	return		;funcret
 37765   00C4C8                     __end_of___wmul:
 37766                           	callstack 0
 37767                           
 37768 ;; *************** function ___awmod *****************
 37769 ;; Defined at:
 37770 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 37771 ;; Parameters:    Size  Location     Type
 37772 ;;  dividend        2   45[BANK0 ] int 
 37773 ;;  divisor         2   47[BANK0 ] int 
 37774 ;; Auto vars:     Size  Location     Type
 37775 ;;  sign            1   50[BANK0 ] unsigned char 
 37776 ;;  counter         1   49[BANK0 ] unsigned char 
 37777 ;; Return value:  Size  Location     Type
 37778 ;;                  2   45[BANK0 ] int 
 37779 ;; Registers used:
 37780 ;;		wreg, status,2, status,0
 37781 ;; Tracked objects:
 37782 ;;		On entry : 0/0
 37783 ;;		On exit  : 0/0
 37784 ;;		Unchanged: 0/0
 37785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37789 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37790 ;;Total ram usage:        6 bytes
 37791 ;; Hardware stack levels used: 1
 37792 ;; Hardware stack levels required when called: 12
 37793 ;; This function calls:
 37794 ;;		Nothing
 37795 ;; This function is called by:
 37796 ;;		_consumer2QProcessMessage
 37797 ;;		_processActions
 37798 ;;		_APP_nvDefault
 37799 ;;		_APP_nvValueChanged
 37800 ;;		_APP_nvValidate
 37801 ;; This function uses a non-reentrant model
 37802 ;;
 37803                           
 37804                           	psect	text157
 37805   00B060                     __ptext157:
 37806                           	callstack 0
 37807   00B060                     ___awmod:
 37808                           	callstack 14
 37809                           
 37810                           ; BSR set to: 0
 37811                           ;incstack = 0
 37812   00B060  0E00               	movlw	0
 37813   00B062  0100               	movlb	0	; () banked
 37814   00B064  6F92               	movwf	___awmod@sign& (0+255),b
 37815                           
 37816                           ; BSR set to: 0
 37817   00B066  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 37818   00B068  D006               	goto	l20020
 37819                           
 37820                           ; BSR set to: 0
 37821   00B06A  6D8D               	negf	___awmod@dividend& (0+255),b
 37822   00B06C  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37823   00B06E  B0D8               	btfsc	status,0,c
 37824   00B070  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37825                           
 37826                           ; BSR set to: 0
 37827   00B072  0E01               	movlw	1
 37828   00B074  6F92               	movwf	___awmod@sign& (0+255),b
 37829   00B076                     l20020:
 37830                           
 37831                           ; BSR set to: 0
 37832   00B076  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37833   00B078  D004               	goto	l20024
 37834                           
 37835                           ; BSR set to: 0
 37836   00B07A  6D8F               	negf	___awmod@divisor& (0+255),b
 37837   00B07C  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 37838   00B07E  B0D8               	btfsc	status,0,c
 37839   00B080  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 37840   00B082                     l20024:
 37841                           
 37842                           ; BSR set to: 0
 37843   00B082  518F               	movf	___awmod@divisor& (0+255),w,b
 37844   00B084  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 37845   00B086  B4D8               	btfsc	status,2,c
 37846   00B088  D018               	goto	l20040
 37847                           
 37848                           ; BSR set to: 0
 37849   00B08A  0E01               	movlw	1
 37850   00B08C  6F91               	movwf	___awmod@counter& (0+255),b
 37851   00B08E  D004               	goto	l20030
 37852   00B090                     l20028:
 37853                           
 37854                           ; BSR set to: 0
 37855   00B090  90D8               	bcf	status,0,c
 37856   00B092  378F               	rlcf	___awmod@divisor& (0+255),f,b
 37857   00B094  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 37858   00B096  2B91               	incf	___awmod@counter& (0+255),f,b
 37859   00B098                     l20030:
 37860                           
 37861                           ; BSR set to: 0
 37862   00B098  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37863   00B09A  D7FA               	goto	l20028
 37864   00B09C                     u20200:
 37865                           
 37866                           ; BSR set to: 0
 37867   00B09C  518F               	movf	___awmod@divisor& (0+255),w,b
 37868   00B09E  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 37869   00B0A0  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37870   00B0A2  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 37871   00B0A4  A0D8               	btfss	status,0,c
 37872   00B0A6  D004               	goto	l20036
 37873                           
 37874                           ; BSR set to: 0
 37875   00B0A8  518F               	movf	___awmod@divisor& (0+255),w,b
 37876   00B0AA  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 37877   00B0AC  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37878   00B0AE  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 37879   00B0B0                     l20036:
 37880                           
 37881                           ; BSR set to: 0
 37882   00B0B0  90D8               	bcf	status,0,c
 37883   00B0B2  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 37884   00B0B4  338F               	rrcf	___awmod@divisor& (0+255),f,b
 37885                           
 37886                           ; BSR set to: 0
 37887   00B0B6  2F91               	decfsz	___awmod@counter& (0+255),f,b
 37888   00B0B8  D7F1               	goto	u20200
 37889   00B0BA                     l20040:
 37890                           
 37891                           ; BSR set to: 0
 37892   00B0BA  5192               	movf	___awmod@sign& (0+255),w,b
 37893   00B0BC  B4D8               	btfsc	status,2,c
 37894   00B0BE  D004               	goto	l20044
 37895                           
 37896                           ; BSR set to: 0
 37897   00B0C0  6D8D               	negf	___awmod@dividend& (0+255),b
 37898   00B0C2  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37899   00B0C4  B0D8               	btfsc	status,0,c
 37900   00B0C6  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37901   00B0C8                     l20044:
 37902                           
 37903                           ; BSR set to: 0
 37904   00B0C8  C08D  F08D         	movff	___awmod@dividend,?___awmod
 37905   00B0CC  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 37906                           
 37907                           ; BSR set to: 0
 37908   00B0D0  0012               	return		;funcret
 37909   00B0D2                     __end_of___awmod:
 37910                           	callstack 0
 37911                           
 37912 ;; *************** function ___awdiv *****************
 37913 ;; Defined at:
 37914 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 37915 ;; Parameters:    Size  Location     Type
 37916 ;;  dividend        2   55[BANK0 ] int 
 37917 ;;  divisor         2   57[BANK0 ] int 
 37918 ;; Auto vars:     Size  Location     Type
 37919 ;;  quotient        2   61[BANK0 ] int 
 37920 ;;  sign            1   60[BANK0 ] unsigned char 
 37921 ;;  counter         1   59[BANK0 ] unsigned char 
 37922 ;; Return value:  Size  Location     Type
 37923 ;;                  2   55[BANK0 ] int 
 37924 ;; Registers used:
 37925 ;;		wreg, status,2, status,0
 37926 ;; Tracked objects:
 37927 ;;		On entry : 0/0
 37928 ;;		On exit  : 0/0
 37929 ;;		Unchanged: 0/0
 37930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37932 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37934 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37935 ;;Total ram usage:        8 bytes
 37936 ;; Hardware stack levels used: 1
 37937 ;; Hardware stack levels required when called: 12
 37938 ;; This function calls:
 37939 ;;		Nothing
 37940 ;; This function is called by:
 37941 ;;		_APP_GetEventState
 37942 ;;		_consumer2QProcessMessage
 37943 ;;		_processActions
 37944 ;;		_sodTRCallback
 37945 ;;		_APP_nvDefault
 37946 ;;		_APP_nvValueChanged
 37947 ;;		_APP_nvValidate
 37948 ;;		_pollServos
 37949 ;;		_bounceDown
 37950 ;;		_bounceUp
 37951 ;;		_leds_poll
 37952 ;; This function uses a non-reentrant model
 37953 ;;
 37954                           
 37955                           	psect	text158
 37956   00A836                     __ptext158:
 37957                           	callstack 0
 37958   00A836                     ___awdiv:
 37959                           	callstack 15
 37960                           
 37961                           ; BSR set to: 0
 37962                           ;incstack = 0
 37963   00A836  0E00               	movlw	0
 37964   00A838  0100               	movlb	0	; () banked
 37965   00A83A  6F9C               	movwf	___awdiv@sign& (0+255),b
 37966                           
 37967                           ; BSR set to: 0
 37968   00A83C  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 37969   00A83E  D006               	goto	l19976
 37970                           
 37971                           ; BSR set to: 0
 37972   00A840  6D99               	negf	___awdiv@divisor& (0+255),b
 37973   00A842  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 37974   00A844  B0D8               	btfsc	status,0,c
 37975   00A846  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 37976                           
 37977                           ; BSR set to: 0
 37978   00A848  0E01               	movlw	1
 37979   00A84A  6F9C               	movwf	___awdiv@sign& (0+255),b
 37980   00A84C                     l19976:
 37981                           
 37982                           ; BSR set to: 0
 37983   00A84C  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 37984   00A84E  D006               	goto	l19982
 37985                           
 37986                           ; BSR set to: 0
 37987   00A850  6D97               	negf	___awdiv@dividend& (0+255),b
 37988   00A852  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 37989   00A854  B0D8               	btfsc	status,0,c
 37990   00A856  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 37991                           
 37992                           ; BSR set to: 0
 37993   00A858  0E01               	movlw	1
 37994   00A85A  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 37995   00A85C                     l19982:
 37996                           
 37997                           ; BSR set to: 0
 37998   00A85C  0E00               	movlw	0
 37999   00A85E  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 38000   00A860  0E00               	movlw	0
 38001   00A862  6F9D               	movwf	___awdiv@quotient& (0+255),b
 38002                           
 38003                           ; BSR set to: 0
 38004   00A864  5199               	movf	___awdiv@divisor& (0+255),w,b
 38005   00A866  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 38006   00A868  B4D8               	btfsc	status,2,c
 38007   00A86A  D01C               	goto	l20004
 38008                           
 38009                           ; BSR set to: 0
 38010   00A86C  0E01               	movlw	1
 38011   00A86E  6F9B               	movwf	___awdiv@counter& (0+255),b
 38012   00A870  D004               	goto	l19990
 38013   00A872                     l19988:
 38014                           
 38015                           ; BSR set to: 0
 38016   00A872  90D8               	bcf	status,0,c
 38017   00A874  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 38018   00A876  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 38019   00A878  2B9B               	incf	___awdiv@counter& (0+255),f,b
 38020   00A87A                     l19990:
 38021                           
 38022                           ; BSR set to: 0
 38023   00A87A  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 38024   00A87C  D7FA               	goto	l19988
 38025   00A87E                     u20140:
 38026                           
 38027                           ; BSR set to: 0
 38028   00A87E  90D8               	bcf	status,0,c
 38029   00A880  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 38030   00A882  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 38031                           
 38032                           ; BSR set to: 0
 38033   00A884  5199               	movf	___awdiv@divisor& (0+255),w,b
 38034   00A886  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 38035   00A888  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38036   00A88A  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 38037   00A88C  A0D8               	btfss	status,0,c
 38038   00A88E  D005               	goto	l20000
 38039                           
 38040                           ; BSR set to: 0
 38041   00A890  5199               	movf	___awdiv@divisor& (0+255),w,b
 38042   00A892  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 38043   00A894  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38044   00A896  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 38045                           
 38046                           ; BSR set to: 0
 38047   00A898  819D               	bsf	___awdiv@quotient& (0+255),0,b
 38048   00A89A                     l20000:
 38049                           
 38050                           ; BSR set to: 0
 38051   00A89A  90D8               	bcf	status,0,c
 38052   00A89C  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 38053   00A89E  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 38054                           
 38055                           ; BSR set to: 0
 38056   00A8A0  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 38057   00A8A2  D7ED               	goto	u20140
 38058   00A8A4                     l20004:
 38059                           
 38060                           ; BSR set to: 0
 38061   00A8A4  519C               	movf	___awdiv@sign& (0+255),w,b
 38062   00A8A6  B4D8               	btfsc	status,2,c
 38063   00A8A8  D004               	goto	l20008
 38064                           
 38065                           ; BSR set to: 0
 38066   00A8AA  6D9D               	negf	___awdiv@quotient& (0+255),b
 38067   00A8AC  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 38068   00A8AE  B0D8               	btfsc	status,0,c
 38069   00A8B0  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 38070   00A8B2                     l20008:
 38071                           
 38072                           ; BSR set to: 0
 38073   00A8B2  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 38074   00A8B6  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 38075                           
 38076                           ; BSR set to: 0
 38077   00A8BA  0012               	return		;funcret
 38078   00A8BC                     __end_of___awdiv:
 38079                           	callstack 0
 38080                           
 38081 ;; *************** function _APP_factoryReset *****************
 38082 ;; Defined at:
 38083 ;;		line 214 in file "../main.c"
 38084 ;; Parameters:    Size  Location     Type
 38085 ;;		None
 38086 ;; Auto vars:     Size  Location     Type
 38087 ;;  io              1   51[BANK1 ] unsigned char 
 38088 ;; Return value:  Size  Location     Type
 38089 ;;                  1    wreg      void 
 38090 ;; Registers used:
 38091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38092 ;; Tracked objects:
 38093 ;;		On entry : 0/0
 38094 ;;		On exit  : 0/0
 38095 ;;		Unchanged: 0/0
 38096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38098 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38100 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38101 ;;Total ram usage:        1 bytes
 38102 ;; Hardware stack levels used: 1
 38103 ;; Hardware stack levels required when called: 25
 38104 ;; This function calls:
 38105 ;;		_factoryResetGlobalEvents
 38106 ;;		_flushFlashBlock
 38107 ;;		_setType
 38108 ;; This function is called by:
 38109 ;;		_factoryReset
 38110 ;; This function uses a non-reentrant model
 38111 ;;
 38112                           
 38113                           	psect	text159
 38114   00C580                     __ptext159:
 38115                           	callstack 0
 38116   00C580                     _APP_factoryReset:
 38117                           	callstack 2
 38118                           
 38119                           ;../main.c: 215:     uint8_t io;;../main.c: 217:     factoryResetGlobalEvents();
 38120                           
 38121                           ; BSR set to: 0
 38122                           ;incstack = 0
 38123   00C580  EC2B  F064         	call	_factoryResetGlobalEvents	;wreg free
 38124                           
 38125                           ;../main.c: 219:     for (io=0; io<16; io++) {
 38126   00C584  0E00               	movlw	0
 38127   00C586  0101               	movlb	1	; () banked
 38128   00C588  6FF0               	movwf	APP_factoryReset@io& (0+255),b
 38129   00C58A                     l20426:
 38130                           
 38131                           ; BSR set to: 1
 38132                           
 38133                           ; BSR set to: 1
 38134                           
 38135                           ; BSR set to: 1
 38136   00C58A  0E00               	movlw	0
 38137   00C58C  6FED               	movwf	setType@type& (0+255),b
 38138   00C58E  51F0               	movf	APP_factoryReset@io& (0+255),w,b
 38139   00C590  EC0D  F05A         	call	_setType
 38140                           
 38141                           ;../main.c: 221:     }
 38142   00C594  0101               	movlb	1	; () banked
 38143   00C596  2BF0               	incf	APP_factoryReset@io& (0+255),f,b
 38144                           
 38145                           ; BSR set to: 1
 38146   00C598  0E0F               	movlw	15
 38147   00C59A  65F0               	cpfsgt	APP_factoryReset@io& (0+255),b
 38148   00C59C  D7F6               	goto	l20426
 38149                           
 38150                           ; BSR set to: 1
 38151                           ;../main.c: 222:     flushFlashBlock();
 38152   00C59E  EC5E  F054         	call	_flushFlashBlock	;wreg free
 38153   00C5A2  0012               	return		;funcret
 38154   00C5A4                     __end_of_APP_factoryReset:
 38155                           	callstack 0
 38156                           
 38157 ;; *************** function _setType *****************
 38158 ;; Defined at:
 38159 ;;		line 528 in file "../main.c"
 38160 ;; Parameters:    Size  Location     Type
 38161 ;;  io              1    wreg     unsigned char 
 38162 ;;  type            1   48[BANK1 ] unsigned char 
 38163 ;; Auto vars:     Size  Location     Type
 38164 ;;  io              1   50[BANK1 ] unsigned char 
 38165 ;;  index           1   49[BANK1 ] unsigned char 
 38166 ;; Return value:  Size  Location     Type
 38167 ;;                  1    wreg      void 
 38168 ;; Registers used:
 38169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38170 ;; Tracked objects:
 38171 ;;		On entry : 0/0
 38172 ;;		On exit  : 0/0
 38173 ;;		Unchanged: 0/0
 38174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38175 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38176 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38178 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38179 ;;Total ram usage:        3 bytes
 38180 ;; Hardware stack levels used: 1
 38181 ;; Hardware stack levels required when called: 24
 38182 ;; This function calls:
 38183 ;;		_configIO
 38184 ;;		_defaultEvents
 38185 ;;		_defaultNVs
 38186 ;;		_saveNV
 38187 ;; This function is called by:
 38188 ;;		_APP_factoryReset
 38189 ;;		_APP_nvValueChanged
 38190 ;; This function uses a non-reentrant model
 38191 ;;
 38192                           
 38193                           	psect	text160
 38194   00B41A                     __ptext160:
 38195                           	callstack 0
 38196   00B41A                     _setType:
 38197                           	callstack 2
 38198                           
 38199                           ;incstack = 0
 38200                           ;setType@io stored from wreg
 38201   00B41A  0101               	movlb	1	; () banked
 38202   00B41C  6FEF               	movwf	setType@io& (0+255),b
 38203                           
 38204                           ;../main.c: 529:     uint8_t index;;../main.c: 531:     index = (16 + 7*(io) + 0);
 38205   00B41E  0101               	movlb	1	; () banked
 38206   00B420  51EF               	movf	setType@io& (0+255),w,b
 38207   00B422  0D07               	mullw	7
 38208   00B424  50F3               	movf	243,w,c
 38209   00B426  0F10               	addlw	16
 38210   00B428  6FEE               	movwf	setType@index& (0+255),b
 38211                           
 38212                           ; BSR set to: 1
 38213                           ;../main.c: 532:     saveNV((uint8_t)index, type);
 38214   00B42A  C1ED  F1BF         	movff	setType@type,saveNV@value
 38215   00B42E  51EE               	movf	setType@index& (0+255),w,b
 38216   00B430  ECAD  F05F         	call	_saveNV
 38217                           
 38218                           ;../main.c: 535:     defaultNVs(io, type);
 38219   00B434  C1ED  F1C3         	movff	setType@type,defaultNVs@type
 38220   00B438  0101               	movlb	1	; () banked
 38221   00B43A  51EF               	movf	setType@io& (0+255),w,b
 38222   00B43C  EC12  F05D         	call	_defaultNVs
 38223                           
 38224                           ;../main.c: 538:     configIO(io);
 38225   00B440  0101               	movlb	1	; () banked
 38226   00B442  51EF               	movf	setType@io& (0+255),w,b
 38227   00B444  EC33  F027         	call	_configIO
 38228                           
 38229                           ;../main.c: 540:     if ((type == 2) || (type== 3) || (type == 4)) {
 38230   00B448  0E02               	movlw	2
 38231   00B44A  0101               	movlb	1	; () banked
 38232   00B44C  19ED               	xorwf	setType@type& (0+255),w,b
 38233   00B44E  B4D8               	btfsc	status,2,c
 38234   00B450  D008               	goto	u20250
 38235                           
 38236                           ; BSR set to: 1
 38237   00B452  0E03               	movlw	3
 38238   00B454  19ED               	xorwf	setType@type& (0+255),w,b
 38239   00B456  B4D8               	btfsc	status,2,c
 38240   00B458  D004               	goto	u20250
 38241                           
 38242                           ; BSR set to: 1
 38243   00B45A  0E04               	movlw	4
 38244   00B45C  19ED               	xorwf	setType@type& (0+255),w,b
 38245   00B45E  A4D8               	btfss	status,2,c
 38246   00B460  D008               	goto	l20064
 38247   00B462                     u20250:
 38248                           
 38249                           ; BSR set to: 1
 38250                           ;../main.c: 541:         currentPos[io] = 128;
 38251   00B462  0E30               	movlw	low _currentPos
 38252   00B464  25EF               	addwf	setType@io& (0+255),w,b
 38253   00B466  6ED9               	movwf	fsr2l,c
 38254   00B468  6ADA               	clrf	fsr2h,c
 38255   00B46A  0E01               	movlw	high _currentPos
 38256   00B46C  22DA               	addwfc	fsr2h,f,c
 38257   00B46E  0E80               	movlw	128
 38258   00B470  6EDF               	movwf	indf2,c
 38259   00B472                     l20064:
 38260                           
 38261                           ; BSR set to: 1
 38262                           ;../main.c: 545:     defaultEvents(io, type);
 38263   00B472  C1ED  F1E9         	movff	setType@type,defaultEvents@type
 38264   00B476  51EF               	movf	setType@io& (0+255),w,b
 38265   00B478  EC9F  F03B         	call	_defaultEvents
 38266   00B47C  0012               	return		;funcret
 38267   00B47E                     __end_of_setType:
 38268                           	callstack 0
 38269                           
 38270 ;; *************** function _defaultNVs *****************
 38271 ;; Defined at:
 38272 ;;		line 342 in file "../universalNv.c"
 38273 ;; Parameters:    Size  Location     Type
 38274 ;;  io              1    wreg     unsigned char 
 38275 ;;  type            1    6[BANK1 ] unsigned char 
 38276 ;; Auto vars:     Size  Location     Type
 38277 ;;  io              1    9[BANK1 ] unsigned char 
 38278 ;;  i               1   10[BANK1 ] unsigned char 
 38279 ;; Return value:  Size  Location     Type
 38280 ;;                  1    wreg      void 
 38281 ;; Registers used:
 38282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38283 ;; Tracked objects:
 38284 ;;		On entry : 0/0
 38285 ;;		On exit  : 0/0
 38286 ;;		Unchanged: 0/0
 38287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38288 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38289 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38290 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38291 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38292 ;;Total ram usage:        5 bytes
 38293 ;; Hardware stack levels used: 1
 38294 ;; Hardware stack levels required when called: 19
 38295 ;; This function calls:
 38296 ;;		_loadNvCache
 38297 ;;		_saveNV
 38298 ;; This function is called by:
 38299 ;;		_setType
 38300 ;; This function uses a non-reentrant model
 38301 ;;
 38302                           
 38303                           	psect	text161
 38304   00BA24                     __ptext161:
 38305                           	callstack 0
 38306   00BA24                     _defaultNVs:
 38307                           	callstack 6
 38308                           
 38309                           ;incstack = 0
 38310                           ;defaultNVs@io stored from wreg
 38311   00BA24  0101               	movlb	1	; () banked
 38312   00BA26  6FC6               	movwf	defaultNVs@io& (0+255),b
 38313                           
 38314                           ;../universalNv.c: 343:     uint8_t i;;../universalNv.c: 345:     for (i=1; i<7; i++) {
 38315   00BA28  0E01               	movlw	1
 38316   00BA2A  0101               	movlb	1	; () banked
 38317   00BA2C  6FC7               	movwf	defaultNVs@i& (0+255),b
 38318   00BA2E                     l19898:
 38319                           
 38320                           ; BSR set to: 1
 38321                           ;../universalNv.c: 346:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 38322   00BA2E  51C3               	movf	defaultNVs@type& (0+255),w,b
 38323   00BA30  0D07               	mullw	7
 38324   00BA32  0E8B               	movlw	low _channelDefaultNVs
 38325   00BA34  24F3               	addwf	243,w,c
 38326   00BA36  6FC4               	movwf	??_defaultNVs& (0+255),b
 38327   00BA38  0EEE               	movlw	high _channelDefaultNVs
 38328   00BA3A  20F4               	addwfc	prodh,w,c
 38329   00BA3C  6FC5               	movwf	(??_defaultNVs+1)& (0+255),b
 38330   00BA3E  51C7               	movf	defaultNVs@i& (0+255),w,b
 38331   00BA40  27C4               	addwf	??_defaultNVs& (0+255),f,b
 38332   00BA42  0E00               	movlw	0
 38333   00BA44  23C5               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 38334   00BA46  C1C4  FFF6         	movff	??_defaultNVs,tblptrl
 38335   00BA4A  C1C5  FFF7         	movff	??_defaultNVs+1,tblptrh
 38336   00BA4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 38337   00BA4E  6AF8               	clrf	tblptru,c
 38338   00BA50                     	endif
 38339   00BA50                     	if	0	;tblptru may be non-zero
 38340   00BA50                     	endif
 38341   00BA50  0008               	tblrd		*
 38342   00BA52  CFF5 F1BF          	movff	tablat,saveNV@value
 38343   00BA56  51C6               	movf	defaultNVs@io& (0+255),w,b
 38344   00BA58  0D07               	mullw	7
 38345   00BA5A  50F3               	movf	243,w,c
 38346   00BA5C  25C7               	addwf	defaultNVs@i& (0+255),w,b
 38347   00BA5E  0F10               	addlw	16
 38348   00BA60  ECAD  F05F         	call	_saveNV
 38349                           
 38350                           ;../universalNv.c: 347:     }
 38351   00BA64  0101               	movlb	1	; () banked
 38352   00BA66  2BC7               	incf	defaultNVs@i& (0+255),f,b
 38353                           
 38354                           ; BSR set to: 1
 38355   00BA68  0E06               	movlw	6
 38356   00BA6A  65C7               	cpfsgt	defaultNVs@i& (0+255),b
 38357   00BA6C  D7E0               	goto	l19898
 38358                           
 38359                           ; BSR set to: 1
 38360                           ;../universalNv.c: 348:     loadNvCache();
 38361   00BA6E  EC1D  F05E         	call	_loadNvCache	;wreg free
 38362   00BA72  0012               	return		;funcret
 38363   00BA74                     __end_of_defaultNVs:
 38364                           	callstack 0
 38365                           
 38366 ;; *************** function _saveNV *****************
 38367 ;; Defined at:
 38368 ;;		line 199 in file "../../VLCBlib_PIC/nv.c"
 38369 ;; Parameters:    Size  Location     Type
 38370 ;;  index           1    wreg     unsigned char 
 38371 ;;  value           1    2[BANK1 ] unsigned char 
 38372 ;; Auto vars:     Size  Location     Type
 38373 ;;  index           1    5[BANK1 ] unsigned char 
 38374 ;; Return value:  Size  Location     Type
 38375 ;;                  1    wreg      void 
 38376 ;; Registers used:
 38377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38378 ;; Tracked objects:
 38379 ;;		On entry : 0/0
 38380 ;;		On exit  : 0/0
 38381 ;;		Unchanged: 0/0
 38382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38383 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38384 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38385 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38386 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38387 ;;Total ram usage:        4 bytes
 38388 ;; Hardware stack levels used: 1
 38389 ;; Hardware stack levels required when called: 18
 38390 ;; This function calls:
 38391 ;;		_writeNVM
 38392 ;; This function is called by:
 38393 ;;		_setType
 38394 ;;		_defaultNVs
 38395 ;; This function uses a non-reentrant model
 38396 ;;
 38397                           
 38398                           	psect	text162
 38399   00BF5A                     __ptext162:
 38400                           	callstack 0
 38401   00BF5A                     _saveNV:
 38402                           	callstack 7
 38403                           
 38404                           ;incstack = 0
 38405                           ;saveNV@index stored from wreg
 38406   00BF5A  0101               	movlb	1	; () banked
 38407   00BF5C  6FC2               	movwf	saveNV@index& (0+255),b
 38408                           
 38409                           ;../../VLCBlib_PIC/nv.c: 201:     nvCache[index] = value;
 38410   00BF5E  0E00               	movlw	low _nvCache
 38411   00BF60  0101               	movlb	1	; () banked
 38412   00BF62  25C2               	addwf	saveNV@index& (0+255),w,b
 38413   00BF64  6ED9               	movwf	fsr2l,c
 38414   00BF66  6ADA               	clrf	fsr2h,c
 38415   00BF68  0E04               	movlw	high _nvCache
 38416   00BF6A  22DA               	addwfc	fsr2h,f,c
 38417   00BF6C  C1BF  FFDF         	movff	saveNV@value,indf2
 38418                           
 38419                           ; BSR set to: 1
 38420                           ;../../VLCBlib_PIC/nv.c: 203:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 38421   00BF70  0E80               	movlw	128
 38422   00BF72  25C2               	addwf	saveNV@index& (0+255),w,b
 38423   00BF74  6FC0               	movwf	??_saveNV& (0+255),b
 38424   00BF76  6BC1               	clrf	(??_saveNV+1)& (0+255),b
 38425   00BF78  0EFF               	movlw	255
 38426   00BF7A  23C1               	addwfc	(??_saveNV+1)& (0+255),f,b
 38427   00BF7C  C1C0  F0A4         	movff	??_saveNV,writeNVM@index
 38428   00BF80  C1C1  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 38429   00BF84  0100               	movlb	0	; () banked
 38430   00BF86  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38431   00BF88  C1BF  F0A7         	movff	saveNV@value,writeNVM@value
 38432   00BF8C  0E01               	movlw	1
 38433   00BF8E  EC61  F05D         	call	_writeNVM
 38434   00BF92  0012               	return		;funcret
 38435   00BF94                     __end_of_saveNV:
 38436                           	callstack 0
 38437                           
 38438 ;; *************** function _loadNvCache *****************
 38439 ;; Defined at:
 38440 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 38441 ;; Parameters:    Size  Location     Type
 38442 ;;		None
 38443 ;; Auto vars:     Size  Location     Type
 38444 ;;  temp            2   57[BANK0 ] short 
 38445 ;;  i               1   59[BANK0 ] unsigned char 
 38446 ;; Return value:  Size  Location     Type
 38447 ;;                  1    wreg      void 
 38448 ;; Registers used:
 38449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38450 ;; Tracked objects:
 38451 ;;		On entry : 0/0
 38452 ;;		On exit  : 0/0
 38453 ;;		Unchanged: 0/0
 38454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38456 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38457 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38458 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38459 ;;Total ram usage:        5 bytes
 38460 ;; Hardware stack levels used: 1
 38461 ;; Hardware stack levels required when called: 14
 38462 ;; This function calls:
 38463 ;;		_readNVM
 38464 ;; This function is called by:
 38465 ;;		_defaultNVs
 38466 ;;		_nvPowerUp
 38467 ;; This function uses a non-reentrant model
 38468 ;;
 38469                           
 38470                           	psect	text163
 38471   00BC3A                     __ptext163:
 38472                           	callstack 0
 38473   00BC3A                     _loadNvCache:
 38474                           	callstack 14
 38475                           
 38476                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= (15+7*16); i++) {
 38477                           
 38478                           ;incstack = 0
 38479   00BC3A  0E01               	movlw	1
 38480   00BC3C  0100               	movlb	0	; () banked
 38481   00BC3E  6F9B               	movwf	loadNvCache@i& (0+255),b
 38482   00BC40                     l19770:
 38483                           
 38484                           ; BSR set to: 0
 38485                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 38486   00BC40  0E80               	movlw	128
 38487   00BC42  259B               	addwf	loadNvCache@i& (0+255),w,b
 38488   00BC44  6F97               	movwf	??_loadNvCache& (0+255),b
 38489   00BC46  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 38490   00BC48  0EFF               	movlw	255
 38491   00BC4A  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 38492   00BC4C  C097  F091         	movff	??_loadNvCache,readNVM@index
 38493   00BC50  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 38494   00BC54  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38495   00BC56  0E01               	movlw	1
 38496   00BC58  ECD1  F05A         	call	_readNVM
 38497   00BC5C  C091  F099         	movff	?_readNVM,loadNvCache@temp
 38498   00BC60  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 38499                           
 38500                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 38501   00BC64  0100               	movlb	0	; () banked
 38502   00BC66  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 38503   00BC68  D008               	goto	l19778
 38504                           
 38505                           ; BSR set to: 0
 38506                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 38507   00BC6A  0E00               	movlw	low _nvCache
 38508   00BC6C  259B               	addwf	loadNvCache@i& (0+255),w,b
 38509   00BC6E  6ED9               	movwf	fsr2l,c
 38510   00BC70  6ADA               	clrf	fsr2h,c
 38511   00BC72  0E04               	movlw	high _nvCache
 38512   00BC74  22DA               	addwfc	fsr2h,f,c
 38513   00BC76  C099  FFDF         	movff	loadNvCache@temp,indf2
 38514   00BC7A                     l19778:
 38515                           
 38516                           ; BSR set to: 0
 38517                           ;../../VLCBlib_PIC/nv.c: 173:     }
 38518   00BC7A  2B9B               	incf	loadNvCache@i& (0+255),f,b
 38519                           
 38520                           ; BSR set to: 0
 38521   00BC7C  0E7F               	movlw	127
 38522   00BC7E  659B               	cpfsgt	loadNvCache@i& (0+255),b
 38523   00BC80  D7DF               	goto	l19770
 38524   00BC82  0012               	return	
 38525   00BC84                     __end_of_loadNvCache:
 38526                           	callstack 0
 38527                           
 38528 ;; *************** function _defaultEvents *****************
 38529 ;; Defined at:
 38530 ;;		line 110 in file "../universalEvents.c"
 38531 ;; Parameters:    Size  Location     Type
 38532 ;;  io              1    wreg     unsigned char 
 38533 ;;  type            1   44[BANK1 ] unsigned char 
 38534 ;; Auto vars:     Size  Location     Type
 38535 ;;  io              1   47[BANK1 ] unsigned char 
 38536 ;;  en              2   45[BANK1 ] unsigned short 
 38537 ;;  b               1    0        unsigned char 
 38538 ;; Return value:  Size  Location     Type
 38539 ;;                  1    wreg      void 
 38540 ;; Registers used:
 38541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38542 ;; Tracked objects:
 38543 ;;		On entry : 0/0
 38544 ;;		On exit  : 0/0
 38545 ;;		Unchanged: 0/0
 38546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38547 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38548 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38550 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38551 ;;Total ram usage:        4 bytes
 38552 ;; Hardware stack levels used: 1
 38553 ;; Hardware stack levels required when called: 23
 38554 ;; This function calls:
 38555 ;;		_addEvent
 38556 ;;		_clearEvents
 38557 ;; This function is called by:
 38558 ;;		_setType
 38559 ;; This function uses a non-reentrant model
 38560 ;;
 38561                           
 38562                           	psect	text164
 38563   00773E                     __ptext164:
 38564                           	callstack 0
 38565   00773E                     _defaultEvents:
 38566                           	callstack 2
 38567                           
 38568                           ; BSR set to: 0
 38569                           ;incstack = 0
 38570                           ;defaultEvents@io stored from wreg
 38571   00773E  0101               	movlb	1	; () banked
 38572   007740  6FEC               	movwf	defaultEvents@io& (0+255),b
 38573                           
 38574                           ;../universalEvents.c: 111:     uint16_t en = io+1;
 38575   007742  0E01               	movlw	1
 38576   007744  0101               	movlb	1	; () banked
 38577   007746  25EC               	addwf	defaultEvents@io& (0+255),w,b
 38578   007748  6FEA               	movwf	defaultEvents@en& (0+255),b
 38579   00774A  6BEB               	clrf	(defaultEvents@en+1)& (0+255),b
 38580   00774C  0E00               	movlw	0
 38581   00774E  23EB               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 38582                           
 38583                           ; BSR set to: 1
 38584                           ;../universalEvents.c: 112:     uint8_t b;;../universalEvents.c: 120:         clearEvent
      +                          s(io);
 38585   007750  51EC               	movf	defaultEvents@io& (0+255),w,b
 38586   007752  EC34  F05F         	call	_clearEvents
 38587                           
 38588                           ;../universalEvents.c: 125:     switch(type) {
 38589   007756  D094               	goto	l19918
 38590   007758                     l19910:
 38591                           
 38592                           ; BSR set to: 1
 38593                           ;../universalEvents.c: 129:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 38594   007758  C0B5  F1DA         	movff	_nn,addEvent@nodeNumber
 38595   00775C  C0B6  F1DB         	movff	_nn+1,addEvent@nodeNumber+1
 38596   007760  0E64               	movlw	100
 38597   007762  25EA               	addwf	defaultEvents@en& (0+255),w,b
 38598   007764  6FDC               	movwf	addEvent@eventNumber& (0+255),b
 38599   007766  0E00               	movlw	0
 38600   007768  21EB               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38601   00776A  6FDD               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38602   00776C  0E00               	movlw	0
 38603   00776E  6FDE               	movwf	addEvent@evNum& (0+255),b
 38604   007770  51EC               	movf	defaultEvents@io& (0+255),w,b
 38605   007772  0D04               	mullw	4
 38606   007774  50F3               	movf	243,w,c
 38607   007776  0F08               	addlw	8
 38608   007778  6FDF               	movwf	addEvent@evVal& (0+255),b
 38609   00777A  0E01               	movlw	1
 38610   00777C  6FE0               	movwf	addEvent@forceOwnNN& (0+255),b
 38611   00777E  ECE5  F032         	call	_addEvent	;wreg free
 38612   007782                     l646:
 38613                           
 38614                           ;../universalEvents.c: 134:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38615   007782  C0B5  F1DA         	movff	_nn,addEvent@nodeNumber
 38616   007786  C0B6  F1DB         	movff	_nn+1,addEvent@nodeNumber+1
 38617   00778A  C1EA  F1DC         	movff	defaultEvents@en,addEvent@eventNumber
 38618   00778E  C1EB  F1DD         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38619   007792  0E01               	movlw	1
 38620   007794  0101               	movlb	1	; () banked
 38621   007796  6FDE               	movwf	addEvent@evNum& (0+255),b
 38622   007798  51EC               	movf	defaultEvents@io& (0+255),w,b
 38623   00779A  0D05               	mullw	5
 38624   00779C  50F3               	movf	243,w,c
 38625   00779E  0F08               	addlw	8
 38626   0077A0  6FDF               	movwf	addEvent@evVal& (0+255),b
 38627   0077A2  0E01               	movlw	1
 38628   0077A4  6FE0               	movwf	addEvent@forceOwnNN& (0+255),b
 38629   0077A6  ECE5  F032         	call	_addEvent	;wreg free
 38630                           
 38631                           ;../universalEvents.c: 137:             break;
 38632   0077AA  0012               	return	
 38633   0077AC                     l19912:
 38634                           
 38635                           ; BSR set to: 1
 38636                           ;../universalEvents.c: 140:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 38637   0077AC  C0B5  F1DA         	movff	_nn,addEvent@nodeNumber
 38638   0077B0  C0B6  F1DB         	movff	_nn+1,addEvent@nodeNumber+1
 38639   0077B4  C1EA  F1DC         	movff	defaultEvents@en,addEvent@eventNumber
 38640   0077B8  C1EB  F1DD         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38641   0077BC  0E00               	movlw	0
 38642   0077BE  6FDE               	movwf	addEvent@evNum& (0+255),b
 38643   0077C0  51EC               	movf	defaultEvents@io& (0+255),w,b
 38644   0077C2  0D04               	mullw	4
 38645   0077C4  50F3               	movf	243,w,c
 38646   0077C6  0F08               	addlw	8
 38647   0077C8  6FDF               	movwf	addEvent@evVal& (0+255),b
 38648   0077CA  0E01               	movlw	1
 38649   0077CC  6FE0               	movwf	addEvent@forceOwnNN& (0+255),b
 38650   0077CE  ECE5  F032         	call	_addEvent	;wreg free
 38651                           
 38652                           ;../universalEvents.c: 141:             break;
 38653   0077D2  0012               	return	
 38654   0077D4                     l19914:
 38655                           
 38656                           ; BSR set to: 1
 38657                           ;../universalEvents.c: 145:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 38658   0077D4  C0B5  F1DA         	movff	_nn,addEvent@nodeNumber
 38659   0077D8  C0B6  F1DB         	movff	_nn+1,addEvent@nodeNumber+1
 38660   0077DC  0E64               	movlw	100
 38661   0077DE  25EA               	addwf	defaultEvents@en& (0+255),w,b
 38662   0077E0  6FDC               	movwf	addEvent@eventNumber& (0+255),b
 38663   0077E2  0E00               	movlw	0
 38664   0077E4  21EB               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38665   0077E6  6FDD               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38666   0077E8  0E00               	movlw	0
 38667   0077EA  6FDE               	movwf	addEvent@evNum& (0+255),b
 38668   0077EC  51EC               	movf	defaultEvents@io& (0+255),w,b
 38669   0077EE  0D04               	mullw	4
 38670   0077F0  50F3               	movf	243,w,c
 38671   0077F2  0F08               	addlw	8
 38672   0077F4  6FDF               	movwf	addEvent@evVal& (0+255),b
 38673   0077F6  0E01               	movlw	1
 38674   0077F8  6FE0               	movwf	addEvent@forceOwnNN& (0+255),b
 38675   0077FA  ECE5  F032         	call	_addEvent	;wreg free
 38676                           
 38677                           ;../universalEvents.c: 146:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 38678   0077FE  C0B5  F1DA         	movff	_nn,addEvent@nodeNumber
 38679   007802  C0B6  F1DB         	movff	_nn+1,addEvent@nodeNumber+1
 38680   007806  0E2C               	movlw	44
 38681   007808  0101               	movlb	1	; () banked
 38682   00780A  25EA               	addwf	defaultEvents@en& (0+255),w,b
 38683   00780C  6FDC               	movwf	addEvent@eventNumber& (0+255),b
 38684   00780E  0E01               	movlw	1
 38685   007810  21EB               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38686   007812  6FDD               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38687   007814  0E00               	movlw	0
 38688   007816  6FDE               	movwf	addEvent@evNum& (0+255),b
 38689   007818  51EC               	movf	defaultEvents@io& (0+255),w,b
 38690   00781A  0D04               	mullw	4
 38691   00781C  50F3               	movf	243,w,c
 38692   00781E  0F09               	addlw	9
 38693   007820  6FDF               	movwf	addEvent@evVal& (0+255),b
 38694   007822  0E01               	movlw	1
 38695   007824  6FE0               	movwf	addEvent@forceOwnNN& (0+255),b
 38696   007826  ECE5  F032         	call	_addEvent	;wreg free
 38697                           
 38698                           ;../universalEvents.c: 147:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 38699   00782A  C0B5  F1DA         	movff	_nn,addEvent@nodeNumber
 38700   00782E  C0B6  F1DB         	movff	_nn+1,addEvent@nodeNumber+1
 38701   007832  0EC8               	movlw	200
 38702   007834  0101               	movlb	1	; () banked
 38703   007836  25EA               	addwf	defaultEvents@en& (0+255),w,b
 38704   007838  6FDC               	movwf	addEvent@eventNumber& (0+255),b
 38705   00783A  0E00               	movlw	0
 38706   00783C  21EB               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38707   00783E  6FDD               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38708   007840  0E00               	movlw	0
 38709   007842  6FDE               	movwf	addEvent@evNum& (0+255),b
 38710   007844  51EC               	movf	defaultEvents@io& (0+255),w,b
 38711   007846  0D04               	mullw	4
 38712   007848  50F3               	movf	243,w,c
 38713   00784A  0F0A               	addlw	10
 38714   00784C  6FDF               	movwf	addEvent@evVal& (0+255),b
 38715   00784E  0E01               	movlw	1
 38716   007850  6FE0               	movwf	addEvent@forceOwnNN& (0+255),b
 38717   007852  ECE5  F032         	call	_addEvent	;wreg free
 38718                           
 38719                           ;../universalEvents.c: 149:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38720   007856  C0B5  F1DA         	movff	_nn,addEvent@nodeNumber
 38721   00785A  C0B6  F1DB         	movff	_nn+1,addEvent@nodeNumber+1
 38722   00785E  C1EA  F1DC         	movff	defaultEvents@en,addEvent@eventNumber
 38723   007862  C1EB  F1DD         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38724   007866  0E01               	movlw	1
 38725   007868  0101               	movlb	1	; () banked
 38726   00786A  6FDE               	movwf	addEvent@evNum& (0+255),b
 38727   00786C  51EC               	movf	defaultEvents@io& (0+255),w,b
 38728   00786E  0D05               	mullw	5
 38729   007870  50F3               	movf	243,w,c
 38730   007872  0F08               	addlw	8
 38731   007874  6FDF               	movwf	addEvent@evVal& (0+255),b
 38732   007876  0E01               	movlw	1
 38733   007878  6FE0               	movwf	addEvent@forceOwnNN& (0+255),b
 38734   00787A  ECE5  F032         	call	_addEvent	;wreg free
 38735                           
 38736                           ;../universalEvents.c: 150:             break;
 38737   00787E  0012               	return	
 38738   007880                     l19918:
 38739   007880  0101               	movlb	1	; () banked
 38740   007882  51E9               	movf	defaultEvents@type& (0+255),w,b
 38741                           
 38742                           ; Switch size 1, requested type "simple"
 38743                           ; Number of cases is 5, Range of values is 0 to 4
 38744                           ; switch strategies available:
 38745                           ; Name         Instructions Cycles
 38746                           ; simple_byte           16     9 (average)
 38747                           ;	Chosen strategy is simple_byte
 38748   007884  0A00               	xorlw	0	; case 0
 38749   007886  B4D8               	btfsc	status,2,c
 38750   007888  D791               	goto	l19912
 38751   00788A  0A01               	xorlw	1	; case 1
 38752   00788C  B4D8               	btfsc	status,2,c
 38753   00788E  D779               	goto	l646
 38754   007890  0A03               	xorlw	3	; case 2
 38755   007892  B4D8               	btfsc	status,2,c
 38756   007894  D79F               	goto	l19914
 38757   007896  0A01               	xorlw	1	; case 3
 38758   007898  B4D8               	btfsc	status,2,c
 38759   00789A  D75E               	goto	l19910
 38760   00789C  0A07               	xorlw	7	; case 4
 38761   00789E  0012               	return	
 38762   0078A0                     __end_of_defaultEvents:
 38763                           	callstack 0
 38764                           
 38765 ;; *************** function _clearEvents *****************
 38766 ;; Defined at:
 38767 ;;		line 222 in file "../universalEvents.c"
 38768 ;; Parameters:    Size  Location     Type
 38769 ;;  io              1    wreg     unsigned char 
 38770 ;; Auto vars:     Size  Location     Type
 38771 ;;  io              1   39[BANK1 ] unsigned char 
 38772 ;; Return value:  Size  Location     Type
 38773 ;;                  1    wreg      void 
 38774 ;; Registers used:
 38775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38776 ;; Tracked objects:
 38777 ;;		On entry : 0/0
 38778 ;;		On exit  : 0/0
 38779 ;;		Unchanged: 0/0
 38780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38782 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38784 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38785 ;;Total ram usage:        1 bytes
 38786 ;; Hardware stack levels used: 1
 38787 ;; Hardware stack levels required when called: 22
 38788 ;; This function calls:
 38789 ;;		_deleteActionRange
 38790 ;;		_deleteHappeningRange
 38791 ;; This function is called by:
 38792 ;;		_defaultEvents
 38793 ;; This function uses a non-reentrant model
 38794 ;;
 38795                           
 38796                           	psect	text165
 38797   00BE68                     __ptext165:
 38798                           	callstack 0
 38799   00BE68                     _clearEvents:
 38800                           	callstack 2
 38801                           
 38802                           ;incstack = 0
 38803                           ;clearEvents@io stored from wreg
 38804   00BE68  0101               	movlb	1	; () banked
 38805   00BE6A  6FE4               	movwf	clearEvents@io& (0+255),b
 38806                           
 38807                           ;../universalEvents.c: 223:     deleteActionRange((uint8_t)(uint8_t)(8 + 5*(io)), 5);
 38808   00BE6C  0E05               	movlw	5
 38809   00BE6E  0101               	movlb	1	; () banked
 38810   00BE70  6FDA               	movwf	deleteActionRange@number& (0+255),b
 38811   00BE72  51E4               	movf	clearEvents@io& (0+255),w,b
 38812   00BE74  0D05               	mullw	5
 38813   00BE76  50F3               	movf	243,w,c
 38814   00BE78  0F08               	addlw	8
 38815   00BE7A  EC27  F04C         	call	_deleteActionRange
 38816                           
 38817                           ;../universalEvents.c: 224:     deleteActionRange((uint8_t)(uint8_t)((8 + 5*(io)) | 0x80
      +                          ), 5);
 38818   00BE7E  0E05               	movlw	5
 38819   00BE80  0101               	movlb	1	; () banked
 38820   00BE82  6FDA               	movwf	deleteActionRange@number& (0+255),b
 38821   00BE84  51E4               	movf	clearEvents@io& (0+255),w,b
 38822   00BE86  0D05               	mullw	5
 38823   00BE88  50F3               	movf	243,w,c
 38824   00BE8A  0F08               	addlw	8
 38825   00BE8C  0980               	iorlw	128
 38826   00BE8E  EC27  F04C         	call	_deleteActionRange
 38827                           
 38828                           ;../universalEvents.c: 225:     deleteHappeningRange((8 + 4*(io)), 4);
 38829   00BE92  0E04               	movlw	4
 38830   00BE94  0101               	movlb	1	; () banked
 38831   00BE96  6FDA               	movwf	deleteHappeningRange@number& (0+255),b
 38832   00BE98  51E4               	movf	clearEvents@io& (0+255),w,b
 38833   00BE9A  0D04               	mullw	4
 38834   00BE9C  50F3               	movf	243,w,c
 38835   00BE9E  0F08               	addlw	8
 38836   00BEA0  EC6F  F045         	call	_deleteHappeningRange
 38837   00BEA4  0012               	return		;funcret
 38838   00BEA6                     __end_of_clearEvents:
 38839                           	callstack 0
 38840                           
 38841 ;; *************** function _deleteHappeningRange *****************
 38842 ;; Defined at:
 38843 ;;		line 287 in file "../../VLCBlib_PIC/event_producer_happening.c"
 38844 ;; Parameters:    Size  Location     Type
 38845 ;;  happening       1    wreg     unsigned char 
 38846 ;;  number          1   29[BANK1 ] unsigned char 
 38847 ;; Auto vars:     Size  Location     Type
 38848 ;;  happening       1   35[BANK1 ] unsigned char 
 38849 ;;  h               1   36[BANK1 ] unsigned char 
 38850 ;;  f               1    0        struct .
 38851 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 38852 ;; Return value:  Size  Location     Type
 38853 ;;                  1    wreg      void 
 38854 ;; Registers used:
 38855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38856 ;; Tracked objects:
 38857 ;;		On entry : 0/0
 38858 ;;		On exit  : 0/0
 38859 ;;		Unchanged: 0/0
 38860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38861 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38862 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38863 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38864 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38865 ;;Total ram usage:        9 bytes
 38866 ;; Hardware stack levels used: 1
 38867 ;; Hardware stack levels required when called: 21
 38868 ;; This function calls:
 38869 ;;		_checkRemoveTableEntry
 38870 ;;		_flushFlashBlock
 38871 ;;		_readNVM
 38872 ;;		_rebuildHashtable
 38873 ;;		_validStart
 38874 ;;		_writeEv
 38875 ;; This function is called by:
 38876 ;;		_clearEvents
 38877 ;; This function uses a non-reentrant model
 38878 ;;
 38879                           
 38880                           	psect	text166
 38881   008ADE                     __ptext166:
 38882                           	callstack 0
 38883   008ADE                     _deleteHappeningRange:
 38884                           	callstack 2
 38885                           
 38886                           ;incstack = 0
 38887                           ;deleteHappeningRange@happening stored from wreg
 38888   008ADE  0101               	movlb	1	; () banked
 38889   008AE0  6FE0               	movwf	deleteHappeningRange@happening& (0+255),b
 38890                           
 38891                           ;../../VLCBlib_PIC/event_producer_happening.c: 288:     uint8_t tableIndex;;../../VLCBli
      +                          b_PIC/event_producer_happening.c: 289:     for (tableIndex=0; tableIndex < 255; tableInd
      +                          ex++) {
 38892   008AE2  0E00               	movlw	0
 38893   008AE4  0101               	movlb	1	; () banked
 38894   008AE6  6FE2               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 38895   008AE8                     l19628:
 38896                           
 38897                           ; BSR set to: 1
 38898                           ;../../VLCBlib_PIC/event_producer_happening.c: 290:         if ( validStart(tableIndex))
      +                           {
 38899   008AE8  51E2               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38900   008AEA  EC3A  F05D         	call	_validStart
 38901   008AEE  0900               	iorlw	0
 38902   008AF0  B4D8               	btfsc	status,2,c
 38903   008AF2  D059               	goto	l19640
 38904   008AF4  0101               	movlb	1	; () banked
 38905   008AF6  51E2               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38906   008AF8  6FDB               	movwf	??_deleteHappeningRange& (0+255),b
 38907   008AFA  6BDC               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 38908   008AFC  3BDB               	swapf	??_deleteHappeningRange& (0+255),f,b
 38909   008AFE  3BDC               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 38910   008B00  0EF0               	movlw	240
 38911   008B02  17DC               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38912   008B04  51DB               	movf	??_deleteHappeningRange& (0+255),w,b
 38913   008B06  0B0F               	andlw	15
 38914   008B08  13DC               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38915   008B0A  0EF0               	movlw	240
 38916   008B0C  17DB               	andwf	??_deleteHappeningRange& (0+255),f,b
 38917   008B0E  0E80               	movlw	128
 38918   008B10  25DB               	addwf	??_deleteHappeningRange& (0+255),w,b
 38919   008B12  6FDD               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38920   008B14  0EEF               	movlw	239
 38921   008B16  21DC               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38922   008B18  6FDE               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38923   008B1A  C1DD  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38924   008B1E  C1DE  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38925   008B22  0100               	movlb	0	; () banked
 38926   008B24  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38927   008B26  0E01               	movlw	1
 38928   008B28  ECD1  F05A         	call	_readNVM
 38929                           
 38930                           ;../../VLCBlib_PIC/event_producer_happening.c: 295:             h = (Happening)readNVM(F
      +                          LASH_NVM_TYPE,
 38931   008B2C  0101               	movlb	1	; () banked
 38932   008B2E  51E2               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38933   008B30  0D10               	mullw	16
 38934   008B32  CFF3 F1DB          	movff	prodl,??_deleteHappeningRange
 38935   008B36  CFF4 F1DC          	movff	prodh,??_deleteHappeningRange+1
 38936   008B3A  0E86               	movlw	134
 38937   008B3C  25DB               	addwf	??_deleteHappeningRange& (0+255),w,b
 38938   008B3E  6FDD               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38939   008B40  0EEF               	movlw	239
 38940   008B42  21DC               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38941   008B44  6FDE               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38942   008B46  C1DD  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38943   008B4A  C1DE  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38944   008B4E  0100               	movlb	0	; () banked
 38945   008B50  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38946   008B52  0E01               	movlw	1
 38947   008B54  ECD1  F05A         	call	_readNVM
 38948   008B58  0100               	movlb	0	; () banked
 38949   008B5A  5191               	movf	?_readNVM& (0+255),w,b
 38950   008B5C  0101               	movlb	1	; () banked
 38951   008B5E  6FE1               	movwf	deleteHappeningRange@h& (0+255),b
 38952                           
 38953                           ; BSR set to: 1
 38954                           ;../../VLCBlib_PIC/event_producer_happening.c: 297:             if ((h >= happening) && 
      +                          (h < happening+number)) {
 38955   008B60  51E0               	movf	deleteHappeningRange@happening& (0+255),w,b
 38956   008B62  5DE1               	subwf	deleteHappeningRange@h& (0+255),w,b
 38957   008B64  A0D8               	btfss	status,0,c
 38958   008B66  D01F               	goto	l19640
 38959                           
 38960                           ; BSR set to: 1
 38961   008B68  51DA               	movf	deleteHappeningRange@number& (0+255),w,b
 38962   008B6A  C1E0  F1DB         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 38963   008B6E  6BDC               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 38964   008B70  27DB               	addwf	??_deleteHappeningRange& (0+255),f,b
 38965   008B72  0E00               	movlw	0
 38966   008B74  23DC               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 38967   008B76  51E1               	movf	deleteHappeningRange@h& (0+255),w,b
 38968   008B78  6FDD               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38969   008B7A  6BDE               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 38970   008B7C  51DB               	movf	??_deleteHappeningRange& (0+255),w,b
 38971   008B7E  5DDD               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 38972   008B80  51DE               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 38973   008B82  0A80               	xorlw	128
 38974   008B84  6FDF               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 38975   008B86  51DC               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 38976   008B88  0A80               	xorlw	128
 38977   008B8A  59DF               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 38978   008B8C  B0D8               	btfsc	status,0,c
 38979   008B8E  D00B               	goto	l19640
 38980                           
 38981                           ; BSR set to: 1
 38982                           ;../../VLCBlib_PIC/event_producer_happening.c: 298:                 writeEv(tableIndex, 
      +                          0, 0);
 38983   008B90  0E00               	movlw	0
 38984   008B92  6FCE               	movwf	writeEv@evNum& (0+255),b
 38985   008B94  0E00               	movlw	0
 38986   008B96  6FCF               	movwf	writeEv@evVal& (0+255),b
 38987   008B98  51E2               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38988   008B9A  EC66  F01B         	call	_writeEv
 38989                           
 38990                           ;../../VLCBlib_PIC/event_producer_happening.c: 299:                 checkRemoveTableEntr
      +                          y(tableIndex);
 38991   008B9E  0101               	movlb	1	; () banked
 38992   008BA0  51E2               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38993   008BA2  EC8B  F05E         	call	_checkRemoveTableEntry
 38994   008BA6                     l19640:
 38995                           
 38996                           ;../../VLCBlib_PIC/event_producer_happening.c: 302:     }
 38997   008BA6  0101               	movlb	1	; () banked
 38998   008BA8  2BE2               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 38999                           
 39000                           ; BSR set to: 1
 39001   008BAA  29E2               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 39002   008BAC  A4D8               	btfss	status,2,c
 39003   008BAE  D79C               	goto	l19628
 39004                           
 39005                           ; BSR set to: 1
 39006                           ;../../VLCBlib_PIC/event_producer_happening.c: 303:     flushFlashBlock();
 39007   008BB0  EC5E  F054         	call	_flushFlashBlock	;wreg free
 39008                           
 39009                           ;../../VLCBlib_PIC/event_producer_happening.c: 304:     rebuildHashtable();
 39010   008BB4  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 39011   008BB8  0012               	return		;funcret
 39012   008BBA                     __end_of_deleteHappeningRange:
 39013                           	callstack 0
 39014                           
 39015 ;; *************** function _deleteActionRange *****************
 39016 ;; Defined at:
 39017 ;;		line 529 in file "../event_consumerDualActionQueue.c"
 39018 ;; Parameters:    Size  Location     Type
 39019 ;;  action          1    wreg     unsigned char 
 39020 ;;  number          1   29[BANK1 ] unsigned char 
 39021 ;; Auto vars:     Size  Location     Type
 39022 ;;  action          1   36[BANK1 ] unsigned char 
 39023 ;;  e               1   37[BANK1 ] unsigned char 
 39024 ;;  updated         1   35[BANK1 ] enum E12766
 39025 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 39026 ;; Return value:  Size  Location     Type
 39027 ;;                  1    wreg      void 
 39028 ;; Registers used:
 39029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39030 ;; Tracked objects:
 39031 ;;		On entry : 0/0
 39032 ;;		On exit  : 0/0
 39033 ;;		Unchanged: 0/0
 39034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39035 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39036 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39037 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39038 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39039 ;;Total ram usage:       10 bytes
 39040 ;; Hardware stack levels used: 1
 39041 ;; Hardware stack levels required when called: 21
 39042 ;; This function calls:
 39043 ;;		_checkRemoveTableEntry
 39044 ;;		_flushFlashBlock
 39045 ;;		_getEVs
 39046 ;;		_rebuildHashtable
 39047 ;;		_validStart
 39048 ;;		_writeEv
 39049 ;; This function is called by:
 39050 ;;		_clearEvents
 39051 ;; This function uses a non-reentrant model
 39052 ;;
 39053                           
 39054                           	psect	text167
 39055   00984E                     __ptext167:
 39056                           	callstack 0
 39057   00984E                     _deleteActionRange:
 39058                           	callstack 2
 39059                           
 39060                           ;incstack = 0
 39061                           ;deleteActionRange@action stored from wreg
 39062   00984E  0101               	movlb	1	; () banked
 39063   009850  6FE1               	movwf	deleteActionRange@action& (0+255),b
 39064                           
 39065                           ;../event_consumerDualActionQueue.c: 530:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 531:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 39066   009852  0E00               	movlw	0
 39067   009854  0101               	movlb	1	; () banked
 39068   009856  6FE3               	movwf	deleteActionRange@tableIndex& (0+255),b
 39069   009858                     l19584:
 39070                           
 39071                           ; BSR set to: 1
 39072                           ;../event_consumerDualActionQueue.c: 532:         if (validStart(tableIndex)) {
 39073   009858  51E3               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39074   00985A  EC3A  F05D         	call	_validStart
 39075   00985E  0900               	iorlw	0
 39076   009860  B4D8               	btfsc	status,2,c
 39077   009862  D044               	goto	l19614
 39078                           
 39079                           ;../event_consumerDualActionQueue.c: 533:             Boolean updated = FALSE;
 39080   009864  0E00               	movlw	0
 39081   009866  0101               	movlb	1	; () banked
 39082   009868  6FE0               	movwf	deleteActionRange@updated& (0+255),b
 39083                           
 39084                           ; BSR set to: 1
 39085                           ;../event_consumerDualActionQueue.c: 534:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 535:             if (getEVs(tableIndex)) {
 39086   00986A  51E3               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39087   00986C  EC35  F042         	call	_getEVs
 39088   009870  0900               	iorlw	0
 39089   009872  A4D8               	btfss	status,2,c
 39090   009874  0012               	return	
 39091                           
 39092                           ;../event_consumerDualActionQueue.c: 539:             for (e=1; e<20; e++) {
 39093   009876  0E01               	movlw	1
 39094   009878  0101               	movlb	1	; () banked
 39095   00987A  6FE2               	movwf	deleteActionRange@e& (0+255),b
 39096   00987C                     l19598:
 39097                           
 39098                           ; BSR set to: 1
 39099                           ;../event_consumerDualActionQueue.c: 540:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 39100   00987C  0E20               	movlw	low _evs
 39101   00987E  25E2               	addwf	deleteActionRange@e& (0+255),w,b
 39102   009880  6ED9               	movwf	fsr2l,c
 39103   009882  6ADA               	clrf	fsr2h,c
 39104   009884  0E02               	movlw	high _evs
 39105   009886  22DA               	addwfc	fsr2h,f,c
 39106   009888  51E1               	movf	deleteActionRange@action& (0+255),w,b
 39107   00988A  5CDE               	subwf	postinc2,w,c
 39108   00988C  A0D8               	btfss	status,0,c
 39109   00988E  D024               	goto	l19606
 39110                           
 39111                           ; BSR set to: 1
 39112   009890  51DA               	movf	deleteActionRange@number& (0+255),w,b
 39113   009892  C1E1  F1DB         	movff	deleteActionRange@action,??_deleteActionRange
 39114   009896  6BDC               	clrf	(??_deleteActionRange+1)& (0+255),b
 39115   009898  27DB               	addwf	??_deleteActionRange& (0+255),f,b
 39116   00989A  0E00               	movlw	0
 39117   00989C  23DC               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 39118   00989E  0E20               	movlw	low _evs
 39119   0098A0  25E2               	addwf	deleteActionRange@e& (0+255),w,b
 39120   0098A2  6ED9               	movwf	fsr2l,c
 39121   0098A4  6ADA               	clrf	fsr2h,c
 39122   0098A6  0E02               	movlw	high _evs
 39123   0098A8  22DA               	addwfc	fsr2h,f,c
 39124   0098AA  50DF               	movf	indf2,w,c
 39125   0098AC  6FDD               	movwf	(??_deleteActionRange+2)& (0+255),b
 39126   0098AE  6BDE               	clrf	(??_deleteActionRange+3)& (0+255),b
 39127   0098B0  51DB               	movf	??_deleteActionRange& (0+255),w,b
 39128   0098B2  5DDD               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 39129   0098B4  51DE               	movf	(??_deleteActionRange+3)& (0+255),w,b
 39130   0098B6  0A80               	xorlw	128
 39131   0098B8  6FDF               	movwf	(??_deleteActionRange+4)& (0+255),b
 39132   0098BA  51DC               	movf	(??_deleteActionRange+1)& (0+255),w,b
 39133   0098BC  0A80               	xorlw	128
 39134   0098BE  59DF               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 39135   0098C0  B0D8               	btfsc	status,0,c
 39136   0098C2  D00A               	goto	l19606
 39137                           
 39138                           ; BSR set to: 1
 39139                           ;../event_consumerDualActionQueue.c: 541:                     writeEv(tableIndex, e, 0);
 39140   0098C4  C1E2  F1CE         	movff	deleteActionRange@e,writeEv@evNum
 39141   0098C8  0E00               	movlw	0
 39142   0098CA  6FCF               	movwf	writeEv@evVal& (0+255),b
 39143   0098CC  51E3               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39144   0098CE  EC66  F01B         	call	_writeEv
 39145                           
 39146                           ;../event_consumerDualActionQueue.c: 542:                     updated = TRUE;
 39147   0098D2  0E01               	movlw	1
 39148   0098D4  0101               	movlb	1	; () banked
 39149   0098D6  6FE0               	movwf	deleteActionRange@updated& (0+255),b
 39150   0098D8                     l19606:
 39151                           
 39152                           ; BSR set to: 1
 39153                           ;../event_consumerDualActionQueue.c: 544:             }
 39154   0098D8  2BE2               	incf	deleteActionRange@e& (0+255),f,b
 39155                           
 39156                           ; BSR set to: 1
 39157   0098DA  0E13               	movlw	19
 39158   0098DC  65E2               	cpfsgt	deleteActionRange@e& (0+255),b
 39159   0098DE  D7CE               	goto	l19598
 39160                           
 39161                           ; BSR set to: 1
 39162                           ;../event_consumerDualActionQueue.c: 545:             if (updated) {
 39163   0098E0  51E0               	movf	deleteActionRange@updated& (0+255),w,b
 39164   0098E2  B4D8               	btfsc	status,2,c
 39165   0098E4  D003               	goto	l19614
 39166                           
 39167                           ; BSR set to: 1
 39168                           ;../event_consumerDualActionQueue.c: 546:                 checkRemoveTableEntry(tableInd
      +                          ex);
 39169   0098E6  51E3               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39170   0098E8  EC8B  F05E         	call	_checkRemoveTableEntry
 39171   0098EC                     l19614:
 39172                           
 39173                           ;../event_consumerDualActionQueue.c: 549:     }
 39174   0098EC  0101               	movlb	1	; () banked
 39175   0098EE  2BE3               	incf	deleteActionRange@tableIndex& (0+255),f,b
 39176                           
 39177                           ; BSR set to: 1
 39178   0098F0  29E3               	incf	deleteActionRange@tableIndex& (0+255),w,b
 39179   0098F2  A4D8               	btfss	status,2,c
 39180   0098F4  D7B1               	goto	l19584
 39181                           
 39182                           ; BSR set to: 1
 39183                           ;../event_consumerDualActionQueue.c: 550:     flushFlashBlock();
 39184   0098F6  EC5E  F054         	call	_flushFlashBlock	;wreg free
 39185                           
 39186                           ;../event_consumerDualActionQueue.c: 552:     rebuildHashtable();
 39187   0098FA  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 39188   0098FE  0012               	return		;funcret
 39189   009900                     __end_of_deleteActionRange:
 39190                           	callstack 0
 39191                           
 39192 ;; *************** function _addEvent *****************
 39193 ;; Defined at:
 39194 ;;		line 938 in file "../../VLCBlib_PIC/event_teach_large.c"
 39195 ;; Parameters:    Size  Location     Type
 39196 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 39197 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 39198 ;;  evNum           1   33[BANK1 ] unsigned char 
 39199 ;;  evVal           1   34[BANK1 ] unsigned char 
 39200 ;;  forceOwnNN      1   35[BANK1 ] enum E12766
 39201 ;; Auto vars:     Size  Location     Type
 39202 ;;  e               1   42[BANK1 ] unsigned char 
 39203 ;;  f               1   41[BANK1 ] struct .
 39204 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 39205 ;;  error           1   40[BANK1 ] unsigned char 
 39206 ;; Return value:  Size  Location     Type
 39207 ;;                  1    wreg      unsigned char 
 39208 ;; Registers used:
 39209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39210 ;; Tracked objects:
 39211 ;;		On entry : 0/0
 39212 ;;		On exit  : 0/0
 39213 ;;		Unchanged: 0/0
 39214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39215 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39216 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39217 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39218 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39219 ;;Total ram usage:       15 bytes
 39220 ;; Hardware stack levels used: 1
 39221 ;; Hardware stack levels required when called: 21
 39222 ;; This function calls:
 39223 ;;		_findEvent
 39224 ;;		_flushFlashBlock
 39225 ;;		_readNVM
 39226 ;;		_rebuildHashtable
 39227 ;;		_writeEv
 39228 ;;		_writeNVM
 39229 ;; This function is called by:
 39230 ;;		_defaultEvents
 39231 ;;		_APP_addEvent
 39232 ;; This function uses a non-reentrant model
 39233 ;;
 39234                           
 39235                           	psect	text168
 39236   0065CA                     __ptext168:
 39237                           	callstack 0
 39238   0065CA                     _addEvent:
 39239                           	callstack 5
 39240                           
 39241                           ;../../VLCBlib_PIC/event_teach_large.c: 939:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 940:     uint8_t error;;../../VLCBlib_PIC/event_teach_large.c: 942: 
      +                              tableIndex = findEvent(nodeNumber, eventNumber);
 39242                           
 39243                           ;incstack = 0
 39244   0065CA  C1DA  F1BD         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 39245   0065CE  C1DB  F1BE         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 39246   0065D2  C1DC  F1BF         	movff	addEvent@eventNumber,findEvent@eventNumber
 39247   0065D6  C1DD  F1C0         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 39248   0065DA  EC00  F053         	call	_findEvent	;wreg free
 39249   0065DE  0101               	movlb	1	; () banked
 39250   0065E0  6FE8               	movwf	addEvent@tableIndex& (0+255),b
 39251                           
 39252                           ; BSR set to: 1
 39253                           ;../../VLCBlib_PIC/event_teach_large.c: 943:     if (tableIndex == 0xff) {
 39254   0065E2  29E8               	incf	addEvent@tableIndex& (0+255),w,b
 39255   0065E4  A4D8               	btfss	status,2,c
 39256   0065E6  D0E2               	goto	l19750
 39257                           
 39258                           ; BSR set to: 1
 39259                           ;../../VLCBlib_PIC/event_teach_large.c: 949:         if (evVal == 0) {
 39260   0065E8  51DF               	movf	addEvent@evVal& (0+255),w,b
 39261   0065EA  A4D8               	btfss	status,2,c
 39262   0065EC  D002               	goto	l19708
 39263   0065EE                     u19770:
 39264                           
 39265                           ;../../VLCBlib_PIC/event_teach_large.c: 950:             return 0;
 39266   0065EE  0E00               	movlw	0
 39267   0065F0  0012               	return	
 39268   0065F2                     l19708:
 39269                           
 39270                           ; BSR set to: 1
 39271                           ;../../VLCBlib_PIC/event_teach_large.c: 952:         error = 1;
 39272   0065F2  0E01               	movlw	1
 39273   0065F4  6FE5               	movwf	addEvent@error& (0+255),b
 39274                           
 39275                           ;../../VLCBlib_PIC/event_teach_large.c: 954:         for (tableIndex=0; tableIndex<255; 
      +                          tableIndex++) {
 39276   0065F6  0E00               	movlw	0
 39277   0065F8  6FE8               	movwf	addEvent@tableIndex& (0+255),b
 39278   0065FA                     l19714:
 39279                           
 39280                           ; BSR set to: 1
 39281                           ;../../VLCBlib_PIC/event_teach_large.c: 955:             EventTableFlags f;;../../VLCBli
      +                          b_PIC/event_teach_large.c: 956:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 39282   0065FA  51E8               	movf	addEvent@tableIndex& (0+255),w,b
 39283   0065FC  6FE1               	movwf	??_addEvent& (0+255),b
 39284   0065FE  6BE2               	clrf	(??_addEvent+1)& (0+255),b
 39285   006600  3BE1               	swapf	??_addEvent& (0+255),f,b
 39286   006602  3BE2               	swapf	(??_addEvent+1)& (0+255),f,b
 39287   006604  0EF0               	movlw	240
 39288   006606  17E2               	andwf	(??_addEvent+1)& (0+255),f,b
 39289   006608  51E1               	movf	??_addEvent& (0+255),w,b
 39290   00660A  0B0F               	andlw	15
 39291   00660C  13E2               	iorwf	(??_addEvent+1)& (0+255),f,b
 39292   00660E  0EF0               	movlw	240
 39293   006610  17E1               	andwf	??_addEvent& (0+255),f,b
 39294   006612  0E80               	movlw	128
 39295   006614  25E1               	addwf	??_addEvent& (0+255),w,b
 39296   006616  6FE3               	movwf	(??_addEvent+2)& (0+255),b
 39297   006618  0EEF               	movlw	239
 39298   00661A  21E2               	addwfc	(??_addEvent+1)& (0+255),w,b
 39299   00661C  6FE4               	movwf	(??_addEvent+3)& (0+255),b
 39300   00661E  C1E3  F091         	movff	??_addEvent+2,readNVM@index
 39301   006622  C1E4  F092         	movff	??_addEvent+3,readNVM@index+1
 39302   006626  0100               	movlb	0	; () banked
 39303   006628  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39304   00662A  0E01               	movlw	1
 39305   00662C  ECD1  F05A         	call	_readNVM
 39306   006630  0100               	movlb	0	; () banked
 39307   006632  5191               	movf	?_readNVM& (0+255),w,b
 39308   006634  0101               	movlb	1	; () banked
 39309   006636  6FE6               	movwf	addEvent@f& (0+255),b
 39310                           
 39311                           ; BSR set to: 1
 39312                           ;../../VLCBlib_PIC/event_teach_large.c: 957:             if (f.freeEntry) {
 39313   006638  AFE6               	btfss	addEvent@f& (0+255),7,b
 39314   00663A  D0AF               	goto	l19740
 39315                           
 39316                           ; BSR set to: 1
 39317                           ;../../VLCBlib_PIC/event_teach_large.c: 958:                 uint8_t e;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 960:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIn
      +                          dex+2, nodeNumber&0xFF);
 39318   00663C  51E8               	movf	addEvent@tableIndex& (0+255),w,b
 39319   00663E  0D10               	mullw	16
 39320   006640  CFF3 F1E1          	movff	prodl,??_addEvent
 39321   006644  CFF4 F1E2          	movff	prodh,??_addEvent+1
 39322   006648  0E82               	movlw	130
 39323   00664A  25E1               	addwf	??_addEvent& (0+255),w,b
 39324   00664C  6FE3               	movwf	(??_addEvent+2)& (0+255),b
 39325   00664E  0EEF               	movlw	239
 39326   006650  21E2               	addwfc	(??_addEvent+1)& (0+255),w,b
 39327   006652  6FE4               	movwf	(??_addEvent+3)& (0+255),b
 39328   006654  C1E3  F0A4         	movff	??_addEvent+2,writeNVM@index
 39329   006658  C1E4  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39330   00665C  0100               	movlb	0	; () banked
 39331   00665E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39332   006660  C1DA  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 39333   006664  0E01               	movlw	1
 39334   006666  EC61  F05D         	call	_writeNVM
 39335                           
 39336                           ;../../VLCBlib_PIC/event_teach_large.c: 961:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+2 +1, nodeNumber>>8);
 39337   00666A  0101               	movlb	1	; () banked
 39338   00666C  51E8               	movf	addEvent@tableIndex& (0+255),w,b
 39339   00666E  0D10               	mullw	16
 39340   006670  CFF3 F1E1          	movff	prodl,??_addEvent
 39341   006674  CFF4 F1E2          	movff	prodh,??_addEvent+1
 39342   006678  0E83               	movlw	131
 39343   00667A  25E1               	addwf	??_addEvent& (0+255),w,b
 39344   00667C  6FE3               	movwf	(??_addEvent+2)& (0+255),b
 39345   00667E  0EEF               	movlw	239
 39346   006680  21E2               	addwfc	(??_addEvent+1)& (0+255),w,b
 39347   006682  6FE4               	movwf	(??_addEvent+3)& (0+255),b
 39348   006684  C1E3  F0A4         	movff	??_addEvent+2,writeNVM@index
 39349   006688  C1E4  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39350   00668C  0100               	movlb	0	; () banked
 39351   00668E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39352   006690  0101               	movlb	1	; () banked
 39353   006692  51DB               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 39354   006694  0100               	movlb	0	; () banked
 39355   006696  6FA7               	movwf	writeNVM@value& (0+255),b
 39356   006698  0E01               	movlw	1
 39357   00669A  EC61  F05D         	call	_writeNVM
 39358                           
 39359                           ;../../VLCBlib_PIC/event_teach_large.c: 962:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4, eventNumber&0xFF);
 39360   00669E  0101               	movlb	1	; () banked
 39361   0066A0  51E8               	movf	addEvent@tableIndex& (0+255),w,b
 39362   0066A2  0D10               	mullw	16
 39363   0066A4  CFF3 F1E1          	movff	prodl,??_addEvent
 39364   0066A8  CFF4 F1E2          	movff	prodh,??_addEvent+1
 39365   0066AC  0E84               	movlw	132
 39366   0066AE  25E1               	addwf	??_addEvent& (0+255),w,b
 39367   0066B0  6FE3               	movwf	(??_addEvent+2)& (0+255),b
 39368   0066B2  0EEF               	movlw	239
 39369   0066B4  21E2               	addwfc	(??_addEvent+1)& (0+255),w,b
 39370   0066B6  6FE4               	movwf	(??_addEvent+3)& (0+255),b
 39371   0066B8  C1E3  F0A4         	movff	??_addEvent+2,writeNVM@index
 39372   0066BC  C1E4  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39373   0066C0  0100               	movlb	0	; () banked
 39374   0066C2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39375   0066C4  C1DC  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 39376   0066C8  0E01               	movlw	1
 39377   0066CA  EC61  F05D         	call	_writeNVM
 39378                           
 39379                           ;../../VLCBlib_PIC/event_teach_large.c: 963:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4 +1, eventNumber>>8);
 39380   0066CE  0101               	movlb	1	; () banked
 39381   0066D0  51E8               	movf	addEvent@tableIndex& (0+255),w,b
 39382   0066D2  0D10               	mullw	16
 39383   0066D4  CFF3 F1E1          	movff	prodl,??_addEvent
 39384   0066D8  CFF4 F1E2          	movff	prodh,??_addEvent+1
 39385   0066DC  0E85               	movlw	133
 39386   0066DE  25E1               	addwf	??_addEvent& (0+255),w,b
 39387   0066E0  6FE3               	movwf	(??_addEvent+2)& (0+255),b
 39388   0066E2  0EEF               	movlw	239
 39389   0066E4  21E2               	addwfc	(??_addEvent+1)& (0+255),w,b
 39390   0066E6  6FE4               	movwf	(??_addEvent+3)& (0+255),b
 39391   0066E8  C1E3  F0A4         	movff	??_addEvent+2,writeNVM@index
 39392   0066EC  C1E4  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39393   0066F0  0100               	movlb	0	; () banked
 39394   0066F2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39395   0066F4  0101               	movlb	1	; () banked
 39396   0066F6  51DD               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 39397   0066F8  0100               	movlb	0	; () banked
 39398   0066FA  6FA7               	movwf	writeNVM@value& (0+255),b
 39399   0066FC  0E01               	movlw	1
 39400   0066FE  EC61  F05D         	call	_writeNVM
 39401                           
 39402                           ;../../VLCBlib_PIC/event_teach_large.c: 964:                 f.asByte = 0;
 39403   006702  0E00               	movlw	0
 39404   006704  0101               	movlb	1	; () banked
 39405   006706  6FE6               	movwf	addEvent@f& (0+255),b
 39406                           
 39407                           ; BSR set to: 1
 39408                           ;../../VLCBlib_PIC/event_teach_large.c: 965:                 f.forceOwnNN = forceOwnNN;
 39409   006708  B1E0               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 39410   00670A  D002               	bra	u19795
 39411   00670C  9DE6               	bcf	addEvent@f& (0+255),6,b
 39412   00670E  D002               	bra	u19796
 39413   006710                     u19795:
 39414   006710  0101               	movlb	1	; () banked
 39415   006712  8DE6               	bsf	addEvent@f& (0+255),6,b
 39416   006714                     u19796:
 39417                           
 39418                           ; BSR set to: 1
 39419                           ;../../VLCBlib_PIC/event_teach_large.c: 966:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0, f.asByte);
 39420   006714  51E8               	movf	addEvent@tableIndex& (0+255),w,b
 39421   006716  6FE1               	movwf	??_addEvent& (0+255),b
 39422   006718  6BE2               	clrf	(??_addEvent+1)& (0+255),b
 39423   00671A  3BE1               	swapf	??_addEvent& (0+255),f,b
 39424   00671C  3BE2               	swapf	(??_addEvent+1)& (0+255),f,b
 39425   00671E  0EF0               	movlw	240
 39426   006720  17E2               	andwf	(??_addEvent+1)& (0+255),f,b
 39427   006722  51E1               	movf	??_addEvent& (0+255),w,b
 39428   006724  0B0F               	andlw	15
 39429   006726  13E2               	iorwf	(??_addEvent+1)& (0+255),f,b
 39430   006728  0EF0               	movlw	240
 39431   00672A  17E1               	andwf	??_addEvent& (0+255),f,b
 39432   00672C  0E80               	movlw	128
 39433   00672E  25E1               	addwf	??_addEvent& (0+255),w,b
 39434   006730  6FE3               	movwf	(??_addEvent+2)& (0+255),b
 39435   006732  0EEF               	movlw	239
 39436   006734  21E2               	addwfc	(??_addEvent+1)& (0+255),w,b
 39437   006736  6FE4               	movwf	(??_addEvent+3)& (0+255),b
 39438   006738  C1E3  F0A4         	movff	??_addEvent+2,writeNVM@index
 39439   00673C  C1E4  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39440   006740  0100               	movlb	0	; () banked
 39441   006742  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39442   006744  C1E6  F0A7         	movff	addEvent@f,writeNVM@value
 39443   006748  0E01               	movlw	1
 39444   00674A  EC61  F05D         	call	_writeNVM
 39445                           
 39446                           ;../../VLCBlib_PIC/event_teach_large.c: 968:                 for (e = 0; e < 10; e++) {
 39447   00674E  0E00               	movlw	0
 39448   006750  0101               	movlb	1	; () banked
 39449   006752  6FE7               	movwf	addEvent@e& (0+255),b
 39450   006754                     l19732:
 39451                           
 39452                           ; BSR set to: 1
 39453                           ;../../VLCBlib_PIC/event_teach_large.c: 969:                     writeNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +e, 0);
 39454   006754  51E8               	movf	addEvent@tableIndex& (0+255),w,b
 39455   006756  0D10               	mullw	16
 39456   006758  CFF3 F1E1          	movff	prodl,??_addEvent
 39457   00675C  CFF4 F1E2          	movff	prodh,??_addEvent+1
 39458   006760  51E7               	movf	addEvent@e& (0+255),w,b
 39459   006762  27E1               	addwf	??_addEvent& (0+255),f,b
 39460   006764  0E00               	movlw	0
 39461   006766  23E2               	addwfc	(??_addEvent+1)& (0+255),f,b
 39462   006768  0E86               	movlw	134
 39463   00676A  25E1               	addwf	??_addEvent& (0+255),w,b
 39464   00676C  6FE3               	movwf	(??_addEvent+2)& (0+255),b
 39465   00676E  0EEF               	movlw	239
 39466   006770  21E2               	addwfc	(??_addEvent+1)& (0+255),w,b
 39467   006772  6FE4               	movwf	(??_addEvent+3)& (0+255),b
 39468   006774  C1E3  F0A4         	movff	??_addEvent+2,writeNVM@index
 39469   006778  C1E4  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39470   00677C  0100               	movlb	0	; () banked
 39471   00677E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39472   006780  0E00               	movlw	0
 39473   006782  6FA7               	movwf	writeNVM@value& (0+255),b
 39474   006784  0E01               	movlw	1
 39475   006786  EC61  F05D         	call	_writeNVM
 39476                           
 39477                           ;../../VLCBlib_PIC/event_teach_large.c: 970:                 }
 39478   00678A  0101               	movlb	1	; () banked
 39479   00678C  2BE7               	incf	addEvent@e& (0+255),f,b
 39480                           
 39481                           ; BSR set to: 1
 39482   00678E  0E09               	movlw	9
 39483   006790  65E7               	cpfsgt	addEvent@e& (0+255),b
 39484   006792  D7E0               	goto	l19732
 39485                           
 39486                           ; BSR set to: 1
 39487                           ;../../VLCBlib_PIC/event_teach_large.c: 971:                 error = 0;
 39488   006794  0E00               	movlw	0
 39489   006796  6FE5               	movwf	addEvent@error& (0+255),b
 39490                           
 39491                           ;../../VLCBlib_PIC/event_teach_large.c: 972:                 break;
 39492   006798  D004               	goto	u19810
 39493   00679A                     l19740:
 39494                           
 39495                           ; BSR set to: 1
 39496                           ;../../VLCBlib_PIC/event_teach_large.c: 974:         }
 39497   00679A  2BE8               	incf	addEvent@tableIndex& (0+255),f,b
 39498                           
 39499                           ; BSR set to: 1
 39500   00679C  29E8               	incf	addEvent@tableIndex& (0+255),w,b
 39501   00679E  A4D8               	btfss	status,2,c
 39502   0067A0  D72C               	goto	l19714
 39503   0067A2                     u19810:
 39504                           
 39505                           ; BSR set to: 1
 39506                           ;../../VLCBlib_PIC/event_teach_large.c: 975:         if (error) {
 39507   0067A2  51E5               	movf	addEvent@error& (0+255),w,b
 39508   0067A4  B4D8               	btfsc	status,2,c
 39509   0067A6  D002               	goto	l19750
 39510                           
 39511                           ; BSR set to: 1
 39512                           ;../../VLCBlib_PIC/event_teach_large.c: 976:             return CMDERR_TOO_MANY_EVENTS;
 39513   0067A8  0E04               	movlw	4
 39514   0067AA  0012               	return	
 39515   0067AC                     l19750:
 39516                           
 39517                           ; BSR set to: 1
 39518                           ;../../VLCBlib_PIC/event_teach_large.c: 980:     if (writeEv(tableIndex, evNum, evVal)) 
      +                          {
 39519   0067AC  C1DE  F1CE         	movff	addEvent@evNum,writeEv@evNum
 39520   0067B0  C1DF  F1CF         	movff	addEvent@evVal,writeEv@evVal
 39521   0067B4  51E8               	movf	addEvent@tableIndex& (0+255),w,b
 39522   0067B6  EC66  F01B         	call	_writeEv
 39523   0067BA  0900               	iorlw	0
 39524   0067BC  B4D8               	btfsc	status,2,c
 39525   0067BE  D002               	goto	l19756
 39526                           
 39527                           ;../../VLCBlib_PIC/event_teach_large.c: 982:         return CMDERR_INV_EV_IDX;
 39528   0067C0  0E06               	movlw	6
 39529   0067C2  0012               	return	
 39530   0067C4                     l19756:
 39531                           
 39532                           ;../../VLCBlib_PIC/event_teach_large.c: 985:     flushFlashBlock();
 39533   0067C4  EC5E  F054         	call	_flushFlashBlock	;wreg free
 39534                           
 39535                           ;../../VLCBlib_PIC/event_teach_large.c: 987:     rebuildHashtable();
 39536   0067C8  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 39537   0067CC  D710               	goto	u19770
 39538   0067CE                     __end_of_addEvent:
 39539                           	callstack 0
 39540                           
 39541 ;; *************** function _writeEv *****************
 39542 ;; Defined at:
 39543 ;;		line 1039 in file "../../VLCBlib_PIC/event_teach_large.c"
 39544 ;; Parameters:    Size  Location     Type
 39545 ;;  tableIndex      1    wreg     unsigned char 
 39546 ;;  evNum           1   17[BANK1 ] unsigned char 
 39547 ;;  evVal           1   18[BANK1 ] unsigned char 
 39548 ;; Auto vars:     Size  Location     Type
 39549 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 39550 ;;  e               1   25[BANK1 ] unsigned char 
 39551 ;;  nextF           1   24[BANK1 ] struct .
 39552 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 39553 ;;  f               1   26[BANK1 ] struct .
 39554 ;;  startIndex      1   23[BANK1 ] unsigned char 
 39555 ;; Return value:  Size  Location     Type
 39556 ;;                  1    wreg      unsigned char 
 39557 ;; Registers used:
 39558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39559 ;; Tracked objects:
 39560 ;;		On entry : 0/0
 39561 ;;		On exit  : 0/0
 39562 ;;		Unchanged: 0/0
 39563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39564 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39565 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39566 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39567 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39568 ;;Total ram usage:       12 bytes
 39569 ;; Hardware stack levels used: 1
 39570 ;; Hardware stack levels required when called: 20
 39571 ;; This function calls:
 39572 ;;		_checkRemoveTableEntry
 39573 ;;		_readNVM
 39574 ;;		_writeNVM
 39575 ;; This function is called by:
 39576 ;;		_deleteActionRange
 39577 ;;		_APP_addEvent
 39578 ;;		_addEvent
 39579 ;;		_deleteHappeningRange
 39580 ;; This function uses a non-reentrant model
 39581 ;;
 39582                           
 39583                           	psect	text169
 39584   0036CC                     __ptext169:
 39585                           	callstack 0
 39586   0036CC                     _writeEv:
 39587                           	callstack 6
 39588                           
 39589                           ;incstack = 0
 39590                           ;writeEv@tableIndex stored from wreg
 39591   0036CC  0101               	movlb	1	; () banked
 39592   0036CE  6FD8               	movwf	writeEv@tableIndex& (0+255),b
 39593                           
 39594                           ;../../VLCBlib_PIC/event_teach_large.c: 1040:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1041:     uint8_t startIndex = tableIndex;
 39595   0036D0  C1D8  F1D4         	movff	writeEv@tableIndex,writeEv@startIndex
 39596                           
 39597                           ;../../VLCBlib_PIC/event_teach_large.c: 1042:     if (evNum >= 20) {
 39598   0036D4  0E13               	movlw	19
 39599   0036D6  0101               	movlb	1	; () banked
 39600   0036D8  65CE               	cpfsgt	writeEv@evNum& (0+255),b
 39601   0036DA  D14F               	goto	l19392
 39602                           
 39603                           ; BSR set to: 1
 39604                           ;../../VLCBlib_PIC/event_teach_large.c: 1043:         return CMDERR_INV_EV_IDX;
 39605   0036DC  0E06               	movlw	6
 39606   0036DE  0012               	return	
 39607   0036E0                     l19330:
 39608                           
 39609                           ; BSR set to: 1
 39610                           ;../../VLCBlib_PIC/event_teach_large.c: 1046:         uint8_t nextIdx;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1049:         evNum -= 10;
 39611   0036E0  0E0A               	movlw	10
 39612   0036E2  5FCE               	subwf	writeEv@evNum& (0+255),f,b
 39613                           
 39614                           ; BSR set to: 1
 39615                           ;../../VLCBlib_PIC/event_teach_large.c: 1050:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39616   0036E4  51D8               	movf	writeEv@tableIndex& (0+255),w,b
 39617   0036E6  6FD0               	movwf	??_writeEv& (0+255),b
 39618   0036E8  6BD1               	clrf	(??_writeEv+1)& (0+255),b
 39619   0036EA  3BD0               	swapf	??_writeEv& (0+255),f,b
 39620   0036EC  3BD1               	swapf	(??_writeEv+1)& (0+255),f,b
 39621   0036EE  0EF0               	movlw	240
 39622   0036F0  17D1               	andwf	(??_writeEv+1)& (0+255),f,b
 39623   0036F2  51D0               	movf	??_writeEv& (0+255),w,b
 39624   0036F4  0B0F               	andlw	15
 39625   0036F6  13D1               	iorwf	(??_writeEv+1)& (0+255),f,b
 39626   0036F8  0EF0               	movlw	240
 39627   0036FA  17D0               	andwf	??_writeEv& (0+255),f,b
 39628   0036FC  0E80               	movlw	128
 39629   0036FE  25D0               	addwf	??_writeEv& (0+255),w,b
 39630   003700  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39631   003702  0EEF               	movlw	239
 39632   003704  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39633   003706  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39634   003708  C1D2  F091         	movff	??_writeEv+2,readNVM@index
 39635   00370C  C1D3  F092         	movff	??_writeEv+3,readNVM@index+1
 39636   003710  0100               	movlb	0	; () banked
 39637   003712  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39638   003714  0E01               	movlw	1
 39639   003716  ECD1  F05A         	call	_readNVM
 39640   00371A  0100               	movlb	0	; () banked
 39641   00371C  5191               	movf	?_readNVM& (0+255),w,b
 39642   00371E  0101               	movlb	1	; () banked
 39643   003720  6FD7               	movwf	writeEv@f& (0+255),b
 39644                           
 39645                           ; BSR set to: 1
 39646                           ;../../VLCBlib_PIC/event_teach_large.c: 1052:         if (f.continued) {
 39647   003722  A9D7               	btfss	writeEv@f& (0+255),4,b
 39648   003724  D01E               	goto	l19344
 39649                           
 39650                           ; BSR set to: 1
 39651                           ;../../VLCBlib_PIC/event_teach_large.c: 1053:             tableIndex = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39652   003726  51D8               	movf	writeEv@tableIndex& (0+255),w,b
 39653   003728  0D10               	mullw	16
 39654   00372A  CFF3 F1D0          	movff	prodl,??_writeEv
 39655   00372E  CFF4 F1D1          	movff	prodh,??_writeEv+1
 39656   003732  0E81               	movlw	129
 39657   003734  25D0               	addwf	??_writeEv& (0+255),w,b
 39658   003736  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39659   003738  0EEF               	movlw	239
 39660   00373A  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39661   00373C  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39662   00373E  C1D2  F091         	movff	??_writeEv+2,readNVM@index
 39663   003742  C1D3  F092         	movff	??_writeEv+3,readNVM@index+1
 39664   003746  0100               	movlb	0	; () banked
 39665   003748  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39666   00374A  0E01               	movlw	1
 39667   00374C  ECD1  F05A         	call	_readNVM
 39668   003750  0100               	movlb	0	; () banked
 39669   003752  5191               	movf	?_readNVM& (0+255),w,b
 39670   003754  0101               	movlb	1	; () banked
 39671   003756  6FD8               	movwf	writeEv@tableIndex& (0+255),b
 39672                           
 39673                           ; BSR set to: 1
 39674                           ;../../VLCBlib_PIC/event_teach_large.c: 1054:             if (tableIndex == 0xff) {
 39675   003758  29D8               	incf	writeEv@tableIndex& (0+255),w,b
 39676   00375A  A4D8               	btfss	status,2,c
 39677   00375C  D10E               	goto	l19392
 39678                           
 39679                           ; BSR set to: 1
 39680                           ;../../VLCBlib_PIC/event_teach_large.c: 1055:                 return CMDERR_INVALID_EVEN
      +                          T;
 39681   00375E  0E07               	movlw	7
 39682   003760  0012               	return	
 39683   003762                     l19344:
 39684                           
 39685                           ; BSR set to: 1
 39686                           ;../../VLCBlib_PIC/event_teach_large.c: 1064:             if (evVal == 0) {
 39687   003762  51CF               	movf	writeEv@evVal& (0+255),w,b
 39688   003764  A4D8               	btfss	status,2,c
 39689   003766  D002               	goto	l19350
 39690   003768                     u19220:
 39691                           
 39692                           ;../../VLCBlib_PIC/event_teach_large.c: 1065:                 return 0;
 39693   003768  0E00               	movlw	0
 39694   00376A  0012               	return	
 39695   00376C                     l19350:
 39696                           
 39697                           ; BSR set to: 1
 39698                           ;../../VLCBlib_PIC/event_teach_large.c: 1068:             for (nextIdx = tableIndex+1 ; 
      +                          nextIdx < 255; nextIdx++) {
 39699   00376C  29D8               	incf	writeEv@tableIndex& (0+255),w,b
 39700   00376E  6FD9               	movwf	writeEv@nextIdx& (0+255),b
 39701   003770  D0FB               	goto	l19384
 39702   003772                     l19354:
 39703                           
 39704                           ; BSR set to: 1
 39705                           ;../../VLCBlib_PIC/event_teach_large.c: 1069:                 EventTableFlags nextF;;../
      +                          ../VLCBlib_PIC/event_teach_large.c: 1070:                 nextF.asByte = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+0);
 39706   003772  51D9               	movf	writeEv@nextIdx& (0+255),w,b
 39707   003774  6FD0               	movwf	??_writeEv& (0+255),b
 39708   003776  6BD1               	clrf	(??_writeEv+1)& (0+255),b
 39709   003778  3BD0               	swapf	??_writeEv& (0+255),f,b
 39710   00377A  3BD1               	swapf	(??_writeEv+1)& (0+255),f,b
 39711   00377C  0EF0               	movlw	240
 39712   00377E  17D1               	andwf	(??_writeEv+1)& (0+255),f,b
 39713   003780  51D0               	movf	??_writeEv& (0+255),w,b
 39714   003782  0B0F               	andlw	15
 39715   003784  13D1               	iorwf	(??_writeEv+1)& (0+255),f,b
 39716   003786  0EF0               	movlw	240
 39717   003788  17D0               	andwf	??_writeEv& (0+255),f,b
 39718   00378A  0E80               	movlw	128
 39719   00378C  25D0               	addwf	??_writeEv& (0+255),w,b
 39720   00378E  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39721   003790  0EEF               	movlw	239
 39722   003792  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39723   003794  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39724   003796  C1D2  F091         	movff	??_writeEv+2,readNVM@index
 39725   00379A  C1D3  F092         	movff	??_writeEv+3,readNVM@index+1
 39726   00379E  0100               	movlb	0	; () banked
 39727   0037A0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39728   0037A2  0E01               	movlw	1
 39729   0037A4  ECD1  F05A         	call	_readNVM
 39730   0037A8  0100               	movlb	0	; () banked
 39731   0037AA  5191               	movf	?_readNVM& (0+255),w,b
 39732   0037AC  0101               	movlb	1	; () banked
 39733   0037AE  6FD5               	movwf	writeEv@nextF& (0+255),b
 39734                           
 39735                           ; BSR set to: 1
 39736                           ;../../VLCBlib_PIC/event_teach_large.c: 1071:                 if (nextF.freeEntry) {
 39737   0037B0  AFD5               	btfss	writeEv@nextF& (0+255),7,b
 39738   0037B2  D0D9               	goto	l19382
 39739                           
 39740                           ; BSR set to: 1
 39741                           ;../../VLCBlib_PIC/event_teach_large.c: 1072:                     uint8_t e;;../../VLCBl
      +                          ib_PIC/event_teach_large.c: 1074:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*nextIdx+2, 0xff);
 39742   0037B4  51D9               	movf	writeEv@nextIdx& (0+255),w,b
 39743   0037B6  0D10               	mullw	16
 39744   0037B8  CFF3 F1D0          	movff	prodl,??_writeEv
 39745   0037BC  CFF4 F1D1          	movff	prodh,??_writeEv+1
 39746   0037C0  0E82               	movlw	130
 39747   0037C2  25D0               	addwf	??_writeEv& (0+255),w,b
 39748   0037C4  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39749   0037C6  0EEF               	movlw	239
 39750   0037C8  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39751   0037CA  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39752   0037CC  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 39753   0037D0  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39754   0037D4  0100               	movlb	0	; () banked
 39755   0037D6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39756   0037D8  0EFF               	movlw	255
 39757   0037DA  6FA7               	movwf	writeNVM@value& (0+255),b
 39758   0037DC  0E01               	movlw	1
 39759   0037DE  EC61  F05D         	call	_writeNVM
 39760                           
 39761                           ;../../VLCBlib_PIC/event_teach_large.c: 1075:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+2 +1, 0xff);
 39762   0037E2  0101               	movlb	1	; () banked
 39763   0037E4  51D9               	movf	writeEv@nextIdx& (0+255),w,b
 39764   0037E6  0D10               	mullw	16
 39765   0037E8  CFF3 F1D0          	movff	prodl,??_writeEv
 39766   0037EC  CFF4 F1D1          	movff	prodh,??_writeEv+1
 39767   0037F0  0E83               	movlw	131
 39768   0037F2  25D0               	addwf	??_writeEv& (0+255),w,b
 39769   0037F4  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39770   0037F6  0EEF               	movlw	239
 39771   0037F8  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39772   0037FA  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39773   0037FC  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 39774   003800  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39775   003804  0100               	movlb	0	; () banked
 39776   003806  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39777   003808  0EFF               	movlw	255
 39778   00380A  6FA7               	movwf	writeNVM@value& (0+255),b
 39779   00380C  0E01               	movlw	1
 39780   00380E  EC61  F05D         	call	_writeNVM
 39781                           
 39782                           ;../../VLCBlib_PIC/event_teach_large.c: 1076:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4, 0xff);
 39783   003812  0101               	movlb	1	; () banked
 39784   003814  51D9               	movf	writeEv@nextIdx& (0+255),w,b
 39785   003816  0D10               	mullw	16
 39786   003818  CFF3 F1D0          	movff	prodl,??_writeEv
 39787   00381C  CFF4 F1D1          	movff	prodh,??_writeEv+1
 39788   003820  0E84               	movlw	132
 39789   003822  25D0               	addwf	??_writeEv& (0+255),w,b
 39790   003824  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39791   003826  0EEF               	movlw	239
 39792   003828  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39793   00382A  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39794   00382C  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 39795   003830  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39796   003834  0100               	movlb	0	; () banked
 39797   003836  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39798   003838  0EFF               	movlw	255
 39799   00383A  6FA7               	movwf	writeNVM@value& (0+255),b
 39800   00383C  0E01               	movlw	1
 39801   00383E  EC61  F05D         	call	_writeNVM
 39802                           
 39803                           ;../../VLCBlib_PIC/event_teach_large.c: 1077:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4 +1, 0xff);
 39804   003842  0101               	movlb	1	; () banked
 39805   003844  51D9               	movf	writeEv@nextIdx& (0+255),w,b
 39806   003846  0D10               	mullw	16
 39807   003848  CFF3 F1D0          	movff	prodl,??_writeEv
 39808   00384C  CFF4 F1D1          	movff	prodh,??_writeEv+1
 39809   003850  0E85               	movlw	133
 39810   003852  25D0               	addwf	??_writeEv& (0+255),w,b
 39811   003854  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39812   003856  0EEF               	movlw	239
 39813   003858  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39814   00385A  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39815   00385C  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 39816   003860  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39817   003864  0100               	movlb	0	; () banked
 39818   003866  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39819   003868  0EFF               	movlw	255
 39820   00386A  6FA7               	movwf	writeNVM@value& (0+255),b
 39821   00386C  0E01               	movlw	1
 39822   00386E  EC61  F05D         	call	_writeNVM
 39823                           
 39824                           ;../../VLCBlib_PIC/event_teach_large.c: 1078:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+0, 0x20);
 39825   003872  0101               	movlb	1	; () banked
 39826   003874  51D9               	movf	writeEv@nextIdx& (0+255),w,b
 39827   003876  6FD0               	movwf	??_writeEv& (0+255),b
 39828   003878  6BD1               	clrf	(??_writeEv+1)& (0+255),b
 39829   00387A  3BD0               	swapf	??_writeEv& (0+255),f,b
 39830   00387C  3BD1               	swapf	(??_writeEv+1)& (0+255),f,b
 39831   00387E  0EF0               	movlw	240
 39832   003880  17D1               	andwf	(??_writeEv+1)& (0+255),f,b
 39833   003882  51D0               	movf	??_writeEv& (0+255),w,b
 39834   003884  0B0F               	andlw	15
 39835   003886  13D1               	iorwf	(??_writeEv+1)& (0+255),f,b
 39836   003888  0EF0               	movlw	240
 39837   00388A  17D0               	andwf	??_writeEv& (0+255),f,b
 39838   00388C  0E80               	movlw	128
 39839   00388E  25D0               	addwf	??_writeEv& (0+255),w,b
 39840   003890  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39841   003892  0EEF               	movlw	239
 39842   003894  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39843   003896  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39844   003898  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 39845   00389C  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39846   0038A0  0100               	movlb	0	; () banked
 39847   0038A2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39848   0038A4  0E20               	movlw	32
 39849   0038A6  6FA7               	movwf	writeNVM@value& (0+255),b
 39850   0038A8  0E01               	movlw	1
 39851   0038AA  EC61  F05D         	call	_writeNVM
 39852                           
 39853                           ;../../VLCBlib_PIC/event_teach_large.c: 1079:                     for (e = 0; e < 10; e+
      +                          +) {
 39854   0038AE  0E00               	movlw	0
 39855   0038B0  0101               	movlb	1	; () banked
 39856   0038B2  6FD6               	movwf	writeEv@e& (0+255),b
 39857   0038B4                     l19368:
 39858                           
 39859                           ; BSR set to: 1
 39860                           ;../../VLCBlib_PIC/event_teach_large.c: 1080:                         writeNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*nextIdx+6 +e, 0);
 39861   0038B4  51D9               	movf	writeEv@nextIdx& (0+255),w,b
 39862   0038B6  0D10               	mullw	16
 39863   0038B8  CFF3 F1D0          	movff	prodl,??_writeEv
 39864   0038BC  CFF4 F1D1          	movff	prodh,??_writeEv+1
 39865   0038C0  51D6               	movf	writeEv@e& (0+255),w,b
 39866   0038C2  27D0               	addwf	??_writeEv& (0+255),f,b
 39867   0038C4  0E00               	movlw	0
 39868   0038C6  23D1               	addwfc	(??_writeEv+1)& (0+255),f,b
 39869   0038C8  0E86               	movlw	134
 39870   0038CA  25D0               	addwf	??_writeEv& (0+255),w,b
 39871   0038CC  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39872   0038CE  0EEF               	movlw	239
 39873   0038D0  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39874   0038D2  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39875   0038D4  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 39876   0038D8  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39877   0038DC  0100               	movlb	0	; () banked
 39878   0038DE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39879   0038E0  0E00               	movlw	0
 39880   0038E2  6FA7               	movwf	writeNVM@value& (0+255),b
 39881   0038E4  0E01               	movlw	1
 39882   0038E6  EC61  F05D         	call	_writeNVM
 39883                           
 39884                           ;../../VLCBlib_PIC/event_teach_large.c: 1081:                     }
 39885   0038EA  0101               	movlb	1	; () banked
 39886   0038EC  2BD6               	incf	writeEv@e& (0+255),f,b
 39887                           
 39888                           ; BSR set to: 1
 39889   0038EE  0E09               	movlw	9
 39890   0038F0  65D6               	cpfsgt	writeEv@e& (0+255),b
 39891   0038F2  D7E0               	goto	l19368
 39892                           
 39893                           ; BSR set to: 1
 39894                           ;../../VLCBlib_PIC/event_teach_large.c: 1083:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+1, nextIdx);
 39895   0038F4  51D8               	movf	writeEv@tableIndex& (0+255),w,b
 39896   0038F6  0D10               	mullw	16
 39897   0038F8  CFF3 F1D0          	movff	prodl,??_writeEv
 39898   0038FC  CFF4 F1D1          	movff	prodh,??_writeEv+1
 39899   003900  0E81               	movlw	129
 39900   003902  25D0               	addwf	??_writeEv& (0+255),w,b
 39901   003904  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39902   003906  0EEF               	movlw	239
 39903   003908  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39904   00390A  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39905   00390C  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 39906   003910  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39907   003914  0100               	movlb	0	; () banked
 39908   003916  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39909   003918  C1D9  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 39910   00391C  0E01               	movlw	1
 39911   00391E  EC61  F05D         	call	_writeNVM
 39912                           
 39913                           ;../../VLCBlib_PIC/event_teach_large.c: 1085:                     f.continued = 1;
 39914   003922  0101               	movlb	1	; () banked
 39915   003924  89D7               	bsf	writeEv@f& (0+255),4,b
 39916                           
 39917                           ; BSR set to: 1
 39918                           ;../../VLCBlib_PIC/event_teach_large.c: 1086:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0, f.asByte);
 39919   003926  51D8               	movf	writeEv@tableIndex& (0+255),w,b
 39920   003928  6FD0               	movwf	??_writeEv& (0+255),b
 39921   00392A  6BD1               	clrf	(??_writeEv+1)& (0+255),b
 39922   00392C  3BD0               	swapf	??_writeEv& (0+255),f,b
 39923   00392E  3BD1               	swapf	(??_writeEv+1)& (0+255),f,b
 39924   003930  0EF0               	movlw	240
 39925   003932  17D1               	andwf	(??_writeEv+1)& (0+255),f,b
 39926   003934  51D0               	movf	??_writeEv& (0+255),w,b
 39927   003936  0B0F               	andlw	15
 39928   003938  13D1               	iorwf	(??_writeEv+1)& (0+255),f,b
 39929   00393A  0EF0               	movlw	240
 39930   00393C  17D0               	andwf	??_writeEv& (0+255),f,b
 39931   00393E  0E80               	movlw	128
 39932   003940  25D0               	addwf	??_writeEv& (0+255),w,b
 39933   003942  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39934   003944  0EEF               	movlw	239
 39935   003946  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39936   003948  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39937   00394A  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 39938   00394E  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39939   003952  0100               	movlb	0	; () banked
 39940   003954  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39941   003956  C1D7  F0A7         	movff	writeEv@f,writeNVM@value
 39942   00395A  0E01               	movlw	1
 39943   00395C  EC61  F05D         	call	_writeNVM
 39944                           
 39945                           ;../../VLCBlib_PIC/event_teach_large.c: 1087:                     tableIndex = nextIdx;
 39946   003960  C1D9  F1D8         	movff	writeEv@nextIdx,writeEv@tableIndex
 39947                           
 39948                           ;../../VLCBlib_PIC/event_teach_large.c: 1088:                     break;
 39949   003964  D004               	goto	u19260
 39950   003966                     l19382:
 39951                           
 39952                           ; BSR set to: 1
 39953                           ;../../VLCBlib_PIC/event_teach_large.c: 1090:             }
 39954   003966  2BD9               	incf	writeEv@nextIdx& (0+255),f,b
 39955   003968                     l19384:
 39956                           
 39957                           ; BSR set to: 1
 39958   003968  29D9               	incf	writeEv@nextIdx& (0+255),w,b
 39959   00396A  A4D8               	btfss	status,2,c
 39960   00396C  D702               	goto	l19354
 39961   00396E                     u19260:
 39962                           
 39963                           ;../../VLCBlib_PIC/event_teach_large.c: 1091:             if (nextIdx >= 255) {
 39964   00396E  0101               	movlb	1	; () banked
 39965   003970  29D9               	incf	writeEv@nextIdx& (0+255),w,b
 39966   003972  A4D8               	btfss	status,2,c
 39967   003974  D002               	goto	l19392
 39968                           
 39969                           ; BSR set to: 1
 39970                           ;../../VLCBlib_PIC/event_teach_large.c: 1093:                 return CMDERR_TOO_MANY_EVE
      +                          NTS;
 39971   003976  0E04               	movlw	4
 39972   003978  0012               	return	
 39973   00397A                     l19392:
 39974                           
 39975                           ; BSR set to: 1
 39976                           ;../../VLCBlib_PIC/event_teach_large.c: 1045:     while (evNum >= 10) {
 39977   00397A  0E0A               	movlw	10
 39978   00397C  61CE               	cpfslt	writeEv@evNum& (0+255),b
 39979   00397E  D6B0               	goto	l19330
 39980                           
 39981                           ; BSR set to: 1
 39982                           ;../../VLCBlib_PIC/event_teach_large.c: 1098:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*t
      +                          ableIndex+6 +evNum, evVal);
 39983   003980  51D8               	movf	writeEv@tableIndex& (0+255),w,b
 39984   003982  0D10               	mullw	16
 39985   003984  CFF3 F1D0          	movff	prodl,??_writeEv
 39986   003988  CFF4 F1D1          	movff	prodh,??_writeEv+1
 39987   00398C  51CE               	movf	writeEv@evNum& (0+255),w,b
 39988   00398E  27D0               	addwf	??_writeEv& (0+255),f,b
 39989   003990  0E00               	movlw	0
 39990   003992  23D1               	addwfc	(??_writeEv+1)& (0+255),f,b
 39991   003994  0E86               	movlw	134
 39992   003996  25D0               	addwf	??_writeEv& (0+255),w,b
 39993   003998  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 39994   00399A  0EEF               	movlw	239
 39995   00399C  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 39996   00399E  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 39997   0039A0  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 39998   0039A4  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39999   0039A8  0100               	movlb	0	; () banked
 40000   0039AA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40001   0039AC  C1CF  F0A7         	movff	writeEv@evVal,writeNVM@value
 40002   0039B0  0E01               	movlw	1
 40003   0039B2  EC61  F05D         	call	_writeNVM
 40004                           
 40005                           ;../../VLCBlib_PIC/event_teach_large.c: 1100:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 40006   0039B6  0101               	movlb	1	; () banked
 40007   0039B8  51D8               	movf	writeEv@tableIndex& (0+255),w,b
 40008   0039BA  6FD0               	movwf	??_writeEv& (0+255),b
 40009   0039BC  6BD1               	clrf	(??_writeEv+1)& (0+255),b
 40010   0039BE  3BD0               	swapf	??_writeEv& (0+255),f,b
 40011   0039C0  3BD1               	swapf	(??_writeEv+1)& (0+255),f,b
 40012   0039C2  0EF0               	movlw	240
 40013   0039C4  17D1               	andwf	(??_writeEv+1)& (0+255),f,b
 40014   0039C6  51D0               	movf	??_writeEv& (0+255),w,b
 40015   0039C8  0B0F               	andlw	15
 40016   0039CA  13D1               	iorwf	(??_writeEv+1)& (0+255),f,b
 40017   0039CC  0EF0               	movlw	240
 40018   0039CE  17D0               	andwf	??_writeEv& (0+255),f,b
 40019   0039D0  0E80               	movlw	128
 40020   0039D2  25D0               	addwf	??_writeEv& (0+255),w,b
 40021   0039D4  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 40022   0039D6  0EEF               	movlw	239
 40023   0039D8  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 40024   0039DA  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 40025   0039DC  C1D2  F091         	movff	??_writeEv+2,readNVM@index
 40026   0039E0  C1D3  F092         	movff	??_writeEv+3,readNVM@index+1
 40027   0039E4  0100               	movlb	0	; () banked
 40028   0039E6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40029   0039E8  0E01               	movlw	1
 40030   0039EA  ECD1  F05A         	call	_readNVM
 40031   0039EE  0100               	movlb	0	; () banked
 40032   0039F0  5191               	movf	?_readNVM& (0+255),w,b
 40033   0039F2  0101               	movlb	1	; () banked
 40034   0039F4  6FD7               	movwf	writeEv@f& (0+255),b
 40035                           
 40036                           ; BSR set to: 1
 40037                           ;../../VLCBlib_PIC/event_teach_large.c: 1101:     if (f.eVsUsed <= evNum) {
 40038   0039F6  51D7               	movf	writeEv@f& (0+255),w,b
 40039   0039F8  0B0F               	andlw	15
 40040   0039FA  6FD0               	movwf	??_writeEv& (0+255),b
 40041   0039FC  51D0               	movf	??_writeEv& (0+255),w,b
 40042   0039FE  5DCE               	subwf	writeEv@evNum& (0+255),w,b
 40043   003A00  A0D8               	btfss	status,0,c
 40044   003A02  D026               	goto	l19404
 40045                           
 40046                           ; BSR set to: 1
 40047                           ;../../VLCBlib_PIC/event_teach_large.c: 1102:         f.eVsUsed = evNum+1U;
 40048   003A04  C1CE  F1D0         	movff	writeEv@evNum,??_writeEv
 40049   003A08  0E01               	movlw	1
 40050   003A0A  27D0               	addwf	??_writeEv& (0+255),f,b
 40051   003A0C  51D7               	movf	writeEv@f& (0+255),w,b
 40052   003A0E  19D0               	xorwf	??_writeEv& (0+255),w,b
 40053   003A10  0BF0               	andlw	-16
 40054   003A12  19D0               	xorwf	??_writeEv& (0+255),w,b
 40055   003A14  6FD7               	movwf	writeEv@f& (0+255),b
 40056                           
 40057                           ; BSR set to: 1
 40058                           ;../../VLCBlib_PIC/event_teach_large.c: 1103:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*tableIndex+0, f.asByte);
 40059   003A16  51D8               	movf	writeEv@tableIndex& (0+255),w,b
 40060   003A18  6FD0               	movwf	??_writeEv& (0+255),b
 40061   003A1A  6BD1               	clrf	(??_writeEv+1)& (0+255),b
 40062   003A1C  3BD0               	swapf	??_writeEv& (0+255),f,b
 40063   003A1E  3BD1               	swapf	(??_writeEv+1)& (0+255),f,b
 40064   003A20  0EF0               	movlw	240
 40065   003A22  17D1               	andwf	(??_writeEv+1)& (0+255),f,b
 40066   003A24  51D0               	movf	??_writeEv& (0+255),w,b
 40067   003A26  0B0F               	andlw	15
 40068   003A28  13D1               	iorwf	(??_writeEv+1)& (0+255),f,b
 40069   003A2A  0EF0               	movlw	240
 40070   003A2C  17D0               	andwf	??_writeEv& (0+255),f,b
 40071   003A2E  0E80               	movlw	128
 40072   003A30  25D0               	addwf	??_writeEv& (0+255),w,b
 40073   003A32  6FD2               	movwf	(??_writeEv+2)& (0+255),b
 40074   003A34  0EEF               	movlw	239
 40075   003A36  21D1               	addwfc	(??_writeEv+1)& (0+255),w,b
 40076   003A38  6FD3               	movwf	(??_writeEv+3)& (0+255),b
 40077   003A3A  C1D2  F0A4         	movff	??_writeEv+2,writeNVM@index
 40078   003A3E  C1D3  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 40079   003A42  0100               	movlb	0	; () banked
 40080   003A44  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40081   003A46  C1D7  F0A7         	movff	writeEv@f,writeNVM@value
 40082   003A4A  0E01               	movlw	1
 40083   003A4C  EC61  F05D         	call	_writeNVM
 40084   003A50                     l19404:
 40085                           
 40086                           ;../../VLCBlib_PIC/event_teach_large.c: 1106:     if (evVal == 0) {
 40087   003A50  0101               	movlb	1	; () banked
 40088   003A52  51CF               	movf	writeEv@evVal& (0+255),w,b
 40089   003A54  A4D8               	btfss	status,2,c
 40090   003A56  D688               	goto	u19220
 40091                           
 40092                           ; BSR set to: 1
 40093                           ;../../VLCBlib_PIC/event_teach_large.c: 1107:         checkRemoveTableEntry(startIndex);
 40094   003A58  51D4               	movf	writeEv@startIndex& (0+255),w,b
 40095   003A5A  EC8B  F05E         	call	_checkRemoveTableEntry
 40096   003A5E  D684               	goto	u19220
 40097   003A60                     __end_of_writeEv:
 40098                           	callstack 0
 40099                           
 40100 ;; *************** function _checkRemoveTableEntry *****************
 40101 ;; Defined at:
 40102 ;;		line 908 in file "../../VLCBlib_PIC/event_teach_large.c"
 40103 ;; Parameters:    Size  Location     Type
 40104 ;;  tableIndex      1    wreg     unsigned char 
 40105 ;; Auto vars:     Size  Location     Type
 40106 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 40107 ;;  e               1   16[BANK1 ] unsigned char 
 40108 ;; Return value:  Size  Location     Type
 40109 ;;                  1    wreg      void 
 40110 ;; Registers used:
 40111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40112 ;; Tracked objects:
 40113 ;;		On entry : 0/0
 40114 ;;		On exit  : 0/0
 40115 ;;		Unchanged: 0/0
 40116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40118 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40120 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40121 ;;Total ram usage:        2 bytes
 40122 ;; Hardware stack levels used: 1
 40123 ;; Hardware stack levels required when called: 19
 40124 ;; This function calls:
 40125 ;;		_getEVs
 40126 ;;		_removeTableEntry
 40127 ;;		_validStart
 40128 ;; This function is called by:
 40129 ;;		_deleteActionRange
 40130 ;;		_APP_addEvent
 40131 ;;		_writeEv
 40132 ;;		_deleteHappeningRange
 40133 ;; This function uses a non-reentrant model
 40134 ;;
 40135                           
 40136                           	psect	text170
 40137   00BD16                     __ptext170:
 40138                           	callstack 0
 40139   00BD16                     _checkRemoveTableEntry:
 40140                           	callstack 6
 40141                           
 40142                           ;incstack = 0
 40143                           ;checkRemoveTableEntry@tableIndex stored from wreg
 40144   00BD16  0101               	movlb	1	; () banked
 40145   00BD18  6FCC               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 40146                           
 40147                           ;../../VLCBlib_PIC/event_teach_large.c: 909:     uint8_t e;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 911:     if ( validStart(tableIndex)) {
 40148   00BD1A  0101               	movlb	1	; () banked
 40149   00BD1C  51CC               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 40150   00BD1E  EC3A  F05D         	call	_validStart
 40151   00BD22  0900               	iorlw	0
 40152   00BD24  B4D8               	btfsc	status,2,c
 40153   00BD26  0012               	return	
 40154                           
 40155                           ;../../VLCBlib_PIC/event_teach_large.c: 912:         if (getEVs(tableIndex)) {
 40156   00BD28  0101               	movlb	1	; () banked
 40157   00BD2A  51CC               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 40158   00BD2C  EC35  F042         	call	_getEVs
 40159   00BD30  0900               	iorlw	0
 40160   00BD32  A4D8               	btfss	status,2,c
 40161   00BD34  0012               	return	
 40162                           
 40163                           ;../../VLCBlib_PIC/event_teach_large.c: 915:         for (e=0; e<20; e++) {
 40164   00BD36  0E00               	movlw	0
 40165   00BD38  0101               	movlb	1	; () banked
 40166   00BD3A  6FCD               	movwf	checkRemoveTableEntry@e& (0+255),b
 40167   00BD3C                     l19242:
 40168                           
 40169                           ; BSR set to: 1
 40170                           ;../../VLCBlib_PIC/event_teach_large.c: 916:             if (evs[e] != 0) {
 40171   00BD3C  0E20               	movlw	low _evs
 40172   00BD3E  25CD               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 40173   00BD40  6ED9               	movwf	fsr2l,c
 40174   00BD42  6ADA               	clrf	fsr2h,c
 40175   00BD44  0E02               	movlw	high _evs
 40176   00BD46  22DA               	addwfc	fsr2h,f,c
 40177   00BD48  50DF               	movf	indf2,w,c
 40178   00BD4A  A4D8               	btfss	status,2,c
 40179   00BD4C  0012               	return	
 40180                           
 40181                           ; BSR set to: 1
 40182                           ;../../VLCBlib_PIC/event_teach_large.c: 919:         }
 40183   00BD4E  2BCD               	incf	checkRemoveTableEntry@e& (0+255),f,b
 40184                           
 40185                           ; BSR set to: 1
 40186   00BD50  0E13               	movlw	19
 40187   00BD52  65CD               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 40188   00BD54  D7F3               	goto	l19242
 40189                           
 40190                           ; BSR set to: 1
 40191                           ;../../VLCBlib_PIC/event_teach_large.c: 920:         removeTableEntry(tableIndex);
 40192   00BD56  51CC               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 40193   00BD58  ECA8  F03D         	call	_removeTableEntry
 40194   00BD5C  0012               	return		;funcret
 40195   00BD5E                     __end_of_checkRemoveTableEntry:
 40196                           	callstack 0
 40197                           
 40198 ;; *************** function _removeTableEntry *****************
 40199 ;; Defined at:
 40200 ;;		line 872 in file "../../VLCBlib_PIC/event_teach_large.c"
 40201 ;; Parameters:    Size  Location     Type
 40202 ;;  tableIndex      1    wreg     unsigned char 
 40203 ;; Auto vars:     Size  Location     Type
 40204 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 40205 ;;  f               1   13[BANK1 ] struct .
 40206 ;; Return value:  Size  Location     Type
 40207 ;;                  1    wreg      unsigned char 
 40208 ;; Registers used:
 40209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40210 ;; Tracked objects:
 40211 ;;		On entry : 0/0
 40212 ;;		On exit  : 0/0
 40213 ;;		Unchanged: 0/0
 40214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40216 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40217 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40218 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40219 ;;Total ram usage:        6 bytes
 40220 ;; Hardware stack levels used: 1
 40221 ;; Hardware stack levels required when called: 18
 40222 ;; This function calls:
 40223 ;;		_flushFlashBlock
 40224 ;;		_readNVM
 40225 ;;		_rebuildHashtable
 40226 ;;		_validStart
 40227 ;;		_writeNVM
 40228 ;; This function is called by:
 40229 ;;		_removeEvent
 40230 ;;		_checkRemoveTableEntry
 40231 ;; This function uses a non-reentrant model
 40232 ;;
 40233                           
 40234                           	psect	text171
 40235   007B50                     __ptext171:
 40236                           	callstack 0
 40237   007B50                     _removeTableEntry:
 40238                           	callstack 8
 40239                           
 40240                           ;incstack = 0
 40241                           ;removeTableEntry@tableIndex stored from wreg
 40242   007B50  0101               	movlb	1	; () banked
 40243   007B52  6FCB               	movwf	removeTableEntry@tableIndex& (0+255),b
 40244                           
 40245                           ;../../VLCBlib_PIC/event_teach_large.c: 873:     EventTableFlags f;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 878:     if (validStart(tableIndex)) {
 40246   007B54  0101               	movlb	1	; () banked
 40247   007B56  51CB               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40248   007B58  EC3A  F05D         	call	_validStart
 40249   007B5C  0900               	iorlw	0
 40250   007B5E  B4D8               	btfsc	status,2,c
 40251   007B60  D09F               	goto	l19226
 40252                           
 40253                           ;../../VLCBlib_PIC/event_teach_large.c: 879:         f.asByte = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+0);
 40254   007B62  0101               	movlb	1	; () banked
 40255   007B64  51CB               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40256   007B66  6FC6               	movwf	??_removeTableEntry& (0+255),b
 40257   007B68  6BC7               	clrf	(??_removeTableEntry+1)& (0+255),b
 40258   007B6A  3BC6               	swapf	??_removeTableEntry& (0+255),f,b
 40259   007B6C  3BC7               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40260   007B6E  0EF0               	movlw	240
 40261   007B70  17C7               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40262   007B72  51C6               	movf	??_removeTableEntry& (0+255),w,b
 40263   007B74  0B0F               	andlw	15
 40264   007B76  13C7               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40265   007B78  0EF0               	movlw	240
 40266   007B7A  17C6               	andwf	??_removeTableEntry& (0+255),f,b
 40267   007B7C  0E80               	movlw	128
 40268   007B7E  25C6               	addwf	??_removeTableEntry& (0+255),w,b
 40269   007B80  6FC8               	movwf	(??_removeTableEntry+2)& (0+255),b
 40270   007B82  0EEF               	movlw	239
 40271   007B84  21C7               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40272   007B86  6FC9               	movwf	(??_removeTableEntry+3)& (0+255),b
 40273   007B88  C1C8  F091         	movff	??_removeTableEntry+2,readNVM@index
 40274   007B8C  C1C9  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40275   007B90  0100               	movlb	0	; () banked
 40276   007B92  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40277   007B94  0E01               	movlw	1
 40278   007B96  ECD1  F05A         	call	_readNVM
 40279   007B9A  0100               	movlb	0	; () banked
 40280   007B9C  5191               	movf	?_readNVM& (0+255),w,b
 40281   007B9E  0101               	movlb	1	; () banked
 40282   007BA0  6FCA               	movwf	removeTableEntry@f& (0+255),b
 40283                           
 40284                           ;../../VLCBlib_PIC/event_teach_large.c: 881:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex+0, 0xff);
 40285   007BA2  51CB               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40286   007BA4  6FC6               	movwf	??_removeTableEntry& (0+255),b
 40287   007BA6  6BC7               	clrf	(??_removeTableEntry+1)& (0+255),b
 40288   007BA8  3BC6               	swapf	??_removeTableEntry& (0+255),f,b
 40289   007BAA  3BC7               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40290   007BAC  0EF0               	movlw	240
 40291   007BAE  17C7               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40292   007BB0  51C6               	movf	??_removeTableEntry& (0+255),w,b
 40293   007BB2  0B0F               	andlw	15
 40294   007BB4  13C7               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40295   007BB6  0EF0               	movlw	240
 40296   007BB8  17C6               	andwf	??_removeTableEntry& (0+255),f,b
 40297   007BBA  0E80               	movlw	128
 40298   007BBC  25C6               	addwf	??_removeTableEntry& (0+255),w,b
 40299   007BBE  6FC8               	movwf	(??_removeTableEntry+2)& (0+255),b
 40300   007BC0  0EEF               	movlw	239
 40301   007BC2  21C7               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40302   007BC4  6FC9               	movwf	(??_removeTableEntry+3)& (0+255),b
 40303   007BC6  C1C8  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 40304   007BCA  C1C9  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 40305   007BCE  0100               	movlb	0	; () banked
 40306   007BD0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40307   007BD2  0EFF               	movlw	255
 40308   007BD4  6FA7               	movwf	writeNVM@value& (0+255),b
 40309   007BD6  0E01               	movlw	1
 40310   007BD8  EC61  F05D         	call	_writeNVM
 40311                           
 40312                           ;../../VLCBlib_PIC/event_teach_large.c: 883:         while (f.continued) {
 40313   007BDC  D05A               	goto	l19220
 40314   007BDE                     l19208:
 40315                           
 40316                           ; BSR set to: 1
 40317                           ;../../VLCBlib_PIC/event_teach_large.c: 884:             tableIndex = (uint8_t)readNVM(F
      +                          LASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40318   007BDE  51CB               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40319   007BE0  0D10               	mullw	16
 40320   007BE2  CFF3 F1C6          	movff	prodl,??_removeTableEntry
 40321   007BE6  CFF4 F1C7          	movff	prodh,??_removeTableEntry+1
 40322   007BEA  0E81               	movlw	129
 40323   007BEC  25C6               	addwf	??_removeTableEntry& (0+255),w,b
 40324   007BEE  6FC8               	movwf	(??_removeTableEntry+2)& (0+255),b
 40325   007BF0  0EEF               	movlw	239
 40326   007BF2  21C7               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40327   007BF4  6FC9               	movwf	(??_removeTableEntry+3)& (0+255),b
 40328   007BF6  C1C8  F091         	movff	??_removeTableEntry+2,readNVM@index
 40329   007BFA  C1C9  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40330   007BFE  0100               	movlb	0	; () banked
 40331   007C00  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40332   007C02  0E01               	movlw	1
 40333   007C04  ECD1  F05A         	call	_readNVM
 40334   007C08  0100               	movlb	0	; () banked
 40335   007C0A  5191               	movf	?_readNVM& (0+255),w,b
 40336   007C0C  0101               	movlb	1	; () banked
 40337   007C0E  6FCB               	movwf	removeTableEntry@tableIndex& (0+255),b
 40338                           
 40339                           ; BSR set to: 1
 40340                           ;../../VLCBlib_PIC/event_teach_large.c: 885:             f.asByte = (uint8_t)readNVM(FLA
      +                          SH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40341   007C10  51CB               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40342   007C12  6FC6               	movwf	??_removeTableEntry& (0+255),b
 40343   007C14  6BC7               	clrf	(??_removeTableEntry+1)& (0+255),b
 40344   007C16  3BC6               	swapf	??_removeTableEntry& (0+255),f,b
 40345   007C18  3BC7               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40346   007C1A  0EF0               	movlw	240
 40347   007C1C  17C7               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40348   007C1E  51C6               	movf	??_removeTableEntry& (0+255),w,b
 40349   007C20  0B0F               	andlw	15
 40350   007C22  13C7               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40351   007C24  0EF0               	movlw	240
 40352   007C26  17C6               	andwf	??_removeTableEntry& (0+255),f,b
 40353   007C28  0E80               	movlw	128
 40354   007C2A  25C6               	addwf	??_removeTableEntry& (0+255),w,b
 40355   007C2C  6FC8               	movwf	(??_removeTableEntry+2)& (0+255),b
 40356   007C2E  0EEF               	movlw	239
 40357   007C30  21C7               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40358   007C32  6FC9               	movwf	(??_removeTableEntry+3)& (0+255),b
 40359   007C34  C1C8  F091         	movff	??_removeTableEntry+2,readNVM@index
 40360   007C38  C1C9  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40361   007C3C  0100               	movlb	0	; () banked
 40362   007C3E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40363   007C40  0E01               	movlw	1
 40364   007C42  ECD1  F05A         	call	_readNVM
 40365   007C46  0100               	movlb	0	; () banked
 40366   007C48  5191               	movf	?_readNVM& (0+255),w,b
 40367   007C4A  0101               	movlb	1	; () banked
 40368   007C4C  6FCA               	movwf	removeTableEntry@f& (0+255),b
 40369                           
 40370                           ; BSR set to: 1
 40371                           ;../../VLCBlib_PIC/event_teach_large.c: 887:             if (tableIndex >= 255) return C
      +                          MDERR_INV_EV_IDX;
 40372   007C4E  29CB               	incf	removeTableEntry@tableIndex& (0+255),w,b
 40373   007C50  A4D8               	btfss	status,2,c
 40374   007C52  D002               	goto	l19218
 40375                           
 40376                           ; BSR set to: 1
 40377   007C54  0E06               	movlw	6
 40378   007C56  0012               	return	
 40379   007C58                     l19218:
 40380                           
 40381                           ; BSR set to: 1
 40382                           ;../../VLCBlib_PIC/event_teach_large.c: 890:             writeNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+0, 0xff);
 40383   007C58  51CB               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40384   007C5A  6FC6               	movwf	??_removeTableEntry& (0+255),b
 40385   007C5C  6BC7               	clrf	(??_removeTableEntry+1)& (0+255),b
 40386   007C5E  3BC6               	swapf	??_removeTableEntry& (0+255),f,b
 40387   007C60  3BC7               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40388   007C62  0EF0               	movlw	240
 40389   007C64  17C7               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40390   007C66  51C6               	movf	??_removeTableEntry& (0+255),w,b
 40391   007C68  0B0F               	andlw	15
 40392   007C6A  13C7               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40393   007C6C  0EF0               	movlw	240
 40394   007C6E  17C6               	andwf	??_removeTableEntry& (0+255),f,b
 40395   007C70  0E80               	movlw	128
 40396   007C72  25C6               	addwf	??_removeTableEntry& (0+255),w,b
 40397   007C74  6FC8               	movwf	(??_removeTableEntry+2)& (0+255),b
 40398   007C76  0EEF               	movlw	239
 40399   007C78  21C7               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40400   007C7A  6FC9               	movwf	(??_removeTableEntry+3)& (0+255),b
 40401   007C7C  C1C8  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 40402   007C80  C1C9  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 40403   007C84  0100               	movlb	0	; () banked
 40404   007C86  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40405   007C88  0EFF               	movlw	255
 40406   007C8A  6FA7               	movwf	writeNVM@value& (0+255),b
 40407   007C8C  0E01               	movlw	1
 40408   007C8E  EC61  F05D         	call	_writeNVM
 40409   007C92                     l19220:
 40410                           
 40411                           ;../../VLCBlib_PIC/event_teach_large.c: 883:         while (f.continued) {
 40412   007C92  0101               	movlb	1	; () banked
 40413   007C94  B9CA               	btfsc	removeTableEntry@f& (0+255),4,b
 40414   007C96  D7A3               	goto	l19208
 40415                           
 40416                           ; BSR set to: 1
 40417                           ;../../VLCBlib_PIC/event_teach_large.c: 893:         flushFlashBlock();
 40418   007C98  EC5E  F054         	call	_flushFlashBlock	;wreg free
 40419                           
 40420                           ;../../VLCBlib_PIC/event_teach_large.c: 896:         rebuildHashtable();
 40421   007C9C  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 40422   007CA0                     l19226:
 40423                           
 40424                           ;../../VLCBlib_PIC/event_teach_large.c: 899:     return 0;
 40425   007CA0  0E00               	movlw	0
 40426   007CA2  0012               	return		;funcret
 40427   007CA4                     __end_of_removeTableEntry:
 40428                           	callstack 0
 40429                           
 40430 ;; *************** function _rebuildHashtable *****************
 40431 ;; Defined at:
 40432 ;;		line 1328 in file "../../VLCBlib_PIC/event_teach_large.c"
 40433 ;; Parameters:    Size  Location     Type
 40434 ;;		None
 40435 ;; Auto vars:     Size  Location     Type
 40436 ;;  ev              2    3[BANK1 ] short 
 40437 ;;  a               2    0        int 
 40438 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 40439 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 40440 ;;  happening       1    6[BANK1 ] unsigned char 
 40441 ;;  hash            1    5[BANK1 ] unsigned char 
 40442 ;; Return value:  Size  Location     Type
 40443 ;;                  1    wreg      void 
 40444 ;; Registers used:
 40445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40446 ;; Tracked objects:
 40447 ;;		On entry : 0/0
 40448 ;;		On exit  : 0/0
 40449 ;;		Unchanged: 0/0
 40450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40452 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40453 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40454 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40455 ;;Total ram usage:        9 bytes
 40456 ;; Hardware stack levels used: 1
 40457 ;; Hardware stack levels required when called: 16
 40458 ;; This function calls:
 40459 ;;		_getEN
 40460 ;;		_getEv
 40461 ;;		_getHash
 40462 ;;		_getNN
 40463 ;;		_validStart
 40464 ;; This function is called by:
 40465 ;;		_deleteActionRange
 40466 ;;		_APP_addEvent
 40467 ;;		_mnsProcessMessage
 40468 ;;		_teachPowerUp
 40469 ;;		_clearAllEvents
 40470 ;;		_removeTableEntry
 40471 ;;		_addEvent
 40472 ;;		_deleteHappeningRange
 40473 ;; This function uses a non-reentrant model
 40474 ;;
 40475                           
 40476                           	psect	text172
 40477   007F14                     __ptext172:
 40478                           	callstack 0
 40479   007F14                     _rebuildHashtable:
 40480                           	callstack 12
 40481                           
 40482                           ;../../VLCBlib_PIC/event_teach_large.c: 1330:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1331:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_large.c: 1332: 
      +                              uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_large.c: 1333:     int a;;../../VL
      +                          CBlib_PIC/event_teach_large.c: 1336:     Happening happening;;../../VLCBlib_PIC/event_te
      +                          ach_large.c: 1337:     for (happening=0; happening<=(1+(7+16*4)-1); happening++) {
 40483                           
 40484                           ;incstack = 0
 40485   007F14  0E00               	movlw	0
 40486   007F16  0101               	movlb	1	; () banked
 40487   007F18  6FC3               	movwf	rebuildHashtable@happening& (0+255),b
 40488   007F1A                     l19074:
 40489                           
 40490                           ; BSR set to: 1
 40491                           ;../../VLCBlib_PIC/event_teach_large.c: 1338:         happening2Event[happening] = 0xff;
 40492   007F1A  0E00               	movlw	low _happening2Event
 40493   007F1C  25C3               	addwf	rebuildHashtable@happening& (0+255),w,b
 40494   007F1E  6ED9               	movwf	fsr2l,c
 40495   007F20  6ADA               	clrf	fsr2h,c
 40496   007F22  0E03               	movlw	high _happening2Event
 40497   007F24  22DA               	addwfc	fsr2h,f,c
 40498   007F26  0EFF               	movlw	255
 40499   007F28  6EDF               	movwf	indf2,c
 40500                           
 40501                           ; BSR set to: 1
 40502                           ;../../VLCBlib_PIC/event_teach_large.c: 1339:     }
 40503   007F2A  2BC3               	incf	rebuildHashtable@happening& (0+255),f,b
 40504                           
 40505                           ; BSR set to: 1
 40506   007F2C  0E47               	movlw	71
 40507   007F2E  65C3               	cpfsgt	rebuildHashtable@happening& (0+255),b
 40508   007F30  D7F4               	goto	l19074
 40509                           
 40510                           ; BSR set to: 1
 40511                           ;../../VLCBlib_PIC/event_teach_large.c: 1341:     for (hash=0; hash<32; hash++) {
 40512   007F32  0E00               	movlw	0
 40513   007F34  6FC2               	movwf	rebuildHashtable@hash& (0+255),b
 40514   007F36                     l19086:
 40515                           
 40516                           ; BSR set to: 1
 40517                           ;../../VLCBlib_PIC/event_teach_large.c: 1342:         for (chainIdx=0; chainIdx < 20; ch
      +                          ainIdx++) {
 40518   007F36  0E00               	movlw	0
 40519   007F38  6FC4               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40520   007F3A                     l19092:
 40521                           
 40522                           ; BSR set to: 1
 40523                           ;../../VLCBlib_PIC/event_teach_large.c: 1343:             eventChains[hash][chainIdx] = 
      +                          0xff;
 40524   007F3A  51C2               	movf	rebuildHashtable@hash& (0+255),w,b
 40525   007F3C  0D14               	mullw	20
 40526   007F3E  0E48               	movlw	low _eventChains
 40527   007F40  24F3               	addwf	243,w,c
 40528   007F42  6FBD               	movwf	??_rebuildHashtable& (0+255),b
 40529   007F44  0E05               	movlw	high _eventChains
 40530   007F46  20F4               	addwfc	prodh,w,c
 40531   007F48  6FBE               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40532   007F4A  51C4               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40533   007F4C  25BD               	addwf	??_rebuildHashtable& (0+255),w,b
 40534   007F4E  6ED9               	movwf	fsr2l,c
 40535   007F50  0E00               	movlw	0
 40536   007F52  21BE               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40537   007F54  6EDA               	movwf	fsr2h,c
 40538   007F56  0EFF               	movlw	255
 40539   007F58  6EDF               	movwf	indf2,c
 40540                           
 40541                           ; BSR set to: 1
 40542                           ;../../VLCBlib_PIC/event_teach_large.c: 1344:         }
 40543   007F5A  2BC4               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40544                           
 40545                           ; BSR set to: 1
 40546   007F5C  0E13               	movlw	19
 40547   007F5E  65C4               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40548   007F60  D7EC               	goto	l19092
 40549                           
 40550                           ; BSR set to: 1
 40551                           ;../../VLCBlib_PIC/event_teach_large.c: 1345:     }
 40552   007F62  2BC2               	incf	rebuildHashtable@hash& (0+255),f,b
 40553                           
 40554                           ; BSR set to: 1
 40555   007F64  0E1F               	movlw	31
 40556   007F66  65C2               	cpfsgt	rebuildHashtable@hash& (0+255),b
 40557   007F68  D7E6               	goto	l19086
 40558                           
 40559                           ; BSR set to: 1
 40560                           ;../../VLCBlib_PIC/event_teach_large.c: 1348:     for (tableIndex=0; tableIndex<255; tab
      +                          leIndex++) {
 40561   007F6A  0E00               	movlw	0
 40562   007F6C  6FC5               	movwf	rebuildHashtable@tableIndex& (0+255),b
 40563   007F6E                     l19108:
 40564                           
 40565                           ; BSR set to: 1
 40566                           ;../../VLCBlib_PIC/event_teach_large.c: 1349:         if (validStart(tableIndex)) {
 40567   007F6E  51C5               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40568   007F70  EC3A  F05D         	call	_validStart
 40569   007F74  0900               	iorlw	0
 40570   007F76  B4D8               	btfsc	status,2,c
 40571   007F78  D059               	goto	u18950
 40572                           
 40573                           ;../../VLCBlib_PIC/event_teach_large.c: 1350:             int16_t ev;;../../VLCBlib_PIC/
      +                          event_teach_large.c: 1365:             ev = getEv(tableIndex, 0);
 40574   007F7A  0E00               	movlw	0
 40575   007F7C  0100               	movlb	0	; () banked
 40576   007F7E  6F9D               	movwf	getEv@evNum& (0+255),b
 40577   007F80  0101               	movlb	1	; () banked
 40578   007F82  51C5               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40579   007F84  ECFD  F03C         	call	_getEv
 40580   007F88  C09D  F1C0         	movff	?_getEv,rebuildHashtable@ev
 40581   007F8C  C09E  F1C1         	movff	?_getEv+1,rebuildHashtable@ev+1
 40582                           
 40583                           ;../../VLCBlib_PIC/event_teach_large.c: 1366:             if (ev < 0) continue;
 40584   007F90  0101               	movlb	1	; () banked
 40585   007F92  BFC1               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 40586   007F94  D04B               	goto	u18950
 40587                           
 40588                           ; BSR set to: 1
 40589                           ;../../VLCBlib_PIC/event_teach_large.c: 1367:             happening = (uint8_t) ev;
 40590   007F96  C1C0  F1C3         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 40591                           
 40592                           ; BSR set to: 1
 40593                           ;../../VLCBlib_PIC/event_teach_large.c: 1369:             if ((happening<= (7+16*4)) && 
      +                          (happening >= 1)) {
 40594   007F9A  0E48               	movlw	72
 40595   007F9C  61C3               	cpfslt	rebuildHashtable@happening& (0+255),b
 40596   007F9E  D00B               	goto	l19122
 40597                           
 40598                           ; BSR set to: 1
 40599   007FA0  51C3               	movf	rebuildHashtable@happening& (0+255),w,b
 40600   007FA2  B4D8               	btfsc	status,2,c
 40601   007FA4  D008               	goto	l19122
 40602                           
 40603                           ; BSR set to: 1
 40604                           ;../../VLCBlib_PIC/event_teach_large.c: 1370:                 happening2Event[happening-
      +                          1] = tableIndex;
 40605   007FA6  0EFF               	movlw	low (_happening2Event+65535)
 40606   007FA8  25C3               	addwf	rebuildHashtable@happening& (0+255),w,b
 40607   007FAA  6ED9               	movwf	fsr2l,c
 40608   007FAC  6ADA               	clrf	fsr2h,c
 40609   007FAE  0E02               	movlw	high (_happening2Event+65535)
 40610   007FB0  22DA               	addwfc	fsr2h,f,c
 40611   007FB2  C1C5  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40612   007FB6                     l19122:
 40613                           
 40614                           ; BSR set to: 1
 40615                           ;../../VLCBlib_PIC/event_teach_large.c: 1373:             hash = getHash(getNN(tableInde
      +                          x), getEN(tableIndex));
 40616   007FB6  51C5               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40617   007FB8  ECB0  F04A         	call	_getNN
 40618   007FBC  C097  F0A3         	movff	?_getNN,getHash@nn
 40619   007FC0  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 40620   007FC4  0101               	movlb	1	; () banked
 40621   007FC6  51C5               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40622   007FC8  EC9A  F056         	call	_getEN
 40623   007FCC  C097  F0A5         	movff	?_getEN,getHash@en
 40624   007FD0  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 40625   007FD4  EC15  F063         	call	_getHash	;wreg free
 40626   007FD8  0101               	movlb	1	; () banked
 40627   007FDA  6FC2               	movwf	rebuildHashtable@hash& (0+255),b
 40628                           
 40629                           ; BSR set to: 1
 40630                           ;../../VLCBlib_PIC/event_teach_large.c: 1375:             for (chainIdx=0; chainIdx<20; 
      +                          chainIdx++) {
 40631   007FDC  0E00               	movlw	0
 40632   007FDE  6FC4               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40633   007FE0                     l19130:
 40634                           
 40635                           ; BSR set to: 1
 40636                           ;../../VLCBlib_PIC/event_teach_large.c: 1376:                 if (eventChains[hash][chai
      +                          nIdx] == 0xff) {
 40637   007FE0  51C2               	movf	rebuildHashtable@hash& (0+255),w,b
 40638   007FE2  0D14               	mullw	20
 40639   007FE4  0E48               	movlw	low _eventChains
 40640   007FE6  24F3               	addwf	243,w,c
 40641   007FE8  6FBD               	movwf	??_rebuildHashtable& (0+255),b
 40642   007FEA  0E05               	movlw	high _eventChains
 40643   007FEC  20F4               	addwfc	prodh,w,c
 40644   007FEE  6FBE               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40645   007FF0  51C4               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40646   007FF2  25BD               	addwf	??_rebuildHashtable& (0+255),w,b
 40647   007FF4  6ED9               	movwf	fsr2l,c
 40648   007FF6  0E00               	movlw	0
 40649   007FF8  21BE               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40650   007FFA  6EDA               	movwf	fsr2h,c
 40651   007FFC  28DE               	incf	postinc2,w,c
 40652   007FFE  A4D8               	btfss	status,2,c
 40653   008000  D011               	goto	l19134
 40654                           
 40655                           ; BSR set to: 1
 40656                           ;../../VLCBlib_PIC/event_teach_large.c: 1378:                     eventChains[hash][chai
      +                          nIdx] = tableIndex;
 40657   008002  51C2               	movf	rebuildHashtable@hash& (0+255),w,b
 40658   008004  0D14               	mullw	20
 40659   008006  0E48               	movlw	low _eventChains
 40660   008008  24F3               	addwf	243,w,c
 40661   00800A  6FBD               	movwf	??_rebuildHashtable& (0+255),b
 40662   00800C  0E05               	movlw	high _eventChains
 40663   00800E  20F4               	addwfc	prodh,w,c
 40664   008010  6FBE               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40665   008012  51C4               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40666   008014  25BD               	addwf	??_rebuildHashtable& (0+255),w,b
 40667   008016  6ED9               	movwf	fsr2l,c
 40668   008018  0E00               	movlw	0
 40669   00801A  21BE               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40670   00801C  6EDA               	movwf	fsr2h,c
 40671   00801E  C1C5  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40672                           
 40673                           ;../../VLCBlib_PIC/event_teach_large.c: 1379:                     break;
 40674   008022  D004               	goto	u18950
 40675   008024                     l19134:
 40676                           
 40677                           ; BSR set to: 1
 40678                           ;../../VLCBlib_PIC/event_teach_large.c: 1381:             }
 40679   008024  2BC4               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40680                           
 40681                           ; BSR set to: 1
 40682   008026  0E13               	movlw	19
 40683   008028  65C4               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40684   00802A  D7DA               	goto	l19130
 40685   00802C                     u18950:
 40686   00802C  0101               	movlb	1	; () banked
 40687   00802E  2BC5               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 40688                           
 40689                           ; BSR set to: 1
 40690   008030  29C5               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 40691   008032  B4D8               	btfsc	status,2,c
 40692   008034  0012               	return	
 40693   008036  D79B               	goto	l19108
 40694   008038                     __end_of_rebuildHashtable:
 40695                           	callstack 0
 40696                           
 40697 ;; *************** function _getEv *****************
 40698 ;; Defined at:
 40699 ;;		line 1119 in file "../../VLCBlib_PIC/event_teach_large.c"
 40700 ;; Parameters:    Size  Location     Type
 40701 ;;  tableIndex      1    wreg     unsigned char 
 40702 ;;  evNum           1   61[BANK0 ] unsigned char 
 40703 ;; Auto vars:     Size  Location     Type
 40704 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 40705 ;;  f               1   68[BANK0 ] struct .
 40706 ;; Return value:  Size  Location     Type
 40707 ;;                  2   61[BANK0 ] short 
 40708 ;; Registers used:
 40709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40710 ;; Tracked objects:
 40711 ;;		On entry : 0/0
 40712 ;;		On exit  : 0/0
 40713 ;;		Unchanged: 0/0
 40714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40717 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40718 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40719 ;;Total ram usage:        9 bytes
 40720 ;; Hardware stack levels used: 1
 40721 ;; Hardware stack levels required when called: 15
 40722 ;; This function calls:
 40723 ;;		_readNVM
 40724 ;;		_validStart
 40725 ;; This function is called by:
 40726 ;;		_isConsumedEvent
 40727 ;;		_doReval
 40728 ;;		_doReqev
 40729 ;;		_reqevCallback
 40730 ;;		_rebuildHashtable
 40731 ;;		_producerProcessMessage
 40732 ;; This function uses a non-reentrant model
 40733 ;;
 40734                           
 40735                           	psect	text173
 40736   0079FA                     __ptext173:
 40737                           	callstack 0
 40738   0079FA                     _getEv:
 40739                           	callstack 12
 40740                           
 40741                           ; BSR set to: 1
 40742                           ;incstack = 0
 40743                           ;getEv@tableIndex stored from wreg
 40744   0079FA  0100               	movlb	0	; () banked
 40745   0079FC  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40746                           
 40747                           ;../../VLCBlib_PIC/event_teach_large.c: 1120:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1121:     if ( ! validStart(tableIndex)) {
 40748   0079FE  0100               	movlb	0	; () banked
 40749   007A00  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40750   007A02  EC3A  F05D         	call	_validStart
 40751   007A06  0900               	iorlw	0
 40752   007A08  A4D8               	btfss	status,2,c
 40753   007A0A  D006               	goto	l18916
 40754   007A0C                     u18700:
 40755                           
 40756                           ;../../VLCBlib_PIC/event_teach_large.c: 1123:         return -CMDERR_INVALID_EVENT;
 40757   007A0C  0EFF               	movlw	255
 40758   007A0E  0100               	movlb	0	; () banked
 40759   007A10  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40760   007A12  0EF9               	movlw	249
 40761   007A14  6F9D               	movwf	?_getEv& (0+255),b
 40762   007A16  0012               	return	
 40763   007A18                     l18916:
 40764                           
 40765                           ;../../VLCBlib_PIC/event_teach_large.c: 1125:     if (evNum >= 20) {
 40766   007A18  0E13               	movlw	19
 40767   007A1A  0100               	movlb	0	; () banked
 40768   007A1C  659D               	cpfsgt	getEv@evNum& (0+255),b
 40769   007A1E  D005               	goto	l18922
 40770                           
 40771                           ; BSR set to: 0
 40772                           ;../../VLCBlib_PIC/event_teach_large.c: 1126:         return -CMDERR_INV_EV_IDX;
 40773   007A20  0EFF               	movlw	255
 40774   007A22  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40775   007A24  0EFA               	movlw	250
 40776   007A26  6F9D               	movwf	?_getEv& (0+255),b
 40777   007A28  0012               	return	
 40778   007A2A                     l18922:
 40779                           
 40780                           ; BSR set to: 0
 40781                           ;../../VLCBlib_PIC/event_teach_large.c: 1128:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 40782   007A2A  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40783   007A2C  6F9F               	movwf	??_getEv& (0+255),b
 40784   007A2E  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40785   007A30  3B9F               	swapf	??_getEv& (0+255),f,b
 40786   007A32  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40787   007A34  0EF0               	movlw	240
 40788   007A36  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40789   007A38  519F               	movf	??_getEv& (0+255),w,b
 40790   007A3A  0B0F               	andlw	15
 40791   007A3C  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40792   007A3E  0EF0               	movlw	240
 40793   007A40  179F               	andwf	??_getEv& (0+255),f,b
 40794   007A42  0E80               	movlw	128
 40795   007A44  259F               	addwf	??_getEv& (0+255),w,b
 40796   007A46  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40797   007A48  0EEF               	movlw	239
 40798   007A4A  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40799   007A4C  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40800   007A4E  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40801   007A52  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40802   007A56  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40803   007A58  0E01               	movlw	1
 40804   007A5A  ECD1  F05A         	call	_readNVM
 40805   007A5E  0100               	movlb	0	; () banked
 40806   007A60  5191               	movf	?_readNVM& (0+255),w,b
 40807   007A62  6FA4               	movwf	getEv@f& (0+255),b
 40808                           
 40809                           ;../../VLCBlib_PIC/event_teach_large.c: 1129:     while (evNum >= 10) {
 40810   007A64  D040               	goto	l18940
 40811   007A66                     l2949:
 40812                           
 40813                           ; BSR set to: 0
 40814                           ;../../VLCBlib_PIC/event_teach_large.c: 1131:         if (! f.continued) {
 40815   007A66  B9A4               	btfsc	getEv@f& (0+255),4,b
 40816   007A68  D005               	goto	l18928
 40817   007A6A                     u18720:
 40818                           
 40819                           ; BSR set to: 0
 40820                           ;../../VLCBlib_PIC/event_teach_large.c: 1132:             return -CMDERR_NO_EV;
 40821   007A6A  0EFF               	movlw	255
 40822   007A6C  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40823   007A6E  0EFB               	movlw	251
 40824   007A70  6F9D               	movwf	?_getEv& (0+255),b
 40825   007A72  0012               	return	
 40826   007A74                     l18928:
 40827                           
 40828                           ; BSR set to: 0
 40829                           ;../../VLCBlib_PIC/event_teach_large.c: 1134:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40830   007A74  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40831   007A76  0D10               	mullw	16
 40832   007A78  CFF3 F09F          	movff	prodl,??_getEv
 40833   007A7C  CFF4 F0A0          	movff	prodh,??_getEv+1
 40834   007A80  0E81               	movlw	129
 40835   007A82  259F               	addwf	??_getEv& (0+255),w,b
 40836   007A84  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40837   007A86  0EEF               	movlw	239
 40838   007A88  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40839   007A8A  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40840   007A8C  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40841   007A90  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40842   007A94  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40843   007A96  0E01               	movlw	1
 40844   007A98  ECD1  F05A         	call	_readNVM
 40845   007A9C  0100               	movlb	0	; () banked
 40846   007A9E  5191               	movf	?_readNVM& (0+255),w,b
 40847   007AA0  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40848                           
 40849                           ; BSR set to: 0
 40850                           ;../../VLCBlib_PIC/event_teach_large.c: 1135:         if (tableIndex == 0xff) {
 40851   007AA2  29A5               	incf	getEv@tableIndex& (0+255),w,b
 40852   007AA4  B4D8               	btfsc	status,2,c
 40853   007AA6  D7B2               	goto	u18700
 40854                           
 40855                           ; BSR set to: 0
 40856                           ;../../VLCBlib_PIC/event_teach_large.c: 1138:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40857   007AA8  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40858   007AAA  6F9F               	movwf	??_getEv& (0+255),b
 40859   007AAC  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40860   007AAE  3B9F               	swapf	??_getEv& (0+255),f,b
 40861   007AB0  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40862   007AB2  0EF0               	movlw	240
 40863   007AB4  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40864   007AB6  519F               	movf	??_getEv& (0+255),w,b
 40865   007AB8  0B0F               	andlw	15
 40866   007ABA  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40867   007ABC  0EF0               	movlw	240
 40868   007ABE  179F               	andwf	??_getEv& (0+255),f,b
 40869   007AC0  0E80               	movlw	128
 40870   007AC2  259F               	addwf	??_getEv& (0+255),w,b
 40871   007AC4  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40872   007AC6  0EEF               	movlw	239
 40873   007AC8  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40874   007ACA  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40875   007ACC  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40876   007AD0  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40877   007AD4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40878   007AD6  0E01               	movlw	1
 40879   007AD8  ECD1  F05A         	call	_readNVM
 40880   007ADC  0100               	movlb	0	; () banked
 40881   007ADE  5191               	movf	?_readNVM& (0+255),w,b
 40882   007AE0  6FA4               	movwf	getEv@f& (0+255),b
 40883                           
 40884                           ; BSR set to: 0
 40885                           ;../../VLCBlib_PIC/event_teach_large.c: 1139:         evNum -= 10;
 40886   007AE2  0E0A               	movlw	10
 40887   007AE4  5F9D               	subwf	getEv@evNum& (0+255),f,b
 40888   007AE6                     l18940:
 40889                           
 40890                           ; BSR set to: 0
 40891                           ;../../VLCBlib_PIC/event_teach_large.c: 1129:     while (evNum >= 10) {
 40892   007AE6  0E0A               	movlw	10
 40893   007AE8  619D               	cpfslt	getEv@evNum& (0+255),b
 40894   007AEA  D7BD               	goto	l2949
 40895                           
 40896                           ; BSR set to: 0
 40897                           ;../../VLCBlib_PIC/event_teach_large.c: 1141:     if (evNum+1 > f.eVsUsed) {
 40898   007AEC  519D               	movf	getEv@evNum& (0+255),w,b
 40899   007AEE  6F9F               	movwf	??_getEv& (0+255),b
 40900   007AF0  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40901   007AF2  0E01               	movlw	1
 40902   007AF4  279F               	addwf	??_getEv& (0+255),f,b
 40903   007AF6  0E00               	movlw	0
 40904   007AF8  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40905   007AFA  51A4               	movf	getEv@f& (0+255),w,b
 40906   007AFC  0B0F               	andlw	15
 40907   007AFE  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40908   007B00  6BA2               	clrf	(??_getEv+3)& (0+255),b
 40909   007B02  519F               	movf	??_getEv& (0+255),w,b
 40910   007B04  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 40911   007B06  51A2               	movf	(??_getEv+3)& (0+255),w,b
 40912   007B08  0A80               	xorlw	128
 40913   007B0A  6FA3               	movwf	(??_getEv+4)& (0+255),b
 40914   007B0C  51A0               	movf	(??_getEv+1)& (0+255),w,b
 40915   007B0E  0A80               	xorlw	128
 40916   007B10  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 40917   007B12  A0D8               	btfss	status,0,c
 40918   007B14  D7AA               	goto	u18720
 40919                           
 40920                           ; BSR set to: 0
 40921                           ;../../VLCBlib_PIC/event_teach_large.c: 1145:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +evNum);
 40922   007B16  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40923   007B18  0D10               	mullw	16
 40924   007B1A  CFF3 F09F          	movff	prodl,??_getEv
 40925   007B1E  CFF4 F0A0          	movff	prodh,??_getEv+1
 40926   007B22  519D               	movf	getEv@evNum& (0+255),w,b
 40927   007B24  279F               	addwf	??_getEv& (0+255),f,b
 40928   007B26  0E00               	movlw	0
 40929   007B28  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40930   007B2A  0E86               	movlw	134
 40931   007B2C  259F               	addwf	??_getEv& (0+255),w,b
 40932   007B2E  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40933   007B30  0EEF               	movlw	239
 40934   007B32  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40935   007B34  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40936   007B36  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40937   007B3A  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40938   007B3E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40939   007B40  0E01               	movlw	1
 40940   007B42  ECD1  F05A         	call	_readNVM
 40941   007B46  0100               	movlb	0	; () banked
 40942   007B48  5191               	movf	?_readNVM& (0+255),w,b
 40943   007B4A  6F9D               	movwf	?_getEv& (0+255),b
 40944   007B4C  6B9E               	clrf	(?_getEv+1)& (0+255),b
 40945                           
 40946                           ; BSR set to: 0
 40947   007B4E  0012               	return		;funcret
 40948   007B50                     __end_of_getEv:
 40949                           	callstack 0
 40950                           
 40951 ;; *************** function _getEVs *****************
 40952 ;; Defined at:
 40953 ;;		line 1184 in file "../../VLCBlib_PIC/event_teach_large.c"
 40954 ;; Parameters:    Size  Location     Type
 40955 ;;  tableIndex      1    wreg     unsigned char 
 40956 ;; Auto vars:     Size  Location     Type
 40957 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 40958 ;;  evIdx           1   66[BANK0 ] unsigned char 
 40959 ;;  evNum           1   68[BANK0 ] unsigned char 
 40960 ;;  f               1   65[BANK0 ] struct .
 40961 ;; Return value:  Size  Location     Type
 40962 ;;                  1    wreg      unsigned char 
 40963 ;; Registers used:
 40964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40965 ;; Tracked objects:
 40966 ;;		On entry : 0/0
 40967 ;;		On exit  : 0/0
 40968 ;;		Unchanged: 0/0
 40969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40971 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40972 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40973 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40974 ;;Total ram usage:        8 bytes
 40975 ;; Hardware stack levels used: 1
 40976 ;; Hardware stack levels required when called: 15
 40977 ;; This function calls:
 40978 ;;		_readNVM
 40979 ;;		_validStart
 40980 ;; This function is called by:
 40981 ;;		_consumer2QProcessMessage
 40982 ;;		_deleteActionRange
 40983 ;;		_checkRemoveTableEntry
 40984 ;; This function uses a non-reentrant model
 40985 ;;
 40986                           
 40987                           	psect	text174
 40988   00846A                     __ptext174:
 40989                           	callstack 0
 40990   00846A                     _getEVs:
 40991                           	callstack 9
 40992                           
 40993                           ; BSR set to: 0
 40994                           ;incstack = 0
 40995                           ;getEVs@tableIndex stored from wreg
 40996   00846A  0100               	movlb	0	; () banked
 40997   00846C  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 40998                           
 40999                           ;../../VLCBlib_PIC/event_teach_large.c: 1185:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1186:     uint8_t evNum;;../../VLCBlib_PIC/event_teach_large.c: 1188
      +                          :     if ( ! validStart(tableIndex)) {
 41000   00846E  0100               	movlb	0	; () banked
 41001   008470  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41002   008472  EC3A  F05D         	call	_validStart
 41003   008476  0900               	iorlw	0
 41004   008478  A4D8               	btfss	status,2,c
 41005   00847A  D002               	goto	l19148
 41006   00847C                     u18970:
 41007                           
 41008                           ;../../VLCBlib_PIC/event_teach_large.c: 1190:         return CMDERR_INVALID_EVENT;
 41009   00847C  0E07               	movlw	7
 41010   00847E  0012               	return	
 41011   008480                     l19148:
 41012                           
 41013                           ;../../VLCBlib_PIC/event_teach_large.c: 1192:     for (evNum=0; evNum < 20; ) {
 41014   008480  0E00               	movlw	0
 41015   008482  0100               	movlb	0	; () banked
 41016   008484  6FA4               	movwf	getEVs@evNum& (0+255),b
 41017   008486                     l19154:
 41018                           
 41019                           ; BSR set to: 0
 41020                           ;../../VLCBlib_PIC/event_teach_large.c: 1193:         uint8_t evIdx;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1194:         for (evIdx=0; evIdx < 10; evIdx++) {
 41021   008486  0E00               	movlw	0
 41022   008488  6FA2               	movwf	getEVs@evIdx& (0+255),b
 41023   00848A                     l19160:
 41024                           
 41025                           ; BSR set to: 0
 41026                           ;../../VLCBlib_PIC/event_teach_large.c: 1195:             evs[evNum] = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 41027   00848A  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41028   00848C  0D10               	mullw	16
 41029   00848E  CFF3 F09D          	movff	prodl,??_getEVs
 41030   008492  CFF4 F09E          	movff	prodh,??_getEVs+1
 41031   008496  51A2               	movf	getEVs@evIdx& (0+255),w,b
 41032   008498  279D               	addwf	??_getEVs& (0+255),f,b
 41033   00849A  0E00               	movlw	0
 41034   00849C  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 41035   00849E  0E86               	movlw	134
 41036   0084A0  259D               	addwf	??_getEVs& (0+255),w,b
 41037   0084A2  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 41038   0084A4  0EEF               	movlw	239
 41039   0084A6  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 41040   0084A8  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 41041   0084AA  C09F  F091         	movff	??_getEVs+2,readNVM@index
 41042   0084AE  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 41043   0084B2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41044   0084B4  0E01               	movlw	1
 41045   0084B6  ECD1  F05A         	call	_readNVM
 41046   0084BA  0E20               	movlw	low _evs
 41047   0084BC  0100               	movlb	0	; () banked
 41048   0084BE  25A4               	addwf	getEVs@evNum& (0+255),w,b
 41049   0084C0  6ED9               	movwf	fsr2l,c
 41050   0084C2  6ADA               	clrf	fsr2h,c
 41051   0084C4  0E02               	movlw	high _evs
 41052   0084C6  22DA               	addwfc	fsr2h,f,c
 41053   0084C8  C091  FFDF         	movff	?_readNVM,indf2
 41054                           
 41055                           ; BSR set to: 0
 41056                           ;../../VLCBlib_PIC/event_teach_large.c: 1196:             evNum++;
 41057   0084CC  2BA4               	incf	getEVs@evNum& (0+255),f,b
 41058                           
 41059                           ; BSR set to: 0
 41060                           ;../../VLCBlib_PIC/event_teach_large.c: 1197:         }
 41061   0084CE  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 41062                           
 41063                           ; BSR set to: 0
 41064   0084D0  0E09               	movlw	9
 41065   0084D2  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 41066   0084D4  D7DA               	goto	l19160
 41067                           
 41068                           ; BSR set to: 0
 41069                           ;../../VLCBlib_PIC/event_teach_large.c: 1198:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 41070   0084D6  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41071   0084D8  6F9D               	movwf	??_getEVs& (0+255),b
 41072   0084DA  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 41073   0084DC  3B9D               	swapf	??_getEVs& (0+255),f,b
 41074   0084DE  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 41075   0084E0  0EF0               	movlw	240
 41076   0084E2  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 41077   0084E4  519D               	movf	??_getEVs& (0+255),w,b
 41078   0084E6  0B0F               	andlw	15
 41079   0084E8  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 41080   0084EA  0EF0               	movlw	240
 41081   0084EC  179D               	andwf	??_getEVs& (0+255),f,b
 41082   0084EE  0E80               	movlw	128
 41083   0084F0  259D               	addwf	??_getEVs& (0+255),w,b
 41084   0084F2  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 41085   0084F4  0EEF               	movlw	239
 41086   0084F6  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 41087   0084F8  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 41088   0084FA  C09F  F091         	movff	??_getEVs+2,readNVM@index
 41089   0084FE  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 41090   008502  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41091   008504  0E01               	movlw	1
 41092   008506  ECD1  F05A         	call	_readNVM
 41093   00850A  0100               	movlb	0	; () banked
 41094   00850C  5191               	movf	?_readNVM& (0+255),w,b
 41095   00850E  6FA1               	movwf	getEVs@f& (0+255),b
 41096                           
 41097                           ; BSR set to: 0
 41098                           ;../../VLCBlib_PIC/event_teach_large.c: 1199:         if (! f.continued) {
 41099   008510  B9A1               	btfsc	getEVs@f& (0+255),4,b
 41100   008512  D00F               	goto	l19186
 41101   008514                     u18990:
 41102                           
 41103                           ; BSR set to: 0
 41104                           ;../../VLCBlib_PIC/event_teach_large.c: 1200:             for (; evNum < 20; evNum++) {
 41105   008514  0E13               	movlw	19
 41106   008516  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 41107   008518  D001               	goto	l19176
 41108   00851A  D009               	goto	l19182
 41109   00851C                     l19176:
 41110                           
 41111                           ; BSR set to: 0
 41112                           ;../../VLCBlib_PIC/event_teach_large.c: 1201:                 evs[evNum] = 0;
 41113   00851C  0E20               	movlw	low _evs
 41114   00851E  25A4               	addwf	getEVs@evNum& (0+255),w,b
 41115   008520  6ED9               	movwf	fsr2l,c
 41116   008522  6ADA               	clrf	fsr2h,c
 41117   008524  0E02               	movlw	high _evs
 41118   008526  22DA               	addwfc	fsr2h,f,c
 41119   008528  6ADF               	clrf	indf2,c
 41120                           
 41121                           ; BSR set to: 0
 41122                           ;../../VLCBlib_PIC/event_teach_large.c: 1202:             }
 41123   00852A  2BA4               	incf	getEVs@evNum& (0+255),f,b
 41124   00852C  D7F3               	goto	u18990
 41125   00852E                     l19182:
 41126                           
 41127                           ; BSR set to: 0
 41128                           ;../../VLCBlib_PIC/event_teach_large.c: 1203:             return 0;
 41129   00852E  0E00               	movlw	0
 41130   008530  0012               	return	
 41131   008532                     l19186:
 41132                           
 41133                           ; BSR set to: 0
 41134                           ;../../VLCBlib_PIC/event_teach_large.c: 1205:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 41135   008532  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41136   008534  0D10               	mullw	16
 41137   008536  CFF3 F09D          	movff	prodl,??_getEVs
 41138   00853A  CFF4 F09E          	movff	prodh,??_getEVs+1
 41139   00853E  0E81               	movlw	129
 41140   008540  259D               	addwf	??_getEVs& (0+255),w,b
 41141   008542  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 41142   008544  0EEF               	movlw	239
 41143   008546  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 41144   008548  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 41145   00854A  C09F  F091         	movff	??_getEVs+2,readNVM@index
 41146   00854E  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 41147   008552  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41148   008554  0E01               	movlw	1
 41149   008556  ECD1  F05A         	call	_readNVM
 41150   00855A  0100               	movlb	0	; () banked
 41151   00855C  5191               	movf	?_readNVM& (0+255),w,b
 41152   00855E  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 41153                           
 41154                           ; BSR set to: 0
 41155                           ;../../VLCBlib_PIC/event_teach_large.c: 1206:         if (tableIndex == 0xff) {
 41156   008560  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 41157   008562  B4D8               	btfsc	status,2,c
 41158   008564  D78B               	goto	u18970
 41159                           
 41160                           ; BSR set to: 0
 41161                           ;../../VLCBlib_PIC/event_teach_large.c: 1209:     }
 41162   008566  0E13               	movlw	19
 41163   008568  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 41164   00856A  D78D               	goto	l19154
 41165   00856C  D7E0               	goto	l19182
 41166   00856E                     __end_of_getEVs:
 41167                           	callstack 0
 41168                           
 41169 ;; *************** function _validStart *****************
 41170 ;; Defined at:
 41171 ;;		line 1283 in file "../../VLCBlib_PIC/event_teach_large.c"
 41172 ;; Parameters:    Size  Location     Type
 41173 ;;  tableIndex      1    wreg     unsigned char 
 41174 ;; Auto vars:     Size  Location     Type
 41175 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 41176 ;;  f               1   60[BANK0 ] struct .
 41177 ;; Return value:  Size  Location     Type
 41178 ;;                  1    wreg      enum E12766
 41179 ;; Registers used:
 41180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41181 ;; Tracked objects:
 41182 ;;		On entry : 0/0
 41183 ;;		On exit  : 0/0
 41184 ;;		Unchanged: 0/0
 41185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41187 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41188 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41189 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41190 ;;Total ram usage:        6 bytes
 41191 ;; Hardware stack levels used: 1
 41192 ;; Hardware stack levels required when called: 14
 41193 ;; This function calls:
 41194 ;;		_readNVM
 41195 ;; This function is called by:
 41196 ;;		_deleteActionRange
 41197 ;;		_nerdCallback
 41198 ;;		_doNenrd
 41199 ;;		_doRqevn
 41200 ;;		_doReval
 41201 ;;		_removeTableEntry
 41202 ;;		_checkRemoveTableEntry
 41203 ;;		_getEv
 41204 ;;		_numEv
 41205 ;;		_getEVs
 41206 ;;		_rebuildHashtable
 41207 ;;		_deleteHappeningRange
 41208 ;; This function uses a non-reentrant model
 41209 ;;
 41210                           
 41211                           	psect	text175
 41212   00BA74                     __ptext175:
 41213                           	callstack 0
 41214   00BA74                     _validStart:
 41215                           	callstack 13
 41216                           
 41217                           ;incstack = 0
 41218                           ;validStart@tableIndex stored from wreg
 41219   00BA74  0100               	movlb	0	; () banked
 41220   00BA76  6F9B               	movwf	validStart@tableIndex& (0+255),b
 41221                           
 41222                           ;../../VLCBlib_PIC/event_teach_large.c: 1284:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1288:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*ta
      +                          bleIndex+0);
 41223   00BA78  0100               	movlb	0	; () banked
 41224   00BA7A  519B               	movf	validStart@tableIndex& (0+255),w,b
 41225   00BA7C  6F97               	movwf	??_validStart& (0+255),b
 41226   00BA7E  6B98               	clrf	(??_validStart+1)& (0+255),b
 41227   00BA80  3B97               	swapf	??_validStart& (0+255),f,b
 41228   00BA82  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 41229   00BA84  0EF0               	movlw	240
 41230   00BA86  1798               	andwf	(??_validStart+1)& (0+255),f,b
 41231   00BA88  5197               	movf	??_validStart& (0+255),w,b
 41232   00BA8A  0B0F               	andlw	15
 41233   00BA8C  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 41234   00BA8E  0EF0               	movlw	240
 41235   00BA90  1797               	andwf	??_validStart& (0+255),f,b
 41236   00BA92  0E80               	movlw	128
 41237   00BA94  2597               	addwf	??_validStart& (0+255),w,b
 41238   00BA96  6F99               	movwf	(??_validStart+2)& (0+255),b
 41239   00BA98  0EEF               	movlw	239
 41240   00BA9A  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 41241   00BA9C  6F9A               	movwf	(??_validStart+3)& (0+255),b
 41242   00BA9E  C099  F091         	movff	??_validStart+2,readNVM@index
 41243   00BAA2  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 41244   00BAA6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41245   00BAA8  0E01               	movlw	1
 41246   00BAAA  ECD1  F05A         	call	_readNVM
 41247   00BAAE  0100               	movlb	0	; () banked
 41248   00BAB0  5191               	movf	?_readNVM& (0+255),w,b
 41249   00BAB2  6F9C               	movwf	validStart@f& (0+255),b
 41250                           
 41251                           ; BSR set to: 0
 41252                           ;../../VLCBlib_PIC/event_teach_large.c: 1289:     if (( !f.freeEntry) && ( ! f.continuat
      +                          ion)) {
 41253   00BAB4  AF9C               	btfss	validStart@f& (0+255),7,b
 41254                           
 41255                           ; BSR set to: 0
 41256   00BAB6  BB9C               	btfsc	validStart@f& (0+255),5,b
 41257   00BAB8  D002               	goto	l18878
 41258                           
 41259                           ; BSR set to: 0
 41260                           ;../../VLCBlib_PIC/event_teach_large.c: 1290:         return TRUE;
 41261   00BABA  0E01               	movlw	1
 41262   00BABC  0012               	return	
 41263   00BABE                     l18878:
 41264                           
 41265                           ; BSR set to: 0
 41266                           ;../../VLCBlib_PIC/event_teach_large.c: 1292:         return FALSE;
 41267   00BABE  0E00               	movlw	0
 41268                           
 41269                           ; BSR set to: 0
 41270   00BAC0  0012               	return		;funcret
 41271   00BAC2                     __end_of_validStart:
 41272                           	callstack 0
 41273                           
 41274 ;; *************** function _findEvent *****************
 41275 ;; Defined at:
 41276 ;;		line 999 in file "../../VLCBlib_PIC/event_teach_large.c"
 41277 ;; Parameters:    Size  Location     Type
 41278 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 41279 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 41280 ;; Auto vars:     Size  Location     Type
 41281 ;;  en              2    8[BANK1 ] unsigned short 
 41282 ;;  nn              2    6[BANK1 ] unsigned short 
 41283 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 41284 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 41285 ;;  hash            1   10[BANK1 ] unsigned char 
 41286 ;; Return value:  Size  Location     Type
 41287 ;;                  1    wreg      unsigned char 
 41288 ;; Registers used:
 41289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41290 ;; Tracked objects:
 41291 ;;		On entry : 0/0
 41292 ;;		On exit  : 0/0
 41293 ;;		Unchanged: 0/0
 41294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41295 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41296 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41297 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41298 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41299 ;;Total ram usage:       13 bytes
 41300 ;; Hardware stack levels used: 1
 41301 ;; Hardware stack levels required when called: 15
 41302 ;; This function calls:
 41303 ;;		_getEN
 41304 ;;		_getHash
 41305 ;;		_getNN
 41306 ;; This function is called by:
 41307 ;;		_consumer2QProcessMessage
 41308 ;;		_ackEventProcessMessage
 41309 ;;		_doReqev
 41310 ;;		_removeEvent
 41311 ;;		_addEvent
 41312 ;;		_producerProcessMessage
 41313 ;; This function uses a non-reentrant model
 41314 ;;
 41315                           
 41316                           	psect	text176
 41317   00A600                     __ptext176:
 41318                           	callstack 0
 41319   00A600                     _findEvent:
 41320                           	callstack 12
 41321                           
 41322                           ;../../VLCBlib_PIC/event_teach_large.c: 1001:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 41323                           
 41324                           ; BSR set to: 0
 41325                           ;incstack = 0
 41326   00A600  C1BD  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 41327   00A604  C1BE  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 41328   00A608  C1BF  F0A5         	movff	findEvent@eventNumber,getHash@en
 41329   00A60C  C1C0  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 41330   00A610  EC15  F063         	call	_getHash	;wreg free
 41331   00A614  0101               	movlb	1	; () banked
 41332   00A616  6FC7               	movwf	findEvent@hash& (0+255),b
 41333                           
 41334                           ; BSR set to: 1
 41335                           ;../../VLCBlib_PIC/event_teach_large.c: 1002:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 1003:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 41336   00A618  0E00               	movlw	0
 41337   00A61A  6FC8               	movwf	findEvent@chainIdx& (0+255),b
 41338   00A61C                     l19552:
 41339                           
 41340                           ; BSR set to: 1
 41341                           ;../../VLCBlib_PIC/event_teach_large.c: 1004:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 41342   00A61C  51C7               	movf	findEvent@hash& (0+255),w,b
 41343   00A61E  0D14               	mullw	20
 41344   00A620  0E48               	movlw	low _eventChains
 41345   00A622  24F3               	addwf	243,w,c
 41346   00A624  6FC1               	movwf	??_findEvent& (0+255),b
 41347   00A626  0E05               	movlw	high _eventChains
 41348   00A628  20F4               	addwfc	prodh,w,c
 41349   00A62A  6FC2               	movwf	(??_findEvent+1)& (0+255),b
 41350   00A62C  51C8               	movf	findEvent@chainIdx& (0+255),w,b
 41351   00A62E  25C1               	addwf	??_findEvent& (0+255),w,b
 41352   00A630  6ED9               	movwf	fsr2l,c
 41353   00A632  0E00               	movlw	0
 41354   00A634  21C2               	addwfc	(??_findEvent+1)& (0+255),w,b
 41355   00A636  6EDA               	movwf	fsr2h,c
 41356   00A638  50DF               	movf	indf2,w,c
 41357   00A63A  6FC9               	movwf	findEvent@tableIndex& (0+255),b
 41358                           
 41359                           ; BSR set to: 1
 41360                           ;../../VLCBlib_PIC/event_teach_large.c: 1005:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1006:         if (tableIndex == 0xff) return 0xff;
 41361   00A63C  29C9               	incf	findEvent@tableIndex& (0+255),w,b
 41362   00A63E  A4D8               	btfss	status,2,c
 41363   00A640  D002               	goto	l19560
 41364   00A642                     u19530:
 41365                           
 41366                           ; BSR set to: 1
 41367   00A642  0EFF               	movlw	255
 41368   00A644  0012               	return	
 41369   00A646                     l19560:
 41370                           
 41371                           ; BSR set to: 1
 41372                           ;../../VLCBlib_PIC/event_teach_large.c: 1007:         nn = getNN(tableIndex);
 41373   00A646  51C9               	movf	findEvent@tableIndex& (0+255),w,b
 41374   00A648  ECB0  F04A         	call	_getNN
 41375   00A64C  C097  F1C3         	movff	?_getNN,findEvent@nn
 41376   00A650  C098  F1C4         	movff	?_getNN+1,findEvent@nn+1
 41377                           
 41378                           ;../../VLCBlib_PIC/event_teach_large.c: 1008:         en = getEN(tableIndex);
 41379   00A654  0101               	movlb	1	; () banked
 41380   00A656  51C9               	movf	findEvent@tableIndex& (0+255),w,b
 41381   00A658  EC9A  F056         	call	_getEN
 41382   00A65C  C097  F1C5         	movff	?_getEN,findEvent@en
 41383   00A660  C098  F1C6         	movff	?_getEN+1,findEvent@en+1
 41384                           
 41385                           ;../../VLCBlib_PIC/event_teach_large.c: 1009:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 41386   00A664  0101               	movlb	1	; () banked
 41387   00A666  51BD               	movf	findEvent@nodeNumber& (0+255),w,b
 41388   00A668  19C3               	xorwf	findEvent@nn& (0+255),w,b
 41389   00A66A  E10D               	bnz	l19570
 41390   00A66C  51BE               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 41391   00A66E  19C4               	xorwf	(findEvent@nn+1)& (0+255),w,b
 41392   00A670  A4D8               	btfss	status,2,c
 41393   00A672  D009               	goto	l19570
 41394                           
 41395                           ; BSR set to: 1
 41396   00A674  51BF               	movf	findEvent@eventNumber& (0+255),w,b
 41397   00A676  19C5               	xorwf	findEvent@en& (0+255),w,b
 41398   00A678  E106               	bnz	l19570
 41399   00A67A  51C0               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 41400   00A67C  19C6               	xorwf	(findEvent@en+1)& (0+255),w,b
 41401   00A67E  A4D8               	btfss	status,2,c
 41402   00A680  D002               	goto	l19570
 41403                           
 41404                           ; BSR set to: 1
 41405                           ;../../VLCBlib_PIC/event_teach_large.c: 1010:             return tableIndex;
 41406   00A682  51C9               	movf	findEvent@tableIndex& (0+255),w,b
 41407   00A684  0012               	return	
 41408   00A686                     l19570:
 41409                           
 41410                           ; BSR set to: 1
 41411                           ;../../VLCBlib_PIC/event_teach_large.c: 1012:     }
 41412   00A686  2BC8               	incf	findEvent@chainIdx& (0+255),f,b
 41413                           
 41414                           ; BSR set to: 1
 41415   00A688  0E13               	movlw	19
 41416   00A68A  65C8               	cpfsgt	findEvent@chainIdx& (0+255),b
 41417   00A68C  D7C7               	goto	l19552
 41418   00A68E  D7D9               	goto	u19530
 41419   00A690                     __end_of_findEvent:
 41420                           	callstack 0
 41421                           
 41422 ;; *************** function _getNN *****************
 41423 ;; Defined at:
 41424 ;;		line 1220 in file "../../VLCBlib_PIC/event_teach_large.c"
 41425 ;; Parameters:    Size  Location     Type
 41426 ;;  tableIndex      1    wreg     unsigned char 
 41427 ;; Auto vars:     Size  Location     Type
 41428 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 41429 ;;  lo              2   63[BANK0 ] unsigned short 
 41430 ;;  hi              2   61[BANK0 ] unsigned short 
 41431 ;;  f               1   65[BANK0 ] struct .
 41432 ;; Return value:  Size  Location     Type
 41433 ;;                  2   55[BANK0 ] unsigned short 
 41434 ;; Registers used:
 41435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41436 ;; Tracked objects:
 41437 ;;		On entry : 0/0
 41438 ;;		On exit  : 0/0
 41439 ;;		Unchanged: 0/0
 41440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41442 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41444 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41445 ;;Total ram usage:       12 bytes
 41446 ;; Hardware stack levels used: 1
 41447 ;; Hardware stack levels required when called: 14
 41448 ;; This function calls:
 41449 ;;		_readNVM
 41450 ;; This function is called by:
 41451 ;;		_nerdCallback
 41452 ;;		_doNenrd
 41453 ;;		_reqevCallback
 41454 ;;		_findEvent
 41455 ;;		_rebuildHashtable
 41456 ;;		_sendProducedEvent
 41457 ;; This function uses a non-reentrant model
 41458 ;;
 41459                           
 41460                           	psect	text177
 41461   009560                     __ptext177:
 41462                           	callstack 0
 41463   009560                     _getNN:
 41464                           	callstack 13
 41465                           
 41466                           ; BSR set to: 1
 41467                           ;incstack = 0
 41468                           ;getNN@tableIndex stored from wreg
 41469   009560  0100               	movlb	0	; () banked
 41470   009562  6FA2               	movwf	getNN@tableIndex& (0+255),b
 41471                           
 41472                           ;../../VLCBlib_PIC/event_teach_large.c: 1221:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1222:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1223:     Ev
      +                          entTableFlags f;;../../VLCBlib_PIC/event_teach_large.c: 1225:     f.asByte = (uint8_t)re
      +                          adNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 41473   009564  0100               	movlb	0	; () banked
 41474   009566  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41475   009568  6F99               	movwf	??_getNN& (0+255),b
 41476   00956A  6B9A               	clrf	(??_getNN+1)& (0+255),b
 41477   00956C  3B99               	swapf	??_getNN& (0+255),f,b
 41478   00956E  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 41479   009570  0EF0               	movlw	240
 41480   009572  179A               	andwf	(??_getNN+1)& (0+255),f,b
 41481   009574  5199               	movf	??_getNN& (0+255),w,b
 41482   009576  0B0F               	andlw	15
 41483   009578  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 41484   00957A  0EF0               	movlw	240
 41485   00957C  1799               	andwf	??_getNN& (0+255),f,b
 41486   00957E  0E80               	movlw	128
 41487   009580  2599               	addwf	??_getNN& (0+255),w,b
 41488   009582  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41489   009584  0EEF               	movlw	239
 41490   009586  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41491   009588  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41492   00958A  C09B  F091         	movff	??_getNN+2,readNVM@index
 41493   00958E  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41494   009592  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41495   009594  0E01               	movlw	1
 41496   009596  ECD1  F05A         	call	_readNVM
 41497   00959A  0100               	movlb	0	; () banked
 41498   00959C  5191               	movf	?_readNVM& (0+255),w,b
 41499   00959E  6FA1               	movwf	getNN@f& (0+255),b
 41500                           
 41501                           ; BSR set to: 0
 41502                           ;../../VLCBlib_PIC/event_teach_large.c: 1226:     if (f.forceOwnNN) {
 41503   0095A0  ADA1               	btfss	getNN@f& (0+255),6,b
 41504   0095A2  D005               	goto	l19026
 41505                           
 41506                           ; BSR set to: 0
 41507                           ;../../VLCBlib_PIC/event_teach_large.c: 1227:         return nn.word;
 41508   0095A4  C0B5  F097         	movff	_nn,?_getNN
 41509   0095A8  C0B6  F098         	movff	_nn+1,?_getNN+1
 41510   0095AC  0012               	return	
 41511   0095AE                     l19026:
 41512                           
 41513                           ; BSR set to: 0
 41514                           ;../../VLCBlib_PIC/event_teach_large.c: 1229:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2);
 41515   0095AE  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41516   0095B0  0D10               	mullw	16
 41517   0095B2  CFF3 F099          	movff	prodl,??_getNN
 41518   0095B6  CFF4 F09A          	movff	prodh,??_getNN+1
 41519   0095BA  0E82               	movlw	130
 41520   0095BC  2599               	addwf	??_getNN& (0+255),w,b
 41521   0095BE  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41522   0095C0  0EEF               	movlw	239
 41523   0095C2  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41524   0095C4  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41525   0095C6  C09B  F091         	movff	??_getNN+2,readNVM@index
 41526   0095CA  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41527   0095CE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41528   0095D0  0E01               	movlw	1
 41529   0095D2  ECD1  F05A         	call	_readNVM
 41530   0095D6  0100               	movlb	0	; () banked
 41531   0095D8  5191               	movf	?_readNVM& (0+255),w,b
 41532   0095DA  6F9F               	movwf	getNN@lo& (0+255),b
 41533   0095DC  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 41534                           
 41535                           ;../../VLCBlib_PIC/event_teach_large.c: 1230:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2 +1);
 41536   0095DE  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41537   0095E0  0D10               	mullw	16
 41538   0095E2  CFF3 F099          	movff	prodl,??_getNN
 41539   0095E6  CFF4 F09A          	movff	prodh,??_getNN+1
 41540   0095EA  0E83               	movlw	131
 41541   0095EC  2599               	addwf	??_getNN& (0+255),w,b
 41542   0095EE  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41543   0095F0  0EEF               	movlw	239
 41544   0095F2  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41545   0095F4  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41546   0095F6  C09B  F091         	movff	??_getNN+2,readNVM@index
 41547   0095FA  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41548   0095FE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41549   009600  0E01               	movlw	1
 41550   009602  ECD1  F05A         	call	_readNVM
 41551   009606  0100               	movlb	0	; () banked
 41552   009608  5191               	movf	?_readNVM& (0+255),w,b
 41553   00960A  6F9D               	movwf	getNN@hi& (0+255),b
 41554   00960C  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 41555                           
 41556                           ; BSR set to: 0
 41557                           ;../../VLCBlib_PIC/event_teach_large.c: 1231:     return lo | (hi << 8);
 41558   00960E  519D               	movf	getNN@hi& (0+255),w,b
 41559   009610  6F9A               	movwf	(??_getNN+1)& (0+255),b
 41560   009612  6B99               	clrf	??_getNN& (0+255),b
 41561   009614  519F               	movf	getNN@lo& (0+255),w,b
 41562   009616  1199               	iorwf	??_getNN& (0+255),w,b
 41563   009618  6F97               	movwf	?_getNN& (0+255),b
 41564   00961A  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 41565   00961C  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 41566   00961E  6F98               	movwf	(?_getNN+1)& (0+255),b
 41567                           
 41568                           ; BSR set to: 0
 41569   009620  0012               	return		;funcret
 41570   009622                     __end_of_getNN:
 41571                           	callstack 0
 41572                           
 41573 ;; *************** function _getHash *****************
 41574 ;; Defined at:
 41575 ;;		line 1314 in file "../../VLCBlib_PIC/event_teach_large.c"
 41576 ;; Parameters:    Size  Location     Type
 41577 ;;  nn              2   67[BANK0 ] unsigned short 
 41578 ;;  en              2   69[BANK0 ] unsigned short 
 41579 ;; Auto vars:     Size  Location     Type
 41580 ;;  hash            1   72[BANK0 ] unsigned char 
 41581 ;; Return value:  Size  Location     Type
 41582 ;;                  1    wreg      unsigned char 
 41583 ;; Registers used:
 41584 ;;		wreg, status,2, status,0, prodl, prodh
 41585 ;; Tracked objects:
 41586 ;;		On entry : 0/0
 41587 ;;		On exit  : 0/0
 41588 ;;		Unchanged: 0/0
 41589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41593 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41594 ;;Total ram usage:        6 bytes
 41595 ;; Hardware stack levels used: 1
 41596 ;; Hardware stack levels required when called: 12
 41597 ;; This function calls:
 41598 ;;		Nothing
 41599 ;; This function is called by:
 41600 ;;		_findEvent
 41601 ;;		_rebuildHashtable
 41602 ;; This function uses a non-reentrant model
 41603 ;;
 41604                           
 41605                           	psect	text178
 41606   00C62A                     __ptext178:
 41607                           	callstack 0
 41608   00C62A                     _getHash:
 41609                           	callstack 15
 41610                           
 41611                           ;../../VLCBlib_PIC/event_teach_large.c: 1315:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1317:     hash = (uint8_t)(nn ^ (nn >> 8U));
 41612                           
 41613                           ; BSR set to: 0
 41614                           ;incstack = 0
 41615   00C62A  0100               	movlb	0	; () banked
 41616   00C62C  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 41617   00C62E  19A3               	xorwf	getHash@nn& (0+255),w,b
 41618   00C630  6FA8               	movwf	getHash@hash& (0+255),b
 41619                           
 41620                           ; BSR set to: 0
 41621                           ;../../VLCBlib_PIC/event_teach_large.c: 1318:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 41622   00C632  51A6               	movf	(getHash@en+1)& (0+255),w,b
 41623   00C634  19A5               	xorwf	getHash@en& (0+255),w,b
 41624   00C636  6FA7               	movwf	??_getHash& (0+255),b
 41625   00C638  51A8               	movf	getHash@hash& (0+255),w,b
 41626   00C63A  0D07               	mullw	7
 41627   00C63C  50F3               	movf	243,w,c
 41628   00C63E  25A7               	addwf	??_getHash& (0+255),w,b
 41629   00C640  6FA8               	movwf	getHash@hash& (0+255),b
 41630                           
 41631                           ; BSR set to: 0
 41632                           ;../../VLCBlib_PIC/event_teach_large.c: 1320:     hash %= 32;
 41633   00C642  0E1F               	movlw	31
 41634   00C644  17A8               	andwf	getHash@hash& (0+255),f,b
 41635                           
 41636                           ; BSR set to: 0
 41637                           ;../../VLCBlib_PIC/event_teach_large.c: 1321:     return hash;
 41638   00C646  51A8               	movf	getHash@hash& (0+255),w,b
 41639                           
 41640                           ; BSR set to: 0
 41641   00C648  0012               	return		;funcret
 41642   00C64A                     __end_of_getHash:
 41643                           	callstack 0
 41644                           
 41645 ;; *************** function _getEN *****************
 41646 ;; Defined at:
 41647 ;;		line 1241 in file "../../VLCBlib_PIC/event_teach_large.c"
 41648 ;; Parameters:    Size  Location     Type
 41649 ;;  tableIndex      1    wreg     unsigned char 
 41650 ;; Auto vars:     Size  Location     Type
 41651 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 41652 ;;  lo              2   63[BANK0 ] unsigned short 
 41653 ;;  hi              2   61[BANK0 ] unsigned short 
 41654 ;; Return value:  Size  Location     Type
 41655 ;;                  2   55[BANK0 ] unsigned short 
 41656 ;; Registers used:
 41657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41658 ;; Tracked objects:
 41659 ;;		On entry : 0/0
 41660 ;;		On exit  : 0/0
 41661 ;;		Unchanged: 0/0
 41662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41664 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41665 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41666 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41667 ;;Total ram usage:       11 bytes
 41668 ;; Hardware stack levels used: 1
 41669 ;; Hardware stack levels required when called: 14
 41670 ;; This function calls:
 41671 ;;		_readNVM
 41672 ;; This function is called by:
 41673 ;;		_nerdCallback
 41674 ;;		_doNenrd
 41675 ;;		_reqevCallback
 41676 ;;		_findEvent
 41677 ;;		_rebuildHashtable
 41678 ;;		_sendProducedEvent
 41679 ;; This function uses a non-reentrant model
 41680 ;;
 41681                           
 41682                           	psect	text179
 41683   00AD34                     __ptext179:
 41684                           	callstack 0
 41685   00AD34                     _getEN:
 41686                           	callstack 13
 41687                           
 41688                           ; BSR set to: 0
 41689                           ;incstack = 0
 41690                           ;getEN@tableIndex stored from wreg
 41691   00AD34  0100               	movlb	0	; () banked
 41692   00AD36  6FA1               	movwf	getEN@tableIndex& (0+255),b
 41693                           
 41694                           ;../../VLCBlib_PIC/event_teach_large.c: 1242:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1243:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1245:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 41695   00AD38  0100               	movlb	0	; () banked
 41696   00AD3A  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41697   00AD3C  0D10               	mullw	16
 41698   00AD3E  CFF3 F099          	movff	prodl,??_getEN
 41699   00AD42  CFF4 F09A          	movff	prodh,??_getEN+1
 41700   00AD46  0E84               	movlw	132
 41701   00AD48  2599               	addwf	??_getEN& (0+255),w,b
 41702   00AD4A  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41703   00AD4C  0EEF               	movlw	239
 41704   00AD4E  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41705   00AD50  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41706   00AD52  C09B  F091         	movff	??_getEN+2,readNVM@index
 41707   00AD56  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41708   00AD5A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41709   00AD5C  0E01               	movlw	1
 41710   00AD5E  ECD1  F05A         	call	_readNVM
 41711   00AD62  0100               	movlb	0	; () banked
 41712   00AD64  5191               	movf	?_readNVM& (0+255),w,b
 41713   00AD66  6F9F               	movwf	getEN@lo& (0+255),b
 41714   00AD68  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 41715                           
 41716                           ;../../VLCBlib_PIC/event_teach_large.c: 1246:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+4 +1);
 41717   00AD6A  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41718   00AD6C  0D10               	mullw	16
 41719   00AD6E  CFF3 F099          	movff	prodl,??_getEN
 41720   00AD72  CFF4 F09A          	movff	prodh,??_getEN+1
 41721   00AD76  0E85               	movlw	133
 41722   00AD78  2599               	addwf	??_getEN& (0+255),w,b
 41723   00AD7A  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41724   00AD7C  0EEF               	movlw	239
 41725   00AD7E  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41726   00AD80  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41727   00AD82  C09B  F091         	movff	??_getEN+2,readNVM@index
 41728   00AD86  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41729   00AD8A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41730   00AD8C  0E01               	movlw	1
 41731   00AD8E  ECD1  F05A         	call	_readNVM
 41732   00AD92  0100               	movlb	0	; () banked
 41733   00AD94  5191               	movf	?_readNVM& (0+255),w,b
 41734   00AD96  6F9D               	movwf	getEN@hi& (0+255),b
 41735   00AD98  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 41736                           
 41737                           ; BSR set to: 0
 41738                           ;../../VLCBlib_PIC/event_teach_large.c: 1247:     return lo | (hi << 8);
 41739   00AD9A  519D               	movf	getEN@hi& (0+255),w,b
 41740   00AD9C  6F9A               	movwf	(??_getEN+1)& (0+255),b
 41741   00AD9E  6B99               	clrf	??_getEN& (0+255),b
 41742   00ADA0  519F               	movf	getEN@lo& (0+255),w,b
 41743   00ADA2  1199               	iorwf	??_getEN& (0+255),w,b
 41744   00ADA4  6F97               	movwf	?_getEN& (0+255),b
 41745   00ADA6  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 41746   00ADA8  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 41747   00ADAA  6F98               	movwf	(?_getEN+1)& (0+255),b
 41748                           
 41749                           ; BSR set to: 0
 41750   00ADAC  0012               	return		;funcret
 41751   00ADAE                     __end_of_getEN:
 41752                           	callstack 0
 41753                           
 41754 ;; *************** function _configIO *****************
 41755 ;; Defined at:
 41756 ;;		line 559 in file "../main.c"
 41757 ;; Parameters:    Size  Location     Type
 41758 ;;  i               1    wreg     unsigned char 
 41759 ;; Auto vars:     Size  Location     Type
 41760 ;;  i               1    9[BANK1 ] unsigned char 
 41761 ;;  type            1    8[BANK1 ] unsigned char 
 41762 ;;  action          1    7[BANK1 ] unsigned char 
 41763 ;; Return value:  Size  Location     Type
 41764 ;;                  1    wreg      void 
 41765 ;; Registers used:
 41766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41767 ;; Tracked objects:
 41768 ;;		On entry : 0/0
 41769 ;;		On exit  : 0/0
 41770 ;;		Unchanged: 0/0
 41771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41773 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41774 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41775 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41776 ;;Total ram usage:        8 bytes
 41777 ;; Hardware stack levels used: 1
 41778 ;; Hardware stack levels required when called: 18
 41779 ;; This function calls:
 41780 ;;		_getNV
 41781 ;;		_readNVM
 41782 ;;		_setDigitalOutput
 41783 ;;		_writeNVM
 41784 ;; This function is called by:
 41785 ;;		_setup
 41786 ;;		_setType
 41787 ;; This function uses a non-reentrant model
 41788 ;;
 41789                           
 41790                           	psect	text180
 41791   004E66                     __ptext180:
 41792                           	callstack 0
 41793   004E66                     _configIO:
 41794                           	callstack 11
 41795                           
 41796                           ; BSR set to: 0
 41797                           ;incstack = 0
 41798                           ;configIO@i stored from wreg
 41799   004E66  0101               	movlb	1	; () banked
 41800   004E68  6FC6               	movwf	configIO@i& (0+255),b
 41801                           
 41802                           ;../main.c: 560:     uint8_t action;;../main.c: 561:     uint8_t type;;../main.c: 563:  
      +                             if (i >= 16) return;
 41803   004E6A  0E0F               	movlw	15
 41804   004E6C  0101               	movlb	1	; () banked
 41805   004E6E  65C6               	cpfsgt	configIO@i& (0+255),b
 41806   004E70  D001               	goto	l19788
 41807   004E72  0012               	return	
 41808   004E74                     l19788:
 41809                           
 41810                           ; BSR set to: 1
 41811                           ;../main.c: 566:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 41812   004E74  51C6               	movf	configIO@i& (0+255),w,b
 41813   004E76  0D07               	mullw	7
 41814   004E78  50F3               	movf	243,w,c
 41815   004E7A  0F10               	addlw	16
 41816   004E7C  EC53  F05F         	call	_getNV
 41817   004E80  0100               	movlb	0	; () banked
 41818   004E82  518D               	movf	?_getNV& (0+255),w,b
 41819   004E84  0101               	movlb	1	; () banked
 41820   004E86  6FC5               	movwf	configIO@type& (0+255),b
 41821                           
 41822                           ;../main.c: 567:     switch (type) {
 41823   004E88  D060               	goto	l19812
 41824   004E8A                     l19790:
 41825                           
 41826                           ; BSR set to: 1
 41827                           ;../main.c: 569:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 41828   004E8A  51C6               	movf	configIO@i& (0+255),w,b
 41829   004E8C  0D07               	mullw	7
 41830   004E8E  50F3               	movf	243,w,c
 41831   004E90  0F11               	addlw	17
 41832   004E92  EC53  F05F         	call	_getNV
 41833   004E96  0100               	movlb	0	; () banked
 41834   004E98  A58D               	btfss	?_getNV& (0+255),2,b
 41835   004E9A  D018               	goto	l19794
 41836                           
 41837                           ; BSR set to: 0
 41838                           ;../main.c: 570:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 41839   004E9C  0EDE               	movlw	222
 41840   004E9E  0101               	movlb	1	; () banked
 41841   004EA0  25C6               	addwf	configIO@i& (0+255),w,b
 41842   004EA2  6FBF               	movwf	??_configIO& (0+255),b
 41843   004EA4  6BC0               	clrf	(??_configIO+1)& (0+255),b
 41844   004EA6  0E03               	movlw	3
 41845   004EA8  23C0               	addwfc	(??_configIO+1)& (0+255),f,b
 41846   004EAA  C1BF  F091         	movff	??_configIO,readNVM@index
 41847   004EAE  C1C0  F092         	movff	??_configIO+1,readNVM@index+1
 41848   004EB2  0100               	movlb	0	; () banked
 41849   004EB4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41850   004EB6  0E00               	movlw	0
 41851   004EB8  ECD1  F05A         	call	_readNVM
 41852   004EBC  0100               	movlb	0	; () banked
 41853   004EBE  5191               	movf	?_readNVM& (0+255),w,b
 41854   004EC0  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41855   004EC2  0101               	movlb	1	; () banked
 41856   004EC4  51C6               	movf	configIO@i& (0+255),w,b
 41857   004EC6  EC8F  F053         	call	_setDigitalOutput
 41858                           
 41859                           ;../main.c: 571:             } else {
 41860   004ECA  D122               	goto	l19846
 41861   004ECC                     l19794:
 41862                           
 41863                           ; BSR set to: 0
 41864                           ;../main.c: 572:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 41865   004ECC  0101               	movlb	1	; () banked
 41866   004ECE  51C6               	movf	configIO@i& (0+255),w,b
 41867   004ED0  0D07               	mullw	7
 41868   004ED2  50F3               	movf	243,w,c
 41869   004ED4  0F11               	addlw	17
 41870   004ED6  EC53  F05F         	call	_getNV
 41871   004EDA  0100               	movlb	0	; () banked
 41872   004EDC  BB8D               	btfsc	?_getNV& (0+255),5,b
 41873   004EDE  D005               	goto	l19798
 41874                           
 41875                           ; BSR set to: 0
 41876   004EE0  0E00               	movlw	0
 41877   004EE2  0101               	movlb	1	; () banked
 41878   004EE4  6FC3               	movwf	(_configIO$746+1)& (0+255),b
 41879   004EE6  0E02               	movlw	2
 41880   004EE8  D004               	goto	L25
 41881   004EEA                     l19798:
 41882                           
 41883                           ; BSR set to: 0
 41884   004EEA  0E00               	movlw	0
 41885   004EEC  0101               	movlb	1	; () banked
 41886   004EEE  6FC3               	movwf	(_configIO$746+1)& (0+255),b
 41887   004EF0  0E01               	movlw	1
 41888   004EF2                     L25:
 41889   004EF2  6FC2               	movwf	_configIO$746& (0+255),b
 41890                           
 41891                           ; BSR set to: 1
 41892   004EF4  C1C2  F1C4         	movff	_configIO$746,configIO@action
 41893                           
 41894                           ; BSR set to: 1
 41895                           ;../main.c: 573:                 setDigitalOutput(i, action);
 41896   004EF8  C1C4  F097         	movff	configIO@action,setDigitalOutput@state
 41897   004EFC  51C6               	movf	configIO@i& (0+255),w,b
 41898   004EFE  EC8F  F053         	call	_setDigitalOutput
 41899                           
 41900                           ;../main.c: 575:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 41901   004F02  0EDE               	movlw	222
 41902   004F04  0101               	movlb	1	; () banked
 41903   004F06  25C6               	addwf	configIO@i& (0+255),w,b
 41904   004F08  6FBF               	movwf	??_configIO& (0+255),b
 41905   004F0A  6BC0               	clrf	(??_configIO+1)& (0+255),b
 41906   004F0C  0E03               	movlw	3
 41907   004F0E  23C0               	addwfc	(??_configIO+1)& (0+255),f,b
 41908   004F10  C1BF  F0A4         	movff	??_configIO,writeNVM@index
 41909   004F14  C1C0  F0A5         	movff	??_configIO+1,writeNVM@index+1
 41910   004F18  0100               	movlb	0	; () banked
 41911   004F1A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 41912   004F1C  C1C4  F0A7         	movff	configIO@action,writeNVM@value
 41913   004F20  0E00               	movlw	0
 41914   004F22  EC61  F05D         	call	_writeNVM
 41915   004F26  D0F4               	goto	l19846
 41916   004F28                     l19806:
 41917                           
 41918                           ; BSR set to: 1
 41919                           ;../main.c: 584:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41920   004F28  51C6               	movf	configIO@i& (0+255),w,b
 41921   004F2A  0D07               	mullw	7
 41922   004F2C  50F3               	movf	243,w,c
 41923   004F2E  0F11               	addlw	17
 41924   004F30  EC53  F05F         	call	_getNV
 41925   004F34  0100               	movlb	0	; () banked
 41926   004F36  518D               	movf	?_getNV& (0+255),w,b
 41927   004F38  0B10               	andlw	16
 41928   004F3A  0101               	movlb	1	; () banked
 41929   004F3C  6FC1               	movwf	_configIO$8092& (0+255),b
 41930                           
 41931                           ; BSR set to: 1
 41932                           ;../main.c: 584:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41933   004F3E  C1C1  F097         	movff	_configIO$8092,setDigitalOutput@state
 41934   004F42  51C6               	movf	configIO@i& (0+255),w,b
 41935   004F44  EC8F  F053         	call	_setDigitalOutput
 41936                           
 41937                           ;../main.c: 585:             break;
 41938   004F48  D0E3               	goto	l19846
 41939   004F4A                     l19812:
 41940                           
 41941                           ; BSR set to: 1
 41942   004F4A  51C5               	movf	configIO@type& (0+255),w,b
 41943                           
 41944                           ; Switch size 1, requested type "simple"
 41945                           ; Number of cases is 3, Range of values is 1 to 3
 41946                           ; switch strategies available:
 41947                           ; Name         Instructions Cycles
 41948                           ; simple_byte           10     6 (average)
 41949                           ;	Chosen strategy is simple_byte
 41950   004F4C  0A01               	xorlw	1	; case 1
 41951   004F4E  B4D8               	btfsc	status,2,c
 41952   004F50  D79C               	goto	l19790
 41953   004F52  0A03               	xorlw	3	; case 2
 41954   004F54  B4D8               	btfsc	status,2,c
 41955   004F56  D7E8               	goto	l19806
 41956   004F58  0A01               	xorlw	1	; case 3
 41957   004F5A  B4D8               	btfsc	status,2,c
 41958   004F5C  D7E5               	goto	l19806
 41959   004F5E  D0D8               	goto	l19846
 41960   004F60                     l19814:
 41961                           
 41962                           ; BSR set to: 1
 41963                           ;../main.c: 599:             if ((type == 0) || (type == 5) || (type == 6)) {
 41964   004F60  51C5               	movf	configIO@type& (0+255),w,b
 41965   004F62  B4D8               	btfsc	status,2,c
 41966   004F64  D008               	goto	u19910
 41967                           
 41968                           ; BSR set to: 1
 41969   004F66  0E05               	movlw	5
 41970   004F68  19C5               	xorwf	configIO@type& (0+255),w,b
 41971   004F6A  B4D8               	btfsc	status,2,c
 41972   004F6C  D004               	goto	u19910
 41973                           
 41974                           ; BSR set to: 1
 41975   004F6E  0E06               	movlw	6
 41976   004F70  19C5               	xorwf	configIO@type& (0+255),w,b
 41977   004F72  A4D8               	btfss	status,2,c
 41978   004F74  D01E               	goto	l19822
 41979   004F76                     u19910:
 41980                           
 41981                           ; BSR set to: 1
 41982                           ;../main.c: 600:                 TRISA |= (1 << configs[i].no);
 41983   004F76  51C6               	movf	configIO@i& (0+255),w,b
 41984   004F78  0D04               	mullw	4
 41985   004F7A  0E02               	movlw	2
 41986   004F7C  26F3               	addwf	243,f,c
 41987   004F7E  0E00               	movlw	0
 41988   004F80  22F4               	addwfc	244,f,c
 41989   004F82  0E29               	movlw	low _configs
 41990   004F84  24F3               	addwf	243,w,c
 41991   004F86  6EF6               	movwf	tblptrl,c
 41992   004F88  0EEE               	movlw	high _configs
 41993   004F8A  20F4               	addwfc	244,w,c
 41994   004F8C  6EF7               	movwf	tblptrh,c
 41995   004F8E                     	if	1	;There are 3 active tblptr bytes
 41996   004F8E  6AF8               	clrf	tblptru,c
 41997   004F90  0E00               	movlw	low (__mediumconst shr (0+16))
 41998   004F92  22F8               	addwfc	tblptru,f,c
 41999   004F94                     	endif
 42000   004F94  0008               	tblrd		*
 42001   004F96  CFF5 F1BF          	movff	tablat,??_configIO
 42002   004F9A  0E01               	movlw	1
 42003   004F9C  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42004   004F9E  2BBF               	incf	??_configIO& (0+255),f,b
 42005   004FA0  D002               	goto	u19924
 42006   004FA2                     u19925:
 42007   004FA2  90D8               	bcf	status,0,c
 42008   004FA4  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42009   004FA6                     u19924:
 42010   004FA6  2FBF               	decfsz	??_configIO& (0+255),f,b
 42011   004FA8  D7FC               	goto	u19925
 42012   004FAA  0101               	movlb	1	; () banked
 42013   004FAC  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42014   004FAE  1292               	iorwf	146,f,c	;volatile
 42015                           
 42016                           ;../main.c: 601:             } else {
 42017   004FB0  0012               	return	
 42018   004FB2                     l19822:
 42019                           
 42020                           ; BSR set to: 1
 42021                           ;../main.c: 602:                 TRISA &= ~(1 << configs[i].no);
 42022   004FB2  51C6               	movf	configIO@i& (0+255),w,b
 42023   004FB4  0D04               	mullw	4
 42024   004FB6  0E02               	movlw	2
 42025   004FB8  26F3               	addwf	243,f,c
 42026   004FBA  0E00               	movlw	0
 42027   004FBC  22F4               	addwfc	244,f,c
 42028   004FBE  0E29               	movlw	low _configs
 42029   004FC0  24F3               	addwf	243,w,c
 42030   004FC2  6EF6               	movwf	tblptrl,c
 42031   004FC4  0EEE               	movlw	high _configs
 42032   004FC6  20F4               	addwfc	244,w,c
 42033   004FC8  6EF7               	movwf	tblptrh,c
 42034   004FCA                     	if	1	;There are 3 active tblptr bytes
 42035   004FCA  6AF8               	clrf	tblptru,c
 42036   004FCC  0E00               	movlw	low (__mediumconst shr (0+16))
 42037   004FCE  22F8               	addwfc	tblptru,f,c
 42038   004FD0                     	endif
 42039   004FD0  0008               	tblrd		*
 42040   004FD2  CFF5 F1BF          	movff	tablat,??_configIO
 42041   004FD6  0E01               	movlw	1
 42042   004FD8  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42043   004FDA  2BBF               	incf	??_configIO& (0+255),f,b
 42044   004FDC  D002               	goto	u19934
 42045   004FDE                     u19935:
 42046   004FDE  90D8               	bcf	status,0,c
 42047   004FE0  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42048   004FE2                     u19934:
 42049   004FE2  2FBF               	decfsz	??_configIO& (0+255),f,b
 42050   004FE4  D7FC               	goto	u19935
 42051   004FE6  0101               	movlb	1	; () banked
 42052   004FE8  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42053   004FEA  0AFF               	xorlw	255
 42054   004FEC  1692               	andwf	146,f,c	;volatile
 42055   004FEE  0012               	return	
 42056   004FF0                     l19824:
 42057                           
 42058                           ; BSR set to: 1
 42059                           ;../main.c: 606:             if ((type == 0) || (type == 5) || (type == 6)) {
 42060   004FF0  51C5               	movf	configIO@type& (0+255),w,b
 42061   004FF2  B4D8               	btfsc	status,2,c
 42062   004FF4  D008               	goto	u19960
 42063                           
 42064                           ; BSR set to: 1
 42065   004FF6  0E05               	movlw	5
 42066   004FF8  19C5               	xorwf	configIO@type& (0+255),w,b
 42067   004FFA  B4D8               	btfsc	status,2,c
 42068   004FFC  D004               	goto	u19960
 42069                           
 42070                           ; BSR set to: 1
 42071   004FFE  0E06               	movlw	6
 42072   005000  19C5               	xorwf	configIO@type& (0+255),w,b
 42073   005002  A4D8               	btfss	status,2,c
 42074   005004  D01E               	goto	l19832
 42075   005006                     u19960:
 42076                           
 42077                           ; BSR set to: 1
 42078                           ;../main.c: 607:                 TRISB |= (1 << configs[i].no);
 42079   005006  51C6               	movf	configIO@i& (0+255),w,b
 42080   005008  0D04               	mullw	4
 42081   00500A  0E02               	movlw	2
 42082   00500C  26F3               	addwf	243,f,c
 42083   00500E  0E00               	movlw	0
 42084   005010  22F4               	addwfc	244,f,c
 42085   005012  0E29               	movlw	low _configs
 42086   005014  24F3               	addwf	243,w,c
 42087   005016  6EF6               	movwf	tblptrl,c
 42088   005018  0EEE               	movlw	high _configs
 42089   00501A  20F4               	addwfc	244,w,c
 42090   00501C  6EF7               	movwf	tblptrh,c
 42091   00501E                     	if	1	;There are 3 active tblptr bytes
 42092   00501E  6AF8               	clrf	tblptru,c
 42093   005020  0E00               	movlw	low (__mediumconst shr (0+16))
 42094   005022  22F8               	addwfc	tblptru,f,c
 42095   005024                     	endif
 42096   005024  0008               	tblrd		*
 42097   005026  CFF5 F1BF          	movff	tablat,??_configIO
 42098   00502A  0E01               	movlw	1
 42099   00502C  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42100   00502E  2BBF               	incf	??_configIO& (0+255),f,b
 42101   005030  D002               	goto	u19974
 42102   005032                     u19975:
 42103   005032  90D8               	bcf	status,0,c
 42104   005034  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42105   005036                     u19974:
 42106   005036  2FBF               	decfsz	??_configIO& (0+255),f,b
 42107   005038  D7FC               	goto	u19975
 42108   00503A  0101               	movlb	1	; () banked
 42109   00503C  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42110   00503E  1293               	iorwf	147,f,c	;volatile
 42111                           
 42112                           ;../main.c: 608:             } else {
 42113   005040  0012               	return	
 42114   005042                     l19832:
 42115                           
 42116                           ; BSR set to: 1
 42117                           ;../main.c: 609:                 TRISB &= ~(1 << configs[i].no);
 42118   005042  51C6               	movf	configIO@i& (0+255),w,b
 42119   005044  0D04               	mullw	4
 42120   005046  0E02               	movlw	2
 42121   005048  26F3               	addwf	243,f,c
 42122   00504A  0E00               	movlw	0
 42123   00504C  22F4               	addwfc	244,f,c
 42124   00504E  0E29               	movlw	low _configs
 42125   005050  24F3               	addwf	243,w,c
 42126   005052  6EF6               	movwf	tblptrl,c
 42127   005054  0EEE               	movlw	high _configs
 42128   005056  20F4               	addwfc	244,w,c
 42129   005058  6EF7               	movwf	tblptrh,c
 42130   00505A                     	if	1	;There are 3 active tblptr bytes
 42131   00505A  6AF8               	clrf	tblptru,c
 42132   00505C  0E00               	movlw	low (__mediumconst shr (0+16))
 42133   00505E  22F8               	addwfc	tblptru,f,c
 42134   005060                     	endif
 42135   005060  0008               	tblrd		*
 42136   005062  CFF5 F1BF          	movff	tablat,??_configIO
 42137   005066  0E01               	movlw	1
 42138   005068  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42139   00506A  2BBF               	incf	??_configIO& (0+255),f,b
 42140   00506C  D002               	goto	u19984
 42141   00506E                     u19985:
 42142   00506E  90D8               	bcf	status,0,c
 42143   005070  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42144   005072                     u19984:
 42145   005072  2FBF               	decfsz	??_configIO& (0+255),f,b
 42146   005074  D7FC               	goto	u19985
 42147   005076  0101               	movlb	1	; () banked
 42148   005078  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42149   00507A  0AFF               	xorlw	255
 42150   00507C  1693               	andwf	147,f,c	;volatile
 42151   00507E  0012               	return	
 42152   005080                     l19834:
 42153                           
 42154                           ; BSR set to: 1
 42155                           ;../main.c: 613:             if ((type == 0) || (type == 5) || (type == 6)) {
 42156   005080  51C5               	movf	configIO@type& (0+255),w,b
 42157   005082  B4D8               	btfsc	status,2,c
 42158   005084  D008               	goto	u20010
 42159                           
 42160                           ; BSR set to: 1
 42161   005086  0E05               	movlw	5
 42162   005088  19C5               	xorwf	configIO@type& (0+255),w,b
 42163   00508A  B4D8               	btfsc	status,2,c
 42164   00508C  D004               	goto	u20010
 42165                           
 42166                           ; BSR set to: 1
 42167   00508E  0E06               	movlw	6
 42168   005090  19C5               	xorwf	configIO@type& (0+255),w,b
 42169   005092  A4D8               	btfss	status,2,c
 42170   005094  D01E               	goto	l19842
 42171   005096                     u20010:
 42172                           
 42173                           ; BSR set to: 1
 42174                           ;../main.c: 614:                 TRISC |= (1 << configs[i].no);
 42175   005096  51C6               	movf	configIO@i& (0+255),w,b
 42176   005098  0D04               	mullw	4
 42177   00509A  0E02               	movlw	2
 42178   00509C  26F3               	addwf	243,f,c
 42179   00509E  0E00               	movlw	0
 42180   0050A0  22F4               	addwfc	244,f,c
 42181   0050A2  0E29               	movlw	low _configs
 42182   0050A4  24F3               	addwf	243,w,c
 42183   0050A6  6EF6               	movwf	tblptrl,c
 42184   0050A8  0EEE               	movlw	high _configs
 42185   0050AA  20F4               	addwfc	244,w,c
 42186   0050AC  6EF7               	movwf	tblptrh,c
 42187   0050AE                     	if	1	;There are 3 active tblptr bytes
 42188   0050AE  6AF8               	clrf	tblptru,c
 42189   0050B0  0E00               	movlw	low (__mediumconst shr (0+16))
 42190   0050B2  22F8               	addwfc	tblptru,f,c
 42191   0050B4                     	endif
 42192   0050B4  0008               	tblrd		*
 42193   0050B6  CFF5 F1BF          	movff	tablat,??_configIO
 42194   0050BA  0E01               	movlw	1
 42195   0050BC  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42196   0050BE  2BBF               	incf	??_configIO& (0+255),f,b
 42197   0050C0  D002               	goto	u20024
 42198   0050C2                     u20025:
 42199   0050C2  90D8               	bcf	status,0,c
 42200   0050C4  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42201   0050C6                     u20024:
 42202   0050C6  2FBF               	decfsz	??_configIO& (0+255),f,b
 42203   0050C8  D7FC               	goto	u20025
 42204   0050CA  0101               	movlb	1	; () banked
 42205   0050CC  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42206   0050CE  1294               	iorwf	148,f,c	;volatile
 42207                           
 42208                           ;../main.c: 615:             } else {
 42209   0050D0  0012               	return	
 42210   0050D2                     l19842:
 42211                           
 42212                           ; BSR set to: 1
 42213                           ;../main.c: 616:                 TRISC &= ~(1 << configs[i].no);
 42214   0050D2  51C6               	movf	configIO@i& (0+255),w,b
 42215   0050D4  0D04               	mullw	4
 42216   0050D6  0E02               	movlw	2
 42217   0050D8  26F3               	addwf	243,f,c
 42218   0050DA  0E00               	movlw	0
 42219   0050DC  22F4               	addwfc	244,f,c
 42220   0050DE  0E29               	movlw	low _configs
 42221   0050E0  24F3               	addwf	243,w,c
 42222   0050E2  6EF6               	movwf	tblptrl,c
 42223   0050E4  0EEE               	movlw	high _configs
 42224   0050E6  20F4               	addwfc	244,w,c
 42225   0050E8  6EF7               	movwf	tblptrh,c
 42226   0050EA                     	if	1	;There are 3 active tblptr bytes
 42227   0050EA  6AF8               	clrf	tblptru,c
 42228   0050EC  0E00               	movlw	low (__mediumconst shr (0+16))
 42229   0050EE  22F8               	addwfc	tblptru,f,c
 42230   0050F0                     	endif
 42231   0050F0  0008               	tblrd		*
 42232   0050F2  CFF5 F1BF          	movff	tablat,??_configIO
 42233   0050F6  0E01               	movlw	1
 42234   0050F8  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42235   0050FA  2BBF               	incf	??_configIO& (0+255),f,b
 42236   0050FC  D002               	goto	u20034
 42237   0050FE                     u20035:
 42238   0050FE  90D8               	bcf	status,0,c
 42239   005100  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42240   005102                     u20034:
 42241   005102  2FBF               	decfsz	??_configIO& (0+255),f,b
 42242   005104  D7FC               	goto	u20035
 42243   005106  0101               	movlb	1	; () banked
 42244   005108  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42245   00510A  0AFF               	xorlw	255
 42246   00510C  1694               	andwf	148,f,c	;volatile
 42247   00510E  0012               	return	
 42248   005110                     l19846:
 42249   005110  0101               	movlb	1	; () banked
 42250   005112  51C6               	movf	configIO@i& (0+255),w,b
 42251   005114  0D04               	mullw	4
 42252   005116  0E01               	movlw	1
 42253   005118  26F3               	addwf	243,f,c
 42254   00511A  0E00               	movlw	0
 42255   00511C  22F4               	addwfc	244,f,c
 42256   00511E  0E29               	movlw	low _configs
 42257   005120  24F3               	addwf	243,w,c
 42258   005122  6EF6               	movwf	tblptrl,c
 42259   005124  0EEE               	movlw	high _configs
 42260   005126  20F4               	addwfc	244,w,c
 42261   005128  6EF7               	movwf	tblptrh,c
 42262   00512A                     	if	1	;There are 3 active tblptr bytes
 42263   00512A  6AF8               	clrf	tblptru,c
 42264   00512C  0E00               	movlw	low (__mediumconst shr (0+16))
 42265   00512E  22F8               	addwfc	tblptru,f,c
 42266   005130                     	endif
 42267   005130  0008               	tblrd		*
 42268   005132  50F5               	movf	tablat,w,c
 42269                           
 42270                           ; Switch size 1, requested type "simple"
 42271                           ; Number of cases is 3, Range of values is 65 to 67
 42272                           ; switch strategies available:
 42273                           ; Name         Instructions Cycles
 42274                           ; simple_byte           10     6 (average)
 42275                           ;	Chosen strategy is simple_byte
 42276   005134  0A41               	xorlw	65	; case 65
 42277   005136  B4D8               	btfsc	status,2,c
 42278   005138  D713               	goto	l19814
 42279   00513A  0A03               	xorlw	3	; case 66
 42280   00513C  B4D8               	btfsc	status,2,c
 42281   00513E  D758               	goto	l19824
 42282   005140  0A01               	xorlw	1	; case 67
 42283   005142  A4D8               	btfss	status,2,c
 42284   005144  0012               	return	
 42285   005146  D79C               	goto	l19834
 42286   005148                     __end_of_configIO:
 42287                           	callstack 0
 42288                           
 42289 ;; *************** function _writeNVM *****************
 42290 ;; Defined at:
 42291 ;;		line 533 in file "../../VLCBlib_PIC/nvm.c"
 42292 ;; Parameters:    Size  Location     Type
 42293 ;;  type            1    wreg     enum E12738
 42294 ;;  index           3   68[BANK0 ] unsigned um
 42295 ;;  value           1   71[BANK0 ] unsigned char 
 42296 ;; Auto vars:     Size  Location     Type
 42297 ;;  type            1   72[BANK0 ] enum E12738
 42298 ;; Return value:  Size  Location     Type
 42299 ;;                  1    wreg      unsigned char 
 42300 ;; Registers used:
 42301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42302 ;; Tracked objects:
 42303 ;;		On entry : 0/0
 42304 ;;		On exit  : 0/0
 42305 ;;		Unchanged: 0/0
 42306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42307 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42309 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42310 ;;      Totals:         0       5       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42311 ;;Total ram usage:        7 bytes
 42312 ;; Hardware stack levels used: 1
 42313 ;; Hardware stack levels required when called: 17
 42314 ;; This function calls:
 42315 ;;		_EEPROM_Write
 42316 ;;		_FLASH_Write
 42317 ;; This function is called by:
 42318 ;;		_configIO
 42319 ;;		_startDigitalOutput
 42320 ;;		_inputScan
 42321 ;;		_pollServos
 42322 ;;		_bootProcessMessage
 42323 ;;		_mnsFactoryReset
 42324 ;;		_mnsProcessMessage
 42325 ;;		_mnsPoll
 42326 ;;		_nvFactoryReset
 42327 ;;		_saveNV
 42328 ;;		_setNV
 42329 ;;		_factoryReset
 42330 ;;		_canFactoryReset
 42331 ;;		_setNewCanId
 42332 ;;		_clearAllEvents
 42333 ;;		_removeTableEntry
 42334 ;;		_addEvent
 42335 ;;		_writeEv
 42336 ;; This function uses a non-reentrant model
 42337 ;;
 42338                           
 42339                           	psect	text181
 42340   00BAC2                     __ptext181:
 42341                           	callstack 0
 42342   00BAC2                     _writeNVM:
 42343                           	callstack 11
 42344                           
 42345                           ; BSR set to: 1
 42346                           ;incstack = 0
 42347                           ;writeNVM@type stored from wreg
 42348   00BAC2  0100               	movlb	0	; () banked
 42349   00BAC4  6FA8               	movwf	writeNVM@type& (0+255),b
 42350                           
 42351                           ;../../VLCBlib_PIC/nvm.c: 534:     switch(type) {
 42352   00BAC6  D012               	goto	l19060
 42353   00BAC8                     l19050:
 42354                           
 42355                           ; BSR set to: 1
 42356                           ;../../VLCBlib_PIC/nvm.c: 536:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 42357   00BAC8  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 42358   00BACC  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 42359   00BAD0  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 42360   00BAD4  EC41  F059         	call	_EEPROM_Write	;wreg free
 42361   00BAD8  0012               	return	
 42362   00BADA                     l19054:
 42363                           
 42364                           ; BSR set to: 1
 42365                           ;../../VLCBlib_PIC/nvm.c: 538:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 42366   00BADA  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 42367   00BADE  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 42368   00BAE2  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 42369   00BAE6  EC54  F048         	call	_FLASH_Write	;wreg free
 42370   00BAEA  0012               	return	
 42371   00BAEC                     l19060:
 42372   00BAEC  0100               	movlb	0	; () banked
 42373   00BAEE  51A8               	movf	writeNVM@type& (0+255),w,b
 42374   00BAF0  0101               	movlb	1	; () banked
 42375   00BAF2  6FBD               	movwf	??_writeNVM& (0+255),b
 42376   00BAF4  6BBE               	clrf	(??_writeNVM+1)& (0+255),b
 42377                           
 42378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42379                           ; Switch size 1, requested type "simple"
 42380                           ; Number of cases is 1, Range of values is 0 to 0
 42381                           ; switch strategies available:
 42382                           ; Name         Instructions Cycles
 42383                           ; simple_byte            4     3 (average)
 42384                           ;	Chosen strategy is simple_byte
 42385   00BAF6  51BE               	movf	(??_writeNVM+1)& (0+255),w,b
 42386   00BAF8  0A00               	xorlw	0	; case 0
 42387   00BAFA  A4D8               	btfss	status,2,c
 42388   00BAFC  0012               	return	
 42389                           
 42390                           ; BSR set to: 1
 42391                           ; Switch size 1, requested type "simple"
 42392                           ; Number of cases is 2, Range of values is 0 to 1
 42393                           ; switch strategies available:
 42394                           ; Name         Instructions Cycles
 42395                           ; simple_byte            7     4 (average)
 42396                           ;	Chosen strategy is simple_byte
 42397   00BAFE  51BD               	movf	??_writeNVM& (0+255),w,b
 42398   00BB00  0A00               	xorlw	0	; case 0
 42399   00BB02  B4D8               	btfsc	status,2,c
 42400   00BB04  D7E1               	goto	l19050
 42401   00BB06  0A01               	xorlw	1	; case 1
 42402   00BB08  A4D8               	btfss	status,2,c
 42403   00BB0A  0012               	return	
 42404   00BB0C  D7E6               	goto	l19054
 42405   00BB0E                     __end_of_writeNVM:
 42406                           	callstack 0
 42407                           
 42408 ;; *************** function _FLASH_Write *****************
 42409 ;; Defined at:
 42410 ;;		line 487 in file "../../VLCBlib_PIC/nvm.c"
 42411 ;; Parameters:    Size  Location     Type
 42412 ;;  index           2   48[BANK0 ] unsigned short 
 42413 ;;  value           1   50[BANK0 ] unsigned char 
 42414 ;; Auto vars:     Size  Location     Type
 42415 ;;  oldValue        1    0        unsigned char 
 42416 ;; Return value:  Size  Location     Type
 42417 ;;                  1    wreg      unsigned char 
 42418 ;; Registers used:
 42419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42420 ;; Tracked objects:
 42421 ;;		On entry : 0/0
 42422 ;;		On exit  : 0/0
 42423 ;;		Unchanged: 0/0
 42424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42425 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42427 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42428 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42429 ;;Total ram usage:        7 bytes
 42430 ;; Hardware stack levels used: 1
 42431 ;; Hardware stack levels required when called: 16
 42432 ;; This function calls:
 42433 ;;		_eraseFlashBlock
 42434 ;;		_flushFlashBlock
 42435 ;;		_loadFlashBlock
 42436 ;; This function is called by:
 42437 ;;		_writeNVM
 42438 ;; This function uses a non-reentrant model
 42439 ;;
 42440                           
 42441                           	psect	text182
 42442   0090A8                     __ptext182:
 42443                           	callstack 0
 42444   0090A8                     _FLASH_Write:
 42445                           	callstack 11
 42446                           
 42447                           ;../../VLCBlib_PIC/nvm.c: 488:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 503:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 42448                           
 42449                           ;incstack = 0
 42450   0090A8  0EC0               	movlw	192
 42451   0090AA  0100               	movlb	0	; () banked
 42452   0090AC  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42453   0090AE  6F93               	movwf	??_FLASH_Write& (0+255),b
 42454   0090B0  0EFF               	movlw	255
 42455   0090B2  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42456   0090B4  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42457   0090B6  51D1               	movf	_flashBlock& (0+255),w,b
 42458   0090B8  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 42459   0090BA  E104               	bnz	u18800
 42460   0090BC  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 42461   0090BE  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 42462   0090C0  B4D8               	btfsc	status,2,c
 42463   0090C2  D015               	goto	l19008
 42464   0090C4                     u18800:
 42465                           
 42466                           ; BSR set to: 0
 42467                           ;../../VLCBlib_PIC/nvm.c: 504:         if (flashBlock != 0) {
 42468   0090C4  51D1               	movf	_flashBlock& (0+255),w,b
 42469   0090C6  11D2               	iorwf	(_flashBlock+1)& (0+255),w,b
 42470   0090C8  B4D8               	btfsc	status,2,c
 42471   0090CA  D008               	goto	l19004
 42472                           
 42473                           ; BSR set to: 0
 42474                           ;../../VLCBlib_PIC/nvm.c: 506:             if (flashFlags.eraseNeeded) {
 42475   0090CC  A3BA               	btfss	_flashFlags& (0+255),1,b
 42476   0090CE  D004               	goto	l19002
 42477                           
 42478                           ; BSR set to: 0
 42479                           ;../../VLCBlib_PIC/nvm.c: 507:                 eraseFlashBlock();
 42480   0090D0  EC87  F05D         	call	_eraseFlashBlock	;wreg free
 42481                           
 42482                           ;../../VLCBlib_PIC/nvm.c: 508:                 flashFlags.eraseNeeded = 0;
 42483   0090D4  0100               	movlb	0	; () banked
 42484   0090D6  93BA               	bcf	_flashFlags& (0+255),1,b
 42485   0090D8                     l19002:
 42486                           
 42487                           ; BSR set to: 0
 42488                           ;../../VLCBlib_PIC/nvm.c: 511:             flushFlashBlock();
 42489   0090D8  EC5E  F054         	call	_flushFlashBlock	;wreg free
 42490   0090DC                     l19004:
 42491                           
 42492                           ;../../VLCBlib_PIC/nvm.c: 515:         flashBlock = (index&(~((flash_address_t)64 -1)));
 42493   0090DC  0EC0               	movlw	192
 42494   0090DE  0100               	movlb	0	; () banked
 42495   0090E0  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42496   0090E2  6FD1               	movwf	_flashBlock& (0+255),b
 42497   0090E4  0EFF               	movlw	255
 42498   0090E6  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42499   0090E8  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 42500                           
 42501                           ; BSR set to: 0
 42502                           ;../../VLCBlib_PIC/nvm.c: 516:         loadFlashBlock();
 42503   0090EA  EC42  F05E         	call	_loadFlashBlock	;wreg free
 42504   0090EE                     l19008:
 42505                           
 42506                           ;../../VLCBlib_PIC/nvm.c: 518:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 42507   0090EE  0E3F               	movlw	63
 42508   0090F0  0100               	movlb	0	; () banked
 42509   0090F2  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42510   0090F4  6F93               	movwf	??_FLASH_Write& (0+255),b
 42511   0090F6  0E00               	movlw	0
 42512   0090F8  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42513   0090FA  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42514   0090FC  0E48               	movlw	low _flashBuffer
 42515   0090FE  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42516   009100  6ED9               	movwf	fsr2l,c
 42517   009102  0E03               	movlw	high _flashBuffer
 42518   009104  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42519   009106  6EDA               	movwf	fsr2h,c
 42520   009108  50DF               	movf	indf2,w,c
 42521   00910A  0AFF               	xorlw	255
 42522   00910C  1592               	andwf	FLASH_Write@value& (0+255),w,b
 42523   00910E  0900               	iorlw	0
 42524   009110  B4D8               	btfsc	status,2,c
 42525   009112  D003               	goto	u18830
 42526   009114  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42527   009116  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 42528   009118  D002               	goto	u18848
 42529   00911A                     u18830:
 42530   00911A  0100               	movlb	0	; () banked
 42531   00911C  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42532   00911E                     u18848:
 42533   00911E  31BA               	rrcf	_flashFlags& (0+255),w,b
 42534   009120  0B01               	andlw	1
 42535   009122  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 42536   009124  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 42537   009126  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 42538   009128  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 42539   00912A  51BA               	movf	_flashFlags& (0+255),w,b
 42540   00912C  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42541   00912E  0BFD               	andlw	-3
 42542   009130  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42543   009132  6FBA               	movwf	_flashFlags& (0+255),b
 42544                           
 42545                           ; BSR set to: 0
 42546                           ;../../VLCBlib_PIC/nvm.c: 519:     if (flashBuffer[(index&(64 -1))] != value) {
 42547   009134  0E3F               	movlw	63
 42548   009136  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42549   009138  6F93               	movwf	??_FLASH_Write& (0+255),b
 42550   00913A  0E00               	movlw	0
 42551   00913C  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42552   00913E  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42553   009140  0E48               	movlw	low _flashBuffer
 42554   009142  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42555   009144  6ED9               	movwf	fsr2l,c
 42556   009146  0E03               	movlw	high _flashBuffer
 42557   009148  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42558   00914A  6EDA               	movwf	fsr2h,c
 42559   00914C  5192               	movf	FLASH_Write@value& (0+255),w,b
 42560   00914E  18DE               	xorwf	postinc2,w,c
 42561   009150  B4D8               	btfsc	status,2,c
 42562   009152  D00F               	goto	l19016
 42563                           
 42564                           ; BSR set to: 0
 42565                           ;../../VLCBlib_PIC/nvm.c: 520:         flashFlags.writeNeeded = 1;
 42566   009154  81BA               	bsf	_flashFlags& (0+255),0,b
 42567                           
 42568                           ; BSR set to: 0
 42569                           ;../../VLCBlib_PIC/nvm.c: 521:         flashBuffer[(index&(64 -1))] = value;
 42570   009156  0E3F               	movlw	63
 42571   009158  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42572   00915A  6F93               	movwf	??_FLASH_Write& (0+255),b
 42573   00915C  0E00               	movlw	0
 42574   00915E  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42575   009160  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42576   009162  0E48               	movlw	low _flashBuffer
 42577   009164  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42578   009166  6ED9               	movwf	fsr2l,c
 42579   009168  0E03               	movlw	high _flashBuffer
 42580   00916A  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42581   00916C  6EDA               	movwf	fsr2h,c
 42582   00916E  C092  FFDF         	movff	FLASH_Write@value,indf2
 42583   009172                     l19016:
 42584                           
 42585                           ; BSR set to: 0
 42586                           ;../../VLCBlib_PIC/nvm.c: 523:     return GRSP_OK;
 42587   009172  0E00               	movlw	0
 42588                           
 42589                           ; BSR set to: 0
 42590   009174  0012               	return		;funcret
 42591   009176                     __end_of_FLASH_Write:
 42592                           	callstack 0
 42593                           
 42594 ;; *************** function _loadFlashBlock *****************
 42595 ;; Defined at:
 42596 ;;		line 449 in file "../../VLCBlib_PIC/nvm.c"
 42597 ;; Parameters:    Size  Location     Type
 42598 ;;		None
 42599 ;; Auto vars:     Size  Location     Type
 42600 ;;  i               1   45[BANK0 ] unsigned char 
 42601 ;; Return value:  Size  Location     Type
 42602 ;;                  1    wreg      void 
 42603 ;; Registers used:
 42604 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42605 ;; Tracked objects:
 42606 ;;		On entry : 0/0
 42607 ;;		On exit  : 0/0
 42608 ;;		Unchanged: 0/0
 42609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42613 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42614 ;;Total ram usage:        1 bytes
 42615 ;; Hardware stack levels used: 1
 42616 ;; Hardware stack levels required when called: 12
 42617 ;; This function calls:
 42618 ;;		Nothing
 42619 ;; This function is called by:
 42620 ;;		_FLASH_Write
 42621 ;; This function uses a non-reentrant model
 42622 ;;
 42623                           
 42624                           	psect	text183
 42625   00BC84                     __ptext183:
 42626                           	callstack 0
 42627   00BC84                     _loadFlashBlock:
 42628                           	callstack 14
 42629                           
 42630                           ;../../VLCBlib_PIC/nvm.c: 451:     EECON1=0X80;
 42631                           
 42632                           ; BSR set to: 0
 42633                           ;incstack = 0
 42634   00BC84  0E80               	movlw	128
 42635   00BC86  6E7F               	movwf	127,c	;volsfr
 42636                           
 42637                           ;../../VLCBlib_PIC/nvm.c: 452:     TBLPTR = flashBlock;
 42638   00BC88  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42639   00BC8C  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42640   00BC90  6AF8               	clrf	248,c	;volatile
 42641                           
 42642                           ;../../VLCBlib_PIC/nvm.c: 453:     TBLPTRU = 0;
 42643   00BC92  0E00               	movlw	0
 42644   00BC94  6EF8               	movwf	248,c	;volatile
 42645                           
 42646                           ;../../VLCBlib_PIC/nvm.c: 454:     for (uint8_t i=0; i<64; i++) {
 42647   00BC96  0E00               	movlw	0
 42648   00BC98  0100               	movlb	0	; () banked
 42649   00BC9A  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 42650   00BC9C                     l2227:
 42651                           
 42652                           ; BSR set to: 0
 42653   00BC9C  0009               	tblrd		*+	;# 
 42654                           
 42655                           ;../../VLCBlib_PIC/nvm.c: 456:         __nop();
 42656   00BC9E  0000               	nop	
 42657                           
 42658                           ;../../VLCBlib_PIC/nvm.c: 457:         flashBuffer[i] = TABLAT;
 42659   00BCA0  0E48               	movlw	low _flashBuffer
 42660   00BCA2  0100               	movlb	0	; () banked
 42661   00BCA4  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 42662   00BCA6  6ED9               	movwf	fsr2l,c
 42663   00BCA8  6ADA               	clrf	fsr2h,c
 42664   00BCAA  0E03               	movlw	high _flashBuffer
 42665   00BCAC  22DA               	addwfc	fsr2h,f,c
 42666   00BCAE  CFF5 FFDF          	movff	tablat,indf2	;volatile
 42667                           
 42668                           ; BSR set to: 0
 42669                           ;../../VLCBlib_PIC/nvm.c: 458:     }
 42670   00BCB2  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 42671                           
 42672                           ; BSR set to: 0
 42673   00BCB4  0E3F               	movlw	63
 42674   00BCB6  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 42675   00BCB8  D7F1               	goto	l2227
 42676                           
 42677                           ; BSR set to: 0
 42678                           ;../../VLCBlib_PIC/nvm.c: 459:     TBLPTR = flashBlock;
 42679   00BCBA  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42680   00BCBE  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42681   00BCC2  6AF8               	clrf	248,c	;volatile
 42682                           
 42683                           ; BSR set to: 0
 42684                           ;../../VLCBlib_PIC/nvm.c: 460:     TBLPTRU = 0;
 42685   00BCC4  0E00               	movlw	0
 42686   00BCC6  6EF8               	movwf	248,c	;volatile
 42687                           
 42688                           ; BSR set to: 0
 42689                           ;../../VLCBlib_PIC/nvm.c: 476:     flashFlags.asByte = 0;
 42690   00BCC8  0E00               	movlw	0
 42691   00BCCA  6FBA               	movwf	_flashFlags& (0+255),b
 42692                           
 42693                           ; BSR set to: 0
 42694   00BCCC  0012               	return		;funcret
 42695   00BCCE                     __end_of_loadFlashBlock:
 42696                           	callstack 0
 42697                           
 42698 ;; *************** function _flushFlashBlock *****************
 42699 ;; Defined at:
 42700 ;;		line 375 in file "../../VLCBlib_PIC/nvm.c"
 42701 ;; Parameters:    Size  Location     Type
 42702 ;;		None
 42703 ;; Auto vars:     Size  Location     Type
 42704 ;;  i               1   47[BANK0 ] unsigned char 
 42705 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 42706 ;; Return value:  Size  Location     Type
 42707 ;;                  1    wreg      void 
 42708 ;; Registers used:
 42709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42710 ;; Tracked objects:
 42711 ;;		On entry : 0/0
 42712 ;;		On exit  : 0/0
 42713 ;;		Unchanged: 0/0
 42714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42718 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42719 ;;Total ram usage:        2 bytes
 42720 ;; Hardware stack levels used: 1
 42721 ;; Hardware stack levels required when called: 15
 42722 ;; This function calls:
 42723 ;;		_APP_isSuitableTimeToWriteFlash
 42724 ;;		_eraseFlashBlock
 42725 ;; This function is called by:
 42726 ;;		_APP_factoryReset
 42727 ;;		_deleteActionRange
 42728 ;;		_poll
 42729 ;;		_FLASH_Write
 42730 ;;		_clearAllEvents
 42731 ;;		_removeTableEntry
 42732 ;;		_addEvent
 42733 ;;		_deleteHappeningRange
 42734 ;; This function uses a non-reentrant model
 42735 ;;
 42736                           
 42737                           	psect	text184
 42738   00A8BC                     __ptext184:
 42739                           	callstack 0
 42740   00A8BC                     _flushFlashBlock:
 42741                           	callstack 11
 42742                           
 42743                           ;../../VLCBlib_PIC/nvm.c: 376:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 37
      +                          8:     TBLPTR = flashBlock;
 42744                           
 42745                           ; BSR set to: 0
 42746                           ;incstack = 0
 42747   00A8BC  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42748   00A8C0  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42749   00A8C4  6AF8               	clrf	248,c	;volatile
 42750                           
 42751                           ;../../VLCBlib_PIC/nvm.c: 379:     TBLPTRU = 0;
 42752   00A8C6  0E00               	movlw	0
 42753   00A8C8  6EF8               	movwf	248,c	;volatile
 42754                           
 42755                           ;../../VLCBlib_PIC/nvm.c: 384:     if (! flashFlags.writeNeeded) return;
 42756   00A8CA  0100               	movlb	0	; () banked
 42757   00A8CC  A1BA               	btfss	_flashFlags& (0+255),0,b
 42758   00A8CE  0012               	return	
 42759   00A8D0                     l18818:
 42760                           
 42761                           ;../../VLCBlib_PIC/nvm.c: 387:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42762   00A8D0  ECD8  F063         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42763   00A8D4  0900               	iorlw	0
 42764   00A8D6  B4D8               	btfsc	status,2,c
 42765   00A8D8  D7FB               	goto	l18818
 42766                           
 42767                           ;../../VLCBlib_PIC/nvm.c: 390:     if (flashFlags.eraseNeeded) {
 42768   00A8DA  0100               	movlb	0	; () banked
 42769   00A8DC  B3BA               	btfsc	_flashFlags& (0+255),1,b
 42770                           
 42771                           ; BSR set to: 0
 42772                           ;../../VLCBlib_PIC/nvm.c: 391:         eraseFlashBlock();
 42773   00A8DE  EC87  F05D         	call	_eraseFlashBlock	;wreg free
 42774                           
 42775                           ;../../VLCBlib_PIC/nvm.c: 394:     interruptEnabled = (INTCONbits.GIEH);
 42776   00A8E2  0E00               	movlw	0
 42777   00A8E4  BEF2               	btfsc	242,7,c	;volatile
 42778   00A8E6  0E01               	movlw	1
 42779   00A8E8  0100               	movlb	0	; () banked
 42780   00A8EA  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 42781                           
 42782                           ; BSR set to: 0
 42783                           ;../../VLCBlib_PIC/nvm.c: 395:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42784   00A8EC  9EF2               	bcf	242,7,c	;volatile
 42785                           
 42786                           ; BSR set to: 0
 42787   00A8EE  9CF2               	bcf	242,6,c	;volatile
 42788                           
 42789                           ; BSR set to: 0
 42790                           ;../../VLCBlib_PIC/nvm.c: 397:     for (uint8_t i=0; i<64; i++) {
 42791   00A8F0  0E00               	movlw	0
 42792   00A8F2  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 42793   00A8F4                     l18834:
 42794                           
 42795                           ; BSR set to: 0
 42796                           ;../../VLCBlib_PIC/nvm.c: 398:         TABLAT = flashBuffer[i];
 42797   00A8F4  0E48               	movlw	low _flashBuffer
 42798   00A8F6  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 42799   00A8F8  6ED9               	movwf	fsr2l,c
 42800   00A8FA  6ADA               	clrf	fsr2h,c
 42801   00A8FC  0E03               	movlw	high _flashBuffer
 42802   00A8FE  22DA               	addwfc	fsr2h,f,c
 42803   00A900  50DF               	movf	indf2,w,c
 42804   00A902  6EF5               	movwf	245,c	;volatile
 42805   00A904  000D               	tblwt		*+	;# 
 42806                           
 42807                           ;../../VLCBlib_PIC/nvm.c: 400:     }
 42808   00A906  0100               	movlb	0	; () banked
 42809   00A908  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 42810                           
 42811                           ; BSR set to: 0
 42812   00A90A  0E3F               	movlw	63
 42813   00A90C  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 42814   00A90E  D7F2               	goto	l18834
 42815                           
 42816                           ; BSR set to: 0
 42817                           ;../../VLCBlib_PIC/nvm.c: 407:     TBLPTR = flashBlock;
 42818   00A910  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42819   00A914  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42820   00A918  6AF8               	clrf	248,c	;volatile
 42821                           
 42822                           ; BSR set to: 0
 42823                           ;../../VLCBlib_PIC/nvm.c: 408:     TBLPTRU = 0;
 42824   00A91A  0E00               	movlw	0
 42825   00A91C  6EF8               	movwf	248,c	;volatile
 42826                           
 42827                           ; BSR set to: 0
 42828                           ;../../VLCBlib_PIC/nvm.c: 409:     EECON1bits.EEPGD = 1;
 42829   00A91E  8E7F               	bsf	127,7,c	;volsfr
 42830                           
 42831                           ; BSR set to: 0
 42832                           ;../../VLCBlib_PIC/nvm.c: 410:     EECON1bits.CFGS = 0;
 42833   00A920  9C7F               	bcf	127,6,c	;volsfr
 42834                           
 42835                           ; BSR set to: 0
 42836                           ;../../VLCBlib_PIC/nvm.c: 411:     EECON1bits.FREE = 0;
 42837   00A922  987F               	bcf	127,4,c	;volsfr
 42838                           
 42839                           ; BSR set to: 0
 42840                           ;../../VLCBlib_PIC/nvm.c: 412:     EECON1bits.WREN = 1;
 42841   00A924  847F               	bsf	127,2,c	;volsfr
 42842                           
 42843                           ; BSR set to: 0
 42844                           ;../../VLCBlib_PIC/nvm.c: 414:     EECON2 = 0x55;
 42845   00A926  0E55               	movlw	85
 42846   00A928  6E7E               	movwf	126,c	;volsfr
 42847                           
 42848                           ; BSR set to: 0
 42849                           ;../../VLCBlib_PIC/nvm.c: 415:     EECON2 = 0xAA;
 42850   00A92A  0EAA               	movlw	170
 42851   00A92C  6E7E               	movwf	126,c	;volsfr
 42852                           
 42853                           ; BSR set to: 0
 42854                           ;../../VLCBlib_PIC/nvm.c: 416:     EECON1bits.WR = 1;
 42855   00A92E  827F               	bsf	127,1,c	;volsfr
 42856                           
 42857                           ; BSR set to: 0
 42858                           ;../../VLCBlib_PIC/nvm.c: 417:     EECON1bits.WREN = 0;
 42859   00A930  947F               	bcf	127,2,c	;volsfr
 42860                           
 42861                           ; BSR set to: 0
 42862                           ;../../VLCBlib_PIC/nvm.c: 440:     if (interruptEnabled) {
 42863   00A932  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 42864   00A934  B4D8               	btfsc	status,2,c
 42865   00A936  D002               	goto	l18864
 42866                           
 42867                           ; BSR set to: 0
 42868                           ;../../VLCBlib_PIC/nvm.c: 441:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42869   00A938  8EF2               	bsf	242,7,c	;volatile
 42870   00A93A  8CF2               	bsf	242,6,c	;volatile
 42871   00A93C                     l18864:
 42872                           
 42873                           ; BSR set to: 0
 42874                           ;../../VLCBlib_PIC/nvm.c: 443:     flashFlags.asByte = 0;
 42875   00A93C  0E00               	movlw	0
 42876   00A93E  6FBA               	movwf	_flashFlags& (0+255),b
 42877                           
 42878                           ; BSR set to: 0
 42879   00A940  0012               	return		;funcret
 42880   00A942                     __end_of_flushFlashBlock:
 42881                           	callstack 0
 42882                           
 42883 ;; *************** function _eraseFlashBlock *****************
 42884 ;; Defined at:
 42885 ;;		line 324 in file "../../VLCBlib_PIC/nvm.c"
 42886 ;; Parameters:    Size  Location     Type
 42887 ;;		None
 42888 ;; Auto vars:     Size  Location     Type
 42889 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 42890 ;; Return value:  Size  Location     Type
 42891 ;;                  1    wreg      void 
 42892 ;; Registers used:
 42893 ;;		wreg, status,2, cstack
 42894 ;; Tracked objects:
 42895 ;;		On entry : 0/0
 42896 ;;		On exit  : 0/0
 42897 ;;		Unchanged: 0/0
 42898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42902 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42903 ;;Total ram usage:        1 bytes
 42904 ;; Hardware stack levels used: 1
 42905 ;; Hardware stack levels required when called: 14
 42906 ;; This function calls:
 42907 ;;		_APP_isSuitableTimeToWriteFlash
 42908 ;; This function is called by:
 42909 ;;		_flushFlashBlock
 42910 ;;		_FLASH_Write
 42911 ;; This function uses a non-reentrant model
 42912 ;;
 42913                           
 42914                           	psect	text185
 42915   00BB0E                     __ptext185:
 42916                           	callstack 0
 42917   00BB0E                     _eraseFlashBlock:
 42918                           	callstack 11
 42919                           
 42920                           ;../../VLCBlib_PIC/nvm.c: 328:     while (! APP_isSuitableTimeToWriteFlash())
 42921                           
 42922                           ;../../VLCBlib_PIC/nvm.c: 325:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 32
      +                          8:     while (! APP_isSuitableTimeToWriteFlash())
 42923                           
 42924                           ; BSR set to: 0
 42925                           ;incstack = 0
 42926   00BB0E  ECD8  F063         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42927   00BB12  0900               	iorlw	0
 42928   00BB14  B4D8               	btfsc	status,2,c
 42929   00BB16  D7FB               	goto	__ptext185
 42930                           
 42931                           ;../../VLCBlib_PIC/nvm.c: 331:     interruptEnabled = (INTCONbits.GIEH);
 42932   00BB18  0E00               	movlw	0
 42933   00BB1A  BEF2               	btfsc	242,7,c	;volatile
 42934   00BB1C  0E01               	movlw	1
 42935   00BB1E  0100               	movlb	0	; () banked
 42936   00BB20  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 42937                           
 42938                           ; BSR set to: 0
 42939                           ;../../VLCBlib_PIC/nvm.c: 333:     TBLPTR = flashBlock;
 42940   00BB22  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42941   00BB26  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42942   00BB2A  6AF8               	clrf	248,c	;volatile
 42943                           
 42944                           ;../../VLCBlib_PIC/nvm.c: 334:     TBLPTRU = 0;
 42945   00BB2C  0E00               	movlw	0
 42946   00BB2E  6EF8               	movwf	248,c	;volatile
 42947                           
 42948                           ; BSR set to: 0
 42949                           ;../../VLCBlib_PIC/nvm.c: 335:     EECON1bits.EEPGD = 1;
 42950   00BB30  8E7F               	bsf	127,7,c	;volsfr
 42951                           
 42952                           ; BSR set to: 0
 42953                           ;../../VLCBlib_PIC/nvm.c: 336:     EECON1bits.CFGS = 0;
 42954   00BB32  9C7F               	bcf	127,6,c	;volsfr
 42955                           
 42956                           ; BSR set to: 0
 42957                           ;../../VLCBlib_PIC/nvm.c: 337:     EECON1bits.WREN = 1;
 42958   00BB34  847F               	bsf	127,2,c	;volsfr
 42959                           
 42960                           ; BSR set to: 0
 42961                           ;../../VLCBlib_PIC/nvm.c: 338:     EECON1bits.FREE = 1;
 42962   00BB36  887F               	bsf	127,4,c	;volsfr
 42963                           
 42964                           ; BSR set to: 0
 42965                           ;../../VLCBlib_PIC/nvm.c: 339:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42966   00BB38  9EF2               	bcf	242,7,c	;volatile
 42967                           
 42968                           ; BSR set to: 0
 42969   00BB3A  9CF2               	bcf	242,6,c	;volatile
 42970                           
 42971                           ;../../VLCBlib_PIC/nvm.c: 340:     EECON2 = 0x55;
 42972   00BB3C  0E55               	movlw	85
 42973   00BB3E  6E7E               	movwf	126,c	;volsfr
 42974                           
 42975                           ;../../VLCBlib_PIC/nvm.c: 341:     EECON2 = 0xaa;
 42976   00BB40  0EAA               	movlw	170
 42977   00BB42  6E7E               	movwf	126,c	;volsfr
 42978                           
 42979                           ; BSR set to: 0
 42980                           ;../../VLCBlib_PIC/nvm.c: 342:     EECON1bits.WR = 1;
 42981   00BB44  827F               	bsf	127,1,c	;volsfr
 42982   00BB46                     l2209:
 42983                           
 42984                           ;../../VLCBlib_PIC/nvm.c: 343:     while(EECON1bits.WR)
 42985   00BB46  B27F               	btfsc	127,1,c	;volsfr
 42986   00BB48  D7FE               	goto	l2209
 42987                           
 42988                           ;../../VLCBlib_PIC/nvm.c: 345:     EECON1bits.WREN = 0;
 42989   00BB4A  947F               	bcf	127,2,c	;volsfr
 42990                           
 42991                           ;../../VLCBlib_PIC/nvm.c: 365:     if (interruptEnabled) {
 42992   00BB4C  0100               	movlb	0	; () banked
 42993   00BB4E  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 42994   00BB50  B4D8               	btfsc	status,2,c
 42995   00BB52  0012               	return	
 42996                           
 42997                           ; BSR set to: 0
 42998                           ;../../VLCBlib_PIC/nvm.c: 366:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42999   00BB54  8EF2               	bsf	242,7,c	;volatile
 43000   00BB56  8CF2               	bsf	242,6,c	;volatile
 43001                           
 43002                           ; BSR set to: 0
 43003   00BB58  0012               	return		;funcret
 43004   00BB5A                     __end_of_eraseFlashBlock:
 43005                           	callstack 0
 43006                           
 43007 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 43008 ;; Defined at:
 43009 ;;		line 403 in file "../main.c"
 43010 ;; Parameters:    Size  Location     Type
 43011 ;;		None
 43012 ;; Auto vars:     Size  Location     Type
 43013 ;;		None
 43014 ;; Return value:  Size  Location     Type
 43015 ;;                  1    wreg      enum E12692
 43016 ;; Registers used:
 43017 ;;		wreg, status,2, cstack
 43018 ;; Tracked objects:
 43019 ;;		On entry : 0/0
 43020 ;;		On exit  : 0/0
 43021 ;;		Unchanged: 0/0
 43022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43027 ;;Total ram usage:        0 bytes
 43028 ;; Hardware stack levels used: 1
 43029 ;; Hardware stack levels required when called: 13
 43030 ;; This function calls:
 43031 ;;		_isNoServoPulses
 43032 ;; This function is called by:
 43033 ;;		_eraseFlashBlock
 43034 ;;		_flushFlashBlock
 43035 ;; This function uses a non-reentrant model
 43036 ;;
 43037                           
 43038                           	psect	text186
 43039   00C7B0                     __ptext186:
 43040                           	callstack 0
 43041   00C7B0                     _APP_isSuitableTimeToWriteFlash:
 43042                           	callstack 11
 43043                           
 43044                           ;../main.c: 405:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 43045                           
 43046                           ; BSR set to: 0
 43047                           ;incstack = 0
 43048   00C7B0  ECE1  F063         	call	_isNoServoPulses	;wreg free
 43049   00C7B4  0900               	iorlw	0
 43050   00C7B6  B4D8               	btfsc	status,2,c
 43051   00C7B8  D002               	goto	u18530
 43052   00C7BA  0E01               	movlw	1
 43053   00C7BC  0012               	return	
 43054   00C7BE                     u18530:
 43055   00C7BE  0E00               	movlw	0
 43056   00C7C0  0012               	return		;funcret
 43057   00C7C2                     __end_of_APP_isSuitableTimeToWriteFlash:
 43058                           	callstack 0
 43059                           
 43060 ;; *************** function _isNoServoPulses *****************
 43061 ;; Defined at:
 43062 ;;		line 705 in file "../servo.c"
 43063 ;; Parameters:    Size  Location     Type
 43064 ;;		None
 43065 ;; Auto vars:     Size  Location     Type
 43066 ;;		None
 43067 ;; Return value:  Size  Location     Type
 43068 ;;                  1    wreg      enum E12716
 43069 ;; Registers used:
 43070 ;;		wreg
 43071 ;; Tracked objects:
 43072 ;;		On entry : 0/0
 43073 ;;		On exit  : 0/0
 43074 ;;		Unchanged: 0/0
 43075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43080 ;;Total ram usage:        0 bytes
 43081 ;; Hardware stack levels used: 1
 43082 ;; Hardware stack levels required when called: 12
 43083 ;; This function calls:
 43084 ;;		Nothing
 43085 ;; This function is called by:
 43086 ;;		_APP_isSuitableTimeToWriteFlash
 43087 ;; This function uses a non-reentrant model
 43088 ;;
 43089                           
 43090                           	psect	text187
 43091   00C7C2                     __ptext187:
 43092                           	callstack 0
 43093   00C7C2                     _isNoServoPulses:
 43094                           	callstack 11
 43095                           
 43096                           ;../servo.c: 707:     if (T1CONbits.TMR1ON) return FALSE;
 43097                           
 43098                           ;incstack = 0
 43099   00C7C2  A0CD               	btfss	205,0,c	;volatile
 43100   00C7C4  D002               	goto	l1188
 43101   00C7C6                     u18510:
 43102   00C7C6  0E00               	movlw	0
 43103   00C7C8  0012               	return	
 43104   00C7CA                     l1188:
 43105                           
 43106                           ;../servo.c: 708:     if (T3CONbits.TMR3ON) return FALSE;
 43107   00C7CA  B0B1               	btfsc	177,0,c	;volatile
 43108   00C7CC  D7FC               	goto	u18510
 43109                           
 43110                           ;../servo.c: 710:     return TRUE;
 43111   00C7CE  0E01               	movlw	1
 43112   00C7D0  0012               	return		;funcret
 43113   00C7D2                     __end_of_isNoServoPulses:
 43114                           	callstack 0
 43115                           
 43116 ;; *************** function _EEPROM_Write *****************
 43117 ;; Defined at:
 43118 ;;		line 216 in file "../../VLCBlib_PIC/nvm.c"
 43119 ;; Parameters:    Size  Location     Type
 43120 ;;  index           2   47[BANK0 ] unsigned short 
 43121 ;;  value           1   49[BANK0 ] unsigned char 
 43122 ;; Auto vars:     Size  Location     Type
 43123 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 43124 ;; Return value:  Size  Location     Type
 43125 ;;                  1    wreg      unsigned char 
 43126 ;; Registers used:
 43127 ;;		wreg, status,2, status,0, cstack
 43128 ;; Tracked objects:
 43129 ;;		On entry : 0/0
 43130 ;;		On exit  : 0/0
 43131 ;;		Unchanged: 0/0
 43132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43133 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43136 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43137 ;;Total ram usage:        4 bytes
 43138 ;; Hardware stack levels used: 1
 43139 ;; Hardware stack levels required when called: 13
 43140 ;; This function calls:
 43141 ;;		_EEPROM_Read
 43142 ;;		_updateModuleErrorStatus
 43143 ;; This function is called by:
 43144 ;;		_writeNVM
 43145 ;; This function uses a non-reentrant model
 43146 ;;
 43147                           
 43148                           	psect	text188
 43149   00B282                     __ptext188:
 43150                           	callstack 0
 43151   00B282                     _EEPROM_Write:
 43152                           	callstack 14
 43153                           
 43154                           ;../../VLCBlib_PIC/nvm.c: 217:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 21
      +                          8:     interruptEnabled = (INTCONbits.GIEH);
 43155                           
 43156                           ;incstack = 0
 43157   00B282  0E00               	movlw	0
 43158   00B284  BEF2               	btfsc	242,7,c	;volatile
 43159   00B286  0E01               	movlw	1
 43160   00B288  0100               	movlb	0	; () banked
 43161   00B28A  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 43162   00B28C                     l18954:
 43163                           
 43164                           ;../../VLCBlib_PIC/nvm.c: 221:         EEADRH = (index >> 8)&0xFF;
 43165   00B28C  0100               	movlb	0	; () banked
 43166   00B28E  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 43167   00B290  6E75               	movwf	117,c	;volatile
 43168                           
 43169                           ; BSR set to: 0
 43170                           ;../../VLCBlib_PIC/nvm.c: 222:         EEADR = index & 0xFF;
 43171   00B292  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 43172                           
 43173                           ; BSR set to: 0
 43174                           ;../../VLCBlib_PIC/nvm.c: 223:         EEDATA = value;
 43175   00B296  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 43176                           
 43177                           ; BSR set to: 0
 43178                           ;../../VLCBlib_PIC/nvm.c: 224:         EECON1bits.EEPGD = 0;
 43179   00B29A  9E7F               	bcf	127,7,c	;volsfr
 43180                           
 43181                           ; BSR set to: 0
 43182                           ;../../VLCBlib_PIC/nvm.c: 225:         EECON1bits.CFGS = 0;
 43183   00B29C  9C7F               	bcf	127,6,c	;volsfr
 43184                           
 43185                           ; BSR set to: 0
 43186                           ;../../VLCBlib_PIC/nvm.c: 226:         EECON1bits.WREN = 1;
 43187   00B29E  847F               	bsf	127,2,c	;volsfr
 43188                           
 43189                           ; BSR set to: 0
 43190                           ;../../VLCBlib_PIC/nvm.c: 228:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 43191   00B2A0  9EF2               	bcf	242,7,c	;volatile
 43192                           
 43193                           ; BSR set to: 0
 43194   00B2A2  9CF2               	bcf	242,6,c	;volatile
 43195                           
 43196                           ; BSR set to: 0
 43197                           ;../../VLCBlib_PIC/nvm.c: 229:         EECON2 = 0x55;
 43198   00B2A4  0E55               	movlw	85
 43199   00B2A6  6E7E               	movwf	126,c	;volsfr
 43200                           
 43201                           ; BSR set to: 0
 43202                           ;../../VLCBlib_PIC/nvm.c: 230:         EECON2 = 0xAA;
 43203   00B2A8  0EAA               	movlw	170
 43204   00B2AA  6E7E               	movwf	126,c	;volsfr
 43205                           
 43206                           ; BSR set to: 0
 43207                           ;../../VLCBlib_PIC/nvm.c: 231:         EECON1bits.WR = 1;
 43208   00B2AC  827F               	bsf	127,1,c	;volsfr
 43209   00B2AE                     l2189:
 43210                           
 43211                           ;../../VLCBlib_PIC/nvm.c: 232:         while (EECON1bits.WR)
 43212   00B2AE  B27F               	btfsc	127,1,c	;volsfr
 43213   00B2B0  D7FE               	goto	l2189
 43214   00B2B2                     u18760:
 43215                           
 43216                           ;../../VLCBlib_PIC/nvm.c: 234:         while (!EEIF)
 43217                           
 43218                           ;../../VLCBlib_PIC/nvm.c: 235:             ;
 43219   00B2B2  ACB7               	btfss	4023,6,c	;volatile
 43220   00B2B4  D7FE               	goto	u18760
 43221                           
 43222                           ;../../VLCBlib_PIC/nvm.c: 236:         EEIF = 0;
 43223   00B2B6  9CB7               	bcf	4023,6,c	;volatile
 43224                           
 43225                           ;../../VLCBlib_PIC/nvm.c: 237:         if (interruptEnabled) {
 43226   00B2B8  0100               	movlb	0	; () banked
 43227   00B2BA  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 43228   00B2BC  B4D8               	btfsc	status,2,c
 43229   00B2BE  D002               	goto	l2195
 43230                           
 43231                           ; BSR set to: 0
 43232                           ;../../VLCBlib_PIC/nvm.c: 239:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 43233   00B2C0  8EF2               	bsf	242,7,c	;volatile
 43234   00B2C2  8CF2               	bsf	242,6,c	;volatile
 43235   00B2C4                     l2195:
 43236                           
 43237                           ; BSR set to: 0
 43238                           ;../../VLCBlib_PIC/nvm.c: 241:         EECON1bits.WREN = 0;
 43239   00B2C4  947F               	bcf	127,2,c	;volsfr
 43240                           
 43241                           ; BSR set to: 0
 43242                           ;../../VLCBlib_PIC/nvm.c: 277:         if (EEPROM_Read(index) == value) {
 43243   00B2C6  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 43244   00B2CA  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 43245   00B2CE  EC54  F063         	call	_EEPROM_Read	;wreg free
 43246   00B2D2  0100               	movlb	0	; () banked
 43247   00B2D4  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 43248   00B2D6  B4D8               	btfsc	status,2,c
 43249   00B2D8  D006               	goto	l18988
 43250                           
 43251                           ; BSR set to: 0
 43252                           ;../../VLCBlib_PIC/nvm.c: 281:         mnsDiagnostics[0x04].asUint++;
 43253   00B2DA  0101               	movlb	1	; () banked
 43254   00B2DC  4B98               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 43255   00B2DE  2B99               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 43256                           
 43257                           ; BSR set to: 1
 43258                           ;../../VLCBlib_PIC/nvm.c: 282:         updateModuleErrorStatus();
 43259   00B2E0  ECEF  F063         	call	_updateModuleErrorStatus	;wreg free
 43260                           
 43261                           ;../../VLCBlib_PIC/nvm.c: 284:     } while (1);
 43262   00B2E4  D7D3               	goto	l18954
 43263   00B2E6                     l18988:
 43264                           
 43265                           ; BSR set to: 0
 43266                           ;../../VLCBlib_PIC/nvm.c: 285:     return GRSP_OK;
 43267   00B2E6  0E00               	movlw	0
 43268                           
 43269                           ; BSR set to: 0
 43270   00B2E8  0012               	return		;funcret
 43271   00B2EA                     __end_of_EEPROM_Write:
 43272                           	callstack 0
 43273                           
 43274 ;; *************** function _updateModuleErrorStatus *****************
 43275 ;; Defined at:
 43276 ;;		line 617 in file "../../VLCBlib_PIC/mns.c"
 43277 ;; Parameters:    Size  Location     Type
 43278 ;;		None
 43279 ;; Auto vars:     Size  Location     Type
 43280 ;;		None
 43281 ;; Return value:  Size  Location     Type
 43282 ;;                  1    wreg      void 
 43283 ;; Registers used:
 43284 ;;		wreg, status,2, status,0
 43285 ;; Tracked objects:
 43286 ;;		On entry : 0/0
 43287 ;;		On exit  : 0/0
 43288 ;;		Unchanged: 0/0
 43289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43294 ;;Total ram usage:        0 bytes
 43295 ;; Hardware stack levels used: 1
 43296 ;; Hardware stack levels required when called: 12
 43297 ;; This function calls:
 43298 ;;		Nothing
 43299 ;; This function is called by:
 43300 ;;		_EEPROM_Write
 43301 ;;		_canSendMessage
 43302 ;;		_processEnumeration
 43303 ;; This function uses a non-reentrant model
 43304 ;;
 43305                           
 43306                           	psect	text189
 43307   00C7DE                     __ptext189:
 43308                           	callstack 0
 43309   00C7DE                     _updateModuleErrorStatus:
 43310                           	callstack 14
 43311                           
 43312                           ;../../VLCBlib_PIC/mns.c: 618:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 43313                           
 43314                           ; BSR set to: 0
 43315                           ;incstack = 0
 43316   00C7DE  0101               	movlb	1	; () banked
 43317   00C7E0  2992               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 43318   00C7E2  B4D8               	btfsc	status,2,c
 43319   00C7E4  0012               	return	
 43320                           
 43321                           ; BSR set to: 1
 43322                           ;../../VLCBlib_PIC/mns.c: 619:         mnsDiagnostics[0x01].asBytes.lo++;
 43323   00C7E6  2B92               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 43324                           
 43325                           ; BSR set to: 1
 43326   00C7E8  0012               	return		;funcret
 43327   00C7EA                     __end_of_updateModuleErrorStatus:
 43328                           	callstack 0
 43329                           
 43330 ;; *************** function _setDigitalOutput *****************
 43331 ;; Defined at:
 43332 ;;		line 226 in file "../digitalOut.c"
 43333 ;; Parameters:    Size  Location     Type
 43334 ;;  io              1    wreg     unsigned char 
 43335 ;;  state           1   55[BANK0 ] unsigned char 
 43336 ;; Auto vars:     Size  Location     Type
 43337 ;;  io              1   57[BANK0 ] unsigned char 
 43338 ;;  pinState        1   56[BANK0 ] enum E12766
 43339 ;; Return value:  Size  Location     Type
 43340 ;;                  1    wreg      void 
 43341 ;; Registers used:
 43342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43343 ;; Tracked objects:
 43344 ;;		On entry : 0/0
 43345 ;;		On exit  : 0/0
 43346 ;;		Unchanged: 0/0
 43347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43348 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43351 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43352 ;;Total ram usage:        3 bytes
 43353 ;; Hardware stack levels used: 1
 43354 ;; Hardware stack levels required when called: 13
 43355 ;; This function calls:
 43356 ;;		_getNV
 43357 ;;		_setOutputPin
 43358 ;; This function is called by:
 43359 ;;		_configIO
 43360 ;;		_setOutputPosition
 43361 ;; This function uses a non-reentrant model
 43362 ;;
 43363                           
 43364                           	psect	text190
 43365   00A71E                     __ptext190:
 43366                           	callstack 0
 43367   00A71E                     _setDigitalOutput:
 43368                           	callstack 14
 43369                           
 43370                           ; BSR set to: 1
 43371                           ;incstack = 0
 43372                           ;setDigitalOutput@io stored from wreg
 43373   00A71E  0100               	movlb	0	; () banked
 43374   00A720  6F99               	movwf	setDigitalOutput@io& (0+255),b
 43375                           
 43376                           ;../digitalOut.c: 227:     Boolean pinState;;../digitalOut.c: 228:     switch (state) {
 43377   00A722  D038               	goto	l19694
 43378   00A724                     l19678:
 43379                           
 43380                           ; BSR set to: 0
 43381                           ;../digitalOut.c: 230:             state = 2;
 43382   00A724  0E02               	movlw	2
 43383   00A726  6F97               	movwf	setDigitalOutput@state& (0+255),b
 43384   00A728                     l19680:
 43385                           
 43386                           ; BSR set to: 0
 43387                           ;../digitalOut.c: 234:             pinState = (state == 1);
 43388   00A728  0597               	decf	setDigitalOutput@state& (0+255),w,b
 43389   00A72A  A4D8               	btfss	status,2,c
 43390   00A72C  D002               	goto	u19710
 43391   00A72E  0E01               	movlw	1
 43392   00A730  D001               	goto	u19720
 43393   00A732                     u19710:
 43394   00A732  0E00               	movlw	0
 43395   00A734                     u19720:
 43396   00A734  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 43397                           
 43398                           ; BSR set to: 0
 43399                           ;../digitalOut.c: 238:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 43400   00A736  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43401   00A738  0D07               	mullw	7
 43402   00A73A  50F3               	movf	243,w,c
 43403   00A73C  0F11               	addlw	17
 43404   00A73E  EC53  F05F         	call	_getNV
 43405   00A742  0100               	movlb	0	; () banked
 43406   00A744  AB8D               	btfss	?_getNV& (0+255),5,b
 43407   00A746  D00B               	goto	l19686
 43408                           
 43409                           ; BSR set to: 0
 43410                           ;../digitalOut.c: 239:                 setOutputPin(io, ! pinState);
 43411   00A748  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 43412   00A74A  A4D8               	btfss	status,2,c
 43413   00A74C  D002               	goto	u19740
 43414   00A74E  0E01               	movlw	1
 43415   00A750  D001               	goto	u19750
 43416   00A752                     u19740:
 43417   00A752  0E00               	movlw	0
 43418   00A754                     u19750:
 43419   00A754  6F91               	movwf	setOutputPin@state& (0+255),b
 43420   00A756  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43421   00A758  EC9E  F037         	call	_setOutputPin
 43422                           
 43423                           ;../digitalOut.c: 240:             } else {
 43424   00A75C  0012               	return	
 43425   00A75E                     l19686:
 43426                           
 43427                           ; BSR set to: 0
 43428                           ;../digitalOut.c: 241:                 setOutputPin(io, pinState);
 43429   00A75E  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 43430   00A762  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43431   00A764  EC9E  F037         	call	_setOutputPin
 43432   00A768  0012               	return	
 43433   00A76A                     l19688:
 43434                           
 43435                           ; BSR set to: 0
 43436                           ;../digitalOut.c: 245:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 43437   00A76A  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43438   00A76C  0D07               	mullw	7
 43439   00A76E  50F3               	movf	243,w,c
 43440   00A770  0F13               	addlw	19
 43441   00A772  EC53  F05F         	call	_getNV
 43442   00A776  0E20               	movlw	low _flashDelays
 43443   00A778  0100               	movlb	0	; () banked
 43444   00A77A  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 43445   00A77C  6ED9               	movwf	fsr2l,c
 43446   00A77E  6ADA               	clrf	fsr2h,c
 43447   00A780  0E01               	movlw	high _flashDelays
 43448   00A782  22DA               	addwfc	fsr2h,f,c
 43449   00A784  C08D  FFDF         	movff	?_getNV,indf2
 43450                           
 43451                           ; BSR set to: 0
 43452                           ;../digitalOut.c: 246:             setOutputPin(io, TRUE);
 43453   00A788  0E01               	movlw	1
 43454   00A78A  6F91               	movwf	setOutputPin@state& (0+255),b
 43455   00A78C  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43456   00A78E  EC9E  F037         	call	_setOutputPin
 43457                           
 43458                           ;../digitalOut.c: 247:             break;
 43459   00A792  0012               	return	
 43460   00A794                     l19694:
 43461   00A794  0100               	movlb	0	; () banked
 43462   00A796  5197               	movf	setDigitalOutput@state& (0+255),w,b
 43463                           
 43464                           ; Switch size 1, requested type "simple"
 43465                           ; Number of cases is 3, Range of values is 1 to 3
 43466                           ; switch strategies available:
 43467                           ; Name         Instructions Cycles
 43468                           ; simple_byte           10     6 (average)
 43469                           ;	Chosen strategy is simple_byte
 43470   00A798  0A01               	xorlw	1	; case 1
 43471   00A79A  B4D8               	btfsc	status,2,c
 43472   00A79C  D7C5               	goto	l19680
 43473   00A79E  0A03               	xorlw	3	; case 2
 43474   00A7A0  B4D8               	btfsc	status,2,c
 43475   00A7A2  D7C2               	goto	l19680
 43476   00A7A4  0A01               	xorlw	1	; case 3
 43477   00A7A6  B4D8               	btfsc	status,2,c
 43478   00A7A8  D7E0               	goto	l19688
 43479   00A7AA  D7BC               	goto	l19678
 43480   00A7AC                     __end_of_setDigitalOutput:
 43481                           	callstack 0
 43482                           
 43483 ;; *************** function _setOutputPin *****************
 43484 ;; Defined at:
 43485 ;;		line 256 in file "../digitalOut.c"
 43486 ;; Parameters:    Size  Location     Type
 43487 ;;  io              1    wreg     unsigned char 
 43488 ;;  state           1   49[BANK0 ] enum E12766
 43489 ;; Auto vars:     Size  Location     Type
 43490 ;;  io              1   52[BANK0 ] unsigned char 
 43491 ;; Return value:  Size  Location     Type
 43492 ;;                  1    wreg      void 
 43493 ;; Registers used:
 43494 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 43495 ;; Tracked objects:
 43496 ;;		On entry : 0/0
 43497 ;;		On exit  : 0/0
 43498 ;;		Unchanged: 0/0
 43499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43500 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43503 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43504 ;;Total ram usage:        4 bytes
 43505 ;; Hardware stack levels used: 1
 43506 ;; Hardware stack levels required when called: 12
 43507 ;; This function calls:
 43508 ;;		Nothing
 43509 ;; This function is called by:
 43510 ;;		_startDigitalOutput
 43511 ;;		_processOutputs
 43512 ;;		_setDigitalOutput
 43513 ;;		_setOutputPosition
 43514 ;;		_setupTimer1
 43515 ;;		_setupTimer3
 43516 ;;		_pollServos
 43517 ;; This function uses a non-reentrant model
 43518 ;;
 43519                           
 43520                           	psect	text191
 43521   006F3C                     __ptext191:
 43522                           	callstack 0
 43523   006F3C                     _setOutputPin:
 43524                           	callstack 15
 43525                           
 43526                           ;incstack = 0
 43527                           ;setOutputPin@io stored from wreg
 43528   006F3C  0100               	movlb	0	; () banked
 43529   006F3E  6F94               	movwf	setOutputPin@io& (0+255),b
 43530                           
 43531                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 43532   006F40  D0C0               	goto	l19542
 43533   006F42                     l19522:
 43534                           
 43535                           ; BSR set to: 0
 43536                           ;../digitalOut.c: 259:             if (state) {
 43537   006F42  5191               	movf	setOutputPin@state& (0+255),w,b
 43538   006F44  B4D8               	btfsc	status,2,c
 43539   006F46  D01E               	goto	l19526
 43540                           
 43541                           ; BSR set to: 0
 43542                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 43543   006F48  5194               	movf	setOutputPin@io& (0+255),w,b
 43544   006F4A  0D04               	mullw	4
 43545   006F4C  0E02               	movlw	2
 43546   006F4E  26F3               	addwf	243,f,c
 43547   006F50  0E00               	movlw	0
 43548   006F52  22F4               	addwfc	244,f,c
 43549   006F54  0E29               	movlw	low _configs
 43550   006F56  24F3               	addwf	243,w,c
 43551   006F58  6EF6               	movwf	tblptrl,c
 43552   006F5A  0EEE               	movlw	high _configs
 43553   006F5C  20F4               	addwfc	244,w,c
 43554   006F5E  6EF7               	movwf	tblptrh,c
 43555   006F60                     	if	1	;There are 3 active tblptr bytes
 43556   006F60  6AF8               	clrf	tblptru,c
 43557   006F62  0E00               	movlw	low (__mediumconst shr (0+16))
 43558   006F64  22F8               	addwfc	tblptru,f,c
 43559   006F66                     	endif
 43560   006F66  0008               	tblrd		*
 43561   006F68  CFF5 F092          	movff	tablat,??_setOutputPin
 43562   006F6C  0E01               	movlw	1
 43563   006F6E  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43564   006F70  2B92               	incf	??_setOutputPin& (0+255),f,b
 43565   006F72  D002               	goto	u19454
 43566   006F74                     u19455:
 43567   006F74  90D8               	bcf	status,0,c
 43568   006F76  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43569   006F78                     u19454:
 43570   006F78  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43571   006F7A  D7FC               	goto	u19455
 43572   006F7C  0100               	movlb	0	; () banked
 43573   006F7E  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43574   006F80  1289               	iorwf	137,f,c	;volatile
 43575                           
 43576                           ;../digitalOut.c: 262:             } else {
 43577   006F82  0012               	return	
 43578   006F84                     l19526:
 43579                           
 43580                           ; BSR set to: 0
 43581                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 43582   006F84  5194               	movf	setOutputPin@io& (0+255),w,b
 43583   006F86  0D04               	mullw	4
 43584   006F88  0E02               	movlw	2
 43585   006F8A  26F3               	addwf	243,f,c
 43586   006F8C  0E00               	movlw	0
 43587   006F8E  22F4               	addwfc	244,f,c
 43588   006F90  0E29               	movlw	low _configs
 43589   006F92  24F3               	addwf	243,w,c
 43590   006F94  6EF6               	movwf	tblptrl,c
 43591   006F96  0EEE               	movlw	high _configs
 43592   006F98  20F4               	addwfc	244,w,c
 43593   006F9A  6EF7               	movwf	tblptrh,c
 43594   006F9C                     	if	1	;There are 3 active tblptr bytes
 43595   006F9C  6AF8               	clrf	tblptru,c
 43596   006F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 43597   006FA0  22F8               	addwfc	tblptru,f,c
 43598   006FA2                     	endif
 43599   006FA2  0008               	tblrd		*
 43600   006FA4  CFF5 F092          	movff	tablat,??_setOutputPin
 43601   006FA8  0E01               	movlw	1
 43602   006FAA  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43603   006FAC  2B92               	incf	??_setOutputPin& (0+255),f,b
 43604   006FAE  D002               	goto	u19464
 43605   006FB0                     u19465:
 43606   006FB0  90D8               	bcf	status,0,c
 43607   006FB2  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43608   006FB4                     u19464:
 43609   006FB4  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43610   006FB6  D7FC               	goto	u19465
 43611   006FB8  0100               	movlb	0	; () banked
 43612   006FBA  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43613   006FBC  0AFF               	xorlw	255
 43614   006FBE  1689               	andwf	137,f,c	;volatile
 43615   006FC0  0012               	return	
 43616   006FC2                     l19528:
 43617                           
 43618                           ; BSR set to: 0
 43619                           ;../digitalOut.c: 268:             if (state) {
 43620   006FC2  5191               	movf	setOutputPin@state& (0+255),w,b
 43621   006FC4  B4D8               	btfsc	status,2,c
 43622   006FC6  D01E               	goto	l19532
 43623                           
 43624                           ; BSR set to: 0
 43625                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 43626   006FC8  5194               	movf	setOutputPin@io& (0+255),w,b
 43627   006FCA  0D04               	mullw	4
 43628   006FCC  0E02               	movlw	2
 43629   006FCE  26F3               	addwf	243,f,c
 43630   006FD0  0E00               	movlw	0
 43631   006FD2  22F4               	addwfc	244,f,c
 43632   006FD4  0E29               	movlw	low _configs
 43633   006FD6  24F3               	addwf	243,w,c
 43634   006FD8  6EF6               	movwf	tblptrl,c
 43635   006FDA  0EEE               	movlw	high _configs
 43636   006FDC  20F4               	addwfc	244,w,c
 43637   006FDE  6EF7               	movwf	tblptrh,c
 43638   006FE0                     	if	1	;There are 3 active tblptr bytes
 43639   006FE0  6AF8               	clrf	tblptru,c
 43640   006FE2  0E00               	movlw	low (__mediumconst shr (0+16))
 43641   006FE4  22F8               	addwfc	tblptru,f,c
 43642   006FE6                     	endif
 43643   006FE6  0008               	tblrd		*
 43644   006FE8  CFF5 F092          	movff	tablat,??_setOutputPin
 43645   006FEC  0E01               	movlw	1
 43646   006FEE  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43647   006FF0  2B92               	incf	??_setOutputPin& (0+255),f,b
 43648   006FF2  D002               	goto	u19484
 43649   006FF4                     u19485:
 43650   006FF4  90D8               	bcf	status,0,c
 43651   006FF6  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43652   006FF8                     u19484:
 43653   006FF8  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43654   006FFA  D7FC               	goto	u19485
 43655   006FFC  0100               	movlb	0	; () banked
 43656   006FFE  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43657   007000  128A               	iorwf	138,f,c	;volatile
 43658                           
 43659                           ;../digitalOut.c: 271:             } else {
 43660   007002  0012               	return	
 43661   007004                     l19532:
 43662                           
 43663                           ; BSR set to: 0
 43664                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 43665   007004  5194               	movf	setOutputPin@io& (0+255),w,b
 43666   007006  0D04               	mullw	4
 43667   007008  0E02               	movlw	2
 43668   00700A  26F3               	addwf	243,f,c
 43669   00700C  0E00               	movlw	0
 43670   00700E  22F4               	addwfc	244,f,c
 43671   007010  0E29               	movlw	low _configs
 43672   007012  24F3               	addwf	243,w,c
 43673   007014  6EF6               	movwf	tblptrl,c
 43674   007016  0EEE               	movlw	high _configs
 43675   007018  20F4               	addwfc	244,w,c
 43676   00701A  6EF7               	movwf	tblptrh,c
 43677   00701C                     	if	1	;There are 3 active tblptr bytes
 43678   00701C  6AF8               	clrf	tblptru,c
 43679   00701E  0E00               	movlw	low (__mediumconst shr (0+16))
 43680   007020  22F8               	addwfc	tblptru,f,c
 43681   007022                     	endif
 43682   007022  0008               	tblrd		*
 43683   007024  CFF5 F092          	movff	tablat,??_setOutputPin
 43684   007028  0E01               	movlw	1
 43685   00702A  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43686   00702C  2B92               	incf	??_setOutputPin& (0+255),f,b
 43687   00702E  D002               	goto	u19494
 43688   007030                     u19495:
 43689   007030  90D8               	bcf	status,0,c
 43690   007032  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43691   007034                     u19494:
 43692   007034  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43693   007036  D7FC               	goto	u19495
 43694   007038  0100               	movlb	0	; () banked
 43695   00703A  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43696   00703C  0AFF               	xorlw	255
 43697   00703E  168A               	andwf	138,f,c	;volatile
 43698   007040  0012               	return	
 43699   007042                     l19534:
 43700                           
 43701                           ; BSR set to: 0
 43702                           ;../digitalOut.c: 277:             if (state) {
 43703   007042  5191               	movf	setOutputPin@state& (0+255),w,b
 43704   007044  B4D8               	btfsc	status,2,c
 43705   007046  D01E               	goto	l19538
 43706                           
 43707                           ; BSR set to: 0
 43708                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 43709   007048  5194               	movf	setOutputPin@io& (0+255),w,b
 43710   00704A  0D04               	mullw	4
 43711   00704C  0E02               	movlw	2
 43712   00704E  26F3               	addwf	243,f,c
 43713   007050  0E00               	movlw	0
 43714   007052  22F4               	addwfc	244,f,c
 43715   007054  0E29               	movlw	low _configs
 43716   007056  24F3               	addwf	243,w,c
 43717   007058  6EF6               	movwf	tblptrl,c
 43718   00705A  0EEE               	movlw	high _configs
 43719   00705C  20F4               	addwfc	244,w,c
 43720   00705E  6EF7               	movwf	tblptrh,c
 43721   007060                     	if	1	;There are 3 active tblptr bytes
 43722   007060  6AF8               	clrf	tblptru,c
 43723   007062  0E00               	movlw	low (__mediumconst shr (0+16))
 43724   007064  22F8               	addwfc	tblptru,f,c
 43725   007066                     	endif
 43726   007066  0008               	tblrd		*
 43727   007068  CFF5 F092          	movff	tablat,??_setOutputPin
 43728   00706C  0E01               	movlw	1
 43729   00706E  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43730   007070  2B92               	incf	??_setOutputPin& (0+255),f,b
 43731   007072  D002               	goto	u19514
 43732   007074                     u19515:
 43733   007074  90D8               	bcf	status,0,c
 43734   007076  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43735   007078                     u19514:
 43736   007078  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43737   00707A  D7FC               	goto	u19515
 43738   00707C  0100               	movlb	0	; () banked
 43739   00707E  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43740   007080  128B               	iorwf	139,f,c	;volatile
 43741                           
 43742                           ;../digitalOut.c: 280:             } else {
 43743   007082  0012               	return	
 43744   007084                     l19538:
 43745                           
 43746                           ; BSR set to: 0
 43747                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 43748   007084  5194               	movf	setOutputPin@io& (0+255),w,b
 43749   007086  0D04               	mullw	4
 43750   007088  0E02               	movlw	2
 43751   00708A  26F3               	addwf	243,f,c
 43752   00708C  0E00               	movlw	0
 43753   00708E  22F4               	addwfc	244,f,c
 43754   007090  0E29               	movlw	low _configs
 43755   007092  24F3               	addwf	243,w,c
 43756   007094  6EF6               	movwf	tblptrl,c
 43757   007096  0EEE               	movlw	high _configs
 43758   007098  20F4               	addwfc	244,w,c
 43759   00709A  6EF7               	movwf	tblptrh,c
 43760   00709C                     	if	1	;There are 3 active tblptr bytes
 43761   00709C  6AF8               	clrf	tblptru,c
 43762   00709E  0E00               	movlw	low (__mediumconst shr (0+16))
 43763   0070A0  22F8               	addwfc	tblptru,f,c
 43764   0070A2                     	endif
 43765   0070A2  0008               	tblrd		*
 43766   0070A4  CFF5 F092          	movff	tablat,??_setOutputPin
 43767   0070A8  0E01               	movlw	1
 43768   0070AA  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43769   0070AC  2B92               	incf	??_setOutputPin& (0+255),f,b
 43770   0070AE  D002               	goto	u19524
 43771   0070B0                     u19525:
 43772   0070B0  90D8               	bcf	status,0,c
 43773   0070B2  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43774   0070B4                     u19524:
 43775   0070B4  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43776   0070B6  D7FC               	goto	u19525
 43777   0070B8  0100               	movlb	0	; () banked
 43778   0070BA  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43779   0070BC  0AFF               	xorlw	255
 43780   0070BE  168B               	andwf	139,f,c	;volatile
 43781   0070C0  0012               	return	
 43782   0070C2                     l19542:
 43783   0070C2  0100               	movlb	0	; () banked
 43784   0070C4  5194               	movf	setOutputPin@io& (0+255),w,b
 43785   0070C6  0D04               	mullw	4
 43786   0070C8  0E01               	movlw	1
 43787   0070CA  26F3               	addwf	243,f,c
 43788   0070CC  0E00               	movlw	0
 43789   0070CE  22F4               	addwfc	244,f,c
 43790   0070D0  0E29               	movlw	low _configs
 43791   0070D2  24F3               	addwf	243,w,c
 43792   0070D4  6EF6               	movwf	tblptrl,c
 43793   0070D6  0EEE               	movlw	high _configs
 43794   0070D8  20F4               	addwfc	244,w,c
 43795   0070DA  6EF7               	movwf	tblptrh,c
 43796   0070DC                     	if	1	;There are 3 active tblptr bytes
 43797   0070DC  6AF8               	clrf	tblptru,c
 43798   0070DE  0E00               	movlw	low (__mediumconst shr (0+16))
 43799   0070E0  22F8               	addwfc	tblptru,f,c
 43800   0070E2                     	endif
 43801   0070E2  0008               	tblrd		*
 43802   0070E4  50F5               	movf	tablat,w,c
 43803                           
 43804                           ; Switch size 1, requested type "simple"
 43805                           ; Number of cases is 3, Range of values is 65 to 67
 43806                           ; switch strategies available:
 43807                           ; Name         Instructions Cycles
 43808                           ; simple_byte           10     6 (average)
 43809                           ;	Chosen strategy is simple_byte
 43810   0070E6  0A41               	xorlw	65	; case 65
 43811   0070E8  B4D8               	btfsc	status,2,c
 43812   0070EA  D72B               	goto	l19522
 43813   0070EC  0A03               	xorlw	3	; case 66
 43814   0070EE  B4D8               	btfsc	status,2,c
 43815   0070F0  D768               	goto	l19528
 43816   0070F2  0A01               	xorlw	1	; case 67
 43817   0070F4  A4D8               	btfss	status,2,c
 43818   0070F6  0012               	return	
 43819   0070F8  D7A4               	goto	l19534
 43820   0070FA                     __end_of_setOutputPin:
 43821                           	callstack 0
 43822                           
 43823 ;; *************** function _getNV *****************
 43824 ;; Defined at:
 43825 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 43826 ;; Parameters:    Size  Location     Type
 43827 ;;  index           1    wreg     unsigned char 
 43828 ;; Auto vars:     Size  Location     Type
 43829 ;;  index           1   48[BANK0 ] unsigned char 
 43830 ;; Return value:  Size  Location     Type
 43831 ;;                  2   45[BANK0 ] short 
 43832 ;; Registers used:
 43833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43834 ;; Tracked objects:
 43835 ;;		On entry : 0/0
 43836 ;;		On exit  : 0/0
 43837 ;;		Unchanged: 0/0
 43838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43842 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43843 ;;Total ram usage:        4 bytes
 43844 ;; Hardware stack levels used: 1
 43845 ;; Hardware stack levels required when called: 12
 43846 ;; This function calls:
 43847 ;;		Nothing
 43848 ;; This function is called by:
 43849 ;;		_setup
 43850 ;;		_loop
 43851 ;;		_APP_GetEventState
 43852 ;;		_configIO
 43853 ;;		_startDigitalOutput
 43854 ;;		_processOutputs
 43855 ;;		_setDigitalOutput
 43856 ;;		_initInputScan
 43857 ;;		_inputScan
 43858 ;;		_readInput
 43859 ;;		_consumer2QProcessMessage
 43860 ;;		_processActions
 43861 ;;		_sodTRCallback
 43862 ;;		_APP_nvValueChanged
 43863 ;;		_setOutputPosition
 43864 ;;		_initServos
 43865 ;;		_startServos
 43866 ;;		_setupTimer1
 43867 ;;		_setupTimer3
 43868 ;;		_pollServos
 43869 ;;		_startServoOutput
 43870 ;;		_startMultiOutput
 43871 ;;		_setServoState
 43872 ;;		_setBounceState
 43873 ;;		_setMultiState
 43874 ;;		_bounceDown
 43875 ;;		_bounceUp
 43876 ;;		_nvProcessMessage
 43877 ;;		_nvTRnvrdCallback
 43878 ;; This function uses a non-reentrant model
 43879 ;;
 43880                           
 43881                           	psect	text192
 43882   00BEA6                     __ptext192:
 43883                           	callstack 0
 43884   00BEA6                     _getNV:
 43885                           	callstack 14
 43886                           
 43887                           ; BSR set to: 0
 43888                           ;incstack = 0
 43889                           ;getNV@index stored from wreg
 43890   00BEA6  0100               	movlb	0	; () banked
 43891   00BEA8  6F90               	movwf	getNV@index& (0+255),b
 43892                           
 43893                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 43894   00BEAA  0100               	movlb	0	; () banked
 43895   00BEAC  5190               	movf	getNV@index& (0+255),w,b
 43896   00BEAE  A4D8               	btfss	status,2,c
 43897   00BEB0  D005               	goto	l19510
 43898                           
 43899                           ; BSR set to: 0
 43900   00BEB2  0E00               	movlw	0
 43901   00BEB4  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43902   00BEB6  0E7F               	movlw	127
 43903   00BEB8  6F8D               	movwf	?_getNV& (0+255),b
 43904   00BEBA  0012               	return	
 43905   00BEBC                     l19510:
 43906                           
 43907                           ; BSR set to: 0
 43908                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 43909   00BEBC  0E7F               	movlw	127
 43910   00BEBE  6590               	cpfsgt	getNV@index& (0+255),b
 43911   00BEC0  D005               	goto	l19516
 43912                           
 43913                           ; BSR set to: 0
 43914   00BEC2  0EFF               	movlw	255
 43915   00BEC4  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43916   00BEC6  0EF6               	movlw	246
 43917   00BEC8  6F8D               	movwf	?_getNV& (0+255),b
 43918   00BECA  0012               	return	
 43919   00BECC                     l19516:
 43920                           
 43921                           ; BSR set to: 0
 43922                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 43923   00BECC  0E00               	movlw	low _nvCache
 43924   00BECE  2590               	addwf	getNV@index& (0+255),w,b
 43925   00BED0  6ED9               	movwf	fsr2l,c
 43926   00BED2  6ADA               	clrf	fsr2h,c
 43927   00BED4  0E04               	movlw	high _nvCache
 43928   00BED6  22DA               	addwfc	fsr2h,f,c
 43929   00BED8  50DF               	movf	indf2,w,c
 43930   00BEDA  6F8F               	movwf	??_getNV& (0+255),b
 43931   00BEDC  518F               	movf	??_getNV& (0+255),w,b
 43932   00BEDE  6F8D               	movwf	?_getNV& (0+255),b
 43933   00BEE0  6B8E               	clrf	(?_getNV+1)& (0+255),b
 43934                           
 43935                           ; BSR set to: 0
 43936   00BEE2  0012               	return		;funcret
 43937   00BEE4                     __end_of_getNV:
 43938                           	callstack 0
 43939                           
 43940 ;; *************** function _readNVM *****************
 43941 ;; Defined at:
 43942 ;;		line 550 in file "../../VLCBlib_PIC/nvm.c"
 43943 ;; Parameters:    Size  Location     Type
 43944 ;;  type            1    wreg     enum E12738
 43945 ;;  index           3   49[BANK0 ] unsigned um
 43946 ;; Auto vars:     Size  Location     Type
 43947 ;;  type            1   54[BANK0 ] enum E12738
 43948 ;; Return value:  Size  Location     Type
 43949 ;;                  2   49[BANK0 ] short 
 43950 ;; Registers used:
 43951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43952 ;; Tracked objects:
 43953 ;;		On entry : 0/0
 43954 ;;		On exit  : 0/0
 43955 ;;		Unchanged: 0/0
 43956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43957 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43959 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43960 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43961 ;;Total ram usage:        6 bytes
 43962 ;; Hardware stack levels used: 1
 43963 ;; Hardware stack levels required when called: 13
 43964 ;; This function calls:
 43965 ;;		_EEPROM_Read
 43966 ;;		_FLASH_Read
 43967 ;; This function is called by:
 43968 ;;		_APP_GetEventState
 43969 ;;		_configIO
 43970 ;;		_initInputScan
 43971 ;;		_initServos
 43972 ;;		_bootPowerUp
 43973 ;;		_mnsPowerUp
 43974 ;;		_loadNvCache
 43975 ;;		_main
 43976 ;;		_canPowerUp
 43977 ;;		_doNnevn
 43978 ;;		_removeTableEntry
 43979 ;;		_addEvent
 43980 ;;		_writeEv
 43981 ;;		_getEv
 43982 ;;		_numEv
 43983 ;;		_getEVs
 43984 ;;		_getNN
 43985 ;;		_getEN
 43986 ;;		_validStart
 43987 ;;		_deleteHappeningRange
 43988 ;; This function uses a non-reentrant model
 43989 ;;
 43990                           
 43991                           	psect	text193
 43992   00B5A2                     __ptext193:
 43993                           	callstack 0
 43994   00B5A2                     _readNVM:
 43995                           	callstack 15
 43996                           
 43997                           ; BSR set to: 0
 43998                           ;incstack = 0
 43999                           ;readNVM@type stored from wreg
 44000   00B5A2  0100               	movlb	0	; () banked
 44001   00B5A4  6F96               	movwf	readNVM@type& (0+255),b
 44002                           
 44003                           ;../../VLCBlib_PIC/nvm.c: 551:     switch(type) {
 44004   00B5A6  D01D               	goto	l18778
 44005   00B5A8                     l18764:
 44006                           
 44007                           ; BSR set to: 0
 44008                           ;../../VLCBlib_PIC/nvm.c: 553:             return EEPROM_Read((uint16_t)index);
 44009   00B5A8  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 44010   00B5AC  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 44011   00B5B0  EC54  F063         	call	_EEPROM_Read	;wreg free
 44012   00B5B4  0100               	movlb	0	; () banked
 44013   00B5B6  6F94               	movwf	??_readNVM& (0+255),b
 44014   00B5B8  5194               	movf	??_readNVM& (0+255),w,b
 44015   00B5BA  6F91               	movwf	?_readNVM& (0+255),b
 44016   00B5BC  6B92               	clrf	(?_readNVM+1)& (0+255),b
 44017   00B5BE  0012               	return	
 44018   00B5C0                     l18768:
 44019                           
 44020                           ; BSR set to: 0
 44021                           ;../../VLCBlib_PIC/nvm.c: 556:             return FLASH_Read((uint16_t)index);
 44022   00B5C0  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 44023   00B5C4  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 44024   00B5C8  ECAD  F05D         	call	_FLASH_Read	;wreg free
 44025   00B5CC  0100               	movlb	0	; () banked
 44026   00B5CE  6F94               	movwf	??_readNVM& (0+255),b
 44027   00B5D0  5194               	movf	??_readNVM& (0+255),w,b
 44028   00B5D2  6F91               	movwf	?_readNVM& (0+255),b
 44029   00B5D4  6B92               	clrf	(?_readNVM+1)& (0+255),b
 44030   00B5D6  0012               	return	
 44031   00B5D8                     l18772:
 44032                           
 44033                           ; BSR set to: 0
 44034                           ;../../VLCBlib_PIC/nvm.c: 562:             return -GRSP_UNKNOWN_NVM_TYPE;
 44035   00B5D8  0EFF               	movlw	255
 44036   00B5DA  6F92               	movwf	(?_readNVM+1)& (0+255),b
 44037   00B5DC  0E02               	movlw	2
 44038   00B5DE  6F91               	movwf	?_readNVM& (0+255),b
 44039   00B5E0  0012               	return	
 44040   00B5E2                     l18778:
 44041   00B5E2  0100               	movlb	0	; () banked
 44042   00B5E4  5196               	movf	readNVM@type& (0+255),w,b
 44043   00B5E6  6F94               	movwf	??_readNVM& (0+255),b
 44044   00B5E8  6B95               	clrf	(??_readNVM+1)& (0+255),b
 44045                           
 44046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 44047                           ; Switch size 1, requested type "simple"
 44048                           ; Number of cases is 1, Range of values is 0 to 0
 44049                           ; switch strategies available:
 44050                           ; Name         Instructions Cycles
 44051                           ; simple_byte            4     3 (average)
 44052                           ;	Chosen strategy is simple_byte
 44053   00B5EA  5195               	movf	(??_readNVM+1)& (0+255),w,b
 44054   00B5EC  0A00               	xorlw	0	; case 0
 44055   00B5EE  A4D8               	btfss	status,2,c
 44056   00B5F0  D7F3               	goto	l18772
 44057                           
 44058                           ; BSR set to: 0
 44059                           ; Switch size 1, requested type "simple"
 44060                           ; Number of cases is 2, Range of values is 0 to 1
 44061                           ; switch strategies available:
 44062                           ; Name         Instructions Cycles
 44063                           ; simple_byte            7     4 (average)
 44064                           ;	Chosen strategy is simple_byte
 44065   00B5F2  5194               	movf	??_readNVM& (0+255),w,b
 44066   00B5F4  0A00               	xorlw	0	; case 0
 44067   00B5F6  B4D8               	btfsc	status,2,c
 44068   00B5F8  D7D7               	goto	l18764
 44069   00B5FA  0A01               	xorlw	1	; case 1
 44070   00B5FC  B4D8               	btfsc	status,2,c
 44071   00B5FE  D7E0               	goto	l18768
 44072   00B600  D7EB               	goto	l18772
 44073   00B602                     __end_of_readNVM:
 44074                           	callstack 0
 44075                           
 44076 ;; *************** function _FLASH_Read *****************
 44077 ;; Defined at:
 44078 ;;		line 295 in file "../../VLCBlib_PIC/nvm.c"
 44079 ;; Parameters:    Size  Location     Type
 44080 ;;  address         2   45[BANK0 ] unsigned short 
 44081 ;; Auto vars:     Size  Location     Type
 44082 ;;		None
 44083 ;; Return value:  Size  Location     Type
 44084 ;;                  1    wreg      unsigned char 
 44085 ;; Registers used:
 44086 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44087 ;; Tracked objects:
 44088 ;;		On entry : 0/0
 44089 ;;		On exit  : 0/0
 44090 ;;		Unchanged: 0/0
 44091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44094 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44095 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44096 ;;Total ram usage:        4 bytes
 44097 ;; Hardware stack levels used: 1
 44098 ;; Hardware stack levels required when called: 12
 44099 ;; This function calls:
 44100 ;;		Nothing
 44101 ;; This function is called by:
 44102 ;;		_readNVM
 44103 ;; This function uses a non-reentrant model
 44104 ;;
 44105                           
 44106                           	psect	text194
 44107   00BB5A                     __ptext194:
 44108                           	callstack 0
 44109   00BB5A                     _FLASH_Read:
 44110                           	callstack 15
 44111                           
 44112                           ;../../VLCBlib_PIC/nvm.c: 297:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 44113                           
 44114                           ; BSR set to: 0
 44115                           ;incstack = 0
 44116   00BB5A  0EC0               	movlw	192
 44117   00BB5C  0100               	movlb	0	; () banked
 44118   00BB5E  158D               	andwf	FLASH_Read@address& (0+255),w,b
 44119   00BB60  6F8F               	movwf	??_FLASH_Read& (0+255),b
 44120   00BB62  0EFF               	movlw	255
 44121   00BB64  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 44122   00BB66  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 44123   00BB68  51D1               	movf	_flashBlock& (0+255),w,b
 44124   00BB6A  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 44125   00BB6C  E112               	bnz	l18754
 44126   00BB6E  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 44127   00BB70  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 44128   00BB72  A4D8               	btfss	status,2,c
 44129   00BB74  D00E               	goto	l18754
 44130                           
 44131                           ; BSR set to: 0
 44132                           ;../../VLCBlib_PIC/nvm.c: 299:         return flashBuffer[(address&(64 -1))];
 44133   00BB76  0E3F               	movlw	63
 44134   00BB78  158D               	andwf	FLASH_Read@address& (0+255),w,b
 44135   00BB7A  6F8F               	movwf	??_FLASH_Read& (0+255),b
 44136   00BB7C  0E00               	movlw	0
 44137   00BB7E  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 44138   00BB80  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 44139   00BB82  0E48               	movlw	low _flashBuffer
 44140   00BB84  258F               	addwf	??_FLASH_Read& (0+255),w,b
 44141   00BB86  6ED9               	movwf	fsr2l,c
 44142   00BB88  0E03               	movlw	high _flashBuffer
 44143   00BB8A  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 44144   00BB8C  6EDA               	movwf	fsr2h,c
 44145   00BB8E  50DF               	movf	indf2,w,c
 44146   00BB90  0012               	return	
 44147   00BB92                     l18754:
 44148                           
 44149                           ; BSR set to: 0
 44150                           ;../../VLCBlib_PIC/nvm.c: 303:         TBLPTR = address;
 44151   00BB92  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 44152   00BB96  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 44153   00BB9A  6AF8               	clrf	248,c	;volatile
 44154                           
 44155                           ; BSR set to: 0
 44156                           ;../../VLCBlib_PIC/nvm.c: 304:         TBLPTRU = 0;
 44157   00BB9C  0E00               	movlw	0
 44158   00BB9E  6EF8               	movwf	248,c	;volatile
 44159   00BBA0  0008               	tblrd		*	;# 
 44160                           
 44161                           ;../../VLCBlib_PIC/nvm.c: 315:         return TABLAT;
 44162   00BBA2  50F5               	movf	245,w,c	;volatile
 44163   00BBA4  0012               	return		;funcret
 44164   00BBA6                     __end_of_FLASH_Read:
 44165                           	callstack 0
 44166                           
 44167 ;; *************** function _EEPROM_Read *****************
 44168 ;; Defined at:
 44169 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 44170 ;; Parameters:    Size  Location     Type
 44171 ;;  index           2   45[BANK0 ] unsigned short 
 44172 ;; Auto vars:     Size  Location     Type
 44173 ;;		None
 44174 ;; Return value:  Size  Location     Type
 44175 ;;                  1    wreg      unsigned char 
 44176 ;; Registers used:
 44177 ;;		wreg, status,2
 44178 ;; Tracked objects:
 44179 ;;		On entry : 0/0
 44180 ;;		On exit  : 0/0
 44181 ;;		Unchanged: 0/0
 44182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44186 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44187 ;;Total ram usage:        2 bytes
 44188 ;; Hardware stack levels used: 1
 44189 ;; Hardware stack levels required when called: 12
 44190 ;; This function calls:
 44191 ;;		Nothing
 44192 ;; This function is called by:
 44193 ;;		_EEPROM_Write
 44194 ;;		_readNVM
 44195 ;; This function uses a non-reentrant model
 44196 ;;
 44197                           
 44198                           	psect	text195
 44199   00C6A8                     __ptext195:
 44200                           	callstack 0
 44201   00C6A8                     _EEPROM_Read:
 44202                           	callstack 15
 44203                           
 44204                           ;../../VLCBlib_PIC/nvm.c: 174:     while (EECON1bits.WR)
 44205                           
 44206                           ;../../VLCBlib_PIC/nvm.c: 175:         ;
 44207                           
 44208                           ;incstack = 0
 44209   00C6A8  B27F               	btfsc	127,1,c	;volsfr
 44210   00C6AA  D7FE               	goto	__ptext195
 44211                           
 44212                           ;../../VLCBlib_PIC/nvm.c: 177:     EEADRH = (index >> 8)&0xFF;
 44213   00C6AC  0100               	movlb	0	; () banked
 44214   00C6AE  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 44215   00C6B0  6E75               	movwf	117,c	;volatile
 44216                           
 44217                           ; BSR set to: 0
 44218                           ;../../VLCBlib_PIC/nvm.c: 178:     EEADR = index & 0xFF;
 44219   00C6B2  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 44220                           
 44221                           ; BSR set to: 0
 44222                           ;../../VLCBlib_PIC/nvm.c: 179:     EECON1bits.EEPGD = 0;
 44223   00C6B6  9E7F               	bcf	127,7,c	;volsfr
 44224                           
 44225                           ; BSR set to: 0
 44226                           ;../../VLCBlib_PIC/nvm.c: 180:     EECON1bits.CFGS = 0;
 44227   00C6B8  9C7F               	bcf	127,6,c	;volsfr
 44228                           
 44229                           ; BSR set to: 0
 44230                           ;../../VLCBlib_PIC/nvm.c: 181:     EECON1bits.RD = 1;
 44231   00C6BA  807F               	bsf	127,0,c	;volsfr
 44232   00C6BC                     l2182:
 44233                           
 44234                           ;../../VLCBlib_PIC/nvm.c: 182:     while (EECON1bits.RD)
 44235   00C6BC  B07F               	btfsc	127,0,c	;volsfr
 44236   00C6BE  D7FE               	goto	l2182
 44237   00C6C0  0000               	nop		;# 
 44238                           
 44239                           ;../../VLCBlib_PIC/nvm.c: 187:     return EEDATA;
 44240   00C6C2  5073               	movf	115,w,c	;volatile
 44241   00C6C4  0012               	return		;funcret
 44242   00C6C6                     __end_of_EEPROM_Read:
 44243                           	callstack 0
 44244                           
 44245 ;; *************** function _factoryResetGlobalEvents *****************
 44246 ;; Defined at:
 44247 ;;		line 100 in file "../universalEvents.c"
 44248 ;; Parameters:    Size  Location     Type
 44249 ;;		None
 44250 ;; Auto vars:     Size  Location     Type
 44251 ;;		None
 44252 ;; Return value:  Size  Location     Type
 44253 ;;                  1    wreg      void 
 44254 ;; Registers used:
 44255 ;;		None
 44256 ;; Tracked objects:
 44257 ;;		On entry : 0/0
 44258 ;;		On exit  : 0/0
 44259 ;;		Unchanged: 0/0
 44260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44265 ;;Total ram usage:        0 bytes
 44266 ;; Hardware stack levels used: 1
 44267 ;; Hardware stack levels required when called: 12
 44268 ;; This function calls:
 44269 ;;		Nothing
 44270 ;; This function is called by:
 44271 ;;		_APP_factoryReset
 44272 ;; This function uses a non-reentrant model
 44273 ;;
 44274                           
 44275                           	psect	text196
 44276   00C856                     __ptext196:
 44277                           	callstack 0
 44278   00C856                     _factoryResetGlobalEvents:
 44279                           	callstack 14
 44280                           
 44281                           ;incstack = 0
 44282   00C856  0012               	return		;funcret
 44283   00C858                     __end_of_factoryResetGlobalEvents:
 44284                           	callstack 0
 44285                           
 44286 ;; *************** function _APP_testMode *****************
 44287 ;; Defined at:
 44288 ;;		line 229 in file "../main.c"
 44289 ;; Parameters:    Size  Location     Type
 44290 ;;		None
 44291 ;; Auto vars:     Size  Location     Type
 44292 ;;		None
 44293 ;; Return value:  Size  Location     Type
 44294 ;;                  1    wreg      void 
 44295 ;; Registers used:
 44296 ;;		None
 44297 ;; Tracked objects:
 44298 ;;		On entry : 0/0
 44299 ;;		On exit  : 0/0
 44300 ;;		Unchanged: 0/0
 44301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44306 ;;Total ram usage:        0 bytes
 44307 ;; Hardware stack levels used: 1
 44308 ;; Hardware stack levels required when called: 12
 44309 ;; This function calls:
 44310 ;;		Nothing
 44311 ;; This function is called by:
 44312 ;;		_checkPowerOnPb
 44313 ;; This function uses a non-reentrant model
 44314 ;;
 44315                           
 44316                           	psect	text197
 44317   00C858                     __ptext197:
 44318                           	callstack 0
 44319   00C858                     _APP_testMode:
 44320                           	callstack 17
 44321                           
 44322                           ;incstack = 0
 44323   00C858  0012               	return		;funcret
 44324   00C85A                     __end_of_APP_testMode:
 44325                           	callstack 0
 44326                           
 44327 ;; *************** function _isrLow *****************
 44328 ;; Defined at:
 44329 ;;		line 1332 in file "../../VLCBlib_PIC/vlcb.c"
 44330 ;; Parameters:    Size  Location     Type
 44331 ;;		None
 44332 ;; Auto vars:     Size  Location     Type
 44333 ;;		None
 44334 ;; Return value:  Size  Location     Type
 44335 ;;                  1    wreg      void 
 44336 ;; Registers used:
 44337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44338 ;; Tracked objects:
 44339 ;;		On entry : 0/0
 44340 ;;		On exit  : 0/0
 44341 ;;		Unchanged: 0/0
 44342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44345 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44346 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44347 ;;Total ram usage:       15 bytes
 44348 ;; Hardware stack levels used: 1
 44349 ;; Hardware stack levels required when called: 11
 44350 ;; This function calls:
 44351 ;;		_lowIsr
 44352 ;; This function is called by:
 44353 ;;		Interrupt level 1
 44354 ;; This function uses a non-reentrant model
 44355 ;;
 44356                           
 44357 ;; *************** function _isrHigh *****************
 44358 ;; Defined at:
 44359 ;;		line 1325 in file "../../VLCBlib_PIC/vlcb.c"
 44360 ;; Parameters:    Size  Location     Type
 44361 ;;		None
 44362 ;; Auto vars:     Size  Location     Type
 44363 ;;		None
 44364 ;; Return value:  Size  Location     Type
 44365 ;;                  1    wreg      void 
 44366 ;; Registers used:
 44367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44368 ;; Tracked objects:
 44369 ;;		On entry : 0/0
 44370 ;;		On exit  : 0/0
 44371 ;;		Unchanged: 0/0
 44372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44375 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44376 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44377 ;;Total ram usage:       12 bytes
 44378 ;; Hardware stack levels used: 1
 44379 ;; Hardware stack levels required when called: 5
 44380 ;; This function calls:
 44381 ;;		_highIsr
 44382 ;; This function is called by:
 44383 ;;		Interrupt level 2
 44384 ;; This function uses a non-reentrant model
 44385 ;;
 44386                           
 44387                           	psect	mainSec
 44388   00866C                     __pmainSec:
 44389                           	callstack 0
 44390   00866C                     _isrLow:
 44391                           	callstack 2
 44392                           
 44393                           ;incstack = 0
 44394   00866C  8054               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 44395   00866E  CFD8 F07E          	movff	status,??_isrLow
 44396   008672  CFE8 F07F          	movff	wreg,??_isrLow+1
 44397   008676  CFE0 F080          	movff	bsr,??_isrLow+2
 44398   00867A  CFFA F081          	movff	pclath,??_isrLow+3
 44399   00867E  CFFB F082          	movff	pclatu,??_isrLow+4
 44400   008682  CFE1 F083          	movff	fsr1l,??_isrLow+5
 44401   008686  CFE2 F084          	movff	fsr1h,??_isrLow+6
 44402   00868A  CFD9 F085          	movff	fsr2l,??_isrLow+7
 44403   00868E  CFDA F086          	movff	fsr2h,??_isrLow+8
 44404   008692  CFF3 F087          	movff	prodl,??_isrLow+9
 44405   008696  CFF4 F088          	movff	prodh,??_isrLow+10
 44406   00869A  CFF6 F089          	movff	tblptrl,??_isrLow+11
 44407   00869E  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 44408   0086A2  CFF8 F08B          	movff	tblptru,??_isrLow+13
 44409   0086A6  CFF5 F08C          	movff	tablat,??_isrLow+14
 44410   0086AA                     
 44411                           ;../../VLCBlib_PIC/vlcb.c: 1333:     lowIsr();
 44412   0086AA  ECBB  F048         	call	_lowIsr	;wreg free
 44413   0086AE  C08C  FFF5         	movff	??_isrLow+14,tablat
 44414   0086B2  C08B  FFF8         	movff	??_isrLow+13,tblptru
 44415   0086B6  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 44416   0086BA  C089  FFF6         	movff	??_isrLow+11,tblptrl
 44417   0086BE  C088  FFF4         	movff	??_isrLow+10,prodh
 44418   0086C2  C087  FFF3         	movff	??_isrLow+9,prodl
 44419   0086C6  C086  FFDA         	movff	??_isrLow+8,fsr2h
 44420   0086CA  C085  FFD9         	movff	??_isrLow+7,fsr2l
 44421   0086CE  C084  FFE2         	movff	??_isrLow+6,fsr1h
 44422   0086D2  C083  FFE1         	movff	??_isrLow+5,fsr1l
 44423   0086D6  C082  FFFB         	movff	??_isrLow+4,pclatu
 44424   0086DA  C081  FFFA         	movff	??_isrLow+3,pclath
 44425   0086DE  C080  FFE0         	movff	??_isrLow+2,bsr
 44426   0086E2  C07F  FFE8         	movff	??_isrLow+1,wreg
 44427   0086E6  C07E  FFD8         	movff	??_isrLow,status
 44428   0086EA  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 44429   0086EC  0010               	retfie	
 44430   0086EE                     __end_of_isrLow:
 44431                           	callstack 0
 44432   0086EE                     _isrHigh:
 44433                           	callstack 2
 44434                           
 44435                           ;incstack = 0
 44436   0086EE  8254               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 44437   0086F0  CFFA F01F          	movff	pclath,??_isrHigh
 44438   0086F4  CFFB F020          	movff	pclatu,??_isrHigh+1
 44439   0086F8  CFE1 F021          	movff	fsr1l,??_isrHigh+2
 44440   0086FC  CFE2 F022          	movff	fsr1h,??_isrHigh+3
 44441   008700  CFD9 F023          	movff	fsr2l,??_isrHigh+4
 44442   008704  CFDA F024          	movff	fsr2h,??_isrHigh+5
 44443   008708  CFF3 F025          	movff	prodl,??_isrHigh+6
 44444   00870C  CFF4 F026          	movff	prodh,??_isrHigh+7
 44445   008710  CFF6 F027          	movff	tblptrl,??_isrHigh+8
 44446   008714  CFF7 F028          	movff	tblptrh,??_isrHigh+9
 44447   008718  CFF8 F029          	movff	tblptru,??_isrHigh+10
 44448   00871C  CFF5 F02A          	movff	tablat,??_isrHigh+11
 44449   008720                     
 44450                           ;../../VLCBlib_PIC/vlcb.c: 1326:     highIsr();
 44451   008720  EC22  F049         	call	_highIsr	;wreg free
 44452   008724  C02A  FFF5         	movff	??_isrHigh+11,tablat
 44453   008728  C029  FFF8         	movff	??_isrHigh+10,tblptru
 44454   00872C  C028  FFF7         	movff	??_isrHigh+9,tblptrh
 44455   008730  C027  FFF6         	movff	??_isrHigh+8,tblptrl
 44456   008734  C026  FFF4         	movff	??_isrHigh+7,prodh
 44457   008738  C025  FFF3         	movff	??_isrHigh+6,prodl
 44458   00873C  C024  FFDA         	movff	??_isrHigh+5,fsr2h
 44459   008740  C023  FFD9         	movff	??_isrHigh+4,fsr2l
 44460   008744  C022  FFE2         	movff	??_isrHigh+3,fsr1h
 44461   008748  C021  FFE1         	movff	??_isrHigh+2,fsr1l
 44462   00874C  C020  FFFB         	movff	??_isrHigh+1,pclatu
 44463   008750  C01F  FFFA         	movff	??_isrHigh,pclath
 44464   008754  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 44465   008756  0011               	retfie		f
 44466   008758                     __end_of_isrHigh:
 44467                           	callstack 0
 44468                           
 44469                           	psect	intcodelo
 44470   000818                     __pintcodelo:
 44471                           	callstack 2
 44472   000818  EF36  F043         	goto	_isrLow
 44473                           
 44474 ;; *************** function _lowIsr *****************
 44475 ;; Defined at:
 44476 ;;		line 1077 in file "../../VLCBlib_PIC/vlcb.c"
 44477 ;; Parameters:    Size  Location     Type
 44478 ;;		None
 44479 ;; Auto vars:     Size  Location     Type
 44480 ;;  i               1   29[BANK0 ] unsigned char 
 44481 ;; Return value:  Size  Location     Type
 44482 ;;                  1    wreg      void 
 44483 ;; Registers used:
 44484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44485 ;; Tracked objects:
 44486 ;;		On entry : 0/0
 44487 ;;		On exit  : 0/0
 44488 ;;		Unchanged: 0/0
 44489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44492 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44493 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44494 ;;Total ram usage:        5 bytes
 44495 ;; Hardware stack levels used: 1
 44496 ;; Hardware stack levels required when called: 10
 44497 ;; This function calls:
 44498 ;;		NULL
 44499 ;;		_APP_lowIsr
 44500 ;;		_canIsr
 44501 ;;		_mnsLowIsr
 44502 ;; This function is called by:
 44503 ;;		_isrLow
 44504 ;; This function uses a non-reentrant model
 44505 ;;
 44506                           
 44507                           	psect	text199
 44508   009176                     __ptext199:
 44509                           	callstack 0
 44510   009176                     _lowIsr:
 44511                           	callstack 2
 44512                           
 44513                           ;../../VLCBlib_PIC/vlcb.c: 1078:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1080:     for 
      +                          (i=0; i<9; i++) {
 44514                           
 44515                           ;incstack = 0
 44516   009176  0E00               	movlw	0
 44517   009178  0100               	movlb	0	; () banked
 44518   00917A  6F7D               	movwf	lowIsr@i& (0+255),b
 44519   00917C                     i1l25070:
 44520                           
 44521                           ; BSR set to: 0
 44522                           ;../../VLCBlib_PIC/vlcb.c: 1081:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 44523   00917C  517D               	movf	lowIsr@i& (0+255),w,b
 44524   00917E  0D02               	mullw	2
 44525   009180  0E69               	movlw	low _services
 44526   009182  24F3               	addwf	243,w,c
 44527   009184  6EF6               	movwf	tblptrl,c
 44528   009186  0EEE               	movlw	high _services
 44529   009188  20F4               	addwfc	244,w,c
 44530   00918A  6EF7               	movwf	tblptrh,c
 44531   00918C                     	if	1	;There are 3 active tblptr bytes
 44532   00918C  6AF8               	clrf	tblptru,c
 44533   00918E  0E00               	movlw	low (__mediumconst shr (0+16))
 44534   009190  22F8               	addwfc	tblptru,f,c
 44535   009192                     	endif
 44536   009192  0009               	tblrd		*+
 44537   009194  50F5               	movf	tablat,w,c
 44538   009196  0009               	tblrd		*+
 44539   009198  10F5               	iorwf	tablat,w,c
 44540   00919A  B4D8               	btfsc	status,2,c
 44541   00919C  D04B               	goto	i1u2723_29
 44542                           
 44543                           ; BSR set to: 0
 44544   00919E  517D               	movf	lowIsr@i& (0+255),w,b
 44545   0091A0  0D02               	mullw	2
 44546   0091A2  0E69               	movlw	low _services
 44547   0091A4  24F3               	addwf	243,w,c
 44548   0091A6  6EF6               	movwf	tblptrl,c
 44549   0091A8  0EEE               	movlw	high _services
 44550   0091AA  20F4               	addwfc	244,w,c
 44551   0091AC  6EF7               	movwf	tblptrh,c
 44552   0091AE                     	if	1	;There are 3 active tblptr bytes
 44553   0091AE  6AF8               	clrf	tblptru,c
 44554   0091B0  0E00               	movlw	low (__mediumconst shr (0+16))
 44555   0091B2  22F8               	addwfc	tblptru,f,c
 44556   0091B4                     	endif
 44557   0091B4  0009               	tblrd		*+
 44558   0091B6  CFF5 F079          	movff	tablat,??_lowIsr
 44559   0091BA  0009               	tblrd		*+
 44560   0091BC  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44561   0091C0  0E0C               	movlw	12
 44562   0091C2  2779               	addwf	??_lowIsr& (0+255),f,b
 44563   0091C4  0E00               	movlw	0
 44564   0091C6  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44565   0091C8  C079  FFF6         	movff	??_lowIsr,tblptrl
 44566   0091CC  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44567   0091D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44568   0091D0  6AF8               	clrf	tblptru,c
 44569   0091D2                     	endif
 44570   0091D2                     	if	0	;tblptru may be non-zero
 44571   0091D2                     	endif
 44572   0091D2  0009               	tblrd		*+
 44573   0091D4  50F5               	movf	tablat,w,c
 44574   0091D6  0009               	tblrd		*+
 44575   0091D8  10F5               	iorwf	tablat,w,c
 44576   0091DA  B4D8               	btfsc	status,2,c
 44577   0091DC  D02B               	goto	i1u2723_29
 44578                           
 44579                           ; BSR set to: 0
 44580                           ;../../VLCBlib_PIC/vlcb.c: 1082:             services[i]->lowIsr();
 44581   0091DE  517D               	movf	lowIsr@i& (0+255),w,b
 44582   0091E0  0D02               	mullw	2
 44583   0091E2  0E69               	movlw	low _services
 44584   0091E4  24F3               	addwf	243,w,c
 44585   0091E6  6EF6               	movwf	tblptrl,c
 44586   0091E8  0EEE               	movlw	high _services
 44587   0091EA  20F4               	addwfc	244,w,c
 44588   0091EC  6EF7               	movwf	tblptrh,c
 44589   0091EE                     	if	1	;There are 3 active tblptr bytes
 44590   0091EE  6AF8               	clrf	tblptru,c
 44591   0091F0  0E00               	movlw	low (__mediumconst shr (0+16))
 44592   0091F2  22F8               	addwfc	tblptru,f,c
 44593   0091F4                     	endif
 44594   0091F4  0009               	tblrd		*+
 44595   0091F6  CFF5 F079          	movff	tablat,??_lowIsr
 44596   0091FA  0009               	tblrd		*+
 44597   0091FC  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44598   009200  0E0C               	movlw	12
 44599   009202  2779               	addwf	??_lowIsr& (0+255),f,b
 44600   009204  0E00               	movlw	0
 44601   009206  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44602   009208  C079  FFF6         	movff	??_lowIsr,tblptrl
 44603   00920C  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44604   009210                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44605   009210  6AF8               	clrf	tblptru,c
 44606   009212                     	endif
 44607   009212                     	if	0	;tblptru may be non-zero
 44608   009212                     	endif
 44609   009212  0009               	tblrd		*+
 44610   009214  CFF5 F07B          	movff	tablat,??_lowIsr+2
 44611   009218  0009               	tblrd		*+
 44612   00921A  CFF5 F07C          	movff	tablat,??_lowIsr+3
 44613   00921E  D801               	call	i1u2723_28
 44614   009220  D009               	goto	i1u2723_29
 44615   009222                     i1u2723_28:
 44616   009222  0005               	push	
 44617   009224  6EFA               	movwf	pclath,c
 44618   009226  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 44619   009228  6EFD               	movwf	tosl,c
 44620   00922A  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 44621   00922C  6EFE               	movwf	tosh,c
 44622   00922E  6AFF               	clrf	tosu,c
 44623   009230  50FA               	movf	pclath,w,c
 44624   009232  0012               	return		;indir
 44625   009234                     i1u2723_29:
 44626                           
 44627                           ;../../VLCBlib_PIC/vlcb.c: 1084:     }
 44628   009234  0100               	movlb	0	; () banked
 44629   009236  2B7D               	incf	lowIsr@i& (0+255),f,b
 44630                           
 44631                           ; BSR set to: 0
 44632   009238  0E08               	movlw	8
 44633   00923A  657D               	cpfsgt	lowIsr@i& (0+255),b
 44634   00923C  D79F               	goto	i1l25070
 44635                           
 44636                           ; BSR set to: 0
 44637                           ;../../VLCBlib_PIC/vlcb.c: 1085:     APP_lowIsr();
 44638   00923E  EC2D  F064         	call	_APP_lowIsr	;wreg free
 44639   009242  0012               	return		;funcret
 44640   009244                     __end_of_lowIsr:
 44641                           	callstack 0
 44642                           
 44643 ;; *************** function _canIsr *****************
 44644 ;; Defined at:
 44645 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 44646 ;; Parameters:    Size  Location     Type
 44647 ;;		None
 44648 ;; Auto vars:     Size  Location     Type
 44649 ;;		None
 44650 ;; Return value:  Size  Location     Type
 44651 ;;                  1    wreg      void 
 44652 ;; Registers used:
 44653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44654 ;; Tracked objects:
 44655 ;;		On entry : 0/0
 44656 ;;		On exit  : 0/0
 44657 ;;		Unchanged: 0/0
 44658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44663 ;;Total ram usage:        0 bytes
 44664 ;; Hardware stack levels used: 1
 44665 ;; Hardware stack levels required when called: 9
 44666 ;; This function calls:
 44667 ;;		_canFillRxFifo
 44668 ;;		_canTxError
 44669 ;;		_checkCANTimeout
 44670 ;;		_checkTxFifo
 44671 ;; This function is called by:
 44672 ;;		_highIsr
 44673 ;;		_lowIsr
 44674 ;; This function uses a non-reentrant model
 44675 ;;
 44676                           
 44677                           	psect	text200
 44678   00C64A                     __ptext200:
 44679                           	callstack 0
 44680   00C64A                     _canIsr:
 44681                           	callstack 0
 44682                           
 44683                           ;Skip over the trampoline to the duplicate function for level 2
 44684   00C64A  A254               	btfss	btemp,1,c
 44685   00C64C  D002               	goto	_canIsr$intlevel1
 44686   00C64E  EFA3  F063         	goto	i2_canIsr
 44687   00C652                     _canIsr$intlevel1:
 44688                           	callstack 2
 44689                           
 44690                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 44691                           
 44692                           ;incstack = 0
 44693   00C652  B077               	btfsc	119,0,c	;volatile
 44694                           
 44695                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 44696   00C654  EC31  F03A         	call	_canFillRxFifo	;wreg free
 44697                           
 44698                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 44699   00C658  BA77               	btfsc	119,5,c	;volatile
 44700                           
 44701                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 44702   00C65A  EC3F  F05A         	call	_canTxError	;wreg free
 44703                           
 44704                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 44705   00C65E  B877               	btfsc	119,4,c	;volatile
 44706                           
 44707                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 44708   00C660  EC0A  F02A         	call	_checkTxFifo	;wreg free
 44709                           
 44710                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 44711                           
 44712                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 44713   00C664  ECBE  F05C         	call	_checkCANTimeout	;wreg free
 44714   00C668  0012               	return		;funcret
 44715   00C66A                     __end_of_canIsr:
 44716                           	callstack 0
 44717                           
 44718 ;; *************** function _mnsLowIsr *****************
 44719 ;; Defined at:
 44720 ;;		line 764 in file "../../VLCBlib_PIC/mns.c"
 44721 ;; Parameters:    Size  Location     Type
 44722 ;;		None
 44723 ;; Auto vars:     Size  Location     Type
 44724 ;;		None
 44725 ;; Return value:  Size  Location     Type
 44726 ;;                  1    wreg      void 
 44727 ;; Registers used:
 44728 ;;		wreg, status,2, status,0
 44729 ;; Tracked objects:
 44730 ;;		On entry : 0/0
 44731 ;;		On exit  : 0/0
 44732 ;;		Unchanged: 0/0
 44733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44738 ;;Total ram usage:        0 bytes
 44739 ;; Hardware stack levels used: 1
 44740 ;; Hardware stack levels required when called: 6
 44741 ;; This function calls:
 44742 ;;		Nothing
 44743 ;; This function is called by:
 44744 ;;		_lowIsr
 44745 ;; This function uses a non-reentrant model
 44746 ;;
 44747                           
 44748                           	psect	text201
 44749   00C79C                     __ptext201:
 44750                           	callstack 0
 44751   00C79C                     _mnsLowIsr:
 44752                           	callstack 5
 44753                           
 44754                           ;../../VLCBlib_PIC/mns.c: 767:     if(INTCONbits.TMR0IF) {
 44755                           
 44756                           ;incstack = 0
 44757   00C79C  A4F2               	btfss	242,2,c	;volatile
 44758   00C79E  0012               	return	
 44759                           
 44760                           ;../../VLCBlib_PIC/mns.c: 769:         INTCONbits.TMR0IF = 0;
 44761   00C7A0  94F2               	bcf	242,2,c	;volatile
 44762                           
 44763                           ;../../VLCBlib_PIC/mns.c: 770:         timerExtension1++;
 44764   00C7A2  0100               	movlb	0	; () banked
 44765   00C7A4  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 44766                           
 44767                           ; BSR set to: 0
 44768                           ;../../VLCBlib_PIC/mns.c: 771:         if(timerExtension1 == 0) {
 44769   00C7A6  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 44770   00C7A8  A4D8               	btfss	status,2,c
 44771   00C7AA  0012               	return	
 44772                           
 44773                           ; BSR set to: 0
 44774                           ;../../VLCBlib_PIC/mns.c: 772:             timerExtension2++;
 44775   00C7AC  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 44776   00C7AE  0012               	return		;funcret
 44777   00C7B0                     __end_of_mnsLowIsr:
 44778                           	callstack 0
 44779                           
 44780 ;; *************** function _checkCANTimeout *****************
 44781 ;; Defined at:
 44782 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 44783 ;; Parameters:    Size  Location     Type
 44784 ;;		None
 44785 ;; Auto vars:     Size  Location     Type
 44786 ;;		None
 44787 ;; Return value:  Size  Location     Type
 44788 ;;                  1    wreg      void 
 44789 ;; Registers used:
 44790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44791 ;; Tracked objects:
 44792 ;;		On entry : 0/0
 44793 ;;		On exit  : 0/0
 44794 ;;		Unchanged: 0/0
 44795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44798 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44799 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44800 ;;Total ram usage:        4 bytes
 44801 ;; Hardware stack levels used: 1
 44802 ;; Hardware stack levels required when called: 8
 44803 ;; This function calls:
 44804 ;;		_checkTxFifo
 44805 ;;		i1_tickGet
 44806 ;;		i1_updateModuleErrorStatus
 44807 ;; This function is called by:
 44808 ;;		_canIsr
 44809 ;; This function uses a non-reentrant model
 44810 ;;
 44811                           
 44812                           	psect	text202
 44813   00B97C                     __ptext202:
 44814                           	callstack 0
 44815   00B97C                     _checkCANTimeout:
 44816                           	callstack 2
 44817                           
 44818                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 44819                           
 44820                           ;incstack = 0
 44821   00B97C  503F               	movf	_canTransmitTimeout^0,w,c
 44822   00B97E  1040               	iorwf	(_canTransmitTimeout+1)^0,w,c
 44823   00B980  1041               	iorwf	(_canTransmitTimeout+2)^0,w,c
 44824   00B982  1042               	iorwf	(_canTransmitTimeout+3)^0,w,c
 44825   00B984  B4D8               	btfsc	status,2,c
 44826   00B986  0012               	return	
 44827                           
 44828                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 44829   00B988  EC3D  F05C         	call	i1_tickGet	;wreg free
 44830   00B98C  503F               	movf	_canTransmitTimeout^0,w,c
 44831   00B98E  0100               	movlb	0	; () banked
 44832   00B990  5D60               	subwf	?i1_tickGet& (0+255),w,b
 44833   00B992  6F75               	movwf	??_checkCANTimeout& (0+255),b
 44834   00B994  5040               	movf	(_canTransmitTimeout+1)^0,w,c
 44835   00B996  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 44836   00B998  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 44837   00B99A  5041               	movf	(_canTransmitTimeout+2)^0,w,c
 44838   00B99C  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 44839   00B99E  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 44840   00B9A0  5042               	movf	(_canTransmitTimeout+3)^0,w,c
 44841   00B9A2  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 44842   00B9A4  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 44843   00B9A6  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 44844   00B9A8  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 44845   00B9AA  E106               	bnz	i1u2366_20
 44846   00B9AC  0E25               	movlw	37
 44847   00B9AE  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 44848   00B9B0  0EF4               	movlw	244
 44849   00B9B2  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 44850   00B9B4  A0D8               	btfss	status,0,c
 44851   00B9B6  0012               	return	
 44852   00B9B8                     i1u2366_20:
 44853                           
 44854                           ; BSR set to: 0
 44855                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 44856   00B9B8  0E01               	movlw	1
 44857   00B9BA  6FB8               	movwf	_canTransmitFailed& (0+255),b
 44858                           
 44859                           ; BSR set to: 0
 44860                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 44861   00B9BC  010F               	movlb	15	; () banked
 44862   00B9BE  9720               	bcf	32,3,b	;volatile
 44863                           
 44864                           ; BSR set to: 15
 44865                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 44866   00B9C0  EC0A  F02A         	call	_checkTxFifo	;wreg free
 44867                           
 44868                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 44869   00B9C4  0101               	movlb	1	; () banked
 44870   00B9C6  4B6E               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44871   00B9C8  2B6F               	incf	(_canDiagnostics+5)& (0+255),f,b
 44872                           
 44873                           ; BSR set to: 1
 44874                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 44875   00B9CA  ECF5  F063         	call	i1_updateModuleErrorStatus	;wreg free
 44876   00B9CE  0012               	return		;funcret
 44877   00B9D0                     __end_of_checkCANTimeout:
 44878                           	callstack 0
 44879                           
 44880 ;; *************** function _canTxError *****************
 44881 ;; Defined at:
 44882 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 44883 ;; Parameters:    Size  Location     Type
 44884 ;;		None
 44885 ;; Auto vars:     Size  Location     Type
 44886 ;;		None
 44887 ;; Return value:  Size  Location     Type
 44888 ;;                  1    wreg      void 
 44889 ;; Registers used:
 44890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44891 ;; Tracked objects:
 44892 ;;		On entry : 0/0
 44893 ;;		On exit  : 0/0
 44894 ;;		Unchanged: 0/0
 44895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44900 ;;Total ram usage:        0 bytes
 44901 ;; Hardware stack levels used: 1
 44902 ;; Hardware stack levels required when called: 8
 44903 ;; This function calls:
 44904 ;;		_checkTxFifo
 44905 ;;		i1_updateModuleErrorStatus
 44906 ;; This function is called by:
 44907 ;;		_canIsr
 44908 ;; This function uses a non-reentrant model
 44909 ;;
 44910                           
 44911                           	psect	text203
 44912   00B47E                     __ptext203:
 44913                           	callstack 0
 44914   00B47E                     _canTxError:
 44915                           	callstack 2
 44916                           
 44917                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 44918                           
 44919                           ;incstack = 0
 44920   00B47E  010F               	movlb	15	; () banked
 44921   00B480  AB20               	btfss	32,5,b	;volatile
 44922   00B482  D012               	goto	i1l22396
 44923                           
 44924                           ; BSR set to: 15
 44925                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 44926   00B484  0E01               	movlw	1
 44927   00B486  0100               	movlb	0	; () banked
 44928   00B488  6FB8               	movwf	_canTransmitFailed& (0+255),b
 44929                           
 44930                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 44931   00B48A  0E00               	movlw	0
 44932   00B48C  6E3F               	movwf	_canTransmitTimeout^0,c
 44933   00B48E  0E00               	movlw	0
 44934   00B490  6E40               	movwf	(_canTransmitTimeout+1)^0,c
 44935   00B492  0E00               	movlw	0
 44936   00B494  6E41               	movwf	(_canTransmitTimeout+2)^0,c
 44937   00B496  0E00               	movlw	0
 44938   00B498  6E42               	movwf	(_canTransmitTimeout+3)^0,c
 44939                           
 44940                           ; BSR set to: 0
 44941                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 44942   00B49A  010F               	movlb	15	; () banked
 44943   00B49C  9720               	bcf	32,3,b	;volatile
 44944                           
 44945                           ; BSR set to: 15
 44946                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 44947   00B49E  0101               	movlb	1	; () banked
 44948   00B4A0  4B82               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 44949   00B4A2  2B83               	incf	(_canDiagnostics+25)& (0+255),f,b
 44950                           
 44951                           ; BSR set to: 1
 44952                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 44953   00B4A4  ECF5  F063         	call	i1_updateModuleErrorStatus	;wreg free
 44954   00B4A8                     i1l22396:
 44955                           
 44956                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 44957   00B4A8  010F               	movlb	15	; () banked
 44958   00B4AA  A920               	btfss	32,4,b	;volatile
 44959   00B4AC  D012               	goto	i1l22406
 44960                           
 44961                           ; BSR set to: 15
 44962                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 44963   00B4AE  0E01               	movlw	1
 44964   00B4B0  0100               	movlb	0	; () banked
 44965   00B4B2  6FB8               	movwf	_canTransmitFailed& (0+255),b
 44966                           
 44967                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 44968   00B4B4  0E00               	movlw	0
 44969   00B4B6  6E3F               	movwf	_canTransmitTimeout^0,c
 44970   00B4B8  0E00               	movlw	0
 44971   00B4BA  6E40               	movwf	(_canTransmitTimeout+1)^0,c
 44972   00B4BC  0E00               	movlw	0
 44973   00B4BE  6E41               	movwf	(_canTransmitTimeout+2)^0,c
 44974   00B4C0  0E00               	movlw	0
 44975   00B4C2  6E42               	movwf	(_canTransmitTimeout+3)^0,c
 44976                           
 44977                           ; BSR set to: 0
 44978                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 44979   00B4C4  010F               	movlb	15	; () banked
 44980   00B4C6  9720               	bcf	32,3,b	;volatile
 44981                           
 44982                           ; BSR set to: 15
 44983                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 44984   00B4C8  0101               	movlb	1	; () banked
 44985   00B4CA  4B6E               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44986   00B4CC  2B6F               	incf	(_canDiagnostics+5)& (0+255),f,b
 44987                           
 44988                           ; BSR set to: 1
 44989                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 44990   00B4CE  ECF5  F063         	call	i1_updateModuleErrorStatus	;wreg free
 44991   00B4D2                     i1l22406:
 44992                           
 44993                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 44994   00B4D2  0100               	movlb	0	; () banked
 44995   00B4D4  51B8               	movf	_canTransmitFailed& (0+255),w,b
 44996   00B4D6  A4D8               	btfss	status,2,c
 44997                           
 44998                           ; BSR set to: 0
 44999                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 45000   00B4D8  EC0A  F02A         	call	_checkTxFifo	;wreg free
 45001                           
 45002                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 45003   00B4DC  9A77               	bcf	119,5,c	;volatile
 45004   00B4DE  0012               	return		;funcret
 45005   00B4E0                     __end_of_canTxError:
 45006                           	callstack 0
 45007                           
 45008 ;; *************** function _checkTxFifo *****************
 45009 ;; Defined at:
 45010 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 45011 ;; Parameters:    Size  Location     Type
 45012 ;;		None
 45013 ;; Auto vars:     Size  Location     Type
 45014 ;;  mp              2   19[BANK0 ] PTR struct Message
 45015 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45016 ;;  m               2   17[BANK0 ] PTR struct Message
 45017 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45018 ;; Return value:  Size  Location     Type
 45019 ;;                  1    wreg      void 
 45020 ;; Registers used:
 45021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45022 ;; Tracked objects:
 45023 ;;		On entry : 0/0
 45024 ;;		On exit  : 0/0
 45025 ;;		Unchanged: 0/0
 45026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45028 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45029 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45030 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45031 ;;Total ram usage:        9 bytes
 45032 ;; Hardware stack levels used: 1
 45033 ;; Hardware stack levels required when called: 7
 45034 ;; This function calls:
 45035 ;;		i1_getNextWriteMessage
 45036 ;;		i1_isEvent
 45037 ;;		i1_pop
 45038 ;;		i1_tickGet
 45039 ;;		i1_updateModuleErrorStatus
 45040 ;; This function is called by:
 45041 ;;		_canIsr
 45042 ;;		_checkCANTimeout
 45043 ;;		_canTxError
 45044 ;; This function uses a non-reentrant model
 45045 ;;
 45046                           
 45047                           	psect	text204
 45048   005414                     __ptext204:
 45049                           	callstack 0
 45050   005414                     _checkTxFifo:
 45051                           	callstack 3
 45052                           
 45053                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 45054                           
 45055                           ;incstack = 0
 45056   005414  9877               	bcf	119,4,c	;volatile
 45057                           
 45058                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 45059   005416  010F               	movlb	15	; () banked
 45060   005418  B720               	btfsc	32,3,b	;volatile
 45061   00541A  D158               	goto	i1l2556
 45062                           
 45063                           ; BSR set to: 15
 45064                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 45065   00541C  0E4A               	movlw	low _txQueue
 45066   00541E  0100               	movlb	0	; () banked
 45067   005420  6F60               	movwf	i1pop@q& (0+255),b
 45068   005422  EC5D  F050         	call	i1_pop	;wreg free
 45069   005426  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 45070   00542A  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 45071                           
 45072                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 45073   00542E  0100               	movlb	0	; () banked
 45074   005430  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45075   005432  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 45076   005434  B4D8               	btfsc	status,2,c
 45077   005436  D13C               	goto	i1l21246
 45078                           
 45079                           ; BSR set to: 0
 45080                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 45081   005438  EE20 F001          	lfsr	2,1
 45082   00543C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45083   00543E  26D9               	addwf	fsr2l,f,c
 45084   005440  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45085   005442  22DA               	addwfc	fsr2h,f,c
 45086   005444  50DF               	movf	indf2,w,c
 45087   005446  6F6C               	movwf	??_checkTxFifo& (0+255),b
 45088   005448  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 45089   00544A  0E29               	movlw	low _priorities
 45090   00544C  256C               	addwf	??_checkTxFifo& (0+255),w,b
 45091   00544E  6EF6               	movwf	tblptrl,c
 45092   005450  0EED               	movlw	high _priorities
 45093   005452  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 45094   005454  6EF7               	movwf	tblptrh,c
 45095   005456                     	if	1	;There are 3 active tblptr bytes
 45096   005456  6AF8               	clrf	tblptru,c
 45097   005458  0E00               	movlw	low (__mediumconst shr (0+16))
 45098   00545A  22F8               	addwfc	tblptru,f,c
 45099   00545C                     	endif
 45100   00545C  0008               	tblrd		*
 45101   00545E  50F5               	movf	tablat,w,c
 45102   005460  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 45103   005462  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 45104   005464  0E86               	movlw	low _canPri
 45105   005466  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 45106   005468  6EF6               	movwf	tblptrl,c
 45107   00546A  0EEE               	movlw	high _canPri
 45108   00546C  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 45109   00546E  6EF7               	movwf	tblptrh,c
 45110   005470                     	if	1	;There are 3 active tblptr bytes
 45111   005470  6AF8               	clrf	tblptru,c
 45112   005472  0E00               	movlw	low (__mediumconst shr (0+16))
 45113   005474  22F8               	addwfc	tblptru,f,c
 45114   005476                     	endif
 45115   005476  0008               	tblrd		*
 45116   005478  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 45117   00547C  39B9               	swapf	_canId& (0+255),w,b
 45118   00547E  46E8               	rlncf	wreg,f,c
 45119   005480  0B1F               	andlw	31
 45120   005482  0B0F               	andlw	15
 45121   005484  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 45122   005486  010F               	movlb	15	; () banked
 45123   005488  6F21               	movwf	33,b	;volatile
 45124                           
 45125                           ; BSR set to: 15
 45126                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 45127   00548A  C0B9  F06C         	movff	_canId,??_checkTxFifo
 45128   00548E  0E07               	movlw	7
 45129   005490  0100               	movlb	0	; () banked
 45130   005492  176C               	andwf	??_checkTxFifo& (0+255),f,b
 45131   005494  0E05               	movlw	5
 45132   005496  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 45133   005498                     i1u2195_25:
 45134   005498  90D8               	bcf	status,0,c
 45135   00549A  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 45136   00549C  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 45137   00549E  D7FC               	goto	i1u2195_25
 45138   0054A0  516C               	movf	??_checkTxFifo& (0+255),w,b
 45139   0054A2  010F               	movlb	15	; () banked
 45140   0054A4  6F22               	movwf	34,b	;volatile
 45141                           
 45142                           ; BSR set to: 15
 45143                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 45144   0054A6  0100               	movlb	0	; () banked
 45145   0054A8  EE20 F001          	lfsr	2,1
 45146   0054AC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45147   0054AE  26D9               	addwf	fsr2l,f,c
 45148   0054B0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45149   0054B2  22DA               	addwfc	fsr2h,f,c
 45150   0054B4  50DF               	movf	indf2,w,c
 45151   0054B6  010F               	movlb	15	; () banked
 45152   0054B8  6F26               	movwf	38,b	;volatile
 45153                           
 45154                           ; BSR set to: 15
 45155                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 45156   0054BA  0100               	movlb	0	; () banked
 45157   0054BC  EE20 F002          	lfsr	2,2
 45158   0054C0  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45159   0054C2  26D9               	addwf	fsr2l,f,c
 45160   0054C4  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45161   0054C6  22DA               	addwfc	fsr2h,f,c
 45162   0054C8  50DF               	movf	indf2,w,c
 45163   0054CA  010F               	movlb	15	; () banked
 45164   0054CC  6F27               	movwf	39,b	;volatile
 45165                           
 45166                           ; BSR set to: 15
 45167                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 45168   0054CE  0100               	movlb	0	; () banked
 45169   0054D0  EE20 F003          	lfsr	2,3
 45170   0054D4  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45171   0054D6  26D9               	addwf	fsr2l,f,c
 45172   0054D8  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45173   0054DA  22DA               	addwfc	fsr2h,f,c
 45174   0054DC  50DF               	movf	indf2,w,c
 45175   0054DE  010F               	movlb	15	; () banked
 45176   0054E0  6F28               	movwf	40,b	;volatile
 45177                           
 45178                           ; BSR set to: 15
 45179                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 45180   0054E2  0100               	movlb	0	; () banked
 45181   0054E4  EE20 F004          	lfsr	2,4
 45182   0054E8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45183   0054EA  26D9               	addwf	fsr2l,f,c
 45184   0054EC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45185   0054EE  22DA               	addwfc	fsr2h,f,c
 45186   0054F0  50DF               	movf	indf2,w,c
 45187   0054F2  010F               	movlb	15	; () banked
 45188   0054F4  6F29               	movwf	41,b	;volatile
 45189                           
 45190                           ; BSR set to: 15
 45191                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 45192   0054F6  0100               	movlb	0	; () banked
 45193   0054F8  EE20 F005          	lfsr	2,5
 45194   0054FC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45195   0054FE  26D9               	addwf	fsr2l,f,c
 45196   005500  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45197   005502  22DA               	addwfc	fsr2h,f,c
 45198   005504  50DF               	movf	indf2,w,c
 45199   005506  010F               	movlb	15	; () banked
 45200   005508  6F2A               	movwf	42,b	;volatile
 45201                           
 45202                           ; BSR set to: 15
 45203                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 45204   00550A  0100               	movlb	0	; () banked
 45205   00550C  EE20 F006          	lfsr	2,6
 45206   005510  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45207   005512  26D9               	addwf	fsr2l,f,c
 45208   005514  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45209   005516  22DA               	addwfc	fsr2h,f,c
 45210   005518  50DF               	movf	indf2,w,c
 45211   00551A  010F               	movlb	15	; () banked
 45212   00551C  6F2B               	movwf	43,b	;volatile
 45213                           
 45214                           ; BSR set to: 15
 45215                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 45216   00551E  0100               	movlb	0	; () banked
 45217   005520  EE20 F007          	lfsr	2,7
 45218   005524  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45219   005526  26D9               	addwf	fsr2l,f,c
 45220   005528  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45221   00552A  22DA               	addwfc	fsr2h,f,c
 45222   00552C  50DF               	movf	indf2,w,c
 45223   00552E  010F               	movlb	15	; () banked
 45224   005530  6F2C               	movwf	44,b	;volatile
 45225                           
 45226                           ; BSR set to: 15
 45227                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 45228   005532  0100               	movlb	0	; () banked
 45229   005534  EE20 F008          	lfsr	2,8
 45230   005538  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45231   00553A  26D9               	addwf	fsr2l,f,c
 45232   00553C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45233   00553E  22DA               	addwfc	fsr2h,f,c
 45234   005540  50DF               	movf	indf2,w,c
 45235   005542  010F               	movlb	15	; () banked
 45236   005544  6F2D               	movwf	45,b	;volatile
 45237                           
 45238                           ; BSR set to: 15
 45239                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 45240   005546  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 45241   00554A  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 45242   00554E  50DF               	movf	indf2,w,c
 45243   005550  6F25               	movwf	37,b	;volatile
 45244                           
 45245                           ; BSR set to: 15
 45246                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 45247   005552  EC3D  F05C         	call	i1_tickGet	;wreg free
 45248   005556  C060  F03F         	movff	?i1_tickGet,_canTransmitTimeout
 45249   00555A  C061  F040         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 45250   00555E  C062  F041         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 45251   005562  C063  F042         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 45252                           
 45253                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 45254   005566  0E00               	movlw	0
 45255   005568  0100               	movlb	0	; () banked
 45256   00556A  6FB8               	movwf	_canTransmitFailed& (0+255),b
 45257                           
 45258                           ; BSR set to: 0
 45259                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 45260   00556C  010F               	movlb	15	; () banked
 45261   00556E  8720               	bsf	32,3,b	;volatile
 45262                           
 45263                           ; BSR set to: 15
 45264                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 45265   005570  8876               	bsf	118,4,c	;volatile
 45266                           
 45267                           ; BSR set to: 15
 45268                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 45269   005572  0101               	movlb	1	; () banked
 45270   005574  4B76               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 45271   005576  2B77               	incf	(_canDiagnostics+13)& (0+255),f,b
 45272                           
 45273                           ; BSR set to: 1
 45274                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 45275   005578  0100               	movlb	0	; () banked
 45276   00557A  EE20 F001          	lfsr	2,1
 45277   00557E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45278   005580  26D9               	addwf	fsr2l,f,c
 45279   005582  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45280   005584  22DA               	addwfc	fsr2h,f,c
 45281   005586  50DF               	movf	indf2,w,c
 45282   005588  EC64  F062         	call	i1_isEvent
 45283   00558C  0900               	iorlw	0
 45284   00558E  B4D8               	btfsc	status,2,c
 45285   005590  0012               	return	
 45286                           
 45287                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 45288   005592  0E4F               	movlw	low _rxQueue
 45289   005594  0100               	movlb	0	; () banked
 45290   005596  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 45291   005598  EC1B  F047         	call	i1_getNextWriteMessage	;wreg free
 45292   00559C  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 45293   0055A0  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 45294                           
 45295                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 45296   0055A4  0100               	movlb	0	; () banked
 45297   0055A6  5171               	movf	checkTxFifo@m& (0+255),w,b
 45298   0055A8  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 45299   0055AA  A4D8               	btfss	status,2,c
 45300   0055AC  D006               	goto	i1l21228
 45301                           
 45302                           ; BSR set to: 0
 45303                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 45304   0055AE  0101               	movlb	1	; () banked
 45305   0055B0  4B7A               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 45306   0055B2  2B7B               	incf	(_canDiagnostics+17)& (0+255),f,b
 45307                           
 45308                           ; BSR set to: 1
 45309                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 45310   0055B4  ECF5  F063         	call	i1_updateModuleErrorStatus	;wreg free
 45311                           
 45312                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 45313   0055B8  0012               	return	
 45314   0055BA                     i1l21228:
 45315                           
 45316                           ; BSR set to: 0
 45317                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 45318   0055BA  EE20 F001          	lfsr	2,1
 45319   0055BE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45320   0055C0  26D9               	addwf	fsr2l,f,c
 45321   0055C2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45322   0055C4  22DA               	addwfc	fsr2h,f,c
 45323   0055C6  EE10 F001          	lfsr	1,1
 45324   0055CA  5171               	movf	checkTxFifo@m& (0+255),w,b
 45325   0055CC  26E1               	addwf	fsr1l,f,c
 45326   0055CE  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45327   0055D0  22E2               	addwfc	fsr1h,f,c
 45328   0055D2  CFDF FFE7          	movff	indf2,indf1
 45329                           
 45330                           ; BSR set to: 0
 45331                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 45332   0055D6  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 45333   0055DA  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 45334   0055DE  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 45335   0055E2  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 45336   0055E6  CFDF FFE7          	movff	indf2,indf1
 45337                           
 45338                           ; BSR set to: 0
 45339                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 45340   0055EA  EE20 F002          	lfsr	2,2
 45341   0055EE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45342   0055F0  26D9               	addwf	fsr2l,f,c
 45343   0055F2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45344   0055F4  22DA               	addwfc	fsr2h,f,c
 45345   0055F6  EE10 F002          	lfsr	1,2
 45346   0055FA  5171               	movf	checkTxFifo@m& (0+255),w,b
 45347   0055FC  26E1               	addwf	fsr1l,f,c
 45348   0055FE  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45349   005600  22E2               	addwfc	fsr1h,f,c
 45350   005602  CFDF FFE7          	movff	indf2,indf1
 45351                           
 45352                           ; BSR set to: 0
 45353                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 45354   005606  EE20 F003          	lfsr	2,3
 45355   00560A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45356   00560C  26D9               	addwf	fsr2l,f,c
 45357   00560E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45358   005610  22DA               	addwfc	fsr2h,f,c
 45359   005612  EE10 F003          	lfsr	1,3
 45360   005616  5171               	movf	checkTxFifo@m& (0+255),w,b
 45361   005618  26E1               	addwf	fsr1l,f,c
 45362   00561A  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45363   00561C  22E2               	addwfc	fsr1h,f,c
 45364   00561E  CFDF FFE7          	movff	indf2,indf1
 45365                           
 45366                           ; BSR set to: 0
 45367                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 45368   005622  EE20 F004          	lfsr	2,4
 45369   005626  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45370   005628  26D9               	addwf	fsr2l,f,c
 45371   00562A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45372   00562C  22DA               	addwfc	fsr2h,f,c
 45373   00562E  EE10 F004          	lfsr	1,4
 45374   005632  5171               	movf	checkTxFifo@m& (0+255),w,b
 45375   005634  26E1               	addwf	fsr1l,f,c
 45376   005636  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45377   005638  22E2               	addwfc	fsr1h,f,c
 45378   00563A  CFDF FFE7          	movff	indf2,indf1
 45379                           
 45380                           ; BSR set to: 0
 45381                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 45382   00563E  EE20 F005          	lfsr	2,5
 45383   005642  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45384   005644  26D9               	addwf	fsr2l,f,c
 45385   005646  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45386   005648  22DA               	addwfc	fsr2h,f,c
 45387   00564A  EE10 F005          	lfsr	1,5
 45388   00564E  5171               	movf	checkTxFifo@m& (0+255),w,b
 45389   005650  26E1               	addwf	fsr1l,f,c
 45390   005652  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45391   005654  22E2               	addwfc	fsr1h,f,c
 45392   005656  CFDF FFE7          	movff	indf2,indf1
 45393                           
 45394                           ; BSR set to: 0
 45395                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 45396   00565A  EE20 F006          	lfsr	2,6
 45397   00565E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45398   005660  26D9               	addwf	fsr2l,f,c
 45399   005662  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45400   005664  22DA               	addwfc	fsr2h,f,c
 45401   005666  EE10 F006          	lfsr	1,6
 45402   00566A  5171               	movf	checkTxFifo@m& (0+255),w,b
 45403   00566C  26E1               	addwf	fsr1l,f,c
 45404   00566E  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45405   005670  22E2               	addwfc	fsr1h,f,c
 45406   005672  CFDF FFE7          	movff	indf2,indf1
 45407                           
 45408                           ; BSR set to: 0
 45409                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 45410   005676  EE20 F007          	lfsr	2,7
 45411   00567A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45412   00567C  26D9               	addwf	fsr2l,f,c
 45413   00567E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45414   005680  22DA               	addwfc	fsr2h,f,c
 45415   005682  EE10 F007          	lfsr	1,7
 45416   005686  5171               	movf	checkTxFifo@m& (0+255),w,b
 45417   005688  26E1               	addwf	fsr1l,f,c
 45418   00568A  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45419   00568C  22E2               	addwfc	fsr1h,f,c
 45420   00568E  CFDF FFE7          	movff	indf2,indf1
 45421                           
 45422                           ; BSR set to: 0
 45423                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 45424   005692  EE20 F008          	lfsr	2,8
 45425   005696  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45426   005698  26D9               	addwf	fsr2l,f,c
 45427   00569A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45428   00569C  22DA               	addwfc	fsr2h,f,c
 45429   00569E  EE10 F008          	lfsr	1,8
 45430   0056A2  5171               	movf	checkTxFifo@m& (0+255),w,b
 45431   0056A4  26E1               	addwf	fsr1l,f,c
 45432   0056A6  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45433   0056A8  22E2               	addwfc	fsr1h,f,c
 45434   0056AA  CFDF FFE7          	movff	indf2,indf1
 45435   0056AE  0012               	return	
 45436   0056B0                     i1l21246:
 45437                           
 45438                           ; BSR set to: 0
 45439                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 45440   0056B0  0E00               	movlw	0
 45441   0056B2  6E3F               	movwf	_canTransmitTimeout^0,c
 45442   0056B4  0E00               	movlw	0
 45443   0056B6  6E40               	movwf	(_canTransmitTimeout+1)^0,c
 45444   0056B8  0E00               	movlw	0
 45445   0056BA  6E41               	movwf	(_canTransmitTimeout+2)^0,c
 45446   0056BC  0E00               	movlw	0
 45447   0056BE  6E42               	movwf	(_canTransmitTimeout+3)^0,c
 45448                           
 45449                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 45450   0056C0  0E00               	movlw	0
 45451   0056C2  010F               	movlb	15	; () banked
 45452   0056C4  6F20               	movwf	32,b	;volatile
 45453                           
 45454                           ; BSR set to: 15
 45455                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 45456   0056C6  9877               	bcf	119,4,c	;volatile
 45457                           
 45458                           ; BSR set to: 15
 45459                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 45460   0056C8  9876               	bcf	118,4,c	;volatile
 45461   0056CA  0012               	return	
 45462   0056CC                     i1l2556:
 45463                           
 45464                           ; BSR set to: 15
 45465                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 45466   0056CC  9877               	bcf	119,4,c	;volatile
 45467                           
 45468                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 45469   0056CE  8876               	bsf	118,4,c	;volatile
 45470   0056D0  0012               	return		;funcret
 45471   0056D2                     __end_of_checkTxFifo:
 45472                           	callstack 0
 45473                           
 45474 ;; *************** function i1_tickGet *****************
 45475 ;; Defined at:
 45476 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45477 ;; Parameters:    Size  Location     Type
 45478 ;;		None
 45479 ;; Auto vars:     Size  Location     Type
 45480 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 45481 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 45482 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 45483 ;; Return value:  Size  Location     Type
 45484 ;;                  4    0[BANK0 ] unsigned long 
 45485 ;; Registers used:
 45486 ;;		wreg, status,2, status,0
 45487 ;; Tracked objects:
 45488 ;;		On entry : 0/0
 45489 ;;		On exit  : 0/0
 45490 ;;		Unchanged: 0/0
 45491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45493 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45495 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45496 ;;Total ram usage:       10 bytes
 45497 ;; Hardware stack levels used: 1
 45498 ;; Hardware stack levels required when called: 6
 45499 ;; This function calls:
 45500 ;;		Nothing
 45501 ;; This function is called by:
 45502 ;;		_checkTxFifo
 45503 ;;		_checkCANTimeout
 45504 ;; This function uses a non-reentrant model
 45505 ;;
 45506                           
 45507                           	psect	text205
 45508   00B87A                     __ptext205:
 45509                           	callstack 0
 45510   00B87A                     i1_tickGet:
 45511                           	callstack 3
 45512                           
 45513                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45514                           
 45515                           ;incstack = 0
 45516   00B87A  0E00               	movlw	0
 45517   00B87C  0100               	movlb	0	; () banked
 45518   00B87E  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 45519                           
 45520                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45521   00B880  0E00               	movlw	0
 45522   00B882  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 45523                           
 45524                           ; BSR set to: 0
 45525                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 45526   00B884  9AF2               	bcf	242,5,c	;volatile
 45527   00B886                     i1l20344:
 45528                           
 45529                           ; BSR set to: 0
 45530                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 45531   00B886  0E00               	movlw	0
 45532   00B888  B4F2               	btfsc	242,2,c	;volatile
 45533   00B88A  0E01               	movlw	1
 45534   00B88C  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 45535                           
 45536                           ; BSR set to: 0
 45537                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45538   00B88E  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 45539                           
 45540                           ; BSR set to: 0
 45541                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45542   00B892  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 45543                           
 45544                           ; BSR set to: 0
 45545                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 45546   00B896  0E00               	movlw	0
 45547   00B898  B4F2               	btfsc	242,2,c	;volatile
 45548   00B89A  0E01               	movlw	1
 45549   00B89C  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 45550                           
 45551                           ; BSR set to: 0
 45552                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45553   00B89E  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 45554   00B8A0  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 45555   00B8A2  A4D8               	btfss	status,2,c
 45556   00B8A4  D7F0               	goto	i1l20344
 45557                           
 45558                           ; BSR set to: 0
 45559                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45560   00B8A6  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 45561   00B8A8  B4D8               	btfsc	status,2,c
 45562   00B8AA  D005               	goto	i1l20364
 45563                           
 45564                           ; BSR set to: 0
 45565                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 45566   00B8AC  94F2               	bcf	242,2,c	;volatile
 45567                           
 45568                           ; BSR set to: 0
 45569                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 45570   00B8AE  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 45571                           
 45572                           ; BSR set to: 0
 45573                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 45574   00B8B0  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 45575   00B8B2  B4D8               	btfsc	status,2,c
 45576                           
 45577                           ; BSR set to: 0
 45578                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 45579   00B8B4  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 45580   00B8B6                     i1l20364:
 45581                           
 45582                           ; BSR set to: 0
 45583                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 45584   00B8B6  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 45585   00B8B8  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 45586                           
 45587                           ; BSR set to: 0
 45588                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 45589   00B8BA  51C5               	movf	_timerExtension2& (0+255),w,b	;volatile
 45590   00B8BC  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 45591                           
 45592                           ; BSR set to: 0
 45593                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 45594   00B8BE  8AF2               	bsf	242,5,c	;volatile
 45595                           
 45596                           ; BSR set to: 0
 45597                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 45598   00B8C0  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 45599   00B8C4  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 45600   00B8C8  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 45601   00B8CC  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 45602                           
 45603                           ; BSR set to: 0
 45604   00B8D0  0012               	return		;funcret
 45605   00B8D2                     __end_ofi1_tickGet:
 45606                           	callstack 0
 45607                           
 45608 ;; *************** function i1_pop *****************
 45609 ;; Defined at:
 45610 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 45611 ;; Parameters:    Size  Location     Type
 45612 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 45613 ;;		 -> txQueue(5), rxQueue(5), 
 45614 ;; Auto vars:     Size  Location     Type
 45615 ;;  ret             2    7[BANK0 ] PTR struct Message
 45616 ;;		 -> txBuffers(72), rxBuffers(288), 
 45617 ;; Return value:  Size  Location     Type
 45618 ;;                  2    0[BANK0 ] PTR struct Message
 45619 ;; Registers used:
 45620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45621 ;; Tracked objects:
 45622 ;;		On entry : 0/0
 45623 ;;		On exit  : 0/0
 45624 ;;		Unchanged: 0/0
 45625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45626 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45627 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45628 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45629 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45630 ;;Total ram usage:        9 bytes
 45631 ;; Hardware stack levels used: 1
 45632 ;; Hardware stack levels required when called: 6
 45633 ;; This function calls:
 45634 ;;		Nothing
 45635 ;; This function is called by:
 45636 ;;		_checkTxFifo
 45637 ;; This function uses a non-reentrant model
 45638 ;;
 45639                           
 45640                           	psect	text206
 45641   00A0BA                     __ptext206:
 45642                           	callstack 0
 45643   00A0BA                     i1_pop:
 45644                           	callstack 3
 45645                           
 45646                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 45647                           
 45648                           ; BSR set to: 0
 45649                           ;incstack = 0
 45650   00A0BA  0100               	movlb	0	; () banked
 45651   00A0BC  5160               	movf	i1pop@q& (0+255),w,b
 45652   00A0BE  6ED9               	movwf	fsr2l,c
 45653   00A0C0  6ADA               	clrf	fsr2h,c
 45654   00A0C2  0E02               	movlw	2
 45655   00A0C4  26D9               	addwf	fsr2l,f,c
 45656   00A0C6  5160               	movf	i1pop@q& (0+255),w,b
 45657   00A0C8  6EE1               	movwf	fsr1l,c
 45658   00A0CA  6AE2               	clrf	fsr1h,c
 45659   00A0CC  0E03               	movlw	3
 45660   00A0CE  26E1               	addwf	fsr1l,f,c
 45661   00A0D0  50DE               	movf	postinc2,w,c
 45662   00A0D2  18E6               	xorwf	postinc1,w,c
 45663   00A0D4  A4D8               	btfss	status,2,c
 45664   00A0D6  D005               	goto	i1l20406
 45665                           
 45666                           ; BSR set to: 0
 45667                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 45668   00A0D8  0E00               	movlw	0
 45669   00A0DA  6F60               	movwf	?i1_pop& (0+255),b
 45670   00A0DC  0E00               	movlw	0
 45671   00A0DE  6F61               	movwf	(?i1_pop+1)& (0+255),b
 45672   00A0E0  0012               	return	
 45673   00A0E2                     i1l20406:
 45674                           
 45675                           ; BSR set to: 0
 45676                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 45677   00A0E2  5160               	movf	i1pop@q& (0+255),w,b
 45678   00A0E4  6ED9               	movwf	fsr2l,c
 45679   00A0E6  6ADA               	clrf	fsr2h,c
 45680   00A0E8  0E02               	movlw	2
 45681   00A0EA  26D9               	addwf	fsr2l,f,c
 45682   00A0EC  50DF               	movf	indf2,w,c
 45683   00A0EE  6F62               	movwf	??i1_pop& (0+255),b
 45684   00A0F0  5162               	movf	??i1_pop& (0+255),w,b
 45685   00A0F2  0D09               	mullw	9
 45686   00A0F4  CFF3 F063          	movff	prodl,??i1_pop+1
 45687   00A0F8  CFF4 F064          	movff	prodh,??i1_pop+2
 45688   00A0FC  5160               	movf	i1pop@q& (0+255),w,b
 45689   00A0FE  6ED9               	movwf	fsr2l,c
 45690   00A100  6ADA               	clrf	fsr2h,c
 45691   00A102  CFDE F065          	movff	postinc2,??i1_pop+3
 45692   00A106  CFDD F066          	movff	postdec2,??i1_pop+4
 45693   00A10A  5163               	movf	(??i1_pop+1)& (0+255),w,b
 45694   00A10C  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 45695   00A10E  6F67               	movwf	i1pop@ret& (0+255),b
 45696   00A110  5164               	movf	(??i1_pop+2)& (0+255),w,b
 45697   00A112  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 45698   00A114  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 45699                           
 45700                           ; BSR set to: 0
 45701   00A116  5160               	movf	i1pop@q& (0+255),w,b
 45702   00A118  6ED9               	movwf	fsr2l,c
 45703   00A11A  6ADA               	clrf	fsr2h,c
 45704   00A11C  0E02               	movlw	2
 45705   00A11E  26D9               	addwf	fsr2l,f,c
 45706   00A120  2ADF               	incf	indf2,f,c
 45707                           
 45708                           ; BSR set to: 0
 45709                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 45710   00A122  5160               	movf	i1pop@q& (0+255),w,b
 45711   00A124  6ED9               	movwf	fsr2l,c
 45712   00A126  6ADA               	clrf	fsr2h,c
 45713   00A128  0E04               	movlw	4
 45714   00A12A  26D9               	addwf	fsr2l,f,c
 45715   00A12C  5160               	movf	i1pop@q& (0+255),w,b
 45716   00A12E  6EE1               	movwf	fsr1l,c
 45717   00A130  6AE2               	clrf	fsr1h,c
 45718   00A132  0E02               	movlw	2
 45719   00A134  26E1               	addwf	fsr1l,f,c
 45720   00A136  50DE               	movf	postinc2,w,c
 45721   00A138  5CE6               	subwf	postinc1,w,c
 45722   00A13A  A0D8               	btfss	status,0,c
 45723   00A13C  D006               	goto	i1l20414
 45724                           
 45725                           ; BSR set to: 0
 45726   00A13E  5160               	movf	i1pop@q& (0+255),w,b
 45727   00A140  6ED9               	movwf	fsr2l,c
 45728   00A142  6ADA               	clrf	fsr2h,c
 45729   00A144  0E02               	movlw	2
 45730   00A146  26D9               	addwf	fsr2l,f,c
 45731   00A148  6ADF               	clrf	indf2,c
 45732   00A14A                     i1l20414:
 45733                           
 45734                           ; BSR set to: 0
 45735                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 45736   00A14A  C067  F060         	movff	i1pop@ret,?i1_pop
 45737   00A14E  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 45738                           
 45739                           ; BSR set to: 0
 45740   00A152  0012               	return		;funcret
 45741   00A154                     __end_ofi1_pop:
 45742                           	callstack 0
 45743                           
 45744 ;; *************** function i1_isEvent *****************
 45745 ;; Defined at:
 45746 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 45747 ;; Parameters:    Size  Location     Type
 45748 ;;  opc             1    wreg     unsigned char 
 45749 ;; Auto vars:     Size  Location     Type
 45750 ;;  opc             1    1[BANK0 ] unsigned char 
 45751 ;; Return value:  Size  Location     Type
 45752 ;;                  1    wreg      enum E12766
 45753 ;; Registers used:
 45754 ;;		wreg, status,2, status,0
 45755 ;; Tracked objects:
 45756 ;;		On entry : 0/0
 45757 ;;		On exit  : 0/0
 45758 ;;		Unchanged: 0/0
 45759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45761 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45763 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45764 ;;Total ram usage:        2 bytes
 45765 ;; Hardware stack levels used: 1
 45766 ;; Hardware stack levels required when called: 6
 45767 ;; This function calls:
 45768 ;;		Nothing
 45769 ;; This function is called by:
 45770 ;;		_checkTxFifo
 45771 ;; This function uses a non-reentrant model
 45772 ;;
 45773                           
 45774                           	psect	text207
 45775   00C4C8                     __ptext207:
 45776                           	callstack 0
 45777   00C4C8                     i1_isEvent:
 45778                           	callstack 3
 45779                           
 45780                           ; BSR set to: 0
 45781                           ;incstack = 0
 45782                           ;i1isEvent@opc stored from wreg
 45783   00C4C8  0100               	movlb	0	; () banked
 45784   00C4CA  6F61               	movwf	i1isEvent@opc& (0+255),b
 45785                           
 45786                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 45787   00C4CC  0E00               	movlw	0
 45788   00C4CE  0100               	movlb	0	; () banked
 45789   00C4D0  6F60               	movwf	i1_isEvent$4896& (0+255),b
 45790                           
 45791                           ; BSR set to: 0
 45792   00C4D2  5161               	movf	i1isEvent@opc& (0+255),w,b
 45793   00C4D4  0B90               	andlw	144
 45794   00C4D6  0A90               	xorlw	144
 45795   00C4D8  A4D8               	btfss	status,2,c
 45796   00C4DA  D008               	goto	i1l2064
 45797                           
 45798                           ; BSR set to: 0
 45799   00C4DC  5161               	movf	i1isEvent@opc& (0+255),w,b
 45800   00C4DE  0AFF               	xorlw	255
 45801   00C4E0  0B06               	andlw	6
 45802   00C4E2  0A06               	xorlw	6
 45803   00C4E4  A4D8               	btfss	status,2,c
 45804   00C4E6  D002               	goto	i1l2064
 45805                           
 45806                           ; BSR set to: 0
 45807   00C4E8  0E01               	movlw	1
 45808   00C4EA  6F60               	movwf	i1_isEvent$4896& (0+255),b
 45809   00C4EC                     i1l2064:
 45810                           
 45811                           ; BSR set to: 0
 45812   00C4EC  5160               	movf	i1_isEvent$4896& (0+255),w,b
 45813                           
 45814                           ; BSR set to: 0
 45815   00C4EE  0012               	return		;funcret
 45816   00C4F0                     __end_ofi1_isEvent:
 45817                           	callstack 0
 45818                           
 45819 ;; *************** function _canFillRxFifo *****************
 45820 ;; Defined at:
 45821 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 45822 ;; Parameters:    Size  Location     Type
 45823 ;;		None
 45824 ;; Auto vars:     Size  Location     Type
 45825 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 45826 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 45827 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 45828 ;;		 -> NULL(0), 
 45829 ;;  m               2   12[BANK0 ] PTR struct Message
 45830 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45831 ;;  hiIndex         1    0        unsigned char 
 45832 ;; Return value:  Size  Location     Type
 45833 ;;                  1    wreg      void 
 45834 ;; Registers used:
 45835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45836 ;; Tracked objects:
 45837 ;;		On entry : 0/0
 45838 ;;		On exit  : 0/0
 45839 ;;		Unchanged: 0/0
 45840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45842 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45844 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45845 ;;Total ram usage:        4 bytes
 45846 ;; Hardware stack levels used: 1
 45847 ;; Hardware stack levels required when called: 7
 45848 ;; This function calls:
 45849 ;;		i1_getBufferPointer
 45850 ;;		i1_getNextWriteMessage
 45851 ;;		i1_updateModuleErrorStatus
 45852 ;; This function is called by:
 45853 ;;		_canIsr
 45854 ;; This function uses a non-reentrant model
 45855 ;;
 45856                           
 45857                           	psect	text208
 45858   007462                     __ptext208:
 45859                           	callstack 0
 45860   007462                     _canFillRxFifo:
 45861                           	callstack 3
 45862                           
 45863                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 45864                           
 45865                           ; BSR set to: 0
 45866                           ;incstack = 0
 45867   007462  D0B4               	goto	i1l22384
 45868   007464                     i1l22346:
 45869                           
 45870                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 45871   007464  506F               	movf	111,w,c	;volatile
 45872   007466  0B07               	andlw	7
 45873   007468  ECD8  F051         	call	i1_getBufferPointer
 45874   00746C  C060  F06E         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 45875   007470  C061  F06F         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 45876                           
 45877                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 45878   007474  9277               	bcf	119,1,c	;volatile
 45879                           
 45880                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 45881   007476  BC71               	btfsc	113,6,c	;volatile
 45882                           
 45883                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 45884   007478  9C71               	bcf	113,6,c	;volatile
 45885                           
 45886                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 45887   00747A  0100               	movlb	0	; () banked
 45888   00747C  EE20 F002          	lfsr	2,2
 45889   007480  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45890   007482  26D9               	addwf	fsr2l,f,c
 45891   007484  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45892   007486  22DA               	addwfc	fsr2h,f,c
 45893   007488  B6DF               	btfsc	indf2,3,c
 45894   00748A  D093               	goto	i1l22374
 45895                           
 45896                           ; BSR set to: 0
 45897                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 45898   00748C  0E4F               	movlw	low _rxQueue
 45899   00748E  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 45900   007490  EC1B  F047         	call	i1_getNextWriteMessage	;wreg free
 45901   007494  C060  F06C         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 45902   007498  C061  F06D         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 45903                           
 45904                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 45905   00749C  0100               	movlb	0	; () banked
 45906   00749E  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45907   0074A0  116D               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 45908   0074A2  A4D8               	btfss	status,2,c
 45909   0074A4  D009               	goto	i1l22370
 45910                           
 45911                           ; BSR set to: 0
 45912                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 45913   0074A6  0101               	movlb	1	; () banked
 45914   0074A8  4B7A               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 45915   0074AA  2B7B               	incf	(_canDiagnostics+17)& (0+255),f,b
 45916                           
 45917                           ; BSR set to: 1
 45918                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 45919   0074AC  ECF5  F063         	call	i1_updateModuleErrorStatus	;wreg free
 45920                           
 45921                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 45922   0074B0  AE77               	btfss	119,7,c	;volatile
 45923   0074B2  0012               	return	
 45924                           
 45925                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 45926   0074B4  9E77               	bcf	119,7,c	;volatile
 45927   0074B6  0012               	return	
 45928   0074B8                     i1l22370:
 45929                           
 45930                           ; BSR set to: 0
 45931                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 45932   0074B8  EE20 F006          	lfsr	2,6
 45933   0074BC  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45934   0074BE  26D9               	addwf	fsr2l,f,c
 45935   0074C0  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45936   0074C2  22DA               	addwfc	fsr2h,f,c
 45937   0074C4  EE10 F001          	lfsr	1,1
 45938   0074C8  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45939   0074CA  26E1               	addwf	fsr1l,f,c
 45940   0074CC  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45941   0074CE  22E2               	addwfc	fsr1h,f,c
 45942   0074D0  CFDF FFE7          	movff	indf2,indf1
 45943                           
 45944                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 45945   0074D4  EE20 F007          	lfsr	2,7
 45946   0074D8  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45947   0074DA  26D9               	addwf	fsr2l,f,c
 45948   0074DC  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45949   0074DE  22DA               	addwfc	fsr2h,f,c
 45950   0074E0  EE10 F002          	lfsr	1,2
 45951   0074E4  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45952   0074E6  26E1               	addwf	fsr1l,f,c
 45953   0074E8  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45954   0074EA  22E2               	addwfc	fsr1h,f,c
 45955   0074EC  CFDF FFE7          	movff	indf2,indf1
 45956                           
 45957                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 45958   0074F0  EE20 F008          	lfsr	2,8
 45959   0074F4  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45960   0074F6  26D9               	addwf	fsr2l,f,c
 45961   0074F8  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45962   0074FA  22DA               	addwfc	fsr2h,f,c
 45963   0074FC  EE10 F003          	lfsr	1,3
 45964   007500  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45965   007502  26E1               	addwf	fsr1l,f,c
 45966   007504  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45967   007506  22E2               	addwfc	fsr1h,f,c
 45968   007508  CFDF FFE7          	movff	indf2,indf1
 45969                           
 45970                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 45971   00750C  EE20 F009          	lfsr	2,9
 45972   007510  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45973   007512  26D9               	addwf	fsr2l,f,c
 45974   007514  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45975   007516  22DA               	addwfc	fsr2h,f,c
 45976   007518  EE10 F004          	lfsr	1,4
 45977   00751C  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45978   00751E  26E1               	addwf	fsr1l,f,c
 45979   007520  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45980   007522  22E2               	addwfc	fsr1h,f,c
 45981   007524  CFDF FFE7          	movff	indf2,indf1
 45982                           
 45983                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 45984   007528  EE20 F00A          	lfsr	2,10
 45985   00752C  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45986   00752E  26D9               	addwf	fsr2l,f,c
 45987   007530  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45988   007532  22DA               	addwfc	fsr2h,f,c
 45989   007534  EE10 F005          	lfsr	1,5
 45990   007538  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45991   00753A  26E1               	addwf	fsr1l,f,c
 45992   00753C  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45993   00753E  22E2               	addwfc	fsr1h,f,c
 45994   007540  CFDF FFE7          	movff	indf2,indf1
 45995                           
 45996                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 45997   007544  EE20 F00B          	lfsr	2,11
 45998   007548  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45999   00754A  26D9               	addwf	fsr2l,f,c
 46000   00754C  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46001   00754E  22DA               	addwfc	fsr2h,f,c
 46002   007550  EE10 F006          	lfsr	1,6
 46003   007554  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46004   007556  26E1               	addwf	fsr1l,f,c
 46005   007558  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46006   00755A  22E2               	addwfc	fsr1h,f,c
 46007   00755C  CFDF FFE7          	movff	indf2,indf1
 46008                           
 46009                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 46010   007560  EE20 F00C          	lfsr	2,12
 46011   007564  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46012   007566  26D9               	addwf	fsr2l,f,c
 46013   007568  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46014   00756A  22DA               	addwfc	fsr2h,f,c
 46015   00756C  EE10 F007          	lfsr	1,7
 46016   007570  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46017   007572  26E1               	addwf	fsr1l,f,c
 46018   007574  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46019   007576  22E2               	addwfc	fsr1h,f,c
 46020   007578  CFDF FFE7          	movff	indf2,indf1
 46021                           
 46022                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 46023   00757C  EE20 F00D          	lfsr	2,13
 46024   007580  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46025   007582  26D9               	addwf	fsr2l,f,c
 46026   007584  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46027   007586  22DA               	addwfc	fsr2h,f,c
 46028   007588  EE10 F008          	lfsr	1,8
 46029   00758C  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46030   00758E  26E1               	addwf	fsr1l,f,c
 46031   007590  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46032   007592  22E2               	addwfc	fsr1h,f,c
 46033   007594  CFDF FFE7          	movff	indf2,indf1
 46034                           
 46035                           ; BSR set to: 0
 46036                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 46037   007598  EE20 F005          	lfsr	2,5
 46038   00759C  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46039   00759E  26D9               	addwf	fsr2l,f,c
 46040   0075A0  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46041   0075A2  22DA               	addwfc	fsr2h,f,c
 46042   0075A4  50DF               	movf	indf2,w,c
 46043   0075A6  0B0F               	andlw	15
 46044   0075A8  C06C  FFD9         	movff	canFillRxFifo@m,fsr2l
 46045   0075AC  C06D  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 46046   0075B0  6EDF               	movwf	indf2,c
 46047   0075B2                     i1l22374:
 46048                           
 46049                           ; BSR set to: 0
 46050                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 46051   0075B2  AE77               	btfss	119,7,c	;volatile
 46052   0075B4  D004               	goto	i1l22380
 46053                           
 46054                           ; BSR set to: 0
 46055                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 46056   0075B6  0101               	movlb	1	; () banked
 46057   0075B8  4B6C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 46058   0075BA  2B6D               	incf	(_canDiagnostics+3)& (0+255),f,b
 46059                           
 46060                           ; BSR set to: 1
 46061                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 46062   0075BC  9E77               	bcf	119,7,c	;volatile
 46063   0075BE                     i1l22380:
 46064                           
 46065                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 46066   0075BE  C06E  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 46067   0075C2  C06F  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 46068   0075C6  0E7F               	movlw	127
 46069   0075C8  16DF               	andwf	indf2,f,c
 46070                           
 46071                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 46072   0075CA  9077               	bcf	119,0,c	;volatile
 46073   0075CC                     i1l22384:
 46074                           
 46075                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46076   0075CC  AE71               	btfss	113,7,c	;volatile
 46077   0075CE  0012               	return	
 46078   0075D0  D749               	goto	i1l22346
 46079   0075D2                     __end_of_canFillRxFifo:
 46080                           	callstack 0
 46081                           
 46082 ;; *************** function i1_updateModuleErrorStatus *****************
 46083 ;; Defined at:
 46084 ;;		line 617 in file "../../VLCBlib_PIC/mns.c"
 46085 ;; Parameters:    Size  Location     Type
 46086 ;;		None
 46087 ;; Auto vars:     Size  Location     Type
 46088 ;;		None
 46089 ;; Return value:  Size  Location     Type
 46090 ;;                  1    wreg      void 
 46091 ;; Registers used:
 46092 ;;		wreg, status,2, status,0
 46093 ;; Tracked objects:
 46094 ;;		On entry : 0/0
 46095 ;;		On exit  : 0/0
 46096 ;;		Unchanged: 0/0
 46097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46102 ;;Total ram usage:        0 bytes
 46103 ;; Hardware stack levels used: 1
 46104 ;; Hardware stack levels required when called: 6
 46105 ;; This function calls:
 46106 ;;		Nothing
 46107 ;; This function is called by:
 46108 ;;		_checkTxFifo
 46109 ;;		_checkCANTimeout
 46110 ;;		_canTxError
 46111 ;;		_canFillRxFifo
 46112 ;; This function uses a non-reentrant model
 46113 ;;
 46114                           
 46115                           	psect	text209
 46116   00C7EA                     __ptext209:
 46117                           	callstack 0
 46118   00C7EA                     i1_updateModuleErrorStatus:
 46119                           	callstack 3
 46120                           
 46121                           ;../../VLCBlib_PIC/mns.c: 618:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 46122                           
 46123                           ;incstack = 0
 46124   00C7EA  0101               	movlb	1	; () banked
 46125   00C7EC  2992               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 46126   00C7EE  B4D8               	btfsc	status,2,c
 46127   00C7F0  0012               	return	
 46128                           
 46129                           ; BSR set to: 1
 46130                           ;../../VLCBlib_PIC/mns.c: 619:         mnsDiagnostics[0x01].asBytes.lo++;
 46131   00C7F2  2B92               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 46132                           
 46133                           ; BSR set to: 1
 46134   00C7F4  0012               	return		;funcret
 46135   00C7F6                     __end_ofi1_updateModuleErrorStatus:
 46136                           	callstack 0
 46137                           
 46138 ;; *************** function i1_getNextWriteMessage *****************
 46139 ;; Defined at:
 46140 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 46141 ;; Parameters:    Size  Location     Type
 46142 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 46143 ;;		 -> rxQueue(5), 
 46144 ;; Auto vars:     Size  Location     Type
 46145 ;;  wr              1   11[BANK0 ] unsigned char 
 46146 ;; Return value:  Size  Location     Type
 46147 ;;                  2    0[BANK0 ] PTR struct Message
 46148 ;; Registers used:
 46149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46150 ;; Tracked objects:
 46151 ;;		On entry : 0/0
 46152 ;;		On exit  : 0/0
 46153 ;;		Unchanged: 0/0
 46154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46157 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46158 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46159 ;;Total ram usage:       12 bytes
 46160 ;; Hardware stack levels used: 1
 46161 ;; Hardware stack levels required when called: 6
 46162 ;; This function calls:
 46163 ;;		Nothing
 46164 ;; This function is called by:
 46165 ;;		_checkTxFifo
 46166 ;;		_canFillRxFifo
 46167 ;; This function uses a non-reentrant model
 46168 ;;
 46169                           
 46170                           	psect	text210
 46171   008E36                     __ptext210:
 46172                           	callstack 0
 46173   008E36                     i1_getNextWriteMessage:
 46174                           	callstack 3
 46175                           
 46176                           ; BSR set to: 1
 46177                           ;incstack = 0
 46178   008E36  0100               	movlb	0	; () banked
 46179   008E38  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46180   008E3A  6ED9               	movwf	fsr2l,c
 46181   008E3C  6ADA               	clrf	fsr2h,c
 46182   008E3E  0E02               	movlw	2
 46183   008E40  26D9               	addwf	fsr2l,f,c
 46184   008E42  50DF               	movf	indf2,w,c
 46185   008E44  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 46186   008E46  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 46187   008E48  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46188   008E4A  6ED9               	movwf	fsr2l,c
 46189   008E4C  6ADA               	clrf	fsr2h,c
 46190   008E4E  0E04               	movlw	4
 46191   008E50  26D9               	addwf	fsr2l,f,c
 46192   008E52  50DF               	movf	indf2,w,c
 46193   008E54  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 46194   008E56  0EFF               	movlw	255
 46195   008E58  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 46196   008E5A  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 46197   008E5C  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 46198   008E5E  0EFF               	movlw	255
 46199   008E60  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 46200   008E62  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46201   008E64  6ED9               	movwf	fsr2l,c
 46202   008E66  6ADA               	clrf	fsr2h,c
 46203   008E68  0E03               	movlw	3
 46204   008E6A  26D9               	addwf	fsr2l,f,c
 46205   008E6C  50DF               	movf	indf2,w,c
 46206   008E6E  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 46207   008E70  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 46208   008E72  0E01               	movlw	1
 46209   008E74  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 46210   008E76  0E00               	movlw	0
 46211   008E78  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 46212   008E7A  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 46213   008E7C  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 46214   008E7E  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 46215   008E80  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 46216   008E82  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 46217   008E84  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 46218   008E86  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 46219   008E88  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 46220   008E8A  E109               	bnz	i1l20390
 46221   008E8C  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 46222   008E8E  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 46223   008E90  A4D8               	btfss	status,2,c
 46224   008E92  D005               	goto	i1l20390
 46225                           
 46226                           ; BSR set to: 0
 46227   008E94  0E00               	movlw	0
 46228   008E96  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 46229   008E98  0E00               	movlw	0
 46230   008E9A  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 46231   008E9C  0012               	return	
 46232   008E9E                     i1l20390:
 46233                           
 46234                           ; BSR set to: 0
 46235   008E9E  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46236   008EA0  6ED9               	movwf	fsr2l,c
 46237   008EA2  6ADA               	clrf	fsr2h,c
 46238   008EA4  0E03               	movlw	3
 46239   008EA6  26D9               	addwf	fsr2l,f,c
 46240   008EA8  50DF               	movf	indf2,w,c
 46241   008EAA  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 46242   008EAC  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46243   008EAE  6ED9               	movwf	fsr2l,c
 46244   008EB0  6ADA               	clrf	fsr2h,c
 46245   008EB2  0E03               	movlw	3
 46246   008EB4  26D9               	addwf	fsr2l,f,c
 46247   008EB6  2ADF               	incf	indf2,f,c
 46248                           
 46249                           ; BSR set to: 0
 46250   008EB8  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46251   008EBA  6ED9               	movwf	fsr2l,c
 46252   008EBC  6ADA               	clrf	fsr2h,c
 46253   008EBE  0E04               	movlw	4
 46254   008EC0  26D9               	addwf	fsr2l,f,c
 46255   008EC2  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46256   008EC4  6EE1               	movwf	fsr1l,c
 46257   008EC6  6AE2               	clrf	fsr1h,c
 46258   008EC8  0E03               	movlw	3
 46259   008ECA  26E1               	addwf	fsr1l,f,c
 46260   008ECC  50DE               	movf	postinc2,w,c
 46261   008ECE  5CE6               	subwf	postinc1,w,c
 46262   008ED0  A0D8               	btfss	status,0,c
 46263   008ED2  D006               	goto	i1l20396
 46264                           
 46265                           ; BSR set to: 0
 46266   008ED4  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46267   008ED6  6ED9               	movwf	fsr2l,c
 46268   008ED8  6ADA               	clrf	fsr2h,c
 46269   008EDA  0E03               	movlw	3
 46270   008EDC  26D9               	addwf	fsr2l,f,c
 46271   008EDE  6ADF               	clrf	indf2,c
 46272   008EE0                     i1l20396:
 46273                           
 46274                           ; BSR set to: 0
 46275   008EE0  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 46276   008EE2  0D09               	mullw	9
 46277   008EE4  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 46278   008EE8  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 46279   008EEC  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46280   008EEE  6ED9               	movwf	fsr2l,c
 46281   008EF0  6ADA               	clrf	fsr2h,c
 46282   008EF2  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 46283   008EF6  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 46284   008EFA  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 46285   008EFC  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 46286   008EFE  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 46287   008F00  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 46288   008F02  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 46289   008F04  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 46290                           
 46291                           ; BSR set to: 0
 46292   008F06  0012               	return		;funcret
 46293   008F08                     __end_ofi1_getNextWriteMessage:
 46294                           	callstack 0
 46295                           
 46296 ;; *************** function i1_getBufferPointer *****************
 46297 ;; Defined at:
 46298 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 46299 ;; Parameters:    Size  Location     Type
 46300 ;;  b               1    wreg     unsigned char 
 46301 ;; Auto vars:     Size  Location     Type
 46302 ;;  b               1    2[BANK0 ] unsigned char 
 46303 ;; Return value:  Size  Location     Type
 46304 ;;                  2    0[BANK0 ] PTR unsigned char 
 46305 ;; Registers used:
 46306 ;;		wreg, status,2, status,0
 46307 ;; Tracked objects:
 46308 ;;		On entry : 0/0
 46309 ;;		On exit  : 0/0
 46310 ;;		Unchanged: 0/0
 46311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46315 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46316 ;;Total ram usage:        3 bytes
 46317 ;; Hardware stack levels used: 1
 46318 ;; Hardware stack levels required when called: 6
 46319 ;; This function calls:
 46320 ;;		Nothing
 46321 ;; This function is called by:
 46322 ;;		_canFillRxFifo
 46323 ;; This function uses a non-reentrant model
 46324 ;;
 46325                           
 46326                           	psect	text211
 46327   00A3B0                     __ptext211:
 46328                           	callstack 0
 46329   00A3B0                     i1_getBufferPointer:
 46330                           	callstack 3
 46331                           
 46332                           ; BSR set to: 0
 46333                           ;incstack = 0
 46334                           ;i1getBufferPointer@b stored from wreg
 46335   00A3B0  0100               	movlb	0	; () banked
 46336   00A3B2  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 46337                           
 46338                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 46339   00A3B4  D02D               	goto	i1l21412
 46340   00A3B6                     i1l21374:
 46341                           
 46342                           ; BSR set to: 0
 46343                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 46344   00A3B6  0E60               	movlw	96
 46345   00A3B8  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46346   00A3BA  0E0F               	movlw	15
 46347   00A3BC  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46348   00A3BE  0012               	return	
 46349   00A3C0                     i1l21378:
 46350                           
 46351                           ; BSR set to: 0
 46352                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 46353   00A3C0  0E30               	movlw	48
 46354   00A3C2  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46355   00A3C4  0E0F               	movlw	15
 46356   00A3C6  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46357   00A3C8  0012               	return	
 46358   00A3CA                     i1l21382:
 46359                           
 46360                           ; BSR set to: 0
 46361                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 46362   00A3CA  0E80               	movlw	128
 46363   00A3CC  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46364   00A3CE  0E0E               	movlw	14
 46365   00A3D0  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46366   00A3D2  0012               	return	
 46367   00A3D4                     i1l21386:
 46368                           
 46369                           ; BSR set to: 0
 46370                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 46371   00A3D4  0E90               	movlw	144
 46372   00A3D6  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46373   00A3D8  0E0E               	movlw	14
 46374   00A3DA  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46375   00A3DC  0012               	return	
 46376   00A3DE                     i1l21390:
 46377                           
 46378                           ; BSR set to: 0
 46379                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 46380   00A3DE  0EA0               	movlw	160
 46381   00A3E0  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46382   00A3E2  0E0E               	movlw	14
 46383   00A3E4  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46384   00A3E6  0012               	return	
 46385   00A3E8                     i1l21394:
 46386                           
 46387                           ; BSR set to: 0
 46388                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 46389   00A3E8  0EB0               	movlw	176
 46390   00A3EA  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46391   00A3EC  0E0E               	movlw	14
 46392   00A3EE  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46393   00A3F0  0012               	return	
 46394   00A3F2                     i1l21398:
 46395                           
 46396                           ; BSR set to: 0
 46397                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 46398   00A3F2  0EC0               	movlw	192
 46399   00A3F4  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46400   00A3F6  0E0E               	movlw	14
 46401   00A3F8  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46402   00A3FA  0012               	return	
 46403   00A3FC                     i1l21402:
 46404                           
 46405                           ; BSR set to: 0
 46406                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 46407   00A3FC  0ED0               	movlw	208
 46408   00A3FE  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46409   00A400  0E0E               	movlw	14
 46410   00A402  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46411   00A404  0012               	return	
 46412   00A406                     i1l21406:
 46413                           
 46414                           ; BSR set to: 0
 46415                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 46416   00A406  0E00               	movlw	0
 46417   00A408  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46418   00A40A  0E00               	movlw	0
 46419   00A40C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46420   00A40E  0012               	return	
 46421   00A410                     i1l21412:
 46422   00A410  0100               	movlb	0	; () banked
 46423   00A412  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 46424                           
 46425                           ; Switch size 1, requested type "simple"
 46426                           ; Number of cases is 8, Range of values is 0 to 7
 46427                           ; switch strategies available:
 46428                           ; Name         Instructions Cycles
 46429                           ; simple_byte           25    13 (average)
 46430                           ;	Chosen strategy is simple_byte
 46431   00A414  0A00               	xorlw	0	; case 0
 46432   00A416  B4D8               	btfsc	status,2,c
 46433   00A418  D7CE               	goto	i1l21374
 46434   00A41A  0A01               	xorlw	1	; case 1
 46435   00A41C  B4D8               	btfsc	status,2,c
 46436   00A41E  D7D0               	goto	i1l21378
 46437   00A420  0A03               	xorlw	3	; case 2
 46438   00A422  B4D8               	btfsc	status,2,c
 46439   00A424  D7D2               	goto	i1l21382
 46440   00A426  0A01               	xorlw	1	; case 3
 46441   00A428  B4D8               	btfsc	status,2,c
 46442   00A42A  D7D4               	goto	i1l21386
 46443   00A42C  0A07               	xorlw	7	; case 4
 46444   00A42E  B4D8               	btfsc	status,2,c
 46445   00A430  D7D6               	goto	i1l21390
 46446   00A432  0A01               	xorlw	1	; case 5
 46447   00A434  B4D8               	btfsc	status,2,c
 46448   00A436  D7D8               	goto	i1l21394
 46449   00A438  0A03               	xorlw	3	; case 6
 46450   00A43A  B4D8               	btfsc	status,2,c
 46451   00A43C  D7DA               	goto	i1l21398
 46452   00A43E  0A01               	xorlw	1	; case 7
 46453   00A440  B4D8               	btfsc	status,2,c
 46454   00A442  D7DC               	goto	i1l21402
 46455   00A444  D7E0               	goto	i1l21406
 46456   00A446                     __end_ofi1_getBufferPointer:
 46457                           	callstack 0
 46458                           
 46459 ;; *************** function _APP_lowIsr *****************
 46460 ;; Defined at:
 46461 ;;		line 708 in file "../main.c"
 46462 ;; Parameters:    Size  Location     Type
 46463 ;;		None
 46464 ;; Auto vars:     Size  Location     Type
 46465 ;;		None
 46466 ;; Return value:  Size  Location     Type
 46467 ;;                  1    wreg      void 
 46468 ;; Registers used:
 46469 ;;		None
 46470 ;; Tracked objects:
 46471 ;;		On entry : 0/0
 46472 ;;		On exit  : 0/0
 46473 ;;		Unchanged: 0/0
 46474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46479 ;;Total ram usage:        0 bytes
 46480 ;; Hardware stack levels used: 1
 46481 ;; Hardware stack levels required when called: 6
 46482 ;; This function calls:
 46483 ;;		Nothing
 46484 ;; This function is called by:
 46485 ;;		_lowIsr
 46486 ;; This function uses a non-reentrant model
 46487 ;;
 46488                           
 46489                           	psect	text212
 46490   00C85A                     __ptext212:
 46491                           	callstack 0
 46492   00C85A                     _APP_lowIsr:
 46493                           	callstack 5
 46494                           
 46495                           ; BSR set to: 0
 46496                           ;incstack = 0
 46497   00C85A  0012               	return		;funcret
 46498   00C85C                     __end_of_APP_lowIsr:
 46499                           	callstack 0
 46500                           
 46501                           	psect	intcode
 46502   000808                     __pintcode:
 46503                           	callstack 2
 46504   000808  EF77  F043         	goto	_isrHigh
 46505                           
 46506 ;; *************** function _highIsr *****************
 46507 ;; Defined at:
 46508 ;;		line 1057 in file "../../VLCBlib_PIC/vlcb.c"
 46509 ;; Parameters:    Size  Location     Type
 46510 ;;		None
 46511 ;; Auto vars:     Size  Location     Type
 46512 ;;  i               1   29[COMRAM] unsigned char 
 46513 ;; Return value:  Size  Location     Type
 46514 ;;                  1    wreg      void 
 46515 ;; Registers used:
 46516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 46517 ;; Tracked objects:
 46518 ;;		On entry : 0/0
 46519 ;;		On exit  : 0/0
 46520 ;;		Unchanged: 0/0
 46521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46524 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46525 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46526 ;;Total ram usage:        5 bytes
 46527 ;; Hardware stack levels used: 1
 46528 ;; Hardware stack levels required when called: 4
 46529 ;; This function calls:
 46530 ;;		NULL
 46531 ;;		_APP_highIsr
 46532 ;;		i2_canIsr
 46533 ;; This function is called by:
 46534 ;;		_isrHigh
 46535 ;; This function uses a non-reentrant model
 46536 ;;
 46537                           
 46538                           	psect	text214
 46539   009244                     __ptext214:
 46540                           	callstack 0
 46541   009244                     _highIsr:
 46542                           	callstack 2
 46543                           
 46544                           ;../../VLCBlib_PIC/vlcb.c: 1058:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1060:     for 
      +                          (i=0; i<9; i++) {
 46545                           
 46546                           ;incstack = 0
 46547   009244  0E00               	movlw	0
 46548   009246  6E1E               	movwf	highIsr@i^0,c
 46549   009248                     i2l25052:
 46550                           
 46551                           ;../../VLCBlib_PIC/vlcb.c: 1061:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 46552   009248  501E               	movf	highIsr@i^0,w,c
 46553   00924A  0D02               	mullw	2
 46554   00924C  0E69               	movlw	low _services
 46555   00924E  24F3               	addwf	243,w,c
 46556   009250  6EF6               	movwf	tblptrl,c
 46557   009252  0EEE               	movlw	high _services
 46558   009254  20F4               	addwfc	244,w,c
 46559   009256  6EF7               	movwf	tblptrh,c
 46560   009258                     	if	1	;There are 3 active tblptr bytes
 46561   009258  6AF8               	clrf	tblptru,c
 46562   00925A  0E00               	movlw	low (__mediumconst shr (0+16))
 46563   00925C  22F8               	addwfc	tblptru,f,c
 46564   00925E                     	endif
 46565   00925E  0009               	tblrd		*+
 46566   009260  50F5               	movf	tablat,w,c
 46567   009262  0009               	tblrd		*+
 46568   009264  10F5               	iorwf	tablat,w,c
 46569   009266  B4D8               	btfsc	status,2,c
 46570   009268  D04B               	goto	i2u2719_49
 46571   00926A  501E               	movf	highIsr@i^0,w,c
 46572   00926C  0D02               	mullw	2
 46573   00926E  0E69               	movlw	low _services
 46574   009270  24F3               	addwf	243,w,c
 46575   009272  6EF6               	movwf	tblptrl,c
 46576   009274  0EEE               	movlw	high _services
 46577   009276  20F4               	addwfc	244,w,c
 46578   009278  6EF7               	movwf	tblptrh,c
 46579   00927A                     	if	1	;There are 3 active tblptr bytes
 46580   00927A  6AF8               	clrf	tblptru,c
 46581   00927C  0E00               	movlw	low (__mediumconst shr (0+16))
 46582   00927E  22F8               	addwfc	tblptru,f,c
 46583   009280                     	endif
 46584   009280  0009               	tblrd		*+
 46585   009282  CFF5 F01A          	movff	tablat,??_highIsr
 46586   009286  0009               	tblrd		*+
 46587   009288  CFF5 F01B          	movff	tablat,??_highIsr+1
 46588   00928C  0E0A               	movlw	10
 46589   00928E  261A               	addwf	??_highIsr^0,f,c
 46590   009290  0E00               	movlw	0
 46591   009292  221B               	addwfc	(??_highIsr+1)^0,f,c
 46592   009294  C01A  FFF6         	movff	??_highIsr,tblptrl
 46593   009298  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 46594   00929C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46595   00929C  6AF8               	clrf	tblptru,c
 46596   00929E                     	endif
 46597   00929E                     	if	0	;tblptru may be non-zero
 46598   00929E                     	endif
 46599   00929E  0009               	tblrd		*+
 46600   0092A0  50F5               	movf	tablat,w,c
 46601   0092A2  0009               	tblrd		*+
 46602   0092A4  10F5               	iorwf	tablat,w,c
 46603   0092A6  B4D8               	btfsc	status,2,c
 46604   0092A8  D02B               	goto	i2u2719_49
 46605                           
 46606                           ;../../VLCBlib_PIC/vlcb.c: 1062:             services[i]->highIsr();
 46607   0092AA  501E               	movf	highIsr@i^0,w,c
 46608   0092AC  0D02               	mullw	2
 46609   0092AE  0E69               	movlw	low _services
 46610   0092B0  24F3               	addwf	243,w,c
 46611   0092B2  6EF6               	movwf	tblptrl,c
 46612   0092B4  0EEE               	movlw	high _services
 46613   0092B6  20F4               	addwfc	244,w,c
 46614   0092B8  6EF7               	movwf	tblptrh,c
 46615   0092BA                     	if	1	;There are 3 active tblptr bytes
 46616   0092BA  6AF8               	clrf	tblptru,c
 46617   0092BC  0E00               	movlw	low (__mediumconst shr (0+16))
 46618   0092BE  22F8               	addwfc	tblptru,f,c
 46619   0092C0                     	endif
 46620   0092C0  0009               	tblrd		*+
 46621   0092C2  CFF5 F01A          	movff	tablat,??_highIsr
 46622   0092C6  0009               	tblrd		*+
 46623   0092C8  CFF5 F01B          	movff	tablat,??_highIsr+1
 46624   0092CC  0E0A               	movlw	10
 46625   0092CE  261A               	addwf	??_highIsr^0,f,c
 46626   0092D0  0E00               	movlw	0
 46627   0092D2  221B               	addwfc	(??_highIsr+1)^0,f,c
 46628   0092D4  C01A  FFF6         	movff	??_highIsr,tblptrl
 46629   0092D8  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 46630   0092DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46631   0092DC  6AF8               	clrf	tblptru,c
 46632   0092DE                     	endif
 46633   0092DE                     	if	0	;tblptru may be non-zero
 46634   0092DE                     	endif
 46635   0092DE  0009               	tblrd		*+
 46636   0092E0  CFF5 F01C          	movff	tablat,??_highIsr+2
 46637   0092E4  0009               	tblrd		*+
 46638   0092E6  CFF5 F01D          	movff	tablat,??_highIsr+3
 46639   0092EA  D801               	call	i2u2719_48
 46640   0092EC  D009               	goto	i2u2719_49
 46641   0092EE                     i2u2719_48:
 46642   0092EE  0005               	push	
 46643   0092F0  6EFA               	movwf	pclath,c
 46644   0092F2  501C               	movf	(??_highIsr+2)^0,w,c
 46645   0092F4  6EFD               	movwf	tosl,c
 46646   0092F6  501D               	movf	(??_highIsr+3)^0,w,c
 46647   0092F8  6EFE               	movwf	tosh,c
 46648   0092FA  6AFF               	clrf	tosu,c
 46649   0092FC  50FA               	movf	pclath,w,c
 46650   0092FE  0012               	return		;indir
 46651   009300                     i2u2719_49:
 46652                           
 46653                           ;../../VLCBlib_PIC/vlcb.c: 1064:     }
 46654   009300  2A1E               	incf	highIsr@i^0,f,c
 46655   009302  0E08               	movlw	8
 46656   009304  641E               	cpfsgt	highIsr@i^0,c
 46657   009306  D7A0               	goto	i2l25052
 46658                           
 46659                           ;../../VLCBlib_PIC/vlcb.c: 1065:     APP_highIsr();
 46660   009308  ECAF  F063         	call	_APP_highIsr	;wreg free
 46661   00930C  0012               	return		;funcret
 46662   00930E                     __end_of_highIsr:
 46663                           	callstack 0
 46664                           
 46665 ;; *************** function i2_canIsr *****************
 46666 ;; Defined at:
 46667 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 46668 ;; Parameters:    Size  Location     Type
 46669 ;;		None
 46670 ;; Auto vars:     Size  Location     Type
 46671 ;;		None
 46672 ;; Return value:  Size  Location     Type
 46673 ;;                  1    wreg      void 
 46674 ;; Registers used:
 46675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46676 ;; Tracked objects:
 46677 ;;		On entry : 0/0
 46678 ;;		On exit  : 0/0
 46679 ;;		Unchanged: 0/0
 46680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46685 ;;Total ram usage:        0 bytes
 46686 ;; Hardware stack levels used: 1
 46687 ;; Hardware stack levels required when called: 3
 46688 ;; This function calls:
 46689 ;;		i2_canFillRxFifo
 46690 ;;		i2_canTxError
 46691 ;;		i2_checkCANTimeout
 46692 ;;		i2_checkTxFifo
 46693 ;; This function is called by:
 46694 ;;		_highIsr
 46695 ;;		_lowIsr
 46696 ;; This function uses a non-reentrant model
 46697 ;;
 46698                           
 46699                           	psect	text215
 46700   00C746                     __ptext215:
 46701                           	callstack 0
 46702   00C746                     i2_canIsr:
 46703                           	callstack 2
 46704                           
 46705                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 46706                           
 46707                           ;incstack = 0
 46708   00C746  B077               	btfsc	119,0,c	;volatile
 46709                           
 46710                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 46711   00C748  ECE9  F03A         	call	i2_canFillRxFifo	;wreg free
 46712                           
 46713                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 46714   00C74C  BA77               	btfsc	119,5,c	;volatile
 46715                           
 46716                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 46717   00C74E  EC70  F05A         	call	i2_canTxError	;wreg free
 46718                           
 46719                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 46720   00C752  B877               	btfsc	119,4,c	;volatile
 46721                           
 46722                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 46723   00C754  EC12  F02E         	call	i2_checkTxFifo	;wreg free
 46724                           
 46725                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 46726                           
 46727                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 46728   00C758  ECE8  F05C         	call	i2_checkCANTimeout	;wreg free
 46729   00C75C  0012               	return		;funcret
 46730   00C75E                     __end_ofi2_canIsr:
 46731                           	callstack 0
 46732                           
 46733 ;; *************** function i2_checkCANTimeout *****************
 46734 ;; Defined at:
 46735 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 46736 ;; Parameters:    Size  Location     Type
 46737 ;;		None
 46738 ;; Auto vars:     Size  Location     Type
 46739 ;;		None
 46740 ;; Return value:  Size  Location     Type
 46741 ;;                  1    wreg      void 
 46742 ;; Registers used:
 46743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46744 ;; Tracked objects:
 46745 ;;		On entry : 0/0
 46746 ;;		On exit  : 0/0
 46747 ;;		Unchanged: 0/0
 46748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46751 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46753 ;;Total ram usage:        4 bytes
 46754 ;; Hardware stack levels used: 1
 46755 ;; Hardware stack levels required when called: 2
 46756 ;; This function calls:
 46757 ;;		i2_checkTxFifo
 46758 ;;		i2_tickGet
 46759 ;;		i2_updateModuleErrorStatus
 46760 ;; This function is called by:
 46761 ;;		i2_canIsr
 46762 ;; This function uses a non-reentrant model
 46763 ;;
 46764                           
 46765                           	psect	text216
 46766   00B9D0                     __ptext216:
 46767                           	callstack 0
 46768   00B9D0                     i2_checkCANTimeout:
 46769                           	callstack 2
 46770                           
 46771                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 46772                           
 46773                           ;incstack = 0
 46774   00B9D0  503F               	movf	_canTransmitTimeout^0,w,c
 46775   00B9D2  1040               	iorwf	(_canTransmitTimeout+1)^0,w,c
 46776   00B9D4  1041               	iorwf	(_canTransmitTimeout+2)^0,w,c
 46777   00B9D6  1042               	iorwf	(_canTransmitTimeout+3)^0,w,c
 46778   00B9D8  B4D8               	btfsc	status,2,c
 46779   00B9DA  0012               	return	
 46780                           
 46781                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 46782   00B9DC  EC8C  F05B         	call	i2_tickGet	;wreg free
 46783   00B9E0  503F               	movf	_canTransmitTimeout^0,w,c
 46784   00B9E2  5C01               	subwf	?i2_tickGet^0,w,c
 46785   00B9E4  6E16               	movwf	??i2_checkCANTimeout^0,c
 46786   00B9E6  5040               	movf	(_canTransmitTimeout+1)^0,w,c
 46787   00B9E8  5802               	subwfb	(?i2_tickGet+1)^0,w,c
 46788   00B9EA  6E17               	movwf	(??i2_checkCANTimeout+1)^0,c
 46789   00B9EC  5041               	movf	(_canTransmitTimeout+2)^0,w,c
 46790   00B9EE  5803               	subwfb	(?i2_tickGet+2)^0,w,c
 46791   00B9F0  6E18               	movwf	(??i2_checkCANTimeout+2)^0,c
 46792   00B9F2  5042               	movf	(_canTransmitTimeout+3)^0,w,c
 46793   00B9F4  5804               	subwfb	(?i2_tickGet+3)^0,w,c
 46794   00B9F6  6E19               	movwf	(??i2_checkCANTimeout+3)^0,c
 46795   00B9F8  5019               	movf	(??i2_checkCANTimeout+3)^0,w,c
 46796   00B9FA  1018               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 46797   00B9FC  E106               	bnz	i2u1516_40
 46798   00B9FE  0E25               	movlw	37
 46799   00BA00  5C16               	subwf	??i2_checkCANTimeout^0,w,c
 46800   00BA02  0EF4               	movlw	244
 46801   00BA04  5817               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 46802   00BA06  A0D8               	btfss	status,0,c
 46803   00BA08  0012               	return	
 46804   00BA0A                     i2u1516_40:
 46805                           
 46806                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 46807   00BA0A  0E01               	movlw	1
 46808   00BA0C  0100               	movlb	0	; () banked
 46809   00BA0E  6FB8               	movwf	_canTransmitFailed& (0+255),b
 46810                           
 46811                           ; BSR set to: 0
 46812                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 46813   00BA10  010F               	movlb	15	; () banked
 46814   00BA12  9720               	bcf	32,3,b	;volatile
 46815                           
 46816                           ; BSR set to: 15
 46817                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 46818   00BA14  EC12  F02E         	call	i2_checkTxFifo	;wreg free
 46819                           
 46820                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 46821   00BA18  0101               	movlb	1	; () banked
 46822   00BA1A  4B6E               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46823   00BA1C  2B6F               	incf	(_canDiagnostics+5)& (0+255),f,b
 46824                           
 46825                           ; BSR set to: 1
 46826                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 46827   00BA1E  ECFB  F063         	call	i2_updateModuleErrorStatus	;wreg free
 46828   00BA22  0012               	return		;funcret
 46829   00BA24                     __end_ofi2_checkCANTimeout:
 46830                           	callstack 0
 46831                           
 46832 ;; *************** function i2_canTxError *****************
 46833 ;; Defined at:
 46834 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 46835 ;; Parameters:    Size  Location     Type
 46836 ;;		None
 46837 ;; Auto vars:     Size  Location     Type
 46838 ;;		None
 46839 ;; Return value:  Size  Location     Type
 46840 ;;                  1    wreg      void 
 46841 ;; Registers used:
 46842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46843 ;; Tracked objects:
 46844 ;;		On entry : 0/0
 46845 ;;		On exit  : 0/0
 46846 ;;		Unchanged: 0/0
 46847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46852 ;;Total ram usage:        0 bytes
 46853 ;; Hardware stack levels used: 1
 46854 ;; Hardware stack levels required when called: 2
 46855 ;; This function calls:
 46856 ;;		i2_checkTxFifo
 46857 ;;		i2_updateModuleErrorStatus
 46858 ;; This function is called by:
 46859 ;;		i2_canIsr
 46860 ;; This function uses a non-reentrant model
 46861 ;;
 46862                           
 46863                           	psect	text217
 46864   00B4E0                     __ptext217:
 46865                           	callstack 0
 46866   00B4E0                     i2_canTxError:
 46867                           	callstack 2
 46868                           
 46869                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 46870                           
 46871                           ;incstack = 0
 46872   00B4E0  010F               	movlb	15	; () banked
 46873   00B4E2  AB20               	btfss	32,5,b	;volatile
 46874   00B4E4  D012               	goto	i2l15600
 46875                           
 46876                           ; BSR set to: 15
 46877                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 46878   00B4E6  0E01               	movlw	1
 46879   00B4E8  0100               	movlb	0	; () banked
 46880   00B4EA  6FB8               	movwf	_canTransmitFailed& (0+255),b
 46881                           
 46882                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 46883   00B4EC  0E00               	movlw	0
 46884   00B4EE  6E3F               	movwf	_canTransmitTimeout^0,c
 46885   00B4F0  0E00               	movlw	0
 46886   00B4F2  6E40               	movwf	(_canTransmitTimeout+1)^0,c
 46887   00B4F4  0E00               	movlw	0
 46888   00B4F6  6E41               	movwf	(_canTransmitTimeout+2)^0,c
 46889   00B4F8  0E00               	movlw	0
 46890   00B4FA  6E42               	movwf	(_canTransmitTimeout+3)^0,c
 46891                           
 46892                           ; BSR set to: 0
 46893                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 46894   00B4FC  010F               	movlb	15	; () banked
 46895   00B4FE  9720               	bcf	32,3,b	;volatile
 46896                           
 46897                           ; BSR set to: 15
 46898                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 46899   00B500  0101               	movlb	1	; () banked
 46900   00B502  4B82               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 46901   00B504  2B83               	incf	(_canDiagnostics+25)& (0+255),f,b
 46902                           
 46903                           ; BSR set to: 1
 46904                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 46905   00B506  ECFB  F063         	call	i2_updateModuleErrorStatus	;wreg free
 46906   00B50A                     i2l15600:
 46907                           
 46908                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 46909   00B50A  010F               	movlb	15	; () banked
 46910   00B50C  A920               	btfss	32,4,b	;volatile
 46911   00B50E  D012               	goto	i2l15610
 46912                           
 46913                           ; BSR set to: 15
 46914                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 46915   00B510  0E01               	movlw	1
 46916   00B512  0100               	movlb	0	; () banked
 46917   00B514  6FB8               	movwf	_canTransmitFailed& (0+255),b
 46918                           
 46919                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 46920   00B516  0E00               	movlw	0
 46921   00B518  6E3F               	movwf	_canTransmitTimeout^0,c
 46922   00B51A  0E00               	movlw	0
 46923   00B51C  6E40               	movwf	(_canTransmitTimeout+1)^0,c
 46924   00B51E  0E00               	movlw	0
 46925   00B520  6E41               	movwf	(_canTransmitTimeout+2)^0,c
 46926   00B522  0E00               	movlw	0
 46927   00B524  6E42               	movwf	(_canTransmitTimeout+3)^0,c
 46928                           
 46929                           ; BSR set to: 0
 46930                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 46931   00B526  010F               	movlb	15	; () banked
 46932   00B528  9720               	bcf	32,3,b	;volatile
 46933                           
 46934                           ; BSR set to: 15
 46935                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 46936   00B52A  0101               	movlb	1	; () banked
 46937   00B52C  4B6E               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46938   00B52E  2B6F               	incf	(_canDiagnostics+5)& (0+255),f,b
 46939                           
 46940                           ; BSR set to: 1
 46941                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 46942   00B530  ECFB  F063         	call	i2_updateModuleErrorStatus	;wreg free
 46943   00B534                     i2l15610:
 46944                           
 46945                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 46946   00B534  0100               	movlb	0	; () banked
 46947   00B536  51B8               	movf	_canTransmitFailed& (0+255),w,b
 46948   00B538  A4D8               	btfss	status,2,c
 46949                           
 46950                           ; BSR set to: 0
 46951                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 46952   00B53A  EC12  F02E         	call	i2_checkTxFifo	;wreg free
 46953                           
 46954                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 46955   00B53E  9A77               	bcf	119,5,c	;volatile
 46956   00B540  0012               	return		;funcret
 46957   00B542                     __end_ofi2_canTxError:
 46958                           	callstack 0
 46959                           
 46960 ;; *************** function i2_checkTxFifo *****************
 46961 ;; Defined at:
 46962 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 46963 ;; Parameters:    Size  Location     Type
 46964 ;;		None
 46965 ;; Auto vars:     Size  Location     Type
 46966 ;;  mp              2   19[COMRAM] PTR struct Message
 46967 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46968 ;;  m               2   17[COMRAM] PTR struct Message
 46969 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46970 ;; Return value:  Size  Location     Type
 46971 ;;                  1    wreg      void 
 46972 ;; Registers used:
 46973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46974 ;; Tracked objects:
 46975 ;;		On entry : 0/0
 46976 ;;		On exit  : 0/0
 46977 ;;		Unchanged: 0/0
 46978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46980 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46981 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46982 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46983 ;;Total ram usage:        9 bytes
 46984 ;; Hardware stack levels used: 1
 46985 ;; Hardware stack levels required when called: 1
 46986 ;; This function calls:
 46987 ;;		i2_getNextWriteMessage
 46988 ;;		i2_isEvent
 46989 ;;		i2_pop
 46990 ;;		i2_tickGet
 46991 ;;		i2_updateModuleErrorStatus
 46992 ;; This function is called by:
 46993 ;;		i2_canIsr
 46994 ;;		i2_checkCANTimeout
 46995 ;;		i2_canTxError
 46996 ;; This function uses a non-reentrant model
 46997 ;;
 46998                           
 46999                           	psect	text218
 47000   005C24                     __ptext218:
 47001                           	callstack 0
 47002   005C24                     i2_checkTxFifo:
 47003                           	callstack 3
 47004                           
 47005                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 47006                           
 47007                           ;incstack = 0
 47008   005C24  9877               	bcf	119,4,c	;volatile
 47009                           
 47010                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 47011   005C26  010F               	movlb	15	; () banked
 47012   005C28  B720               	btfsc	32,3,b	;volatile
 47013   005C2A  D142               	goto	i2l2556
 47014                           
 47015                           ; BSR set to: 15
 47016                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 47017   005C2C  0E4A               	movlw	low _txQueue
 47018   005C2E  6E01               	movwf	i2pop@q^0,c
 47019   005C30  ECF6  F050         	call	i2_pop	;wreg free
 47020   005C34  C001  F014         	movff	?i2_pop,i2checkTxFifo@mp
 47021   005C38  C002  F015         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 47022                           
 47023                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 47024   005C3C  5014               	movf	i2checkTxFifo@mp^0,w,c
 47025   005C3E  1015               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 47026   005C40  B4D8               	btfsc	status,2,c
 47027   005C42  D128               	goto	i2l14170
 47028                           
 47029                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 47030   005C44  EE20 F001          	lfsr	2,1
 47031   005C48  5014               	movf	i2checkTxFifo@mp^0,w,c
 47032   005C4A  26D9               	addwf	fsr2l,f,c
 47033   005C4C  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47034   005C4E  22DA               	addwfc	fsr2h,f,c
 47035   005C50  50DF               	movf	indf2,w,c
 47036   005C52  6E0D               	movwf	??i2_checkTxFifo^0,c
 47037   005C54  6A0E               	clrf	(??i2_checkTxFifo+1)^0,c
 47038   005C56  0E29               	movlw	low _priorities
 47039   005C58  240D               	addwf	??i2_checkTxFifo^0,w,c
 47040   005C5A  6EF6               	movwf	tblptrl,c
 47041   005C5C  0EED               	movlw	high _priorities
 47042   005C5E  200E               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 47043   005C60  6EF7               	movwf	tblptrh,c
 47044   005C62                     	if	1	;There are 3 active tblptr bytes
 47045   005C62  6AF8               	clrf	tblptru,c
 47046   005C64  0E00               	movlw	low (__mediumconst shr (0+16))
 47047   005C66  22F8               	addwfc	tblptru,f,c
 47048   005C68                     	endif
 47049   005C68  0008               	tblrd		*
 47050   005C6A  50F5               	movf	tablat,w,c
 47051   005C6C  6E0F               	movwf	(??i2_checkTxFifo+2)^0,c
 47052   005C6E  6A10               	clrf	(??i2_checkTxFifo+3)^0,c
 47053   005C70  0E86               	movlw	low _canPri
 47054   005C72  240F               	addwf	(??i2_checkTxFifo+2)^0,w,c
 47055   005C74  6EF6               	movwf	tblptrl,c
 47056   005C76  0EEE               	movlw	high _canPri
 47057   005C78  2010               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 47058   005C7A  6EF7               	movwf	tblptrh,c
 47059   005C7C                     	if	1	;There are 3 active tblptr bytes
 47060   005C7C  6AF8               	clrf	tblptru,c
 47061   005C7E  0E00               	movlw	low (__mediumconst shr (0+16))
 47062   005C80  22F8               	addwfc	tblptru,f,c
 47063   005C82                     	endif
 47064   005C82  0008               	tblrd		*
 47065   005C84  CFF5 F011          	movff	tablat,??i2_checkTxFifo+4
 47066   005C88  0100               	movlb	0	; () banked
 47067   005C8A  39B9               	swapf	_canId& (0+255),w,b
 47068   005C8C  46E8               	rlncf	wreg,f,c
 47069   005C8E  0B1F               	andlw	31
 47070   005C90  0B0F               	andlw	15
 47071   005C92  1011               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 47072   005C94  010F               	movlb	15	; () banked
 47073   005C96  6F21               	movwf	33,b	;volatile
 47074                           
 47075                           ; BSR set to: 15
 47076                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 47077   005C98  C0B9  F00D         	movff	_canId,??i2_checkTxFifo
 47078   005C9C  0E07               	movlw	7
 47079   005C9E  160D               	andwf	??i2_checkTxFifo^0,f,c
 47080   005CA0  0E05               	movlw	5
 47081   005CA2  6E0E               	movwf	(??i2_checkTxFifo+1)^0,c
 47082   005CA4                     i2u1308_45:
 47083   005CA4  90D8               	bcf	status,0,c
 47084   005CA6  360D               	rlcf	??i2_checkTxFifo^0,f,c
 47085   005CA8  2E0E               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 47086   005CAA  D7FC               	goto	i2u1308_45
 47087   005CAC  500D               	movf	??i2_checkTxFifo^0,w,c
 47088   005CAE  6F22               	movwf	34,b	;volatile
 47089                           
 47090                           ; BSR set to: 15
 47091                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 47092   005CB0  EE20 F001          	lfsr	2,1
 47093   005CB4  5014               	movf	i2checkTxFifo@mp^0,w,c
 47094   005CB6  26D9               	addwf	fsr2l,f,c
 47095   005CB8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47096   005CBA  22DA               	addwfc	fsr2h,f,c
 47097   005CBC  50DF               	movf	indf2,w,c
 47098   005CBE  6F26               	movwf	38,b	;volatile
 47099                           
 47100                           ; BSR set to: 15
 47101                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 47102   005CC0  EE20 F002          	lfsr	2,2
 47103   005CC4  5014               	movf	i2checkTxFifo@mp^0,w,c
 47104   005CC6  26D9               	addwf	fsr2l,f,c
 47105   005CC8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47106   005CCA  22DA               	addwfc	fsr2h,f,c
 47107   005CCC  50DF               	movf	indf2,w,c
 47108   005CCE  6F27               	movwf	39,b	;volatile
 47109                           
 47110                           ; BSR set to: 15
 47111                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 47112   005CD0  EE20 F003          	lfsr	2,3
 47113   005CD4  5014               	movf	i2checkTxFifo@mp^0,w,c
 47114   005CD6  26D9               	addwf	fsr2l,f,c
 47115   005CD8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47116   005CDA  22DA               	addwfc	fsr2h,f,c
 47117   005CDC  50DF               	movf	indf2,w,c
 47118   005CDE  6F28               	movwf	40,b	;volatile
 47119                           
 47120                           ; BSR set to: 15
 47121                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 47122   005CE0  EE20 F004          	lfsr	2,4
 47123   005CE4  5014               	movf	i2checkTxFifo@mp^0,w,c
 47124   005CE6  26D9               	addwf	fsr2l,f,c
 47125   005CE8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47126   005CEA  22DA               	addwfc	fsr2h,f,c
 47127   005CEC  50DF               	movf	indf2,w,c
 47128   005CEE  6F29               	movwf	41,b	;volatile
 47129                           
 47130                           ; BSR set to: 15
 47131                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 47132   005CF0  EE20 F005          	lfsr	2,5
 47133   005CF4  5014               	movf	i2checkTxFifo@mp^0,w,c
 47134   005CF6  26D9               	addwf	fsr2l,f,c
 47135   005CF8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47136   005CFA  22DA               	addwfc	fsr2h,f,c
 47137   005CFC  50DF               	movf	indf2,w,c
 47138   005CFE  6F2A               	movwf	42,b	;volatile
 47139                           
 47140                           ; BSR set to: 15
 47141                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 47142   005D00  EE20 F006          	lfsr	2,6
 47143   005D04  5014               	movf	i2checkTxFifo@mp^0,w,c
 47144   005D06  26D9               	addwf	fsr2l,f,c
 47145   005D08  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47146   005D0A  22DA               	addwfc	fsr2h,f,c
 47147   005D0C  50DF               	movf	indf2,w,c
 47148   005D0E  6F2B               	movwf	43,b	;volatile
 47149                           
 47150                           ; BSR set to: 15
 47151                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 47152   005D10  EE20 F007          	lfsr	2,7
 47153   005D14  5014               	movf	i2checkTxFifo@mp^0,w,c
 47154   005D16  26D9               	addwf	fsr2l,f,c
 47155   005D18  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47156   005D1A  22DA               	addwfc	fsr2h,f,c
 47157   005D1C  50DF               	movf	indf2,w,c
 47158   005D1E  6F2C               	movwf	44,b	;volatile
 47159                           
 47160                           ; BSR set to: 15
 47161                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 47162   005D20  EE20 F008          	lfsr	2,8
 47163   005D24  5014               	movf	i2checkTxFifo@mp^0,w,c
 47164   005D26  26D9               	addwf	fsr2l,f,c
 47165   005D28  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47166   005D2A  22DA               	addwfc	fsr2h,f,c
 47167   005D2C  50DF               	movf	indf2,w,c
 47168   005D2E  6F2D               	movwf	45,b	;volatile
 47169                           
 47170                           ; BSR set to: 15
 47171                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 47172   005D30  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 47173   005D34  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 47174   005D38  50DF               	movf	indf2,w,c
 47175   005D3A  6F25               	movwf	37,b	;volatile
 47176                           
 47177                           ; BSR set to: 15
 47178                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 47179   005D3C  EC8C  F05B         	call	i2_tickGet	;wreg free
 47180   005D40  C001  F03F         	movff	?i2_tickGet,_canTransmitTimeout
 47181   005D44  C002  F040         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 47182   005D48  C003  F041         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 47183   005D4C  C004  F042         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 47184                           
 47185                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 47186   005D50  0E00               	movlw	0
 47187   005D52  0100               	movlb	0	; () banked
 47188   005D54  6FB8               	movwf	_canTransmitFailed& (0+255),b
 47189                           
 47190                           ; BSR set to: 0
 47191                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 47192   005D56  010F               	movlb	15	; () banked
 47193   005D58  8720               	bsf	32,3,b	;volatile
 47194                           
 47195                           ; BSR set to: 15
 47196                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 47197   005D5A  8876               	bsf	118,4,c	;volatile
 47198                           
 47199                           ; BSR set to: 15
 47200                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 47201   005D5C  0101               	movlb	1	; () banked
 47202   005D5E  4B76               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 47203   005D60  2B77               	incf	(_canDiagnostics+13)& (0+255),f,b
 47204                           
 47205                           ; BSR set to: 1
 47206                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 47207   005D62  EE20 F001          	lfsr	2,1
 47208   005D66  5014               	movf	i2checkTxFifo@mp^0,w,c
 47209   005D68  26D9               	addwf	fsr2l,f,c
 47210   005D6A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47211   005D6C  22DA               	addwfc	fsr2h,f,c
 47212   005D6E  50DF               	movf	indf2,w,c
 47213   005D70  ECD2  F062         	call	i2_isEvent
 47214   005D74  0900               	iorlw	0
 47215   005D76  B4D8               	btfsc	status,2,c
 47216   005D78  0012               	return	
 47217                           
 47218                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 47219   005D7A  0E4F               	movlw	low _rxQueue
 47220   005D7C  6E01               	movwf	i2getNextWriteMessage@q^0,c
 47221   005D7E  ECEC  F047         	call	i2_getNextWriteMessage	;wreg free
 47222   005D82  C001  F012         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 47223   005D86  C002  F013         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 47224                           
 47225                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 47226   005D8A  5012               	movf	i2checkTxFifo@m^0,w,c
 47227   005D8C  1013               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 47228   005D8E  A4D8               	btfss	status,2,c
 47229   005D90  D006               	goto	i2l14152
 47230                           
 47231                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 47232   005D92  0101               	movlb	1	; () banked
 47233   005D94  4B7A               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 47234   005D96  2B7B               	incf	(_canDiagnostics+17)& (0+255),f,b
 47235                           
 47236                           ; BSR set to: 1
 47237                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 47238   005D98  ECFB  F063         	call	i2_updateModuleErrorStatus	;wreg free
 47239                           
 47240                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 47241   005D9C  0012               	return	
 47242   005D9E                     i2l14152:
 47243                           
 47244                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 47245   005D9E  EE20 F001          	lfsr	2,1
 47246   005DA2  5014               	movf	i2checkTxFifo@mp^0,w,c
 47247   005DA4  26D9               	addwf	fsr2l,f,c
 47248   005DA6  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47249   005DA8  22DA               	addwfc	fsr2h,f,c
 47250   005DAA  EE10 F001          	lfsr	1,1
 47251   005DAE  5012               	movf	i2checkTxFifo@m^0,w,c
 47252   005DB0  26E1               	addwf	fsr1l,f,c
 47253   005DB2  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47254   005DB4  22E2               	addwfc	fsr1h,f,c
 47255   005DB6  CFDF FFE7          	movff	indf2,indf1
 47256                           
 47257                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 47258   005DBA  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 47259   005DBE  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 47260   005DC2  C012  FFE1         	movff	i2checkTxFifo@m,fsr1l
 47261   005DC6  C013  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 47262   005DCA  CFDF FFE7          	movff	indf2,indf1
 47263                           
 47264                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 47265   005DCE  EE20 F002          	lfsr	2,2
 47266   005DD2  5014               	movf	i2checkTxFifo@mp^0,w,c
 47267   005DD4  26D9               	addwf	fsr2l,f,c
 47268   005DD6  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47269   005DD8  22DA               	addwfc	fsr2h,f,c
 47270   005DDA  EE10 F002          	lfsr	1,2
 47271   005DDE  5012               	movf	i2checkTxFifo@m^0,w,c
 47272   005DE0  26E1               	addwf	fsr1l,f,c
 47273   005DE2  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47274   005DE4  22E2               	addwfc	fsr1h,f,c
 47275   005DE6  CFDF FFE7          	movff	indf2,indf1
 47276                           
 47277                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 47278   005DEA  EE20 F003          	lfsr	2,3
 47279   005DEE  5014               	movf	i2checkTxFifo@mp^0,w,c
 47280   005DF0  26D9               	addwf	fsr2l,f,c
 47281   005DF2  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47282   005DF4  22DA               	addwfc	fsr2h,f,c
 47283   005DF6  EE10 F003          	lfsr	1,3
 47284   005DFA  5012               	movf	i2checkTxFifo@m^0,w,c
 47285   005DFC  26E1               	addwf	fsr1l,f,c
 47286   005DFE  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47287   005E00  22E2               	addwfc	fsr1h,f,c
 47288   005E02  CFDF FFE7          	movff	indf2,indf1
 47289                           
 47290                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 47291   005E06  EE20 F004          	lfsr	2,4
 47292   005E0A  5014               	movf	i2checkTxFifo@mp^0,w,c
 47293   005E0C  26D9               	addwf	fsr2l,f,c
 47294   005E0E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47295   005E10  22DA               	addwfc	fsr2h,f,c
 47296   005E12  EE10 F004          	lfsr	1,4
 47297   005E16  5012               	movf	i2checkTxFifo@m^0,w,c
 47298   005E18  26E1               	addwf	fsr1l,f,c
 47299   005E1A  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47300   005E1C  22E2               	addwfc	fsr1h,f,c
 47301   005E1E  CFDF FFE7          	movff	indf2,indf1
 47302                           
 47303                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 47304   005E22  EE20 F005          	lfsr	2,5
 47305   005E26  5014               	movf	i2checkTxFifo@mp^0,w,c
 47306   005E28  26D9               	addwf	fsr2l,f,c
 47307   005E2A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47308   005E2C  22DA               	addwfc	fsr2h,f,c
 47309   005E2E  EE10 F005          	lfsr	1,5
 47310   005E32  5012               	movf	i2checkTxFifo@m^0,w,c
 47311   005E34  26E1               	addwf	fsr1l,f,c
 47312   005E36  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47313   005E38  22E2               	addwfc	fsr1h,f,c
 47314   005E3A  CFDF FFE7          	movff	indf2,indf1
 47315                           
 47316                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 47317   005E3E  EE20 F006          	lfsr	2,6
 47318   005E42  5014               	movf	i2checkTxFifo@mp^0,w,c
 47319   005E44  26D9               	addwf	fsr2l,f,c
 47320   005E46  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47321   005E48  22DA               	addwfc	fsr2h,f,c
 47322   005E4A  EE10 F006          	lfsr	1,6
 47323   005E4E  5012               	movf	i2checkTxFifo@m^0,w,c
 47324   005E50  26E1               	addwf	fsr1l,f,c
 47325   005E52  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47326   005E54  22E2               	addwfc	fsr1h,f,c
 47327   005E56  CFDF FFE7          	movff	indf2,indf1
 47328                           
 47329                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 47330   005E5A  EE20 F007          	lfsr	2,7
 47331   005E5E  5014               	movf	i2checkTxFifo@mp^0,w,c
 47332   005E60  26D9               	addwf	fsr2l,f,c
 47333   005E62  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47334   005E64  22DA               	addwfc	fsr2h,f,c
 47335   005E66  EE10 F007          	lfsr	1,7
 47336   005E6A  5012               	movf	i2checkTxFifo@m^0,w,c
 47337   005E6C  26E1               	addwf	fsr1l,f,c
 47338   005E6E  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47339   005E70  22E2               	addwfc	fsr1h,f,c
 47340   005E72  CFDF FFE7          	movff	indf2,indf1
 47341                           
 47342                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 47343   005E76  EE20 F008          	lfsr	2,8
 47344   005E7A  5014               	movf	i2checkTxFifo@mp^0,w,c
 47345   005E7C  26D9               	addwf	fsr2l,f,c
 47346   005E7E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47347   005E80  22DA               	addwfc	fsr2h,f,c
 47348   005E82  EE10 F008          	lfsr	1,8
 47349   005E86  5012               	movf	i2checkTxFifo@m^0,w,c
 47350   005E88  26E1               	addwf	fsr1l,f,c
 47351   005E8A  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47352   005E8C  22E2               	addwfc	fsr1h,f,c
 47353   005E8E  CFDF FFE7          	movff	indf2,indf1
 47354   005E92  0012               	return	
 47355   005E94                     i2l14170:
 47356                           
 47357                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 47358   005E94  0E00               	movlw	0
 47359   005E96  6E3F               	movwf	_canTransmitTimeout^0,c
 47360   005E98  0E00               	movlw	0
 47361   005E9A  6E40               	movwf	(_canTransmitTimeout+1)^0,c
 47362   005E9C  0E00               	movlw	0
 47363   005E9E  6E41               	movwf	(_canTransmitTimeout+2)^0,c
 47364   005EA0  0E00               	movlw	0
 47365   005EA2  6E42               	movwf	(_canTransmitTimeout+3)^0,c
 47366                           
 47367                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 47368   005EA4  0E00               	movlw	0
 47369   005EA6  010F               	movlb	15	; () banked
 47370   005EA8  6F20               	movwf	32,b	;volatile
 47371                           
 47372                           ; BSR set to: 15
 47373                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 47374   005EAA  9877               	bcf	119,4,c	;volatile
 47375                           
 47376                           ; BSR set to: 15
 47377                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 47378   005EAC  9876               	bcf	118,4,c	;volatile
 47379   005EAE  0012               	return	
 47380   005EB0                     i2l2556:
 47381                           
 47382                           ; BSR set to: 15
 47383                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 47384   005EB0  9877               	bcf	119,4,c	;volatile
 47385                           
 47386                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 47387   005EB2  8876               	bsf	118,4,c	;volatile
 47388   005EB4  0012               	return		;funcret
 47389   005EB6                     __end_ofi2_checkTxFifo:
 47390                           	callstack 0
 47391                           
 47392 ;; *************** function i2_tickGet *****************
 47393 ;; Defined at:
 47394 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 47395 ;; Parameters:    Size  Location     Type
 47396 ;;		None
 47397 ;; Auto vars:     Size  Location     Type
 47398 ;;  currentTime     4    6[COMRAM] struct _TickValue
 47399 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 47400 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 47401 ;; Return value:  Size  Location     Type
 47402 ;;                  4    0[COMRAM] unsigned long 
 47403 ;; Registers used:
 47404 ;;		wreg, status,2, status,0
 47405 ;; Tracked objects:
 47406 ;;		On entry : 0/0
 47407 ;;		On exit  : 0/0
 47408 ;;		Unchanged: 0/0
 47409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47411 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47413 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47414 ;;Total ram usage:       10 bytes
 47415 ;; Hardware stack levels used: 1
 47416 ;; This function calls:
 47417 ;;		Nothing
 47418 ;; This function is called by:
 47419 ;;		i2_checkTxFifo
 47420 ;;		i2_checkCANTimeout
 47421 ;; This function uses a non-reentrant model
 47422 ;;
 47423                           
 47424                           	psect	text219
 47425   00B718                     __ptext219:
 47426                           	callstack 0
 47427   00B718                     i2_tickGet:
 47428                           	callstack 3
 47429                           
 47430                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 47431                           
 47432                           ;incstack = 0
 47433   00B718  0E00               	movlw	0
 47434   00B71A  6E09               	movwf	(i2tickGet@currentTime+2)^0,c
 47435                           
 47436                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 47437   00B71C  0E00               	movlw	0
 47438   00B71E  6E0A               	movwf	(i2tickGet@currentTime+3)^0,c
 47439                           
 47440                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 47441   00B720  9AF2               	bcf	242,5,c	;volatile
 47442   00B722                     i2l12908:
 47443                           
 47444                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 47445   00B722  0E00               	movlw	0
 47446   00B724  B4F2               	btfsc	242,2,c	;volatile
 47447   00B726  0E01               	movlw	1
 47448   00B728  6E06               	movwf	i2tickGet@IntFlag1^0,c
 47449                           
 47450                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 47451   00B72A  CFD6 F007          	movff	4054,i2tickGet@currentTime	;volatile
 47452                           
 47453                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 47454   00B72E  CFD7 F008          	movff	4055,i2tickGet@currentTime+1	;volatile
 47455                           
 47456                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 47457   00B732  0E00               	movlw	0
 47458   00B734  B4F2               	btfsc	242,2,c	;volatile
 47459   00B736  0E01               	movlw	1
 47460   00B738  6E05               	movwf	i2tickGet@IntFlag2^0,c
 47461                           
 47462                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 47463   00B73A  5005               	movf	i2tickGet@IntFlag2^0,w,c
 47464   00B73C  1806               	xorwf	i2tickGet@IntFlag1^0,w,c
 47465   00B73E  A4D8               	btfss	status,2,c
 47466   00B740  D7F0               	goto	i2l12908
 47467                           
 47468                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 47469   00B742  5006               	movf	i2tickGet@IntFlag1^0,w,c
 47470   00B744  B4D8               	btfsc	status,2,c
 47471   00B746  D006               	goto	i2l12928
 47472                           
 47473                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 47474   00B748  94F2               	bcf	242,2,c	;volatile
 47475                           
 47476                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 47477   00B74A  0100               	movlb	0	; () banked
 47478   00B74C  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 47479                           
 47480                           ; BSR set to: 0
 47481                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 47482   00B74E  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 47483   00B750  B4D8               	btfsc	status,2,c
 47484                           
 47485                           ; BSR set to: 0
 47486                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 47487   00B752  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 47488   00B754                     i2l12928:
 47489                           
 47490                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 47491   00B754  0100               	movlb	0	; () banked
 47492   00B756  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 47493   00B758  2609               	addwf	(i2tickGet@currentTime+2)^0,f,c
 47494                           
 47495                           ; BSR set to: 0
 47496                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 47497   00B75A  51C5               	movf	_timerExtension2& (0+255),w,b	;volatile
 47498   00B75C  260A               	addwf	(i2tickGet@currentTime+3)^0,f,c
 47499                           
 47500                           ; BSR set to: 0
 47501                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 47502   00B75E  8AF2               	bsf	242,5,c	;volatile
 47503                           
 47504                           ; BSR set to: 0
 47505                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 47506   00B760  C007  F001         	movff	i2tickGet@currentTime,?i2_tickGet
 47507   00B764  C008  F002         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 47508   00B768  C009  F003         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 47509   00B76C  C00A  F004         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 47510                           
 47511                           ; BSR set to: 0
 47512   00B770  0012               	return		;funcret
 47513   00B772                     __end_ofi2_tickGet:
 47514                           	callstack 0
 47515                           
 47516 ;; *************** function i2_pop *****************
 47517 ;; Defined at:
 47518 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 47519 ;; Parameters:    Size  Location     Type
 47520 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 47521 ;;		 -> txQueue(5), rxQueue(5), 
 47522 ;; Auto vars:     Size  Location     Type
 47523 ;;  ret             2    7[COMRAM] PTR struct Message
 47524 ;;		 -> txBuffers(72), rxBuffers(288), 
 47525 ;; Return value:  Size  Location     Type
 47526 ;;                  2    0[COMRAM] PTR struct Message
 47527 ;; Registers used:
 47528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47529 ;; Tracked objects:
 47530 ;;		On entry : 0/0
 47531 ;;		On exit  : 0/0
 47532 ;;		Unchanged: 0/0
 47533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47536 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47537 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47538 ;;Total ram usage:        9 bytes
 47539 ;; Hardware stack levels used: 1
 47540 ;; This function calls:
 47541 ;;		Nothing
 47542 ;; This function is called by:
 47543 ;;		i2_checkTxFifo
 47544 ;; This function uses a non-reentrant model
 47545 ;;
 47546                           
 47547                           	psect	text220
 47548   00A1EC                     __ptext220:
 47549                           	callstack 0
 47550   00A1EC                     i2_pop:
 47551                           	callstack 3
 47552                           
 47553                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 47554                           
 47555                           ; BSR set to: 0
 47556                           ;incstack = 0
 47557   00A1EC  5001               	movf	i2pop@q^0,w,c
 47558   00A1EE  6ED9               	movwf	fsr2l,c
 47559   00A1F0  6ADA               	clrf	fsr2h,c
 47560   00A1F2  0E02               	movlw	2
 47561   00A1F4  26D9               	addwf	fsr2l,f,c
 47562   00A1F6  5001               	movf	i2pop@q^0,w,c
 47563   00A1F8  6EE1               	movwf	fsr1l,c
 47564   00A1FA  6AE2               	clrf	fsr1h,c
 47565   00A1FC  0E03               	movlw	3
 47566   00A1FE  26E1               	addwf	fsr1l,f,c
 47567   00A200  50DE               	movf	postinc2,w,c
 47568   00A202  18E6               	xorwf	postinc1,w,c
 47569   00A204  A4D8               	btfss	status,2,c
 47570   00A206  D005               	goto	i2l13014
 47571                           
 47572                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 47573   00A208  0E00               	movlw	0
 47574   00A20A  6E01               	movwf	?i2_pop^0,c
 47575   00A20C  0E00               	movlw	0
 47576   00A20E  6E02               	movwf	(?i2_pop+1)^0,c
 47577   00A210  0012               	return	
 47578   00A212                     i2l13014:
 47579                           
 47580                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 47581   00A212  5001               	movf	i2pop@q^0,w,c
 47582   00A214  6ED9               	movwf	fsr2l,c
 47583   00A216  6ADA               	clrf	fsr2h,c
 47584   00A218  0E02               	movlw	2
 47585   00A21A  26D9               	addwf	fsr2l,f,c
 47586   00A21C  50DF               	movf	indf2,w,c
 47587   00A21E  6E03               	movwf	??i2_pop^0,c
 47588   00A220  5003               	movf	??i2_pop^0,w,c
 47589   00A222  0D09               	mullw	9
 47590   00A224  CFF3 F004          	movff	prodl,??i2_pop+1
 47591   00A228  CFF4 F005          	movff	prodh,??i2_pop+2
 47592   00A22C  5001               	movf	i2pop@q^0,w,c
 47593   00A22E  6ED9               	movwf	fsr2l,c
 47594   00A230  6ADA               	clrf	fsr2h,c
 47595   00A232  CFDE F006          	movff	postinc2,??i2_pop+3
 47596   00A236  CFDD F007          	movff	postdec2,??i2_pop+4
 47597   00A23A  5004               	movf	(??i2_pop+1)^0,w,c
 47598   00A23C  2406               	addwf	(??i2_pop+3)^0,w,c
 47599   00A23E  6E08               	movwf	i2pop@ret^0,c
 47600   00A240  5005               	movf	(??i2_pop+2)^0,w,c
 47601   00A242  2007               	addwfc	(??i2_pop+4)^0,w,c
 47602   00A244  6E09               	movwf	(i2pop@ret+1)^0,c
 47603   00A246  5001               	movf	i2pop@q^0,w,c
 47604   00A248  6ED9               	movwf	fsr2l,c
 47605   00A24A  6ADA               	clrf	fsr2h,c
 47606   00A24C  0E02               	movlw	2
 47607   00A24E  26D9               	addwf	fsr2l,f,c
 47608   00A250  2ADF               	incf	indf2,f,c
 47609                           
 47610                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 47611   00A252  5001               	movf	i2pop@q^0,w,c
 47612   00A254  6ED9               	movwf	fsr2l,c
 47613   00A256  6ADA               	clrf	fsr2h,c
 47614   00A258  0E04               	movlw	4
 47615   00A25A  26D9               	addwf	fsr2l,f,c
 47616   00A25C  5001               	movf	i2pop@q^0,w,c
 47617   00A25E  6EE1               	movwf	fsr1l,c
 47618   00A260  6AE2               	clrf	fsr1h,c
 47619   00A262  0E02               	movlw	2
 47620   00A264  26E1               	addwf	fsr1l,f,c
 47621   00A266  50DE               	movf	postinc2,w,c
 47622   00A268  5CE6               	subwf	postinc1,w,c
 47623   00A26A  A0D8               	btfss	status,0,c
 47624   00A26C  D006               	goto	i2l13022
 47625   00A26E  5001               	movf	i2pop@q^0,w,c
 47626   00A270  6ED9               	movwf	fsr2l,c
 47627   00A272  6ADA               	clrf	fsr2h,c
 47628   00A274  0E02               	movlw	2
 47629   00A276  26D9               	addwf	fsr2l,f,c
 47630   00A278  6ADF               	clrf	indf2,c
 47631   00A27A                     i2l13022:
 47632                           
 47633                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 47634   00A27A  C008  F001         	movff	i2pop@ret,?i2_pop
 47635   00A27E  C009  F002         	movff	i2pop@ret+1,?i2_pop+1
 47636   00A282  0012               	return		;funcret
 47637   00A284                     __end_ofi2_pop:
 47638                           	callstack 0
 47639                           
 47640 ;; *************** function i2_isEvent *****************
 47641 ;; Defined at:
 47642 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 47643 ;; Parameters:    Size  Location     Type
 47644 ;;  opc             1    wreg     unsigned char 
 47645 ;; Auto vars:     Size  Location     Type
 47646 ;;  opc             1    1[COMRAM] unsigned char 
 47647 ;; Return value:  Size  Location     Type
 47648 ;;                  1    wreg      enum E12766
 47649 ;; Registers used:
 47650 ;;		wreg, status,2, status,0
 47651 ;; Tracked objects:
 47652 ;;		On entry : 0/0
 47653 ;;		On exit  : 0/0
 47654 ;;		Unchanged: 0/0
 47655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47660 ;;Total ram usage:        2 bytes
 47661 ;; Hardware stack levels used: 1
 47662 ;; This function calls:
 47663 ;;		Nothing
 47664 ;; This function is called by:
 47665 ;;		i2_checkTxFifo
 47666 ;; This function uses a non-reentrant model
 47667 ;;
 47668                           
 47669                           	psect	text221
 47670   00C5A4                     __ptext221:
 47671                           	callstack 0
 47672   00C5A4                     i2_isEvent:
 47673                           	callstack 3
 47674                           
 47675                           ;incstack = 0
 47676                           ;i2isEvent@opc stored from wreg
 47677   00C5A4  6E02               	movwf	i2isEvent@opc^0,c
 47678                           
 47679                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 47680   00C5A6  0E00               	movlw	0
 47681   00C5A8  6E01               	movwf	i2_isEvent$4896^0,c
 47682   00C5AA  5002               	movf	i2isEvent@opc^0,w,c
 47683   00C5AC  0B90               	andlw	144
 47684   00C5AE  0A90               	xorlw	144
 47685   00C5B0  A4D8               	btfss	status,2,c
 47686   00C5B2  D008               	goto	i2l2064
 47687   00C5B4  5002               	movf	i2isEvent@opc^0,w,c
 47688   00C5B6  0AFF               	xorlw	255
 47689   00C5B8  0B06               	andlw	6
 47690   00C5BA  0A06               	xorlw	6
 47691   00C5BC  A4D8               	btfss	status,2,c
 47692   00C5BE  D002               	goto	i2l2064
 47693   00C5C0  0E01               	movlw	1
 47694   00C5C2  6E01               	movwf	i2_isEvent$4896^0,c
 47695   00C5C4                     i2l2064:
 47696   00C5C4  5001               	movf	i2_isEvent$4896^0,w,c
 47697   00C5C6  0012               	return		;funcret
 47698   00C5C8                     __end_ofi2_isEvent:
 47699                           	callstack 0
 47700                           
 47701 ;; *************** function i2_canFillRxFifo *****************
 47702 ;; Defined at:
 47703 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 47704 ;; Parameters:    Size  Location     Type
 47705 ;;		None
 47706 ;; Auto vars:     Size  Location     Type
 47707 ;;  ptr             2   14[COMRAM] PTR unsigned char 
 47708 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 47709 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 47710 ;;		 -> NULL(0), 
 47711 ;;  m               2   12[COMRAM] PTR struct Message
 47712 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47713 ;;  hiIndex         1    0        unsigned char 
 47714 ;; Return value:  Size  Location     Type
 47715 ;;                  1    wreg      void 
 47716 ;; Registers used:
 47717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47718 ;; Tracked objects:
 47719 ;;		On entry : 0/0
 47720 ;;		On exit  : 0/0
 47721 ;;		Unchanged: 0/0
 47722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47724 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47726 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47727 ;;Total ram usage:        4 bytes
 47728 ;; Hardware stack levels used: 1
 47729 ;; Hardware stack levels required when called: 1
 47730 ;; This function calls:
 47731 ;;		i2_getBufferPointer
 47732 ;;		i2_getNextWriteMessage
 47733 ;;		i2_updateModuleErrorStatus
 47734 ;; This function is called by:
 47735 ;;		i2_canIsr
 47736 ;; This function uses a non-reentrant model
 47737 ;;
 47738                           
 47739                           	psect	text222
 47740   0075D2                     __ptext222:
 47741                           	callstack 0
 47742   0075D2                     i2_canFillRxFifo:
 47743                           	callstack 3
 47744                           
 47745                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47746                           
 47747                           ;incstack = 0
 47748   0075D2  D0B2               	goto	i2l15656
 47749   0075D4                     i2l15618:
 47750                           
 47751                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 47752   0075D4  506F               	movf	111,w,c	;volatile
 47753   0075D6  0B07               	andlw	7
 47754   0075D8  ECB7  F052         	call	i2_getBufferPointer
 47755   0075DC  C001  F00F         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 47756   0075E0  C002  F010         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 47757                           
 47758                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 47759   0075E4  9277               	bcf	119,1,c	;volatile
 47760                           
 47761                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 47762   0075E6  BC71               	btfsc	113,6,c	;volatile
 47763                           
 47764                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 47765   0075E8  9C71               	bcf	113,6,c	;volatile
 47766                           
 47767                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 47768   0075EA  EE20 F002          	lfsr	2,2
 47769   0075EE  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47770   0075F0  26D9               	addwf	fsr2l,f,c
 47771   0075F2  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47772   0075F4  22DA               	addwfc	fsr2h,f,c
 47773   0075F6  B6DF               	btfsc	indf2,3,c
 47774   0075F8  D092               	goto	i2l15646
 47775                           
 47776                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 47777   0075FA  0E4F               	movlw	low _rxQueue
 47778   0075FC  6E01               	movwf	i2getNextWriteMessage@q^0,c
 47779   0075FE  ECEC  F047         	call	i2_getNextWriteMessage	;wreg free
 47780   007602  C001  F00D         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 47781   007606  C002  F00E         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 47782                           
 47783                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 47784   00760A  500D               	movf	i2canFillRxFifo@m^0,w,c
 47785   00760C  100E               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 47786   00760E  A4D8               	btfss	status,2,c
 47787   007610  D009               	goto	i2l15642
 47788                           
 47789                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 47790   007612  0101               	movlb	1	; () banked
 47791   007614  4B7A               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 47792   007616  2B7B               	incf	(_canDiagnostics+17)& (0+255),f,b
 47793                           
 47794                           ; BSR set to: 1
 47795                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 47796   007618  ECFB  F063         	call	i2_updateModuleErrorStatus	;wreg free
 47797                           
 47798                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 47799   00761C  AE77               	btfss	119,7,c	;volatile
 47800   00761E  0012               	return	
 47801                           
 47802                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 47803   007620  9E77               	bcf	119,7,c	;volatile
 47804   007622  0012               	return	
 47805   007624                     i2l15642:
 47806                           
 47807                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 47808   007624  EE20 F006          	lfsr	2,6
 47809   007628  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47810   00762A  26D9               	addwf	fsr2l,f,c
 47811   00762C  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47812   00762E  22DA               	addwfc	fsr2h,f,c
 47813   007630  EE10 F001          	lfsr	1,1
 47814   007634  500D               	movf	i2canFillRxFifo@m^0,w,c
 47815   007636  26E1               	addwf	fsr1l,f,c
 47816   007638  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47817   00763A  22E2               	addwfc	fsr1h,f,c
 47818   00763C  CFDF FFE7          	movff	indf2,indf1
 47819                           
 47820                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 47821   007640  EE20 F007          	lfsr	2,7
 47822   007644  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47823   007646  26D9               	addwf	fsr2l,f,c
 47824   007648  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47825   00764A  22DA               	addwfc	fsr2h,f,c
 47826   00764C  EE10 F002          	lfsr	1,2
 47827   007650  500D               	movf	i2canFillRxFifo@m^0,w,c
 47828   007652  26E1               	addwf	fsr1l,f,c
 47829   007654  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47830   007656  22E2               	addwfc	fsr1h,f,c
 47831   007658  CFDF FFE7          	movff	indf2,indf1
 47832                           
 47833                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 47834   00765C  EE20 F008          	lfsr	2,8
 47835   007660  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47836   007662  26D9               	addwf	fsr2l,f,c
 47837   007664  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47838   007666  22DA               	addwfc	fsr2h,f,c
 47839   007668  EE10 F003          	lfsr	1,3
 47840   00766C  500D               	movf	i2canFillRxFifo@m^0,w,c
 47841   00766E  26E1               	addwf	fsr1l,f,c
 47842   007670  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47843   007672  22E2               	addwfc	fsr1h,f,c
 47844   007674  CFDF FFE7          	movff	indf2,indf1
 47845                           
 47846                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 47847   007678  EE20 F009          	lfsr	2,9
 47848   00767C  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47849   00767E  26D9               	addwf	fsr2l,f,c
 47850   007680  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47851   007682  22DA               	addwfc	fsr2h,f,c
 47852   007684  EE10 F004          	lfsr	1,4
 47853   007688  500D               	movf	i2canFillRxFifo@m^0,w,c
 47854   00768A  26E1               	addwf	fsr1l,f,c
 47855   00768C  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47856   00768E  22E2               	addwfc	fsr1h,f,c
 47857   007690  CFDF FFE7          	movff	indf2,indf1
 47858                           
 47859                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 47860   007694  EE20 F00A          	lfsr	2,10
 47861   007698  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47862   00769A  26D9               	addwf	fsr2l,f,c
 47863   00769C  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47864   00769E  22DA               	addwfc	fsr2h,f,c
 47865   0076A0  EE10 F005          	lfsr	1,5
 47866   0076A4  500D               	movf	i2canFillRxFifo@m^0,w,c
 47867   0076A6  26E1               	addwf	fsr1l,f,c
 47868   0076A8  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47869   0076AA  22E2               	addwfc	fsr1h,f,c
 47870   0076AC  CFDF FFE7          	movff	indf2,indf1
 47871                           
 47872                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 47873   0076B0  EE20 F00B          	lfsr	2,11
 47874   0076B4  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47875   0076B6  26D9               	addwf	fsr2l,f,c
 47876   0076B8  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47877   0076BA  22DA               	addwfc	fsr2h,f,c
 47878   0076BC  EE10 F006          	lfsr	1,6
 47879   0076C0  500D               	movf	i2canFillRxFifo@m^0,w,c
 47880   0076C2  26E1               	addwf	fsr1l,f,c
 47881   0076C4  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47882   0076C6  22E2               	addwfc	fsr1h,f,c
 47883   0076C8  CFDF FFE7          	movff	indf2,indf1
 47884                           
 47885                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 47886   0076CC  EE20 F00C          	lfsr	2,12
 47887   0076D0  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47888   0076D2  26D9               	addwf	fsr2l,f,c
 47889   0076D4  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47890   0076D6  22DA               	addwfc	fsr2h,f,c
 47891   0076D8  EE10 F007          	lfsr	1,7
 47892   0076DC  500D               	movf	i2canFillRxFifo@m^0,w,c
 47893   0076DE  26E1               	addwf	fsr1l,f,c
 47894   0076E0  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47895   0076E2  22E2               	addwfc	fsr1h,f,c
 47896   0076E4  CFDF FFE7          	movff	indf2,indf1
 47897                           
 47898                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 47899   0076E8  EE20 F00D          	lfsr	2,13
 47900   0076EC  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47901   0076EE  26D9               	addwf	fsr2l,f,c
 47902   0076F0  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47903   0076F2  22DA               	addwfc	fsr2h,f,c
 47904   0076F4  EE10 F008          	lfsr	1,8
 47905   0076F8  500D               	movf	i2canFillRxFifo@m^0,w,c
 47906   0076FA  26E1               	addwf	fsr1l,f,c
 47907   0076FC  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47908   0076FE  22E2               	addwfc	fsr1h,f,c
 47909   007700  CFDF FFE7          	movff	indf2,indf1
 47910                           
 47911                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 47912   007704  EE20 F005          	lfsr	2,5
 47913   007708  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47914   00770A  26D9               	addwf	fsr2l,f,c
 47915   00770C  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47916   00770E  22DA               	addwfc	fsr2h,f,c
 47917   007710  50DF               	movf	indf2,w,c
 47918   007712  0B0F               	andlw	15
 47919   007714  C00D  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 47920   007718  C00E  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 47921   00771C  6EDF               	movwf	indf2,c
 47922   00771E                     i2l15646:
 47923                           
 47924                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 47925   00771E  AE77               	btfss	119,7,c	;volatile
 47926   007720  D004               	goto	i2l15652
 47927                           
 47928                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 47929   007722  0101               	movlb	1	; () banked
 47930   007724  4B6C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 47931   007726  2B6D               	incf	(_canDiagnostics+3)& (0+255),f,b
 47932                           
 47933                           ; BSR set to: 1
 47934                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 47935   007728  9E77               	bcf	119,7,c	;volatile
 47936   00772A                     i2l15652:
 47937                           
 47938                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 47939   00772A  C00F  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 47940   00772E  C010  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 47941   007732  0E7F               	movlw	127
 47942   007734  16DF               	andwf	indf2,f,c
 47943                           
 47944                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 47945   007736  9077               	bcf	119,0,c	;volatile
 47946   007738                     i2l15656:
 47947                           
 47948                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47949   007738  AE71               	btfss	113,7,c	;volatile
 47950   00773A  0012               	return	
 47951   00773C  D74B               	goto	i2l15618
 47952   00773E                     __end_ofi2_canFillRxFifo:
 47953                           	callstack 0
 47954                           
 47955 ;; *************** function i2_updateModuleErrorStatus *****************
 47956 ;; Defined at:
 47957 ;;		line 617 in file "../../VLCBlib_PIC/mns.c"
 47958 ;; Parameters:    Size  Location     Type
 47959 ;;		None
 47960 ;; Auto vars:     Size  Location     Type
 47961 ;;		None
 47962 ;; Return value:  Size  Location     Type
 47963 ;;                  1    wreg      void 
 47964 ;; Registers used:
 47965 ;;		wreg, status,2, status,0
 47966 ;; Tracked objects:
 47967 ;;		On entry : 0/0
 47968 ;;		On exit  : 0/0
 47969 ;;		Unchanged: 0/0
 47970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47975 ;;Total ram usage:        0 bytes
 47976 ;; Hardware stack levels used: 1
 47977 ;; This function calls:
 47978 ;;		Nothing
 47979 ;; This function is called by:
 47980 ;;		i2_checkTxFifo
 47981 ;;		i2_checkCANTimeout
 47982 ;;		i2_canTxError
 47983 ;;		i2_canFillRxFifo
 47984 ;; This function uses a non-reentrant model
 47985 ;;
 47986                           
 47987                           	psect	text223
 47988   00C7F6                     __ptext223:
 47989                           	callstack 0
 47990   00C7F6                     i2_updateModuleErrorStatus:
 47991                           	callstack 3
 47992                           
 47993                           ;../../VLCBlib_PIC/mns.c: 618:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 47994                           
 47995                           ;incstack = 0
 47996   00C7F6  0101               	movlb	1	; () banked
 47997   00C7F8  2992               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 47998   00C7FA  B4D8               	btfsc	status,2,c
 47999   00C7FC  0012               	return	
 48000                           
 48001                           ; BSR set to: 1
 48002                           ;../../VLCBlib_PIC/mns.c: 619:         mnsDiagnostics[0x01].asBytes.lo++;
 48003   00C7FE  2B92               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 48004                           
 48005                           ; BSR set to: 1
 48006   00C800  0012               	return		;funcret
 48007   00C802                     __end_ofi2_updateModuleErrorStatus:
 48008                           	callstack 0
 48009                           
 48010 ;; *************** function i2_getNextWriteMessage *****************
 48011 ;; Defined at:
 48012 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 48013 ;; Parameters:    Size  Location     Type
 48014 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 48015 ;;		 -> rxQueue(5), 
 48016 ;; Auto vars:     Size  Location     Type
 48017 ;;  wr              1   11[COMRAM] unsigned char 
 48018 ;; Return value:  Size  Location     Type
 48019 ;;                  2    0[COMRAM] PTR struct Message
 48020 ;; Registers used:
 48021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48022 ;; Tracked objects:
 48023 ;;		On entry : 0/0
 48024 ;;		On exit  : 0/0
 48025 ;;		Unchanged: 0/0
 48026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48029 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48030 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48031 ;;Total ram usage:       12 bytes
 48032 ;; Hardware stack levels used: 1
 48033 ;; This function calls:
 48034 ;;		Nothing
 48035 ;; This function is called by:
 48036 ;;		i2_checkTxFifo
 48037 ;;		i2_canFillRxFifo
 48038 ;; This function uses a non-reentrant model
 48039 ;;
 48040                           
 48041                           	psect	text224
 48042   008FD8                     __ptext224:
 48043                           	callstack 0
 48044   008FD8                     i2_getNextWriteMessage:
 48045                           	callstack 3
 48046                           
 48047                           ; BSR set to: 1
 48048                           ;incstack = 0
 48049   008FD8  5001               	movf	i2getNextWriteMessage@q^0,w,c
 48050   008FDA  6ED9               	movwf	fsr2l,c
 48051   008FDC  6ADA               	clrf	fsr2h,c
 48052   008FDE  0E02               	movlw	2
 48053   008FE0  26D9               	addwf	fsr2l,f,c
 48054   008FE2  50DF               	movf	indf2,w,c
 48055   008FE4  6E03               	movwf	??i2_getNextWriteMessage^0,c
 48056   008FE6  6A04               	clrf	(??i2_getNextWriteMessage+1)^0,c
 48057   008FE8  5001               	movf	i2getNextWriteMessage@q^0,w,c
 48058   008FEA  6ED9               	movwf	fsr2l,c
 48059   008FEC  6ADA               	clrf	fsr2h,c
 48060   008FEE  0E04               	movlw	4
 48061   008FF0  26D9               	addwf	fsr2l,f,c
 48062   008FF2  50DF               	movf	indf2,w,c
 48063   008FF4  6E05               	movwf	(??i2_getNextWriteMessage+2)^0,c
 48064   008FF6  0EFF               	movlw	255
 48065   008FF8  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 48066   008FFA  6E06               	movwf	(??i2_getNextWriteMessage+3)^0,c
 48067   008FFC  6A07               	clrf	(??i2_getNextWriteMessage+4)^0,c
 48068   008FFE  0EFF               	movlw	255
 48069   009000  2207               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 48070   009002  5001               	movf	i2getNextWriteMessage@q^0,w,c
 48071   009004  6ED9               	movwf	fsr2l,c
 48072   009006  6ADA               	clrf	fsr2h,c
 48073   009008  0E03               	movlw	3
 48074   00900A  26D9               	addwf	fsr2l,f,c
 48075   00900C  50DF               	movf	indf2,w,c
 48076   00900E  6E08               	movwf	(??i2_getNextWriteMessage+5)^0,c
 48077   009010  6A09               	clrf	(??i2_getNextWriteMessage+6)^0,c
 48078   009012  0E01               	movlw	1
 48079   009014  2608               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 48080   009016  0E00               	movlw	0
 48081   009018  2209               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 48082   00901A  5006               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 48083   00901C  1408               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 48084   00901E  6E0A               	movwf	(??i2_getNextWriteMessage+7)^0,c
 48085   009020  5007               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 48086   009022  1409               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 48087   009024  6E0B               	movwf	(??i2_getNextWriteMessage+8)^0,c
 48088   009026  5003               	movf	??i2_getNextWriteMessage^0,w,c
 48089   009028  180A               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 48090   00902A  E109               	bnz	i2l12980
 48091   00902C  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 48092   00902E  180B               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 48093   009030  A4D8               	btfss	status,2,c
 48094   009032  D005               	goto	i2l12980
 48095   009034  0E00               	movlw	0
 48096   009036  6E01               	movwf	?i2_getNextWriteMessage^0,c
 48097   009038  0E00               	movlw	0
 48098   00903A  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 48099   00903C  0012               	return	
 48100   00903E                     i2l12980:
 48101   00903E  5001               	movf	i2getNextWriteMessage@q^0,w,c
 48102   009040  6ED9               	movwf	fsr2l,c
 48103   009042  6ADA               	clrf	fsr2h,c
 48104   009044  0E03               	movlw	3
 48105   009046  26D9               	addwf	fsr2l,f,c
 48106   009048  50DF               	movf	indf2,w,c
 48107   00904A  6E0C               	movwf	i2getNextWriteMessage@wr^0,c
 48108   00904C  5001               	movf	i2getNextWriteMessage@q^0,w,c
 48109   00904E  6ED9               	movwf	fsr2l,c
 48110   009050  6ADA               	clrf	fsr2h,c
 48111   009052  0E03               	movlw	3
 48112   009054  26D9               	addwf	fsr2l,f,c
 48113   009056  2ADF               	incf	indf2,f,c
 48114   009058  5001               	movf	i2getNextWriteMessage@q^0,w,c
 48115   00905A  6ED9               	movwf	fsr2l,c
 48116   00905C  6ADA               	clrf	fsr2h,c
 48117   00905E  0E04               	movlw	4
 48118   009060  26D9               	addwf	fsr2l,f,c
 48119   009062  5001               	movf	i2getNextWriteMessage@q^0,w,c
 48120   009064  6EE1               	movwf	fsr1l,c
 48121   009066  6AE2               	clrf	fsr1h,c
 48122   009068  0E03               	movlw	3
 48123   00906A  26E1               	addwf	fsr1l,f,c
 48124   00906C  50DE               	movf	postinc2,w,c
 48125   00906E  5CE6               	subwf	postinc1,w,c
 48126   009070  A0D8               	btfss	status,0,c
 48127   009072  D006               	goto	i2l12986
 48128   009074  5001               	movf	i2getNextWriteMessage@q^0,w,c
 48129   009076  6ED9               	movwf	fsr2l,c
 48130   009078  6ADA               	clrf	fsr2h,c
 48131   00907A  0E03               	movlw	3
 48132   00907C  26D9               	addwf	fsr2l,f,c
 48133   00907E  6ADF               	clrf	indf2,c
 48134   009080                     i2l12986:
 48135   009080  500C               	movf	i2getNextWriteMessage@wr^0,w,c
 48136   009082  0D09               	mullw	9
 48137   009084  CFF3 F003          	movff	prodl,??i2_getNextWriteMessage
 48138   009088  CFF4 F004          	movff	prodh,??i2_getNextWriteMessage+1
 48139   00908C  5001               	movf	i2getNextWriteMessage@q^0,w,c
 48140   00908E  6ED9               	movwf	fsr2l,c
 48141   009090  6ADA               	clrf	fsr2h,c
 48142   009092  CFDE F005          	movff	postinc2,??i2_getNextWriteMessage+2
 48143   009096  CFDD F006          	movff	postdec2,??i2_getNextWriteMessage+3
 48144   00909A  5003               	movf	??i2_getNextWriteMessage^0,w,c
 48145   00909C  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 48146   00909E  6E01               	movwf	?i2_getNextWriteMessage^0,c
 48147   0090A0  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 48148   0090A2  2006               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 48149   0090A4  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 48150   0090A6  0012               	return		;funcret
 48151   0090A8                     __end_ofi2_getNextWriteMessage:
 48152                           	callstack 0
 48153                           
 48154 ;; *************** function i2_getBufferPointer *****************
 48155 ;; Defined at:
 48156 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 48157 ;; Parameters:    Size  Location     Type
 48158 ;;  b               1    wreg     unsigned char 
 48159 ;; Auto vars:     Size  Location     Type
 48160 ;;  b               1    2[COMRAM] unsigned char 
 48161 ;; Return value:  Size  Location     Type
 48162 ;;                  2    0[COMRAM] PTR unsigned char 
 48163 ;; Registers used:
 48164 ;;		wreg, status,2, status,0
 48165 ;; Tracked objects:
 48166 ;;		On entry : 0/0
 48167 ;;		On exit  : 0/0
 48168 ;;		Unchanged: 0/0
 48169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48173 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48174 ;;Total ram usage:        3 bytes
 48175 ;; Hardware stack levels used: 1
 48176 ;; This function calls:
 48177 ;;		Nothing
 48178 ;; This function is called by:
 48179 ;;		i2_canFillRxFifo
 48180 ;; This function uses a non-reentrant model
 48181 ;;
 48182                           
 48183                           	psect	text225
 48184   00A56E                     __ptext225:
 48185                           	callstack 0
 48186   00A56E                     i2_getBufferPointer:
 48187                           	callstack 3
 48188                           
 48189                           ;incstack = 0
 48190                           ;i2getBufferPointer@b stored from wreg
 48191   00A56E  6E03               	movwf	i2getBufferPointer@b^0,c
 48192                           
 48193                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 48194   00A570  D02D               	goto	i2l14102
 48195   00A572                     i2l14064:
 48196                           
 48197                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 48198   00A572  0E60               	movlw	96
 48199   00A574  6E01               	movwf	?i2_getBufferPointer^0,c
 48200   00A576  0E0F               	movlw	15
 48201   00A578  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 48202   00A57A  0012               	return	
 48203   00A57C                     i2l14068:
 48204                           
 48205                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 48206   00A57C  0E30               	movlw	48
 48207   00A57E  6E01               	movwf	?i2_getBufferPointer^0,c
 48208   00A580  0E0F               	movlw	15
 48209   00A582  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 48210   00A584  0012               	return	
 48211   00A586                     i2l14072:
 48212                           
 48213                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 48214   00A586  0E80               	movlw	128
 48215   00A588  6E01               	movwf	?i2_getBufferPointer^0,c
 48216   00A58A  0E0E               	movlw	14
 48217   00A58C  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 48218   00A58E  0012               	return	
 48219   00A590                     i2l14076:
 48220                           
 48221                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 48222   00A590  0E90               	movlw	144
 48223   00A592  6E01               	movwf	?i2_getBufferPointer^0,c
 48224   00A594  0E0E               	movlw	14
 48225   00A596  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 48226   00A598  0012               	return	
 48227   00A59A                     i2l14080:
 48228                           
 48229                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 48230   00A59A  0EA0               	movlw	160
 48231   00A59C  6E01               	movwf	?i2_getBufferPointer^0,c
 48232   00A59E  0E0E               	movlw	14
 48233   00A5A0  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 48234   00A5A2  0012               	return	
 48235   00A5A4                     i2l14084:
 48236                           
 48237                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 48238   00A5A4  0EB0               	movlw	176
 48239   00A5A6  6E01               	movwf	?i2_getBufferPointer^0,c
 48240   00A5A8  0E0E               	movlw	14
 48241   00A5AA  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 48242   00A5AC  0012               	return	
 48243   00A5AE                     i2l14088:
 48244                           
 48245                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 48246   00A5AE  0EC0               	movlw	192
 48247   00A5B0  6E01               	movwf	?i2_getBufferPointer^0,c
 48248   00A5B2  0E0E               	movlw	14
 48249   00A5B4  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 48250   00A5B6  0012               	return	
 48251   00A5B8                     i2l14092:
 48252                           
 48253                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 48254   00A5B8  0ED0               	movlw	208
 48255   00A5BA  6E01               	movwf	?i2_getBufferPointer^0,c
 48256   00A5BC  0E0E               	movlw	14
 48257   00A5BE  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 48258   00A5C0  0012               	return	
 48259   00A5C2                     i2l14096:
 48260                           
 48261                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 48262   00A5C2  0E00               	movlw	0
 48263   00A5C4  6E01               	movwf	?i2_getBufferPointer^0,c
 48264   00A5C6  0E00               	movlw	0
 48265   00A5C8  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 48266   00A5CA  0012               	return	
 48267   00A5CC                     i2l14102:
 48268   00A5CC  5003               	movf	i2getBufferPointer@b^0,w,c
 48269                           
 48270                           ; Switch size 1, requested type "simple"
 48271                           ; Number of cases is 8, Range of values is 0 to 7
 48272                           ; switch strategies available:
 48273                           ; Name         Instructions Cycles
 48274                           ; simple_byte           25    13 (average)
 48275                           ;	Chosen strategy is simple_byte
 48276   00A5CE  0A00               	xorlw	0	; case 0
 48277   00A5D0  B4D8               	btfsc	status,2,c
 48278   00A5D2  D7CF               	goto	i2l14064
 48279   00A5D4  0A01               	xorlw	1	; case 1
 48280   00A5D6  B4D8               	btfsc	status,2,c
 48281   00A5D8  D7D1               	goto	i2l14068
 48282   00A5DA  0A03               	xorlw	3	; case 2
 48283   00A5DC  B4D8               	btfsc	status,2,c
 48284   00A5DE  D7D3               	goto	i2l14072
 48285   00A5E0  0A01               	xorlw	1	; case 3
 48286   00A5E2  B4D8               	btfsc	status,2,c
 48287   00A5E4  D7D5               	goto	i2l14076
 48288   00A5E6  0A07               	xorlw	7	; case 4
 48289   00A5E8  B4D8               	btfsc	status,2,c
 48290   00A5EA  D7D7               	goto	i2l14080
 48291   00A5EC  0A01               	xorlw	1	; case 5
 48292   00A5EE  B4D8               	btfsc	status,2,c
 48293   00A5F0  D7D9               	goto	i2l14084
 48294   00A5F2  0A03               	xorlw	3	; case 6
 48295   00A5F4  B4D8               	btfsc	status,2,c
 48296   00A5F6  D7DB               	goto	i2l14088
 48297   00A5F8  0A01               	xorlw	1	; case 7
 48298   00A5FA  B4D8               	btfsc	status,2,c
 48299   00A5FC  D7DD               	goto	i2l14092
 48300   00A5FE  D7E1               	goto	i2l14096
 48301   00A600                     __end_ofi2_getBufferPointer:
 48302                           	callstack 0
 48303                           
 48304 ;; *************** function _APP_highIsr *****************
 48305 ;; Defined at:
 48306 ;;		line 712 in file "../main.c"
 48307 ;; Parameters:    Size  Location     Type
 48308 ;;		None
 48309 ;; Auto vars:     Size  Location     Type
 48310 ;;		None
 48311 ;; Return value:  Size  Location     Type
 48312 ;;                  1    wreg      void 
 48313 ;; Registers used:
 48314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48315 ;; Tracked objects:
 48316 ;;		On entry : 0/0
 48317 ;;		On exit  : 0/0
 48318 ;;		Unchanged: 0/0
 48319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48324 ;;Total ram usage:        0 bytes
 48325 ;; Hardware stack levels used: 1
 48326 ;; Hardware stack levels required when called: 2
 48327 ;; This function calls:
 48328 ;;		_timer1DoneInterruptHandler
 48329 ;;		_timer3DoneInterruptHandler
 48330 ;; This function is called by:
 48331 ;;		_highIsr
 48332 ;; This function uses a non-reentrant model
 48333 ;;
 48334                           
 48335                           	psect	text226
 48336   00C75E                     __ptext226:
 48337                           	callstack 0
 48338   00C75E                     _APP_highIsr:
 48339                           	callstack 3
 48340                           
 48341                           ;../main.c: 715:     if (PIR1bits.TMR1IF) {
 48342                           
 48343                           ;incstack = 0
 48344   00C75E  A09E               	btfss	158,0,c	;volatile
 48345   00C760  D003               	goto	i2l16026
 48346                           
 48347                           ;../main.c: 716:         timer1DoneInterruptHandler();
 48348   00C762  EC35  F063         	call	_timer1DoneInterruptHandler	;wreg free
 48349                           
 48350                           ;../main.c: 717:         PIR1bits.TMR1IF = 0;
 48351   00C766  909E               	bcf	158,0,c	;volatile
 48352   00C768                     i2l16026:
 48353                           
 48354                           ;../main.c: 719:     if (PIR2bits.TMR3IF) {
 48355   00C768  A2A1               	btfss	161,1,c	;volatile
 48356   00C76A  0012               	return	
 48357                           
 48358                           ;../main.c: 720:         timer3DoneInterruptHandler();
 48359   00C76C  ECE4  F062         	call	_timer3DoneInterruptHandler	;wreg free
 48360                           
 48361                           ;../main.c: 721:         PIR2bits.TMR3IF = 0;
 48362   00C770  92A1               	bcf	161,1,c	;volatile
 48363   00C772  0012               	return		;funcret
 48364   00C774                     __end_of_APP_highIsr:
 48365                           	callstack 0
 48366                           
 48367 ;; *************** function _timer3DoneInterruptHandler *****************
 48368 ;; Defined at:
 48369 ;;		line 248 in file "../servo.c"
 48370 ;; Parameters:    Size  Location     Type
 48371 ;;		None
 48372 ;; Auto vars:     Size  Location     Type
 48373 ;;		None
 48374 ;; Return value:  Size  Location     Type
 48375 ;;                  1    wreg      void 
 48376 ;; Registers used:
 48377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48378 ;; Tracked objects:
 48379 ;;		On entry : 0/0
 48380 ;;		On exit  : 0/0
 48381 ;;		Unchanged: 0/0
 48382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48387 ;;Total ram usage:        0 bytes
 48388 ;; Hardware stack levels used: 1
 48389 ;; Hardware stack levels required when called: 1
 48390 ;; This function calls:
 48391 ;;		i2_getNV
 48392 ;;		i2_setOutputPin
 48393 ;; This function is called by:
 48394 ;;		_APP_highIsr
 48395 ;; This function uses a non-reentrant model
 48396 ;;
 48397                           
 48398                           	psect	text227
 48399   00C5C8                     __ptext227:
 48400                           	callstack 0
 48401   00C5C8                     _timer3DoneInterruptHandler:
 48402                           	callstack 3
 48403                           
 48404                           ;../servo.c: 249:     T3CONbits.TMR3ON = 0;
 48405                           
 48406                           ;incstack = 0
 48407   00C5C8  90B1               	bcf	177,0,c	;volatile
 48408                           
 48409                           ;../servo.c: 250:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 48410   00C5CA  0100               	movlb	0	; () banked
 48411   00C5CC  51C9               	movf	_servoInBlock& (0+255),w,b
 48412   00C5CE  0D07               	mullw	7
 48413   00C5D0  50F3               	movf	243,w,c
 48414   00C5D2  0F49               	addlw	73
 48415   00C5D4  ECCA  F05F         	call	i2_getNV
 48416   00C5D8  5001               	movf	?i2_getNV^0,w,c
 48417   00C5DA  0B20               	andlw	32
 48418   00C5DC  6E05               	movwf	i2setOutputPin@state^0,c
 48419   00C5DE  0100               	movlb	0	; () banked
 48420   00C5E0  51C9               	movf	_servoInBlock& (0+255),w,b
 48421   00C5E2  0F08               	addlw	8
 48422   00C5E4  EC5A  F039         	call	i2_setOutputPin
 48423   00C5E8  0012               	return		;funcret
 48424   00C5EA                     __end_of_timer3DoneInterruptHandler:
 48425                           	callstack 0
 48426                           
 48427 ;; *************** function _timer1DoneInterruptHandler *****************
 48428 ;; Defined at:
 48429 ;;		line 243 in file "../servo.c"
 48430 ;; Parameters:    Size  Location     Type
 48431 ;;		None
 48432 ;; Auto vars:     Size  Location     Type
 48433 ;;		None
 48434 ;; Return value:  Size  Location     Type
 48435 ;;                  1    wreg      void 
 48436 ;; Registers used:
 48437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48438 ;; Tracked objects:
 48439 ;;		On entry : 0/0
 48440 ;;		On exit  : 0/0
 48441 ;;		Unchanged: 0/0
 48442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48447 ;;Total ram usage:        0 bytes
 48448 ;; Hardware stack levels used: 1
 48449 ;; Hardware stack levels required when called: 1
 48450 ;; This function calls:
 48451 ;;		i2_getNV
 48452 ;;		i2_setOutputPin
 48453 ;; This function is called by:
 48454 ;;		_APP_highIsr
 48455 ;; This function uses a non-reentrant model
 48456 ;;
 48457                           
 48458                           	psect	text228
 48459   00C66A                     __ptext228:
 48460                           	callstack 0
 48461   00C66A                     _timer1DoneInterruptHandler:
 48462                           	callstack 3
 48463                           
 48464                           ;../servo.c: 244:     T1CONbits.TMR1ON = 0;
 48465                           
 48466                           ;incstack = 0
 48467   00C66A  90CD               	bcf	205,0,c	;volatile
 48468                           
 48469                           ;../servo.c: 245:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 48470   00C66C  0100               	movlb	0	; () banked
 48471   00C66E  51C9               	movf	_servoInBlock& (0+255),w,b
 48472   00C670  0D07               	mullw	7
 48473   00C672  50F3               	movf	243,w,c
 48474   00C674  0F11               	addlw	17
 48475   00C676  ECCA  F05F         	call	i2_getNV
 48476   00C67A  5001               	movf	?i2_getNV^0,w,c
 48477   00C67C  0B20               	andlw	32
 48478   00C67E  6E05               	movwf	i2setOutputPin@state^0,c
 48479   00C680  0100               	movlb	0	; () banked
 48480   00C682  51C9               	movf	_servoInBlock& (0+255),w,b
 48481   00C684  EC5A  F039         	call	i2_setOutputPin
 48482   00C688  0012               	return		;funcret
 48483   00C68A                     __end_of_timer1DoneInterruptHandler:
 48484                           	callstack 0
 48485                           
 48486 ;; *************** function i2_setOutputPin *****************
 48487 ;; Defined at:
 48488 ;;		line 256 in file "../digitalOut.c"
 48489 ;; Parameters:    Size  Location     Type
 48490 ;;  io              1    wreg     unsigned char 
 48491 ;;  state           1    4[COMRAM] enum E12766
 48492 ;; Auto vars:     Size  Location     Type
 48493 ;;  io              1    7[COMRAM] unsigned char 
 48494 ;; Return value:  Size  Location     Type
 48495 ;;                  1    wreg      void 
 48496 ;; Registers used:
 48497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 48498 ;; Tracked objects:
 48499 ;;		On entry : 0/0
 48500 ;;		On exit  : 0/0
 48501 ;;		Unchanged: 0/0
 48502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48503 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48506 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48507 ;;Total ram usage:        4 bytes
 48508 ;; Hardware stack levels used: 1
 48509 ;; This function calls:
 48510 ;;		Nothing
 48511 ;; This function is called by:
 48512 ;;		_timer1DoneInterruptHandler
 48513 ;;		_timer3DoneInterruptHandler
 48514 ;; This function uses a non-reentrant model
 48515 ;;
 48516                           
 48517                           	psect	text229
 48518   0072B4                     __ptext229:
 48519                           	callstack 0
 48520   0072B4                     i2_setOutputPin:
 48521                           	callstack 3
 48522                           
 48523                           ;incstack = 0
 48524                           ;i2setOutputPin@io stored from wreg
 48525   0072B4  6E08               	movwf	i2setOutputPin@io^0,c
 48526                           
 48527                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 48528   0072B6  D0BA               	goto	i2l14002
 48529   0072B8                     i2l13982:
 48530                           
 48531                           ;../digitalOut.c: 259:             if (state) {
 48532   0072B8  5005               	movf	i2setOutputPin@state^0,w,c
 48533   0072BA  B4D8               	btfsc	status,2,c
 48534   0072BC  D01D               	goto	i2l13986
 48535                           
 48536                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 48537   0072BE  5008               	movf	i2setOutputPin@io^0,w,c
 48538   0072C0  0D04               	mullw	4
 48539   0072C2  0E02               	movlw	2
 48540   0072C4  26F3               	addwf	243,f,c
 48541   0072C6  0E00               	movlw	0
 48542   0072C8  22F4               	addwfc	244,f,c
 48543   0072CA  0E29               	movlw	low _configs
 48544   0072CC  24F3               	addwf	243,w,c
 48545   0072CE  6EF6               	movwf	tblptrl,c
 48546   0072D0  0EEE               	movlw	high _configs
 48547   0072D2  20F4               	addwfc	244,w,c
 48548   0072D4  6EF7               	movwf	tblptrh,c
 48549   0072D6                     	if	1	;There are 3 active tblptr bytes
 48550   0072D6  6AF8               	clrf	tblptru,c
 48551   0072D8  0E00               	movlw	low (__mediumconst shr (0+16))
 48552   0072DA  22F8               	addwfc	tblptru,f,c
 48553   0072DC                     	endif
 48554   0072DC  0008               	tblrd		*
 48555   0072DE  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48556   0072E2  0E01               	movlw	1
 48557   0072E4  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48558   0072E6  2A06               	incf	??i2_setOutputPin^0,f,c
 48559   0072E8  D002               	goto	i2u1296_44
 48560   0072EA                     i2u1296_45:
 48561   0072EA  90D8               	bcf	status,0,c
 48562   0072EC  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48563   0072EE                     i2u1296_44:
 48564   0072EE  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48565   0072F0  D7FC               	goto	i2u1296_45
 48566   0072F2  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48567   0072F4  1289               	iorwf	137,f,c	;volatile
 48568                           
 48569                           ;../digitalOut.c: 262:             } else {
 48570   0072F6  0012               	return	
 48571   0072F8                     i2l13986:
 48572                           
 48573                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 48574   0072F8  5008               	movf	i2setOutputPin@io^0,w,c
 48575   0072FA  0D04               	mullw	4
 48576   0072FC  0E02               	movlw	2
 48577   0072FE  26F3               	addwf	243,f,c
 48578   007300  0E00               	movlw	0
 48579   007302  22F4               	addwfc	244,f,c
 48580   007304  0E29               	movlw	low _configs
 48581   007306  24F3               	addwf	243,w,c
 48582   007308  6EF6               	movwf	tblptrl,c
 48583   00730A  0EEE               	movlw	high _configs
 48584   00730C  20F4               	addwfc	244,w,c
 48585   00730E  6EF7               	movwf	tblptrh,c
 48586   007310                     	if	1	;There are 3 active tblptr bytes
 48587   007310  6AF8               	clrf	tblptru,c
 48588   007312  0E00               	movlw	low (__mediumconst shr (0+16))
 48589   007314  22F8               	addwfc	tblptru,f,c
 48590   007316                     	endif
 48591   007316  0008               	tblrd		*
 48592   007318  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48593   00731C  0E01               	movlw	1
 48594   00731E  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48595   007320  2A06               	incf	??i2_setOutputPin^0,f,c
 48596   007322  D002               	goto	i2u1297_44
 48597   007324                     i2u1297_45:
 48598   007324  90D8               	bcf	status,0,c
 48599   007326  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48600   007328                     i2u1297_44:
 48601   007328  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48602   00732A  D7FC               	goto	i2u1297_45
 48603   00732C  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48604   00732E  0AFF               	xorlw	255
 48605   007330  1689               	andwf	137,f,c	;volatile
 48606   007332  0012               	return	
 48607   007334                     i2l13988:
 48608                           
 48609                           ;../digitalOut.c: 268:             if (state) {
 48610   007334  5005               	movf	i2setOutputPin@state^0,w,c
 48611   007336  B4D8               	btfsc	status,2,c
 48612   007338  D01D               	goto	i2l13992
 48613                           
 48614                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 48615   00733A  5008               	movf	i2setOutputPin@io^0,w,c
 48616   00733C  0D04               	mullw	4
 48617   00733E  0E02               	movlw	2
 48618   007340  26F3               	addwf	243,f,c
 48619   007342  0E00               	movlw	0
 48620   007344  22F4               	addwfc	244,f,c
 48621   007346  0E29               	movlw	low _configs
 48622   007348  24F3               	addwf	243,w,c
 48623   00734A  6EF6               	movwf	tblptrl,c
 48624   00734C  0EEE               	movlw	high _configs
 48625   00734E  20F4               	addwfc	244,w,c
 48626   007350  6EF7               	movwf	tblptrh,c
 48627   007352                     	if	1	;There are 3 active tblptr bytes
 48628   007352  6AF8               	clrf	tblptru,c
 48629   007354  0E00               	movlw	low (__mediumconst shr (0+16))
 48630   007356  22F8               	addwfc	tblptru,f,c
 48631   007358                     	endif
 48632   007358  0008               	tblrd		*
 48633   00735A  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48634   00735E  0E01               	movlw	1
 48635   007360  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48636   007362  2A06               	incf	??i2_setOutputPin^0,f,c
 48637   007364  D002               	goto	i2u1299_44
 48638   007366                     i2u1299_45:
 48639   007366  90D8               	bcf	status,0,c
 48640   007368  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48641   00736A                     i2u1299_44:
 48642   00736A  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48643   00736C  D7FC               	goto	i2u1299_45
 48644   00736E  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48645   007370  128A               	iorwf	138,f,c	;volatile
 48646                           
 48647                           ;../digitalOut.c: 271:             } else {
 48648   007372  0012               	return	
 48649   007374                     i2l13992:
 48650                           
 48651                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 48652   007374  5008               	movf	i2setOutputPin@io^0,w,c
 48653   007376  0D04               	mullw	4
 48654   007378  0E02               	movlw	2
 48655   00737A  26F3               	addwf	243,f,c
 48656   00737C  0E00               	movlw	0
 48657   00737E  22F4               	addwfc	244,f,c
 48658   007380  0E29               	movlw	low _configs
 48659   007382  24F3               	addwf	243,w,c
 48660   007384  6EF6               	movwf	tblptrl,c
 48661   007386  0EEE               	movlw	high _configs
 48662   007388  20F4               	addwfc	244,w,c
 48663   00738A  6EF7               	movwf	tblptrh,c
 48664   00738C                     	if	1	;There are 3 active tblptr bytes
 48665   00738C  6AF8               	clrf	tblptru,c
 48666   00738E  0E00               	movlw	low (__mediumconst shr (0+16))
 48667   007390  22F8               	addwfc	tblptru,f,c
 48668   007392                     	endif
 48669   007392  0008               	tblrd		*
 48670   007394  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48671   007398  0E01               	movlw	1
 48672   00739A  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48673   00739C  2A06               	incf	??i2_setOutputPin^0,f,c
 48674   00739E  D002               	goto	i2u1300_44
 48675   0073A0                     i2u1300_45:
 48676   0073A0  90D8               	bcf	status,0,c
 48677   0073A2  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48678   0073A4                     i2u1300_44:
 48679   0073A4  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48680   0073A6  D7FC               	goto	i2u1300_45
 48681   0073A8  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48682   0073AA  0AFF               	xorlw	255
 48683   0073AC  168A               	andwf	138,f,c	;volatile
 48684   0073AE  0012               	return	
 48685   0073B0                     i2l13994:
 48686                           
 48687                           ;../digitalOut.c: 277:             if (state) {
 48688   0073B0  5005               	movf	i2setOutputPin@state^0,w,c
 48689   0073B2  B4D8               	btfsc	status,2,c
 48690   0073B4  D01D               	goto	i2l13998
 48691                           
 48692                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 48693   0073B6  5008               	movf	i2setOutputPin@io^0,w,c
 48694   0073B8  0D04               	mullw	4
 48695   0073BA  0E02               	movlw	2
 48696   0073BC  26F3               	addwf	243,f,c
 48697   0073BE  0E00               	movlw	0
 48698   0073C0  22F4               	addwfc	244,f,c
 48699   0073C2  0E29               	movlw	low _configs
 48700   0073C4  24F3               	addwf	243,w,c
 48701   0073C6  6EF6               	movwf	tblptrl,c
 48702   0073C8  0EEE               	movlw	high _configs
 48703   0073CA  20F4               	addwfc	244,w,c
 48704   0073CC  6EF7               	movwf	tblptrh,c
 48705   0073CE                     	if	1	;There are 3 active tblptr bytes
 48706   0073CE  6AF8               	clrf	tblptru,c
 48707   0073D0  0E00               	movlw	low (__mediumconst shr (0+16))
 48708   0073D2  22F8               	addwfc	tblptru,f,c
 48709   0073D4                     	endif
 48710   0073D4  0008               	tblrd		*
 48711   0073D6  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48712   0073DA  0E01               	movlw	1
 48713   0073DC  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48714   0073DE  2A06               	incf	??i2_setOutputPin^0,f,c
 48715   0073E0  D002               	goto	i2u1302_44
 48716   0073E2                     i2u1302_45:
 48717   0073E2  90D8               	bcf	status,0,c
 48718   0073E4  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48719   0073E6                     i2u1302_44:
 48720   0073E6  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48721   0073E8  D7FC               	goto	i2u1302_45
 48722   0073EA  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48723   0073EC  128B               	iorwf	139,f,c	;volatile
 48724                           
 48725                           ;../digitalOut.c: 280:             } else {
 48726   0073EE  0012               	return	
 48727   0073F0                     i2l13998:
 48728                           
 48729                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 48730   0073F0  5008               	movf	i2setOutputPin@io^0,w,c
 48731   0073F2  0D04               	mullw	4
 48732   0073F4  0E02               	movlw	2
 48733   0073F6  26F3               	addwf	243,f,c
 48734   0073F8  0E00               	movlw	0
 48735   0073FA  22F4               	addwfc	244,f,c
 48736   0073FC  0E29               	movlw	low _configs
 48737   0073FE  24F3               	addwf	243,w,c
 48738   007400  6EF6               	movwf	tblptrl,c
 48739   007402  0EEE               	movlw	high _configs
 48740   007404  20F4               	addwfc	244,w,c
 48741   007406  6EF7               	movwf	tblptrh,c
 48742   007408                     	if	1	;There are 3 active tblptr bytes
 48743   007408  6AF8               	clrf	tblptru,c
 48744   00740A  0E00               	movlw	low (__mediumconst shr (0+16))
 48745   00740C  22F8               	addwfc	tblptru,f,c
 48746   00740E                     	endif
 48747   00740E  0008               	tblrd		*
 48748   007410  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48749   007414  0E01               	movlw	1
 48750   007416  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48751   007418  2A06               	incf	??i2_setOutputPin^0,f,c
 48752   00741A  D002               	goto	i2u1303_44
 48753   00741C                     i2u1303_45:
 48754   00741C  90D8               	bcf	status,0,c
 48755   00741E  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48756   007420                     i2u1303_44:
 48757   007420  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48758   007422  D7FC               	goto	i2u1303_45
 48759   007424  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48760   007426  0AFF               	xorlw	255
 48761   007428  168B               	andwf	139,f,c	;volatile
 48762   00742A  0012               	return	
 48763   00742C                     i2l14002:
 48764   00742C  5008               	movf	i2setOutputPin@io^0,w,c
 48765   00742E  0D04               	mullw	4
 48766   007430  0E01               	movlw	1
 48767   007432  26F3               	addwf	243,f,c
 48768   007434  0E00               	movlw	0
 48769   007436  22F4               	addwfc	244,f,c
 48770   007438  0E29               	movlw	low _configs
 48771   00743A  24F3               	addwf	243,w,c
 48772   00743C  6EF6               	movwf	tblptrl,c
 48773   00743E  0EEE               	movlw	high _configs
 48774   007440  20F4               	addwfc	244,w,c
 48775   007442  6EF7               	movwf	tblptrh,c
 48776   007444                     	if	1	;There are 3 active tblptr bytes
 48777   007444  6AF8               	clrf	tblptru,c
 48778   007446  0E00               	movlw	low (__mediumconst shr (0+16))
 48779   007448  22F8               	addwfc	tblptru,f,c
 48780   00744A                     	endif
 48781   00744A  0008               	tblrd		*
 48782   00744C  50F5               	movf	tablat,w,c
 48783                           
 48784                           ; Switch size 1, requested type "simple"
 48785                           ; Number of cases is 3, Range of values is 65 to 67
 48786                           ; switch strategies available:
 48787                           ; Name         Instructions Cycles
 48788                           ; simple_byte           10     6 (average)
 48789                           ;	Chosen strategy is simple_byte
 48790   00744E  0A41               	xorlw	65	; case 65
 48791   007450  B4D8               	btfsc	status,2,c
 48792   007452  D732               	goto	i2l13982
 48793   007454  0A03               	xorlw	3	; case 66
 48794   007456  B4D8               	btfsc	status,2,c
 48795   007458  D76D               	goto	i2l13988
 48796   00745A  0A01               	xorlw	1	; case 67
 48797   00745C  A4D8               	btfss	status,2,c
 48798   00745E  0012               	return	
 48799   007460  D7A7               	goto	i2l13994
 48800   007462                     __end_ofi2_setOutputPin:
 48801                           	callstack 0
 48802                           
 48803 ;; *************** function i2_getNV *****************
 48804 ;; Defined at:
 48805 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 48806 ;; Parameters:    Size  Location     Type
 48807 ;;  index           1    wreg     unsigned char 
 48808 ;; Auto vars:     Size  Location     Type
 48809 ;;  index           1    3[COMRAM] unsigned char 
 48810 ;; Return value:  Size  Location     Type
 48811 ;;                  2    0[COMRAM] short 
 48812 ;; Registers used:
 48813 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48814 ;; Tracked objects:
 48815 ;;		On entry : 0/0
 48816 ;;		On exit  : 0/0
 48817 ;;		Unchanged: 0/0
 48818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48823 ;;Total ram usage:        4 bytes
 48824 ;; Hardware stack levels used: 1
 48825 ;; This function calls:
 48826 ;;		Nothing
 48827 ;; This function is called by:
 48828 ;;		_timer1DoneInterruptHandler
 48829 ;;		_timer3DoneInterruptHandler
 48830 ;; This function uses a non-reentrant model
 48831 ;;
 48832                           
 48833                           	psect	text230
 48834   00BF94                     __ptext230:
 48835                           	callstack 0
 48836   00BF94                     i2_getNV:
 48837                           	callstack 3
 48838                           
 48839                           ;incstack = 0
 48840                           ;i2getNV@index stored from wreg
 48841   00BF94  6E04               	movwf	i2getNV@index^0,c
 48842                           
 48843                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 48844   00BF96  5004               	movf	i2getNV@index^0,w,c
 48845   00BF98  A4D8               	btfss	status,2,c
 48846   00BF9A  D005               	goto	i2l14010
 48847   00BF9C  0E00               	movlw	0
 48848   00BF9E  6E02               	movwf	(?i2_getNV+1)^0,c
 48849   00BFA0  0E7F               	movlw	127
 48850   00BFA2  6E01               	movwf	?i2_getNV^0,c
 48851   00BFA4  0012               	return	
 48852   00BFA6                     i2l14010:
 48853                           
 48854                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 48855   00BFA6  0E7F               	movlw	127
 48856   00BFA8  6404               	cpfsgt	i2getNV@index^0,c
 48857   00BFAA  D005               	goto	i2l14016
 48858   00BFAC  0EFF               	movlw	255
 48859   00BFAE  6E02               	movwf	(?i2_getNV+1)^0,c
 48860   00BFB0  0EF6               	movlw	246
 48861   00BFB2  6E01               	movwf	?i2_getNV^0,c
 48862   00BFB4  0012               	return	
 48863   00BFB6                     i2l14016:
 48864                           
 48865                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 48866   00BFB6  0E00               	movlw	low _nvCache
 48867   00BFB8  2404               	addwf	i2getNV@index^0,w,c
 48868   00BFBA  6ED9               	movwf	fsr2l,c
 48869   00BFBC  6ADA               	clrf	fsr2h,c
 48870   00BFBE  0E04               	movlw	high _nvCache
 48871   00BFC0  22DA               	addwfc	fsr2h,f,c
 48872   00BFC2  50DF               	movf	indf2,w,c
 48873   00BFC4  6E03               	movwf	??i2_getNV^0,c
 48874   00BFC6  5003               	movf	??i2_getNV^0,w,c
 48875   00BFC8  6E01               	movwf	?i2_getNV^0,c
 48876   00BFCA  6A02               	clrf	(?i2_getNV+1)^0,c
 48877   00BFCC  0012               	return		;funcret
 48878   00BFCE                     __end_ofi2_getNV:
 48879                           	callstack 0
 48880                           
 48881                           	psect	rparam
 48882   000000                     
 48883                           	psect	temp
 48884   000054                     btemp:
 48885                           	callstack 0
 48886   000054                     	ds	1
 48887   000000                     int$flags	set	btemp
 48888   000000                     wtemp8	set	btemp+1
 48889   000000                     ttemp5	set	btemp+1
 48890   000000                     ttemp6	set	btemp+4
 48891   000000                     ttemp7	set	btemp+8
 48892                           
 48893                           	psect	config
 48894                           
 48895                           ;Config register CONFIG1L @ 0x300000
 48896                           ;	VREG Sleep Enable bit
 48897                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 48898                           ;	LF-INTOSC Low-power Enable bit
 48899                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 48900                           ;	SOSC Power Selection and mode Configuration bits
 48901                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 48902                           ;	Extended Instruction Set
 48903                           ;	XINST = OFF, Disabled
 48904   300000                     	org	3145728
 48905   300000  15                 	db	21
 48906                           
 48907                           ;Config register CONFIG1H @ 0x300001
 48908                           ;	Oscillator
 48909                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 48910                           ;	PLL x4 Enable bit
 48911                           ;	PLLCFG = OFF, Disabled
 48912                           ;	Fail-Safe Clock Monitor
 48913                           ;	FCMEN = OFF, Disabled
 48914                           ;	Internal External Oscillator Switch Over Mode
 48915                           ;	IESO = OFF, Disabled
 48916   300001                     	org	3145729
 48917   300001  03                 	db	3
 48918                           
 48919                           ;Config register CONFIG2L @ 0x300002
 48920                           ;	Power Up Timer
 48921                           ;	PWRTEN = ON, Enabled
 48922                           ;	Brown Out Detect
 48923                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 48924                           ;	Brown-out Reset Voltage bits
 48925                           ;	BORV = 0, 3.0V
 48926                           ;	BORMV Power level
 48927                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 48928   300002                     	org	3145730
 48929   300002  66                 	db	102
 48930                           
 48931                           ;Config register CONFIG2H @ 0x300003
 48932                           ;	Watchdog Timer
 48933                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 48934                           ;	Watchdog Postscaler
 48935                           ;	WDTPS = 1048576, 1:1048576
 48936   300003                     	org	3145731
 48937   300003  50                 	db	80
 48938                           
 48939                           ; Padding undefined space
 48940   300004                     	org	3145732
 48941   300004  FF                 	db	255
 48942                           
 48943                           ;Config register CONFIG3H @ 0x300005
 48944                           ;	ECAN Mux bit
 48945                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 48946                           ;	MSSP address masking
 48947                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 48948                           ;	Master Clear Enable
 48949                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 48950   300005                     	org	3145733
 48951   300005  89                 	db	137
 48952                           
 48953                           ;Config register CONFIG4L @ 0x300006
 48954                           ;	Stack Overflow Reset
 48955                           ;	STVREN = ON, Enabled
 48956                           ;	Boot Block Size
 48957                           ;	BBSIZ = BB1K, 1K word Boot Block size
 48958                           ;	Background Debugger
 48959                           ;	DEBUG = 0x1, unprogrammed default
 48960   300006                     	org	3145734
 48961   300006  81                 	db	129
 48962                           
 48963                           ; Padding undefined space
 48964   300007                     	org	3145735
 48965   300007  FF                 	db	255
 48966                           
 48967                           ;Config register CONFIG5L @ 0x300008
 48968                           ;	Code Protect 00800-03FFF
 48969                           ;	CP0 = OFF, Disabled
 48970                           ;	Code Protect 04000-07FFF
 48971                           ;	CP1 = OFF, Disabled
 48972                           ;	Code Protect 08000-0BFFF
 48973                           ;	CP2 = OFF, Disabled
 48974                           ;	Code Protect 0C000-0FFFF
 48975                           ;	CP3 = OFF, Disabled
 48976   300008                     	org	3145736
 48977   300008  0F                 	db	15
 48978                           
 48979                           ;Config register CONFIG5H @ 0x300009
 48980                           ;	Code Protect Boot
 48981                           ;	CPB = OFF, Disabled
 48982                           ;	Data EE Read Protect
 48983                           ;	CPD = OFF, Disabled
 48984   300009                     	org	3145737
 48985   300009  C0                 	db	192
 48986                           
 48987                           ;Config register CONFIG6L @ 0x30000A
 48988                           ;	Table Write Protect 00800-03FFF
 48989                           ;	WRT0 = OFF, Disabled
 48990                           ;	Table Write Protect 04000-07FFF
 48991                           ;	WRT1 = OFF, Disabled
 48992                           ;	Table Write Protect 08000-0BFFF
 48993                           ;	WRT2 = OFF, Disabled
 48994                           ;	Table Write Protect 0C000-0FFFF
 48995                           ;	WRT3 = OFF, Disabled
 48996   30000A                     	org	3145738
 48997   30000A  0F                 	db	15
 48998                           
 48999                           ;Config register CONFIG6H @ 0x30000B
 49000                           ;	Config. Write Protect
 49001                           ;	WRTC = OFF, Disabled
 49002                           ;	Table Write Protect Boot
 49003                           ;	WRTB = OFF, Disabled
 49004                           ;	Data EE Write Protect
 49005                           ;	WRTD = OFF, Disabled
 49006   30000B                     	org	3145739
 49007   30000B  E0                 	db	224
 49008                           
 49009                           ;Config register CONFIG7L @ 0x30000C
 49010                           ;	Table Read Protect 00800-03FFF
 49011                           ;	EBTR0 = OFF, Disabled
 49012                           ;	Table Read Protect 04000-07FFF
 49013                           ;	EBTR1 = OFF, Disabled
 49014                           ;	Table Read Protect 08000-0BFFF
 49015                           ;	EBTR2 = OFF, Disabled
 49016                           ;	Table Read Protect 0C000-0FFFF
 49017                           ;	EBTR3 = OFF, Disabled
 49018   30000C                     	org	3145740
 49019   30000C  0F                 	db	15
 49020                           
 49021                           ;Config register CONFIG7H @ 0x30000D
 49022                           ;	Table Read Protect Boot
 49023                           ;	EBTRB = OFF, Disabled
 49024   30000D                     	org	3145741
 49025   30000D  40                 	db	64
 49026                           tosu	equ	0xFFF
 49027                           tosh	equ	0xFFE
 49028                           tosl	equ	0xFFD
 49029                           stkptr	equ	0xFFC
 49030                           pclatu	equ	0xFFB
 49031                           pclath	equ	0xFFA
 49032                           pcl	equ	0xFF9
 49033                           tblptru	equ	0xFF8
 49034                           tblptrh	equ	0xFF7
 49035                           tblptrl	equ	0xFF6
 49036                           tablat	equ	0xFF5
 49037                           prodh	equ	0xFF4
 49038                           prodl	equ	0xFF3
 49039                           indf0	equ	0xFEF
 49040                           postinc0	equ	0xFEE
 49041                           postdec0	equ	0xFED
 49042                           preinc0	equ	0xFEC
 49043                           plusw0	equ	0xFEB
 49044                           fsr0h	equ	0xFEA
 49045                           fsr0l	equ	0xFE9
 49046                           wreg	equ	0xFE8
 49047                           indf1	equ	0xFE7
 49048                           postinc1	equ	0xFE6
 49049                           postdec1	equ	0xFE5
 49050                           preinc1	equ	0xFE4
 49051                           plusw1	equ	0xFE3
 49052                           fsr1h	equ	0xFE2
 49053                           fsr1l	equ	0xFE1
 49054                           bsr	equ	0xFE0
 49055                           indf2	equ	0xFDF
 49056                           postinc2	equ	0xFDE
 49057                           postdec2	equ	0xFDD
 49058                           preinc2	equ	0xFDC
 49059                           plusw2	equ	0xFDB
 49060                           fsr2h	equ	0xFDA
 49061                           fsr2l	equ	0xFD9
 49062                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    597
    Data        0
    BSS         1866
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      83
    BANK0           160     73     115
    BANK1           256     67     256
    BANK2           256     50     254
    BANK3           256      0     200
    BANK4           256      0     192
    BANK5           256      0      72
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8105	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    getNumRxBuffersInUse@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    poll$8106	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8107	const PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8107$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    pop@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    quantity@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    S5136MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12928 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12928 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _setup->_initServos
    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _bootPowerUp->_readNVM
    _teachProcessMessage->_sendMessage3
    _teachProcessMessage->_teachCheckLen
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNnclr->_sendMessage2
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage2
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage2
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _APP_GetEventState->___awdiv
    _numEv->_validStart
    _nvProcessMessage->_sendMessage2
    _nvProcessMessage->_sendMessage3
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awdiv
    _mnsProcessMessage->_sendMessage2
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_writeNVM
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _mnsPoll->_sendMessage2
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _getNumRxBuffersInUse->_quantity
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _isConsumedEvent->_getEv
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_sendProducedEvent
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_sendProducedEvent
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _processOutputs->_sendProducedEvent
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _sendInvertedProducedEvent->_sendProducedEvent
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _doSOD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _inputScan->_sendProducedEvent
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_push
    _getNumTxBuffersInUse->_quantity
    _readInput->_getNV
    _checkPowerOnPb->_pbDownTimer
    _checkPowerOnPb->_pbUpTimer
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _poll->_ackEventProcessMessage
    _poll->_bootProcessMessage
    _poll->_canProcessMessage
    _poll->_nvProcessMessage
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_sendInvertedProducedEvent
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 4206692
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   32975
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0   10205
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4923
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4738
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   44346
                                             10 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                        _bootPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   24492
                                              9 BANK1      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4592
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    5006
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4780
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0    4663
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2694662
                                             35 BANK2     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  892896
                                             63 BANK1      2     0      2
                                              0 BANK2      6     6      0
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   61581
                                             72 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   20252
                                              9 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   67821
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   90389
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   20190
                                              9 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   74998
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   57920
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  111583
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   54958
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  340198
                                             52 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         8     1      7  282937
                                             44 BANK1      8     1      7
                           _addEvent
              _checkRemoveTableEntry
                   _rebuildHashtable
                            _writeEv
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              12    10      2   62938
                                             63 BANK1      2     0      2
                                              0 BANK2     10    10      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  187619
                                             41 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                       14    12      2   46634
                                             26 BANK1     13    11      2
                  _APP_GetEventState
                            ___awdiv
                              _getNV
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                   11    11      0   11604
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   41462
                                             26 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8958
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13934
                                             26 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   27593
                                             26 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   28688
                                             26 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   14215
                                             26 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   15059
                                             26 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  611978
                                             63 BANK1      4     2      2
                                              0 BANK2      2     2      0
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  539186
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  519873
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    9015
                                             63 BANK0      2     1      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   38    36      2  729007
                                             63 BANK1      2     0      2
                                              0 BANK2     35    35      0
                                NULL *
                   _ackGetDiagnostic *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
                  _consumer2QEsdData *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   13385
                                             70 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15722
                                             70 BANK0      3     0      3
                                              8 BANK1      1     1      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     439
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     247
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumer2QEsdData                                    1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     4     2      2    1020
                                             54 BANK0      4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   50688
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   12001
                                             70 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            20    18      2   31318
                                             63 BANK1      2     0      2
                                              0 BANK2     17    17      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2   13809
                                             10 BANK1      9     7      2
                   _getBufferPointer
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              3 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              2 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (5) _getNumRxBuffersInUse                                 4     4      0     564
                                             50 BANK0      4     4      0
                   _getBufferPointer
                           _quantity
 ---------------------------------------------------------------------------------
 (6) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   28719
                                             63 BANK1      4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   65528
                                             63 BANK1      4     2      2
                                              0 BANK2      5     5      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13956
                                             70 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                  _consumer2QEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      2     2      0    9681
                                             70 BANK0      2     2      0
                              _getEv
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   29563
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29321
                                             71 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   28564
                                             70 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  228300
                                             46 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   75247
                                             30 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1940
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1940
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   71082
                                             18 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                       _setOutputPin
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    8078
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12774
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       2     2      0   28021
                                             18 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   62201
                                             37 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                     _finaliseOutput
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   42680
                                             34 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   40028
                                             26 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   27223
                                             18 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _finaliseOutput                                       2     1      1     211
                                             45 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1626
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   35780
                                             18 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendProducedEvent                                    8     7      1   25464
                                             71 BANK0      2     1      1
                                             12 BANK1      6     6      0
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13683
                                             70 BANK0      1     1      0
                                              8 BANK1      4     0      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9928
                                             67 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      10     8      2    3889
                                             57 BANK0     10     8      2
                _getNextWriteMessage
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _push                                                12     9      3    1234
                                             45 BANK0     12     9      3
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 0     0      0     363
                           _quantity
 ---------------------------------------------------------------------------------
 (7) _quantity                                             5     4      1     363
                                             45 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  610418
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    7243
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  591693
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   34433
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   34433
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   23401
                                              2 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   13497
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    6925
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  504376
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  504042
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14853
                                              6 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              2 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4493
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        5     4      1  461056
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  332882
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  163860
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  168929
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  127554
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _writeEv                                             12    10      2   73087
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _checkRemoveTableEntry                                2     2      0   57047
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   43283
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   24393
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9616
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (7) _getEVs                                               8     8      0    9178
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4394
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   11368
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4493
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4428
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17500
                                              2 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      5     1      4
                                              0 BANK1      2     2      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2359
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1590
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4298
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7802
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7802
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7641
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1071
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    6190
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    6190
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    5353
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    1672
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1461
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1461
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     225
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     759
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _rebuildHashtable
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _getNumTxBuffersInUse
                 _quantity
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         _findServiceIndex
         _startTimedResponse
           _findServiceIndex (ARG)
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _finaliseOutput
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _setOutputPin
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _isConsumedEvent
         _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumer2QEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _producerEsdData (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _getNumRxBuffersInUse
         _getBufferPointer
         _quantity
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _consumer2QEsdData *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerEsdData *
       _producerGetDiagnostic *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awdiv
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
       _sodTRCallback *
         _APP_GetEventState
           ___awdiv
           _getNV
           _readNVM
         ___awdiv
         _getNV
         _sendInvertedProducedEvent
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
           _checkRemoveTableEntry
           _rebuildHashtable
           _writeEv
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      70       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      68        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      67        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      66        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      65        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      64        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      63        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      62        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      61        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      60        0.0%
BANK5              100      0      48      14       28.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C0      13       75.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     32      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     43     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      53       1       88.3%
BITBANK14           41      0       0      69        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlllhl      2A      0       0      57        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      48        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRllhllh      F      0       0      54        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlllhhl      7      0       0      56        0.0%
BITBIGSFRhh          7      0       0      24        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRllhhll      4      0       0      47        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlllhhh      3      0       0      55        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      58        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     494      59        0.0%
DATA                 0      0     834       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Dec 01 13:04:12 2024

                   nerdCallback@nodeNumber 01D9                        findEvent@tableIndex 01C9  
                __end_of_pollTimedResponse AC3E                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 01BF                           sendMessage@data1 01BE  
                         sendMessage@data2 01BF                           sendMessage@data3 01C0  
                         sendMessage@data4 01C1                           sendMessage@data5 01C2  
                         sendMessage@data6 01C3                           sendMessage@data7 01C4  
                      findEvent@nodeNumber 01BD              __end_of_setTimedResponseDelay C820  
            __end_of_producerGetDiagnostic C3B0                          ackEventCheckLen@m 01CE  
                           _completed$1545 0091                              ?_APP_addEvent 01E9  
                     _getNumRxBuffersInUse BF20                      _timedResponseCallback 00AD  
                             ___awdiv@sign 009C                            _normalReadIndex 00CD  
                                       _io 00CF                                         _nn 00B5  
                                       bsr 0FE0                                ?_APP_lowIsr 0001  
                      ___wmul@multiplicand 0093                               configIO@type 01C5  
                       i2_getBufferPointer A56E             _sendInvertedProducedEvent$1404 01D4  
                         ?_flushFlashBlock 0001                     _eventConsumer2QService EF0E  
                             ?_APP_highIsr 0001                    __end_of_eraseFlashBlock BB5A  
              __end_of_universalEventsInit C788                  ?_consumer2QProcessMessage 01FC  
                              _startServos 96E0                             ??_getTwoAction 008F  
                __end_of_deleteActionRange 9900                                        l260 57CE  
                                      l501 3D82                                        l502 3D8E  
                                      l280 6CD2                                        l353 5232  
                                      l282 6D68                                        l470 3C9E  
                                      l454 3AAC                                        l551 A81E  
                                      l463 3ABE                                        l561 AB2C  
                                      l449 3AA4                                        l466 3CAA  
                                      l458 3AB6                                        l547 A7DC  
                                      l491 3DDC                                _startOutput B6BE  
                                      l556 AAEA                                        l820 AF78  
                                      l646 7782                                        l814 3294  
                                      l654 B18C                                        l917 A546  
                          checkPowerOnPb@i 01F6                         _enumerationResults 0234  
                    deleteHappeningRange@h 01E1            ?_APP_isSuitableTimeToWriteFlash 0001  
         ??_APP_isSuitableTimeToWriteFlash 008D                        _expeditedWriteIndex 00CA  
                          _initServos$8093 00A7                            _initServos$8094 00A6  
                                      _evs 0220                                        _pop A020  
                            _APP_nvDefault 8D64                               ___awmod@sign 0092  
                                      prod 0FF3                    i2getNextWriteMessage@wr 000C  
                                      tosl 0FFD                                        wreg 0FE8  
             tableIndexToEvtIdx@tableIndex 008D                        ?i2_getBufferPointer 0001  
     sendInvertedProducedEvent@can_send_on 01D1                    APP_nvValueChanged@index 01F5  
             APP_GetEventState@disable_off 01BE                    APP_nvValueChanged@value 01F0  
      __end_of_mnsTRallDiagnosticsCallback 846A                _mnsTRallDiagnosticsCallback 8366  
                                     l1104 1410                                       l2001 9A24  
                                     l2008 9974                                       l2033 44CC  
                                     l1318 6864                                       l2064 C49C  
                                     l1280 C51A                                       l1520 21DC  
                                     l1264 93B8                                       l2209 BB46  
                                     l1282 C51E                                       l1450 80B4  
                                     l2227 BC9C                                       l1451 80E0  
                                     l1188 C7CA                                       l1524 223C  
                                     l2501 B1C4                                       l1445 8064  
                                     l2182 C6BC                                       l3142 A9B4  
                                     l1800 632A                                       l3072 5FC6  
                                     l1561 3478                                       l1449 80B0  
                                     l1802 6334                                       l2530 6A1C  
                                     l1554 33DE                                       l2195 B2C4  
                                     l1804 633E                                       l2460 714A  
                                     l2189 B2AE                                       l1565 356E  
                                     l2526 4E62                                       l2534 6A40  
                                     l1567 3590                                       l1559 3446  
                                     l1487 1B0C                                       l1488 1B30  
                                     l2464 7198                                       l1817 8862  
                                     l2467 7208                                       l1780 6226  
                                     l1782 622C                                       l1767 617C  
                                     l1784 6232                                       l1776 6204  
                                     l1769 6184                                       l2753 239E  
                                     l1778 6214                                       l1787 6288  
                           _bootloaderType 00C8                                       l1796 630A  
                                     l1789 6290                                       l1798 631A  
                                     l2849 BFE8                                       l2949 7A66  
            __end_ofi2_getNextWriteMessage 90A8                                       _BIE0 0E7E  
                       doEvuln@eventNumber 01D3                                       ?_pop 008D  
                         setOutputState@io 0095                                       _EEIF 7DBE  
                   __end_of_checkPowerOnPb B6BE                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _IPR5 0F78                          doEvuln@nodeNumber 01D1  
                    __end_of_sodTRCallback 866C                             configIO@action 01C4  
                                     _WPUB 0F5B                          setOutputPin@state 0091  
                           i2_setOutputPin 72B4                                _outputState 02B4  
                            _pushTwoAction B602                      i1_getNextWriteMessage 8E36  
                                     _have AFEE                                       _main BBA6  
                                     _name 0848                                       _loop 6D74  
                                     _poll 416C                 __end_of_mnsTRrqnpnCallback C334  
                                     fsr1h 0FE2                                       fsr2h 0FDA  
                                     indf1 0FE7                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     _push 44E2                        setMultiState@action 0091  
                                     btemp 0054                           ?_producerEsdData 0001  
                        ?_removeTableEntry 0001                sodTRCallback@happeningIndex 01DE  
                                     pop@q 008D                                       prodh 0FF4  
                                     prodl 0FF3                            __end_ofi2_getNV BFCE  
                                     start 081C                               ?_loadNvCache 0001  
                       bounceDown@reversed 01BD                               bootPowerUp@a 009A  
                             bootPowerUp@b 0097                               bootPowerUp@i 0099  
          APP_GetEventState@happeningIndex 01C0                              setupTimer1@io 009C  
                      _setExpeditedActions C83C                              setupTimer3@io 009C  
               __end_of_startDigitalOutput 5988                             _setBounceState 9B0C  
              consumer2QProcessMessage@end 02CF                consumer2QProcessMessage@enn 02D2  
                     ??i2_getBufferPointer 0003                consumer2QProcessMessage@opc 02D1  
                       ??_removeTableEntry 01C6                              ?_APP_testMode 0001  
                          getEN@tableIndex 00A1                               ___param_bank 0000  
                           ??_APP_addEvent 00A9                      ?_getNumRxBuffersInUse 0001  
                    __end_of_defaultEvents 78A0                           ?_producerPowerUp 0001  
                        findServiceIndex@i 0090                                completed@io 0092  
                     __end_of_EEPROM_Write B2EA                                _uptimeTimer 014C  
                                    ??_pop 008F                                      l20000 A89A  
                                    l20004 A8A4                                      l20020 B076  
                                    l20100 C2C6                                      l20030 B098  
                                    l20008 A8B2                                      l20040 B0BA  
                                    l20024 B082                                      _B0CON 0E80  
                                    l20130 8D7A                                      l20044 B0C8  
                                    l20036 B0B0                                      l20028 B090  
                                    l20212 9B40                                      l21020 8930  
                                    l21012 8928                                      l21100 898A  
                                    l20142 8D86                                      l20134 8D7E  
                                    l20126 8D76                                      l20118 8D72  
                                    l20214 9B5C                                      l20222 9BA6  
                                    l21110 C3EE                                      l20064 B472  
                                    l20152 8D8A                                      l21120 8858  
                                    l20208 9B12                                      l20240 8F2A  
                                    l20232 B386                                      l20072 BC02  
                                    l21040 8940                                      l21024 8934  
                                    l21016 892C                                      _B1CON 0E90  
                                    l20138 8D82                                      l20154 8DC4  
                                    l21130 888A                                      l20218 9B8A  
                                    l20242 8F46                                      l20170 9A94  
                                    l20234 B396                                      l20226 B356  
                                    l21124 886C                                      l21116 8844  
                                    l20252 8FBA                                      l20172 9AB0  
                                    l20180 9AFA                                      l20228 B36C  
                                    l20260 9FCE                                      l22012 9E86  
                                    l20308 BF32                                      l21052 894E  
                                    l21044 8944                                      l21036 893C  
                                    l21028 8938                                      l20500 3E86  
                                    l20326 B92E                                      l21142 88AE  
                                    l21134 8896                                      l21126 887E  
                                    l21118 884E                                      l20246 8F80  
                                    l20238 8F0E                                      l20166 9A66  
                                    l20190 94D0                                      l22030 9DE8  
                                    l20510 3ED6                                      l20502 3E98  
                                    l21160 BEEA                                      l20176 9ADE  
                                    l20192 94E0                                      l20184 94A2  
                                    l20280 B798                                      l21048 894A  
                                    l21320 8C12                                      l22200 BDF6  
                                    _B2CON 0EA0                                      l20426 C58A  
                                    l21138 88A2                                      l21146 88C0  
                                    l20610 5898                                      l20186 94B0  
                                    l23010 63CA                                      l21082 8978  
                                    l21066 8962                                      l21058 895E  
                                    l20514 3F02                                      l20444 B7D6  
                                    l20620 58EA                                      l20604 5878  
                                    l20196 950E                                      l23004 63B2  
                                    l20292 B7BC                                      l20276 B788  
                                    l21172 C3C6                                      l21260 B1E0  
                                    l22052 C526                                      l21332 8C84  
                                    l20532 3FF4                                      l20524 3FB6  
                                    l20508 3ECA                                      l22132 83CA  
                                    l22222 617E                                      l21422 81B0  
                                    l20614 58C2                                      l23022 63FA  
                                    l23110 6C86                                      l21078 8966  
                                    l22046 C522                                      l21318 8BD4  
                                    l20542 4070                                      l20534 4000  
                                    l20526 3FCE                                      l20518 3F2E  
                                    l22118 A69C                                      l20464 B806  
                                    l22232 61B4                                      l22312 6344  
                                    l21432 8228                                      l21512 AB02  
                                    l23016 63E2                                      l23104 6C30  
                                    l22072 A1DA                                      l22064 A15E  
                                    l20288 B7B2                                      l21264 B1F2  
                                    l20560 413A                                      l22152 C314  
                                    l22128 83C6                                      _B3CON 0EB0  
                                    l22226 6188                                      l21426 81EC  
                                    l21418 8174                                      l21434 825C  
                                    l20730 BE42                                      l21602 B6DC  
                                    l23042 64B6                                      l23114 6CAE  
                                    l22082 C0A4                                      l22090 C0BC  
                                    l21258 B1CE                                      l21266 B206  
                                    l20810 3158                                      l22170 AC62  
                                    l20538 4038                                      l20482 3E20  
                                    l21364 B834                                      l21620 A4E4  
                                    l20716 AFE2                                      l20708 AF86  
                                    l20660 A7F4                                      l20628 594C  
                                    l20580 5790                                      l21612 B6F4  
                                    l23044 64BE                                      l23028 6412  
                                    l23124 6D24                                      l22340 A0B0  
                                    l22332 A048                                      l22500 79D0  
                                    l22084 C0AC                                      l20636 C43E  
                                    l20804 311A                                      l22164 AC4E  
                                    l20556 411C                                      l20548 40C6  
                                    l20492 3E64                                      l21348 C356  
                                    l23212 3BE8                                      l22238 61DC  
                                    l20734 BE56                                      l21606 B6E8  
                                    l23070 656A                                      l23126 6D30  
                                    l20902 5B92                                      l21454 B636  
                                    l22086 C0B4                                      l21358 C39E  
                                    l22182 C700                                      l20822 31D4  
                                    l20750 2E60                                      l23230 3C64  
                                    l23214 3C2E                                      l24030 484E  
                                    l24014 C044                                      l21368 B848  
                                    l22272 6294                                      l21624 A4FE  
                                    l21616 A4E0                                      l20648 A7CE  
                                    l21552 B8E4                                      l22512 BDB6  
                                    l22520 BDD6                                      l22504 79D8  
                                    l22192 C708                                      l22432 C6EA  
                                    l20816 3196                                      l20832 3266  
                                    l20488 3E48                                      l24200 ABD6  
                                    l23400 A4AE                                      l24104 4A1E  
                                    l23144 BCD4                                      l21712 AEAA  
                                    l21720 AEDE                                      _B4CON 0EC0  
                                    l22098 875E                                      l22266 6238  
                                    l21538 9F0A                                      l21570 A9D0  
                                    l21562 B8FC                                      l20594 5800  
                                    l20914 5BF0                                      l22450 78E4  
                                    l22442 78A2                                      l21298 C466  
                                    l21482 C614                                      l21474 C610  
                                    l22186 C704                                      l20762 2EC0  
                                    l20754 2E70                                      l24210 AC0E  
                                    l24202 ABFC                                      l23306 3DAC  
                                    l23226 3C58                                      l23218 3C44  
                                    l23234 3C6E                                      l23162 3A72  
                                    l24114 4A48                                      l24042 4880  
                                    l23154 BCF4                                      l22284 62E4  
                                    l22268 628A                                      l21556 B8F0  
                                    l21548 B8D8                                      l23076 6594  
                                    l20932 2A06                                      l20916 5C20  
                                    l21900 1258                                      l21804 0C2C  
                                    l21740 0944                                      l21732 08B6  
                                    l21820 0D46                                      l22540 8318  
                                    l22532 828E                                      l22428 C6E6  
                                    l20852 AF56                                      l24212 AC14  
                                    l23244 3CB2                                      l24052 48C8  
                                    l23148 BCDC                                      l21708 AE9E  
                                    l22278 62BE                                      l21638 A54A  
                                    l21574 A9EA                                      l21566 A9CC  
                                    l23078 6598                                      l23086 65C4  
                                    l23094 6BA8                                      l20942 2BC8  
                                    l21902 127A                                      l21822 0D84  
                                    l21814 0CE6                                      l22550 8344  
                                    l22470 796C                                      l22438 C6EE  
                                    l20846 AF52                                      l20790 3048  
                                    l20782 2FCA                                      l20774 2F3E  
                                    l22606 AD08                                      l22622 7D2C  
                                    l22710 967E                                      l22702 964E  
                                    l23254 3CD4                                      l23430 67FE  
                                    l24126 4AB4                                      l24046 48BE  
                                    l23342 9324                                      l23414 C258  
                                    l24224 99CA                                      l20952 2D9E  
                                    l20960 2DFC                                      l20864 59C4  
                                    l21920 1388                                      l21912 12FA  
                                    l21816 0D0E                                      l21760 0A34  
                                    l21752 09D2                                      l21736 0910  
                                    l21728 085A                                      l22464 7926  
                                    l21488 C618                                      l20768 2F00  
                                    l24216 AC1A                                      l22640 7DC4  
                                    l22632 7D72                                      l22616 7CF4  
                                    l22712 9690                                      l23280 3D56  
                                    l23176 3AC4                                      l24064 4922  
                                    l24048 48C4                                      l24152 4B3C  
                                    l25032 44AA                                      l25024 43D8  
                                    l22800 7DEA                                      _B5CON 0ED0  
                                    l21586 AA22                                      l21594 B6C4  
                                    l20946 2C24                                      l20890 5B1C  
                                    l21922 13AA                                      l21842 0E7C  
                                    l21762 0A50                                      l21754 09F4  
                                    l21746 0978                                      l21738 0932  
                                    l22482 79AA                                      l22730 C542  
                                    l20786 300A                                      l21682 85EC  
                                    l21658 8594                                      l22722 96CA  
                                    l22562 B584                                      l22570 B58C  
                                    l23178 3B46                                      l24138 4B10  
                                    l23514 808C                                      l24236 991A  
                                    l20956 2DF8                                      l20884 5ADC  
                                    l20876 5A6C                                      l21940 14C4  
                                    l21908 12C4                                      l21828 0DAA  
                                    l21772 0AC8                                      l22900 974A  
                                    l20980 AAC2                                      l22492 79C8  
                                    l22468 796A                                      l22740 C54A  
                                    l21692 8610                                      l21676 85D4  
                                    l23444 6848                                      l23452 6860  
                                    l23700 1B5E                                      l23612 196E  
                                    l23604 1942                                      l24076 4978  
                                    l24340 9D50                                      l23356 9368  
                                    l23348 9328                                      l22804 7E0E  
                                    l21598 B6D0                                      l21766 0A84  
                                    l22478 79A4                                      l24414 6A3C  
                                    l20990 C416                                      l22734 C546  
                                    l22726 C53E                                      l20798 30DA  
                                    l21686 8604                                      l22590 946C  
                                    l22582 9412                                      l22718 96B2  
                                    l22566 B588                                      l24510 22EC  
                                    l23278 3D10                                      l23198 3BB0  
                                    l23382 A47C                                      l24086 49A2  
                                    l24174 BD6C                                      l23526 80E4  
                                    l24270 7156                                      l22814 7E94  
                                    l22806 7E1C                                      l25118 BBE6  
                                    l15560 A966                                      l20888 5B04  
                                    l21952 15E4                                      l21944 1524  
                                    l21928 13F4                                      l21872 1018  
                                    l21792 0BA0                                      l21784 0B3E  
                                    l21960 1652                                      l22912 9794  
                                    l20976 AABE                                      l21696 861C  
                                    l24504 22E6                                      l23296 3D98  
                                    l23288 3D76                                      l23376 A462  
                                    l23472 6888                                      l23712 1BB6  
                                    l23704 1B88                                      l23640 19EE  
                                    l23552 179A                                      l24344 9D54  
                                    l24328 9D1E                                      l23536 8106  
                                    l24264 714E                                      l19002 90D8  
                                    l15562 A972                                      l22922 5156  
                                    l21962 1680                                      l21890 11B6  
                                    l21882 1102                                      l21874 1050  
                                    l21858 0F60                                      l21794 0BBC  
                                    l21786 0B60                                      l21778 0AFC  
                                    l21698 8644                                      l22754 B34C  
                                    l22690 B104                                      l22658 B224  
                                    l22674 BFD8                                      l23298 3D9E  
                                    l23474 68DA                                      l24098 49F2  
                                    l22818 7EC6                                      l19004 90DC  
                                    l15572 A9A6                                      l21956 161A  
                                    l21948 1584                                      l21892 11C8  
                                    l21972 1728                                      l24436 6ABA  
                                    l24452 6B82                                      l23900 3372  
                                    l22748 B2F6                                      l22772 A316  
                                    l24540 2368                                      l23388 A490  
                                    l23476 68F0                                      l23484 690A  
                                    l23732 1D2E                                      l23716 1C40  
                                    l23628 19B4                                      l23572 1816  
                                    l23548 176E                                      l22860 9CAA  
                                    l22852 9C70                                      l22918 514E  
                                    l21974 1758                                      l21886 115C  
                                    l21878 10A8                                      l21798 0BF0  
                                    l23902 3376                                      l22766 A2C0  
                                    l24614 2598                                      l23486 6942  
                                    l23806 21D6                                      l23814 21E4  
                                    l23726 1C76                                      l23646 19FE  
                                    l23566 180E                                      l23638 19C2  
                                    l24358 9D7E                                      l15718 C2E2  
                                    l19016 9172                                      l19008 90EE  
                                    l22936 51E2                                      l21968 1704  
                                    l22880 96F2                                      l22792 C5F8  
                                    l24544 236C                                      l23752 1DF0  
                                    l23584 18C2                                      l23568 1812  
                                    l23592 18E4                                      l24480 C07A  
                                    l22848 9C68                                      l19050 BAC8  
                                    l19026 95AE                                      l19130 7FE0  
                                    l19122 7FB6                                      l24458 6B8E  
                                    l24394 69DC                                      l23914 33F8  
                                    l22786 C5F4                                      l22778 C5F0  
                                    l24634 261C                                      l24562 242A  
                                    l24538 2364                                      l23826 2210  
                                    l23762 1E1E                                      l23746 1DAC  
                                    l23738 1D80                                      l23674 1AA4  
                                    l23666 1A5E                                      l23658 1A32  
                                    l23594 191C                                      l23578 183C  
                                    l22866 9CFA                                      l19060 BAEC  
                                    l19108 7F6E                                      l19220 7C92  
                                    l22972 5382                                      l22956 52F2  
                                    l22948 527C                                      l22980 53EC  
                                    l24716 277A                                      l24636 2622  
                                    l24492 2290                                      l23780 2126  
                                    l23772 20F8                                      l23692 1B32  
                                    l24820 6038                                      l19054 BADA  
                                    l19134 8024                                      l22966 534C  
                                    l22974 5394                                      l22958 5302  
                                    l22982 53FE                                      l23950 3526  
                                    l23766 1F04                                      l23846 2242  
                                    l23598 1920                                      l24822 6082  
                                    l19160 848A                                      l19208 7BDE  
                                    l22968 535E                                      l22984 540E  
                                    l22888 9702                                      l24912 6EDE  
                                    l24904 6E7E                                      l23880 3302  
                                    l24736 27EC                                      l24656 2674  
                                    l19154 8486                                      l19074 7F1A  
                                    l19218 7C58                                      l19226 7CA0  
                                    l19242 BD3C                                      l19330 36E0  
                                    l19314 8D3C                                      l22978 53CE  
                                    l23954 356A                                      l24594 254A  
                                    l24578 24B2                                      l24498 22B0  
                                    l23794 2162                                      l24826 60C2  
                                    l24834 60F4                                      l19148 8480  
                                    l19092 7F3A                                      l19404 3A50  
                                    l19308 8CFA                                      l22996 63A6  
                                    l23948 3522                                      l23892 3346  
                                    l24676 26C6                                      l24836 6120  
                                    l24932 8A1A                                      l19510 BEBC  
                                    l19182 852E                                      l19086 7F36  
                                    l19350 376C                                      l19430 4BB8  
                                    l23974 3644                                      l23958 358A  
                                    l23886 331E                                      l24758 28C0  
                                    l24790 5EDA                                      l24870 9C04  
                                    l19176 851C                                      l19344 3762  
                                    l19424 4B9C                                      l24696 2718  
                                    l24776 C22A                                      l19522 6F42  
                                    l19186 8532                                      l19354 3772  
                                    l19266 B054                                      l19258 AFF8  
                                    l19290 4544                                      l23994 36B4  
                                    l24794 5EDE                                      l24786 5EB8  
                                    l24866 9BFC                                      l19516 BECC  
                                    l19532 7004                                      l24980 41FE  
                                    l24876 9C10                                      l19534 7042  
                                    l19526 6F84                                      l19542 70C2  
                                    l19382 3966                                      l19606 98D8  
                                    l19614 98EC                                      l24958 B686  
                                    l24798 5F5A                                      l19528 6FC2  
                                    l19560 A646                                      l19552 A61C  
                                    l19384 3968                                      l19368 38B4  
                                    l19392 397A                                      l19640 8BA6  
                                    l24992 4262                                      l18754 BB92  
                                    l19538 7084                                      l18834 A8F4  
                                    l18818 A8D0                                      l19570 A686  
                                    l18922 7A2A                                      l19714 65FA  
                                    l19298 4838                                      l24898 6E22  
                                    l24986 425C                                      l18772 B5D8  
                                    l18764 B5A8                                      l19812 4F4A  
                                    l18940 7AE6                                      l18916 7A18  
                                    l19732 6754                                      l19740 679A  
                                    l19708 65F2                                      l19628 8AE8  
                                    l19468 4D2A                                      l19822 4FB2  
                                    l19814 4F60                                      l19806 4F28  
                                    l19750 67AC                                      l19910 7758  
                                    l18768 B5C0                                      l19680 A728  
                                    l18864 A93C                                      l19832 5042  
                                    l19824 4FF0                                      l18928 7A74  
                                    l19584 9858                                      l19912 77AC  
                                    l19488 4E20                                      l18778 B5E2  
                                    l18954 B28C                                      l19842 50D2  
                                    l19834 5080                                      l19914 77D4  
                                    l19770 BC40                                      l19498 4E46  
                                    l19930 A334                                      l19922 A320  
                                    l19756 67C4                                      l19686 A75E  
                                    l19678 A724                                      l19694 A794  
                                    l19846 5110                                      l19790 4E8A  
                                    l18878 BABE                                      l19598 987C  
                                    l19918 7880                                      l19870 980C  
                                    l19950 A366                                      l19942 A352  
                                    l19934 A33E                                      l19926 A32A  
                                    l19688 A76A                                      l19880 982E  
                                    l19856 97AE                                      l19960 A37A  
                                    l19794 4ECC                                      l19778 BC7A  
                                    l19874 981C                                      l19954 A370  
                                    l19946 A35C                                      l19938 A348  
                                    l18988 B2E6                                      l19788 4E74  
                                    l19798 4EEA                                      l19990 A87A  
                                    l19982 A85C                                      l19878 9828  
                                    l19976 A84C                                      l19898 BA2E  
                                    l19988 A872                                      ?_have 0001  
                                    ?_main 0001                  ??_consumer2QGetDiagnostic 0098  
                             ?_initOutputs 0001                        processEnumeration@i 01C6  
                          __end_of___awdiv A8BC                                      _EEADR 0F74  
                                    ?_loop 0001                          setOutputState@act 0093  
                          __end_of___awmod B0D2                                      ?_poll 0001  
                                    ?_push 008D                                      _BSEL0 0E7D  
                          __end_of___lldiv A9C6                                      u20010 5096  
                                    u20024 50C6                                      u20200 B09C  
                                    _T0CON 0FD5                                      u20025 50C2  
                                    u20034 5102                                      u20050 97AA  
                                    u21010 57CA                                      u20035 50FE  
                                    u20140 A87E                                      u20300 BC22  
                                    u21100 58E6                                      u21020 57CC  
                          ___awdiv@divisor 0099                                      u21110 58E8  
                                    u21200 A7CA                                      u20320 BC2E  
                                    u20250 B462                                      u21140 591C  
                                    u22020 8BD0                                      u20430 8F64  
                                    u20270 BC0C                                      u21150 591E  
                                    u22104 81A4                                      u20440 8F9E  
                                    u20280 BC0E                                      u21160 5958  
                                    u23000 14B4                                      u22105 81A0  
                                    u22114 81E0                                      u21170 595A  
                                    u22115 81DC                                      u22124 821C  
                                    u23020 1512                                      u20700 3E60  
                                    u22125 8218                                      u21501 3066  
                                    u23110 16F4                                      u23030 1514  
                                    u22320 AA1E                                      u23120 171A  
                                    u23200 9E3C                                      u15130 A976  
                                    u21370 BE52                                      u23130 171C  
                                    u23050 1572                                      u20810 3FB2  
                                    u20730 3E82                                      u21451 2F5C  
                                    u22340 A4FA                                      u21620 59BE  
                                    u23060 1574                                      u22180 C57C  
                                    u20900 40C2                                      u21630 59C0  
                                    u20750 3EC6                                      u23080 15D2  
                                    u23160 9ED8                                      u20920 40E6  
                                    u22440 860C                                      u22290 A9E6  
                                    u21730 29E4                                      u23090 15D4  
                                    u23170 9EDA                                      u20930 4118  
                                    u20850 4034                                      u20770 3EFE  
                                    u20690 3E1C                                      u25010 3DE6  
                                    u23500 6320                                      u22380 A542  
                                    u21740 2A06                                      u23308 840E  
                                    u22460 AED2                                      u23309 8422  
                                    u21750 2A38                                      u22710 0CD2  
                                    u23190 9E3A                                      u24230 9730  
                                    u20870 406C                                      u20790 3F2A  
                                    u23350 BDF2                                      u25110 67FA  
                                    u25030 9374                                      u24150 9CA6  
                                    u22470 AED4                                      u20960 572E  
                                    u21760 2A3A                                      u22800 0F18  
                                    u22720 0CD4                                      u24160 9CA8  
                                    u23370 6162                                      u20970 5730  
                                    u21690 5B7E                                      u22810 0F1A  
                                    u22730 0CFC                                      u21850 895A  
                                    u20890 4090                                      u25050 93D4  
                                    u25210 805A                                      u23268 8804  
                                    u24500 53BE                                      u24420 52BC  
                                    u20980 57A8                                      u22740 0CFE  
                                    u22580 0AB4                                      u25060 A45E  
                                    u23269 8816                     APP_GetEventState@flags 01BD  
                                    u24430 52BE                                      u20990 57AA  
                                    u24510 63A0                                      u22910 12E0  
                                    u22590 0AB6                                      u24270 9778  
                                    u24190 96EE                                      u23710 7984  
                                    u26030 ABD2                                      u26015 BD90  
                                    u22760 0E32                                      u23800 82E2  
                                    u26016 BD92                                      u26120 7180  
                                    u23490 6310                                      u22770 0E34  
                                    u24380 5278                                      u24700 6C5A  
                                    u24390 527A                                      u23814 82F6  
                                    u23670 78E0                                      u26310 22AC  
                                    u26150 9D1A                                      u23815 82F2  
                                    u24640 659E                                      u23840 8362  
                                    u26048 ABDA                                      u26049 ABF6  
                                    u24490 53BC                                      u23690 7964  
                                    u26250 6A3A                                      u26330 22E0  
                                    u19220 3768                                      u25700 33B6  
                                    u27140 44B4                                      u27028 4308  
                                    u27029 431A                                      u18510 C7C6  
                                    u22990 14B2                                      u25630 32E0  
                                    u25518 1FDA                                      u25519 1FEE  
                                    u25720 33E2                                      u25528 2058  
                                    u27128 448A                                      u23785 82A2  
                                    u25529 206C                                      u27129 449C  
                                    u18530 C7BE                                      u24690 6C58  
                                    u25730 3438                                      u25570 2158  
                                    u25538 20D6                                      u25458 1CDC  
                                    u25539 20EA                                      u25459 1CFE  
                                    u18700 7A0C                                      u19260 396E  
                                    u25820 35D8                                      u27068 4396  
                                    u27069 43A8                                      u24790 3A6E  
                                    u18800 90C4                                      u18720 7A6A  
                                    u25760 34BA                                      u19514 7078  
                                    u19530 A642                                      u26810 6E60  
                                    u25850 368C                                      u25690 335C  
                                    u19515 7074                                      u19524 70B4  
                                    u19525 70B0                                      u19365 4C18  
                                    u19454 6F78                                      u19710 A732  
                                    u18830 911A                                      u25790 3566  
                                    u19455 6F74                                      u19464 6FB4  
                                    u19720 A734                                      u18760 B2B2  
                                    u26840 6EC6                                      u25960 49DE  
                                    u19465 6FB0                                      u19810 67A2  
                                    u26850 6F1E                                      u25890 484A  
                          reqevCallback@ev 01DF                       __end_of_factoryReset 883E  
                                    u19484 6FF8                                      u19740 A752  
                                    u19708 ABB0                                      u25980 4A84  
                                    u19485 6FF4                                      u19494 7034  
                                    u19750 A754                                      u19910 4F76  
                                    u18950 802C                                      u19495 7030  
                                    u18848 911E                                      u18970 847C  
                                    u19770 65EE                                      u19924 4FA6  
                                    u19925 4FA2                                      u19934 4FE2  
                                    u18990 8514                                      u26990 4244  
                                    u19935 4FDE                          _initTimedResponse C830  
                                    u19960 5006                                      u26888 8AC0  
                                    u26889 8AD2                                      u19795 6710  
                                    u19796 6714                                      u19974 5036  
                                    u19975 5032                                      u19984 5072  
                                    u19985 506E                             ?_APP_nvDefault 0001  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                 __end_of_nvTRnvrdCallback BE2A                               i2_canTxError B4E0  
         __end_of_factoryResetGlobalEvents C858                             _APP_nvValidate AF0A  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0008  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 949C  
                          __end_of_doNenrd B142                       ?_setExpeditedActions 0001  
             nvProcessMessage@valueOrError 02CC                            __end_of_doEvuln AD34  
                           _ackDiagnostics 01B5                            __end_of_doNnclr C134  
                          __end_of_doNnevn B282         sendInvertedProducedEvent@happening 01D3  
                          __end_of_doReqev 7DE4                            __end_of_doReval 96E0  
                                    i1_pop A0BA                                      i2_pop A1EC  
                          __end_of_doRqevn C006                            __end_of_getHash C64A  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 003F  
                       ?_initTimedResponse 0001                         __p_paramBlock_text 0820  
                          __end_of_highIsr 930E                              ?_leds_powerUp 0001  
                          __end_of_isEvent C4A0                            __end_of_configs EE69  
                                    _canId 00B9                                      _doSOD C714  
              ??_sendInvertedProducedEvent 00A9                                      _getEN AD34  
                                    _getNN 9560                                      _getNV BEA6  
                                    _getEv 79FA                           needsStarting@act 008D  
                     _enumerationStartTime 003B                            __end_of_readNVM B602  
                          __end_of_isrHigh 8758                                      _setNV AC3E  
                   __end_ofi2_setOutputPin 7462                                      _numEv 8BBA  
                                    have@i 0090                                      _speed 0200  
                                    _setup 9BB8                        canReceiveMessage@mp 01CB  
                      canReceiveMessage@no 01CD               __end_of_getNumTxBuffersInUse C7DE  
                          __end_of_mnsPoll 36CC                              setNV@oldValue 01FA  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B822  
                          ?_checkPowerOnPb 0001                            __end_of_setType B47E  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 0001  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01D8            mnsTRallDiagnosticsCallback@type 0001  
                                    poll@i 02F4                                      poll@m 02F5  
                         __end_ofi2_canIsr C75E                            __end_of_powerUp 8ADE  
                                    plusw2 0FDB                                      push@m 008E  
                                    push@q 008D                    reqevCallback@tableIndex 01E5  
                                    ttemp5 0055                                      ttemp6 0058  
                                    ttemp7 005C                           _setServoPosition C4F0  
                                    status 0FD8                                      wtemp8 0055  
                            ?_nvGetESDdata 0001                     __end_of_setBounceState 9BB8  
                  reqevCallback@nodeNumber 01E1                            __end_of_writeEv 3A60  
                 ?_updateModuleErrorStatus 0001                 __end_of_startTimedResponse BE68  
                             bounceDown@io 01C0                           ?_nvGetDiagnostic 0096  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01C4                            __initialization AE26  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have B060                               __end_of_main BBF0  
                             __end_of_name 0850                               __end_of_loop 6F3C  
                             __end_of_poll 44E2                               __end_of_push 483C  
                            ?_nerdCallback 01D7                           i2canFillRxFifo@m 000D  
                         _setupTimer1$1932 0098                           _setupTimer3$1936 0098  
                     __end_of_getParameter 8A02                  __end_of_initTimedResponse C836  
                   __end_of_APP_nvValidate AF7C                                     ??_have 008D  
                             ?_setNewCanId 0001                                     ??_main 00A9  
                         ?_eraseFlashBlock 0001                                     ??_loop 01EB  
                             ?_sendMessage 01BD                                     ??_poll 02EF  
                                   ??_push 0090                      __end_of_reqevCallback A31A  
                 __end_of_ackEventCheckLen C746                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01FC                          _pollsPerStepSpeed 0274  
                                   ?i1_pop 0060                                     ?i2_pop 0001  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00CC  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 8FD8                                     ?_doSOD 0001  
                    __end_of_setServoState 9B0C                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 0160                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 67CE  
                                   ?_setNV 01F7                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7A                                     ?_numEv 0001  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 0005  
                                   _CIOCON 0F70                                     ?_setup 0001  
                      APP_nvValidate@index 00A0        consumer2QProcessMessage@firstAction 02D6  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 009F  
                       setOutputState@type 0094                                  ??i2_getNV 0003  
                   ?i1_getNextWriteMessage 0060                                     i1l2113 86AE  
                         reqevCallback@nEv 01DE                                     i1l2064 C4EC  
                                   i1l2556 56CC                                     i2l2108 8724  
                                   i2l2064 C5C4                      getNumRxBuffersInUse@i 0095  
                                   i2l2556 5EB0                                     _TABLAT 0FF5  
                       rebuildHashtable@ev 01C0                     _producerProcessMessage 5EB6  
                  ackEventProcessMessage@m 01FC                                     _TBLPTR 0FF6  
                           ??_nvGetESDdata 008D                              _needsStarting A9C6  
          __end_of_consumer2QGetDiagnostic C450                                     _TXB0D0 0F26  
                                   _TXB0D1 0F27                                     _TXB0D2 0F28  
                                   _TXB0D3 0F29                                     _TXB0D4 0F2A  
                                   _TXB0D5 0F2B                                     _TXB0D6 0F2C  
                                   _TXB0D7 0F2D                           __end_of_checkLen AAC6  
                             ?_removeEvent 01CC                            ?_setBounceState 0091  
                      setServoPosition@pos 009F                             _clearAllEvents B928  
                 __end_of_APP_factoryReset C5A4                       __end_of_getTwoAction C828  
                      setServoState@action 0091                            setMultiState@io 0092  
                            _canFillRxFifo 7462                                initTicker@i 008F  
                        ?_findServiceIndex 0001                           _rebuildHashtable 7F14  
                         ??_processActions 00A9                          _canProcessMessage 9D0C  
                                   i1pop@q 0060                              teachPowerUp@i 01C6  
                                   i2pop@q 0001                            completed@action 008D  
                       finaliseOutput@type 008D                   reqevCallback@eventNumber 01E3  
               __end_of_APP_nvValueChanged 3296                            setServoState@io 0092  
                         __end_of_configIO 5148                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent BBF0                         _processEnumeration 78A0  
                              readInput@io 0093                         ?_canProcessMessage 01FC  
                   ??_getNumRxBuffersInUse 0092                           pollServos@midway 01D9  
               startDigitalOutput@pinState 01DC                             teachCheckLen@m 01CE  
             ??_timer3DoneInterruptHandler 0009                           __end_of_bounceUp 5C24  
                         pollServos@target 01D7                                     ___lmul B822  
                 __end_of_mnsGetDiagnostic C400                             ??_nerdCallback 00A9  
                                   _canIsr C64A            checkRemoveTableEntry@tableIndex 01CC  
                                   _canPri EE86                                     ___wmul C4A0  
                                ??___awdiv 009B                                     _doNerd C6C6  
                                ??___awmod 0091                      _APP_preProcessMessage C84E  
                                   _doWait 9EE6                           ??_finaliseOutput 008E  
                                   _getEVs 846A                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                            sodTRCallback@io 01E3  
                            _nvDiagnostics 01A7                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy BDA4  
                                ??_doEvlrn 00A9                                  ??_doNenrd 00A9  
                                   _isrLow 866C                                  ??_doEvuln 00A9  
                                   getNN@f 00A1                                  ??_doNnclr 00A9  
                                   clear_0 AE2E                                     clear_1 AE40  
                                   clear_2 AE4C                                  ??_doNnevn 01C6  
                                   clear_3 AE58                                     clear_4 AE64  
                                   clear_5 AE70                                     clear_6 AE7C  
                                   clear_7 AE88                                  ??_doReqev 00A9  
                                ??_doReval 01CB                                     _lowIsr 9176  
                                   _saveNV BF5A                           ___awdiv@quotient 009D  
                                   getEv@f 00A4                   __end_of_setDigitalOutput A7AC  
                          ___awmod@divisor 008F                                  ??_doRqevn 00A9  
                         flushFlashBlock@i 008F                        ?_processEnumeration 0001  
                                   have@id 008F                                  ??_getHash 00A7  
                          ??_APP_nvDefault 009F                        ??_canProcessMessage 01FE  
                                   isa$std 0001                            ___awmod@counter 0091  
                          ?_APP_nvValidate 009F                           ??_processOutputs 01CF  
                                ??_highIsr 001A                                  ??_isEvent 008D  
           __end_of_ackEventProcessMessage 69BC                   __end_of_setNormalActions C83C  
              producerProcessMessage@index 02D5                                  ??_readNVM 0094  
                 nerdCallback@serviceIndex 01D7                                  ??_isrHigh 001F  
                            i2_checkTxFifo 5C24                      ackGetDiagnostic@index 0098  
                        _canReceiveMessage 69BC                 __end_of_teachGetDiagnostic C478  
                         _nvProcessMessage 483C                                     numEv@f 00A2  
                                ??_mnsPoll 01CA                                     pop@ret 0094  
                         canFillRxFifo@ptr 006E                          ??_mnsFactoryReset 00A9  
                             __mediumconst ED28                                  ??_tickGet 0091  
                         __end_of_services EE7B                         _tableIndexToEvtIdx C80C  
              findServiceIndex@serviceType 008F                                  ??_setType 00A9  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                        doEvlrn@nodeNumber 01F1                                     tblptru 0FF8  
                             ??_FLASH_Read 008F                              _initInputScan 9C62  
                         __end_of_quantity C03E                          nvProcessMessage@m 01FC  
                       ?_canReceiveMessage 01C7                                  ??_powerUp 01C7  
                        __end_ofi1_isEvent C4F0                               i2getNV@index 0004  
               __end_of_peekTwoActionQueue A836                     getParameterFlags@flags 0091  
                             ?_setupTimer1 0001          mnsTRserviceDiscoveryCallback@step 01D8  
                             ?_setupTimer3 0001                            ??_pushTwoAction 008D  
        mnsTRserviceDiscoveryCallback@type 0001                              checkTxFifo@mp 0073  
                        __end_ofi2_isEvent C5C8                          i2_checkCANTimeout B9D0  
                     __end_of_APP_addEvent B1AE                                  ??_writeEv 01D0  
                             __p_name_text 0848                      _checkRemoveTableEntry BD16  
                      addEvent@eventNumber 01DC                          _expeditedQueueBuf 02C4  
             nvTRnvrdCallback@valueOrError 01D9                           __end_of_writeNVM BB0E  
                           ?_needsStarting 008D                        ?_tableIndexToEvtIdx 0001  
                   __end_of_clearAllEvents B97C                      mnsGetDiagnostic@index 0098  
                        __end_ofi1_tickGet B8D2                     startServoOutput@action 0091  
                     ??_processEnumeration 01C0                         ?i2_checkCANTimeout 0001  
                               __accesstop 0060                    __end_of__initialization AE8E  
                __end_of_canProcessMessage 9DAA                          __end_ofi2_tickGet B772  
                            bounceDown@tmp 01BE                        ??_canReceiveMessage 01C9  
                        EEPROM_Write@index 008F                             nvGetESDdata@id 008D  
                        EEPROM_Write@value 0091                             ?_canFillRxFifo 0001  
                           setOutputPin@io 0094                     checkRemoveTableEntry@e 01CD  
                            doEvuln@result 01D5                              ___rparam_used 0001  
                       teachCheckLen@learn 01D1                                 _eeBootFlag 0048  
                        i1tickGet@IntFlag1 0065                          i1tickGet@IntFlag2 0064  
                  ??_handleSelfEnumeration 0099                  ?_factoryResetGlobalEvents 0001  
                            ?_teachPowerUp 0001                           FLASH_Write@index 0090  
                        _getParameterFlags B772                              __end_ofi1_pop A154  
                         FLASH_Write@value 0092                              __end_ofi2_pop A284  
                      ??i2_checkCANTimeout 0016                             __pcstackCOMRAM 0001  
               ?i1_updateModuleErrorStatus 0001  mnsTRserviceDiscoveryCallback@serviceIndex 01D7  
                           _io@inputs$F849 00CE                                 _canEsdData C6E0  
                            __end_of_doSOD C72E                         ?_getParameterFlags 0001  
                            __end_of_getEN ADAE                              __end_of_getNN 9622  
                            __end_of_getNV BEE4                              __end_of_getEv 7B50  
                       __end_of_FLASH_Read BBA6                                 _ackPowerUp C252  
                   ackEventCheckLen@needed 01D0                              __end_of_setNV ACBA  
                            __end_of_numEv 8C92                              __end_of_setup 9C62  
                     ??_tableIndexToEvtIdx 008D                               i1isEvent@opc 0061  
                             ??_APP_lowIsr 0060                       _getNumTxBuffersInUse C7D2  
                   consumer2QEsdData@index 008D                         APP_factoryReset@io 01F0  
                             ?_startServos 0001                  __end_of_canReceiveMessage 6BA2  
                             ?_startOutput 01DF               nvTRnvrdCallback@serviceIndex 01D7  
               __end_of_bootProcessMessage A4DA                                  ?i2_canIsr 0001  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 0001  
                               _canTxError B47E                                 _canService EF68  
                        ??_isConsumedEvent 00A6                                 _canPowerUp 70FA  
                  producerProcessMessage@h 02D4                    producerProcessMessage@m 01FC  
                                  ??i1_pop 0062                                    ??i2_pop 0003  
                           ?_initInputScan 0001                  reqevCallback@serviceIndex 01D7  
                     __end_of_APP_testMode C85A                 rebuildHashtable@tableIndex 01C5  
             __end_of_deleteHappeningRange 8BBA                  __end_ofi2_checkCANTimeout BA24  
             consumer2QGetDiagnostic@index 0098                                    ??_doSOD 0095  
                            completed@type 008E                                    ??_getEN 0099  
                                  ??_getNN 0099                                    ??_getNV 008F  
                                  ??_getEv 009F                    startDigitalOutput@state 01D7  
                              saveNV@index 01C2                             canFillRxFifo@m 006C  
                                  ??_setNV 01F8                              ?_sendMessage2 00A6  
                            ?_sendMessage3 00A6                              ?_sendMessage4 01C5  
                            ?_sendMessage5 01C5                              ?_sendMessage6 01C5  
                            ?_sendMessage7 01C5                                    ??_numEv 009D  
                    _setupModePreviousMode 00C1                                    ??_setup 00A9  
                             canEsdData@id 008D                                saveNV@value 01BF  
                             readNVM@index 0091                   mnsProcessMessage@newMode 02EE  
                        initTicker@divider 008E                               _EEPROM_Write B282  
                               __pbssBANK0 00A9                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                             loadNvCache@i 009B                               i2isEvent@opc 0002  
                          ?_clearAllEvents 0001                 startTimedResponse@callback 0092  
                          canSendMessage@m 00A1                                 _defaultNVs BA24  
                       __end_of_APP_lowIsr C85C                        setNewCanId@newCanId 01BF  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B7CA  
                               _delayCount 0284                             _loadFlashBlock BC84  
                             _factoryReset 8758                             ??_teachPowerUp 00A9  
                            _setLEDsByMode C0A2                              addEvent@evVal 01DF  
                            addEvent@evNum 01DE                             _canDiagnostics 016A  
                            addEvent@error 01E5             __end_of_eventConsumer2QService EF20  
                   processActions@ioAction 01E7                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 02EC                         mnsProcessMessage@i 02EA  
                       mnsProcessMessage@m 01FC                       __end_of_leds_powerUp C104  
                               _bl_version EE7B                     ?_APP_preProcessMessage 008D  
                                  ?___lmul 0091                                    ?_canIsr 0001  
                     i2tickGet@currentTime 0007                                    ?___wmul 0091  
                        _bootloaderVersion 00C7                               initBounce@io 008D  
                                  ?_doNerd 0001                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C7F6                                    ?_getEVs 0001  
                        i2tickGet@IntFlag1 0006                          i2tickGet@IntFlag2 0005  
                    ?_getNumTxBuffersInUse 0001                                    ?_memcpy 008D  
                                ?_addEvent 01DA                                    _ECANCON 0F72  
                                  ?_isrLow 0001                         _mnsTRrqnpnCallback C308  
                           ___lmul@product 0099                        i1getBufferPointer@b 0062  
                                  ?_lowIsr 0001                                    ?_saveNV 01BF  
                      setOutputPosition@io 00A3                      _setTimedResponseDelay C816  
                    _producerGetDiagnostic C388                                    _BRGCON1 0E43  
                                  _BRGCON2 0E44                                    _BRGCON3 0E45  
                   processActions@peekItem 01E3                   __end_of_setServoPosition C514  
                     __end_of_nvGetESDdata C714                                 ??i2_canIsr 001A  
                       _startDigitalOutput 56D2                                    _COMSTAT 0F71  
                         _canGetDiagnostic B1AE                                 _flashBlock 00D1  
                               _flashFlags 00BA                                    i1l20414 A14A  
                                  i1l20406 A0E2                                    i1l20344 B886  
                                  i1l21402 A3FC                                    i1l21412 A410  
                                  i1l20364 B8B6                                    i1l21228 55BA  
                                  i1l21406 A406                                    i1l20390 8E9E  
                                  i1l21246 56B0                                    i1l20396 8EE0  
                                  i1l21390 A3DE                                    i1l21382 A3CA  
                                  i1l21374 A3B6                                    i1l22406 B4D2  
                                  i1l21394 A3E8                                    i1l21386 A3D4  
                                  i1l21378 A3C0                                    i1l22370 74B8  
                                  i1l22346 7464                                    i1l22380 75BE  
                                  i1l21398 A3F2                                    i1l22374 75B2  
                                  i1l22384 75CC                                    i1l22396 B4A8  
                                  i1l25124 86AA                                    i1l25070 917C  
                                  i2l13022 A27A                                    i2l13014 A212  
                                  i2l14010 BFA6                                    i2l14002 742C  
                                  i2l14102 A5CC                                    i2l14016 BFB6  
                                  i2l14080 A59A                                    i2l14072 A586  
                                  i2l14064 A572                                    i2l14152 5D9E  
                                  i2l14170 5E94                                    i2l14092 A5B8  
                                  i2l14084 A5A4                                    i2l14076 A590  
                                  i2l14068 A57C                                    i2l14096 A5C2  
                                  i2l14088 A5AE                                    i2l16026 C768  
                                  i2l12908 B722                                    i2l12928 B754  
                                  i2l15600 B50A                                    i2l15610 B534  
                                  i2l25122 8720                                    i2l12980 903E  
                                  i2l25052 9248                                    i2l12986 9080  
                                  i2l15642 7624                                    i2l15618 75D4  
                                  i2l15652 772A                                    i2l13982 72B8  
                                  i2l15646 771E                                    i2l13992 7374  
                                  i2l15656 7738                                    i2l13994 73B0  
                                  i2l13986 72F8                                    i2l13988 7334  
                                  i2l13998 73F0                                  ?_checkLen 01CA  
                           _setOutputState B8D2                     getNumRxBuffersInUse@no 0094  
                        ?_nvTRnvrdCallback 01D7                          reqevCallback@step 01D8  
                   processActions@nextType 01E4                        ?_mnsTRrqnpnCallback 01D7  
                         ??_checkPowerOnPb 00A9                          ??i2_canFillRxFifo 000D  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00A9                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A8  
                           ??_sendMessage3 00A9                             ??_sendMessage4 00A6  
                           ??_sendMessage5 00A6                             ??_sendMessage6 00A6  
                           ??_sendMessage7 00A6                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01D7                     ?_checkRemoveTableEntry 0001  
                                  _RXFCON0 0E46                           _teachDiagnostics 01B1  
                          ??_needsStarting 008F                                  ?_configIO 0001  
                               _bounceDown 2930                       __end_of_nerdCallback B350  
                           inputScan@input 01D2                                  ?_bounceUp 0001  
                isConsumedEvent@eventIndex 00A6                                    i2_getNV BF94  
                          loadFlashBlock@i 008D                            ??_canFillRxFifo 006C  
                           checkLen@needed 01CC                               _getParameter 8922  
                   __end_of_loadFlashBlock BCCE                          _sendProducedEvent 9798  
                    i2_getNextWriteMessage 8FD8                            _timerExtension1 00C6  
                          _timerExtension2 00C5                             ?_setLEDsByMode 0001  
                   mnsTRrqnpnCallback@step 01D8                     mnsTRrqnpnCallback@type 0001  
                       ?_sendProducedEvent 00A7                                poll@handled 02F3  
                     ??_mnsTRrqnpnCallback 00A9                          __end_of_findEvent A690  
                                  __Hparam 0000                               initServos@io 00A8  
                    setOutputPosition@type 00A2                              ?_popTwoAction 0001  
                                  __Lparam 0000         __end_of_timer3DoneInterruptHandler C5EA  
               _timer3DoneInterruptHandler C5C8                                 _initBounce C35E  
                   _APP_postProcessMessage C852                                 _eventTable EF80  
                     ??_startDigitalOutput 01D8                         pbDownTimer@timeout 00A8  
                              ?_canEsdData 0001                          __end_of_pbUpTimer 99B0  
                         pbUpTimer@timeout 00A8                                 _initTicker BD5E  
                                  ___awdiv A836                                 _initRomOps C788  
                                  ___awmod B060                   _consumer2QProcessMessage 3A60  
                         _ackGetDiagnostic C400                                 _initServos 7DE4  
                                ?_quantity 008D                                    ___lldiv A942  
                      ??_sendProducedEvent 00A8                          __end_of_completed A56E  
                              ?_ackPowerUp 0001                                validStart@f 009C  
             EEPROM_Write@interruptEnabled 0092                       startDigitalOutput@io 01DE  
                               ??_addEvent 01E1                                 _currentPos 0130  
                                  _doEvlrn 93D6                                 _paramBlock 0820  
                                  _doNenrd B0D2                         canProcessMessage@m 01FC  
                                  _doEvuln ACBA                                    _doNnclr C104  
                 sodTRCallback@disable_off 01DF                                    _doNnevn B21A  
                                  _doReqev 7CA4                                    _doReval 9622  
                                  __pcinit AE26                            ??i2_checkTxFifo 000D  
                              setType@type 01ED                              _teachCheckLen B542  
                                  _doRqevn BFCE                          __end_of_leds_poll 6392  
                       _startTimedResponse BE2A                                    __ramtop 0F00  
                                  _getHash C62A                                  ?_writeNVM 00A4  
                       doEvlrn@eventNumber 01F3                              ??_checkTxFifo 006C  
                                  __ptext0 BBA6                                    __ptext1 9BB8  
                                  __ptext2 C774                                    __ptext3 7DE4  
                                  __ptext4 AE98                                    __ptext5 C2DC  
                                  __ptext6 9C62                                    __ptext7 8A02  
                                  __ptext8 C224                                    __ptext9 70FA  
                   __end_of_setOutputState B928                                    _highIsr 9244  
                                  _isEvent C478                                    _configs EE29  
                                  _pbTimer 00A9                                  _T0CONbits 0FD5  
                       APP_nvDefault@index 00A3                            getEv@tableIndex 00A5  
                              ?_canTxError 0001                           _EnumerationState 0047  
                        ??_canFactoryReset 00A9                          _mnsProcessMessage 1764  
                                  _nvCache 0400                            ??_initInputScan 0097  
                               _mode_flags 0169                                  _T1CONbits 0FCD  
                              ?_canPowerUp 0001                                    _readNVM B5A2  
                        __end_of_readInput 8260                             _nvFactoryReset BEE4  
                             _getTwoAction C820                                    getEN@hi 009D  
                                  getEN@lo 009F                          ?_ackEventCheckLen 01CE  
                                  _isrHigh 86EE                          ??_teachGetESDdata 008D  
                 __end_of_rebuildHashtable 8038                                 ??_checkLen 00A7  
                         ??i2_setOutputPin 0006                                  _T3CONbits 0FB1  
                                  getNN@hi 009D                                    getNN@lo 009F  
                               _mode_state 00C4                                    getEVs@f 00A1  
                         ___awmod@dividend 008D                               _configIO$746 01C2  
                       doReqev@eventNumber 01CD                                    _mnsPoll 3296  
                       ?_mnsProcessMessage 01FC                                    _tickGet B7CA  
                             _flashCounter 00AF                          doNenrd@tableIndex 01CF  
                      ?_startTimedResponse 0091                                    _setType B41A  
                             _isEvent$4896 008D                         ??_ackEventCheckLen 00A8  
                           ??_setOutputPin 0092                    ??i1_getNextWriteMessage 0062  
                               getNV@index 0090                                 _inputState 0294  
                                  _rxQueue 004F                          doNenrd@nodeNumber 01CB  
                 processActions@nextAction 01E8                                    _powerUp 8A02  
                        __end_of_inputScan 5414                          __end_of_mnsLowIsr C7B0  
                        _consumer2QEsdData C60A                                    _txQueue 004A  
                  ?_producerProcessMessage 01FC                            defaultEvents@en 01EA  
                          defaultEvents@io 01EC                                    _started 00D0  
                               ??_configIO 01BF                                 _mnsService EF56  
                        __end_of_nvService EF56                           ??_setBounceState 0092  
                               _mnsPowerUp 8038                          __end_of_nvPowerUp C070  
                                  _writeEv 36CC                  __end_of_sendProducedEvent 984E  
                               ??_bounceUp 009F                       end_of_initialization AE8E  
                       _expeditedReadIndex 00CB                              startOutput@io 01E1  
                       ?_consumer2QEsdData 0001                        ??_mnsProcessMessage 02CC  
                             writeNVM@type 00A8                                 getEv@evNum 009D  
                         producerPowerUp@i 008D                                    memcpy@d 0094  
                                  memcpy@n 0091                                    memcpy@s 0096  
               APP_nvValueChanged@oldValue 01F1                                ?_defaultNVs 01C3  
                            ??_EEPROM_Read 008F                            ?_loadFlashBlock 0001  
                            ??_clearEvents 00A9                      __end_of_doneTwoAction C848  
                                i1u2195_25 5498                                  i1u2366_20 B9B8  
                                i1u2723_28 9222                                  i1u2723_29 9234  
                                i2u1300_44 73A4                                  i2u1300_45 73A0  
                                  lowIsr@i 007D                                  i2u1302_44 73E6  
                                i2u1302_45 73E2                                  i2u1303_44 7420  
                                i2u1303_45 741C                          _consumer2QPowerUp BCCE  
                                i2u1308_45 5CA4                                  i2u1516_40 BA0A  
                                i2u1296_44 72EE                                  i2u1296_45 72EA  
                                i2u1297_44 7328                                  i2u1297_45 7324  
                                i2u1299_44 736A                                  i2u1299_45 7366  
                        ?_APP_factoryReset 0001                             ??_popTwoAction 008D  
                               _validStart BA74                                  i2u2719_48 92EE  
                                i2u2719_49 9300                            ___lldiv@divisor 009B  
                      ??_consumer2QEsdData 008D                               writeEv@evVal 01CF  
                 __end_of_nvProcessMessage 4B6E                               writeEv@evNum 01CE  
                          ___lldiv@counter 00A3                       ??_startTimedResponse 0094  
                       ?_consumer2QPowerUp 0001                               writeEv@nextF 01D5  
                  pollTimedResponse@result 01E8                         ??_APP_factoryReset 00A9  
          eraseFlashBlock@interruptEnabled 008D                                 _pollServos 0850  
                   pollServos@beforeMidway 01D8                           ??_APP_nvValidate 00A0  
                consumer2QProcessMessage@e 02DB                  consumer2QProcessMessage@m 01FC  
                     _deleteHappeningRange 8ADE                              ??_FLASH_Write 0093  
                     nvGetDiagnostic@index 0098                                    postdec1 0FE5  
                                  postdec2 0FDD                     ??_getNumTxBuffersInUse 0092  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 0096  
                          _mnsFactoryReset ADAE                          ?_mnsGetDiagnostic 0096  
                               ??_quantity 008E                __end_of_setExpeditedActions C842  
                   ?_setTimedResponseDelay 0001                               _APP_addEvent B142  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 0096  
                           ?_teachCheckLen 01CE                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 228E                                 _tmpMessage 019E  
                       ??_mnsGetDiagnostic 0098             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset BF20                                 _servoState 0110  
                               ??_writeNVM 01BD                                 _showStatus 883E  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0164  
           deleteHappeningRange@tableIndex 01E2                          ?_setNormalActions 0001  
                       _APP_nvValueChanged 2E00                  _timedResponseServiceIndex 00BE  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01E2                                 _priorities ED29  
                       _lastActionPollTime 0158                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent BC3A                            sendMessage2@opc 00A8  
                     __end_of_teachPowerUp C0A2                            sendMessage3@opc 01C5  
                __end_of_consumer2QEsdData C62A                            sendMessage4@opc 00A6  
                          sendMessage5@opc 00A6                            sendMessage6@opc 00A6  
                          sendMessage7@opc 00A6                         _sodTRCallback$1424 01DC  
                       _sodTRCallback$1425 01DD                          _eventTeachService EF20  
           __end_of_producerProcessMessage 6124                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01CA                           setupTimer3@ticks 009A  
                   _mnsProcessMessage$3632 02EB                         _timedResponseDelay 0168  
                      __end_of_checkTxFifo 56D2                       APP_nvValueChanged@io 01F6  
                              showStatus@s 008F                              ??_findService 008F  
                          loadNvCache@temp 0099                                ?_bounceDown 0001  
                           i1_isEvent$4896 0060                        ?_APP_nvValueChanged 01F0  
                            clearEvents@io 01E4                              ??_bootEsdData 008D  
                               isEvent@opc 008E                     ?i2_getNextWriteMessage 0001  
                  peekTwoActionQueue@index 008E                     i2getNextWriteMessage@q 0001  
                          ??_setLEDsByMode 0090                  __end_of_consumer2QPowerUp BD16  
                            _sodTRCallback 856E                                  i1_isEvent C4C8  
                      teachCheckLen@needed 01D0            ??_mnsTRserviceDiscoveryCallback 01D9  
                        ??_flushFlashBlock 008E                                  i2_isEvent C5A4  
                       _teachGetDiagnostic C450     sendInvertedProducedEvent@state_to_send 01D6  
               deleteHappeningRange@number 01DA                          _heartbeatSequence 00BF  
                      _teachProcessMessage 228E           sendProducedEvent@producedEventEN 01CA  
         sendProducedEvent@producedEventNN 01CC                                  i1_tickGet B87A  
                        removeTableEntry@f 01CA                             bounceUp@midway 00A6  
                            ??_bootPowerUp 0097                             _normalQueueBuf 0480  
                       _peekTwoActionQueue A7AC                 consumer2QProcessMessage@ca 02DA  
                                i2_tickGet B718                 consumer2QProcessMessage@io 02D8  
                               bounceUp@io 00A7                                ?_initBounce 0001  
        sodTRCallback@disable_SOD_response 01D9                               _APP_testMode C858  
                          _isConsumedEvent C55C                      ?_deleteHappeningRange 01DA  
            __end_of_handleSelfEnumeration 8366               ??_timer1DoneInterruptHandler 0009  
                      __end_of_EEPROM_Read C6C6                        ?_teachGetDiagnostic 0096  
                      __end_of_clearEvents BEA6                          _canTransmitFailed 00B8  
              ??i1_updateModuleErrorStatus 0060                                ?_initTicker 0001  
                              ?_initRomOps 0001                       ??_APP_nvValueChanged 01F2  
                              ?_initServos 0001                       __end_of_sendMessage2 C194  
                     __end_of_sendMessage3 C2AE                       __end_of_sendMessage4 C224  
                     __end_of_sendMessage5 C1F4                       __end_of_sendMessage6 C164  
                     __end_of_sendMessage7 C1C4                             __end_of___lmul B87A  
                            _defaultEvents 773E                             __end_of_canIsr C66A  
                           __end_of_canPri EE8B                             __end_of___wmul C4C8  
                      ?_peekTwoActionQueue 0001                             __end_of_doNerd C6E0  
               removeTableEntry@tableIndex 01CB                             __end_of_doWait 9F84  
                           __end_of_getEVs 856E                              ??_APP_highIsr 0009  
                          ?_nvFactoryReset 0001                           _removeTableEntry 7B50  
                          needsStarting@io 0091                             __end_of_memcpy BDEA  
                           __end_of_isrLow 86EE                         canReceiveMessage@m 01C7  
                       canReceiveMessage@p 01CE                             __end_of_lowIsr 9244  
                           __end_of_saveNV BF94                 __end_ofi1_getBufferPointer A446  
                     ?_teachProcessMessage 01FC                  __end_of_eventTeachService EF32  
                      __end_of_FLASH_Write 9176                      __end_of_APP_nvDefault 8E36  
                           _canSendMessage 4B6E                          ??_producerEsdData 008D  
                             _name_absaddr 0848                        start_initialization AE26  
                         ??_clearAllEvents 01C6                            _checkCANTimeout B97C  
                             _leds_powerUp C0D4                       ??_teachGetDiagnostic 0098  
                              __end_of_pop A0BA                              factoryReset@i 01F5  
                              ?_mnsPowerUp 0001               ?_mnsTRallDiagnosticsCallback 01D7  
                     setBounceState@action 0091                   setDigitalOutput@pinState 0098  
                        ??_producerPowerUp 008D                       ??_peekTwoActionQueue 008D  
                              _CANSTATbits 0F6E                             ?_sodTRCallback 01D7  
                       i2canFillRxFifo@ptr 000F                      __end_of_pushTwoAction B660  
                      __end_of_pbDownTimer 9A60                         _bootProcessMessage A446  
                               ?i1_isEvent 0001                   producerProcessMessage@ev 02D2  
                      _getNextWriteMessage 8C92                                 ?i2_isEvent 0001  
                             _nvGetESDdata C6FA                   __end_of_canGetDiagnostic B21A  
                  ??_APP_preProcessMessage 008F                    __end_of_mnsFactoryReset AE26  
                      __end_of_findService A1EC                              ??_loadNvCache 0097  
                               ?i1_tickGet 0060                                ?_validStart 0001  
                       setServoPosition@io 00A0                        __end_of_bootEsdData C538  
                        isConsumedEvent@ev 00A7                        ?_bootProcessMessage 01FC  
                               ?i2_tickGet 0001                               doEvlrn@evVal 01F6  
                             doEvlrn@evNum 01F5                            numEv@tableIndex 00A3  
                   startTimedResponse@type 0094               __end_of_deleteTwoActionQueue AB44  
                             doEvlrn@error 01F7                                ?_pollServos 0001  
               __end_of_evtIdxToTableIndex C80C                   rebuildHashtable@chainIdx 01C4  
                     __end_of_setOutputPin 70FA                                   ??___lmul 0099  
                          ??_teachCheckLen 00A8                                   ??_canIsr 0079  
                      _universalEventsInit C774                                   ??___wmul 0095  
                             doNenrd@index 01CA                                   ??_doNerd 0095  
                                 ??_doWait 009F                                   ??_getEVs 009D  
                           ?_defaultEvents 01E9                        bootProcessMessage@m 01FC  
                       addEvent@forceOwnNN 01E0                               _nerdCallback B2EA  
                          i2_canFillRxFifo 75D2                 ?i2_updateModuleErrorStatus 0001  
                  _updateModuleErrorStatus C7DE                        __end_of_bootService EF44  
                                 ??_memcpy 0093                                   ??_isrLow 007E  
                      __end_of_bootPowerUp 93D6                                   ??_lowIsr 0079  
                                 ??_saveNV 01C0                     __end_of_canSendMessage 4E66  
                              ?_showStatus 0001                              ??_initOutputs 008D  
                 sodTRCallback@send_off_ok 01DB                       ?_getNextWriteMessage 008D  
                    ??_teachProcessMessage 02CC                               checkTxFifo@m 0071  
                              _checkTxFifo 5414                           _startMultiOutput 9F84  
                        ?_setServoPosition 009F                              ?i2_canTxError 0001  
                       startMultiOutput@io 0093                           _startServoOutput 949C  
                              __pbssBIGRAM 0548                              _reqevCallback A284  
       consumer2QProcessMessage@tableIndex 02D4                    ??_checkRemoveTableEntry 00A9  
    consumer2QProcessMessage@masked_action 02D9                       ??_bootProcessMessage 01FE  
                              __pbssCOMRAM 002B                      peekTwoActionQueue@qty 008D  
                        ??_nvGetDiagnostic 0098                       __end_of_popTwoAction C2DC  
                       ??_setServoPosition 00A0                           canSendMessage@mp 0099  
                         canSendMessage@no 00A0                              __pcstackBANK0 0060  
                            __pcstackBANK1 01BD                              __pcstackBANK2 02CC  
                      __end_of_APP_highIsr C774                  i1_updateModuleErrorStatus C7EA  
       consumer2QProcessMessage@nextAction 02D5                       ?_universalEventsInit 0001  
                               setNV@index 01FB                              _setMultiState 8F08  
                          _happening2Event 0300                              _setServoState 9A60  
                               setNV@value 01F7                         startServoOutput@io 0093  
                       addEvent@tableIndex 01E8                   __end_of_ackGetDiagnostic C428  
                           i2_isEvent$4896 0001                 setTimedResponseDelay@delay 008D  
                                addEvent@e 01E7                                  addEvent@f 01E6  
                                 ?i2_getNV 0001                         addEvent@nodeNumber 01DA  
            ??_mnsTRallDiagnosticsCallback 01D9                   _factoryResetGlobalEvents C856  
                  __end_of_isConsumedEvent C580                         initInputScan@input 0099  
    sendInvertedProducedEvent@can_send_off 01D2                                _EEPROM_Read C6A8  
               ??_consumer2QProcessMessage 02CC                         initTicker@priority 008D  
                              _clearEvents BE68                    ?_APP_postProcessMessage 008D  
                        ??_eraseFlashBlock 008D                                  __pnvBANK0 00D1  
                          i2checkTxFifo@mp 0014                           setBounceState@io 0092  
                   ??_deleteHappeningRange 01DB                             mnsPowerUp@temp 0098  
                             doNnevn@count 01CB                                  __pmainSec 866C  
                     teachProcessMessage@m 01FC                           _getBufferPointer A31A  
                          _canFactoryReset C68A                ?_timer3DoneInterruptHandler 0001  
    __end_of_mnsTRserviceDiscoveryCallback A71E              _mnsTRserviceDiscoveryCallback A690  
             mnsTRallDiagnosticsCallback@d 01DD                                 nvPowerUp@i 009C  
                          tickGet@IntFlag1 0092                            tickGet@IntFlag2 0091  
                                __pintcode 0808                            _teachGetESDdata C538  
                             ??_canEsdData 008D         handleSelfEnumeration@incomingCanId 009D  
                        _lastInputScanTime 015C                              __pmediumconst ED28  
                 ??_ackEventProcessMessage 01FE                       i1tickGet@currentTime 0066  
                              ackPowerUp@i 008D                           getEVs@tableIndex 00A3  
                                 ?___awdiv 0097                                  __ptext100 0850  
                                __ptext101 C35E                                  __ptext110 BBF0  
                                __ptext102 5988                                  __ptext111 B350  
                                __ptext103 2930                                  __ptext200 C64A  
                                __ptext120 9EE6                                  __ptext112 B8D2  
                                __ptext104 6BA2                                  __ptext201 C79C  
                                __ptext121 C842                                  __ptext113 9A60  
                                __ptext105 6392                                  __ptext210 8E36  
                                __ptext202 B97C                                  __ptext130 C1F4  
                                __ptext122 C2AE                                  __ptext114 8F08  
                                __ptext106 B6BE                                  __ptext211 A3B0  
                                __ptext203 B47E                                  __ptext131 AB44  
                                __ptext123 C714                                  __ptext115 9B0C  
                                __ptext107 949C                                  __ptext220 A1EC  
                                __ptext212 C85A                                  __ptext204 5414  
                                __ptext140 C788                                  __ptext132 4B6E  
                                __ptext124 BE2A                                  __ptext116 A9C6  
                                __ptext108 9F84                                  __ptext221 C5A4  
                                __ptext205 B87A                                  __ptext141 B660  
                                __ptext133 44E2                                  __ptext125 AF7C  
                                __ptext117 C820                                  __ptext109 56D2  
                              _FLASH_Write 90A8                                  __ptext230 BF94  
                                __ptext222 75D2                                  __ptext214 9244  
                                __ptext206 A0BA                                  __ptext150 C68A  
                                __ptext142 883E                                  __ptext134 C478  
                                __ptext126 AAC6                                  __ptext118 A7AC  
                                __ptext223 C7F6                                  __ptext215 C746  
                                __ptext207 C4C8                                  __ptext151 BEE4  
                                __ptext143 9900                                  __ptext135 AFEE  
                                __ptext127 A4DA                                  __ptext119 C828  
                                __ptext224 8FD8                                  __ptext216 B9D0  
                                __ptext208 7462                                  __ptext160 B41A  
                                __ptext152 ADAE                                  __ptext144 99B0  
                                __ptext136 C7D2                                  __ptext128 5148  
                                __ptext225 A56E                                  __ptext217 B4E0  
                                __ptext209 C7EA                                  __ptext161 BA24  
                                __ptext153 C848                                  __ptext145 6124  
                                __ptext137 C006                                  __ptext129 9798  
                                __ptext226 C75E                                  __ptext218 5C24  
                                __ptext170 BD16                                  __ptext162 BF5A  
                                __ptext154 B928                                  __ptext146 B7CA  
                                __ptext138 8C92                                  __ptext227 C5C8  
                                __ptext219 B718                                  __ptext171 7B50  
                                __ptext163 BC3A                                  __ptext155 8D64  
                                __ptext147 B822                                  __ptext139 8156  
                                __ptext228 C66A                                  __ptext180 4E66  
                                __ptext172 7F14                                  __ptext164 773E  
                                __ptext156 C4A0                                  __ptext148 A942  
                                __ptext229 72B4                                  __ptext181 BAC2  
                                __ptext173 79FA                                  __ptext165 BE68  
                                __ptext157 B060                                  __ptext149 8758  
                                __ptext190 A71E                                  __ptext182 90A8  
                                __ptext174 846A                                  __ptext166 8ADE  
                                __ptext158 A836                                  __ptext191 6F3C  
                                __ptext183 BC84                                  __ptext175 BA74  
                                __ptext167 984E                                  __ptext159 C580  
                                __ptext192 BEA6                                  __ptext184 A8BC  
                                __ptext176 A600                                  __ptext168 65CA  
                                __ptext193 B5A2                                  __ptext185 BB0E  
                                __ptext177 9560                                  __ptext169 36CC  
                                __ptext194 BB5A                                  __ptext186 C7B0  
                                __ptext178 C62A                                  __ptext195 C6A8  
                                __ptext187 C7C2                                  __ptext179 AD34  
                                 ?___awmod 008D                                  __ptext196 C856  
                                __ptext188 B282                                  __ptext197 C858  
                                __ptext189 C7DE                                  __ptext199 9176  
                             defaultNVs@io 01C6                                  _findEvent A600  
                                 ?___lldiv 0097                               ??_ackPowerUp 008D  
                   _startDigitalOutput$808 01DA                        __end_of_loadNvCache BC84  
                             doReqev@evVal 01D0                               doReqev@evNum 01CF  
                          getNN@tableIndex 00A2                           processActions@io 01E9  
                             doReval@enNum 01CD                         sodTRCallback@flags 01E2  
                             doReval@evVal 01CE                               doReval@evNum 01CA  
                                 ?_doEvlrn 01F1                                   ?_doNenrd 0001  
                                 ?_doEvuln 01D1                                __pintcodelo 0818  
                                 ?_doNnclr 0001                                   ?_doNnevn 0001  
                      i2getBufferPointer@b 0003                                   ?_doReqev 01CB  
                                 ?_doReval 01CA                          teachGetESDdata@id 008D  
                       sodTRCallback@value 01E0          __end_ofi2_updateModuleErrorStatus C802  
                                 ?_doRqevn 0001                      ??_getNextWriteMessage 008F  
                                 ?_getHash 00A3                   deleteActionRange@updated 01E0  
                  __end_of_checkCANTimeout B9D0                              ??_setNewCanId 00A9  
                                _pbUpTimer 9900                            ?_canSendMessage 0099  
                            ??_sendMessage 00A3                                   ?_highIsr 0001  
                           ??i2_canTxError 0016                                   ?_isEvent 0001  
                             ??_canTxError 0075                           _findServiceIndex AF7C  
                                _completed A4DA                           nerdCallback@step 01D8  
                         nerdCallback@type 0001                             ?_reqevCallback 01D7  
                             ??_canPowerUp 0097                             _heartbeatTimer 0150  
                                 ?_readNVM 0091                                   ?_isrHigh 0001  
                              _COMSTATbits 0F71                    i1getNextWriteMessage@wr 006B  
                                _leds_poll 6124                 producerGetDiagnostic@index 0098  
                                 ?_mnsPoll 0001                          ?_rebuildHashtable 0001  
                         _canIsr$intlevel1 C652                       setOutputPosition@pos 00A1  
                                 ?_tickGet 008D    mnsTRallDiagnosticsCallback@serviceIndex 01D7  
                              _pbDownTimer 99B0                                  checkLen@m 01CA  
                                 ?_setType 01ED           ackEventProcessMessage@eventIndex 02CE  
                    ??_universalEventsInit 008D                             defaultNVs@type 01C3  
                           ?_setMultiState 0091                    startBounceOutput@action 008D  
                      __end_of_initOutputs C308                           ??_loadFlashBlock 008D  
                           ?_setServoState 0091                                   ?_powerUp 0001  
                                _readInput 8156                         ??_rebuildHashtable 01BD  
                          ??_sodTRCallback 00A9                                _findService A154  
            __end_ofi1_getNextWriteMessage 8F08                                   ?_writeEv 01CE  
                          startServos@type 01DB                                _flashDelays 0120  
                       processActions@type 01E6                                  _expedited 0049  
                              _bootEsdData C514                         __end_of_canEsdData C6FA  
                    __end_of_needsStarting AA48                                _flashBuffer 0348  
                           doReval@evIndex 01CC                                ??i1_isEvent 0060  
            deleteHappeningRange@happening 01E0                               ??_defaultNVs 01C4  
                                _inputScan 5148             __end_of_APP_postProcessMessage C856  
                          _eventAckService EED8                                  _mnsLowIsr C79C  
                       __end_of_ackPowerUp C280                                  _nvService EF44  
                           ___wmul@product 0095                                  _loopCount 0254  
                            ??_removeEvent 00A9                                ??i2_isEvent 0001  
                     sendProducedEvent@opc 01C9                                   _LATBbits 0F8A  
                                _nvPowerUp C03E                      __end_of_canFillRxFifo 75D2  
                        findEvent@chainIdx 01C8                            _isNoServoPulses C7C2  
               __end_ofi2_getBufferPointer A600                    getNumRxBuffersInUse@ptr 0092  
                                 _PIE1bits 0F9D                                   _PIE2bits 0FA0  
                     rebuildHashtable@hash 01C2                           ?_mnsFactoryReset 0001  
                                 _PIE5bits 0F76                                ??i1_tickGet 0064  
                                _rxBuffers 07C8                         __p_eventTable_text EF80  
                                getHash@en 00A5                                  getHash@nn 00A3  
                  __end_ofi2_canFillRxFifo 773E                             _flashFlushTime 0140  
   __end_of_APP_isSuitableTimeToWriteFlash C7C2             _APP_isSuitableTimeToWriteFlash C7B0  
                        _channelDefaultNVs EE8B                                  _targetPos 002B  
                              _bootService EF32         __end_of_timer1DoneInterruptHandler C68A  
               _timer1DoneInterruptHandler C66A                                ??i2_tickGet 0005  
                       __end_of_canTxError B4E0                         __end_of_canService EF7A  
                             _teachPowerUp C070                                  _pollCount 0264  
                              _bootPowerUp 930E                                   _PIR1bits 0F9E  
                                 _PIR2bits 0FA1                         __end_of_canPowerUp 72B4  
                        ?_nvProcessMessage 01FC                    ??_setTimedResponseDelay 008D  
                                 _PIR5bits 0F77                          doReqev@tableIndex 01D2  
                  ??_producerGetDiagnostic 0098                            ??_defaultEvents 00A9  
                                _txBuffers 0500                             _mnsDiagnostics 0190  
                ??_updateModuleErrorStatus 008D                                   _RCONbits 0FD0  
                        doReqev@nodeNumber 01CB                           ??_setOutputState 0095  
                              _pbWasPushed 00C0                                   _RXF0SIDL 0EE1  
            startDigitalOutput@actionState 01DD                         ??_nvProcessMessage 01FE  
                                 _RXM0EIDH 0EFA                                   _RXM0EIDL 0EFB  
                               ?_findEvent 01BD                                   _TXB0SIDH 0F21  
                                 _TXB0SIDL 0F22                                   _TXB1SIDH 0F11  
                                 _TXB1SIDL 0F12                                   _TXB2SIDH 0F01  
                                 _TXB2SIDL 0F02                                   _RXFBCON0 0E71  
                                 _RXM0SIDH 0EF8                                   _RXM0SIDL 0EF9  
                           pushTwoAction@a 008D                sodTRCallback@event_inverted 01E1  
                          inputScan@change 01D1                        i2setOutputPin@state 0005  
                        _stepsPerPollSpeed 0100                          _teachFactoryReset C848  
                               ?_pbUpTimer 0001                                  configIO@i 01C6  
                              _bounceState 0244                                _APP_highIsr C75E  
                           sendMessage@len 01BD                             sendMessage@opc 00A5  
                        _timedResponseTime 0144                          ___wmul@multiplier 0091  
                        _timedResponseStep 00BB                          _timedResponseType 00BC  
                                _startWait 0154                                  _startTime 0043  
                               ?_completed 008D                                   i2_canIsr C746  
                    __end_ofi2_checkTxFifo 5EB6                           _enumerationState 00B7  
                             doRqevn@count 01C6                                  _transport 0166  
                       ?_teachFactoryReset 0001                          defaultEvents@type 01E9  
                       __end_of_defaultNVs BA74                                 ?_leds_poll 0001  
                    __end_of_initInputScan 9D0C                            _flushFlashBlock A8BC  
               processActions@simultaneous 01E2                    ??i2_getNextWriteMessage 0003  
                      __end_of_setNewCanId B41A                        __end_of_sendMessage ABC2  
                               ?_readInput 0001                             doWait@duration 009D  
                            ??_setupTimer1 0095                              ??_setupTimer3 0095  
                     _deleteTwoActionQueue AAC6                            _eventCoeService EEEA  
                             ??_bounceDown 009F                        ??_teachFactoryReset 00A9  
                          checkLen@service 01CD                         __end_of_bl_version EE86  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 C164                               _sendMessage3 C280  
                             _sendMessage4 C1F4                               _sendMessage5 C1C4  
                             _sendMessage6 C134                               _sendMessage7 C194  
                                 i1pop@ret 0067                                   i2pop@ret 0008  
                          startOutput@type 01E0                            nvFactoryReset@i 01C1  
                               ?_inputScan 0001                                 ?_mnsLowIsr 0001  
                  __end_of_canFactoryReset C6A8                   __end_of_removeTableEntry 7CA4  
                         ?_isConsumedEvent 0001                    __end_of_teachGetESDdata C55C  
                               ?_nvPowerUp 0001                  __end_of_channelDefaultNVs EED8  
             __end_of_eventProducerService EF0E                     handleSelfEnumeration@p 0097  
                               _EECON1bits 0F7F                        startBounceOutput@io 008E  
                              _loadNvCache BC3A                                   __Hrparam 0000  
                              _eventChains 0548                           finaliseOutput@io 0001  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01EB                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01D0  
                          _producerEsdData C5EA                           ??_nvFactoryReset 01BF  
                             ??_initTicker 008D                        __end_of_removeEvent C35E  
                             ??_initRomOps 008D                     removeEvent@eventNumber 01CE  
 consumer2QProcessMessage@nextSimultaneous 02D7                               ??_initServos 00A4  
                __end_of_teachFactoryReset C84E                    sodTRCallback@send_on_ok 01DA  
                                 _addEvent 65CA                          _startBounceOutput B350  
           ?_mnsTRserviceDiscoveryCallback 01D7                             _processActions 6392  
                       __end_of_bounceDown 2E00                            ??_reqevCallback 01D9  
                            ??_startServos 00A9                           ?_checkCANTimeout 0001  
                            ??_startOutput 00A9                                _initOutputs C2DC  
                       ?_startBounceOutput 008D                            _producerPowerUp C224  
                       doNenrd@eventNumber 01CD                  rebuildHashtable@happening 01C3  
                             setType@index 01EE                                   _checkLen AA48  
                          ??_setMultiState 0092                            ??_setServoState 0092  
                           i2checkTxFifo@m 0012                             _finaliseOutput C828  
                      _producerDiagnostics 01AD                    deleteActionRange@action 01E1  
                            initOutputs@io 008D                       processActions@action 01EA  
          __end_of_updateModuleErrorStatus C7EA                    __end_of_eventAckService EEEA  
                               _FLASH_Read BB5A                 ?_sendInvertedProducedEvent 01CF  
                    ?_deleteTwoActionQueue 0001                      getNextWriteMessage@wr 0098  
                                 __ptext10 C03E                                   __ptext11 8038  
                                 __ptext20 5EB6                                   __ptext12 C252  
                                 __ptext21 9D0C                                   __ptext13 930E  
                               _T1GCONbits 0FAA                                   __ptext30 9622  
                                 __ptext22 483C                                   __ptext14 BCCE  
                                 __ptext31 7CA4                                   __ptext23 1764  
                                 __ptext15 C070                                defaultNVs@i 01C7  
                                 __ptext40 B142                                   __ptext32 B21A  
                                 __ptext24 67CE                                   __ptext16 C0D4  
                                 __ptext41 ABC2                                   __ptext33 C104  
                                 __ptext25 A446                                   __ptext17 C830  
                                 __ptext50 8BBA                                   __ptext42 A284  
                                 __ptext34 C6C6                                   __ptext26 3A60  
                                 __ptext18 BD5E                                   __ptext51 C80C  
                                 __ptext43 B2EA                                   __ptext35 B0D2  
                                 __ptext27 228E                                   __ptext19 416C  
                                 __ptext60 C514                                   __ptext52 AC3E  
                                 __ptext44 BDEA                                   __ptext36 C802  
                                 __ptext28 B542                                   __ptext61 C60A  
                                 __ptext53 2E00                                   __ptext45 A690  
                                 __ptext37 ACBA                                   __ptext29 BFCE  
                                 __ptext70 C134                                   __ptext62 C538  
                                 __ptext54 C816                                   __ptext46 8366  
                                 __ptext38 C334                                   __ptext71 C280  
                                 __ptext63 C388                                   __ptext55 C4F0  
                                 __ptext47 C308                                   __ptext39 93D6  
                                 __ptext80 69BC                                   __ptext72 8922  
                                 __ptext64 B1AE                                   __ptext56 AF0A  
                                 __ptext48 856E                                   __ptext81 78A0  
                                 __ptext73 B772                                   __ptext65 C3B0  
                                 __ptext57 C5EA                                   __ptext49 3DF0  
                                 __ptext90 A154                                   __ptext82 B3B6  
                                 __ptext74 3296                                   __ptext66 C3D8  
                                 __ptext58 C6E0                                   __ptext91 C72E  
                                 __ptext83 A020                                   __ptext75 C0A2  
                                 __ptext67 C400                                   __ptext59 C6FA  
                                 __ptext92 AA48                                   __ptext84 BDA4  
                                 __ptext76 C164                                   __ptext68 C428  
                                 __ptext93 C1C4                                   __ptext85 8260  
                                 __ptext77 C836                                   __ptext69 C450  
                                 __ptext94 C84E                                   __ptext86 BF20  
                                 __ptext78 C83C                                   __ptext95 C852  
                                 __ptext87 A31A                                   __ptext79 B602  
                                 __ptext96 6D74                                   __ptext88 C194  
                                 __ptext97 96E0                                   __ptext89 C55C  
                                 __ptext98 9DAA                                   __ptext99 9E48  
                      ??_startBounceOutput 008E               __end_of_getNumRxBuffersInUse BF5A  
                  __end_of_isNoServoPulses C7D2                               _setOutputPin 6F3C  
                     processActions@nextIo 01E5                               ??_mnsPowerUp 0097  
                                 _configIO 4E66                                   _ledTimer 0148  
                  deleteActionRange@number 01DA                             _processOutputs 6BA2  
                        _APP_GetEventState 3DF0                                   _ledState 00B1  
                        sodTRCallback@step 01D8                         __end_of_initBounce C388  
                        sodTRCallback@type 0001                              ?_EEPROM_Write 008F  
                       __end_of_eventTable FF70                                   _bounceUp 5988  
                               _T3GCONbits 0FB0                     i1getNextWriteMessage@q 0060  
                       __end_of_initTicker BDA4                         __end_of_initRomOps C79C  
                       i1_getBufferPointer A3B0                         ?_APP_GetEventState 0001  
                       __end_of_initServos 7F14           __end_of_consumer2QProcessMessage 3DF0  
                                setType@io 01EF                                   doNnevn@f 01CA  
                                 doNnevn@i 01CC                 sendProducedEvent@happening 01CE  
                       __end_of_paramBlock 0840                             canPowerUp@temp 0098  
                    __end_of_setLEDsByMode C0D4                        __end_of_setupTimer1 9EE6  
                      __end_of_setupTimer3 9E48                       __end_ofi2_canTxError B542  
                            ?_factoryReset 0001                   __end_of_startMultiOutput A020  
                            _configIO$8092 01C1                           _nvTRnvrdCallback BDEA  
                            findEvent@hash 01C7                   __end_of_startServoOutput 9560  
                             ??_validStart 0097                                   doRqevn@i 01C7  
                        ?_canGetDiagnostic 0096                             writeEv@nextIdx 01D9  
                              getEVs@evIdx 00A2             consumer2QProcessMessage@change 02D0  
           consumer2QProcessMessage@action 02DC                           ?i2_canFillRxFifo 0001  
                              getEVs@evNum 00A4                        ?i1_getBufferPointer 0060  
                      ??_APP_GetEventState 009F              __end_of_APP_preProcessMessage C852  
            ackEventProcessMessage@eventEN 02CC              ackEventProcessMessage@eventNN 02CF  
                             _popTwoAction C2AE                         ??_canGetDiagnostic 0098  
                             ??_pollServos 01CF                                   isa$xinst 0000  
                                 _services EE69                  __end_of_startBounceOutput B3B6  
                   __end_of_processActions 65CA                   clearAllEvents@tableIndex 01CA  
                                 int$flags 0054                            _nvGetDiagnostic C3B0  
                                 highIsr@i 001E                                ??_findEvent 01C1  
                                 _quantity C006                      _handleSelfEnumeration 8260  
              ??i2_updateModuleErrorStatus 0001                                 _APP_lowIsr C85A  
                   sendProducedEvent@onOff 00A7                         __end_of_mnsService EF68  
                  __end_of_flushFlashBlock A942                          writeEv@tableIndex 01D8  
                       __end_of_mnsPowerUp 8156                          _setOutputPosition AE98  
                             ??_showStatus 008D                                ??_pbUpTimer 00A4  
                         processOutputs@io 01D0                                   _writeNVM BAC2  
               processEnumeration@newCanId 01C5                     APP_addEvent@forceOwnNN 01EF  
                              _setNewCanId B3B6                               ?_checkTxFifo 0001  
                             pollServos@io 01DA                                ??_completed 008F  
                              _sendMessage AB44                     __end_of_finaliseOutput C830  
                           startOutput@act 01DF                    __end_of_eventCoeService EEFC  
                            writeNVM@index 00A4                         ?_setOutputPosition 00A1  
                                quantity@q 008D                              writeNVM@value 00A7  
                              _OSCTUNEbits 0F9B                                 _INTCONbits 0FF2  
                              ??_leds_poll 009F                 ??_factoryResetGlobalEvents 008D  
                       _evtIdxToTableIndex C802                       ??i1_getBufferPointer 0062  
                    canGetDiagnostic@index 0099                                   memcpy@d1 008D  
                                 memcpy@s1 008F                     __end_of_processOutputs 6D74  
                __end_of_APP_GetEventState 416C                   __end_of_getBufferPointer A3B0  
                          _eraseFlashBlock BB0E                          APP_addEvent@evVal 01EE  
            __end_of_checkRemoveTableEntry BD5E                          APP_addEvent@evNum 01ED  
                       __end_of_validStart BAC2                        __end_of_startServos 9798  
                  teachGetDiagnostic@index 0098                                ??_readInput 0091  
                      __end_of_startOutput B718                     _ackEventProcessMessage 67CE  
                  deleteTwoActionQueue@qty 008D                             ??_EEPROM_Write 0092  
                      ??_setOutputPosition 00A3                 __end_of_processEnumeration 79FA  
                              getHash@hash 00A8                         __end_of_pollServos 1764  
                        ?_ackGetDiagnostic 0096                                   intlevel1 0000  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 0001  
                            ?_getParameter 0001                                ??_inputScan 01CF  
                             _servoInBlock 00C9                                ??_mnsLowIsr 0060  
                     getNextWriteMessage@q 008D                           ?_canFactoryReset 0001  
                   APP_addEvent@tableIndex 01F0                                   numEv@num 00A1  
                             ?_EEPROM_Read 008D                           ___lldiv@dividend 0097  
                       ??_ackGetDiagnostic 0098            sendInvertedProducedEvent@invert 01D0  
                           ??_factoryReset 01F1                    __end_of_producerEsdData C60A  
                              ??_nvPowerUp 009C                               ?_clearEvents 0001  
                         _ackEventCheckLen C72E                      removeEvent@tableIndex 01D0  
                         ?_teachGetESDdata 0001                   __end_of_findServiceIndex AFEE  
                              _removeEvent C334                     APP_addEvent@nodeNumber 01E9  
                              _TXB0CONbits 0F20                              _doneTwoAction C842  
                       __end_of_showStatus 8922             mnsTRrqnpnCallback@serviceIndex 01D7  
                    removeEvent@nodeNumber 01CC                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01E3                         __end_of_priorities EE29  
                         ??_canSendMessage 009B                __end_of_teachProcessMessage 2930  
               __end_of_tableIndexToEvtIdx C816                  sodTRCallback@serviceIndex 01D7  
                     __end_of_canTransport EF7E                               ?_FLASH_Write 0090  
                  __end_of_producerPowerUp C252                         tickGet@currentTime 0093  
                          ?_processActions 0001                              findService@id 0091  
                __end_of_setOutputPosition AF0A                                   powerUp@i 01CB  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse ABC2  
                    __end_of_teachCheckLen B5A2                   ??_producerProcessMessage 02CC  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 0001                          FLASH_Read@address 008D  
                         _APP_factoryReset C580                            ?_finaliseOutput 008D  
                  nerdCallback@eventNumber 01DB                              ?_getTwoAction 0001  
                              _servoActive 00B3                           _ticksWhenStopped 0388  
                         ___lldiv@quotient 009F                       producerEsdData@index 008D  
                     _eventProducerService EEFC             sendInvertedProducedEvent@state 01CF  
                  _consumer2QGetDiagnostic C428                     ??_deleteTwoActionQueue 008D  
                        _deleteActionRange 984E                               ?_pbDownTimer 0001  
                              findEvent@en 01C5                                findEvent@nn 01C3  
                        writeEv@startIndex 01D4                       findEvent@eventNumber 01BF  
                                 writeEv@e 01D6                                   writeEv@f 01D7  
                          ?_processOutputs 0001                                ?_FLASH_Read 008D  
                            bootEsdData@id 008D                        ??_pollTimedResponse 01E6  
                         _mnsGetDiagnostic C3D8                               findService@i 0092  
                       ?_deleteActionRange 01DA               _timedResponseAllServicesFlag 00BD  
                              _setupTimer1 9E48                                _setupTimer3 9DAA  
                         ?_isNoServoPulses 0001                               ?_findService 008D  
                   startMultiOutput@action 0091                  i2_updateModuleErrorStatus C7F6  
                           ??_getParameter 0092                               ?_bootEsdData 0001  
                        sendMessage2@data1 00A6                          sendMessage2@data2 00A7  
                        sendMessage3@data1 00A6                          sendMessage3@data2 00A7  
                        sendMessage3@data3 00A8                          sendMessage4@data1 01C5  
                        sendMessage4@data2 01C6                          sendMessage4@data3 01C7  
                        sendMessage4@data4 01C8                           _setDigitalOutput A71E  
                        getBufferPointer@b 008F                          sendMessage5@data1 01C5  
                        sendMessage5@data2 01C6                          sendMessage5@data3 01C7  
                        sendMessage5@data4 01C8                          sendMessage5@data5 01C9  
                    _consumer2QDiagnostics 01B9                          sendMessage6@data1 01C5  
                        sendMessage6@data2 01C6                          sendMessage6@data3 01C7  
                        sendMessage6@data4 01C8                          sendMessage6@data5 01C9  
                        sendMessage6@data6 01CA                           bootPowerUp@found 0098  
                          _last_mode_flags 00C2                          sendMessage7@data1 01C5  
                        sendMessage7@data2 01C6                          sendMessage7@data3 01C7  
                        sendMessage7@data4 01C8                          sendMessage7@data5 01C9  
                        sendMessage7@data6 01CA                          sendMessage7@data7 01CB  
                           _checkPowerOnPb B660                           EEPROM_Read@index 008D  
                      ??_deleteActionRange 01DB                           _setNormalActions C836  
                           ?_doneTwoAction 0001                            _last_mode_state 00C3  
                  __end_of_nvGetDiagnostic C3D8                               ?_bootPowerUp 0001  
                     validStart@tableIndex 009B                       nvTRnvrdCallback@step 01D8  
              ?_timer1DoneInterruptHandler 0001                       nvTRnvrdCallback@type 0001  
                              _pulseDelays 02A4                __end_of_getNextWriteMessage 8D64  
