

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Nov 15 07:42:28 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   223                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   257                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   258                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   259                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   260   000000                     
   261                           ; Generated 12/10/2023 GMT
   262                           ; 
   263                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   264                           ; All rights reserved.
   265                           ; 
   266                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   267                           ; 
   268                           ; Redistribution and use in source and binary forms, with or without modification, are
   269                           ; permitted provided that the following conditions are met:
   270                           ; 
   271                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   272                           ;        conditions and the following disclaimer.
   273                           ; 
   274                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   275                           ;        of conditions and the following disclaimer in the documentation and/or other
   276                           ;        materials provided with the distribution. Publication is not required when
   277                           ;        this file is used in an embedded application.
   278                           ; 
   279                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   280                           ;        software without specific prior written permission.
   281                           ; 
   282                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   283                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   284                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   285                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   286                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   287                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   288                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   289                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   290                           ; 
   291                           ; 
   292                           ; Code-generator required, PIC18F26K80 Definitions
   293                           ; 
   294                           ; SFR Addresses
   295   000000                     
   296                           	psect	eeprom_data
   297   F003FF                     	org	1023	;# 
   298   F003FF  00                 	db	0	;# 
   299   000000                     _eventTable_absaddr	set	61312
   300                           
   301                           	psect	mediumconst
   302   00ED28                     __pmediumconst:
   303                           	callstack 0
   304   00ED28  00                 	db	0
   305   00ED29                     _priorities:
   306                           	callstack 0
   307   00ED29  01                 	db	1
   308   00ED2A  01                 	db	1
   309   00ED2B  03                 	db	3
   310   00ED2C  02                 	db	2
   311   00ED2D  02                 	db	2
   312   00ED2E  02                 	db	2
   313   00ED2F  02                 	db	2
   314   00ED30  03                 	db	3
   315   00ED31  02                 	db	2
   316   00ED32  02                 	db	2
   317   00ED33  03                 	db	3
   318   00ED34  01                 	db	1
   319   00ED35  00                 	db	0
   320   00ED36  00                 	db	0
   321   00ED37  01                 	db	1
   322   00ED38  01                 	db	1
   323   00ED39  01                 	db	1
   324   00ED3A  01                 	db	1
   325   00ED3B  01                 	db	1
   326   00ED3C  01                 	db	1
   327   00ED3D  01                 	db	1
   328   00ED3E  01                 	db	1
   329   00ED3F  01                 	db	1
   330   00ED40  01                 	db	1
   331   00ED41  01                 	db	1
   332   00ED42  01                 	db	1
   333   00ED43  01                 	db	1
   334   00ED44  01                 	db	1
   335   00ED45  01                 	db	1
   336   00ED46  01                 	db	1
   337   00ED47  01                 	db	1
   338   00ED48  01                 	db	1
   339   00ED49  01                 	db	1
   340   00ED4A  01                 	db	1
   341   00ED4B  01                 	db	1
   342   00ED4C  01                 	db	1
   343   00ED4D  01                 	db	1
   344   00ED4E  01                 	db	1
   345   00ED4F  01                 	db	1
   346   00ED50  01                 	db	1
   347   00ED51  01                 	db	1
   348   00ED52  01                 	db	1
   349   00ED53  01                 	db	1
   350   00ED54  01                 	db	1
   351   00ED55  01                 	db	1
   352   00ED56  01                 	db	1
   353   00ED57  01                 	db	1
   354   00ED58  01                 	db	1
   355   00ED59  01                 	db	1
   356   00ED5A  01                 	db	1
   357   00ED5B  01                 	db	1
   358   00ED5C  01                 	db	1
   359   00ED5D  01                 	db	1
   360   00ED5E  01                 	db	1
   361   00ED5F  01                 	db	1
   362   00ED60  01                 	db	1
   363   00ED61  01                 	db	1
   364   00ED62  01                 	db	1
   365   00ED63  01                 	db	1
   366   00ED64  01                 	db	1
   367   00ED65  01                 	db	1
   368   00ED66  01                 	db	1
   369   00ED67  01                 	db	1
   370   00ED68  00                 	db	0
   371   00ED69  01                 	db	1
   372   00ED6A  01                 	db	1
   373   00ED6B  01                 	db	1
   374   00ED6C  01                 	db	1
   375   00ED6D  01                 	db	1
   376   00ED6E  01                 	db	1
   377   00ED6F  01                 	db	1
   378   00ED70  01                 	db	1
   379   00ED71  01                 	db	1
   380   00ED72  00                 	db	0
   381   00ED73  01                 	db	1
   382   00ED74  01                 	db	1
   383   00ED75  00                 	db	0
   384   00ED76  00                 	db	0
   385   00ED77  00                 	db	0
   386   00ED78  00                 	db	0
   387   00ED79  00                 	db	0
   388   00ED7A  00                 	db	0
   389   00ED7B  00                 	db	0
   390   00ED7C  00                 	db	0
   391   00ED7D  00                 	db	0
   392   00ED7E  00                 	db	0
   393   00ED7F  00                 	db	0
   394   00ED80  00                 	db	0
   395   00ED81  00                 	db	0
   396   00ED82  00                 	db	0
   397   00ED83  00                 	db	0
   398   00ED84  00                 	db	0
   399   00ED85  00                 	db	0
   400   00ED86  01                 	db	1
   401   00ED87  01                 	db	1
   402   00ED88  01                 	db	1
   403   00ED89  01                 	db	1
   404   00ED8A  01                 	db	1
   405   00ED8B  03                 	db	3
   406   00ED8C  01                 	db	1
   407   00ED8D  01                 	db	1
   408   00ED8E  01                 	db	1
   409   00ED8F  01                 	db	1
   410   00ED90  01                 	db	1
   411   00ED91  01                 	db	1
   412   00ED92  01                 	db	1
   413   00ED93  01                 	db	1
   414   00ED94  00                 	db	0
   415   00ED95  00                 	db	0
   416   00ED96  00                 	db	0
   417   00ED97  00                 	db	0
   418   00ED98  00                 	db	0
   419   00ED99  00                 	db	0
   420   00ED9A  00                 	db	0
   421   00ED9B  00                 	db	0
   422   00ED9C  01                 	db	1
   423   00ED9D  00                 	db	0
   424   00ED9E  01                 	db	1
   425   00ED9F  01                 	db	1
   426   00EDA0  01                 	db	1
   427   00EDA1  01                 	db	1
   428   00EDA2  01                 	db	1
   429   00EDA3  01                 	db	1
   430   00EDA4  00                 	db	0
   431   00EDA5  01                 	db	1
   432   00EDA6  01                 	db	1
   433   00EDA7  01                 	db	1
   434   00EDA8  01                 	db	1
   435   00EDA9  01                 	db	1
   436   00EDAA  01                 	db	1
   437   00EDAB  01                 	db	1
   438   00EDAC  00                 	db	0
   439   00EDAD  01                 	db	1
   440   00EDAE  01                 	db	1
   441   00EDAF  01                 	db	1
   442   00EDB0  01                 	db	1
   443   00EDB1  01                 	db	1
   444   00EDB2  01                 	db	1
   445   00EDB3  00                 	db	0
   446   00EDB4  01                 	db	1
   447   00EDB5  00                 	db	0
   448   00EDB6  00                 	db	0
   449   00EDB7  00                 	db	0
   450   00EDB8  00                 	db	0
   451   00EDB9  00                 	db	0
   452   00EDBA  00                 	db	0
   453   00EDBB  00                 	db	0
   454   00EDBC  00                 	db	0
   455   00EDBD  00                 	db	0
   456   00EDBE  00                 	db	0
   457   00EDBF  00                 	db	0
   458   00EDC0  00                 	db	0
   459   00EDC1  00                 	db	0
   460   00EDC2  00                 	db	0
   461   00EDC3  00                 	db	0
   462   00EDC4  00                 	db	0
   463   00EDC5  01                 	db	1
   464   00EDC6  01                 	db	1
   465   00EDC7  01                 	db	1
   466   00EDC8  01                 	db	1
   467   00EDC9  01                 	db	1
   468   00EDCA  01                 	db	1
   469   00EDCB  01                 	db	1
   470   00EDCC  01                 	db	1
   471   00EDCD  01                 	db	1
   472   00EDCE  01                 	db	1
   473   00EDCF  01                 	db	1
   474   00EDD0  00                 	db	0
   475   00EDD1  00                 	db	0
   476   00EDD2  01                 	db	1
   477   00EDD3  01                 	db	1
   478   00EDD4  00                 	db	0
   479   00EDD5  00                 	db	0
   480   00EDD6  00                 	db	0
   481   00EDD7  00                 	db	0
   482   00EDD8  00                 	db	0
   483   00EDD9  00                 	db	0
   484   00EDDA  00                 	db	0
   485   00EDDB  00                 	db	0
   486   00EDDC  01                 	db	1
   487   00EDDD  00                 	db	0
   488   00EDDE  00                 	db	0
   489   00EDDF  01                 	db	1
   490   00EDE0  01                 	db	1
   491   00EDE1  01                 	db	1
   492   00EDE2  00                 	db	0
   493   00EDE3  00                 	db	0
   494   00EDE4  00                 	db	0
   495   00EDE5  01                 	db	1
   496   00EDE6  01                 	db	1
   497   00EDE7  01                 	db	1
   498   00EDE8  01                 	db	1
   499   00EDE9  01                 	db	1
   500   00EDEA  01                 	db	1
   501   00EDEB  01                 	db	1
   502   00EDEC  00                 	db	0
   503   00EDED  01                 	db	1
   504   00EDEE  01                 	db	1
   505   00EDEF  01                 	db	1
   506   00EDF0  01                 	db	1
   507   00EDF1  01                 	db	1
   508   00EDF2  01                 	db	1
   509   00EDF3  01                 	db	1
   510   00EDF4  01                 	db	1
   511   00EDF5  00                 	db	0
   512   00EDF6  00                 	db	0
   513   00EDF7  00                 	db	0
   514   00EDF8  00                 	db	0
   515   00EDF9  00                 	db	0
   516   00EDFA  00                 	db	0
   517   00EDFB  01                 	db	1
   518   00EDFC  01                 	db	1
   519   00EDFD  00                 	db	0
   520   00EDFE  00                 	db	0
   521   00EDFF  01                 	db	1
   522   00EE00  01                 	db	1
   523   00EE01  01                 	db	1
   524   00EE02  00                 	db	0
   525   00EE03  00                 	db	0
   526   00EE04  00                 	db	0
   527   00EE05  01                 	db	1
   528   00EE06  01                 	db	1
   529   00EE07  00                 	db	0
   530   00EE08  01                 	db	1
   531   00EE09  01                 	db	1
   532   00EE0A  01                 	db	1
   533   00EE0B  00                 	db	0
   534   00EE0C  00                 	db	0
   535   00EE0D  01                 	db	1
   536   00EE0E  00                 	db	0
   537   00EE0F  01                 	db	1
   538   00EE10  01                 	db	1
   539   00EE11  01                 	db	1
   540   00EE12  01                 	db	1
   541   00EE13  01                 	db	1
   542   00EE14  00                 	db	0
   543   00EE15  00                 	db	0
   544   00EE16  00                 	db	0
   545   00EE17  00                 	db	0
   546   00EE18  00                 	db	0
   547   00EE19  00                 	db	0
   548   00EE1A  00                 	db	0
   549   00EE1B  00                 	db	0
   550   00EE1C  00                 	db	0
   551   00EE1D  00                 	db	0
   552   00EE1E  00                 	db	0
   553   00EE1F  00                 	db	0
   554   00EE20  00                 	db	0
   555   00EE21  00                 	db	0
   556   00EE22  00                 	db	0
   557   00EE23  01                 	db	1
   558   00EE24  00                 	db	0
   559   00EE25  00                 	db	0
   560   00EE26  00                 	db	0
   561   00EE27  00                 	db	0
   562   00EE28  00                 	db	0
   563   00EE29                     __end_of_priorities:
   564                           	callstack 0
   565   00EE29                     _configs:
   566                           	callstack 0
   567   00EE29  0B                 	db	11
   568   00EE2A  43                 	db	67
   569   00EE2B  00                 	db	0
   570   00EE2C  FF                 	db	255
   571   00EE2D  0C                 	db	12
   572   00EE2E  43                 	db	67
   573   00EE2F  01                 	db	1
   574   00EE30  FF                 	db	255
   575   00EE31  0D                 	db	13
   576   00EE32  43                 	db	67
   577   00EE33  02                 	db	2
   578   00EE34  FF                 	db	255
   579   00EE35  0E                 	db	14
   580   00EE36  43                 	db	67
   581   00EE37  03                 	db	3
   582   00EE38  FF                 	db	255
   583   00EE39  0F                 	db	15
   584   00EE3A  43                 	db	67
   585   00EE3B  04                 	db	4
   586   00EE3C  FF                 	db	255
   587   00EE3D  10                 	db	16
   588   00EE3E  43                 	db	67
   589   00EE3F  05                 	db	5
   590   00EE40  FF                 	db	255
   591   00EE41  11                 	db	17
   592   00EE42  43                 	db	67
   593   00EE43  06                 	db	6
   594   00EE44  FF                 	db	255
   595   00EE45  12                 	db	18
   596   00EE46  43                 	db	67
   597   00EE47  07                 	db	7
   598   00EE48  FF                 	db	255
   599   00EE49  15                 	db	21
   600   00EE4A  42                 	db	66
   601   00EE4B  00                 	db	0
   602   00EE4C  0A                 	db	10
   603   00EE4D  16                 	db	22
   604   00EE4E  42                 	db	66
   605   00EE4F  01                 	db	1
   606   00EE50  08                 	db	8
   607   00EE51  19                 	db	25
   608   00EE52  42                 	db	66
   609   00EE53  04                 	db	4
   610   00EE54  09                 	db	9
   611   00EE55  1A                 	db	26
   612   00EE56  42                 	db	66
   613   00EE57  05                 	db	5
   614   00EE58  FF                 	db	255
   615   00EE59  03                 	db	3
   616   00EE5A  41                 	db	65
   617   00EE5B  01                 	db	1
   618   00EE5C  01                 	db	1
   619   00EE5D  02                 	db	2
   620   00EE5E  41                 	db	65
   621   00EE5F  00                 	db	0
   622   00EE60  00                 	db	0
   623   00EE61  05                 	db	5
   624   00EE62  41                 	db	65
   625   00EE63  03                 	db	3
   626   00EE64  03                 	db	3
   627   00EE65  07                 	db	7
   628   00EE66  41                 	db	65
   629   00EE67  05                 	db	5
   630   00EE68  04                 	db	4
   631   00EE69                     __end_of_configs:
   632                           	callstack 0
   633   000000                     _paramBlock_absaddr	set	2080
   634   00EE69                     _services:
   635                           	callstack 0
   636   00EE69  68                 	db	low _canService
   637   00EE6A  EF                 	db	high _canService
   638   00EE6B  56                 	db	low _mnsService
   639   00EE6C  EF                 	db	high _mnsService
   640   00EE6D  44                 	db	low _nvService
   641   00EE6E  EF                 	db	high _nvService
   642   00EE6F  32                 	db	low _bootService
   643   00EE70  EF                 	db	high _bootService
   644   00EE71  20                 	db	low _eventTeachService
   645   00EE72  EF                 	db	high _eventTeachService
   646   00EE73  0E                 	db	low _eventConsumer2QService
   647   00EE74  EF                 	db	high _eventConsumer2QService
   648   00EE75  FC                 	db	low _eventProducerService
   649   00EE76  EE                 	db	high _eventProducerService
   650   00EE77  EA                 	db	low _eventCoeService
   651   00EE78  EE                 	db	high _eventCoeService
   652   00EE79  D8                 	db	low _eventAckService
   653   00EE7A  EE                 	db	high _eventAckService
   654   00EE7B                     __end_of_services:
   655                           	callstack 0
   656   00EE7B                     _bl_version:
   657                           	callstack 0
   658   00EE7B  42                 	db	66
   659   00EE7C  4C                 	db	76
   660   00EE7D  5F                 	db	95
   661   00EE7E  56                 	db	86
   662   00EE7F  45                 	db	69
   663   00EE80  52                 	db	82
   664   00EE81  53                 	db	83
   665   00EE82  49                 	db	73
   666   00EE83  4F                 	db	79
   667   00EE84  4E                 	db	78
   668   00EE85  3D                 	db	61
   669   00EE86                     __end_of_bl_version:
   670                           	callstack 0
   671   000000                     _name_absaddr	set	2120
   672   00EE86                     _canPri:
   673                           	callstack 0
   674   00EE86  B0                 	db	176
   675   00EE87  A0                 	db	160
   676   00EE88  90                 	db	144
   677   00EE89  80                 	db	128
   678   00EE8A  00                 	db	0
   679   00EE8B                     __end_of_canPri:
   680                           	callstack 0
   681   00EE8B                     _channelDefaultNVs:
   682                           	callstack 0
   683   00EE8B  00                 	db	0
   684   00EE8C  06                 	db	6
   685   00EE8D  04                 	db	4
   686   00EE8E  04                 	db	4
   687   00EE8F  00                 	db	0
   688   00EE90  00                 	db	0
   689   00EE91  00                 	db	0
   690   00EE92  01                 	db	1
   691   00EE93  06                 	db	6
   692   00EE94  00                 	db	0
   693   00EE95  00                 	db	0
   694   00EE96  00                 	db	0
   695   00EE97  00                 	db	0
   696   00EE98  00                 	db	0
   697   00EE99  02                 	db	2
   698   00EE9A  06                 	db	6
   699   00EE9B  80                 	db	128
   700   00EE9C  80                 	db	128
   701   00EE9D  EB                 	db	235
   702   00EE9E  EB                 	db	235
   703   00EE9F  00                 	db	0
   704   00EEA0  03                 	db	3
   705   00EEA1  06                 	db	6
   706   00EEA2  80                 	db	128
   707   00EEA3  7F                 	db	127
   708   00EEA4  40                 	db	64
   709   00EEA5  03                 	db	3
   710   00EEA6  3C                 	db	60
   711   00EEA7  04                 	db	4
   712   00EEA8  06                 	db	6
   713   00EEA9  03                 	db	3
   714   00EEAA  80                 	db	128
   715   00EEAB  80                 	db	128
   716   00EEAC  80                 	db	128
   717   00EEAD  00                 	db	0
   718   00EEAE  05                 	db	5
   719   00EEAF  06                 	db	6
   720   00EEB0  80                 	db	128
   721   00EEB1  10                 	db	16
   722   00EEB2  00                 	db	0
   723   00EEB3  00                 	db	0
   724   00EEB4  00                 	db	0
   725   00EEB5  06                 	db	6
   726   00EEB6  06                 	db	6
   727   00EEB7  00                 	db	0
   728   00EEB8  7B                 	db	123
   729   00EEB9  20                 	db	32
   730   00EEBA  07                 	db	7
   731   00EEBB  FF                 	db	255
   732   00EEBC  07                 	db	7
   733   00EEBD  06                 	db	6
   734   00EEBE  05                 	db	5
   735   00EEBF  00                 	db	0
   736   00EEC0  00                 	db	0
   737   00EEC1  00                 	db	0
   738   00EEC2  00                 	db	0
   739   00EEC3  08                 	db	8
   740   00EEC4  00                 	db	0
   741   00EEC5  00                 	db	0
   742   00EEC6  00                 	db	0
   743   00EEC7  00                 	db	0
   744   00EEC8  00                 	db	0
   745   00EEC9  00                 	db	0
   746   00EECA  00                 	db	0
   747   00EECB  00                 	db	0
   748   00EECC  00                 	db	0
   749   00EECD  00                 	db	0
   750   00EECE  00                 	db	0
   751   00EECF  00                 	db	0
   752   00EED0  00                 	db	0
   753   00EED1  00                 	db	0
   754   00EED2  00                 	db	0
   755   00EED3  00                 	db	0
   756   00EED4  00                 	db	0
   757   00EED5  00                 	db	0
   758   00EED6  00                 	db	0
   759   00EED7  00                 	db	0
   760   00EED8                     __end_of_channelDefaultNVs:
   761                           	callstack 0
   762   00EED8                     _eventAckService:
   763                           	callstack 0
   764   00EED8  09                 	db	9
   765   00EED9  01                 	db	1
   766   00EEDA  00                 	db	0
   767   00EEDB  00                 	db	0
   768   00EEDC  50                 	db	low _ackPowerUp
   769   00EEDD  C0                 	db	high _ackPowerUp
   770   00EEDE  EE                 	db	low _ackEventProcessMessage
   771   00EEDF  65                 	db	high _ackEventProcessMessage
   772   00EEE0  00                 	db	0
   773   00EEE1  00                 	db	0
   774   00EEE2  00                 	db	0
   775   00EEE3  00                 	db	0
   776   00EEE4  00                 	db	0
   777   00EEE5  00                 	db	0
   778   00EEE6  00                 	db	0
   779   00EEE7  00                 	db	0
   780   00EEE8  FE                 	db	low _ackGetDiagnostic
   781   00EEE9  C1                 	db	high _ackGetDiagnostic
   782   00EEEA                     __end_of_eventAckService:
   783                           	callstack 0
   784   00EEEA                     _eventCoeService:
   785                           	callstack 0
   786   00EEEA  08                 	db	8
   787   00EEEB  01                 	db	1
   788   00EEEC  00                 	db	0
   789   00EEED  00                 	db	0
   790   00EEEE  00                 	db	0
   791   00EEEF  00                 	db	0
   792   00EEF0  00                 	db	0
   793   00EEF1  00                 	db	0
   794   00EEF2  00                 	db	0
   795   00EEF3  00                 	db	0
   796   00EEF4  00                 	db	0
   797   00EEF5  00                 	db	0
   798   00EEF6  00                 	db	0
   799   00EEF7  00                 	db	0
   800   00EEF8  00                 	db	0
   801   00EEF9  00                 	db	0
   802   00EEFA  00                 	db	0
   803   00EEFB  00                 	db	0
   804   00EEFC                     __end_of_eventCoeService:
   805                           	callstack 0
   806   00EEFC                     _eventProducerService:
   807                           	callstack 0
   808   00EEFC  05                 	db	5
   809   00EEFD  01                 	db	1
   810   00EEFE  00                 	db	0
   811   00EEFF  00                 	db	0
   812   00EF00  22                 	db	low _producerPowerUp
   813   00EF01  C0                 	db	high _producerPowerUp
   814   00EF02  4A                 	db	low _producerProcessMessage
   815   00EF03  5F                 	db	high _producerProcessMessage
   816   00EF04  00                 	db	0
   817   00EF05  00                 	db	0
   818   00EF06  00                 	db	0
   819   00EF07  00                 	db	0
   820   00EF08  00                 	db	0
   821   00EF09  00                 	db	0
   822   00EF0A  E8                 	db	low _producerEsdData
   823   00EF0B  C3                 	db	high _producerEsdData
   824   00EF0C  86                 	db	low _producerGetDiagnostic
   825   00EF0D  C1                 	db	high _producerGetDiagnostic
   826   00EF0E                     __end_of_eventProducerService:
   827                           	callstack 0
   828   00EF0E                     _eventConsumer2QService:
   829                           	callstack 0
   830   00EF0E  06                 	db	6
   831   00EF0F  01                 	db	1
   832   00EF10  00                 	db	0
   833   00EF11  00                 	db	0
   834   00EF12  CC                 	db	low _consumer2QPowerUp
   835   00EF13  BA                 	db	high _consumer2QPowerUp
   836   00EF14  82                 	db	low _consumer2QProcessMessage
   837   00EF15  35                 	db	high _consumer2QProcessMessage
   838   00EF16  00                 	db	0
   839   00EF17  00                 	db	0
   840   00EF18  00                 	db	0
   841   00EF19  00                 	db	0
   842   00EF1A  00                 	db	0
   843   00EF1B  00                 	db	0
   844   00EF1C  08                 	db	low _consumer2QEsdData
   845   00EF1D  C4                 	db	high _consumer2QEsdData
   846   00EF1E  26                 	db	low _consumer2QGetDiagnostic
   847   00EF1F  C2                 	db	high _consumer2QGetDiagnostic
   848   00EF20                     __end_of_eventConsumer2QService:
   849                           	callstack 0
   850   00EF20                     _eventTeachService:
   851                           	callstack 0
   852   00EF20  04                 	db	4
   853   00EF21  01                 	db	1
   854   00EF22  44                 	db	low _teachFactoryReset
   855   00EF23  C6                 	db	high _teachFactoryReset
   856   00EF24  6E                 	db	low _teachPowerUp
   857   00EF25  BE                 	db	high _teachPowerUp
   858   00EF26  0A                 	db	low _teachProcessMessage
   859   00EF27  22                 	db	high _teachProcessMessage
   860   00EF28  00                 	db	0
   861   00EF29  00                 	db	0
   862   00EF2A  00                 	db	0
   863   00EF2B  00                 	db	0
   864   00EF2C  00                 	db	0
   865   00EF2D  00                 	db	0
   866   00EF2E  36                 	db	low _teachGetESDdata
   867   00EF2F  C3                 	db	high _teachGetESDdata
   868   00EF30  4E                 	db	low _teachGetDiagnostic
   869   00EF31  C2                 	db	high _teachGetDiagnostic
   870   00EF32                     __end_of_eventTeachService:
   871                           	callstack 0
   872   00EF32                     _bootService:
   873                           	callstack 0
   874   00EF32  0A                 	db	10
   875   00EF33  02                 	db	2
   876   00EF34  00                 	db	0
   877   00EF35  00                 	db	0
   878   00EF36  2C                 	db	low _bootPowerUp
   879   00EF37  91                 	db	high _bootPowerUp
   880   00EF38  98                 	db	low _bootProcessMessage
   881   00EF39  A0                 	db	high _bootProcessMessage
   882   00EF3A  00                 	db	0
   883   00EF3B  00                 	db	0
   884   00EF3C  00                 	db	0
   885   00EF3D  00                 	db	0
   886   00EF3E  00                 	db	0
   887   00EF3F  00                 	db	0
   888   00EF40  12                 	db	low _bootEsdData
   889   00EF41  C3                 	db	high _bootEsdData
   890   00EF42  00                 	db	0
   891   00EF43  00                 	db	0
   892   00EF44                     __end_of_bootService:
   893                           	callstack 0
   894   00EF44                     _nvService:
   895                           	callstack 0
   896   00EF44  02                 	db	2
   897   00EF45  01                 	db	1
   898   00EF46  E2                 	db	low _nvFactoryReset
   899   00EF47  BC                 	db	high _nvFactoryReset
   900   00EF48  3C                 	db	low _nvPowerUp
   901   00EF49  BE                 	db	high _nvPowerUp
   902   00EF4A  8C                 	db	low _nvProcessMessage
   903   00EF4B  46                 	db	high _nvProcessMessage
   904   00EF4C  00                 	db	0
   905   00EF4D  00                 	db	0
   906   00EF4E  00                 	db	0
   907   00EF4F  00                 	db	0
   908   00EF50  00                 	db	0
   909   00EF51  00                 	db	0
   910   00EF52  F8                 	db	low _nvGetESDdata
   911   00EF53  C4                 	db	high _nvGetESDdata
   912   00EF54  AE                 	db	low _nvGetDiagnostic
   913   00EF55  C1                 	db	high _nvGetDiagnostic
   914   00EF56                     __end_of_nvService:
   915                           	callstack 0
   916   00EF56                     _mnsService:
   917                           	callstack 0
   918   00EF56  01                 	db	1
   919   00EF57  01                 	db	1
   920   00EF58  B0                 	db	low _mnsFactoryReset
   921   00EF59  AB                 	db	high _mnsFactoryReset
   922   00EF5A  4A                 	db	low _mnsPowerUp
   923   00EF5B  7E                 	db	high _mnsPowerUp
   924   00EF5C  CE                 	db	low _mnsProcessMessage
   925   00EF5D  16                 	db	high _mnsProcessMessage
   926   00EF5E  3C                 	db	low _mnsPoll
   927   00EF5F  43                 	db	high _mnsPoll
   928   00EF60  00                 	db	0
   929   00EF61  00                 	db	0
   930   00EF62  86                 	db	low _mnsLowIsr
   931   00EF63  C5                 	db	high _mnsLowIsr
   932   00EF64  00                 	db	0
   933   00EF65  00                 	db	0
   934   00EF66  D6                 	db	low _mnsGetDiagnostic
   935   00EF67  C1                 	db	high _mnsGetDiagnostic
   936   00EF68                     __end_of_mnsService:
   937                           	callstack 0
   938   00EF68                     _canService:
   939                           	callstack 0
   940   00EF68  03                 	db	3
   941   00EF69  02                 	db	2
   942   00EF6A  88                 	db	low _canFactoryReset
   943   00EF6B  C4                 	db	high _canFactoryReset
   944   00EF6C  14                 	db	low _canPowerUp
   945   00EF6D  6F                 	db	high _canPowerUp
   946   00EF6E  38                 	db	low _canProcessMessage
   947   00EF6F  9B                 	db	high _canProcessMessage
   948   00EF70  00                 	db	0
   949   00EF71  00                 	db	0
   950   00EF72  48                 	db	low _canIsr
   951   00EF73  C4                 	db	high _canIsr
   952   00EF74  48                 	db	low _canIsr
   953   00EF75  C4                 	db	high _canIsr
   954   00EF76  DE                 	db	low _canEsdData
   955   00EF77  C4                 	db	high _canEsdData
   956   00EF78  B0                 	db	low _canGetDiagnostic
   957   00EF79  AF                 	db	high _canGetDiagnostic
   958   00EF7A                     __end_of_canService:
   959                           	callstack 0
   960   00EF7A                     _canTransport:
   961                           	callstack 0
   962   00EF7A  AC                 	db	low _canSendMessage
   963   00EF7B  49                 	db	high _canSendMessage
   964   00EF7C  DC                 	db	low _canReceiveMessage
   965   00EF7D  67                 	db	high _canReceiveMessage
   966   00EF7E                     __end_of_canTransport:
   967                           	callstack 0
   968   000000                     _eventTable_absaddr	set	61312
   969   00EF7E  00                 	db	0	; dummy byte at the end
   970   000000                     
   971                           	psect	_eventTable_text
   972   00EF80                     __p_eventTable_text:
   973                           	callstack 0
   974   00EF80                     _eventTable:
   975                           	callstack 0
   976   00EF80  FF                 	db	255
   977   00EF81  FF                 	db	255
   978   00EF82  FF                 	db	255
   979   00EF83  FF                 	db	255
   980   00EF84  FF                 	db	255
   981   00EF85  FF                 	db	255
   982   00EF86  FF                 	db	255
   983   00EF87  FF                 	db	255
   984   00EF88  FF                 	db	255
   985   00EF89  FF                 	db	255
   986   00EF8A  FF                 	db	255
   987   00EF8B  FF                 	db	255
   988   00EF8C  FF                 	db	255
   989   00EF8D  FF                 	db	255
   990   00EF8E  FF                 	db	255
   991   00EF8F  FF                 	db	255
   992   00EF90  FF                 	db	255
   993   00EF91  FF                 	db	255
   994   00EF92  FF                 	db	255
   995   00EF93  FF                 	db	255
   996   00EF94  FF                 	db	255
   997   00EF95  FF                 	db	255
   998   00EF96  FF                 	db	255
   999   00EF97  FF                 	db	255
  1000   00EF98  FF                 	db	255
  1001   00EF99  FF                 	db	255
  1002   00EF9A  FF                 	db	255
  1003   00EF9B  FF                 	db	255
  1004   00EF9C  FF                 	db	255
  1005   00EF9D  FF                 	db	255
  1006   00EF9E  FF                 	db	255
  1007   00EF9F  FF                 	db	255
  1008   00EFA0  FF                 	db	255
  1009   00EFA1  FF                 	db	255
  1010   00EFA2  FF                 	db	255
  1011   00EFA3  FF                 	db	255
  1012   00EFA4  FF                 	db	255
  1013   00EFA5  FF                 	db	255
  1014   00EFA6  FF                 	db	255
  1015   00EFA7  FF                 	db	255
  1016   00EFA8  FF                 	db	255
  1017   00EFA9  FF                 	db	255
  1018   00EFAA  FF                 	db	255
  1019   00EFAB  FF                 	db	255
  1020   00EFAC  FF                 	db	255
  1021   00EFAD  FF                 	db	255
  1022   00EFAE  FF                 	db	255
  1023   00EFAF  FF                 	db	255
  1024   00EFB0  FF                 	db	255
  1025   00EFB1  FF                 	db	255
  1026   00EFB2  FF                 	db	255
  1027   00EFB3  FF                 	db	255
  1028   00EFB4  FF                 	db	255
  1029   00EFB5  FF                 	db	255
  1030   00EFB6  FF                 	db	255
  1031   00EFB7  FF                 	db	255
  1032   00EFB8  FF                 	db	255
  1033   00EFB9  FF                 	db	255
  1034   00EFBA  FF                 	db	255
  1035   00EFBB  FF                 	db	255
  1036   00EFBC  FF                 	db	255
  1037   00EFBD  FF                 	db	255
  1038   00EFBE  FF                 	db	255
  1039   00EFBF  FF                 	db	255
  1040   00EFC0  FF                 	db	255
  1041   00EFC1  FF                 	db	255
  1042   00EFC2  FF                 	db	255
  1043   00EFC3  FF                 	db	255
  1044   00EFC4  FF                 	db	255
  1045   00EFC5  FF                 	db	255
  1046   00EFC6  FF                 	db	255
  1047   00EFC7  FF                 	db	255
  1048   00EFC8  FF                 	db	255
  1049   00EFC9  FF                 	db	255
  1050   00EFCA  FF                 	db	255
  1051   00EFCB  FF                 	db	255
  1052   00EFCC  FF                 	db	255
  1053   00EFCD  FF                 	db	255
  1054   00EFCE  FF                 	db	255
  1055   00EFCF  FF                 	db	255
  1056   00EFD0  FF                 	db	255
  1057   00EFD1  FF                 	db	255
  1058   00EFD2  FF                 	db	255
  1059   00EFD3  FF                 	db	255
  1060   00EFD4  FF                 	db	255
  1061   00EFD5  FF                 	db	255
  1062   00EFD6  FF                 	db	255
  1063   00EFD7  FF                 	db	255
  1064   00EFD8  FF                 	db	255
  1065   00EFD9  FF                 	db	255
  1066   00EFDA  FF                 	db	255
  1067   00EFDB  FF                 	db	255
  1068   00EFDC  FF                 	db	255
  1069   00EFDD  FF                 	db	255
  1070   00EFDE  FF                 	db	255
  1071   00EFDF  FF                 	db	255
  1072   00EFE0  FF                 	db	255
  1073   00EFE1  FF                 	db	255
  1074   00EFE2  FF                 	db	255
  1075   00EFE3  FF                 	db	255
  1076   00EFE4  FF                 	db	255
  1077   00EFE5  FF                 	db	255
  1078   00EFE6  FF                 	db	255
  1079   00EFE7  FF                 	db	255
  1080   00EFE8  FF                 	db	255
  1081   00EFE9  FF                 	db	255
  1082   00EFEA  FF                 	db	255
  1083   00EFEB  FF                 	db	255
  1084   00EFEC  FF                 	db	255
  1085   00EFED  FF                 	db	255
  1086   00EFEE  FF                 	db	255
  1087   00EFEF  FF                 	db	255
  1088   00EFF0  FF                 	db	255
  1089   00EFF1  FF                 	db	255
  1090   00EFF2  FF                 	db	255
  1091   00EFF3  FF                 	db	255
  1092   00EFF4  FF                 	db	255
  1093   00EFF5  FF                 	db	255
  1094   00EFF6  FF                 	db	255
  1095   00EFF7  FF                 	db	255
  1096   00EFF8  FF                 	db	255
  1097   00EFF9  FF                 	db	255
  1098   00EFFA  FF                 	db	255
  1099   00EFFB  FF                 	db	255
  1100   00EFFC  FF                 	db	255
  1101   00EFFD  FF                 	db	255
  1102   00EFFE  FF                 	db	255
  1103   00EFFF  FF                 	db	255
  1104   00F000  FF                 	db	255
  1105   00F001  FF                 	db	255
  1106   00F002  FF                 	db	255
  1107   00F003  FF                 	db	255
  1108   00F004  FF                 	db	255
  1109   00F005  FF                 	db	255
  1110   00F006  FF                 	db	255
  1111   00F007  FF                 	db	255
  1112   00F008  FF                 	db	255
  1113   00F009  FF                 	db	255
  1114   00F00A  FF                 	db	255
  1115   00F00B  FF                 	db	255
  1116   00F00C  FF                 	db	255
  1117   00F00D  FF                 	db	255
  1118   00F00E  FF                 	db	255
  1119   00F00F  FF                 	db	255
  1120   00F010  FF                 	db	255
  1121   00F011  FF                 	db	255
  1122   00F012  FF                 	db	255
  1123   00F013  FF                 	db	255
  1124   00F014  FF                 	db	255
  1125   00F015  FF                 	db	255
  1126   00F016  FF                 	db	255
  1127   00F017  FF                 	db	255
  1128   00F018  FF                 	db	255
  1129   00F019  FF                 	db	255
  1130   00F01A  FF                 	db	255
  1131   00F01B  FF                 	db	255
  1132   00F01C  FF                 	db	255
  1133   00F01D  FF                 	db	255
  1134   00F01E  FF                 	db	255
  1135   00F01F  FF                 	db	255
  1136   00F020  FF                 	db	255
  1137   00F021  FF                 	db	255
  1138   00F022  FF                 	db	255
  1139   00F023  FF                 	db	255
  1140   00F024  FF                 	db	255
  1141   00F025  FF                 	db	255
  1142   00F026  FF                 	db	255
  1143   00F027  FF                 	db	255
  1144   00F028  FF                 	db	255
  1145   00F029  FF                 	db	255
  1146   00F02A  FF                 	db	255
  1147   00F02B  FF                 	db	255
  1148   00F02C  FF                 	db	255
  1149   00F02D  FF                 	db	255
  1150   00F02E  FF                 	db	255
  1151   00F02F  FF                 	db	255
  1152   00F030  FF                 	db	255
  1153   00F031  FF                 	db	255
  1154   00F032  FF                 	db	255
  1155   00F033  FF                 	db	255
  1156   00F034  FF                 	db	255
  1157   00F035  FF                 	db	255
  1158   00F036  FF                 	db	255
  1159   00F037  FF                 	db	255
  1160   00F038  FF                 	db	255
  1161   00F039  FF                 	db	255
  1162   00F03A  FF                 	db	255
  1163   00F03B  FF                 	db	255
  1164   00F03C  FF                 	db	255
  1165   00F03D  FF                 	db	255
  1166   00F03E  FF                 	db	255
  1167   00F03F  FF                 	db	255
  1168   00F040  FF                 	db	255
  1169   00F041  FF                 	db	255
  1170   00F042  FF                 	db	255
  1171   00F043  FF                 	db	255
  1172   00F044  FF                 	db	255
  1173   00F045  FF                 	db	255
  1174   00F046  FF                 	db	255
  1175   00F047  FF                 	db	255
  1176   00F048  FF                 	db	255
  1177   00F049  FF                 	db	255
  1178   00F04A  FF                 	db	255
  1179   00F04B  FF                 	db	255
  1180   00F04C  FF                 	db	255
  1181   00F04D  FF                 	db	255
  1182   00F04E  FF                 	db	255
  1183   00F04F  FF                 	db	255
  1184   00F050  FF                 	db	255
  1185   00F051  FF                 	db	255
  1186   00F052  FF                 	db	255
  1187   00F053  FF                 	db	255
  1188   00F054  FF                 	db	255
  1189   00F055  FF                 	db	255
  1190   00F056  FF                 	db	255
  1191   00F057  FF                 	db	255
  1192   00F058  FF                 	db	255
  1193   00F059  FF                 	db	255
  1194   00F05A  FF                 	db	255
  1195   00F05B  FF                 	db	255
  1196   00F05C  FF                 	db	255
  1197   00F05D  FF                 	db	255
  1198   00F05E  FF                 	db	255
  1199   00F05F  FF                 	db	255
  1200   00F060  FF                 	db	255
  1201   00F061  FF                 	db	255
  1202   00F062  FF                 	db	255
  1203   00F063  FF                 	db	255
  1204   00F064  FF                 	db	255
  1205   00F065  FF                 	db	255
  1206   00F066  FF                 	db	255
  1207   00F067  FF                 	db	255
  1208   00F068  FF                 	db	255
  1209   00F069  FF                 	db	255
  1210   00F06A  FF                 	db	255
  1211   00F06B  FF                 	db	255
  1212   00F06C  FF                 	db	255
  1213   00F06D  FF                 	db	255
  1214   00F06E  FF                 	db	255
  1215   00F06F  FF                 	db	255
  1216   00F070  FF                 	db	255
  1217   00F071  FF                 	db	255
  1218   00F072  FF                 	db	255
  1219   00F073  FF                 	db	255
  1220   00F074  FF                 	db	255
  1221   00F075  FF                 	db	255
  1222   00F076  FF                 	db	255
  1223   00F077  FF                 	db	255
  1224   00F078  FF                 	db	255
  1225   00F079  FF                 	db	255
  1226   00F07A  FF                 	db	255
  1227   00F07B  FF                 	db	255
  1228   00F07C  FF                 	db	255
  1229   00F07D  FF                 	db	255
  1230   00F07E  FF                 	db	255
  1231   00F07F  FF                 	db	255
  1232   00F080  FF                 	db	255
  1233   00F081  FF                 	db	255
  1234   00F082  FF                 	db	255
  1235   00F083  FF                 	db	255
  1236   00F084  FF                 	db	255
  1237   00F085  FF                 	db	255
  1238   00F086  FF                 	db	255
  1239   00F087  FF                 	db	255
  1240   00F088  FF                 	db	255
  1241   00F089  FF                 	db	255
  1242   00F08A  FF                 	db	255
  1243   00F08B  FF                 	db	255
  1244   00F08C  FF                 	db	255
  1245   00F08D  FF                 	db	255
  1246   00F08E  FF                 	db	255
  1247   00F08F  FF                 	db	255
  1248   00F090  FF                 	db	255
  1249   00F091  FF                 	db	255
  1250   00F092  FF                 	db	255
  1251   00F093  FF                 	db	255
  1252   00F094  FF                 	db	255
  1253   00F095  FF                 	db	255
  1254   00F096  FF                 	db	255
  1255   00F097  FF                 	db	255
  1256   00F098  FF                 	db	255
  1257   00F099  FF                 	db	255
  1258   00F09A  FF                 	db	255
  1259   00F09B  FF                 	db	255
  1260   00F09C  FF                 	db	255
  1261   00F09D  FF                 	db	255
  1262   00F09E  FF                 	db	255
  1263   00F09F  FF                 	db	255
  1264   00F0A0  FF                 	db	255
  1265   00F0A1  FF                 	db	255
  1266   00F0A2  FF                 	db	255
  1267   00F0A3  FF                 	db	255
  1268   00F0A4  FF                 	db	255
  1269   00F0A5  FF                 	db	255
  1270   00F0A6  FF                 	db	255
  1271   00F0A7  FF                 	db	255
  1272   00F0A8  FF                 	db	255
  1273   00F0A9  FF                 	db	255
  1274   00F0AA  FF                 	db	255
  1275   00F0AB  FF                 	db	255
  1276   00F0AC  FF                 	db	255
  1277   00F0AD  FF                 	db	255
  1278   00F0AE  FF                 	db	255
  1279   00F0AF  FF                 	db	255
  1280   00F0B0  FF                 	db	255
  1281   00F0B1  FF                 	db	255
  1282   00F0B2  FF                 	db	255
  1283   00F0B3  FF                 	db	255
  1284   00F0B4  FF                 	db	255
  1285   00F0B5  FF                 	db	255
  1286   00F0B6  FF                 	db	255
  1287   00F0B7  FF                 	db	255
  1288   00F0B8  FF                 	db	255
  1289   00F0B9  FF                 	db	255
  1290   00F0BA  FF                 	db	255
  1291   00F0BB  FF                 	db	255
  1292   00F0BC  FF                 	db	255
  1293   00F0BD  FF                 	db	255
  1294   00F0BE  FF                 	db	255
  1295   00F0BF  FF                 	db	255
  1296   00F0C0  FF                 	db	255
  1297   00F0C1  FF                 	db	255
  1298   00F0C2  FF                 	db	255
  1299   00F0C3  FF                 	db	255
  1300   00F0C4  FF                 	db	255
  1301   00F0C5  FF                 	db	255
  1302   00F0C6  FF                 	db	255
  1303   00F0C7  FF                 	db	255
  1304   00F0C8  FF                 	db	255
  1305   00F0C9  FF                 	db	255
  1306   00F0CA  FF                 	db	255
  1307   00F0CB  FF                 	db	255
  1308   00F0CC  FF                 	db	255
  1309   00F0CD  FF                 	db	255
  1310   00F0CE  FF                 	db	255
  1311   00F0CF  FF                 	db	255
  1312   00F0D0  FF                 	db	255
  1313   00F0D1  FF                 	db	255
  1314   00F0D2  FF                 	db	255
  1315   00F0D3  FF                 	db	255
  1316   00F0D4  FF                 	db	255
  1317   00F0D5  FF                 	db	255
  1318   00F0D6  FF                 	db	255
  1319   00F0D7  FF                 	db	255
  1320   00F0D8  FF                 	db	255
  1321   00F0D9  FF                 	db	255
  1322   00F0DA  FF                 	db	255
  1323   00F0DB  FF                 	db	255
  1324   00F0DC  FF                 	db	255
  1325   00F0DD  FF                 	db	255
  1326   00F0DE  FF                 	db	255
  1327   00F0DF  FF                 	db	255
  1328   00F0E0  FF                 	db	255
  1329   00F0E1  FF                 	db	255
  1330   00F0E2  FF                 	db	255
  1331   00F0E3  FF                 	db	255
  1332   00F0E4  FF                 	db	255
  1333   00F0E5  FF                 	db	255
  1334   00F0E6  FF                 	db	255
  1335   00F0E7  FF                 	db	255
  1336   00F0E8  FF                 	db	255
  1337   00F0E9  FF                 	db	255
  1338   00F0EA  FF                 	db	255
  1339   00F0EB  FF                 	db	255
  1340   00F0EC  FF                 	db	255
  1341   00F0ED  FF                 	db	255
  1342   00F0EE  FF                 	db	255
  1343   00F0EF  FF                 	db	255
  1344   00F0F0  FF                 	db	255
  1345   00F0F1  FF                 	db	255
  1346   00F0F2  FF                 	db	255
  1347   00F0F3  FF                 	db	255
  1348   00F0F4  FF                 	db	255
  1349   00F0F5  FF                 	db	255
  1350   00F0F6  FF                 	db	255
  1351   00F0F7  FF                 	db	255
  1352   00F0F8  FF                 	db	255
  1353   00F0F9  FF                 	db	255
  1354   00F0FA  FF                 	db	255
  1355   00F0FB  FF                 	db	255
  1356   00F0FC  FF                 	db	255
  1357   00F0FD  FF                 	db	255
  1358   00F0FE  FF                 	db	255
  1359   00F0FF  FF                 	db	255
  1360   00F100  FF                 	db	255
  1361   00F101  FF                 	db	255
  1362   00F102  FF                 	db	255
  1363   00F103  FF                 	db	255
  1364   00F104  FF                 	db	255
  1365   00F105  FF                 	db	255
  1366   00F106  FF                 	db	255
  1367   00F107  FF                 	db	255
  1368   00F108  FF                 	db	255
  1369   00F109  FF                 	db	255
  1370   00F10A  FF                 	db	255
  1371   00F10B  FF                 	db	255
  1372   00F10C  FF                 	db	255
  1373   00F10D  FF                 	db	255
  1374   00F10E  FF                 	db	255
  1375   00F10F  FF                 	db	255
  1376   00F110  FF                 	db	255
  1377   00F111  FF                 	db	255
  1378   00F112  FF                 	db	255
  1379   00F113  FF                 	db	255
  1380   00F114  FF                 	db	255
  1381   00F115  FF                 	db	255
  1382   00F116  FF                 	db	255
  1383   00F117  FF                 	db	255
  1384   00F118  FF                 	db	255
  1385   00F119  FF                 	db	255
  1386   00F11A  FF                 	db	255
  1387   00F11B  FF                 	db	255
  1388   00F11C  FF                 	db	255
  1389   00F11D  FF                 	db	255
  1390   00F11E  FF                 	db	255
  1391   00F11F  FF                 	db	255
  1392   00F120  FF                 	db	255
  1393   00F121  FF                 	db	255
  1394   00F122  FF                 	db	255
  1395   00F123  FF                 	db	255
  1396   00F124  FF                 	db	255
  1397   00F125  FF                 	db	255
  1398   00F126  FF                 	db	255
  1399   00F127  FF                 	db	255
  1400   00F128  FF                 	db	255
  1401   00F129  FF                 	db	255
  1402   00F12A  FF                 	db	255
  1403   00F12B  FF                 	db	255
  1404   00F12C  FF                 	db	255
  1405   00F12D  FF                 	db	255
  1406   00F12E  FF                 	db	255
  1407   00F12F  FF                 	db	255
  1408   00F130  FF                 	db	255
  1409   00F131  FF                 	db	255
  1410   00F132  FF                 	db	255
  1411   00F133  FF                 	db	255
  1412   00F134  FF                 	db	255
  1413   00F135  FF                 	db	255
  1414   00F136  FF                 	db	255
  1415   00F137  FF                 	db	255
  1416   00F138  FF                 	db	255
  1417   00F139  FF                 	db	255
  1418   00F13A  FF                 	db	255
  1419   00F13B  FF                 	db	255
  1420   00F13C  FF                 	db	255
  1421   00F13D  FF                 	db	255
  1422   00F13E  FF                 	db	255
  1423   00F13F  FF                 	db	255
  1424   00F140  FF                 	db	255
  1425   00F141  FF                 	db	255
  1426   00F142  FF                 	db	255
  1427   00F143  FF                 	db	255
  1428   00F144  FF                 	db	255
  1429   00F145  FF                 	db	255
  1430   00F146  FF                 	db	255
  1431   00F147  FF                 	db	255
  1432   00F148  FF                 	db	255
  1433   00F149  FF                 	db	255
  1434   00F14A  FF                 	db	255
  1435   00F14B  FF                 	db	255
  1436   00F14C  FF                 	db	255
  1437   00F14D  FF                 	db	255
  1438   00F14E  FF                 	db	255
  1439   00F14F  FF                 	db	255
  1440   00F150  FF                 	db	255
  1441   00F151  FF                 	db	255
  1442   00F152  FF                 	db	255
  1443   00F153  FF                 	db	255
  1444   00F154  FF                 	db	255
  1445   00F155  FF                 	db	255
  1446   00F156  FF                 	db	255
  1447   00F157  FF                 	db	255
  1448   00F158  FF                 	db	255
  1449   00F159  FF                 	db	255
  1450   00F15A  FF                 	db	255
  1451   00F15B  FF                 	db	255
  1452   00F15C  FF                 	db	255
  1453   00F15D  FF                 	db	255
  1454   00F15E  FF                 	db	255
  1455   00F15F  FF                 	db	255
  1456   00F160  FF                 	db	255
  1457   00F161  FF                 	db	255
  1458   00F162  FF                 	db	255
  1459   00F163  FF                 	db	255
  1460   00F164  FF                 	db	255
  1461   00F165  FF                 	db	255
  1462   00F166  FF                 	db	255
  1463   00F167  FF                 	db	255
  1464   00F168  FF                 	db	255
  1465   00F169  FF                 	db	255
  1466   00F16A  FF                 	db	255
  1467   00F16B  FF                 	db	255
  1468   00F16C  FF                 	db	255
  1469   00F16D  FF                 	db	255
  1470   00F16E  FF                 	db	255
  1471   00F16F  FF                 	db	255
  1472   00F170  FF                 	db	255
  1473   00F171  FF                 	db	255
  1474   00F172  FF                 	db	255
  1475   00F173  FF                 	db	255
  1476   00F174  FF                 	db	255
  1477   00F175  FF                 	db	255
  1478   00F176  FF                 	db	255
  1479   00F177  FF                 	db	255
  1480   00F178  FF                 	db	255
  1481   00F179  FF                 	db	255
  1482   00F17A  FF                 	db	255
  1483   00F17B  FF                 	db	255
  1484   00F17C  FF                 	db	255
  1485   00F17D  FF                 	db	255
  1486   00F17E  FF                 	db	255
  1487   00F17F  FF                 	db	255
  1488   00F180  FF                 	db	255
  1489   00F181  FF                 	db	255
  1490   00F182  FF                 	db	255
  1491   00F183  FF                 	db	255
  1492   00F184  FF                 	db	255
  1493   00F185  FF                 	db	255
  1494   00F186  FF                 	db	255
  1495   00F187  FF                 	db	255
  1496   00F188  FF                 	db	255
  1497   00F189  FF                 	db	255
  1498   00F18A  FF                 	db	255
  1499   00F18B  FF                 	db	255
  1500   00F18C  FF                 	db	255
  1501   00F18D  FF                 	db	255
  1502   00F18E  FF                 	db	255
  1503   00F18F  FF                 	db	255
  1504   00F190  FF                 	db	255
  1505   00F191  FF                 	db	255
  1506   00F192  FF                 	db	255
  1507   00F193  FF                 	db	255
  1508   00F194  FF                 	db	255
  1509   00F195  FF                 	db	255
  1510   00F196  FF                 	db	255
  1511   00F197  FF                 	db	255
  1512   00F198  FF                 	db	255
  1513   00F199  FF                 	db	255
  1514   00F19A  FF                 	db	255
  1515   00F19B  FF                 	db	255
  1516   00F19C  FF                 	db	255
  1517   00F19D  FF                 	db	255
  1518   00F19E  FF                 	db	255
  1519   00F19F  FF                 	db	255
  1520   00F1A0  FF                 	db	255
  1521   00F1A1  FF                 	db	255
  1522   00F1A2  FF                 	db	255
  1523   00F1A3  FF                 	db	255
  1524   00F1A4  FF                 	db	255
  1525   00F1A5  FF                 	db	255
  1526   00F1A6  FF                 	db	255
  1527   00F1A7  FF                 	db	255
  1528   00F1A8  FF                 	db	255
  1529   00F1A9  FF                 	db	255
  1530   00F1AA  FF                 	db	255
  1531   00F1AB  FF                 	db	255
  1532   00F1AC  FF                 	db	255
  1533   00F1AD  FF                 	db	255
  1534   00F1AE  FF                 	db	255
  1535   00F1AF  FF                 	db	255
  1536   00F1B0  FF                 	db	255
  1537   00F1B1  FF                 	db	255
  1538   00F1B2  FF                 	db	255
  1539   00F1B3  FF                 	db	255
  1540   00F1B4  FF                 	db	255
  1541   00F1B5  FF                 	db	255
  1542   00F1B6  FF                 	db	255
  1543   00F1B7  FF                 	db	255
  1544   00F1B8  FF                 	db	255
  1545   00F1B9  FF                 	db	255
  1546   00F1BA  FF                 	db	255
  1547   00F1BB  FF                 	db	255
  1548   00F1BC  FF                 	db	255
  1549   00F1BD  FF                 	db	255
  1550   00F1BE  FF                 	db	255
  1551   00F1BF  FF                 	db	255
  1552   00F1C0  FF                 	db	255
  1553   00F1C1  FF                 	db	255
  1554   00F1C2  FF                 	db	255
  1555   00F1C3  FF                 	db	255
  1556   00F1C4  FF                 	db	255
  1557   00F1C5  FF                 	db	255
  1558   00F1C6  FF                 	db	255
  1559   00F1C7  FF                 	db	255
  1560   00F1C8  FF                 	db	255
  1561   00F1C9  FF                 	db	255
  1562   00F1CA  FF                 	db	255
  1563   00F1CB  FF                 	db	255
  1564   00F1CC  FF                 	db	255
  1565   00F1CD  FF                 	db	255
  1566   00F1CE  FF                 	db	255
  1567   00F1CF  FF                 	db	255
  1568   00F1D0  FF                 	db	255
  1569   00F1D1  FF                 	db	255
  1570   00F1D2  FF                 	db	255
  1571   00F1D3  FF                 	db	255
  1572   00F1D4  FF                 	db	255
  1573   00F1D5  FF                 	db	255
  1574   00F1D6  FF                 	db	255
  1575   00F1D7  FF                 	db	255
  1576   00F1D8  FF                 	db	255
  1577   00F1D9  FF                 	db	255
  1578   00F1DA  FF                 	db	255
  1579   00F1DB  FF                 	db	255
  1580   00F1DC  FF                 	db	255
  1581   00F1DD  FF                 	db	255
  1582   00F1DE  FF                 	db	255
  1583   00F1DF  FF                 	db	255
  1584   00F1E0  FF                 	db	255
  1585   00F1E1  FF                 	db	255
  1586   00F1E2  FF                 	db	255
  1587   00F1E3  FF                 	db	255
  1588   00F1E4  FF                 	db	255
  1589   00F1E5  FF                 	db	255
  1590   00F1E6  FF                 	db	255
  1591   00F1E7  FF                 	db	255
  1592   00F1E8  FF                 	db	255
  1593   00F1E9  FF                 	db	255
  1594   00F1EA  FF                 	db	255
  1595   00F1EB  FF                 	db	255
  1596   00F1EC  FF                 	db	255
  1597   00F1ED  FF                 	db	255
  1598   00F1EE  FF                 	db	255
  1599   00F1EF  FF                 	db	255
  1600   00F1F0  FF                 	db	255
  1601   00F1F1  FF                 	db	255
  1602   00F1F2  FF                 	db	255
  1603   00F1F3  FF                 	db	255
  1604   00F1F4  FF                 	db	255
  1605   00F1F5  FF                 	db	255
  1606   00F1F6  FF                 	db	255
  1607   00F1F7  FF                 	db	255
  1608   00F1F8  FF                 	db	255
  1609   00F1F9  FF                 	db	255
  1610   00F1FA  FF                 	db	255
  1611   00F1FB  FF                 	db	255
  1612   00F1FC  FF                 	db	255
  1613   00F1FD  FF                 	db	255
  1614   00F1FE  FF                 	db	255
  1615   00F1FF  FF                 	db	255
  1616   00F200  FF                 	db	255
  1617   00F201  FF                 	db	255
  1618   00F202  FF                 	db	255
  1619   00F203  FF                 	db	255
  1620   00F204  FF                 	db	255
  1621   00F205  FF                 	db	255
  1622   00F206  FF                 	db	255
  1623   00F207  FF                 	db	255
  1624   00F208  FF                 	db	255
  1625   00F209  FF                 	db	255
  1626   00F20A  FF                 	db	255
  1627   00F20B  FF                 	db	255
  1628   00F20C  FF                 	db	255
  1629   00F20D  FF                 	db	255
  1630   00F20E  FF                 	db	255
  1631   00F20F  FF                 	db	255
  1632   00F210  FF                 	db	255
  1633   00F211  FF                 	db	255
  1634   00F212  FF                 	db	255
  1635   00F213  FF                 	db	255
  1636   00F214  FF                 	db	255
  1637   00F215  FF                 	db	255
  1638   00F216  FF                 	db	255
  1639   00F217  FF                 	db	255
  1640   00F218  FF                 	db	255
  1641   00F219  FF                 	db	255
  1642   00F21A  FF                 	db	255
  1643   00F21B  FF                 	db	255
  1644   00F21C  FF                 	db	255
  1645   00F21D  FF                 	db	255
  1646   00F21E  FF                 	db	255
  1647   00F21F  FF                 	db	255
  1648   00F220  FF                 	db	255
  1649   00F221  FF                 	db	255
  1650   00F222  FF                 	db	255
  1651   00F223  FF                 	db	255
  1652   00F224  FF                 	db	255
  1653   00F225  FF                 	db	255
  1654   00F226  FF                 	db	255
  1655   00F227  FF                 	db	255
  1656   00F228  FF                 	db	255
  1657   00F229  FF                 	db	255
  1658   00F22A  FF                 	db	255
  1659   00F22B  FF                 	db	255
  1660   00F22C  FF                 	db	255
  1661   00F22D  FF                 	db	255
  1662   00F22E  FF                 	db	255
  1663   00F22F  FF                 	db	255
  1664   00F230  FF                 	db	255
  1665   00F231  FF                 	db	255
  1666   00F232  FF                 	db	255
  1667   00F233  FF                 	db	255
  1668   00F234  FF                 	db	255
  1669   00F235  FF                 	db	255
  1670   00F236  FF                 	db	255
  1671   00F237  FF                 	db	255
  1672   00F238  FF                 	db	255
  1673   00F239  FF                 	db	255
  1674   00F23A  FF                 	db	255
  1675   00F23B  FF                 	db	255
  1676   00F23C  FF                 	db	255
  1677   00F23D  FF                 	db	255
  1678   00F23E  FF                 	db	255
  1679   00F23F  FF                 	db	255
  1680   00F240  FF                 	db	255
  1681   00F241  FF                 	db	255
  1682   00F242  FF                 	db	255
  1683   00F243  FF                 	db	255
  1684   00F244  FF                 	db	255
  1685   00F245  FF                 	db	255
  1686   00F246  FF                 	db	255
  1687   00F247  FF                 	db	255
  1688   00F248  FF                 	db	255
  1689   00F249  FF                 	db	255
  1690   00F24A  FF                 	db	255
  1691   00F24B  FF                 	db	255
  1692   00F24C  FF                 	db	255
  1693   00F24D  FF                 	db	255
  1694   00F24E  FF                 	db	255
  1695   00F24F  FF                 	db	255
  1696   00F250  FF                 	db	255
  1697   00F251  FF                 	db	255
  1698   00F252  FF                 	db	255
  1699   00F253  FF                 	db	255
  1700   00F254  FF                 	db	255
  1701   00F255  FF                 	db	255
  1702   00F256  FF                 	db	255
  1703   00F257  FF                 	db	255
  1704   00F258  FF                 	db	255
  1705   00F259  FF                 	db	255
  1706   00F25A  FF                 	db	255
  1707   00F25B  FF                 	db	255
  1708   00F25C  FF                 	db	255
  1709   00F25D  FF                 	db	255
  1710   00F25E  FF                 	db	255
  1711   00F25F  FF                 	db	255
  1712   00F260  FF                 	db	255
  1713   00F261  FF                 	db	255
  1714   00F262  FF                 	db	255
  1715   00F263  FF                 	db	255
  1716   00F264  FF                 	db	255
  1717   00F265  FF                 	db	255
  1718   00F266  FF                 	db	255
  1719   00F267  FF                 	db	255
  1720   00F268  FF                 	db	255
  1721   00F269  FF                 	db	255
  1722   00F26A  FF                 	db	255
  1723   00F26B  FF                 	db	255
  1724   00F26C  FF                 	db	255
  1725   00F26D  FF                 	db	255
  1726   00F26E  FF                 	db	255
  1727   00F26F  FF                 	db	255
  1728   00F270  FF                 	db	255
  1729   00F271  FF                 	db	255
  1730   00F272  FF                 	db	255
  1731   00F273  FF                 	db	255
  1732   00F274  FF                 	db	255
  1733   00F275  FF                 	db	255
  1734   00F276  FF                 	db	255
  1735   00F277  FF                 	db	255
  1736   00F278  FF                 	db	255
  1737   00F279  FF                 	db	255
  1738   00F27A  FF                 	db	255
  1739   00F27B  FF                 	db	255
  1740   00F27C  FF                 	db	255
  1741   00F27D  FF                 	db	255
  1742   00F27E  FF                 	db	255
  1743   00F27F  FF                 	db	255
  1744   00F280  FF                 	db	255
  1745   00F281  FF                 	db	255
  1746   00F282  FF                 	db	255
  1747   00F283  FF                 	db	255
  1748   00F284  FF                 	db	255
  1749   00F285  FF                 	db	255
  1750   00F286  FF                 	db	255
  1751   00F287  FF                 	db	255
  1752   00F288  FF                 	db	255
  1753   00F289  FF                 	db	255
  1754   00F28A  FF                 	db	255
  1755   00F28B  FF                 	db	255
  1756   00F28C  FF                 	db	255
  1757   00F28D  FF                 	db	255
  1758   00F28E  FF                 	db	255
  1759   00F28F  FF                 	db	255
  1760   00F290  FF                 	db	255
  1761   00F291  FF                 	db	255
  1762   00F292  FF                 	db	255
  1763   00F293  FF                 	db	255
  1764   00F294  FF                 	db	255
  1765   00F295  FF                 	db	255
  1766   00F296  FF                 	db	255
  1767   00F297  FF                 	db	255
  1768   00F298  FF                 	db	255
  1769   00F299  FF                 	db	255
  1770   00F29A  FF                 	db	255
  1771   00F29B  FF                 	db	255
  1772   00F29C  FF                 	db	255
  1773   00F29D  FF                 	db	255
  1774   00F29E  FF                 	db	255
  1775   00F29F  FF                 	db	255
  1776   00F2A0  FF                 	db	255
  1777   00F2A1  FF                 	db	255
  1778   00F2A2  FF                 	db	255
  1779   00F2A3  FF                 	db	255
  1780   00F2A4  FF                 	db	255
  1781   00F2A5  FF                 	db	255
  1782   00F2A6  FF                 	db	255
  1783   00F2A7  FF                 	db	255
  1784   00F2A8  FF                 	db	255
  1785   00F2A9  FF                 	db	255
  1786   00F2AA  FF                 	db	255
  1787   00F2AB  FF                 	db	255
  1788   00F2AC  FF                 	db	255
  1789   00F2AD  FF                 	db	255
  1790   00F2AE  FF                 	db	255
  1791   00F2AF  FF                 	db	255
  1792   00F2B0  FF                 	db	255
  1793   00F2B1  FF                 	db	255
  1794   00F2B2  FF                 	db	255
  1795   00F2B3  FF                 	db	255
  1796   00F2B4  FF                 	db	255
  1797   00F2B5  FF                 	db	255
  1798   00F2B6  FF                 	db	255
  1799   00F2B7  FF                 	db	255
  1800   00F2B8  FF                 	db	255
  1801   00F2B9  FF                 	db	255
  1802   00F2BA  FF                 	db	255
  1803   00F2BB  FF                 	db	255
  1804   00F2BC  FF                 	db	255
  1805   00F2BD  FF                 	db	255
  1806   00F2BE  FF                 	db	255
  1807   00F2BF  FF                 	db	255
  1808   00F2C0  FF                 	db	255
  1809   00F2C1  FF                 	db	255
  1810   00F2C2  FF                 	db	255
  1811   00F2C3  FF                 	db	255
  1812   00F2C4  FF                 	db	255
  1813   00F2C5  FF                 	db	255
  1814   00F2C6  FF                 	db	255
  1815   00F2C7  FF                 	db	255
  1816   00F2C8  FF                 	db	255
  1817   00F2C9  FF                 	db	255
  1818   00F2CA  FF                 	db	255
  1819   00F2CB  FF                 	db	255
  1820   00F2CC  FF                 	db	255
  1821   00F2CD  FF                 	db	255
  1822   00F2CE  FF                 	db	255
  1823   00F2CF  FF                 	db	255
  1824   00F2D0  FF                 	db	255
  1825   00F2D1  FF                 	db	255
  1826   00F2D2  FF                 	db	255
  1827   00F2D3  FF                 	db	255
  1828   00F2D4  FF                 	db	255
  1829   00F2D5  FF                 	db	255
  1830   00F2D6  FF                 	db	255
  1831   00F2D7  FF                 	db	255
  1832   00F2D8  FF                 	db	255
  1833   00F2D9  FF                 	db	255
  1834   00F2DA  FF                 	db	255
  1835   00F2DB  FF                 	db	255
  1836   00F2DC  FF                 	db	255
  1837   00F2DD  FF                 	db	255
  1838   00F2DE  FF                 	db	255
  1839   00F2DF  FF                 	db	255
  1840   00F2E0  FF                 	db	255
  1841   00F2E1  FF                 	db	255
  1842   00F2E2  FF                 	db	255
  1843   00F2E3  FF                 	db	255
  1844   00F2E4  FF                 	db	255
  1845   00F2E5  FF                 	db	255
  1846   00F2E6  FF                 	db	255
  1847   00F2E7  FF                 	db	255
  1848   00F2E8  FF                 	db	255
  1849   00F2E9  FF                 	db	255
  1850   00F2EA  FF                 	db	255
  1851   00F2EB  FF                 	db	255
  1852   00F2EC  FF                 	db	255
  1853   00F2ED  FF                 	db	255
  1854   00F2EE  FF                 	db	255
  1855   00F2EF  FF                 	db	255
  1856   00F2F0  FF                 	db	255
  1857   00F2F1  FF                 	db	255
  1858   00F2F2  FF                 	db	255
  1859   00F2F3  FF                 	db	255
  1860   00F2F4  FF                 	db	255
  1861   00F2F5  FF                 	db	255
  1862   00F2F6  FF                 	db	255
  1863   00F2F7  FF                 	db	255
  1864   00F2F8  FF                 	db	255
  1865   00F2F9  FF                 	db	255
  1866   00F2FA  FF                 	db	255
  1867   00F2FB  FF                 	db	255
  1868   00F2FC  FF                 	db	255
  1869   00F2FD  FF                 	db	255
  1870   00F2FE  FF                 	db	255
  1871   00F2FF  FF                 	db	255
  1872   00F300  FF                 	db	255
  1873   00F301  FF                 	db	255
  1874   00F302  FF                 	db	255
  1875   00F303  FF                 	db	255
  1876   00F304  FF                 	db	255
  1877   00F305  FF                 	db	255
  1878   00F306  FF                 	db	255
  1879   00F307  FF                 	db	255
  1880   00F308  FF                 	db	255
  1881   00F309  FF                 	db	255
  1882   00F30A  FF                 	db	255
  1883   00F30B  FF                 	db	255
  1884   00F30C  FF                 	db	255
  1885   00F30D  FF                 	db	255
  1886   00F30E  FF                 	db	255
  1887   00F30F  FF                 	db	255
  1888   00F310  FF                 	db	255
  1889   00F311  FF                 	db	255
  1890   00F312  FF                 	db	255
  1891   00F313  FF                 	db	255
  1892   00F314  FF                 	db	255
  1893   00F315  FF                 	db	255
  1894   00F316  FF                 	db	255
  1895   00F317  FF                 	db	255
  1896   00F318  FF                 	db	255
  1897   00F319  FF                 	db	255
  1898   00F31A  FF                 	db	255
  1899   00F31B  FF                 	db	255
  1900   00F31C  FF                 	db	255
  1901   00F31D  FF                 	db	255
  1902   00F31E  FF                 	db	255
  1903   00F31F  FF                 	db	255
  1904   00F320  FF                 	db	255
  1905   00F321  FF                 	db	255
  1906   00F322  FF                 	db	255
  1907   00F323  FF                 	db	255
  1908   00F324  FF                 	db	255
  1909   00F325  FF                 	db	255
  1910   00F326  FF                 	db	255
  1911   00F327  FF                 	db	255
  1912   00F328  FF                 	db	255
  1913   00F329  FF                 	db	255
  1914   00F32A  FF                 	db	255
  1915   00F32B  FF                 	db	255
  1916   00F32C  FF                 	db	255
  1917   00F32D  FF                 	db	255
  1918   00F32E  FF                 	db	255
  1919   00F32F  FF                 	db	255
  1920   00F330  FF                 	db	255
  1921   00F331  FF                 	db	255
  1922   00F332  FF                 	db	255
  1923   00F333  FF                 	db	255
  1924   00F334  FF                 	db	255
  1925   00F335  FF                 	db	255
  1926   00F336  FF                 	db	255
  1927   00F337  FF                 	db	255
  1928   00F338  FF                 	db	255
  1929   00F339  FF                 	db	255
  1930   00F33A  FF                 	db	255
  1931   00F33B  FF                 	db	255
  1932   00F33C  FF                 	db	255
  1933   00F33D  FF                 	db	255
  1934   00F33E  FF                 	db	255
  1935   00F33F  FF                 	db	255
  1936   00F340  FF                 	db	255
  1937   00F341  FF                 	db	255
  1938   00F342  FF                 	db	255
  1939   00F343  FF                 	db	255
  1940   00F344  FF                 	db	255
  1941   00F345  FF                 	db	255
  1942   00F346  FF                 	db	255
  1943   00F347  FF                 	db	255
  1944   00F348  FF                 	db	255
  1945   00F349  FF                 	db	255
  1946   00F34A  FF                 	db	255
  1947   00F34B  FF                 	db	255
  1948   00F34C  FF                 	db	255
  1949   00F34D  FF                 	db	255
  1950   00F34E  FF                 	db	255
  1951   00F34F  FF                 	db	255
  1952   00F350  FF                 	db	255
  1953   00F351  FF                 	db	255
  1954   00F352  FF                 	db	255
  1955   00F353  FF                 	db	255
  1956   00F354  FF                 	db	255
  1957   00F355  FF                 	db	255
  1958   00F356  FF                 	db	255
  1959   00F357  FF                 	db	255
  1960   00F358  FF                 	db	255
  1961   00F359  FF                 	db	255
  1962   00F35A  FF                 	db	255
  1963   00F35B  FF                 	db	255
  1964   00F35C  FF                 	db	255
  1965   00F35D  FF                 	db	255
  1966   00F35E  FF                 	db	255
  1967   00F35F  FF                 	db	255
  1968   00F360  FF                 	db	255
  1969   00F361  FF                 	db	255
  1970   00F362  FF                 	db	255
  1971   00F363  FF                 	db	255
  1972   00F364  FF                 	db	255
  1973   00F365  FF                 	db	255
  1974   00F366  FF                 	db	255
  1975   00F367  FF                 	db	255
  1976   00F368  FF                 	db	255
  1977   00F369  FF                 	db	255
  1978   00F36A  FF                 	db	255
  1979   00F36B  FF                 	db	255
  1980   00F36C  FF                 	db	255
  1981   00F36D  FF                 	db	255
  1982   00F36E  FF                 	db	255
  1983   00F36F  FF                 	db	255
  1984   00F370  FF                 	db	255
  1985   00F371  FF                 	db	255
  1986   00F372  FF                 	db	255
  1987   00F373  FF                 	db	255
  1988   00F374  FF                 	db	255
  1989   00F375  FF                 	db	255
  1990   00F376  FF                 	db	255
  1991   00F377  FF                 	db	255
  1992   00F378  FF                 	db	255
  1993   00F379  FF                 	db	255
  1994   00F37A  FF                 	db	255
  1995   00F37B  FF                 	db	255
  1996   00F37C  FF                 	db	255
  1997   00F37D  FF                 	db	255
  1998   00F37E  FF                 	db	255
  1999   00F37F  FF                 	db	255
  2000   00F380  FF                 	db	255
  2001   00F381  FF                 	db	255
  2002   00F382  FF                 	db	255
  2003   00F383  FF                 	db	255
  2004   00F384  FF                 	db	255
  2005   00F385  FF                 	db	255
  2006   00F386  FF                 	db	255
  2007   00F387  FF                 	db	255
  2008   00F388  FF                 	db	255
  2009   00F389  FF                 	db	255
  2010   00F38A  FF                 	db	255
  2011   00F38B  FF                 	db	255
  2012   00F38C  FF                 	db	255
  2013   00F38D  FF                 	db	255
  2014   00F38E  FF                 	db	255
  2015   00F38F  FF                 	db	255
  2016   00F390  FF                 	db	255
  2017   00F391  FF                 	db	255
  2018   00F392  FF                 	db	255
  2019   00F393  FF                 	db	255
  2020   00F394  FF                 	db	255
  2021   00F395  FF                 	db	255
  2022   00F396  FF                 	db	255
  2023   00F397  FF                 	db	255
  2024   00F398  FF                 	db	255
  2025   00F399  FF                 	db	255
  2026   00F39A  FF                 	db	255
  2027   00F39B  FF                 	db	255
  2028   00F39C  FF                 	db	255
  2029   00F39D  FF                 	db	255
  2030   00F39E  FF                 	db	255
  2031   00F39F  FF                 	db	255
  2032   00F3A0  FF                 	db	255
  2033   00F3A1  FF                 	db	255
  2034   00F3A2  FF                 	db	255
  2035   00F3A3  FF                 	db	255
  2036   00F3A4  FF                 	db	255
  2037   00F3A5  FF                 	db	255
  2038   00F3A6  FF                 	db	255
  2039   00F3A7  FF                 	db	255
  2040   00F3A8  FF                 	db	255
  2041   00F3A9  FF                 	db	255
  2042   00F3AA  FF                 	db	255
  2043   00F3AB  FF                 	db	255
  2044   00F3AC  FF                 	db	255
  2045   00F3AD  FF                 	db	255
  2046   00F3AE  FF                 	db	255
  2047   00F3AF  FF                 	db	255
  2048   00F3B0  FF                 	db	255
  2049   00F3B1  FF                 	db	255
  2050   00F3B2  FF                 	db	255
  2051   00F3B3  FF                 	db	255
  2052   00F3B4  FF                 	db	255
  2053   00F3B5  FF                 	db	255
  2054   00F3B6  FF                 	db	255
  2055   00F3B7  FF                 	db	255
  2056   00F3B8  FF                 	db	255
  2057   00F3B9  FF                 	db	255
  2058   00F3BA  FF                 	db	255
  2059   00F3BB  FF                 	db	255
  2060   00F3BC  FF                 	db	255
  2061   00F3BD  FF                 	db	255
  2062   00F3BE  FF                 	db	255
  2063   00F3BF  FF                 	db	255
  2064   00F3C0  FF                 	db	255
  2065   00F3C1  FF                 	db	255
  2066   00F3C2  FF                 	db	255
  2067   00F3C3  FF                 	db	255
  2068   00F3C4  FF                 	db	255
  2069   00F3C5  FF                 	db	255
  2070   00F3C6  FF                 	db	255
  2071   00F3C7  FF                 	db	255
  2072   00F3C8  FF                 	db	255
  2073   00F3C9  FF                 	db	255
  2074   00F3CA  FF                 	db	255
  2075   00F3CB  FF                 	db	255
  2076   00F3CC  FF                 	db	255
  2077   00F3CD  FF                 	db	255
  2078   00F3CE  FF                 	db	255
  2079   00F3CF  FF                 	db	255
  2080   00F3D0  FF                 	db	255
  2081   00F3D1  FF                 	db	255
  2082   00F3D2  FF                 	db	255
  2083   00F3D3  FF                 	db	255
  2084   00F3D4  FF                 	db	255
  2085   00F3D5  FF                 	db	255
  2086   00F3D6  FF                 	db	255
  2087   00F3D7  FF                 	db	255
  2088   00F3D8  FF                 	db	255
  2089   00F3D9  FF                 	db	255
  2090   00F3DA  FF                 	db	255
  2091   00F3DB  FF                 	db	255
  2092   00F3DC  FF                 	db	255
  2093   00F3DD  FF                 	db	255
  2094   00F3DE  FF                 	db	255
  2095   00F3DF  FF                 	db	255
  2096   00F3E0  FF                 	db	255
  2097   00F3E1  FF                 	db	255
  2098   00F3E2  FF                 	db	255
  2099   00F3E3  FF                 	db	255
  2100   00F3E4  FF                 	db	255
  2101   00F3E5  FF                 	db	255
  2102   00F3E6  FF                 	db	255
  2103   00F3E7  FF                 	db	255
  2104   00F3E8  FF                 	db	255
  2105   00F3E9  FF                 	db	255
  2106   00F3EA  FF                 	db	255
  2107   00F3EB  FF                 	db	255
  2108   00F3EC  FF                 	db	255
  2109   00F3ED  FF                 	db	255
  2110   00F3EE  FF                 	db	255
  2111   00F3EF  FF                 	db	255
  2112   00F3F0  FF                 	db	255
  2113   00F3F1  FF                 	db	255
  2114   00F3F2  FF                 	db	255
  2115   00F3F3  FF                 	db	255
  2116   00F3F4  FF                 	db	255
  2117   00F3F5  FF                 	db	255
  2118   00F3F6  FF                 	db	255
  2119   00F3F7  FF                 	db	255
  2120   00F3F8  FF                 	db	255
  2121   00F3F9  FF                 	db	255
  2122   00F3FA  FF                 	db	255
  2123   00F3FB  FF                 	db	255
  2124   00F3FC  FF                 	db	255
  2125   00F3FD  FF                 	db	255
  2126   00F3FE  FF                 	db	255
  2127   00F3FF  FF                 	db	255
  2128   00F400  FF                 	db	255
  2129   00F401  FF                 	db	255
  2130   00F402  FF                 	db	255
  2131   00F403  FF                 	db	255
  2132   00F404  FF                 	db	255
  2133   00F405  FF                 	db	255
  2134   00F406  FF                 	db	255
  2135   00F407  FF                 	db	255
  2136   00F408  FF                 	db	255
  2137   00F409  FF                 	db	255
  2138   00F40A  FF                 	db	255
  2139   00F40B  FF                 	db	255
  2140   00F40C  FF                 	db	255
  2141   00F40D  FF                 	db	255
  2142   00F40E  FF                 	db	255
  2143   00F40F  FF                 	db	255
  2144   00F410  FF                 	db	255
  2145   00F411  FF                 	db	255
  2146   00F412  FF                 	db	255
  2147   00F413  FF                 	db	255
  2148   00F414  FF                 	db	255
  2149   00F415  FF                 	db	255
  2150   00F416  FF                 	db	255
  2151   00F417  FF                 	db	255
  2152   00F418  FF                 	db	255
  2153   00F419  FF                 	db	255
  2154   00F41A  FF                 	db	255
  2155   00F41B  FF                 	db	255
  2156   00F41C  FF                 	db	255
  2157   00F41D  FF                 	db	255
  2158   00F41E  FF                 	db	255
  2159   00F41F  FF                 	db	255
  2160   00F420  FF                 	db	255
  2161   00F421  FF                 	db	255
  2162   00F422  FF                 	db	255
  2163   00F423  FF                 	db	255
  2164   00F424  FF                 	db	255
  2165   00F425  FF                 	db	255
  2166   00F426  FF                 	db	255
  2167   00F427  FF                 	db	255
  2168   00F428  FF                 	db	255
  2169   00F429  FF                 	db	255
  2170   00F42A  FF                 	db	255
  2171   00F42B  FF                 	db	255
  2172   00F42C  FF                 	db	255
  2173   00F42D  FF                 	db	255
  2174   00F42E  FF                 	db	255
  2175   00F42F  FF                 	db	255
  2176   00F430  FF                 	db	255
  2177   00F431  FF                 	db	255
  2178   00F432  FF                 	db	255
  2179   00F433  FF                 	db	255
  2180   00F434  FF                 	db	255
  2181   00F435  FF                 	db	255
  2182   00F436  FF                 	db	255
  2183   00F437  FF                 	db	255
  2184   00F438  FF                 	db	255
  2185   00F439  FF                 	db	255
  2186   00F43A  FF                 	db	255
  2187   00F43B  FF                 	db	255
  2188   00F43C  FF                 	db	255
  2189   00F43D  FF                 	db	255
  2190   00F43E  FF                 	db	255
  2191   00F43F  FF                 	db	255
  2192   00F440  FF                 	db	255
  2193   00F441  FF                 	db	255
  2194   00F442  FF                 	db	255
  2195   00F443  FF                 	db	255
  2196   00F444  FF                 	db	255
  2197   00F445  FF                 	db	255
  2198   00F446  FF                 	db	255
  2199   00F447  FF                 	db	255
  2200   00F448  FF                 	db	255
  2201   00F449  FF                 	db	255
  2202   00F44A  FF                 	db	255
  2203   00F44B  FF                 	db	255
  2204   00F44C  FF                 	db	255
  2205   00F44D  FF                 	db	255
  2206   00F44E  FF                 	db	255
  2207   00F44F  FF                 	db	255
  2208   00F450  FF                 	db	255
  2209   00F451  FF                 	db	255
  2210   00F452  FF                 	db	255
  2211   00F453  FF                 	db	255
  2212   00F454  FF                 	db	255
  2213   00F455  FF                 	db	255
  2214   00F456  FF                 	db	255
  2215   00F457  FF                 	db	255
  2216   00F458  FF                 	db	255
  2217   00F459  FF                 	db	255
  2218   00F45A  FF                 	db	255
  2219   00F45B  FF                 	db	255
  2220   00F45C  FF                 	db	255
  2221   00F45D  FF                 	db	255
  2222   00F45E  FF                 	db	255
  2223   00F45F  FF                 	db	255
  2224   00F460  FF                 	db	255
  2225   00F461  FF                 	db	255
  2226   00F462  FF                 	db	255
  2227   00F463  FF                 	db	255
  2228   00F464  FF                 	db	255
  2229   00F465  FF                 	db	255
  2230   00F466  FF                 	db	255
  2231   00F467  FF                 	db	255
  2232   00F468  FF                 	db	255
  2233   00F469  FF                 	db	255
  2234   00F46A  FF                 	db	255
  2235   00F46B  FF                 	db	255
  2236   00F46C  FF                 	db	255
  2237   00F46D  FF                 	db	255
  2238   00F46E  FF                 	db	255
  2239   00F46F  FF                 	db	255
  2240   00F470  FF                 	db	255
  2241   00F471  FF                 	db	255
  2242   00F472  FF                 	db	255
  2243   00F473  FF                 	db	255
  2244   00F474  FF                 	db	255
  2245   00F475  FF                 	db	255
  2246   00F476  FF                 	db	255
  2247   00F477  FF                 	db	255
  2248   00F478  FF                 	db	255
  2249   00F479  FF                 	db	255
  2250   00F47A  FF                 	db	255
  2251   00F47B  FF                 	db	255
  2252   00F47C  FF                 	db	255
  2253   00F47D  FF                 	db	255
  2254   00F47E  FF                 	db	255
  2255   00F47F  FF                 	db	255
  2256   00F480  FF                 	db	255
  2257   00F481  FF                 	db	255
  2258   00F482  FF                 	db	255
  2259   00F483  FF                 	db	255
  2260   00F484  FF                 	db	255
  2261   00F485  FF                 	db	255
  2262   00F486  FF                 	db	255
  2263   00F487  FF                 	db	255
  2264   00F488  FF                 	db	255
  2265   00F489  FF                 	db	255
  2266   00F48A  FF                 	db	255
  2267   00F48B  FF                 	db	255
  2268   00F48C  FF                 	db	255
  2269   00F48D  FF                 	db	255
  2270   00F48E  FF                 	db	255
  2271   00F48F  FF                 	db	255
  2272   00F490  FF                 	db	255
  2273   00F491  FF                 	db	255
  2274   00F492  FF                 	db	255
  2275   00F493  FF                 	db	255
  2276   00F494  FF                 	db	255
  2277   00F495  FF                 	db	255
  2278   00F496  FF                 	db	255
  2279   00F497  FF                 	db	255
  2280   00F498  FF                 	db	255
  2281   00F499  FF                 	db	255
  2282   00F49A  FF                 	db	255
  2283   00F49B  FF                 	db	255
  2284   00F49C  FF                 	db	255
  2285   00F49D  FF                 	db	255
  2286   00F49E  FF                 	db	255
  2287   00F49F  FF                 	db	255
  2288   00F4A0  FF                 	db	255
  2289   00F4A1  FF                 	db	255
  2290   00F4A2  FF                 	db	255
  2291   00F4A3  FF                 	db	255
  2292   00F4A4  FF                 	db	255
  2293   00F4A5  FF                 	db	255
  2294   00F4A6  FF                 	db	255
  2295   00F4A7  FF                 	db	255
  2296   00F4A8  FF                 	db	255
  2297   00F4A9  FF                 	db	255
  2298   00F4AA  FF                 	db	255
  2299   00F4AB  FF                 	db	255
  2300   00F4AC  FF                 	db	255
  2301   00F4AD  FF                 	db	255
  2302   00F4AE  FF                 	db	255
  2303   00F4AF  FF                 	db	255
  2304   00F4B0  FF                 	db	255
  2305   00F4B1  FF                 	db	255
  2306   00F4B2  FF                 	db	255
  2307   00F4B3  FF                 	db	255
  2308   00F4B4  FF                 	db	255
  2309   00F4B5  FF                 	db	255
  2310   00F4B6  FF                 	db	255
  2311   00F4B7  FF                 	db	255
  2312   00F4B8  FF                 	db	255
  2313   00F4B9  FF                 	db	255
  2314   00F4BA  FF                 	db	255
  2315   00F4BB  FF                 	db	255
  2316   00F4BC  FF                 	db	255
  2317   00F4BD  FF                 	db	255
  2318   00F4BE  FF                 	db	255
  2319   00F4BF  FF                 	db	255
  2320   00F4C0  FF                 	db	255
  2321   00F4C1  FF                 	db	255
  2322   00F4C2  FF                 	db	255
  2323   00F4C3  FF                 	db	255
  2324   00F4C4  FF                 	db	255
  2325   00F4C5  FF                 	db	255
  2326   00F4C6  FF                 	db	255
  2327   00F4C7  FF                 	db	255
  2328   00F4C8  FF                 	db	255
  2329   00F4C9  FF                 	db	255
  2330   00F4CA  FF                 	db	255
  2331   00F4CB  FF                 	db	255
  2332   00F4CC  FF                 	db	255
  2333   00F4CD  FF                 	db	255
  2334   00F4CE  FF                 	db	255
  2335   00F4CF  FF                 	db	255
  2336   00F4D0  FF                 	db	255
  2337   00F4D1  FF                 	db	255
  2338   00F4D2  FF                 	db	255
  2339   00F4D3  FF                 	db	255
  2340   00F4D4  FF                 	db	255
  2341   00F4D5  FF                 	db	255
  2342   00F4D6  FF                 	db	255
  2343   00F4D7  FF                 	db	255
  2344   00F4D8  FF                 	db	255
  2345   00F4D9  FF                 	db	255
  2346   00F4DA  FF                 	db	255
  2347   00F4DB  FF                 	db	255
  2348   00F4DC  FF                 	db	255
  2349   00F4DD  FF                 	db	255
  2350   00F4DE  FF                 	db	255
  2351   00F4DF  FF                 	db	255
  2352   00F4E0  FF                 	db	255
  2353   00F4E1  FF                 	db	255
  2354   00F4E2  FF                 	db	255
  2355   00F4E3  FF                 	db	255
  2356   00F4E4  FF                 	db	255
  2357   00F4E5  FF                 	db	255
  2358   00F4E6  FF                 	db	255
  2359   00F4E7  FF                 	db	255
  2360   00F4E8  FF                 	db	255
  2361   00F4E9  FF                 	db	255
  2362   00F4EA  FF                 	db	255
  2363   00F4EB  FF                 	db	255
  2364   00F4EC  FF                 	db	255
  2365   00F4ED  FF                 	db	255
  2366   00F4EE  FF                 	db	255
  2367   00F4EF  FF                 	db	255
  2368   00F4F0  FF                 	db	255
  2369   00F4F1  FF                 	db	255
  2370   00F4F2  FF                 	db	255
  2371   00F4F3  FF                 	db	255
  2372   00F4F4  FF                 	db	255
  2373   00F4F5  FF                 	db	255
  2374   00F4F6  FF                 	db	255
  2375   00F4F7  FF                 	db	255
  2376   00F4F8  FF                 	db	255
  2377   00F4F9  FF                 	db	255
  2378   00F4FA  FF                 	db	255
  2379   00F4FB  FF                 	db	255
  2380   00F4FC  FF                 	db	255
  2381   00F4FD  FF                 	db	255
  2382   00F4FE  FF                 	db	255
  2383   00F4FF  FF                 	db	255
  2384   00F500  FF                 	db	255
  2385   00F501  FF                 	db	255
  2386   00F502  FF                 	db	255
  2387   00F503  FF                 	db	255
  2388   00F504  FF                 	db	255
  2389   00F505  FF                 	db	255
  2390   00F506  FF                 	db	255
  2391   00F507  FF                 	db	255
  2392   00F508  FF                 	db	255
  2393   00F509  FF                 	db	255
  2394   00F50A  FF                 	db	255
  2395   00F50B  FF                 	db	255
  2396   00F50C  FF                 	db	255
  2397   00F50D  FF                 	db	255
  2398   00F50E  FF                 	db	255
  2399   00F50F  FF                 	db	255
  2400   00F510  FF                 	db	255
  2401   00F511  FF                 	db	255
  2402   00F512  FF                 	db	255
  2403   00F513  FF                 	db	255
  2404   00F514  FF                 	db	255
  2405   00F515  FF                 	db	255
  2406   00F516  FF                 	db	255
  2407   00F517  FF                 	db	255
  2408   00F518  FF                 	db	255
  2409   00F519  FF                 	db	255
  2410   00F51A  FF                 	db	255
  2411   00F51B  FF                 	db	255
  2412   00F51C  FF                 	db	255
  2413   00F51D  FF                 	db	255
  2414   00F51E  FF                 	db	255
  2415   00F51F  FF                 	db	255
  2416   00F520  FF                 	db	255
  2417   00F521  FF                 	db	255
  2418   00F522  FF                 	db	255
  2419   00F523  FF                 	db	255
  2420   00F524  FF                 	db	255
  2421   00F525  FF                 	db	255
  2422   00F526  FF                 	db	255
  2423   00F527  FF                 	db	255
  2424   00F528  FF                 	db	255
  2425   00F529  FF                 	db	255
  2426   00F52A  FF                 	db	255
  2427   00F52B  FF                 	db	255
  2428   00F52C  FF                 	db	255
  2429   00F52D  FF                 	db	255
  2430   00F52E  FF                 	db	255
  2431   00F52F  FF                 	db	255
  2432   00F530  FF                 	db	255
  2433   00F531  FF                 	db	255
  2434   00F532  FF                 	db	255
  2435   00F533  FF                 	db	255
  2436   00F534  FF                 	db	255
  2437   00F535  FF                 	db	255
  2438   00F536  FF                 	db	255
  2439   00F537  FF                 	db	255
  2440   00F538  FF                 	db	255
  2441   00F539  FF                 	db	255
  2442   00F53A  FF                 	db	255
  2443   00F53B  FF                 	db	255
  2444   00F53C  FF                 	db	255
  2445   00F53D  FF                 	db	255
  2446   00F53E  FF                 	db	255
  2447   00F53F  FF                 	db	255
  2448   00F540  FF                 	db	255
  2449   00F541  FF                 	db	255
  2450   00F542  FF                 	db	255
  2451   00F543  FF                 	db	255
  2452   00F544  FF                 	db	255
  2453   00F545  FF                 	db	255
  2454   00F546  FF                 	db	255
  2455   00F547  FF                 	db	255
  2456   00F548  FF                 	db	255
  2457   00F549  FF                 	db	255
  2458   00F54A  FF                 	db	255
  2459   00F54B  FF                 	db	255
  2460   00F54C  FF                 	db	255
  2461   00F54D  FF                 	db	255
  2462   00F54E  FF                 	db	255
  2463   00F54F  FF                 	db	255
  2464   00F550  FF                 	db	255
  2465   00F551  FF                 	db	255
  2466   00F552  FF                 	db	255
  2467   00F553  FF                 	db	255
  2468   00F554  FF                 	db	255
  2469   00F555  FF                 	db	255
  2470   00F556  FF                 	db	255
  2471   00F557  FF                 	db	255
  2472   00F558  FF                 	db	255
  2473   00F559  FF                 	db	255
  2474   00F55A  FF                 	db	255
  2475   00F55B  FF                 	db	255
  2476   00F55C  FF                 	db	255
  2477   00F55D  FF                 	db	255
  2478   00F55E  FF                 	db	255
  2479   00F55F  FF                 	db	255
  2480   00F560  FF                 	db	255
  2481   00F561  FF                 	db	255
  2482   00F562  FF                 	db	255
  2483   00F563  FF                 	db	255
  2484   00F564  FF                 	db	255
  2485   00F565  FF                 	db	255
  2486   00F566  FF                 	db	255
  2487   00F567  FF                 	db	255
  2488   00F568  FF                 	db	255
  2489   00F569  FF                 	db	255
  2490   00F56A  FF                 	db	255
  2491   00F56B  FF                 	db	255
  2492   00F56C  FF                 	db	255
  2493   00F56D  FF                 	db	255
  2494   00F56E  FF                 	db	255
  2495   00F56F  FF                 	db	255
  2496   00F570  FF                 	db	255
  2497   00F571  FF                 	db	255
  2498   00F572  FF                 	db	255
  2499   00F573  FF                 	db	255
  2500   00F574  FF                 	db	255
  2501   00F575  FF                 	db	255
  2502   00F576  FF                 	db	255
  2503   00F577  FF                 	db	255
  2504   00F578  FF                 	db	255
  2505   00F579  FF                 	db	255
  2506   00F57A  FF                 	db	255
  2507   00F57B  FF                 	db	255
  2508   00F57C  FF                 	db	255
  2509   00F57D  FF                 	db	255
  2510   00F57E  FF                 	db	255
  2511   00F57F  FF                 	db	255
  2512   00F580  FF                 	db	255
  2513   00F581  FF                 	db	255
  2514   00F582  FF                 	db	255
  2515   00F583  FF                 	db	255
  2516   00F584  FF                 	db	255
  2517   00F585  FF                 	db	255
  2518   00F586  FF                 	db	255
  2519   00F587  FF                 	db	255
  2520   00F588  FF                 	db	255
  2521   00F589  FF                 	db	255
  2522   00F58A  FF                 	db	255
  2523   00F58B  FF                 	db	255
  2524   00F58C  FF                 	db	255
  2525   00F58D  FF                 	db	255
  2526   00F58E  FF                 	db	255
  2527   00F58F  FF                 	db	255
  2528   00F590  FF                 	db	255
  2529   00F591  FF                 	db	255
  2530   00F592  FF                 	db	255
  2531   00F593  FF                 	db	255
  2532   00F594  FF                 	db	255
  2533   00F595  FF                 	db	255
  2534   00F596  FF                 	db	255
  2535   00F597  FF                 	db	255
  2536   00F598  FF                 	db	255
  2537   00F599  FF                 	db	255
  2538   00F59A  FF                 	db	255
  2539   00F59B  FF                 	db	255
  2540   00F59C  FF                 	db	255
  2541   00F59D  FF                 	db	255
  2542   00F59E  FF                 	db	255
  2543   00F59F  FF                 	db	255
  2544   00F5A0  FF                 	db	255
  2545   00F5A1  FF                 	db	255
  2546   00F5A2  FF                 	db	255
  2547   00F5A3  FF                 	db	255
  2548   00F5A4  FF                 	db	255
  2549   00F5A5  FF                 	db	255
  2550   00F5A6  FF                 	db	255
  2551   00F5A7  FF                 	db	255
  2552   00F5A8  FF                 	db	255
  2553   00F5A9  FF                 	db	255
  2554   00F5AA  FF                 	db	255
  2555   00F5AB  FF                 	db	255
  2556   00F5AC  FF                 	db	255
  2557   00F5AD  FF                 	db	255
  2558   00F5AE  FF                 	db	255
  2559   00F5AF  FF                 	db	255
  2560   00F5B0  FF                 	db	255
  2561   00F5B1  FF                 	db	255
  2562   00F5B2  FF                 	db	255
  2563   00F5B3  FF                 	db	255
  2564   00F5B4  FF                 	db	255
  2565   00F5B5  FF                 	db	255
  2566   00F5B6  FF                 	db	255
  2567   00F5B7  FF                 	db	255
  2568   00F5B8  FF                 	db	255
  2569   00F5B9  FF                 	db	255
  2570   00F5BA  FF                 	db	255
  2571   00F5BB  FF                 	db	255
  2572   00F5BC  FF                 	db	255
  2573   00F5BD  FF                 	db	255
  2574   00F5BE  FF                 	db	255
  2575   00F5BF  FF                 	db	255
  2576   00F5C0  FF                 	db	255
  2577   00F5C1  FF                 	db	255
  2578   00F5C2  FF                 	db	255
  2579   00F5C3  FF                 	db	255
  2580   00F5C4  FF                 	db	255
  2581   00F5C5  FF                 	db	255
  2582   00F5C6  FF                 	db	255
  2583   00F5C7  FF                 	db	255
  2584   00F5C8  FF                 	db	255
  2585   00F5C9  FF                 	db	255
  2586   00F5CA  FF                 	db	255
  2587   00F5CB  FF                 	db	255
  2588   00F5CC  FF                 	db	255
  2589   00F5CD  FF                 	db	255
  2590   00F5CE  FF                 	db	255
  2591   00F5CF  FF                 	db	255
  2592   00F5D0  FF                 	db	255
  2593   00F5D1  FF                 	db	255
  2594   00F5D2  FF                 	db	255
  2595   00F5D3  FF                 	db	255
  2596   00F5D4  FF                 	db	255
  2597   00F5D5  FF                 	db	255
  2598   00F5D6  FF                 	db	255
  2599   00F5D7  FF                 	db	255
  2600   00F5D8  FF                 	db	255
  2601   00F5D9  FF                 	db	255
  2602   00F5DA  FF                 	db	255
  2603   00F5DB  FF                 	db	255
  2604   00F5DC  FF                 	db	255
  2605   00F5DD  FF                 	db	255
  2606   00F5DE  FF                 	db	255
  2607   00F5DF  FF                 	db	255
  2608   00F5E0  FF                 	db	255
  2609   00F5E1  FF                 	db	255
  2610   00F5E2  FF                 	db	255
  2611   00F5E3  FF                 	db	255
  2612   00F5E4  FF                 	db	255
  2613   00F5E5  FF                 	db	255
  2614   00F5E6  FF                 	db	255
  2615   00F5E7  FF                 	db	255
  2616   00F5E8  FF                 	db	255
  2617   00F5E9  FF                 	db	255
  2618   00F5EA  FF                 	db	255
  2619   00F5EB  FF                 	db	255
  2620   00F5EC  FF                 	db	255
  2621   00F5ED  FF                 	db	255
  2622   00F5EE  FF                 	db	255
  2623   00F5EF  FF                 	db	255
  2624   00F5F0  FF                 	db	255
  2625   00F5F1  FF                 	db	255
  2626   00F5F2  FF                 	db	255
  2627   00F5F3  FF                 	db	255
  2628   00F5F4  FF                 	db	255
  2629   00F5F5  FF                 	db	255
  2630   00F5F6  FF                 	db	255
  2631   00F5F7  FF                 	db	255
  2632   00F5F8  FF                 	db	255
  2633   00F5F9  FF                 	db	255
  2634   00F5FA  FF                 	db	255
  2635   00F5FB  FF                 	db	255
  2636   00F5FC  FF                 	db	255
  2637   00F5FD  FF                 	db	255
  2638   00F5FE  FF                 	db	255
  2639   00F5FF  FF                 	db	255
  2640   00F600  FF                 	db	255
  2641   00F601  FF                 	db	255
  2642   00F602  FF                 	db	255
  2643   00F603  FF                 	db	255
  2644   00F604  FF                 	db	255
  2645   00F605  FF                 	db	255
  2646   00F606  FF                 	db	255
  2647   00F607  FF                 	db	255
  2648   00F608  FF                 	db	255
  2649   00F609  FF                 	db	255
  2650   00F60A  FF                 	db	255
  2651   00F60B  FF                 	db	255
  2652   00F60C  FF                 	db	255
  2653   00F60D  FF                 	db	255
  2654   00F60E  FF                 	db	255
  2655   00F60F  FF                 	db	255
  2656   00F610  FF                 	db	255
  2657   00F611  FF                 	db	255
  2658   00F612  FF                 	db	255
  2659   00F613  FF                 	db	255
  2660   00F614  FF                 	db	255
  2661   00F615  FF                 	db	255
  2662   00F616  FF                 	db	255
  2663   00F617  FF                 	db	255
  2664   00F618  FF                 	db	255
  2665   00F619  FF                 	db	255
  2666   00F61A  FF                 	db	255
  2667   00F61B  FF                 	db	255
  2668   00F61C  FF                 	db	255
  2669   00F61D  FF                 	db	255
  2670   00F61E  FF                 	db	255
  2671   00F61F  FF                 	db	255
  2672   00F620  FF                 	db	255
  2673   00F621  FF                 	db	255
  2674   00F622  FF                 	db	255
  2675   00F623  FF                 	db	255
  2676   00F624  FF                 	db	255
  2677   00F625  FF                 	db	255
  2678   00F626  FF                 	db	255
  2679   00F627  FF                 	db	255
  2680   00F628  FF                 	db	255
  2681   00F629  FF                 	db	255
  2682   00F62A  FF                 	db	255
  2683   00F62B  FF                 	db	255
  2684   00F62C  FF                 	db	255
  2685   00F62D  FF                 	db	255
  2686   00F62E  FF                 	db	255
  2687   00F62F  FF                 	db	255
  2688   00F630  FF                 	db	255
  2689   00F631  FF                 	db	255
  2690   00F632  FF                 	db	255
  2691   00F633  FF                 	db	255
  2692   00F634  FF                 	db	255
  2693   00F635  FF                 	db	255
  2694   00F636  FF                 	db	255
  2695   00F637  FF                 	db	255
  2696   00F638  FF                 	db	255
  2697   00F639  FF                 	db	255
  2698   00F63A  FF                 	db	255
  2699   00F63B  FF                 	db	255
  2700   00F63C  FF                 	db	255
  2701   00F63D  FF                 	db	255
  2702   00F63E  FF                 	db	255
  2703   00F63F  FF                 	db	255
  2704   00F640  FF                 	db	255
  2705   00F641  FF                 	db	255
  2706   00F642  FF                 	db	255
  2707   00F643  FF                 	db	255
  2708   00F644  FF                 	db	255
  2709   00F645  FF                 	db	255
  2710   00F646  FF                 	db	255
  2711   00F647  FF                 	db	255
  2712   00F648  FF                 	db	255
  2713   00F649  FF                 	db	255
  2714   00F64A  FF                 	db	255
  2715   00F64B  FF                 	db	255
  2716   00F64C  FF                 	db	255
  2717   00F64D  FF                 	db	255
  2718   00F64E  FF                 	db	255
  2719   00F64F  FF                 	db	255
  2720   00F650  FF                 	db	255
  2721   00F651  FF                 	db	255
  2722   00F652  FF                 	db	255
  2723   00F653  FF                 	db	255
  2724   00F654  FF                 	db	255
  2725   00F655  FF                 	db	255
  2726   00F656  FF                 	db	255
  2727   00F657  FF                 	db	255
  2728   00F658  FF                 	db	255
  2729   00F659  FF                 	db	255
  2730   00F65A  FF                 	db	255
  2731   00F65B  FF                 	db	255
  2732   00F65C  FF                 	db	255
  2733   00F65D  FF                 	db	255
  2734   00F65E  FF                 	db	255
  2735   00F65F  FF                 	db	255
  2736   00F660  FF                 	db	255
  2737   00F661  FF                 	db	255
  2738   00F662  FF                 	db	255
  2739   00F663  FF                 	db	255
  2740   00F664  FF                 	db	255
  2741   00F665  FF                 	db	255
  2742   00F666  FF                 	db	255
  2743   00F667  FF                 	db	255
  2744   00F668  FF                 	db	255
  2745   00F669  FF                 	db	255
  2746   00F66A  FF                 	db	255
  2747   00F66B  FF                 	db	255
  2748   00F66C  FF                 	db	255
  2749   00F66D  FF                 	db	255
  2750   00F66E  FF                 	db	255
  2751   00F66F  FF                 	db	255
  2752   00F670  FF                 	db	255
  2753   00F671  FF                 	db	255
  2754   00F672  FF                 	db	255
  2755   00F673  FF                 	db	255
  2756   00F674  FF                 	db	255
  2757   00F675  FF                 	db	255
  2758   00F676  FF                 	db	255
  2759   00F677  FF                 	db	255
  2760   00F678  FF                 	db	255
  2761   00F679  FF                 	db	255
  2762   00F67A  FF                 	db	255
  2763   00F67B  FF                 	db	255
  2764   00F67C  FF                 	db	255
  2765   00F67D  FF                 	db	255
  2766   00F67E  FF                 	db	255
  2767   00F67F  FF                 	db	255
  2768   00F680  FF                 	db	255
  2769   00F681  FF                 	db	255
  2770   00F682  FF                 	db	255
  2771   00F683  FF                 	db	255
  2772   00F684  FF                 	db	255
  2773   00F685  FF                 	db	255
  2774   00F686  FF                 	db	255
  2775   00F687  FF                 	db	255
  2776   00F688  FF                 	db	255
  2777   00F689  FF                 	db	255
  2778   00F68A  FF                 	db	255
  2779   00F68B  FF                 	db	255
  2780   00F68C  FF                 	db	255
  2781   00F68D  FF                 	db	255
  2782   00F68E  FF                 	db	255
  2783   00F68F  FF                 	db	255
  2784   00F690  FF                 	db	255
  2785   00F691  FF                 	db	255
  2786   00F692  FF                 	db	255
  2787   00F693  FF                 	db	255
  2788   00F694  FF                 	db	255
  2789   00F695  FF                 	db	255
  2790   00F696  FF                 	db	255
  2791   00F697  FF                 	db	255
  2792   00F698  FF                 	db	255
  2793   00F699  FF                 	db	255
  2794   00F69A  FF                 	db	255
  2795   00F69B  FF                 	db	255
  2796   00F69C  FF                 	db	255
  2797   00F69D  FF                 	db	255
  2798   00F69E  FF                 	db	255
  2799   00F69F  FF                 	db	255
  2800   00F6A0  FF                 	db	255
  2801   00F6A1  FF                 	db	255
  2802   00F6A2  FF                 	db	255
  2803   00F6A3  FF                 	db	255
  2804   00F6A4  FF                 	db	255
  2805   00F6A5  FF                 	db	255
  2806   00F6A6  FF                 	db	255
  2807   00F6A7  FF                 	db	255
  2808   00F6A8  FF                 	db	255
  2809   00F6A9  FF                 	db	255
  2810   00F6AA  FF                 	db	255
  2811   00F6AB  FF                 	db	255
  2812   00F6AC  FF                 	db	255
  2813   00F6AD  FF                 	db	255
  2814   00F6AE  FF                 	db	255
  2815   00F6AF  FF                 	db	255
  2816   00F6B0  FF                 	db	255
  2817   00F6B1  FF                 	db	255
  2818   00F6B2  FF                 	db	255
  2819   00F6B3  FF                 	db	255
  2820   00F6B4  FF                 	db	255
  2821   00F6B5  FF                 	db	255
  2822   00F6B6  FF                 	db	255
  2823   00F6B7  FF                 	db	255
  2824   00F6B8  FF                 	db	255
  2825   00F6B9  FF                 	db	255
  2826   00F6BA  FF                 	db	255
  2827   00F6BB  FF                 	db	255
  2828   00F6BC  FF                 	db	255
  2829   00F6BD  FF                 	db	255
  2830   00F6BE  FF                 	db	255
  2831   00F6BF  FF                 	db	255
  2832   00F6C0  FF                 	db	255
  2833   00F6C1  FF                 	db	255
  2834   00F6C2  FF                 	db	255
  2835   00F6C3  FF                 	db	255
  2836   00F6C4  FF                 	db	255
  2837   00F6C5  FF                 	db	255
  2838   00F6C6  FF                 	db	255
  2839   00F6C7  FF                 	db	255
  2840   00F6C8  FF                 	db	255
  2841   00F6C9  FF                 	db	255
  2842   00F6CA  FF                 	db	255
  2843   00F6CB  FF                 	db	255
  2844   00F6CC  FF                 	db	255
  2845   00F6CD  FF                 	db	255
  2846   00F6CE  FF                 	db	255
  2847   00F6CF  FF                 	db	255
  2848   00F6D0  FF                 	db	255
  2849   00F6D1  FF                 	db	255
  2850   00F6D2  FF                 	db	255
  2851   00F6D3  FF                 	db	255
  2852   00F6D4  FF                 	db	255
  2853   00F6D5  FF                 	db	255
  2854   00F6D6  FF                 	db	255
  2855   00F6D7  FF                 	db	255
  2856   00F6D8  FF                 	db	255
  2857   00F6D9  FF                 	db	255
  2858   00F6DA  FF                 	db	255
  2859   00F6DB  FF                 	db	255
  2860   00F6DC  FF                 	db	255
  2861   00F6DD  FF                 	db	255
  2862   00F6DE  FF                 	db	255
  2863   00F6DF  FF                 	db	255
  2864   00F6E0  FF                 	db	255
  2865   00F6E1  FF                 	db	255
  2866   00F6E2  FF                 	db	255
  2867   00F6E3  FF                 	db	255
  2868   00F6E4  FF                 	db	255
  2869   00F6E5  FF                 	db	255
  2870   00F6E6  FF                 	db	255
  2871   00F6E7  FF                 	db	255
  2872   00F6E8  FF                 	db	255
  2873   00F6E9  FF                 	db	255
  2874   00F6EA  FF                 	db	255
  2875   00F6EB  FF                 	db	255
  2876   00F6EC  FF                 	db	255
  2877   00F6ED  FF                 	db	255
  2878   00F6EE  FF                 	db	255
  2879   00F6EF  FF                 	db	255
  2880   00F6F0  FF                 	db	255
  2881   00F6F1  FF                 	db	255
  2882   00F6F2  FF                 	db	255
  2883   00F6F3  FF                 	db	255
  2884   00F6F4  FF                 	db	255
  2885   00F6F5  FF                 	db	255
  2886   00F6F6  FF                 	db	255
  2887   00F6F7  FF                 	db	255
  2888   00F6F8  FF                 	db	255
  2889   00F6F9  FF                 	db	255
  2890   00F6FA  FF                 	db	255
  2891   00F6FB  FF                 	db	255
  2892   00F6FC  FF                 	db	255
  2893   00F6FD  FF                 	db	255
  2894   00F6FE  FF                 	db	255
  2895   00F6FF  FF                 	db	255
  2896   00F700  FF                 	db	255
  2897   00F701  FF                 	db	255
  2898   00F702  FF                 	db	255
  2899   00F703  FF                 	db	255
  2900   00F704  FF                 	db	255
  2901   00F705  FF                 	db	255
  2902   00F706  FF                 	db	255
  2903   00F707  FF                 	db	255
  2904   00F708  FF                 	db	255
  2905   00F709  FF                 	db	255
  2906   00F70A  FF                 	db	255
  2907   00F70B  FF                 	db	255
  2908   00F70C  FF                 	db	255
  2909   00F70D  FF                 	db	255
  2910   00F70E  FF                 	db	255
  2911   00F70F  FF                 	db	255
  2912   00F710  FF                 	db	255
  2913   00F711  FF                 	db	255
  2914   00F712  FF                 	db	255
  2915   00F713  FF                 	db	255
  2916   00F714  FF                 	db	255
  2917   00F715  FF                 	db	255
  2918   00F716  FF                 	db	255
  2919   00F717  FF                 	db	255
  2920   00F718  FF                 	db	255
  2921   00F719  FF                 	db	255
  2922   00F71A  FF                 	db	255
  2923   00F71B  FF                 	db	255
  2924   00F71C  FF                 	db	255
  2925   00F71D  FF                 	db	255
  2926   00F71E  FF                 	db	255
  2927   00F71F  FF                 	db	255
  2928   00F720  FF                 	db	255
  2929   00F721  FF                 	db	255
  2930   00F722  FF                 	db	255
  2931   00F723  FF                 	db	255
  2932   00F724  FF                 	db	255
  2933   00F725  FF                 	db	255
  2934   00F726  FF                 	db	255
  2935   00F727  FF                 	db	255
  2936   00F728  FF                 	db	255
  2937   00F729  FF                 	db	255
  2938   00F72A  FF                 	db	255
  2939   00F72B  FF                 	db	255
  2940   00F72C  FF                 	db	255
  2941   00F72D  FF                 	db	255
  2942   00F72E  FF                 	db	255
  2943   00F72F  FF                 	db	255
  2944   00F730  FF                 	db	255
  2945   00F731  FF                 	db	255
  2946   00F732  FF                 	db	255
  2947   00F733  FF                 	db	255
  2948   00F734  FF                 	db	255
  2949   00F735  FF                 	db	255
  2950   00F736  FF                 	db	255
  2951   00F737  FF                 	db	255
  2952   00F738  FF                 	db	255
  2953   00F739  FF                 	db	255
  2954   00F73A  FF                 	db	255
  2955   00F73B  FF                 	db	255
  2956   00F73C  FF                 	db	255
  2957   00F73D  FF                 	db	255
  2958   00F73E  FF                 	db	255
  2959   00F73F  FF                 	db	255
  2960   00F740  FF                 	db	255
  2961   00F741  FF                 	db	255
  2962   00F742  FF                 	db	255
  2963   00F743  FF                 	db	255
  2964   00F744  FF                 	db	255
  2965   00F745  FF                 	db	255
  2966   00F746  FF                 	db	255
  2967   00F747  FF                 	db	255
  2968   00F748  FF                 	db	255
  2969   00F749  FF                 	db	255
  2970   00F74A  FF                 	db	255
  2971   00F74B  FF                 	db	255
  2972   00F74C  FF                 	db	255
  2973   00F74D  FF                 	db	255
  2974   00F74E  FF                 	db	255
  2975   00F74F  FF                 	db	255
  2976   00F750  FF                 	db	255
  2977   00F751  FF                 	db	255
  2978   00F752  FF                 	db	255
  2979   00F753  FF                 	db	255
  2980   00F754  FF                 	db	255
  2981   00F755  FF                 	db	255
  2982   00F756  FF                 	db	255
  2983   00F757  FF                 	db	255
  2984   00F758  FF                 	db	255
  2985   00F759  FF                 	db	255
  2986   00F75A  FF                 	db	255
  2987   00F75B  FF                 	db	255
  2988   00F75C  FF                 	db	255
  2989   00F75D  FF                 	db	255
  2990   00F75E  FF                 	db	255
  2991   00F75F  FF                 	db	255
  2992   00F760  FF                 	db	255
  2993   00F761  FF                 	db	255
  2994   00F762  FF                 	db	255
  2995   00F763  FF                 	db	255
  2996   00F764  FF                 	db	255
  2997   00F765  FF                 	db	255
  2998   00F766  FF                 	db	255
  2999   00F767  FF                 	db	255
  3000   00F768  FF                 	db	255
  3001   00F769  FF                 	db	255
  3002   00F76A  FF                 	db	255
  3003   00F76B  FF                 	db	255
  3004   00F76C  FF                 	db	255
  3005   00F76D  FF                 	db	255
  3006   00F76E  FF                 	db	255
  3007   00F76F  FF                 	db	255
  3008   00F770  FF                 	db	255
  3009   00F771  FF                 	db	255
  3010   00F772  FF                 	db	255
  3011   00F773  FF                 	db	255
  3012   00F774  FF                 	db	255
  3013   00F775  FF                 	db	255
  3014   00F776  FF                 	db	255
  3015   00F777  FF                 	db	255
  3016   00F778  FF                 	db	255
  3017   00F779  FF                 	db	255
  3018   00F77A  FF                 	db	255
  3019   00F77B  FF                 	db	255
  3020   00F77C  FF                 	db	255
  3021   00F77D  FF                 	db	255
  3022   00F77E  FF                 	db	255
  3023   00F77F  FF                 	db	255
  3024   00F780  FF                 	db	255
  3025   00F781  FF                 	db	255
  3026   00F782  FF                 	db	255
  3027   00F783  FF                 	db	255
  3028   00F784  FF                 	db	255
  3029   00F785  FF                 	db	255
  3030   00F786  FF                 	db	255
  3031   00F787  FF                 	db	255
  3032   00F788  FF                 	db	255
  3033   00F789  FF                 	db	255
  3034   00F78A  FF                 	db	255
  3035   00F78B  FF                 	db	255
  3036   00F78C  FF                 	db	255
  3037   00F78D  FF                 	db	255
  3038   00F78E  FF                 	db	255
  3039   00F78F  FF                 	db	255
  3040   00F790  FF                 	db	255
  3041   00F791  FF                 	db	255
  3042   00F792  FF                 	db	255
  3043   00F793  FF                 	db	255
  3044   00F794  FF                 	db	255
  3045   00F795  FF                 	db	255
  3046   00F796  FF                 	db	255
  3047   00F797  FF                 	db	255
  3048   00F798  FF                 	db	255
  3049   00F799  FF                 	db	255
  3050   00F79A  FF                 	db	255
  3051   00F79B  FF                 	db	255
  3052   00F79C  FF                 	db	255
  3053   00F79D  FF                 	db	255
  3054   00F79E  FF                 	db	255
  3055   00F79F  FF                 	db	255
  3056   00F7A0  FF                 	db	255
  3057   00F7A1  FF                 	db	255
  3058   00F7A2  FF                 	db	255
  3059   00F7A3  FF                 	db	255
  3060   00F7A4  FF                 	db	255
  3061   00F7A5  FF                 	db	255
  3062   00F7A6  FF                 	db	255
  3063   00F7A7  FF                 	db	255
  3064   00F7A8  FF                 	db	255
  3065   00F7A9  FF                 	db	255
  3066   00F7AA  FF                 	db	255
  3067   00F7AB  FF                 	db	255
  3068   00F7AC  FF                 	db	255
  3069   00F7AD  FF                 	db	255
  3070   00F7AE  FF                 	db	255
  3071   00F7AF  FF                 	db	255
  3072   00F7B0  FF                 	db	255
  3073   00F7B1  FF                 	db	255
  3074   00F7B2  FF                 	db	255
  3075   00F7B3  FF                 	db	255
  3076   00F7B4  FF                 	db	255
  3077   00F7B5  FF                 	db	255
  3078   00F7B6  FF                 	db	255
  3079   00F7B7  FF                 	db	255
  3080   00F7B8  FF                 	db	255
  3081   00F7B9  FF                 	db	255
  3082   00F7BA  FF                 	db	255
  3083   00F7BB  FF                 	db	255
  3084   00F7BC  FF                 	db	255
  3085   00F7BD  FF                 	db	255
  3086   00F7BE  FF                 	db	255
  3087   00F7BF  FF                 	db	255
  3088   00F7C0  FF                 	db	255
  3089   00F7C1  FF                 	db	255
  3090   00F7C2  FF                 	db	255
  3091   00F7C3  FF                 	db	255
  3092   00F7C4  FF                 	db	255
  3093   00F7C5  FF                 	db	255
  3094   00F7C6  FF                 	db	255
  3095   00F7C7  FF                 	db	255
  3096   00F7C8  FF                 	db	255
  3097   00F7C9  FF                 	db	255
  3098   00F7CA  FF                 	db	255
  3099   00F7CB  FF                 	db	255
  3100   00F7CC  FF                 	db	255
  3101   00F7CD  FF                 	db	255
  3102   00F7CE  FF                 	db	255
  3103   00F7CF  FF                 	db	255
  3104   00F7D0  FF                 	db	255
  3105   00F7D1  FF                 	db	255
  3106   00F7D2  FF                 	db	255
  3107   00F7D3  FF                 	db	255
  3108   00F7D4  FF                 	db	255
  3109   00F7D5  FF                 	db	255
  3110   00F7D6  FF                 	db	255
  3111   00F7D7  FF                 	db	255
  3112   00F7D8  FF                 	db	255
  3113   00F7D9  FF                 	db	255
  3114   00F7DA  FF                 	db	255
  3115   00F7DB  FF                 	db	255
  3116   00F7DC  FF                 	db	255
  3117   00F7DD  FF                 	db	255
  3118   00F7DE  FF                 	db	255
  3119   00F7DF  FF                 	db	255
  3120   00F7E0  FF                 	db	255
  3121   00F7E1  FF                 	db	255
  3122   00F7E2  FF                 	db	255
  3123   00F7E3  FF                 	db	255
  3124   00F7E4  FF                 	db	255
  3125   00F7E5  FF                 	db	255
  3126   00F7E6  FF                 	db	255
  3127   00F7E7  FF                 	db	255
  3128   00F7E8  FF                 	db	255
  3129   00F7E9  FF                 	db	255
  3130   00F7EA  FF                 	db	255
  3131   00F7EB  FF                 	db	255
  3132   00F7EC  FF                 	db	255
  3133   00F7ED  FF                 	db	255
  3134   00F7EE  FF                 	db	255
  3135   00F7EF  FF                 	db	255
  3136   00F7F0  FF                 	db	255
  3137   00F7F1  FF                 	db	255
  3138   00F7F2  FF                 	db	255
  3139   00F7F3  FF                 	db	255
  3140   00F7F4  FF                 	db	255
  3141   00F7F5  FF                 	db	255
  3142   00F7F6  FF                 	db	255
  3143   00F7F7  FF                 	db	255
  3144   00F7F8  FF                 	db	255
  3145   00F7F9  FF                 	db	255
  3146   00F7FA  FF                 	db	255
  3147   00F7FB  FF                 	db	255
  3148   00F7FC  FF                 	db	255
  3149   00F7FD  FF                 	db	255
  3150   00F7FE  FF                 	db	255
  3151   00F7FF  FF                 	db	255
  3152   00F800  FF                 	db	255
  3153   00F801  FF                 	db	255
  3154   00F802  FF                 	db	255
  3155   00F803  FF                 	db	255
  3156   00F804  FF                 	db	255
  3157   00F805  FF                 	db	255
  3158   00F806  FF                 	db	255
  3159   00F807  FF                 	db	255
  3160   00F808  FF                 	db	255
  3161   00F809  FF                 	db	255
  3162   00F80A  FF                 	db	255
  3163   00F80B  FF                 	db	255
  3164   00F80C  FF                 	db	255
  3165   00F80D  FF                 	db	255
  3166   00F80E  FF                 	db	255
  3167   00F80F  FF                 	db	255
  3168   00F810  FF                 	db	255
  3169   00F811  FF                 	db	255
  3170   00F812  FF                 	db	255
  3171   00F813  FF                 	db	255
  3172   00F814  FF                 	db	255
  3173   00F815  FF                 	db	255
  3174   00F816  FF                 	db	255
  3175   00F817  FF                 	db	255
  3176   00F818  FF                 	db	255
  3177   00F819  FF                 	db	255
  3178   00F81A  FF                 	db	255
  3179   00F81B  FF                 	db	255
  3180   00F81C  FF                 	db	255
  3181   00F81D  FF                 	db	255
  3182   00F81E  FF                 	db	255
  3183   00F81F  FF                 	db	255
  3184   00F820  FF                 	db	255
  3185   00F821  FF                 	db	255
  3186   00F822  FF                 	db	255
  3187   00F823  FF                 	db	255
  3188   00F824  FF                 	db	255
  3189   00F825  FF                 	db	255
  3190   00F826  FF                 	db	255
  3191   00F827  FF                 	db	255
  3192   00F828  FF                 	db	255
  3193   00F829  FF                 	db	255
  3194   00F82A  FF                 	db	255
  3195   00F82B  FF                 	db	255
  3196   00F82C  FF                 	db	255
  3197   00F82D  FF                 	db	255
  3198   00F82E  FF                 	db	255
  3199   00F82F  FF                 	db	255
  3200   00F830  FF                 	db	255
  3201   00F831  FF                 	db	255
  3202   00F832  FF                 	db	255
  3203   00F833  FF                 	db	255
  3204   00F834  FF                 	db	255
  3205   00F835  FF                 	db	255
  3206   00F836  FF                 	db	255
  3207   00F837  FF                 	db	255
  3208   00F838  FF                 	db	255
  3209   00F839  FF                 	db	255
  3210   00F83A  FF                 	db	255
  3211   00F83B  FF                 	db	255
  3212   00F83C  FF                 	db	255
  3213   00F83D  FF                 	db	255
  3214   00F83E  FF                 	db	255
  3215   00F83F  FF                 	db	255
  3216   00F840  FF                 	db	255
  3217   00F841  FF                 	db	255
  3218   00F842  FF                 	db	255
  3219   00F843  FF                 	db	255
  3220   00F844  FF                 	db	255
  3221   00F845  FF                 	db	255
  3222   00F846  FF                 	db	255
  3223   00F847  FF                 	db	255
  3224   00F848  FF                 	db	255
  3225   00F849  FF                 	db	255
  3226   00F84A  FF                 	db	255
  3227   00F84B  FF                 	db	255
  3228   00F84C  FF                 	db	255
  3229   00F84D  FF                 	db	255
  3230   00F84E  FF                 	db	255
  3231   00F84F  FF                 	db	255
  3232   00F850  FF                 	db	255
  3233   00F851  FF                 	db	255
  3234   00F852  FF                 	db	255
  3235   00F853  FF                 	db	255
  3236   00F854  FF                 	db	255
  3237   00F855  FF                 	db	255
  3238   00F856  FF                 	db	255
  3239   00F857  FF                 	db	255
  3240   00F858  FF                 	db	255
  3241   00F859  FF                 	db	255
  3242   00F85A  FF                 	db	255
  3243   00F85B  FF                 	db	255
  3244   00F85C  FF                 	db	255
  3245   00F85D  FF                 	db	255
  3246   00F85E  FF                 	db	255
  3247   00F85F  FF                 	db	255
  3248   00F860  FF                 	db	255
  3249   00F861  FF                 	db	255
  3250   00F862  FF                 	db	255
  3251   00F863  FF                 	db	255
  3252   00F864  FF                 	db	255
  3253   00F865  FF                 	db	255
  3254   00F866  FF                 	db	255
  3255   00F867  FF                 	db	255
  3256   00F868  FF                 	db	255
  3257   00F869  FF                 	db	255
  3258   00F86A  FF                 	db	255
  3259   00F86B  FF                 	db	255
  3260   00F86C  FF                 	db	255
  3261   00F86D  FF                 	db	255
  3262   00F86E  FF                 	db	255
  3263   00F86F  FF                 	db	255
  3264   00F870  FF                 	db	255
  3265   00F871  FF                 	db	255
  3266   00F872  FF                 	db	255
  3267   00F873  FF                 	db	255
  3268   00F874  FF                 	db	255
  3269   00F875  FF                 	db	255
  3270   00F876  FF                 	db	255
  3271   00F877  FF                 	db	255
  3272   00F878  FF                 	db	255
  3273   00F879  FF                 	db	255
  3274   00F87A  FF                 	db	255
  3275   00F87B  FF                 	db	255
  3276   00F87C  FF                 	db	255
  3277   00F87D  FF                 	db	255
  3278   00F87E  FF                 	db	255
  3279   00F87F  FF                 	db	255
  3280   00F880  FF                 	db	255
  3281   00F881  FF                 	db	255
  3282   00F882  FF                 	db	255
  3283   00F883  FF                 	db	255
  3284   00F884  FF                 	db	255
  3285   00F885  FF                 	db	255
  3286   00F886  FF                 	db	255
  3287   00F887  FF                 	db	255
  3288   00F888  FF                 	db	255
  3289   00F889  FF                 	db	255
  3290   00F88A  FF                 	db	255
  3291   00F88B  FF                 	db	255
  3292   00F88C  FF                 	db	255
  3293   00F88D  FF                 	db	255
  3294   00F88E  FF                 	db	255
  3295   00F88F  FF                 	db	255
  3296   00F890  FF                 	db	255
  3297   00F891  FF                 	db	255
  3298   00F892  FF                 	db	255
  3299   00F893  FF                 	db	255
  3300   00F894  FF                 	db	255
  3301   00F895  FF                 	db	255
  3302   00F896  FF                 	db	255
  3303   00F897  FF                 	db	255
  3304   00F898  FF                 	db	255
  3305   00F899  FF                 	db	255
  3306   00F89A  FF                 	db	255
  3307   00F89B  FF                 	db	255
  3308   00F89C  FF                 	db	255
  3309   00F89D  FF                 	db	255
  3310   00F89E  FF                 	db	255
  3311   00F89F  FF                 	db	255
  3312   00F8A0  FF                 	db	255
  3313   00F8A1  FF                 	db	255
  3314   00F8A2  FF                 	db	255
  3315   00F8A3  FF                 	db	255
  3316   00F8A4  FF                 	db	255
  3317   00F8A5  FF                 	db	255
  3318   00F8A6  FF                 	db	255
  3319   00F8A7  FF                 	db	255
  3320   00F8A8  FF                 	db	255
  3321   00F8A9  FF                 	db	255
  3322   00F8AA  FF                 	db	255
  3323   00F8AB  FF                 	db	255
  3324   00F8AC  FF                 	db	255
  3325   00F8AD  FF                 	db	255
  3326   00F8AE  FF                 	db	255
  3327   00F8AF  FF                 	db	255
  3328   00F8B0  FF                 	db	255
  3329   00F8B1  FF                 	db	255
  3330   00F8B2  FF                 	db	255
  3331   00F8B3  FF                 	db	255
  3332   00F8B4  FF                 	db	255
  3333   00F8B5  FF                 	db	255
  3334   00F8B6  FF                 	db	255
  3335   00F8B7  FF                 	db	255
  3336   00F8B8  FF                 	db	255
  3337   00F8B9  FF                 	db	255
  3338   00F8BA  FF                 	db	255
  3339   00F8BB  FF                 	db	255
  3340   00F8BC  FF                 	db	255
  3341   00F8BD  FF                 	db	255
  3342   00F8BE  FF                 	db	255
  3343   00F8BF  FF                 	db	255
  3344   00F8C0  FF                 	db	255
  3345   00F8C1  FF                 	db	255
  3346   00F8C2  FF                 	db	255
  3347   00F8C3  FF                 	db	255
  3348   00F8C4  FF                 	db	255
  3349   00F8C5  FF                 	db	255
  3350   00F8C6  FF                 	db	255
  3351   00F8C7  FF                 	db	255
  3352   00F8C8  FF                 	db	255
  3353   00F8C9  FF                 	db	255
  3354   00F8CA  FF                 	db	255
  3355   00F8CB  FF                 	db	255
  3356   00F8CC  FF                 	db	255
  3357   00F8CD  FF                 	db	255
  3358   00F8CE  FF                 	db	255
  3359   00F8CF  FF                 	db	255
  3360   00F8D0  FF                 	db	255
  3361   00F8D1  FF                 	db	255
  3362   00F8D2  FF                 	db	255
  3363   00F8D3  FF                 	db	255
  3364   00F8D4  FF                 	db	255
  3365   00F8D5  FF                 	db	255
  3366   00F8D6  FF                 	db	255
  3367   00F8D7  FF                 	db	255
  3368   00F8D8  FF                 	db	255
  3369   00F8D9  FF                 	db	255
  3370   00F8DA  FF                 	db	255
  3371   00F8DB  FF                 	db	255
  3372   00F8DC  FF                 	db	255
  3373   00F8DD  FF                 	db	255
  3374   00F8DE  FF                 	db	255
  3375   00F8DF  FF                 	db	255
  3376   00F8E0  FF                 	db	255
  3377   00F8E1  FF                 	db	255
  3378   00F8E2  FF                 	db	255
  3379   00F8E3  FF                 	db	255
  3380   00F8E4  FF                 	db	255
  3381   00F8E5  FF                 	db	255
  3382   00F8E6  FF                 	db	255
  3383   00F8E7  FF                 	db	255
  3384   00F8E8  FF                 	db	255
  3385   00F8E9  FF                 	db	255
  3386   00F8EA  FF                 	db	255
  3387   00F8EB  FF                 	db	255
  3388   00F8EC  FF                 	db	255
  3389   00F8ED  FF                 	db	255
  3390   00F8EE  FF                 	db	255
  3391   00F8EF  FF                 	db	255
  3392   00F8F0  FF                 	db	255
  3393   00F8F1  FF                 	db	255
  3394   00F8F2  FF                 	db	255
  3395   00F8F3  FF                 	db	255
  3396   00F8F4  FF                 	db	255
  3397   00F8F5  FF                 	db	255
  3398   00F8F6  FF                 	db	255
  3399   00F8F7  FF                 	db	255
  3400   00F8F8  FF                 	db	255
  3401   00F8F9  FF                 	db	255
  3402   00F8FA  FF                 	db	255
  3403   00F8FB  FF                 	db	255
  3404   00F8FC  FF                 	db	255
  3405   00F8FD  FF                 	db	255
  3406   00F8FE  FF                 	db	255
  3407   00F8FF  FF                 	db	255
  3408   00F900  FF                 	db	255
  3409   00F901  FF                 	db	255
  3410   00F902  FF                 	db	255
  3411   00F903  FF                 	db	255
  3412   00F904  FF                 	db	255
  3413   00F905  FF                 	db	255
  3414   00F906  FF                 	db	255
  3415   00F907  FF                 	db	255
  3416   00F908  FF                 	db	255
  3417   00F909  FF                 	db	255
  3418   00F90A  FF                 	db	255
  3419   00F90B  FF                 	db	255
  3420   00F90C  FF                 	db	255
  3421   00F90D  FF                 	db	255
  3422   00F90E  FF                 	db	255
  3423   00F90F  FF                 	db	255
  3424   00F910  FF                 	db	255
  3425   00F911  FF                 	db	255
  3426   00F912  FF                 	db	255
  3427   00F913  FF                 	db	255
  3428   00F914  FF                 	db	255
  3429   00F915  FF                 	db	255
  3430   00F916  FF                 	db	255
  3431   00F917  FF                 	db	255
  3432   00F918  FF                 	db	255
  3433   00F919  FF                 	db	255
  3434   00F91A  FF                 	db	255
  3435   00F91B  FF                 	db	255
  3436   00F91C  FF                 	db	255
  3437   00F91D  FF                 	db	255
  3438   00F91E  FF                 	db	255
  3439   00F91F  FF                 	db	255
  3440   00F920  FF                 	db	255
  3441   00F921  FF                 	db	255
  3442   00F922  FF                 	db	255
  3443   00F923  FF                 	db	255
  3444   00F924  FF                 	db	255
  3445   00F925  FF                 	db	255
  3446   00F926  FF                 	db	255
  3447   00F927  FF                 	db	255
  3448   00F928  FF                 	db	255
  3449   00F929  FF                 	db	255
  3450   00F92A  FF                 	db	255
  3451   00F92B  FF                 	db	255
  3452   00F92C  FF                 	db	255
  3453   00F92D  FF                 	db	255
  3454   00F92E  FF                 	db	255
  3455   00F92F  FF                 	db	255
  3456   00F930  FF                 	db	255
  3457   00F931  FF                 	db	255
  3458   00F932  FF                 	db	255
  3459   00F933  FF                 	db	255
  3460   00F934  FF                 	db	255
  3461   00F935  FF                 	db	255
  3462   00F936  FF                 	db	255
  3463   00F937  FF                 	db	255
  3464   00F938  FF                 	db	255
  3465   00F939  FF                 	db	255
  3466   00F93A  FF                 	db	255
  3467   00F93B  FF                 	db	255
  3468   00F93C  FF                 	db	255
  3469   00F93D  FF                 	db	255
  3470   00F93E  FF                 	db	255
  3471   00F93F  FF                 	db	255
  3472   00F940  FF                 	db	255
  3473   00F941  FF                 	db	255
  3474   00F942  FF                 	db	255
  3475   00F943  FF                 	db	255
  3476   00F944  FF                 	db	255
  3477   00F945  FF                 	db	255
  3478   00F946  FF                 	db	255
  3479   00F947  FF                 	db	255
  3480   00F948  FF                 	db	255
  3481   00F949  FF                 	db	255
  3482   00F94A  FF                 	db	255
  3483   00F94B  FF                 	db	255
  3484   00F94C  FF                 	db	255
  3485   00F94D  FF                 	db	255
  3486   00F94E  FF                 	db	255
  3487   00F94F  FF                 	db	255
  3488   00F950  FF                 	db	255
  3489   00F951  FF                 	db	255
  3490   00F952  FF                 	db	255
  3491   00F953  FF                 	db	255
  3492   00F954  FF                 	db	255
  3493   00F955  FF                 	db	255
  3494   00F956  FF                 	db	255
  3495   00F957  FF                 	db	255
  3496   00F958  FF                 	db	255
  3497   00F959  FF                 	db	255
  3498   00F95A  FF                 	db	255
  3499   00F95B  FF                 	db	255
  3500   00F95C  FF                 	db	255
  3501   00F95D  FF                 	db	255
  3502   00F95E  FF                 	db	255
  3503   00F95F  FF                 	db	255
  3504   00F960  FF                 	db	255
  3505   00F961  FF                 	db	255
  3506   00F962  FF                 	db	255
  3507   00F963  FF                 	db	255
  3508   00F964  FF                 	db	255
  3509   00F965  FF                 	db	255
  3510   00F966  FF                 	db	255
  3511   00F967  FF                 	db	255
  3512   00F968  FF                 	db	255
  3513   00F969  FF                 	db	255
  3514   00F96A  FF                 	db	255
  3515   00F96B  FF                 	db	255
  3516   00F96C  FF                 	db	255
  3517   00F96D  FF                 	db	255
  3518   00F96E  FF                 	db	255
  3519   00F96F  FF                 	db	255
  3520   00F970  FF                 	db	255
  3521   00F971  FF                 	db	255
  3522   00F972  FF                 	db	255
  3523   00F973  FF                 	db	255
  3524   00F974  FF                 	db	255
  3525   00F975  FF                 	db	255
  3526   00F976  FF                 	db	255
  3527   00F977  FF                 	db	255
  3528   00F978  FF                 	db	255
  3529   00F979  FF                 	db	255
  3530   00F97A  FF                 	db	255
  3531   00F97B  FF                 	db	255
  3532   00F97C  FF                 	db	255
  3533   00F97D  FF                 	db	255
  3534   00F97E  FF                 	db	255
  3535   00F97F  FF                 	db	255
  3536   00F980  FF                 	db	255
  3537   00F981  FF                 	db	255
  3538   00F982  FF                 	db	255
  3539   00F983  FF                 	db	255
  3540   00F984  FF                 	db	255
  3541   00F985  FF                 	db	255
  3542   00F986  FF                 	db	255
  3543   00F987  FF                 	db	255
  3544   00F988  FF                 	db	255
  3545   00F989  FF                 	db	255
  3546   00F98A  FF                 	db	255
  3547   00F98B  FF                 	db	255
  3548   00F98C  FF                 	db	255
  3549   00F98D  FF                 	db	255
  3550   00F98E  FF                 	db	255
  3551   00F98F  FF                 	db	255
  3552   00F990  FF                 	db	255
  3553   00F991  FF                 	db	255
  3554   00F992  FF                 	db	255
  3555   00F993  FF                 	db	255
  3556   00F994  FF                 	db	255
  3557   00F995  FF                 	db	255
  3558   00F996  FF                 	db	255
  3559   00F997  FF                 	db	255
  3560   00F998  FF                 	db	255
  3561   00F999  FF                 	db	255
  3562   00F99A  FF                 	db	255
  3563   00F99B  FF                 	db	255
  3564   00F99C  FF                 	db	255
  3565   00F99D  FF                 	db	255
  3566   00F99E  FF                 	db	255
  3567   00F99F  FF                 	db	255
  3568   00F9A0  FF                 	db	255
  3569   00F9A1  FF                 	db	255
  3570   00F9A2  FF                 	db	255
  3571   00F9A3  FF                 	db	255
  3572   00F9A4  FF                 	db	255
  3573   00F9A5  FF                 	db	255
  3574   00F9A6  FF                 	db	255
  3575   00F9A7  FF                 	db	255
  3576   00F9A8  FF                 	db	255
  3577   00F9A9  FF                 	db	255
  3578   00F9AA  FF                 	db	255
  3579   00F9AB  FF                 	db	255
  3580   00F9AC  FF                 	db	255
  3581   00F9AD  FF                 	db	255
  3582   00F9AE  FF                 	db	255
  3583   00F9AF  FF                 	db	255
  3584   00F9B0  FF                 	db	255
  3585   00F9B1  FF                 	db	255
  3586   00F9B2  FF                 	db	255
  3587   00F9B3  FF                 	db	255
  3588   00F9B4  FF                 	db	255
  3589   00F9B5  FF                 	db	255
  3590   00F9B6  FF                 	db	255
  3591   00F9B7  FF                 	db	255
  3592   00F9B8  FF                 	db	255
  3593   00F9B9  FF                 	db	255
  3594   00F9BA  FF                 	db	255
  3595   00F9BB  FF                 	db	255
  3596   00F9BC  FF                 	db	255
  3597   00F9BD  FF                 	db	255
  3598   00F9BE  FF                 	db	255
  3599   00F9BF  FF                 	db	255
  3600   00F9C0  FF                 	db	255
  3601   00F9C1  FF                 	db	255
  3602   00F9C2  FF                 	db	255
  3603   00F9C3  FF                 	db	255
  3604   00F9C4  FF                 	db	255
  3605   00F9C5  FF                 	db	255
  3606   00F9C6  FF                 	db	255
  3607   00F9C7  FF                 	db	255
  3608   00F9C8  FF                 	db	255
  3609   00F9C9  FF                 	db	255
  3610   00F9CA  FF                 	db	255
  3611   00F9CB  FF                 	db	255
  3612   00F9CC  FF                 	db	255
  3613   00F9CD  FF                 	db	255
  3614   00F9CE  FF                 	db	255
  3615   00F9CF  FF                 	db	255
  3616   00F9D0  FF                 	db	255
  3617   00F9D1  FF                 	db	255
  3618   00F9D2  FF                 	db	255
  3619   00F9D3  FF                 	db	255
  3620   00F9D4  FF                 	db	255
  3621   00F9D5  FF                 	db	255
  3622   00F9D6  FF                 	db	255
  3623   00F9D7  FF                 	db	255
  3624   00F9D8  FF                 	db	255
  3625   00F9D9  FF                 	db	255
  3626   00F9DA  FF                 	db	255
  3627   00F9DB  FF                 	db	255
  3628   00F9DC  FF                 	db	255
  3629   00F9DD  FF                 	db	255
  3630   00F9DE  FF                 	db	255
  3631   00F9DF  FF                 	db	255
  3632   00F9E0  FF                 	db	255
  3633   00F9E1  FF                 	db	255
  3634   00F9E2  FF                 	db	255
  3635   00F9E3  FF                 	db	255
  3636   00F9E4  FF                 	db	255
  3637   00F9E5  FF                 	db	255
  3638   00F9E6  FF                 	db	255
  3639   00F9E7  FF                 	db	255
  3640   00F9E8  FF                 	db	255
  3641   00F9E9  FF                 	db	255
  3642   00F9EA  FF                 	db	255
  3643   00F9EB  FF                 	db	255
  3644   00F9EC  FF                 	db	255
  3645   00F9ED  FF                 	db	255
  3646   00F9EE  FF                 	db	255
  3647   00F9EF  FF                 	db	255
  3648   00F9F0  FF                 	db	255
  3649   00F9F1  FF                 	db	255
  3650   00F9F2  FF                 	db	255
  3651   00F9F3  FF                 	db	255
  3652   00F9F4  FF                 	db	255
  3653   00F9F5  FF                 	db	255
  3654   00F9F6  FF                 	db	255
  3655   00F9F7  FF                 	db	255
  3656   00F9F8  FF                 	db	255
  3657   00F9F9  FF                 	db	255
  3658   00F9FA  FF                 	db	255
  3659   00F9FB  FF                 	db	255
  3660   00F9FC  FF                 	db	255
  3661   00F9FD  FF                 	db	255
  3662   00F9FE  FF                 	db	255
  3663   00F9FF  FF                 	db	255
  3664   00FA00  FF                 	db	255
  3665   00FA01  FF                 	db	255
  3666   00FA02  FF                 	db	255
  3667   00FA03  FF                 	db	255
  3668   00FA04  FF                 	db	255
  3669   00FA05  FF                 	db	255
  3670   00FA06  FF                 	db	255
  3671   00FA07  FF                 	db	255
  3672   00FA08  FF                 	db	255
  3673   00FA09  FF                 	db	255
  3674   00FA0A  FF                 	db	255
  3675   00FA0B  FF                 	db	255
  3676   00FA0C  FF                 	db	255
  3677   00FA0D  FF                 	db	255
  3678   00FA0E  FF                 	db	255
  3679   00FA0F  FF                 	db	255
  3680   00FA10  FF                 	db	255
  3681   00FA11  FF                 	db	255
  3682   00FA12  FF                 	db	255
  3683   00FA13  FF                 	db	255
  3684   00FA14  FF                 	db	255
  3685   00FA15  FF                 	db	255
  3686   00FA16  FF                 	db	255
  3687   00FA17  FF                 	db	255
  3688   00FA18  FF                 	db	255
  3689   00FA19  FF                 	db	255
  3690   00FA1A  FF                 	db	255
  3691   00FA1B  FF                 	db	255
  3692   00FA1C  FF                 	db	255
  3693   00FA1D  FF                 	db	255
  3694   00FA1E  FF                 	db	255
  3695   00FA1F  FF                 	db	255
  3696   00FA20  FF                 	db	255
  3697   00FA21  FF                 	db	255
  3698   00FA22  FF                 	db	255
  3699   00FA23  FF                 	db	255
  3700   00FA24  FF                 	db	255
  3701   00FA25  FF                 	db	255
  3702   00FA26  FF                 	db	255
  3703   00FA27  FF                 	db	255
  3704   00FA28  FF                 	db	255
  3705   00FA29  FF                 	db	255
  3706   00FA2A  FF                 	db	255
  3707   00FA2B  FF                 	db	255
  3708   00FA2C  FF                 	db	255
  3709   00FA2D  FF                 	db	255
  3710   00FA2E  FF                 	db	255
  3711   00FA2F  FF                 	db	255
  3712   00FA30  FF                 	db	255
  3713   00FA31  FF                 	db	255
  3714   00FA32  FF                 	db	255
  3715   00FA33  FF                 	db	255
  3716   00FA34  FF                 	db	255
  3717   00FA35  FF                 	db	255
  3718   00FA36  FF                 	db	255
  3719   00FA37  FF                 	db	255
  3720   00FA38  FF                 	db	255
  3721   00FA39  FF                 	db	255
  3722   00FA3A  FF                 	db	255
  3723   00FA3B  FF                 	db	255
  3724   00FA3C  FF                 	db	255
  3725   00FA3D  FF                 	db	255
  3726   00FA3E  FF                 	db	255
  3727   00FA3F  FF                 	db	255
  3728   00FA40  FF                 	db	255
  3729   00FA41  FF                 	db	255
  3730   00FA42  FF                 	db	255
  3731   00FA43  FF                 	db	255
  3732   00FA44  FF                 	db	255
  3733   00FA45  FF                 	db	255
  3734   00FA46  FF                 	db	255
  3735   00FA47  FF                 	db	255
  3736   00FA48  FF                 	db	255
  3737   00FA49  FF                 	db	255
  3738   00FA4A  FF                 	db	255
  3739   00FA4B  FF                 	db	255
  3740   00FA4C  FF                 	db	255
  3741   00FA4D  FF                 	db	255
  3742   00FA4E  FF                 	db	255
  3743   00FA4F  FF                 	db	255
  3744   00FA50  FF                 	db	255
  3745   00FA51  FF                 	db	255
  3746   00FA52  FF                 	db	255
  3747   00FA53  FF                 	db	255
  3748   00FA54  FF                 	db	255
  3749   00FA55  FF                 	db	255
  3750   00FA56  FF                 	db	255
  3751   00FA57  FF                 	db	255
  3752   00FA58  FF                 	db	255
  3753   00FA59  FF                 	db	255
  3754   00FA5A  FF                 	db	255
  3755   00FA5B  FF                 	db	255
  3756   00FA5C  FF                 	db	255
  3757   00FA5D  FF                 	db	255
  3758   00FA5E  FF                 	db	255
  3759   00FA5F  FF                 	db	255
  3760   00FA60  FF                 	db	255
  3761   00FA61  FF                 	db	255
  3762   00FA62  FF                 	db	255
  3763   00FA63  FF                 	db	255
  3764   00FA64  FF                 	db	255
  3765   00FA65  FF                 	db	255
  3766   00FA66  FF                 	db	255
  3767   00FA67  FF                 	db	255
  3768   00FA68  FF                 	db	255
  3769   00FA69  FF                 	db	255
  3770   00FA6A  FF                 	db	255
  3771   00FA6B  FF                 	db	255
  3772   00FA6C  FF                 	db	255
  3773   00FA6D  FF                 	db	255
  3774   00FA6E  FF                 	db	255
  3775   00FA6F  FF                 	db	255
  3776   00FA70  FF                 	db	255
  3777   00FA71  FF                 	db	255
  3778   00FA72  FF                 	db	255
  3779   00FA73  FF                 	db	255
  3780   00FA74  FF                 	db	255
  3781   00FA75  FF                 	db	255
  3782   00FA76  FF                 	db	255
  3783   00FA77  FF                 	db	255
  3784   00FA78  FF                 	db	255
  3785   00FA79  FF                 	db	255
  3786   00FA7A  FF                 	db	255
  3787   00FA7B  FF                 	db	255
  3788   00FA7C  FF                 	db	255
  3789   00FA7D  FF                 	db	255
  3790   00FA7E  FF                 	db	255
  3791   00FA7F  FF                 	db	255
  3792   00FA80  FF                 	db	255
  3793   00FA81  FF                 	db	255
  3794   00FA82  FF                 	db	255
  3795   00FA83  FF                 	db	255
  3796   00FA84  FF                 	db	255
  3797   00FA85  FF                 	db	255
  3798   00FA86  FF                 	db	255
  3799   00FA87  FF                 	db	255
  3800   00FA88  FF                 	db	255
  3801   00FA89  FF                 	db	255
  3802   00FA8A  FF                 	db	255
  3803   00FA8B  FF                 	db	255
  3804   00FA8C  FF                 	db	255
  3805   00FA8D  FF                 	db	255
  3806   00FA8E  FF                 	db	255
  3807   00FA8F  FF                 	db	255
  3808   00FA90  FF                 	db	255
  3809   00FA91  FF                 	db	255
  3810   00FA92  FF                 	db	255
  3811   00FA93  FF                 	db	255
  3812   00FA94  FF                 	db	255
  3813   00FA95  FF                 	db	255
  3814   00FA96  FF                 	db	255
  3815   00FA97  FF                 	db	255
  3816   00FA98  FF                 	db	255
  3817   00FA99  FF                 	db	255
  3818   00FA9A  FF                 	db	255
  3819   00FA9B  FF                 	db	255
  3820   00FA9C  FF                 	db	255
  3821   00FA9D  FF                 	db	255
  3822   00FA9E  FF                 	db	255
  3823   00FA9F  FF                 	db	255
  3824   00FAA0  FF                 	db	255
  3825   00FAA1  FF                 	db	255
  3826   00FAA2  FF                 	db	255
  3827   00FAA3  FF                 	db	255
  3828   00FAA4  FF                 	db	255
  3829   00FAA5  FF                 	db	255
  3830   00FAA6  FF                 	db	255
  3831   00FAA7  FF                 	db	255
  3832   00FAA8  FF                 	db	255
  3833   00FAA9  FF                 	db	255
  3834   00FAAA  FF                 	db	255
  3835   00FAAB  FF                 	db	255
  3836   00FAAC  FF                 	db	255
  3837   00FAAD  FF                 	db	255
  3838   00FAAE  FF                 	db	255
  3839   00FAAF  FF                 	db	255
  3840   00FAB0  FF                 	db	255
  3841   00FAB1  FF                 	db	255
  3842   00FAB2  FF                 	db	255
  3843   00FAB3  FF                 	db	255
  3844   00FAB4  FF                 	db	255
  3845   00FAB5  FF                 	db	255
  3846   00FAB6  FF                 	db	255
  3847   00FAB7  FF                 	db	255
  3848   00FAB8  FF                 	db	255
  3849   00FAB9  FF                 	db	255
  3850   00FABA  FF                 	db	255
  3851   00FABB  FF                 	db	255
  3852   00FABC  FF                 	db	255
  3853   00FABD  FF                 	db	255
  3854   00FABE  FF                 	db	255
  3855   00FABF  FF                 	db	255
  3856   00FAC0  FF                 	db	255
  3857   00FAC1  FF                 	db	255
  3858   00FAC2  FF                 	db	255
  3859   00FAC3  FF                 	db	255
  3860   00FAC4  FF                 	db	255
  3861   00FAC5  FF                 	db	255
  3862   00FAC6  FF                 	db	255
  3863   00FAC7  FF                 	db	255
  3864   00FAC8  FF                 	db	255
  3865   00FAC9  FF                 	db	255
  3866   00FACA  FF                 	db	255
  3867   00FACB  FF                 	db	255
  3868   00FACC  FF                 	db	255
  3869   00FACD  FF                 	db	255
  3870   00FACE  FF                 	db	255
  3871   00FACF  FF                 	db	255
  3872   00FAD0  FF                 	db	255
  3873   00FAD1  FF                 	db	255
  3874   00FAD2  FF                 	db	255
  3875   00FAD3  FF                 	db	255
  3876   00FAD4  FF                 	db	255
  3877   00FAD5  FF                 	db	255
  3878   00FAD6  FF                 	db	255
  3879   00FAD7  FF                 	db	255
  3880   00FAD8  FF                 	db	255
  3881   00FAD9  FF                 	db	255
  3882   00FADA  FF                 	db	255
  3883   00FADB  FF                 	db	255
  3884   00FADC  FF                 	db	255
  3885   00FADD  FF                 	db	255
  3886   00FADE  FF                 	db	255
  3887   00FADF  FF                 	db	255
  3888   00FAE0  FF                 	db	255
  3889   00FAE1  FF                 	db	255
  3890   00FAE2  FF                 	db	255
  3891   00FAE3  FF                 	db	255
  3892   00FAE4  FF                 	db	255
  3893   00FAE5  FF                 	db	255
  3894   00FAE6  FF                 	db	255
  3895   00FAE7  FF                 	db	255
  3896   00FAE8  FF                 	db	255
  3897   00FAE9  FF                 	db	255
  3898   00FAEA  FF                 	db	255
  3899   00FAEB  FF                 	db	255
  3900   00FAEC  FF                 	db	255
  3901   00FAED  FF                 	db	255
  3902   00FAEE  FF                 	db	255
  3903   00FAEF  FF                 	db	255
  3904   00FAF0  FF                 	db	255
  3905   00FAF1  FF                 	db	255
  3906   00FAF2  FF                 	db	255
  3907   00FAF3  FF                 	db	255
  3908   00FAF4  FF                 	db	255
  3909   00FAF5  FF                 	db	255
  3910   00FAF6  FF                 	db	255
  3911   00FAF7  FF                 	db	255
  3912   00FAF8  FF                 	db	255
  3913   00FAF9  FF                 	db	255
  3914   00FAFA  FF                 	db	255
  3915   00FAFB  FF                 	db	255
  3916   00FAFC  FF                 	db	255
  3917   00FAFD  FF                 	db	255
  3918   00FAFE  FF                 	db	255
  3919   00FAFF  FF                 	db	255
  3920   00FB00  FF                 	db	255
  3921   00FB01  FF                 	db	255
  3922   00FB02  FF                 	db	255
  3923   00FB03  FF                 	db	255
  3924   00FB04  FF                 	db	255
  3925   00FB05  FF                 	db	255
  3926   00FB06  FF                 	db	255
  3927   00FB07  FF                 	db	255
  3928   00FB08  FF                 	db	255
  3929   00FB09  FF                 	db	255
  3930   00FB0A  FF                 	db	255
  3931   00FB0B  FF                 	db	255
  3932   00FB0C  FF                 	db	255
  3933   00FB0D  FF                 	db	255
  3934   00FB0E  FF                 	db	255
  3935   00FB0F  FF                 	db	255
  3936   00FB10  FF                 	db	255
  3937   00FB11  FF                 	db	255
  3938   00FB12  FF                 	db	255
  3939   00FB13  FF                 	db	255
  3940   00FB14  FF                 	db	255
  3941   00FB15  FF                 	db	255
  3942   00FB16  FF                 	db	255
  3943   00FB17  FF                 	db	255
  3944   00FB18  FF                 	db	255
  3945   00FB19  FF                 	db	255
  3946   00FB1A  FF                 	db	255
  3947   00FB1B  FF                 	db	255
  3948   00FB1C  FF                 	db	255
  3949   00FB1D  FF                 	db	255
  3950   00FB1E  FF                 	db	255
  3951   00FB1F  FF                 	db	255
  3952   00FB20  FF                 	db	255
  3953   00FB21  FF                 	db	255
  3954   00FB22  FF                 	db	255
  3955   00FB23  FF                 	db	255
  3956   00FB24  FF                 	db	255
  3957   00FB25  FF                 	db	255
  3958   00FB26  FF                 	db	255
  3959   00FB27  FF                 	db	255
  3960   00FB28  FF                 	db	255
  3961   00FB29  FF                 	db	255
  3962   00FB2A  FF                 	db	255
  3963   00FB2B  FF                 	db	255
  3964   00FB2C  FF                 	db	255
  3965   00FB2D  FF                 	db	255
  3966   00FB2E  FF                 	db	255
  3967   00FB2F  FF                 	db	255
  3968   00FB30  FF                 	db	255
  3969   00FB31  FF                 	db	255
  3970   00FB32  FF                 	db	255
  3971   00FB33  FF                 	db	255
  3972   00FB34  FF                 	db	255
  3973   00FB35  FF                 	db	255
  3974   00FB36  FF                 	db	255
  3975   00FB37  FF                 	db	255
  3976   00FB38  FF                 	db	255
  3977   00FB39  FF                 	db	255
  3978   00FB3A  FF                 	db	255
  3979   00FB3B  FF                 	db	255
  3980   00FB3C  FF                 	db	255
  3981   00FB3D  FF                 	db	255
  3982   00FB3E  FF                 	db	255
  3983   00FB3F  FF                 	db	255
  3984   00FB40  FF                 	db	255
  3985   00FB41  FF                 	db	255
  3986   00FB42  FF                 	db	255
  3987   00FB43  FF                 	db	255
  3988   00FB44  FF                 	db	255
  3989   00FB45  FF                 	db	255
  3990   00FB46  FF                 	db	255
  3991   00FB47  FF                 	db	255
  3992   00FB48  FF                 	db	255
  3993   00FB49  FF                 	db	255
  3994   00FB4A  FF                 	db	255
  3995   00FB4B  FF                 	db	255
  3996   00FB4C  FF                 	db	255
  3997   00FB4D  FF                 	db	255
  3998   00FB4E  FF                 	db	255
  3999   00FB4F  FF                 	db	255
  4000   00FB50  FF                 	db	255
  4001   00FB51  FF                 	db	255
  4002   00FB52  FF                 	db	255
  4003   00FB53  FF                 	db	255
  4004   00FB54  FF                 	db	255
  4005   00FB55  FF                 	db	255
  4006   00FB56  FF                 	db	255
  4007   00FB57  FF                 	db	255
  4008   00FB58  FF                 	db	255
  4009   00FB59  FF                 	db	255
  4010   00FB5A  FF                 	db	255
  4011   00FB5B  FF                 	db	255
  4012   00FB5C  FF                 	db	255
  4013   00FB5D  FF                 	db	255
  4014   00FB5E  FF                 	db	255
  4015   00FB5F  FF                 	db	255
  4016   00FB60  FF                 	db	255
  4017   00FB61  FF                 	db	255
  4018   00FB62  FF                 	db	255
  4019   00FB63  FF                 	db	255
  4020   00FB64  FF                 	db	255
  4021   00FB65  FF                 	db	255
  4022   00FB66  FF                 	db	255
  4023   00FB67  FF                 	db	255
  4024   00FB68  FF                 	db	255
  4025   00FB69  FF                 	db	255
  4026   00FB6A  FF                 	db	255
  4027   00FB6B  FF                 	db	255
  4028   00FB6C  FF                 	db	255
  4029   00FB6D  FF                 	db	255
  4030   00FB6E  FF                 	db	255
  4031   00FB6F  FF                 	db	255
  4032   00FB70  FF                 	db	255
  4033   00FB71  FF                 	db	255
  4034   00FB72  FF                 	db	255
  4035   00FB73  FF                 	db	255
  4036   00FB74  FF                 	db	255
  4037   00FB75  FF                 	db	255
  4038   00FB76  FF                 	db	255
  4039   00FB77  FF                 	db	255
  4040   00FB78  FF                 	db	255
  4041   00FB79  FF                 	db	255
  4042   00FB7A  FF                 	db	255
  4043   00FB7B  FF                 	db	255
  4044   00FB7C  FF                 	db	255
  4045   00FB7D  FF                 	db	255
  4046   00FB7E  FF                 	db	255
  4047   00FB7F  FF                 	db	255
  4048   00FB80  FF                 	db	255
  4049   00FB81  FF                 	db	255
  4050   00FB82  FF                 	db	255
  4051   00FB83  FF                 	db	255
  4052   00FB84  FF                 	db	255
  4053   00FB85  FF                 	db	255
  4054   00FB86  FF                 	db	255
  4055   00FB87  FF                 	db	255
  4056   00FB88  FF                 	db	255
  4057   00FB89  FF                 	db	255
  4058   00FB8A  FF                 	db	255
  4059   00FB8B  FF                 	db	255
  4060   00FB8C  FF                 	db	255
  4061   00FB8D  FF                 	db	255
  4062   00FB8E  FF                 	db	255
  4063   00FB8F  FF                 	db	255
  4064   00FB90  FF                 	db	255
  4065   00FB91  FF                 	db	255
  4066   00FB92  FF                 	db	255
  4067   00FB93  FF                 	db	255
  4068   00FB94  FF                 	db	255
  4069   00FB95  FF                 	db	255
  4070   00FB96  FF                 	db	255
  4071   00FB97  FF                 	db	255
  4072   00FB98  FF                 	db	255
  4073   00FB99  FF                 	db	255
  4074   00FB9A  FF                 	db	255
  4075   00FB9B  FF                 	db	255
  4076   00FB9C  FF                 	db	255
  4077   00FB9D  FF                 	db	255
  4078   00FB9E  FF                 	db	255
  4079   00FB9F  FF                 	db	255
  4080   00FBA0  FF                 	db	255
  4081   00FBA1  FF                 	db	255
  4082   00FBA2  FF                 	db	255
  4083   00FBA3  FF                 	db	255
  4084   00FBA4  FF                 	db	255
  4085   00FBA5  FF                 	db	255
  4086   00FBA6  FF                 	db	255
  4087   00FBA7  FF                 	db	255
  4088   00FBA8  FF                 	db	255
  4089   00FBA9  FF                 	db	255
  4090   00FBAA  FF                 	db	255
  4091   00FBAB  FF                 	db	255
  4092   00FBAC  FF                 	db	255
  4093   00FBAD  FF                 	db	255
  4094   00FBAE  FF                 	db	255
  4095   00FBAF  FF                 	db	255
  4096   00FBB0  FF                 	db	255
  4097   00FBB1  FF                 	db	255
  4098   00FBB2  FF                 	db	255
  4099   00FBB3  FF                 	db	255
  4100   00FBB4  FF                 	db	255
  4101   00FBB5  FF                 	db	255
  4102   00FBB6  FF                 	db	255
  4103   00FBB7  FF                 	db	255
  4104   00FBB8  FF                 	db	255
  4105   00FBB9  FF                 	db	255
  4106   00FBBA  FF                 	db	255
  4107   00FBBB  FF                 	db	255
  4108   00FBBC  FF                 	db	255
  4109   00FBBD  FF                 	db	255
  4110   00FBBE  FF                 	db	255
  4111   00FBBF  FF                 	db	255
  4112   00FBC0  FF                 	db	255
  4113   00FBC1  FF                 	db	255
  4114   00FBC2  FF                 	db	255
  4115   00FBC3  FF                 	db	255
  4116   00FBC4  FF                 	db	255
  4117   00FBC5  FF                 	db	255
  4118   00FBC6  FF                 	db	255
  4119   00FBC7  FF                 	db	255
  4120   00FBC8  FF                 	db	255
  4121   00FBC9  FF                 	db	255
  4122   00FBCA  FF                 	db	255
  4123   00FBCB  FF                 	db	255
  4124   00FBCC  FF                 	db	255
  4125   00FBCD  FF                 	db	255
  4126   00FBCE  FF                 	db	255
  4127   00FBCF  FF                 	db	255
  4128   00FBD0  FF                 	db	255
  4129   00FBD1  FF                 	db	255
  4130   00FBD2  FF                 	db	255
  4131   00FBD3  FF                 	db	255
  4132   00FBD4  FF                 	db	255
  4133   00FBD5  FF                 	db	255
  4134   00FBD6  FF                 	db	255
  4135   00FBD7  FF                 	db	255
  4136   00FBD8  FF                 	db	255
  4137   00FBD9  FF                 	db	255
  4138   00FBDA  FF                 	db	255
  4139   00FBDB  FF                 	db	255
  4140   00FBDC  FF                 	db	255
  4141   00FBDD  FF                 	db	255
  4142   00FBDE  FF                 	db	255
  4143   00FBDF  FF                 	db	255
  4144   00FBE0  FF                 	db	255
  4145   00FBE1  FF                 	db	255
  4146   00FBE2  FF                 	db	255
  4147   00FBE3  FF                 	db	255
  4148   00FBE4  FF                 	db	255
  4149   00FBE5  FF                 	db	255
  4150   00FBE6  FF                 	db	255
  4151   00FBE7  FF                 	db	255
  4152   00FBE8  FF                 	db	255
  4153   00FBE9  FF                 	db	255
  4154   00FBEA  FF                 	db	255
  4155   00FBEB  FF                 	db	255
  4156   00FBEC  FF                 	db	255
  4157   00FBED  FF                 	db	255
  4158   00FBEE  FF                 	db	255
  4159   00FBEF  FF                 	db	255
  4160   00FBF0  FF                 	db	255
  4161   00FBF1  FF                 	db	255
  4162   00FBF2  FF                 	db	255
  4163   00FBF3  FF                 	db	255
  4164   00FBF4  FF                 	db	255
  4165   00FBF5  FF                 	db	255
  4166   00FBF6  FF                 	db	255
  4167   00FBF7  FF                 	db	255
  4168   00FBF8  FF                 	db	255
  4169   00FBF9  FF                 	db	255
  4170   00FBFA  FF                 	db	255
  4171   00FBFB  FF                 	db	255
  4172   00FBFC  FF                 	db	255
  4173   00FBFD  FF                 	db	255
  4174   00FBFE  FF                 	db	255
  4175   00FBFF  FF                 	db	255
  4176   00FC00  FF                 	db	255
  4177   00FC01  FF                 	db	255
  4178   00FC02  FF                 	db	255
  4179   00FC03  FF                 	db	255
  4180   00FC04  FF                 	db	255
  4181   00FC05  FF                 	db	255
  4182   00FC06  FF                 	db	255
  4183   00FC07  FF                 	db	255
  4184   00FC08  FF                 	db	255
  4185   00FC09  FF                 	db	255
  4186   00FC0A  FF                 	db	255
  4187   00FC0B  FF                 	db	255
  4188   00FC0C  FF                 	db	255
  4189   00FC0D  FF                 	db	255
  4190   00FC0E  FF                 	db	255
  4191   00FC0F  FF                 	db	255
  4192   00FC10  FF                 	db	255
  4193   00FC11  FF                 	db	255
  4194   00FC12  FF                 	db	255
  4195   00FC13  FF                 	db	255
  4196   00FC14  FF                 	db	255
  4197   00FC15  FF                 	db	255
  4198   00FC16  FF                 	db	255
  4199   00FC17  FF                 	db	255
  4200   00FC18  FF                 	db	255
  4201   00FC19  FF                 	db	255
  4202   00FC1A  FF                 	db	255
  4203   00FC1B  FF                 	db	255
  4204   00FC1C  FF                 	db	255
  4205   00FC1D  FF                 	db	255
  4206   00FC1E  FF                 	db	255
  4207   00FC1F  FF                 	db	255
  4208   00FC20  FF                 	db	255
  4209   00FC21  FF                 	db	255
  4210   00FC22  FF                 	db	255
  4211   00FC23  FF                 	db	255
  4212   00FC24  FF                 	db	255
  4213   00FC25  FF                 	db	255
  4214   00FC26  FF                 	db	255
  4215   00FC27  FF                 	db	255
  4216   00FC28  FF                 	db	255
  4217   00FC29  FF                 	db	255
  4218   00FC2A  FF                 	db	255
  4219   00FC2B  FF                 	db	255
  4220   00FC2C  FF                 	db	255
  4221   00FC2D  FF                 	db	255
  4222   00FC2E  FF                 	db	255
  4223   00FC2F  FF                 	db	255
  4224   00FC30  FF                 	db	255
  4225   00FC31  FF                 	db	255
  4226   00FC32  FF                 	db	255
  4227   00FC33  FF                 	db	255
  4228   00FC34  FF                 	db	255
  4229   00FC35  FF                 	db	255
  4230   00FC36  FF                 	db	255
  4231   00FC37  FF                 	db	255
  4232   00FC38  FF                 	db	255
  4233   00FC39  FF                 	db	255
  4234   00FC3A  FF                 	db	255
  4235   00FC3B  FF                 	db	255
  4236   00FC3C  FF                 	db	255
  4237   00FC3D  FF                 	db	255
  4238   00FC3E  FF                 	db	255
  4239   00FC3F  FF                 	db	255
  4240   00FC40  FF                 	db	255
  4241   00FC41  FF                 	db	255
  4242   00FC42  FF                 	db	255
  4243   00FC43  FF                 	db	255
  4244   00FC44  FF                 	db	255
  4245   00FC45  FF                 	db	255
  4246   00FC46  FF                 	db	255
  4247   00FC47  FF                 	db	255
  4248   00FC48  FF                 	db	255
  4249   00FC49  FF                 	db	255
  4250   00FC4A  FF                 	db	255
  4251   00FC4B  FF                 	db	255
  4252   00FC4C  FF                 	db	255
  4253   00FC4D  FF                 	db	255
  4254   00FC4E  FF                 	db	255
  4255   00FC4F  FF                 	db	255
  4256   00FC50  FF                 	db	255
  4257   00FC51  FF                 	db	255
  4258   00FC52  FF                 	db	255
  4259   00FC53  FF                 	db	255
  4260   00FC54  FF                 	db	255
  4261   00FC55  FF                 	db	255
  4262   00FC56  FF                 	db	255
  4263   00FC57  FF                 	db	255
  4264   00FC58  FF                 	db	255
  4265   00FC59  FF                 	db	255
  4266   00FC5A  FF                 	db	255
  4267   00FC5B  FF                 	db	255
  4268   00FC5C  FF                 	db	255
  4269   00FC5D  FF                 	db	255
  4270   00FC5E  FF                 	db	255
  4271   00FC5F  FF                 	db	255
  4272   00FC60  FF                 	db	255
  4273   00FC61  FF                 	db	255
  4274   00FC62  FF                 	db	255
  4275   00FC63  FF                 	db	255
  4276   00FC64  FF                 	db	255
  4277   00FC65  FF                 	db	255
  4278   00FC66  FF                 	db	255
  4279   00FC67  FF                 	db	255
  4280   00FC68  FF                 	db	255
  4281   00FC69  FF                 	db	255
  4282   00FC6A  FF                 	db	255
  4283   00FC6B  FF                 	db	255
  4284   00FC6C  FF                 	db	255
  4285   00FC6D  FF                 	db	255
  4286   00FC6E  FF                 	db	255
  4287   00FC6F  FF                 	db	255
  4288   00FC70  FF                 	db	255
  4289   00FC71  FF                 	db	255
  4290   00FC72  FF                 	db	255
  4291   00FC73  FF                 	db	255
  4292   00FC74  FF                 	db	255
  4293   00FC75  FF                 	db	255
  4294   00FC76  FF                 	db	255
  4295   00FC77  FF                 	db	255
  4296   00FC78  FF                 	db	255
  4297   00FC79  FF                 	db	255
  4298   00FC7A  FF                 	db	255
  4299   00FC7B  FF                 	db	255
  4300   00FC7C  FF                 	db	255
  4301   00FC7D  FF                 	db	255
  4302   00FC7E  FF                 	db	255
  4303   00FC7F  FF                 	db	255
  4304   00FC80  FF                 	db	255
  4305   00FC81  FF                 	db	255
  4306   00FC82  FF                 	db	255
  4307   00FC83  FF                 	db	255
  4308   00FC84  FF                 	db	255
  4309   00FC85  FF                 	db	255
  4310   00FC86  FF                 	db	255
  4311   00FC87  FF                 	db	255
  4312   00FC88  FF                 	db	255
  4313   00FC89  FF                 	db	255
  4314   00FC8A  FF                 	db	255
  4315   00FC8B  FF                 	db	255
  4316   00FC8C  FF                 	db	255
  4317   00FC8D  FF                 	db	255
  4318   00FC8E  FF                 	db	255
  4319   00FC8F  FF                 	db	255
  4320   00FC90  FF                 	db	255
  4321   00FC91  FF                 	db	255
  4322   00FC92  FF                 	db	255
  4323   00FC93  FF                 	db	255
  4324   00FC94  FF                 	db	255
  4325   00FC95  FF                 	db	255
  4326   00FC96  FF                 	db	255
  4327   00FC97  FF                 	db	255
  4328   00FC98  FF                 	db	255
  4329   00FC99  FF                 	db	255
  4330   00FC9A  FF                 	db	255
  4331   00FC9B  FF                 	db	255
  4332   00FC9C  FF                 	db	255
  4333   00FC9D  FF                 	db	255
  4334   00FC9E  FF                 	db	255
  4335   00FC9F  FF                 	db	255
  4336   00FCA0  FF                 	db	255
  4337   00FCA1  FF                 	db	255
  4338   00FCA2  FF                 	db	255
  4339   00FCA3  FF                 	db	255
  4340   00FCA4  FF                 	db	255
  4341   00FCA5  FF                 	db	255
  4342   00FCA6  FF                 	db	255
  4343   00FCA7  FF                 	db	255
  4344   00FCA8  FF                 	db	255
  4345   00FCA9  FF                 	db	255
  4346   00FCAA  FF                 	db	255
  4347   00FCAB  FF                 	db	255
  4348   00FCAC  FF                 	db	255
  4349   00FCAD  FF                 	db	255
  4350   00FCAE  FF                 	db	255
  4351   00FCAF  FF                 	db	255
  4352   00FCB0  FF                 	db	255
  4353   00FCB1  FF                 	db	255
  4354   00FCB2  FF                 	db	255
  4355   00FCB3  FF                 	db	255
  4356   00FCB4  FF                 	db	255
  4357   00FCB5  FF                 	db	255
  4358   00FCB6  FF                 	db	255
  4359   00FCB7  FF                 	db	255
  4360   00FCB8  FF                 	db	255
  4361   00FCB9  FF                 	db	255
  4362   00FCBA  FF                 	db	255
  4363   00FCBB  FF                 	db	255
  4364   00FCBC  FF                 	db	255
  4365   00FCBD  FF                 	db	255
  4366   00FCBE  FF                 	db	255
  4367   00FCBF  FF                 	db	255
  4368   00FCC0  FF                 	db	255
  4369   00FCC1  FF                 	db	255
  4370   00FCC2  FF                 	db	255
  4371   00FCC3  FF                 	db	255
  4372   00FCC4  FF                 	db	255
  4373   00FCC5  FF                 	db	255
  4374   00FCC6  FF                 	db	255
  4375   00FCC7  FF                 	db	255
  4376   00FCC8  FF                 	db	255
  4377   00FCC9  FF                 	db	255
  4378   00FCCA  FF                 	db	255
  4379   00FCCB  FF                 	db	255
  4380   00FCCC  FF                 	db	255
  4381   00FCCD  FF                 	db	255
  4382   00FCCE  FF                 	db	255
  4383   00FCCF  FF                 	db	255
  4384   00FCD0  FF                 	db	255
  4385   00FCD1  FF                 	db	255
  4386   00FCD2  FF                 	db	255
  4387   00FCD3  FF                 	db	255
  4388   00FCD4  FF                 	db	255
  4389   00FCD5  FF                 	db	255
  4390   00FCD6  FF                 	db	255
  4391   00FCD7  FF                 	db	255
  4392   00FCD8  FF                 	db	255
  4393   00FCD9  FF                 	db	255
  4394   00FCDA  FF                 	db	255
  4395   00FCDB  FF                 	db	255
  4396   00FCDC  FF                 	db	255
  4397   00FCDD  FF                 	db	255
  4398   00FCDE  FF                 	db	255
  4399   00FCDF  FF                 	db	255
  4400   00FCE0  FF                 	db	255
  4401   00FCE1  FF                 	db	255
  4402   00FCE2  FF                 	db	255
  4403   00FCE3  FF                 	db	255
  4404   00FCE4  FF                 	db	255
  4405   00FCE5  FF                 	db	255
  4406   00FCE6  FF                 	db	255
  4407   00FCE7  FF                 	db	255
  4408   00FCE8  FF                 	db	255
  4409   00FCE9  FF                 	db	255
  4410   00FCEA  FF                 	db	255
  4411   00FCEB  FF                 	db	255
  4412   00FCEC  FF                 	db	255
  4413   00FCED  FF                 	db	255
  4414   00FCEE  FF                 	db	255
  4415   00FCEF  FF                 	db	255
  4416   00FCF0  FF                 	db	255
  4417   00FCF1  FF                 	db	255
  4418   00FCF2  FF                 	db	255
  4419   00FCF3  FF                 	db	255
  4420   00FCF4  FF                 	db	255
  4421   00FCF5  FF                 	db	255
  4422   00FCF6  FF                 	db	255
  4423   00FCF7  FF                 	db	255
  4424   00FCF8  FF                 	db	255
  4425   00FCF9  FF                 	db	255
  4426   00FCFA  FF                 	db	255
  4427   00FCFB  FF                 	db	255
  4428   00FCFC  FF                 	db	255
  4429   00FCFD  FF                 	db	255
  4430   00FCFE  FF                 	db	255
  4431   00FCFF  FF                 	db	255
  4432   00FD00  FF                 	db	255
  4433   00FD01  FF                 	db	255
  4434   00FD02  FF                 	db	255
  4435   00FD03  FF                 	db	255
  4436   00FD04  FF                 	db	255
  4437   00FD05  FF                 	db	255
  4438   00FD06  FF                 	db	255
  4439   00FD07  FF                 	db	255
  4440   00FD08  FF                 	db	255
  4441   00FD09  FF                 	db	255
  4442   00FD0A  FF                 	db	255
  4443   00FD0B  FF                 	db	255
  4444   00FD0C  FF                 	db	255
  4445   00FD0D  FF                 	db	255
  4446   00FD0E  FF                 	db	255
  4447   00FD0F  FF                 	db	255
  4448   00FD10  FF                 	db	255
  4449   00FD11  FF                 	db	255
  4450   00FD12  FF                 	db	255
  4451   00FD13  FF                 	db	255
  4452   00FD14  FF                 	db	255
  4453   00FD15  FF                 	db	255
  4454   00FD16  FF                 	db	255
  4455   00FD17  FF                 	db	255
  4456   00FD18  FF                 	db	255
  4457   00FD19  FF                 	db	255
  4458   00FD1A  FF                 	db	255
  4459   00FD1B  FF                 	db	255
  4460   00FD1C  FF                 	db	255
  4461   00FD1D  FF                 	db	255
  4462   00FD1E  FF                 	db	255
  4463   00FD1F  FF                 	db	255
  4464   00FD20  FF                 	db	255
  4465   00FD21  FF                 	db	255
  4466   00FD22  FF                 	db	255
  4467   00FD23  FF                 	db	255
  4468   00FD24  FF                 	db	255
  4469   00FD25  FF                 	db	255
  4470   00FD26  FF                 	db	255
  4471   00FD27  FF                 	db	255
  4472   00FD28  FF                 	db	255
  4473   00FD29  FF                 	db	255
  4474   00FD2A  FF                 	db	255
  4475   00FD2B  FF                 	db	255
  4476   00FD2C  FF                 	db	255
  4477   00FD2D  FF                 	db	255
  4478   00FD2E  FF                 	db	255
  4479   00FD2F  FF                 	db	255
  4480   00FD30  FF                 	db	255
  4481   00FD31  FF                 	db	255
  4482   00FD32  FF                 	db	255
  4483   00FD33  FF                 	db	255
  4484   00FD34  FF                 	db	255
  4485   00FD35  FF                 	db	255
  4486   00FD36  FF                 	db	255
  4487   00FD37  FF                 	db	255
  4488   00FD38  FF                 	db	255
  4489   00FD39  FF                 	db	255
  4490   00FD3A  FF                 	db	255
  4491   00FD3B  FF                 	db	255
  4492   00FD3C  FF                 	db	255
  4493   00FD3D  FF                 	db	255
  4494   00FD3E  FF                 	db	255
  4495   00FD3F  FF                 	db	255
  4496   00FD40  FF                 	db	255
  4497   00FD41  FF                 	db	255
  4498   00FD42  FF                 	db	255
  4499   00FD43  FF                 	db	255
  4500   00FD44  FF                 	db	255
  4501   00FD45  FF                 	db	255
  4502   00FD46  FF                 	db	255
  4503   00FD47  FF                 	db	255
  4504   00FD48  FF                 	db	255
  4505   00FD49  FF                 	db	255
  4506   00FD4A  FF                 	db	255
  4507   00FD4B  FF                 	db	255
  4508   00FD4C  FF                 	db	255
  4509   00FD4D  FF                 	db	255
  4510   00FD4E  FF                 	db	255
  4511   00FD4F  FF                 	db	255
  4512   00FD50  FF                 	db	255
  4513   00FD51  FF                 	db	255
  4514   00FD52  FF                 	db	255
  4515   00FD53  FF                 	db	255
  4516   00FD54  FF                 	db	255
  4517   00FD55  FF                 	db	255
  4518   00FD56  FF                 	db	255
  4519   00FD57  FF                 	db	255
  4520   00FD58  FF                 	db	255
  4521   00FD59  FF                 	db	255
  4522   00FD5A  FF                 	db	255
  4523   00FD5B  FF                 	db	255
  4524   00FD5C  FF                 	db	255
  4525   00FD5D  FF                 	db	255
  4526   00FD5E  FF                 	db	255
  4527   00FD5F  FF                 	db	255
  4528   00FD60  FF                 	db	255
  4529   00FD61  FF                 	db	255
  4530   00FD62  FF                 	db	255
  4531   00FD63  FF                 	db	255
  4532   00FD64  FF                 	db	255
  4533   00FD65  FF                 	db	255
  4534   00FD66  FF                 	db	255
  4535   00FD67  FF                 	db	255
  4536   00FD68  FF                 	db	255
  4537   00FD69  FF                 	db	255
  4538   00FD6A  FF                 	db	255
  4539   00FD6B  FF                 	db	255
  4540   00FD6C  FF                 	db	255
  4541   00FD6D  FF                 	db	255
  4542   00FD6E  FF                 	db	255
  4543   00FD6F  FF                 	db	255
  4544   00FD70  FF                 	db	255
  4545   00FD71  FF                 	db	255
  4546   00FD72  FF                 	db	255
  4547   00FD73  FF                 	db	255
  4548   00FD74  FF                 	db	255
  4549   00FD75  FF                 	db	255
  4550   00FD76  FF                 	db	255
  4551   00FD77  FF                 	db	255
  4552   00FD78  FF                 	db	255
  4553   00FD79  FF                 	db	255
  4554   00FD7A  FF                 	db	255
  4555   00FD7B  FF                 	db	255
  4556   00FD7C  FF                 	db	255
  4557   00FD7D  FF                 	db	255
  4558   00FD7E  FF                 	db	255
  4559   00FD7F  FF                 	db	255
  4560   00FD80  FF                 	db	255
  4561   00FD81  FF                 	db	255
  4562   00FD82  FF                 	db	255
  4563   00FD83  FF                 	db	255
  4564   00FD84  FF                 	db	255
  4565   00FD85  FF                 	db	255
  4566   00FD86  FF                 	db	255
  4567   00FD87  FF                 	db	255
  4568   00FD88  FF                 	db	255
  4569   00FD89  FF                 	db	255
  4570   00FD8A  FF                 	db	255
  4571   00FD8B  FF                 	db	255
  4572   00FD8C  FF                 	db	255
  4573   00FD8D  FF                 	db	255
  4574   00FD8E  FF                 	db	255
  4575   00FD8F  FF                 	db	255
  4576   00FD90  FF                 	db	255
  4577   00FD91  FF                 	db	255
  4578   00FD92  FF                 	db	255
  4579   00FD93  FF                 	db	255
  4580   00FD94  FF                 	db	255
  4581   00FD95  FF                 	db	255
  4582   00FD96  FF                 	db	255
  4583   00FD97  FF                 	db	255
  4584   00FD98  FF                 	db	255
  4585   00FD99  FF                 	db	255
  4586   00FD9A  FF                 	db	255
  4587   00FD9B  FF                 	db	255
  4588   00FD9C  FF                 	db	255
  4589   00FD9D  FF                 	db	255
  4590   00FD9E  FF                 	db	255
  4591   00FD9F  FF                 	db	255
  4592   00FDA0  FF                 	db	255
  4593   00FDA1  FF                 	db	255
  4594   00FDA2  FF                 	db	255
  4595   00FDA3  FF                 	db	255
  4596   00FDA4  FF                 	db	255
  4597   00FDA5  FF                 	db	255
  4598   00FDA6  FF                 	db	255
  4599   00FDA7  FF                 	db	255
  4600   00FDA8  FF                 	db	255
  4601   00FDA9  FF                 	db	255
  4602   00FDAA  FF                 	db	255
  4603   00FDAB  FF                 	db	255
  4604   00FDAC  FF                 	db	255
  4605   00FDAD  FF                 	db	255
  4606   00FDAE  FF                 	db	255
  4607   00FDAF  FF                 	db	255
  4608   00FDB0  FF                 	db	255
  4609   00FDB1  FF                 	db	255
  4610   00FDB2  FF                 	db	255
  4611   00FDB3  FF                 	db	255
  4612   00FDB4  FF                 	db	255
  4613   00FDB5  FF                 	db	255
  4614   00FDB6  FF                 	db	255
  4615   00FDB7  FF                 	db	255
  4616   00FDB8  FF                 	db	255
  4617   00FDB9  FF                 	db	255
  4618   00FDBA  FF                 	db	255
  4619   00FDBB  FF                 	db	255
  4620   00FDBC  FF                 	db	255
  4621   00FDBD  FF                 	db	255
  4622   00FDBE  FF                 	db	255
  4623   00FDBF  FF                 	db	255
  4624   00FDC0  FF                 	db	255
  4625   00FDC1  FF                 	db	255
  4626   00FDC2  FF                 	db	255
  4627   00FDC3  FF                 	db	255
  4628   00FDC4  FF                 	db	255
  4629   00FDC5  FF                 	db	255
  4630   00FDC6  FF                 	db	255
  4631   00FDC7  FF                 	db	255
  4632   00FDC8  FF                 	db	255
  4633   00FDC9  FF                 	db	255
  4634   00FDCA  FF                 	db	255
  4635   00FDCB  FF                 	db	255
  4636   00FDCC  FF                 	db	255
  4637   00FDCD  FF                 	db	255
  4638   00FDCE  FF                 	db	255
  4639   00FDCF  FF                 	db	255
  4640   00FDD0  FF                 	db	255
  4641   00FDD1  FF                 	db	255
  4642   00FDD2  FF                 	db	255
  4643   00FDD3  FF                 	db	255
  4644   00FDD4  FF                 	db	255
  4645   00FDD5  FF                 	db	255
  4646   00FDD6  FF                 	db	255
  4647   00FDD7  FF                 	db	255
  4648   00FDD8  FF                 	db	255
  4649   00FDD9  FF                 	db	255
  4650   00FDDA  FF                 	db	255
  4651   00FDDB  FF                 	db	255
  4652   00FDDC  FF                 	db	255
  4653   00FDDD  FF                 	db	255
  4654   00FDDE  FF                 	db	255
  4655   00FDDF  FF                 	db	255
  4656   00FDE0  FF                 	db	255
  4657   00FDE1  FF                 	db	255
  4658   00FDE2  FF                 	db	255
  4659   00FDE3  FF                 	db	255
  4660   00FDE4  FF                 	db	255
  4661   00FDE5  FF                 	db	255
  4662   00FDE6  FF                 	db	255
  4663   00FDE7  FF                 	db	255
  4664   00FDE8  FF                 	db	255
  4665   00FDE9  FF                 	db	255
  4666   00FDEA  FF                 	db	255
  4667   00FDEB  FF                 	db	255
  4668   00FDEC  FF                 	db	255
  4669   00FDED  FF                 	db	255
  4670   00FDEE  FF                 	db	255
  4671   00FDEF  FF                 	db	255
  4672   00FDF0  FF                 	db	255
  4673   00FDF1  FF                 	db	255
  4674   00FDF2  FF                 	db	255
  4675   00FDF3  FF                 	db	255
  4676   00FDF4  FF                 	db	255
  4677   00FDF5  FF                 	db	255
  4678   00FDF6  FF                 	db	255
  4679   00FDF7  FF                 	db	255
  4680   00FDF8  FF                 	db	255
  4681   00FDF9  FF                 	db	255
  4682   00FDFA  FF                 	db	255
  4683   00FDFB  FF                 	db	255
  4684   00FDFC  FF                 	db	255
  4685   00FDFD  FF                 	db	255
  4686   00FDFE  FF                 	db	255
  4687   00FDFF  FF                 	db	255
  4688   00FE00  FF                 	db	255
  4689   00FE01  FF                 	db	255
  4690   00FE02  FF                 	db	255
  4691   00FE03  FF                 	db	255
  4692   00FE04  FF                 	db	255
  4693   00FE05  FF                 	db	255
  4694   00FE06  FF                 	db	255
  4695   00FE07  FF                 	db	255
  4696   00FE08  FF                 	db	255
  4697   00FE09  FF                 	db	255
  4698   00FE0A  FF                 	db	255
  4699   00FE0B  FF                 	db	255
  4700   00FE0C  FF                 	db	255
  4701   00FE0D  FF                 	db	255
  4702   00FE0E  FF                 	db	255
  4703   00FE0F  FF                 	db	255
  4704   00FE10  FF                 	db	255
  4705   00FE11  FF                 	db	255
  4706   00FE12  FF                 	db	255
  4707   00FE13  FF                 	db	255
  4708   00FE14  FF                 	db	255
  4709   00FE15  FF                 	db	255
  4710   00FE16  FF                 	db	255
  4711   00FE17  FF                 	db	255
  4712   00FE18  FF                 	db	255
  4713   00FE19  FF                 	db	255
  4714   00FE1A  FF                 	db	255
  4715   00FE1B  FF                 	db	255
  4716   00FE1C  FF                 	db	255
  4717   00FE1D  FF                 	db	255
  4718   00FE1E  FF                 	db	255
  4719   00FE1F  FF                 	db	255
  4720   00FE20  FF                 	db	255
  4721   00FE21  FF                 	db	255
  4722   00FE22  FF                 	db	255
  4723   00FE23  FF                 	db	255
  4724   00FE24  FF                 	db	255
  4725   00FE25  FF                 	db	255
  4726   00FE26  FF                 	db	255
  4727   00FE27  FF                 	db	255
  4728   00FE28  FF                 	db	255
  4729   00FE29  FF                 	db	255
  4730   00FE2A  FF                 	db	255
  4731   00FE2B  FF                 	db	255
  4732   00FE2C  FF                 	db	255
  4733   00FE2D  FF                 	db	255
  4734   00FE2E  FF                 	db	255
  4735   00FE2F  FF                 	db	255
  4736   00FE30  FF                 	db	255
  4737   00FE31  FF                 	db	255
  4738   00FE32  FF                 	db	255
  4739   00FE33  FF                 	db	255
  4740   00FE34  FF                 	db	255
  4741   00FE35  FF                 	db	255
  4742   00FE36  FF                 	db	255
  4743   00FE37  FF                 	db	255
  4744   00FE38  FF                 	db	255
  4745   00FE39  FF                 	db	255
  4746   00FE3A  FF                 	db	255
  4747   00FE3B  FF                 	db	255
  4748   00FE3C  FF                 	db	255
  4749   00FE3D  FF                 	db	255
  4750   00FE3E  FF                 	db	255
  4751   00FE3F  FF                 	db	255
  4752   00FE40  FF                 	db	255
  4753   00FE41  FF                 	db	255
  4754   00FE42  FF                 	db	255
  4755   00FE43  FF                 	db	255
  4756   00FE44  FF                 	db	255
  4757   00FE45  FF                 	db	255
  4758   00FE46  FF                 	db	255
  4759   00FE47  FF                 	db	255
  4760   00FE48  FF                 	db	255
  4761   00FE49  FF                 	db	255
  4762   00FE4A  FF                 	db	255
  4763   00FE4B  FF                 	db	255
  4764   00FE4C  FF                 	db	255
  4765   00FE4D  FF                 	db	255
  4766   00FE4E  FF                 	db	255
  4767   00FE4F  FF                 	db	255
  4768   00FE50  FF                 	db	255
  4769   00FE51  FF                 	db	255
  4770   00FE52  FF                 	db	255
  4771   00FE53  FF                 	db	255
  4772   00FE54  FF                 	db	255
  4773   00FE55  FF                 	db	255
  4774   00FE56  FF                 	db	255
  4775   00FE57  FF                 	db	255
  4776   00FE58  FF                 	db	255
  4777   00FE59  FF                 	db	255
  4778   00FE5A  FF                 	db	255
  4779   00FE5B  FF                 	db	255
  4780   00FE5C  FF                 	db	255
  4781   00FE5D  FF                 	db	255
  4782   00FE5E  FF                 	db	255
  4783   00FE5F  FF                 	db	255
  4784   00FE60  FF                 	db	255
  4785   00FE61  FF                 	db	255
  4786   00FE62  FF                 	db	255
  4787   00FE63  FF                 	db	255
  4788   00FE64  FF                 	db	255
  4789   00FE65  FF                 	db	255
  4790   00FE66  FF                 	db	255
  4791   00FE67  FF                 	db	255
  4792   00FE68  FF                 	db	255
  4793   00FE69  FF                 	db	255
  4794   00FE6A  FF                 	db	255
  4795   00FE6B  FF                 	db	255
  4796   00FE6C  FF                 	db	255
  4797   00FE6D  FF                 	db	255
  4798   00FE6E  FF                 	db	255
  4799   00FE6F  FF                 	db	255
  4800   00FE70  FF                 	db	255
  4801   00FE71  FF                 	db	255
  4802   00FE72  FF                 	db	255
  4803   00FE73  FF                 	db	255
  4804   00FE74  FF                 	db	255
  4805   00FE75  FF                 	db	255
  4806   00FE76  FF                 	db	255
  4807   00FE77  FF                 	db	255
  4808   00FE78  FF                 	db	255
  4809   00FE79  FF                 	db	255
  4810   00FE7A  FF                 	db	255
  4811   00FE7B  FF                 	db	255
  4812   00FE7C  FF                 	db	255
  4813   00FE7D  FF                 	db	255
  4814   00FE7E  FF                 	db	255
  4815   00FE7F  FF                 	db	255
  4816   00FE80  FF                 	db	255
  4817   00FE81  FF                 	db	255
  4818   00FE82  FF                 	db	255
  4819   00FE83  FF                 	db	255
  4820   00FE84  FF                 	db	255
  4821   00FE85  FF                 	db	255
  4822   00FE86  FF                 	db	255
  4823   00FE87  FF                 	db	255
  4824   00FE88  FF                 	db	255
  4825   00FE89  FF                 	db	255
  4826   00FE8A  FF                 	db	255
  4827   00FE8B  FF                 	db	255
  4828   00FE8C  FF                 	db	255
  4829   00FE8D  FF                 	db	255
  4830   00FE8E  FF                 	db	255
  4831   00FE8F  FF                 	db	255
  4832   00FE90  FF                 	db	255
  4833   00FE91  FF                 	db	255
  4834   00FE92  FF                 	db	255
  4835   00FE93  FF                 	db	255
  4836   00FE94  FF                 	db	255
  4837   00FE95  FF                 	db	255
  4838   00FE96  FF                 	db	255
  4839   00FE97  FF                 	db	255
  4840   00FE98  FF                 	db	255
  4841   00FE99  FF                 	db	255
  4842   00FE9A  FF                 	db	255
  4843   00FE9B  FF                 	db	255
  4844   00FE9C  FF                 	db	255
  4845   00FE9D  FF                 	db	255
  4846   00FE9E  FF                 	db	255
  4847   00FE9F  FF                 	db	255
  4848   00FEA0  FF                 	db	255
  4849   00FEA1  FF                 	db	255
  4850   00FEA2  FF                 	db	255
  4851   00FEA3  FF                 	db	255
  4852   00FEA4  FF                 	db	255
  4853   00FEA5  FF                 	db	255
  4854   00FEA6  FF                 	db	255
  4855   00FEA7  FF                 	db	255
  4856   00FEA8  FF                 	db	255
  4857   00FEA9  FF                 	db	255
  4858   00FEAA  FF                 	db	255
  4859   00FEAB  FF                 	db	255
  4860   00FEAC  FF                 	db	255
  4861   00FEAD  FF                 	db	255
  4862   00FEAE  FF                 	db	255
  4863   00FEAF  FF                 	db	255
  4864   00FEB0  FF                 	db	255
  4865   00FEB1  FF                 	db	255
  4866   00FEB2  FF                 	db	255
  4867   00FEB3  FF                 	db	255
  4868   00FEB4  FF                 	db	255
  4869   00FEB5  FF                 	db	255
  4870   00FEB6  FF                 	db	255
  4871   00FEB7  FF                 	db	255
  4872   00FEB8  FF                 	db	255
  4873   00FEB9  FF                 	db	255
  4874   00FEBA  FF                 	db	255
  4875   00FEBB  FF                 	db	255
  4876   00FEBC  FF                 	db	255
  4877   00FEBD  FF                 	db	255
  4878   00FEBE  FF                 	db	255
  4879   00FEBF  FF                 	db	255
  4880   00FEC0  FF                 	db	255
  4881   00FEC1  FF                 	db	255
  4882   00FEC2  FF                 	db	255
  4883   00FEC3  FF                 	db	255
  4884   00FEC4  FF                 	db	255
  4885   00FEC5  FF                 	db	255
  4886   00FEC6  FF                 	db	255
  4887   00FEC7  FF                 	db	255
  4888   00FEC8  FF                 	db	255
  4889   00FEC9  FF                 	db	255
  4890   00FECA  FF                 	db	255
  4891   00FECB  FF                 	db	255
  4892   00FECC  FF                 	db	255
  4893   00FECD  FF                 	db	255
  4894   00FECE  FF                 	db	255
  4895   00FECF  FF                 	db	255
  4896   00FED0  FF                 	db	255
  4897   00FED1  FF                 	db	255
  4898   00FED2  FF                 	db	255
  4899   00FED3  FF                 	db	255
  4900   00FED4  FF                 	db	255
  4901   00FED5  FF                 	db	255
  4902   00FED6  FF                 	db	255
  4903   00FED7  FF                 	db	255
  4904   00FED8  FF                 	db	255
  4905   00FED9  FF                 	db	255
  4906   00FEDA  FF                 	db	255
  4907   00FEDB  FF                 	db	255
  4908   00FEDC  FF                 	db	255
  4909   00FEDD  FF                 	db	255
  4910   00FEDE  FF                 	db	255
  4911   00FEDF  FF                 	db	255
  4912   00FEE0  FF                 	db	255
  4913   00FEE1  FF                 	db	255
  4914   00FEE2  FF                 	db	255
  4915   00FEE3  FF                 	db	255
  4916   00FEE4  FF                 	db	255
  4917   00FEE5  FF                 	db	255
  4918   00FEE6  FF                 	db	255
  4919   00FEE7  FF                 	db	255
  4920   00FEE8  FF                 	db	255
  4921   00FEE9  FF                 	db	255
  4922   00FEEA  FF                 	db	255
  4923   00FEEB  FF                 	db	255
  4924   00FEEC  FF                 	db	255
  4925   00FEED  FF                 	db	255
  4926   00FEEE  FF                 	db	255
  4927   00FEEF  FF                 	db	255
  4928   00FEF0  FF                 	db	255
  4929   00FEF1  FF                 	db	255
  4930   00FEF2  FF                 	db	255
  4931   00FEF3  FF                 	db	255
  4932   00FEF4  FF                 	db	255
  4933   00FEF5  FF                 	db	255
  4934   00FEF6  FF                 	db	255
  4935   00FEF7  FF                 	db	255
  4936   00FEF8  FF                 	db	255
  4937   00FEF9  FF                 	db	255
  4938   00FEFA  FF                 	db	255
  4939   00FEFB  FF                 	db	255
  4940   00FEFC  FF                 	db	255
  4941   00FEFD  FF                 	db	255
  4942   00FEFE  FF                 	db	255
  4943   00FEFF  FF                 	db	255
  4944   00FF00  FF                 	db	255
  4945   00FF01  FF                 	db	255
  4946   00FF02  FF                 	db	255
  4947   00FF03  FF                 	db	255
  4948   00FF04  FF                 	db	255
  4949   00FF05  FF                 	db	255
  4950   00FF06  FF                 	db	255
  4951   00FF07  FF                 	db	255
  4952   00FF08  FF                 	db	255
  4953   00FF09  FF                 	db	255
  4954   00FF0A  FF                 	db	255
  4955   00FF0B  FF                 	db	255
  4956   00FF0C  FF                 	db	255
  4957   00FF0D  FF                 	db	255
  4958   00FF0E  FF                 	db	255
  4959   00FF0F  FF                 	db	255
  4960   00FF10  FF                 	db	255
  4961   00FF11  FF                 	db	255
  4962   00FF12  FF                 	db	255
  4963   00FF13  FF                 	db	255
  4964   00FF14  FF                 	db	255
  4965   00FF15  FF                 	db	255
  4966   00FF16  FF                 	db	255
  4967   00FF17  FF                 	db	255
  4968   00FF18  FF                 	db	255
  4969   00FF19  FF                 	db	255
  4970   00FF1A  FF                 	db	255
  4971   00FF1B  FF                 	db	255
  4972   00FF1C  FF                 	db	255
  4973   00FF1D  FF                 	db	255
  4974   00FF1E  FF                 	db	255
  4975   00FF1F  FF                 	db	255
  4976   00FF20  FF                 	db	255
  4977   00FF21  FF                 	db	255
  4978   00FF22  FF                 	db	255
  4979   00FF23  FF                 	db	255
  4980   00FF24  FF                 	db	255
  4981   00FF25  FF                 	db	255
  4982   00FF26  FF                 	db	255
  4983   00FF27  FF                 	db	255
  4984   00FF28  FF                 	db	255
  4985   00FF29  FF                 	db	255
  4986   00FF2A  FF                 	db	255
  4987   00FF2B  FF                 	db	255
  4988   00FF2C  FF                 	db	255
  4989   00FF2D  FF                 	db	255
  4990   00FF2E  FF                 	db	255
  4991   00FF2F  FF                 	db	255
  4992   00FF30  FF                 	db	255
  4993   00FF31  FF                 	db	255
  4994   00FF32  FF                 	db	255
  4995   00FF33  FF                 	db	255
  4996   00FF34  FF                 	db	255
  4997   00FF35  FF                 	db	255
  4998   00FF36  FF                 	db	255
  4999   00FF37  FF                 	db	255
  5000   00FF38  FF                 	db	255
  5001   00FF39  FF                 	db	255
  5002   00FF3A  FF                 	db	255
  5003   00FF3B  FF                 	db	255
  5004   00FF3C  FF                 	db	255
  5005   00FF3D  FF                 	db	255
  5006   00FF3E  FF                 	db	255
  5007   00FF3F  FF                 	db	255
  5008   00FF40  FF                 	db	255
  5009   00FF41  FF                 	db	255
  5010   00FF42  FF                 	db	255
  5011   00FF43  FF                 	db	255
  5012   00FF44  FF                 	db	255
  5013   00FF45  FF                 	db	255
  5014   00FF46  FF                 	db	255
  5015   00FF47  FF                 	db	255
  5016   00FF48  FF                 	db	255
  5017   00FF49  FF                 	db	255
  5018   00FF4A  FF                 	db	255
  5019   00FF4B  FF                 	db	255
  5020   00FF4C  FF                 	db	255
  5021   00FF4D  FF                 	db	255
  5022   00FF4E  FF                 	db	255
  5023   00FF4F  FF                 	db	255
  5024   00FF50  FF                 	db	255
  5025   00FF51  FF                 	db	255
  5026   00FF52  FF                 	db	255
  5027   00FF53  FF                 	db	255
  5028   00FF54  FF                 	db	255
  5029   00FF55  FF                 	db	255
  5030   00FF56  FF                 	db	255
  5031   00FF57  FF                 	db	255
  5032   00FF58  FF                 	db	255
  5033   00FF59  FF                 	db	255
  5034   00FF5A  FF                 	db	255
  5035   00FF5B  FF                 	db	255
  5036   00FF5C  FF                 	db	255
  5037   00FF5D  FF                 	db	255
  5038   00FF5E  FF                 	db	255
  5039   00FF5F  FF                 	db	255
  5040   00FF60  FF                 	db	255
  5041   00FF61  FF                 	db	255
  5042   00FF62  FF                 	db	255
  5043   00FF63  FF                 	db	255
  5044   00FF64  FF                 	db	255
  5045   00FF65  FF                 	db	255
  5046   00FF66  FF                 	db	255
  5047   00FF67  FF                 	db	255
  5048   00FF68  FF                 	db	255
  5049   00FF69  FF                 	db	255
  5050   00FF6A  FF                 	db	255
  5051   00FF6B  FF                 	db	255
  5052   00FF6C  FF                 	db	255
  5053   00FF6D  FF                 	db	255
  5054   00FF6E  FF                 	db	255
  5055   00FF6F  FF                 	db	255
  5056   00FF70                     __end_of_eventTable:
  5057                           	callstack 0
  5058   000000                     _paramBlock_absaddr	set	2080
  5059                           
  5060                           	psect	_paramBlock_text
  5061   000820                     __p_paramBlock_text:
  5062                           	callstack 0
  5063   000820                     _paramBlock:
  5064                           	callstack 0
  5065   000820  A5                 	db	165
  5066   000821  61                 	db	97
  5067   000822  20                 	db	32
  5068   000823  FF                 	db	255
  5069   000824  14                 	db	20
  5070   000825  7F                 	db	127
  5071   000826  04                 	db	4
  5072   000827  0B                 	db	11
  5073   000828  0F                 	db	15
  5074   000829  01                 	db	1
  5075   00082A  00                 	db	0
  5076   00082B  08                 	db	8
  5077   00082C  00                 	db	0
  5078   00082D  00                 	db	0
  5079   00082E  00                 	db	0
  5080   00082F  00                 	db	0
  5081   000830  00                 	db	0
  5082   000831  00                 	db	0
  5083   000832  01                 	db	1
  5084   000833  06                 	db	6
  5085   000834  00                 	db	0
  5086   000835  00                 	db	0
  5087   000836  00                 	db	0
  5088   000837  00                 	db	0
  5089   000838  14                 	db	20
  5090   000839  00                 	db	0
  5091   00083A  48                 	db	72
  5092   00083B  08                 	db	8
  5093   00083C  00                 	db	0
  5094   00083D  00                 	db	0
  5095   00083E  4A                 	db	74
  5096   00083F  03                 	db	3
  5097   000840                     __end_of_paramBlock:
  5098                           	callstack 0
  5099   000000                     _name_absaddr	set	2120
  5100                           
  5101                           	psect	_name_text
  5102   000848                     __p_name_text:
  5103                           	callstack 0
  5104   000848                     _name:
  5105                           	callstack 0
  5106   000848  4D                 	db	77
  5107   000849  49                 	db	73
  5108   00084A  4F                 	db	79
  5109   00084B  20                 	db	32
  5110   00084C  20                 	db	32
  5111   00084D  20                 	db	32
  5112   00084E  20                 	db	32
  5113   00084F  00                 	db	0
  5114   000850                     __end_of_name:
  5115                           	callstack 0
  5116   000000                     _COMSTAT	set	3953
  5117   000000                     _PIR5bits	set	3959
  5118   000000                     _PIE5bits	set	3958
  5119   000000                     _TXBIEbits	set	3711
  5120   000000                     _BIE0	set	3710
  5121   000000                     _RXF0SIDL	set	3809
  5122   000000                     _RXM0SIDH	set	3832
  5123   000000                     _CIOCON	set	3952
  5124   000000                     _ECANCON	set	3954
  5125   000000                     _IPR5	set	3960
  5126   000000                     _EECON2	set	3966
  5127   000000                     _TMR0L	set	4054
  5128   000000                     _TMR0H	set	4055
  5129   000000                     _TMR3L	set	4018
  5130   000000                     _TMR3H	set	4019
  5131   000000                     _TMR1L	set	4046
  5132   000000                     _TMR1H	set	4047
  5133   000000                     _T3CONbits	set	4017
  5134   000000                     _ANCON1	set	3932
  5135   000000                     _ANCON0	set	3933
  5136   000000                     _B0CON	set	3712
  5137                           
  5138                           	psect	nvBANK0
  5139   0000D1                     __pnvBANK0:
  5140                           	callstack 0
  5141   0000D1                     _flashBlock:
  5142                           	callstack 0
  5143   0000D1                     	ds	2
  5144   000000                     _TXB2CONbits	set	3840
  5145   000000                     _TXB1CONbits	set	3856
  5146   000000                     _TXB0CONbits	set	3872
  5147   000000                     _COMSTATbits	set	3953
  5148   000000                     _EECON1	set	3967
  5149   000000                     _T0CONbits	set	4053
  5150   000000                     _LATBbits	set	3978
  5151   000000                     _TRISAbits	set	3986
  5152   000000                     _TRISBbits	set	3987
  5153   000000                     _PORTAbits	set	3968
  5154   000000                     _BRGCON1	set	3651
  5155   000000                     _BSEL0	set	3709
  5156   000000                     _WPUB	set	3931
  5157   000000                     _INTCON2bits	set	4081
  5158   000000                     _TBLPTR	set	4086
  5159   000000                     _TABLAT	set	4085
  5160   000000                     _TBLPTRU	set	4088
  5161   000000                     _INTCONbits	set	4082
  5162   000000                     _CANSTATbits	set	3950
  5163   000000                     _CANCON	set	3951
  5164   000000                     _EEDATA	set	3955
  5165   000000                     _EEADR	set	3956
  5166   000000                     _EEADRH	set	3957
  5167   000000                     _EECON1bits	set	3967
  5168   000000                     _PORTA	set	3968
  5169   000000                     _LATA	set	3977
  5170   000000                     _TRISA	set	3986
  5171   000000                     _RXB0CON	set	3936
  5172   000000                     _OSCTUNEbits	set	3995
  5173   000000                     _PIE1bits	set	3997
  5174   000000                     _PIR1bits	set	3998
  5175   000000                     _TRISC	set	3988
  5176   000000                     _TRISB	set	3987
  5177   000000                     _PIE2bits	set	4000
  5178   000000                     _PIR2bits	set	4001
  5179   000000                     _T1GCONbits	set	4010
  5180   000000                     _LATC	set	3979
  5181   000000                     _LATB	set	3978
  5182   000000                     _PORTC	set	3970
  5183   000000                     _PORTB	set	3969
  5184   000000                     _T3GCONbits	set	4016
  5185   000000                     _T1CONbits	set	4045
  5186   000000                     _RCONbits	set	4048
  5187   000000                     _T0CON	set	4053
  5188   000000                     _EEIF	set	32190
  5189   000000                     _RXFCON0	set	3654
  5190   000000                     _RXFBCON0	set	3697
  5191   000000                     _BRGCON3	set	3653
  5192   000000                     _BRGCON2	set	3652
  5193   000000                     _TXB2CON	set	3840
  5194   000000                     _TXB1CON	set	3856
  5195   000000                     _TXB0CON	set	3872
  5196   000000                     _RXM0EIDL	set	3835
  5197   000000                     _RXM0EIDH	set	3834
  5198   000000                     _RXM0SIDL	set	3833
  5199   000000                     _RXB1CON	set	3888
  5200   000000                     _MSEL0	set	3705
  5201   000000                     _B1CON	set	3728
  5202   000000                     _B2CON	set	3744
  5203   000000                     _B3CON	set	3760
  5204   000000                     _B4CON	set	3776
  5205   000000                     _B5CON	set	3792
  5206   000000                     _TXB0SIDL	set	3874
  5207   000000                     _TXB0SIDH	set	3873
  5208   000000                     _TXB0DLC	set	3877
  5209   000000                     _TXB0D7	set	3885
  5210   000000                     _TXB0D6	set	3884
  5211   000000                     _TXB0D5	set	3883
  5212   000000                     _TXB0D4	set	3882
  5213   000000                     _TXB0D3	set	3881
  5214   000000                     _TXB0D2	set	3880
  5215   000000                     _TXB0D1	set	3879
  5216   000000                     _TXB0D0	set	3878
  5217   000000                     _TXB1SIDL	set	3858
  5218   000000                     _TXB1SIDH	set	3857
  5219   000000                     _TXB1DLC	set	3861
  5220   000000                     _TXB2SIDL	set	3842
  5221   000000                     _TXB2SIDH	set	3841
  5222   000000                     _TXB2DLC	set	3845
  5223                           
  5224                           ; #config settings
  5225                           
  5226                           	psect	cinit
  5227   00AC28                     __pcinit:
  5228                           	callstack 0
  5229   00AC28                     start_initialization:
  5230                           	callstack 0
  5231   00AC28                     __initialization:
  5232                           	callstack 0
  5233                           
  5234                           ; Clear objects allocated to BIGRAM (928 bytes)
  5235   00AC28  EE05  F048         	lfsr	0,__pbssBIGRAM
  5236   00AC2C  EE13 F0A0          	lfsr	1,928
  5237   00AC30                     clear_0:
  5238   00AC30  6AEE               	clrf	postinc0,c
  5239   00AC32  50E5               	movf	postdec1,w,c
  5240   00AC34  50E1               	movf	fsr1l,w,c
  5241   00AC36  E1FC               	bnz	clear_0
  5242   00AC38  50E2               	movf	fsr1h,w,c
  5243   00AC3A  E1FA               	bnz	clear_0
  5244                           
  5245                           ; Clear objects allocated to BANK5 (72 bytes)
  5246   00AC3C  EE05  F000         	lfsr	0,__pbssBANK5
  5247   00AC40  0E48               	movlw	72
  5248   00AC42                     clear_1:
  5249   00AC42  6AEE               	clrf	postinc0,c
  5250   00AC44  06E8               	decf	wreg,f,c
  5251   00AC46  E1FD               	bnz	clear_1
  5252                           
  5253                           ; Clear objects allocated to BANK4 (192 bytes)
  5254   00AC48  EE04  F000         	lfsr	0,__pbssBANK4
  5255   00AC4C  0EC0               	movlw	192
  5256   00AC4E                     clear_2:
  5257   00AC4E  6AEE               	clrf	postinc0,c
  5258   00AC50  06E8               	decf	wreg,f,c
  5259   00AC52  E1FD               	bnz	clear_2
  5260                           
  5261                           ; Clear objects allocated to BANK3 (200 bytes)
  5262   00AC54  EE03  F000         	lfsr	0,__pbssBANK3
  5263   00AC58  0EC8               	movlw	200
  5264   00AC5A                     clear_3:
  5265   00AC5A  6AEE               	clrf	postinc0,c
  5266   00AC5C  06E8               	decf	wreg,f,c
  5267   00AC5E  E1FD               	bnz	clear_3
  5268                           
  5269                           ; Clear objects allocated to BANK2 (204 bytes)
  5270   00AC60  EE02  F000         	lfsr	0,__pbssBANK2
  5271   00AC64  0ECC               	movlw	204
  5272   00AC66                     clear_4:
  5273   00AC66  6AEE               	clrf	postinc0,c
  5274   00AC68  06E8               	decf	wreg,f,c
  5275   00AC6A  E1FD               	bnz	clear_4
  5276                           
  5277                           ; Clear objects allocated to BANK1 (186 bytes)
  5278   00AC6C  EE01  F000         	lfsr	0,__pbssBANK1
  5279   00AC70  0EBA               	movlw	186
  5280   00AC72                     clear_5:
  5281   00AC72  6AEE               	clrf	postinc0,c
  5282   00AC74  06E8               	decf	wreg,f,c
  5283   00AC76  E1FD               	bnz	clear_5
  5284                           
  5285                           ; Clear objects allocated to BANK0 (40 bytes)
  5286   00AC78  EE00  F0A9         	lfsr	0,__pbssBANK0
  5287   00AC7C  0E28               	movlw	40
  5288   00AC7E                     clear_6:
  5289   00AC7E  6AEE               	clrf	postinc0,c
  5290   00AC80  06E8               	decf	wreg,f,c
  5291   00AC82  E1FD               	bnz	clear_6
  5292                           
  5293                           ; Clear objects allocated to COMRAM (41 bytes)
  5294   00AC84  EE00  F02B         	lfsr	0,__pbssCOMRAM
  5295   00AC88  0E29               	movlw	41
  5296   00AC8A                     clear_7:
  5297   00AC8A  6AEE               	clrf	postinc0,c
  5298   00AC8C  06E8               	decf	wreg,f,c
  5299   00AC8E  E1FD               	bnz	clear_7
  5300   00AC90                     end_of_initialization:
  5301                           	callstack 0
  5302   00AC90                     __end_of__initialization:
  5303                           	callstack 0
  5304   00AC90  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5305   00AC92  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5306   00AC94  0100               	movlb	0
  5307   00AC96  EFD2  F05C         	goto	_main	;jump to C main() function
  5308                           
  5309                           	psect	bssCOMRAM
  5310   00002B                     __pbssCOMRAM:
  5311                           	callstack 0
  5312   00002B                     _enumerationStartTime:
  5313                           	callstack 0
  5314   00002B                     	ds	4
  5315   00002F                     _canTransmitTimeout:
  5316                           	callstack 0
  5317   00002F                     	ds	4
  5318   000033                     _pbTimer:
  5319                           	callstack 0
  5320   000033                     	ds	4
  5321   000037                     _startWait:
  5322                           	callstack 0
  5323   000037                     	ds	4
  5324   00003B                     _startTime:
  5325                           	callstack 0
  5326   00003B                     	ds	4
  5327   00003F                     _timedResponseCallback:
  5328                           	callstack 0
  5329   00003F                     	ds	2
  5330   000041                     _EnumerationState:
  5331                           	callstack 0
  5332   000041                     	ds	1
  5333   000042                     _eeBootFlag:
  5334                           	callstack 0
  5335   000042                     	ds	1
  5336   000043                     _timedResponseStep:
  5337                           	callstack 0
  5338   000043                     	ds	1
  5339   000044                     _timedResponseAllServicesFlag:
  5340                           	callstack 0
  5341   000044                     	ds	1
  5342   000045                     _heartbeatSequence:
  5343                           	callstack 0
  5344   000045                     	ds	1
  5345   000046                     _last_mode_flags:
  5346                           	callstack 0
  5347   000046                     	ds	1
  5348   000047                     _last_mode_state:
  5349                           	callstack 0
  5350   000047                     	ds	1
  5351   000048                     _bootloaderVersion:
  5352                           	callstack 0
  5353   000048                     	ds	1
  5354   000049                     _expedited:
  5355                           	callstack 0
  5356   000049                     	ds	1
  5357   00004A                     _txQueue:
  5358                           	callstack 0
  5359   00004A                     	ds	5
  5360   00004F                     _rxQueue:
  5361                           	callstack 0
  5362   00004F                     	ds	5
  5363                           
  5364                           	psect	bssBANK0
  5365   0000A9                     __pbssBANK0:
  5366                           	callstack 0
  5367   0000A9                     _currentPos:
  5368                           	callstack 0
  5369   0000A9                     	ds	16
  5370   0000B9                     _flashCounter:
  5371                           	callstack 0
  5372   0000B9                     	ds	2
  5373   0000BB                     _ledState:
  5374                           	callstack 0
  5375   0000BB                     	ds	2
  5376   0000BD                     _nn:
  5377                           	callstack 0
  5378   0000BD                     	ds	2
  5379   0000BF                     _enumerationState:
  5380                           	callstack 0
  5381   0000BF                     	ds	1
  5382   0000C0                     _canTransmitFailed:
  5383                           	callstack 0
  5384   0000C0                     	ds	1
  5385   0000C1                     _canId:
  5386                           	callstack 0
  5387   0000C1                     	ds	1
  5388   0000C2                     _flashFlags:
  5389                           	callstack 0
  5390   0000C2                     	ds	1
  5391   0000C3                     _timedResponseType:
  5392                           	callstack 0
  5393   0000C3                     	ds	1
  5394   0000C4                     _timedResponseServiceIndex:
  5395                           	callstack 0
  5396   0000C4                     	ds	1
  5397   0000C5                     _mode_state:
  5398                           	callstack 0
  5399   0000C5                     	ds	1
  5400   0000C6                     _timerExtension2:
  5401                           	callstack 0
  5402   0000C6                     	ds	1
  5403   0000C7                     _timerExtension1:
  5404                           	callstack 0
  5405   0000C7                     	ds	1
  5406   0000C8                     _bootloaderType:
  5407                           	callstack 0
  5408   0000C8                     	ds	1
  5409   0000C9                     _servoInBlock:
  5410                           	callstack 0
  5411   0000C9                     	ds	1
  5412   0000CA                     _expeditedWriteIndex:
  5413                           	callstack 0
  5414   0000CA                     	ds	1
  5415   0000CB                     _expeditedReadIndex:
  5416                           	callstack 0
  5417   0000CB                     	ds	1
  5418   0000CC                     _normalWriteIndex:
  5419                           	callstack 0
  5420   0000CC                     	ds	1
  5421   0000CD                     _normalReadIndex:
  5422                           	callstack 0
  5423   0000CD                     	ds	1
  5424   0000CE                     _io@inputs$F849:
  5425                           	callstack 0
  5426   0000CE                     	ds	1
  5427   0000CF                     _io:
  5428                           	callstack 0
  5429   0000CF                     	ds	1
  5430   0000D0                     _started:
  5431                           	callstack 0
  5432   0000D0                     	ds	1
  5433                           
  5434                           	psect	bssBANK1
  5435   000100                     __pbssBANK1:
  5436                           	callstack 0
  5437   000100                     _stepsPerPollSpeed:
  5438                           	callstack 0
  5439   000100                     	ds	16
  5440   000110                     _servoState:
  5441                           	callstack 0
  5442   000110                     	ds	16
  5443   000120                     _targetPos:
  5444                           	callstack 0
  5445   000120                     	ds	16
  5446   000130                     _flashDelays:
  5447                           	callstack 0
  5448   000130                     	ds	16
  5449   000140                     _flashFlushTime:
  5450                           	callstack 0
  5451   000140                     	ds	4
  5452   000144                     _timedResponseTime:
  5453                           	callstack 0
  5454   000144                     	ds	4
  5455   000148                     _ledTimer:
  5456                           	callstack 0
  5457   000148                     	ds	4
  5458   00014C                     _uptimeTimer:
  5459                           	callstack 0
  5460   00014C                     	ds	4
  5461   000150                     _heartbeatTimer:
  5462                           	callstack 0
  5463   000150                     	ds	4
  5464   000154                     _lastActionPollTime:
  5465                           	callstack 0
  5466   000154                     	ds	4
  5467   000158                     _lastInputScanTime:
  5468                           	callstack 0
  5469   000158                     	ds	4
  5470   00015C                     _lastServoStartTime:
  5471                           	callstack 0
  5472   00015C                     	ds	4
  5473   000160                     _previousNN:
  5474                           	callstack 0
  5475   000160                     	ds	2
  5476   000162                     _transport:
  5477                           	callstack 0
  5478   000162                     	ds	2
  5479   000164                     _timedResponseDelay:
  5480                           	callstack 0
  5481   000164                     	ds	1
  5482   000165                     _setupModePreviousMode:
  5483                           	callstack 0
  5484   000165                     	ds	1
  5485   000166                     _mode_flags:
  5486                           	callstack 0
  5487   000166                     	ds	1
  5488   000167                     _canDiagnostics:
  5489                           	callstack 0
  5490   000167                     	ds	38
  5491   00018D                     _mnsDiagnostics:
  5492                           	callstack 0
  5493   00018D                     	ds	14
  5494   00019B                     _tmpMessage:
  5495                           	callstack 0
  5496   00019B                     	ds	9
  5497   0001A4                     _nvDiagnostics:
  5498                           	callstack 0
  5499   0001A4                     	ds	6
  5500   0001AA                     _producerDiagnostics:
  5501                           	callstack 0
  5502   0001AA                     	ds	4
  5503   0001AE                     _teachDiagnostics:
  5504                           	callstack 0
  5505   0001AE                     	ds	4
  5506   0001B2                     _ackDiagnostics:
  5507                           	callstack 0
  5508   0001B2                     	ds	4
  5509   0001B6                     _consumer2QDiagnostics:
  5510                           	callstack 0
  5511   0001B6                     	ds	4
  5512                           
  5513                           	psect	bssBANK2
  5514   000200                     __pbssBANK2:
  5515                           	callstack 0
  5516   000200                     _speed:
  5517                           	callstack 0
  5518   000200                     	ds	32
  5519   000220                     _evs:
  5520                           	callstack 0
  5521   000220                     	ds	20
  5522   000234                     _enumerationResults:
  5523                           	callstack 0
  5524   000234                     	ds	16
  5525   000244                     _bounceState:
  5526                           	callstack 0
  5527   000244                     	ds	16
  5528   000254                     _loopCount:
  5529                           	callstack 0
  5530   000254                     	ds	16
  5531   000264                     _pollCount:
  5532                           	callstack 0
  5533   000264                     	ds	16
  5534   000274                     _pollsPerStepSpeed:
  5535                           	callstack 0
  5536   000274                     	ds	16
  5537   000284                     _delayCount:
  5538                           	callstack 0
  5539   000284                     	ds	16
  5540   000294                     _inputState:
  5541                           	callstack 0
  5542   000294                     	ds	16
  5543   0002A4                     _pulseDelays:
  5544                           	callstack 0
  5545   0002A4                     	ds	16
  5546   0002B4                     _outputState:
  5547                           	callstack 0
  5548   0002B4                     	ds	16
  5549   0002C4                     _expeditedQueueBuf:
  5550                           	callstack 0
  5551   0002C4                     	ds	8
  5552                           
  5553                           	psect	bssBANK3
  5554   000300                     __pbssBANK3:
  5555                           	callstack 0
  5556   000300                     _happening2Event:
  5557                           	callstack 0
  5558   000300                     	ds	72
  5559   000348                     _flashBuffer:
  5560                           	callstack 0
  5561   000348                     	ds	64
  5562   000388                     _ticksWhenStopped:
  5563                           	callstack 0
  5564   000388                     	ds	64
  5565                           
  5566                           	psect	bssBANK4
  5567   000400                     __pbssBANK4:
  5568                           	callstack 0
  5569   000400                     _nvCache:
  5570                           	callstack 0
  5571   000400                     	ds	128
  5572   000480                     _normalQueueBuf:
  5573                           	callstack 0
  5574   000480                     	ds	64
  5575                           
  5576                           	psect	bssBANK5
  5577   000500                     __pbssBANK5:
  5578                           	callstack 0
  5579   000500                     _txBuffers:
  5580                           	callstack 0
  5581   000500                     	ds	72
  5582                           
  5583                           	psect	bssBIGRAM
  5584   000548                     __pbssBIGRAM:
  5585                           	callstack 0
  5586   000548                     _eventChains:
  5587                           	callstack 0
  5588   000548                     	ds	640
  5589   0007C8                     _rxBuffers:
  5590                           	callstack 0
  5591   0007C8                     	ds	288
  5592                           
  5593                           	psect	cstackBANK2
  5594   0002CC                     __pcstackBANK2:
  5595                           	callstack 0
  5596   0002CC                     ??_mnsProcessMessage:
  5597   0002CC                     ??_teachProcessMessage:
  5598   0002CC                     ??_producerProcessMessage:
  5599   0002CC                     consumer2QProcessMessage@end:
  5600                           	callstack 0
  5601   0002CC                     ackEventProcessMessage@eventEN:
  5602                           	callstack 0
  5603                           
  5604                           ; 2 bytes @ 0x0
  5605   0002CC                     	ds	1
  5606   0002CD                     consumer2QProcessMessage@change:
  5607                           	callstack 0
  5608                           
  5609                           ; 1 bytes @ 0x1
  5610   0002CD                     	ds	1
  5611   0002CE                     consumer2QProcessMessage@opc:
  5612                           	callstack 0
  5613   0002CE                     ackEventProcessMessage@eventIndex:
  5614                           	callstack 0
  5615                           
  5616                           ; 1 bytes @ 0x2
  5617   0002CE                     	ds	1
  5618   0002CF                     consumer2QProcessMessage@enn:
  5619                           	callstack 0
  5620   0002CF                     ackEventProcessMessage@eventNN:
  5621                           	callstack 0
  5622                           
  5623                           ; 2 bytes @ 0x3
  5624   0002CF                     	ds	2
  5625   0002D1                     consumer2QProcessMessage@tableIndex:
  5626                           	callstack 0
  5627                           
  5628                           ; 1 bytes @ 0x5
  5629   0002D1                     	ds	1
  5630   0002D2                     consumer2QProcessMessage@nextAction:
  5631                           	callstack 0
  5632                           
  5633                           ; 1 bytes @ 0x6
  5634   0002D2                     	ds	1
  5635   0002D3                     consumer2QProcessMessage@firstAction:
  5636                           	callstack 0
  5637                           
  5638                           ; 1 bytes @ 0x7
  5639   0002D3                     	ds	1
  5640   0002D4                     consumer2QProcessMessage@nextSimultaneous:
  5641                           	callstack 0
  5642                           
  5643                           ; 1 bytes @ 0x8
  5644   0002D4                     	ds	1
  5645   0002D5                     consumer2QProcessMessage@io:
  5646                           	callstack 0
  5647                           
  5648                           ; 1 bytes @ 0x9
  5649   0002D5                     	ds	1
  5650   0002D6                     consumer2QProcessMessage@masked_action:
  5651                           	callstack 0
  5652                           
  5653                           ; 1 bytes @ 0xA
  5654   0002D6                     	ds	1
  5655   0002D7                     consumer2QProcessMessage@ca:
  5656                           	callstack 0
  5657                           
  5658                           ; 1 bytes @ 0xB
  5659   0002D7                     	ds	1
  5660   0002D8                     consumer2QProcessMessage@e:
  5661                           	callstack 0
  5662                           
  5663                           ; 1 bytes @ 0xC
  5664   0002D8                     	ds	1
  5665   0002D9                     consumer2QProcessMessage@action:
  5666                           	callstack 0
  5667                           
  5668                           ; 1 bytes @ 0xD
  5669   0002D9                     	ds	17
  5670   0002EA                     ??_poll:
  5671                           
  5672                           ; 1 bytes @ 0x1E
  5673   0002EA                     	ds	4
  5674   0002EE                     poll@handled:
  5675                           	callstack 0
  5676                           
  5677                           ; 1 bytes @ 0x22
  5678   0002EE                     	ds	1
  5679   0002EF                     poll@i:
  5680                           	callstack 0
  5681                           
  5682                           ; 1 bytes @ 0x23
  5683   0002EF                     	ds	1
  5684   0002F0                     poll@m:
  5685                           	callstack 0
  5686                           
  5687                           ; 9 bytes @ 0x24
  5688   0002F0                     	ds	9
  5689                           
  5690                           	psect	cstackBANK1
  5691   0001BA                     __pcstackBANK1:
  5692                           	callstack 0
  5693   0001BA                     ??_writeNVM:
  5694   0001BA                     ??_rebuildHashtable:
  5695   0001BA                     APP_GetEventState@flags:
  5696                           	callstack 0
  5697   0001BA                     bounceDown@reversed:
  5698                           	callstack 0
  5699   0001BA                     sendMessage@len:
  5700                           	callstack 0
  5701   0001BA                     findEvent@nodeNumber:
  5702                           	callstack 0
  5703                           
  5704                           ; 2 bytes @ 0x0
  5705   0001BA                     	ds	1
  5706   0001BB                     APP_GetEventState@disable_off:
  5707                           	callstack 0
  5708   0001BB                     sendMessage@data1:
  5709                           	callstack 0
  5710   0001BB                     bounceDown@tmp:
  5711                           	callstack 0
  5712                           
  5713                           ; 2 bytes @ 0x1
  5714   0001BB                     	ds	1
  5715   0001BC                     ??_configIO:
  5716   0001BC                     ??_nvFactoryReset:
  5717   0001BC                     APP_GetEventState@h:
  5718                           	callstack 0
  5719   0001BC                     saveNV@value:
  5720                           	callstack 0
  5721   0001BC                     sendMessage@data2:
  5722                           	callstack 0
  5723   0001BC                     setNewCanId@newCanId:
  5724                           	callstack 0
  5725   0001BC                     findEvent@eventNumber:
  5726                           	callstack 0
  5727                           
  5728                           ; 2 bytes @ 0x2
  5729   0001BC                     	ds	1
  5730   0001BD                     ??_saveNV:
  5731   0001BD                     ??_processEnumeration:
  5732   0001BD                     APP_GetEventState@happeningIndex:
  5733                           	callstack 0
  5734   0001BD                     bounceDown@io:
  5735                           	callstack 0
  5736   0001BD                     sendMessage@data3:
  5737                           	callstack 0
  5738   0001BD                     rebuildHashtable@ev:
  5739                           	callstack 0
  5740                           
  5741                           ; 2 bytes @ 0x3
  5742   0001BD                     	ds	1
  5743   0001BE                     ??_findEvent:
  5744   0001BE                     nvFactoryReset@i:
  5745                           	callstack 0
  5746   0001BE                     sendMessage@data4:
  5747                           	callstack 0
  5748   0001BE                     _configIO$8086:
  5749                           	callstack 0
  5750                           
  5751                           ; 1 bytes @ 0x4
  5752   0001BE                     	ds	1
  5753   0001BF                     saveNV@index:
  5754                           	callstack 0
  5755   0001BF                     sendMessage@data5:
  5756                           	callstack 0
  5757   0001BF                     rebuildHashtable@hash:
  5758                           	callstack 0
  5759   0001BF                     _configIO$746:
  5760                           	callstack 0
  5761                           
  5762                           ; 2 bytes @ 0x5
  5763   0001BF                     	ds	1
  5764   0001C0                     defaultNVs@type:
  5765                           	callstack 0
  5766   0001C0                     sendMessage@data6:
  5767                           	callstack 0
  5768   0001C0                     rebuildHashtable@happening:
  5769                           	callstack 0
  5770   0001C0                     findEvent@nn:
  5771                           	callstack 0
  5772                           
  5773                           ; 2 bytes @ 0x6
  5774   0001C0                     	ds	1
  5775   0001C1                     ??_defaultNVs:
  5776   0001C1                     configIO@action:
  5777                           	callstack 0
  5778   0001C1                     sendMessage@data7:
  5779                           	callstack 0
  5780   0001C1                     processEnumeration@enumResult:
  5781                           	callstack 0
  5782   0001C1                     rebuildHashtable@chainIdx:
  5783                           	callstack 0
  5784                           
  5785                           ; 1 bytes @ 0x7
  5786   0001C1                     	ds	1
  5787   0001C2                     configIO@type:
  5788                           	callstack 0
  5789   0001C2                     sendMessage3@opc:
  5790                           	callstack 0
  5791   0001C2                     sendMessage4@data1:
  5792                           	callstack 0
  5793   0001C2                     sendMessage5@data1:
  5794                           	callstack 0
  5795   0001C2                     sendMessage6@data1:
  5796                           	callstack 0
  5797   0001C2                     sendMessage7@data1:
  5798                           	callstack 0
  5799   0001C2                     processEnumeration@newCanId:
  5800                           	callstack 0
  5801   0001C2                     rebuildHashtable@tableIndex:
  5802                           	callstack 0
  5803   0001C2                     findEvent@en:
  5804                           	callstack 0
  5805                           
  5806                           ; 2 bytes @ 0x8
  5807   0001C2                     	ds	1
  5808   0001C3                     ??_clearAllEvents:
  5809   0001C3                     ??_doNnevn:
  5810   0001C3                     ??_removeTableEntry:
  5811   0001C3                     configIO@i:
  5812                           	callstack 0
  5813   0001C3                     defaultNVs@io:
  5814                           	callstack 0
  5815   0001C3                     sendMessage4@data2:
  5816                           	callstack 0
  5817   0001C3                     sendMessage5@data2:
  5818                           	callstack 0
  5819   0001C3                     sendMessage6@data2:
  5820                           	callstack 0
  5821   0001C3                     sendMessage7@data2:
  5822                           	callstack 0
  5823   0001C3                     processEnumeration@i:
  5824                           	callstack 0
  5825   0001C3                     teachPowerUp@i:
  5826                           	callstack 0
  5827   0001C3                     doRqevn@count:
  5828                           	callstack 0
  5829                           
  5830                           ; 1 bytes @ 0x9
  5831   0001C3                     	ds	1
  5832   0001C4                     ??_powerUp:
  5833   0001C4                     defaultNVs@i:
  5834                           	callstack 0
  5835   0001C4                     sendMessage4@data3:
  5836                           	callstack 0
  5837   0001C4                     sendMessage5@data3:
  5838                           	callstack 0
  5839   0001C4                     sendMessage6@data3:
  5840                           	callstack 0
  5841   0001C4                     sendMessage7@data3:
  5842                           	callstack 0
  5843   0001C4                     doRqevn@i:
  5844                           	callstack 0
  5845   0001C4                     findEvent@hash:
  5846                           	callstack 0
  5847   0001C4                     canReceiveMessage@m:
  5848                           	callstack 0
  5849                           
  5850                           ; 2 bytes @ 0xA
  5851   0001C4                     	ds	1
  5852   0001C5                     sendMessage4@data4:
  5853                           	callstack 0
  5854   0001C5                     sendMessage5@data4:
  5855                           	callstack 0
  5856   0001C5                     sendMessage6@data4:
  5857                           	callstack 0
  5858   0001C5                     sendMessage7@data4:
  5859                           	callstack 0
  5860   0001C5                     findEvent@chainIdx:
  5861                           	callstack 0
  5862                           
  5863                           ; 1 bytes @ 0xB
  5864   0001C5                     	ds	1
  5865   0001C6                     sendMessage5@data5:
  5866                           	callstack 0
  5867   0001C6                     sendMessage6@data5:
  5868                           	callstack 0
  5869   0001C6                     sendMessage7@data5:
  5870                           	callstack 0
  5871   0001C6                     findEvent@tableIndex:
  5872                           	callstack 0
  5873   0001C6                     sendProducedEvent@opc:
  5874                           	callstack 0
  5875                           
  5876                           ; 1 bytes @ 0xC
  5877   0001C6                     	ds	1
  5878   0001C7                     ??_mnsPoll:
  5879   0001C7                     sendMessage6@data6:
  5880                           	callstack 0
  5881   0001C7                     sendMessage7@data6:
  5882                           	callstack 0
  5883   0001C7                     canReceiveMessage@messageAvailable:
  5884                           	callstack 0
  5885   0001C7                     clearAllEvents@tableIndex:
  5886                           	callstack 0
  5887   0001C7                     doNnevn@f:
  5888                           	callstack 0
  5889   0001C7                     doNenrd@index:
  5890                           	callstack 0
  5891   0001C7                     doReval@evNum:
  5892                           	callstack 0
  5893   0001C7                     removeTableEntry@f:
  5894                           	callstack 0
  5895   0001C7                     checkLen@m:
  5896                           	callstack 0
  5897   0001C7                     sendProducedEvent@producedEventEN:
  5898                           	callstack 0
  5899                           
  5900                           ; 2 bytes @ 0xD
  5901   0001C7                     	ds	1
  5902   0001C8                     ??_doReval:
  5903   0001C8                     powerUp@i:
  5904                           	callstack 0
  5905   0001C8                     sendMessage7@data7:
  5906                           	callstack 0
  5907   0001C8                     doNnevn@count:
  5908                           	callstack 0
  5909   0001C8                     removeTableEntry@tableIndex:
  5910                           	callstack 0
  5911   0001C8                     canReceiveMessage@mp:
  5912                           	callstack 0
  5913   0001C8                     doNenrd@nodeNumber:
  5914                           	callstack 0
  5915   0001C8                     doReqev@nodeNumber:
  5916                           	callstack 0
  5917                           
  5918                           ; 2 bytes @ 0xE
  5919   0001C8                     	ds	1
  5920   0001C9                     checkLen@needed:
  5921                           	callstack 0
  5922   0001C9                     doNnevn@i:
  5923                           	callstack 0
  5924   0001C9                     doReval@evIndex:
  5925                           	callstack 0
  5926   0001C9                     checkRemoveTableEntry@tableIndex:
  5927                           	callstack 0
  5928   0001C9                     removeEvent@nodeNumber:
  5929                           	callstack 0
  5930   0001C9                     sendProducedEvent@producedEventNN:
  5931                           	callstack 0
  5932                           
  5933                           ; 2 bytes @ 0xF
  5934   0001C9                     	ds	1
  5935   0001CA                     checkLen@service:
  5936                           	callstack 0
  5937   0001CA                     canReceiveMessage@no:
  5938                           	callstack 0
  5939   0001CA                     doReval@enNum:
  5940                           	callstack 0
  5941   0001CA                     checkRemoveTableEntry@e:
  5942                           	callstack 0
  5943   0001CA                     doNenrd@eventNumber:
  5944                           	callstack 0
  5945   0001CA                     doReqev@eventNumber:
  5946                           	callstack 0
  5947                           
  5948                           ; 2 bytes @ 0x10
  5949   0001CA                     	ds	1
  5950   0001CB                     writeEv@evNum:
  5951                           	callstack 0
  5952   0001CB                     sendProducedEvent@happening:
  5953                           	callstack 0
  5954   0001CB                     ackEventCheckLen@m:
  5955                           	callstack 0
  5956   0001CB                     canReceiveMessage@p:
  5957                           	callstack 0
  5958   0001CB                     teachCheckLen@m:
  5959                           	callstack 0
  5960   0001CB                     doReval@evVal:
  5961                           	callstack 0
  5962   0001CB                     removeEvent@eventNumber:
  5963                           	callstack 0
  5964                           
  5965                           ; 2 bytes @ 0x11
  5966   0001CB                     	ds	1
  5967   0001CC                     ??_inputScan:
  5968   0001CC                     ??_pollServos:
  5969   0001CC                     sendInvertedProducedEvent@state:
  5970                           	callstack 0
  5971   0001CC                     doNenrd@tableIndex:
  5972                           	callstack 0
  5973   0001CC                     doReqev@evNum:
  5974                           	callstack 0
  5975   0001CC                     writeEv@evVal:
  5976                           	callstack 0
  5977                           
  5978                           ; 1 bytes @ 0x12
  5979   0001CC                     	ds	1
  5980   0001CD                     ??_writeEv:
  5981   0001CD                     processOutputs@io:
  5982                           	callstack 0
  5983   0001CD                     sendInvertedProducedEvent@invert:
  5984                           	callstack 0
  5985   0001CD                     ackEventCheckLen@needed:
  5986                           	callstack 0
  5987   0001CD                     teachCheckLen@needed:
  5988                           	callstack 0
  5989   0001CD                     doReval@tableIndex:
  5990                           	callstack 0
  5991   0001CD                     removeEvent@tableIndex:
  5992                           	callstack 0
  5993   0001CD                     doReqev@evVal:
  5994                           	callstack 0
  5995                           
  5996                           ; 2 bytes @ 0x13
  5997   0001CD                     	ds	1
  5998   0001CE                     inputScan@change:
  5999                           	callstack 0
  6000   0001CE                     sendInvertedProducedEvent@can_send_on:
  6001                           	callstack 0
  6002   0001CE                     teachCheckLen@learn:
  6003                           	callstack 0
  6004   0001CE                     doEvuln@nodeNumber:
  6005                           	callstack 0
  6006                           
  6007                           ; 2 bytes @ 0x14
  6008   0001CE                     	ds	1
  6009   0001CF                     inputScan@input:
  6010                           	callstack 0
  6011   0001CF                     sendInvertedProducedEvent@can_send_off:
  6012                           	callstack 0
  6013   0001CF                     doReqev@tableIndex:
  6014                           	callstack 0
  6015                           
  6016                           ; 1 bytes @ 0x15
  6017   0001CF                     	ds	1
  6018   0001D0                     sendInvertedProducedEvent@happening:
  6019                           	callstack 0
  6020   0001D0                     doEvuln@eventNumber:
  6021                           	callstack 0
  6022                           
  6023                           ; 2 bytes @ 0x16
  6024   0001D0                     	ds	1
  6025   0001D1                     writeEv@startIndex:
  6026                           	callstack 0
  6027   0001D1                     _sendInvertedProducedEvent$1404:
  6028                           	callstack 0
  6029                           
  6030                           ; 2 bytes @ 0x17
  6031   0001D1                     	ds	1
  6032   0001D2                     doEvuln@result:
  6033                           	callstack 0
  6034   0001D2                     writeEv@nextF:
  6035                           	callstack 0
  6036                           
  6037                           ; 1 bytes @ 0x18
  6038   0001D2                     	ds	1
  6039   0001D3                     sendInvertedProducedEvent@state_to_send:
  6040                           	callstack 0
  6041   0001D3                     writeEv@e:
  6042                           	callstack 0
  6043                           
  6044                           ; 1 bytes @ 0x19
  6045   0001D3                     	ds	1
  6046   0001D4                     startDigitalOutput@state:
  6047                           	callstack 0
  6048   0001D4                     pollServos@target:
  6049                           	callstack 0
  6050   0001D4                     mnsTRallDiagnosticsCallback@serviceIndex:
  6051                           	callstack 0
  6052   0001D4                     reqevCallback@serviceIndex:
  6053                           	callstack 0
  6054   0001D4                     writeEv@f:
  6055                           	callstack 0
  6056                           
  6057                           ; 1 bytes @ 0x1A
  6058   0001D4                     	ds	1
  6059   0001D5                     ??_startDigitalOutput:
  6060   0001D5                     sodTRCallback@step:
  6061                           	callstack 0
  6062   0001D5                     pollServos@beforeMidway:
  6063                           	callstack 0
  6064   0001D5                     mnsTRserviceDiscoveryCallback@step:
  6065                           	callstack 0
  6066   0001D5                     mnsTRallDiagnosticsCallback@step:
  6067                           	callstack 0
  6068   0001D5                     mnsTRrqnpnCallback@step:
  6069                           	callstack 0
  6070   0001D5                     nvTRnvrdCallback@step:
  6071                           	callstack 0
  6072   0001D5                     nerdCallback@step:
  6073                           	callstack 0
  6074   0001D5                     reqevCallback@step:
  6075                           	callstack 0
  6076   0001D5                     writeEv@tableIndex:
  6077                           	callstack 0
  6078                           
  6079                           ; 1 bytes @ 0x1B
  6080   0001D5                     	ds	1
  6081   0001D6                     ??_mnsTRallDiagnosticsCallback:
  6082   0001D6                     ??_mnsTRserviceDiscoveryCallback:
  6083   0001D6                     ??_reqevCallback:
  6084   0001D6                     sodTRCallback@disable_SOD_response:
  6085                           	callstack 0
  6086   0001D6                     pollServos@midway:
  6087                           	callstack 0
  6088   0001D6                     writeEv@nextIdx:
  6089                           	callstack 0
  6090   0001D6                     nvTRnvrdCallback@valueOrError:
  6091                           	callstack 0
  6092   0001D6                     nerdCallback@nodeNumber:
  6093                           	callstack 0
  6094                           
  6095                           ; 2 bytes @ 0x1C
  6096   0001D6                     	ds	1
  6097   0001D7                     deleteActionRange@number:
  6098                           	callstack 0
  6099   0001D7                     sodTRCallback@send_on_ok:
  6100                           	callstack 0
  6101   0001D7                     pollServos@io:
  6102                           	callstack 0
  6103   0001D7                     deleteHappeningRange@number:
  6104                           	callstack 0
  6105   0001D7                     _startDigitalOutput$808:
  6106                           	callstack 0
  6107   0001D7                     addEvent@nodeNumber:
  6108                           	callstack 0
  6109                           
  6110                           ; 2 bytes @ 0x1D
  6111   0001D7                     	ds	1
  6112   0001D8                     ??_deleteHappeningRange:
  6113   0001D8                     ??_deleteActionRange:
  6114   0001D8                     sodTRCallback@send_off_ok:
  6115                           	callstack 0
  6116   0001D8                     startServos@type:
  6117                           	callstack 0
  6118   0001D8                     nerdCallback@eventNumber:
  6119                           	callstack 0
  6120                           
  6121                           ; 2 bytes @ 0x1E
  6122   0001D8                     	ds	1
  6123   0001D9                     startDigitalOutput@pinState:
  6124                           	callstack 0
  6125   0001D9                     _sodTRCallback$1424:
  6126                           	callstack 0
  6127   0001D9                     addEvent@eventNumber:
  6128                           	callstack 0
  6129                           
  6130                           ; 2 bytes @ 0x1F
  6131   0001D9                     	ds	1
  6132   0001DA                     startDigitalOutput@actionState:
  6133                           	callstack 0
  6134   0001DA                     _sodTRCallback$1425:
  6135                           	callstack 0
  6136   0001DA                     mnsTRallDiagnosticsCallback@d:
  6137                           	callstack 0
  6138                           
  6139                           ; 2 bytes @ 0x20
  6140   0001DA                     	ds	1
  6141   0001DB                     startDigitalOutput@io:
  6142                           	callstack 0
  6143   0001DB                     sodTRCallback@happeningIndex:
  6144                           	callstack 0
  6145   0001DB                     reqevCallback@nEv:
  6146                           	callstack 0
  6147   0001DB                     addEvent@evNum:
  6148                           	callstack 0
  6149                           
  6150                           ; 1 bytes @ 0x21
  6151   0001DB                     	ds	1
  6152   0001DC                     sodTRCallback@disable_off:
  6153                           	callstack 0
  6154   0001DC                     startOutput@act:
  6155                           	callstack 0
  6156   0001DC                     addEvent@evVal:
  6157                           	callstack 0
  6158   0001DC                     reqevCallback@ev:
  6159                           	callstack 0
  6160                           
  6161                           ; 2 bytes @ 0x22
  6162   0001DC                     	ds	1
  6163   0001DD                     deleteActionRange@updated:
  6164                           	callstack 0
  6165   0001DD                     sodTRCallback@value:
  6166                           	callstack 0
  6167   0001DD                     startOutput@type:
  6168                           	callstack 0
  6169   0001DD                     addEvent@forceOwnNN:
  6170                           	callstack 0
  6171   0001DD                     deleteHappeningRange@happening:
  6172                           	callstack 0
  6173                           
  6174                           ; 1 bytes @ 0x23
  6175   0001DD                     	ds	1
  6176   0001DE                     ??_addEvent:
  6177   0001DE                     deleteActionRange@action:
  6178                           	callstack 0
  6179   0001DE                     sodTRCallback@event_inverted:
  6180                           	callstack 0
  6181   0001DE                     startOutput@io:
  6182                           	callstack 0
  6183   0001DE                     deleteHappeningRange@h:
  6184                           	callstack 0
  6185   0001DE                     reqevCallback@nodeNumber:
  6186                           	callstack 0
  6187                           
  6188                           ; 2 bytes @ 0x24
  6189   0001DE                     	ds	1
  6190   0001DF                     deleteActionRange@e:
  6191                           	callstack 0
  6192   0001DF                     processActions@simultaneous:
  6193                           	callstack 0
  6194   0001DF                     sodTRCallback@flags:
  6195                           	callstack 0
  6196   0001DF                     deleteHappeningRange@tableIndex:
  6197                           	callstack 0
  6198                           
  6199                           ; 1 bytes @ 0x25
  6200   0001DF                     	ds	1
  6201   0001E0                     deleteActionRange@tableIndex:
  6202                           	callstack 0
  6203   0001E0                     processActions@peekItem:
  6204                           	callstack 0
  6205   0001E0                     sodTRCallback@io:
  6206                           	callstack 0
  6207   0001E0                     reqevCallback@eventNumber:
  6208                           	callstack 0
  6209                           
  6210                           ; 2 bytes @ 0x26
  6211   0001E0                     	ds	1
  6212   0001E1                     clearEvents@io:
  6213                           	callstack 0
  6214   0001E1                     processActions@nextType:
  6215                           	callstack 0
  6216                           
  6217                           ; 1 bytes @ 0x27
  6218   0001E1                     	ds	1
  6219   0001E2                     processActions@nextIo:
  6220                           	callstack 0
  6221   0001E2                     reqevCallback@tableIndex:
  6222                           	callstack 0
  6223   0001E2                     addEvent@error:
  6224                           	callstack 0
  6225                           
  6226                           ; 1 bytes @ 0x28
  6227   0001E2                     	ds	1
  6228   0001E3                     ??_pollTimedResponse:
  6229   0001E3                     processActions@type:
  6230                           	callstack 0
  6231   0001E3                     addEvent@f:
  6232                           	callstack 0
  6233                           
  6234                           ; 1 bytes @ 0x29
  6235   0001E3                     	ds	1
  6236   0001E4                     processActions@ioAction:
  6237                           	callstack 0
  6238   0001E4                     addEvent@e:
  6239                           	callstack 0
  6240                           
  6241                           ; 1 bytes @ 0x2A
  6242   0001E4                     	ds	1
  6243   0001E5                     processActions@nextAction:
  6244                           	callstack 0
  6245   0001E5                     pollTimedResponse@result:
  6246                           	callstack 0
  6247   0001E5                     addEvent@tableIndex:
  6248                           	callstack 0
  6249                           
  6250                           ; 1 bytes @ 0x2B
  6251   0001E5                     	ds	1
  6252   0001E6                     defaultEvents@type:
  6253                           	callstack 0
  6254   0001E6                     processActions@io:
  6255                           	callstack 0
  6256   0001E6                     APP_addEvent@nodeNumber:
  6257                           	callstack 0
  6258                           
  6259                           ; 2 bytes @ 0x2C
  6260   0001E6                     	ds	1
  6261   0001E7                     processActions@action:
  6262                           	callstack 0
  6263   0001E7                     defaultEvents@en:
  6264                           	callstack 0
  6265                           
  6266                           ; 2 bytes @ 0x2D
  6267   0001E7                     	ds	1
  6268   0001E8                     ??_loop:
  6269   0001E8                     APP_addEvent@eventNumber:
  6270                           	callstack 0
  6271                           
  6272                           ; 2 bytes @ 0x2E
  6273   0001E8                     	ds	1
  6274   0001E9                     defaultEvents@io:
  6275                           	callstack 0
  6276                           
  6277                           ; 1 bytes @ 0x2F
  6278   0001E9                     	ds	1
  6279   0001EA                     setType@type:
  6280                           	callstack 0
  6281   0001EA                     APP_addEvent@evNum:
  6282                           	callstack 0
  6283                           
  6284                           ; 1 bytes @ 0x30
  6285   0001EA                     	ds	1
  6286   0001EB                     setType@index:
  6287                           	callstack 0
  6288   0001EB                     APP_addEvent@evVal:
  6289                           	callstack 0
  6290                           
  6291                           ; 1 bytes @ 0x31
  6292   0001EB                     	ds	1
  6293   0001EC                     setType@io:
  6294                           	callstack 0
  6295   0001EC                     APP_addEvent@forceOwnNN:
  6296                           	callstack 0
  6297                           
  6298                           ; 1 bytes @ 0x32
  6299   0001EC                     	ds	1
  6300   0001ED                     APP_factoryReset@io:
  6301                           	callstack 0
  6302   0001ED                     APP_addEvent@tableIndex:
  6303                           	callstack 0
  6304   0001ED                     APP_nvValueChanged@value:
  6305                           	callstack 0
  6306                           
  6307                           ; 1 bytes @ 0x33
  6308   0001ED                     	ds	1
  6309   0001EE                     ??_factoryReset:
  6310   0001EE                     APP_nvValueChanged@oldValue:
  6311                           	callstack 0
  6312   0001EE                     doEvlrn@nodeNumber:
  6313                           	callstack 0
  6314                           
  6315                           ; 2 bytes @ 0x34
  6316   0001EE                     	ds	1
  6317   0001EF                     ??_APP_nvValueChanged:
  6318                           
  6319                           ; 1 bytes @ 0x35
  6320   0001EF                     	ds	1
  6321   0001F0                     doEvlrn@eventNumber:
  6322                           	callstack 0
  6323                           
  6324                           ; 2 bytes @ 0x36
  6325   0001F0                     	ds	2
  6326   0001F2                     APP_nvValueChanged@index:
  6327                           	callstack 0
  6328   0001F2                     factoryReset@i:
  6329                           	callstack 0
  6330   0001F2                     doEvlrn@evNum:
  6331                           	callstack 0
  6332                           
  6333                           ; 1 bytes @ 0x38
  6334   0001F2                     	ds	1
  6335   0001F3                     APP_nvValueChanged@io:
  6336                           	callstack 0
  6337   0001F3                     checkPowerOnPb@i:
  6338                           	callstack 0
  6339   0001F3                     doEvlrn@evVal:
  6340                           	callstack 0
  6341                           
  6342                           ; 1 bytes @ 0x39
  6343   0001F3                     	ds	1
  6344   0001F4                     setNV@value:
  6345                           	callstack 0
  6346   0001F4                     doEvlrn@error:
  6347                           	callstack 0
  6348                           
  6349                           ; 1 bytes @ 0x3A
  6350   0001F4                     	ds	1
  6351   0001F5                     ??_setNV:
  6352                           
  6353                           ; 1 bytes @ 0x3B
  6354   0001F5                     	ds	2
  6355   0001F7                     setNV@oldValue:
  6356                           	callstack 0
  6357                           
  6358                           ; 1 bytes @ 0x3D
  6359   0001F7                     	ds	1
  6360   0001F8                     setNV@index:
  6361                           	callstack 0
  6362                           
  6363                           ; 1 bytes @ 0x3E
  6364   0001F8                     	ds	1
  6365   0001F9                     consumer2QProcessMessage@m:
  6366                           	callstack 0
  6367   0001F9                     bootProcessMessage@m:
  6368                           	callstack 0
  6369   0001F9                     ackEventProcessMessage@m:
  6370                           	callstack 0
  6371   0001F9                     mnsProcessMessage@m:
  6372                           	callstack 0
  6373   0001F9                     nvProcessMessage@m:
  6374                           	callstack 0
  6375   0001F9                     canProcessMessage@m:
  6376                           	callstack 0
  6377   0001F9                     teachProcessMessage@m:
  6378                           	callstack 0
  6379   0001F9                     producerProcessMessage@m:
  6380                           	callstack 0
  6381                           
  6382                           ; 2 bytes @ 0x3F
  6383   0001F9                     	ds	2
  6384   0001FB                     ??_consumer2QProcessMessage:
  6385   0001FB                     ??_bootProcessMessage:
  6386   0001FB                     ??_ackEventProcessMessage:
  6387   0001FB                     ??_nvProcessMessage:
  6388   0001FB                     ??_canProcessMessage:
  6389   0001FB                     mnsProcessMessage@i:
  6390                           	callstack 0
  6391   0001FB                     producerProcessMessage@ev:
  6392                           	callstack 0
  6393                           
  6394                           ; 2 bytes @ 0x41
  6395   0001FB                     	ds	1
  6396   0001FC                     mnsProcessMessage@d:
  6397                           	callstack 0
  6398                           
  6399                           ; 2 bytes @ 0x42
  6400   0001FC                     	ds	1
  6401   0001FD                     producerProcessMessage@h:
  6402                           	callstack 0
  6403   0001FD                     nvProcessMessage@valueOrError:
  6404                           	callstack 0
  6405                           
  6406                           ; 2 bytes @ 0x43
  6407   0001FD                     	ds	1
  6408   0001FE                     mnsProcessMessage@newMode:
  6409                           	callstack 0
  6410   0001FE                     producerProcessMessage@index:
  6411                           	callstack 0
  6412                           
  6413                           ; 1 bytes @ 0x44
  6414   0001FE                     	ds	1
  6415                           
  6416                           	psect	cstackBANK0
  6417   000060                     __pcstackBANK0:
  6418                           	callstack 0
  6419   000060                     ?i1_getNextWriteMessage:
  6420                           	callstack 0
  6421   000060                     ?i1_pop:
  6422                           	callstack 0
  6423   000060                     ?i1_getBufferPointer:
  6424                           	callstack 0
  6425   000060                     ?i1_tickGet:
  6426                           	callstack 0
  6427   000060                     i1_isEvent$4890:
  6428                           	callstack 0
  6429   000060                     i1getNextWriteMessage@q:
  6430                           	callstack 0
  6431   000060                     i1pop@q:
  6432                           	callstack 0
  6433                           
  6434                           ; 1 bytes @ 0x0
  6435   000060                     	ds	1
  6436   000061                     i1isEvent@opc:
  6437                           	callstack 0
  6438                           
  6439                           ; 1 bytes @ 0x1
  6440   000061                     	ds	1
  6441   000062                     ??i1_getNextWriteMessage:
  6442   000062                     ??i1_pop:
  6443   000062                     i1getBufferPointer@b:
  6444                           	callstack 0
  6445                           
  6446                           ; 1 bytes @ 0x2
  6447   000062                     	ds	2
  6448   000064                     i1tickGet@IntFlag2:
  6449                           	callstack 0
  6450                           
  6451                           ; 1 bytes @ 0x4
  6452   000064                     	ds	1
  6453   000065                     i1tickGet@IntFlag1:
  6454                           	callstack 0
  6455                           
  6456                           ; 1 bytes @ 0x5
  6457   000065                     	ds	1
  6458   000066                     i1tickGet@currentTime:
  6459                           	callstack 0
  6460                           
  6461                           ; 4 bytes @ 0x6
  6462   000066                     	ds	1
  6463   000067                     i1pop@ret:
  6464                           	callstack 0
  6465                           
  6466                           ; 2 bytes @ 0x7
  6467   000067                     	ds	4
  6468   00006B                     i1getNextWriteMessage@wr:
  6469                           	callstack 0
  6470                           
  6471                           ; 1 bytes @ 0xB
  6472   00006B                     	ds	1
  6473   00006C                     ??_checkTxFifo:
  6474   00006C                     canFillRxFifo@m:
  6475                           	callstack 0
  6476                           
  6477                           ; 2 bytes @ 0xC
  6478   00006C                     	ds	2
  6479   00006E                     canFillRxFifo@ptr:
  6480                           	callstack 0
  6481                           
  6482                           ; 2 bytes @ 0xE
  6483   00006E                     	ds	3
  6484   000071                     checkTxFifo@m:
  6485                           	callstack 0
  6486                           
  6487                           ; 2 bytes @ 0x11
  6488   000071                     	ds	2
  6489   000073                     checkTxFifo@mp:
  6490                           	callstack 0
  6491                           
  6492                           ; 2 bytes @ 0x13
  6493   000073                     	ds	2
  6494   000075                     ??_checkCANTimeout:
  6495                           
  6496                           ; 1 bytes @ 0x15
  6497   000075                     	ds	4
  6498   000079                     ??_lowIsr:
  6499                           
  6500                           ; 1 bytes @ 0x19
  6501   000079                     	ds	4
  6502   00007D                     lowIsr@i:
  6503                           	callstack 0
  6504                           
  6505                           ; 1 bytes @ 0x1D
  6506   00007D                     	ds	1
  6507   00007E                     ??_isrLow:
  6508                           
  6509                           ; 1 bytes @ 0x1E
  6510   00007E                     	ds	15
  6511   00008D                     ??_findServiceIndex:
  6512   00008D                     ??_have:
  6513   00008D                     ??_showStatus:
  6514   00008D                     ?_getNV:
  6515                           	callstack 0
  6516   00008D                     ?_findService:
  6517                           	callstack 0
  6518   00008D                     ?_getNextWriteMessage:
  6519                           	callstack 0
  6520   00008D                     ?_pop:
  6521                           	callstack 0
  6522   00008D                     ?_getBufferPointer:
  6523                           	callstack 0
  6524   00008D                     ?___awmod:
  6525                           	callstack 0
  6526   00008D                     ?_tickGet:
  6527                           	callstack 0
  6528   00008D                     initOutputs@io:
  6529                           	callstack 0
  6530   00008D                     consumer2QEsdData@index:
  6531                           	callstack 0
  6532   00008D                     pushTwoAction@a:
  6533                           	callstack 0
  6534   00008D                     peekTwoActionQueue@qty:
  6535                           	callstack 0
  6536   00008D                     deleteTwoActionQueue@qty:
  6537                           	callstack 0
  6538   00008D                     needsStarting@act:
  6539                           	callstack 0
  6540   00008D                     completed@action:
  6541                           	callstack 0
  6542   00008D                     finaliseOutput@type:
  6543                           	callstack 0
  6544   00008D                     startBounceOutput@action:
  6545                           	callstack 0
  6546   00008D                     initBounce@io:
  6547                           	callstack 0
  6548   00008D                     bootEsdData@id:
  6549                           	callstack 0
  6550   00008D                     ackPowerUp@i:
  6551                           	callstack 0
  6552   00008D                     nvGetESDdata@id:
  6553                           	callstack 0
  6554   00008D                     initTicker@priority:
  6555                           	callstack 0
  6556   00008D                     setTimedResponseDelay@delay:
  6557                           	callstack 0
  6558   00008D                     _isEvent$4890:
  6559                           	callstack 0
  6560   00008D                     push@q:
  6561                           	callstack 0
  6562   00008D                     getNextWriteMessage@q:
  6563                           	callstack 0
  6564   00008D                     pop@q:
  6565                           	callstack 0
  6566   00008D                     quantity@q:
  6567                           	callstack 0
  6568   00008D                     eraseFlashBlock@interruptEnabled:
  6569                           	callstack 0
  6570   00008D                     loadFlashBlock@i:
  6571                           	callstack 0
  6572   00008D                     canEsdData@id:
  6573                           	callstack 0
  6574   00008D                     teachGetESDdata@id:
  6575                           	callstack 0
  6576   00008D                     evtIdxToTableIndex@evtIdx:
  6577                           	callstack 0
  6578   00008D                     tableIndexToEvtIdx@tableIndex:
  6579                           	callstack 0
  6580   00008D                     producerPowerUp@i:
  6581                           	callstack 0
  6582   00008D                     producerEsdData@index:
  6583                           	callstack 0
  6584   00008D                     APP_preProcessMessage@m:
  6585                           	callstack 0
  6586   00008D                     APP_postProcessMessage@m:
  6587                           	callstack 0
  6588   00008D                     EEPROM_Read@index:
  6589                           	callstack 0
  6590   00008D                     FLASH_Read@address:
  6591                           	callstack 0
  6592   00008D                     ___awmod@dividend:
  6593                           	callstack 0
  6594   00008D                     memcpy@d1:
  6595                           	callstack 0
  6596                           
  6597                           ; 2 bytes @ 0x2D
  6598   00008D                     	ds	1
  6599   00008E                     ??_quantity:
  6600   00008E                     peekTwoActionQueue@index:
  6601                           	callstack 0
  6602   00008E                     deleteTwoActionQueue@index:
  6603                           	callstack 0
  6604   00008E                     needsStarting@type:
  6605                           	callstack 0
  6606   00008E                     completed@type:
  6607                           	callstack 0
  6608   00008E                     startBounceOutput@io:
  6609                           	callstack 0
  6610   00008E                     initTicker@divider:
  6611                           	callstack 0
  6612   00008E                     isEvent@opc:
  6613                           	callstack 0
  6614   00008E                     flushFlashBlock@interruptEnabled:
  6615                           	callstack 0
  6616   00008E                     push@m:
  6617                           	callstack 0
  6618                           
  6619                           ; 2 bytes @ 0x2E
  6620   00008E                     	ds	1
  6621   00008F                     ??_getNV:
  6622   00008F                     ??_findService:
  6623   00008F                     ??_getNextWriteMessage:
  6624   00008F                     ??_pop:
  6625   00008F                     ??_FLASH_Read:
  6626   00008F                     showStatus@s:
  6627                           	callstack 0
  6628   00008F                     initTicker@i:
  6629                           	callstack 0
  6630   00008F                     findServiceIndex@serviceType:
  6631                           	callstack 0
  6632   00008F                     have@id:
  6633                           	callstack 0
  6634   00008F                     flushFlashBlock@i:
  6635                           	callstack 0
  6636   00008F                     getBufferPointer@b:
  6637                           	callstack 0
  6638   00008F                     EEPROM_Write@index:
  6639                           	callstack 0
  6640   00008F                     ___awmod@divisor:
  6641                           	callstack 0
  6642   00008F                     memcpy@s1:
  6643                           	callstack 0
  6644                           
  6645                           ; 2 bytes @ 0x2F
  6646   00008F                     	ds	1
  6647   000090                     ??_push:
  6648   000090                     getNV@index:
  6649                           	callstack 0
  6650   000090                     findServiceIndex@i:
  6651                           	callstack 0
  6652   000090                     have@i:
  6653                           	callstack 0
  6654   000090                     FLASH_Write@index:
  6655                           	callstack 0
  6656                           
  6657                           ; 2 bytes @ 0x30
  6658   000090                     	ds	1
  6659   000091                     ??_readInput:
  6660   000091                     ?_readNVM:
  6661                           	callstack 0
  6662   000091                     ?___wmul:
  6663                           	callstack 0
  6664   000091                     ?___lmul:
  6665                           	callstack 0
  6666   000091                     setOutputPin@state:
  6667                           	callstack 0
  6668   000091                     needsStarting@io:
  6669                           	callstack 0
  6670   000091                     _completed$1545:
  6671                           	callstack 0
  6672   000091                     startServoOutput@action:
  6673                           	callstack 0
  6674   000091                     startMultiOutput@action:
  6675                           	callstack 0
  6676   000091                     setServoState@action:
  6677                           	callstack 0
  6678   000091                     setBounceState@action:
  6679                           	callstack 0
  6680   000091                     setMultiState@action:
  6681                           	callstack 0
  6682   000091                     getParameterFlags@flags:
  6683                           	callstack 0
  6684   000091                     tickGet@IntFlag2:
  6685                           	callstack 0
  6686   000091                     startTimedResponse@serviceIndex:
  6687                           	callstack 0
  6688   000091                     findService@id:
  6689                           	callstack 0
  6690   000091                     EEPROM_Write@value:
  6691                           	callstack 0
  6692   000091                     ___awmod@counter:
  6693                           	callstack 0
  6694   000091                     ___wmul@multiplier:
  6695                           	callstack 0
  6696   000091                     memcpy@n:
  6697                           	callstack 0
  6698   000091                     readNVM@index:
  6699                           	callstack 0
  6700   000091                     ___lmul@multiplier:
  6701                           	callstack 0
  6702                           
  6703                           ; 4 bytes @ 0x31
  6704   000091                     	ds	1
  6705   000092                     ??_setOutputPin:
  6706   000092                     ??_startServoOutput:
  6707   000092                     ??_startMultiOutput:
  6708   000092                     completed@io:
  6709                           	callstack 0
  6710   000092                     setServoState@io:
  6711                           	callstack 0
  6712   000092                     setBounceState@io:
  6713                           	callstack 0
  6714   000092                     setMultiState@io:
  6715                           	callstack 0
  6716   000092                     getParameter@idx:
  6717                           	callstack 0
  6718   000092                     tickGet@IntFlag1:
  6719                           	callstack 0
  6720   000092                     findService@i:
  6721                           	callstack 0
  6722   000092                     EEPROM_Write@interruptEnabled:
  6723                           	callstack 0
  6724   000092                     FLASH_Write@value:
  6725                           	callstack 0
  6726   000092                     ___awmod@sign:
  6727                           	callstack 0
  6728   000092                     startTimedResponse@callback:
  6729                           	callstack 0
  6730   000092                     getNumRxBuffersInUse@ptr:
  6731                           	callstack 0
  6732                           
  6733                           ; 2 bytes @ 0x32
  6734   000092                     	ds	1
  6735   000093                     ??_FLASH_Write:
  6736   000093                     readInput@io:
  6737                           	callstack 0
  6738   000093                     setOutputState@act:
  6739                           	callstack 0
  6740   000093                     startServoOutput@io:
  6741                           	callstack 0
  6742   000093                     startMultiOutput@io:
  6743                           	callstack 0
  6744   000093                     memcpy@tmp:
  6745                           	callstack 0
  6746   000093                     ___wmul@multiplicand:
  6747                           	callstack 0
  6748   000093                     tickGet@currentTime:
  6749                           	callstack 0
  6750                           
  6751                           ; 4 bytes @ 0x33
  6752   000093                     	ds	1
  6753   000094                     ??_readNVM:
  6754   000094                     setOutputPin@io:
  6755                           	callstack 0
  6756   000094                     setOutputState@type:
  6757                           	callstack 0
  6758   000094                     startTimedResponse@type:
  6759                           	callstack 0
  6760   000094                     getNumRxBuffersInUse@no:
  6761                           	callstack 0
  6762   000094                     pop@ret:
  6763                           	callstack 0
  6764   000094                     memcpy@d:
  6765                           	callstack 0
  6766                           
  6767                           ; 2 bytes @ 0x34
  6768   000094                     	ds	1
  6769   000095                     ??_setupTimer1:
  6770   000095                     ??_setupTimer3:
  6771   000095                     setOutputState@io:
  6772                           	callstack 0
  6773   000095                     getNumRxBuffersInUse@i:
  6774                           	callstack 0
  6775   000095                     ___wmul@product:
  6776                           	callstack 0
  6777   000095                     ___lmul@multiplicand:
  6778                           	callstack 0
  6779                           
  6780                           ; 4 bytes @ 0x35
  6781   000095                     	ds	1
  6782   000096                     ?_consumer2QGetDiagnostic:
  6783                           	callstack 0
  6784   000096                     ?_ackGetDiagnostic:
  6785                           	callstack 0
  6786   000096                     ?_mnsGetDiagnostic:
  6787                           	callstack 0
  6788   000096                     ?_nvGetDiagnostic:
  6789                           	callstack 0
  6790   000096                     ?_canGetDiagnostic:
  6791                           	callstack 0
  6792   000096                     ?_teachGetDiagnostic:
  6793                           	callstack 0
  6794   000096                     ?_producerGetDiagnostic:
  6795                           	callstack 0
  6796   000096                     readNVM@type:
  6797                           	callstack 0
  6798   000096                     memcpy@s:
  6799                           	callstack 0
  6800                           
  6801                           ; 2 bytes @ 0x36
  6802   000096                     	ds	1
  6803   000097                     ??_initInputScan:
  6804   000097                     ??_validStart:
  6805   000097                     ??_loadNvCache:
  6806   000097                     ??_canPowerUp:
  6807   000097                     ?_getNN:
  6808                           	callstack 0
  6809   000097                     ?_getEN:
  6810                           	callstack 0
  6811   000097                     ?___awdiv:
  6812                           	callstack 0
  6813   000097                     ?___lldiv:
  6814                           	callstack 0
  6815   000097                     setDigitalOutput@state:
  6816                           	callstack 0
  6817   000097                     bootPowerUp@b:
  6818                           	callstack 0
  6819   000097                     mnsPowerUp@i:
  6820                           	callstack 0
  6821   000097                     handleSelfEnumeration@p:
  6822                           	callstack 0
  6823   000097                     ___awdiv@dividend:
  6824                           	callstack 0
  6825   000097                     ___lldiv@dividend:
  6826                           	callstack 0
  6827                           
  6828                           ; 4 bytes @ 0x37
  6829   000097                     	ds	1
  6830   000098                     ??_canGetDiagnostic:
  6831   000098                     setDigitalOutput@pinState:
  6832                           	callstack 0
  6833   000098                     consumer2QGetDiagnostic@index:
  6834                           	callstack 0
  6835   000098                     bootPowerUp@found:
  6836                           	callstack 0
  6837   000098                     ackGetDiagnostic@index:
  6838                           	callstack 0
  6839   000098                     mnsGetDiagnostic@index:
  6840                           	callstack 0
  6841   000098                     nvGetDiagnostic@index:
  6842                           	callstack 0
  6843   000098                     getNextWriteMessage@wr:
  6844                           	callstack 0
  6845   000098                     teachGetDiagnostic@index:
  6846                           	callstack 0
  6847   000098                     producerGetDiagnostic@index:
  6848                           	callstack 0
  6849   000098                     _setupTimer1$1931:
  6850                           	callstack 0
  6851   000098                     _setupTimer3$1935:
  6852                           	callstack 0
  6853   000098                     mnsPowerUp@temp:
  6854                           	callstack 0
  6855   000098                     canPowerUp@temp:
  6856                           	callstack 0
  6857                           
  6858                           ; 2 bytes @ 0x38
  6859   000098                     	ds	1
  6860   000099                     ??_handleSelfEnumeration:
  6861   000099                     ??_getNN:
  6862   000099                     ??_getEN:
  6863   000099                     setDigitalOutput@io:
  6864                           	callstack 0
  6865   000099                     initInputScan@input:
  6866                           	callstack 0
  6867   000099                     bootPowerUp@i:
  6868                           	callstack 0
  6869   000099                     canGetDiagnostic@index:
  6870                           	callstack 0
  6871   000099                     loadNvCache@temp:
  6872                           	callstack 0
  6873   000099                     canSendMessage@mp:
  6874                           	callstack 0
  6875   000099                     ___awdiv@divisor:
  6876                           	callstack 0
  6877   000099                     ___lmul@product:
  6878                           	callstack 0
  6879                           
  6880                           ; 4 bytes @ 0x39
  6881   000099                     	ds	1
  6882   00009A                     setupTimer1@ticks:
  6883                           	callstack 0
  6884   00009A                     setupTimer3@ticks:
  6885                           	callstack 0
  6886   00009A                     bootPowerUp@a:
  6887                           	callstack 0
  6888                           
  6889                           ; 3 bytes @ 0x3A
  6890   00009A                     	ds	1
  6891   00009B                     ??_canSendMessage:
  6892   00009B                     loadNvCache@i:
  6893                           	callstack 0
  6894   00009B                     validStart@tableIndex:
  6895                           	callstack 0
  6896   00009B                     ___awdiv@counter:
  6897                           	callstack 0
  6898   00009B                     ___lldiv@divisor:
  6899                           	callstack 0
  6900                           
  6901                           ; 4 bytes @ 0x3B
  6902   00009B                     	ds	1
  6903   00009C                     setupTimer1@io:
  6904                           	callstack 0
  6905   00009C                     setupTimer3@io:
  6906                           	callstack 0
  6907   00009C                     nvPowerUp@i:
  6908                           	callstack 0
  6909   00009C                     validStart@f:
  6910                           	callstack 0
  6911   00009C                     ___awdiv@sign:
  6912                           	callstack 0
  6913                           
  6914                           ; 1 bytes @ 0x3C
  6915   00009C                     	ds	1
  6916   00009D                     ??_getEVs:
  6917   00009D                     ??_numEv:
  6918   00009D                     ?_getEv:
  6919                           	callstack 0
  6920   00009D                     handleSelfEnumeration@incomingCanId:
  6921                           	callstack 0
  6922   00009D                     getEv@evNum:
  6923                           	callstack 0
  6924   00009D                     doWait@duration:
  6925                           	callstack 0
  6926   00009D                     getNN@hi:
  6927                           	callstack 0
  6928   00009D                     getEN@hi:
  6929                           	callstack 0
  6930   00009D                     ___awdiv@quotient:
  6931                           	callstack 0
  6932                           
  6933                           ; 2 bytes @ 0x3D
  6934   00009D                     	ds	2
  6935   00009F                     ??_getEv:
  6936   00009F                     ??_doWait:
  6937   00009F                     ??_bounceUp:
  6938   00009F                     ??_bounceDown:
  6939   00009F                     ??_APP_GetEventState:
  6940   00009F                     ??_APP_nvDefault:
  6941   00009F                     ??_leds_poll:
  6942   00009F                     APP_nvValidate@value:
  6943                           	callstack 0
  6944   00009F                     setServoPosition@pos:
  6945                           	callstack 0
  6946   00009F                     getNN@lo:
  6947                           	callstack 0
  6948   00009F                     getEN@lo:
  6949                           	callstack 0
  6950   00009F                     ___lldiv@quotient:
  6951                           	callstack 0
  6952                           
  6953                           ; 4 bytes @ 0x3F
  6954   00009F                     	ds	1
  6955   0000A0                     APP_nvValidate@index:
  6956                           	callstack 0
  6957   0000A0                     setServoPosition@io:
  6958                           	callstack 0
  6959   0000A0                     canSendMessage@no:
  6960                           	callstack 0
  6961                           
  6962                           ; 1 bytes @ 0x40
  6963   0000A0                     	ds	1
  6964   0000A1                     setOutputPosition@pos:
  6965                           	callstack 0
  6966   0000A1                     numEv@num:
  6967                           	callstack 0
  6968   0000A1                     getEVs@f:
  6969                           	callstack 0
  6970   0000A1                     getNN@f:
  6971                           	callstack 0
  6972   0000A1                     getEN@tableIndex:
  6973                           	callstack 0
  6974   0000A1                     canSendMessage@m:
  6975                           	callstack 0
  6976                           
  6977                           ; 2 bytes @ 0x41
  6978   0000A1                     	ds	1
  6979   0000A2                     setOutputPosition@type:
  6980                           	callstack 0
  6981   0000A2                     numEv@f:
  6982                           	callstack 0
  6983   0000A2                     getEVs@evIdx:
  6984                           	callstack 0
  6985   0000A2                     getNN@tableIndex:
  6986                           	callstack 0
  6987                           
  6988                           ; 1 bytes @ 0x42
  6989   0000A2                     	ds	1
  6990   0000A3                     ??_sendMessage:
  6991   0000A3                     APP_nvDefault@index:
  6992                           	callstack 0
  6993   0000A3                     setOutputPosition@io:
  6994                           	callstack 0
  6995   0000A3                     numEv@tableIndex:
  6996                           	callstack 0
  6997   0000A3                     getEVs@tableIndex:
  6998                           	callstack 0
  6999   0000A3                     ___lldiv@counter:
  7000                           	callstack 0
  7001   0000A3                     getHash@nn:
  7002                           	callstack 0
  7003                           
  7004                           ; 2 bytes @ 0x43
  7005   0000A3                     	ds	1
  7006   0000A4                     ??_initServos:
  7007   0000A4                     ??_pbDownTimer:
  7008   0000A4                     ??_pbUpTimer:
  7009   0000A4                     getEv@f:
  7010                           	callstack 0
  7011   0000A4                     getEVs@evNum:
  7012                           	callstack 0
  7013   0000A4                     writeNVM@index:
  7014                           	callstack 0
  7015                           
  7016                           ; 3 bytes @ 0x44
  7017   0000A4                     	ds	1
  7018   0000A5                     bounceUp@reversed:
  7019                           	callstack 0
  7020   0000A5                     sendMessage@opc:
  7021                           	callstack 0
  7022   0000A5                     getEv@tableIndex:
  7023                           	callstack 0
  7024   0000A5                     getHash@en:
  7025                           	callstack 0
  7026                           
  7027                           ; 2 bytes @ 0x45
  7028   0000A5                     	ds	1
  7029   0000A6                     isConsumedEvent@eventIndex:
  7030                           	callstack 0
  7031   0000A6                     bounceUp@midway:
  7032                           	callstack 0
  7033   0000A6                     sendMessage2@data1:
  7034                           	callstack 0
  7035   0000A6                     sendMessage3@data1:
  7036                           	callstack 0
  7037   0000A6                     sendMessage4@opc:
  7038                           	callstack 0
  7039   0000A6                     sendMessage5@opc:
  7040                           	callstack 0
  7041   0000A6                     sendMessage6@opc:
  7042                           	callstack 0
  7043   0000A6                     sendMessage7@opc:
  7044                           	callstack 0
  7045   0000A6                     _initServos$8088:
  7046                           	callstack 0
  7047                           
  7048                           ; 1 bytes @ 0x46
  7049   0000A6                     	ds	1
  7050   0000A7                     ??_getHash:
  7051   0000A7                     isConsumedEvent@ev:
  7052                           	callstack 0
  7053   0000A7                     bounceUp@io:
  7054                           	callstack 0
  7055   0000A7                     sendMessage2@data2:
  7056                           	callstack 0
  7057   0000A7                     sendMessage3@data2:
  7058                           	callstack 0
  7059   0000A7                     writeNVM@value:
  7060                           	callstack 0
  7061   0000A7                     sendProducedEvent@onOff:
  7062                           	callstack 0
  7063   0000A7                     _initServos$8087:
  7064                           	callstack 0
  7065                           
  7066                           ; 1 bytes @ 0x47
  7067   0000A7                     	ds	1
  7068   0000A8                     initServos@io:
  7069                           	callstack 0
  7070   0000A8                     pbDownTimer@timeout:
  7071                           	callstack 0
  7072   0000A8                     pbUpTimer@timeout:
  7073                           	callstack 0
  7074   0000A8                     sendMessage2@opc:
  7075                           	callstack 0
  7076   0000A8                     sendMessage3@data3:
  7077                           	callstack 0
  7078   0000A8                     writeNVM@type:
  7079                           	callstack 0
  7080   0000A8                     getHash@hash:
  7081                           	callstack 0
  7082                           
  7083                           ; 1 bytes @ 0x48
  7084   0000A8                     	ds	1
  7085   0000A9                     
  7086                           ; 1 bytes @ 0x49
  7087                           
  7088                           	psect	cstackCOMRAM
  7089   000001                     __pcstackCOMRAM:
  7090                           	callstack 0
  7091   000001                     ?i2_getNV:
  7092                           	callstack 0
  7093   000001                     ?i2_getNextWriteMessage:
  7094                           	callstack 0
  7095   000001                     ?i2_pop:
  7096                           	callstack 0
  7097   000001                     ?i2_getBufferPointer:
  7098                           	callstack 0
  7099   000001                     ?i2_tickGet:
  7100                           	callstack 0
  7101   000001                     i2_isEvent$4890:
  7102                           	callstack 0
  7103   000001                     i2getNextWriteMessage@q:
  7104                           	callstack 0
  7105   000001                     i2pop@q:
  7106                           	callstack 0
  7107                           
  7108                           ; 1 bytes @ 0x0
  7109   000001                     	ds	1
  7110   000002                     i2isEvent@opc:
  7111                           	callstack 0
  7112                           
  7113                           ; 1 bytes @ 0x1
  7114   000002                     	ds	1
  7115   000003                     ??i2_getNV:
  7116   000003                     ??i2_getNextWriteMessage:
  7117   000003                     ??i2_pop:
  7118   000003                     i2getBufferPointer@b:
  7119                           	callstack 0
  7120                           
  7121                           ; 1 bytes @ 0x2
  7122   000003                     	ds	1
  7123   000004                     i2getNV@index:
  7124                           	callstack 0
  7125                           
  7126                           ; 1 bytes @ 0x3
  7127   000004                     	ds	1
  7128   000005                     i2setOutputPin@state:
  7129                           	callstack 0
  7130   000005                     i2tickGet@IntFlag2:
  7131                           	callstack 0
  7132                           
  7133                           ; 1 bytes @ 0x4
  7134   000005                     	ds	1
  7135   000006                     ??i2_setOutputPin:
  7136   000006                     i2tickGet@IntFlag1:
  7137                           	callstack 0
  7138                           
  7139                           ; 1 bytes @ 0x5
  7140   000006                     	ds	1
  7141   000007                     i2tickGet@currentTime:
  7142                           	callstack 0
  7143                           
  7144                           ; 4 bytes @ 0x6
  7145   000007                     	ds	1
  7146   000008                     i2setOutputPin@io:
  7147                           	callstack 0
  7148   000008                     i2pop@ret:
  7149                           	callstack 0
  7150                           
  7151                           ; 2 bytes @ 0x7
  7152   000008                     	ds	1
  7153   000009                     
  7154                           ; 1 bytes @ 0x8
  7155   000009                     	ds	3
  7156   00000C                     i2getNextWriteMessage@wr:
  7157                           	callstack 0
  7158                           
  7159                           ; 1 bytes @ 0xB
  7160   00000C                     	ds	1
  7161   00000D                     ??i2_checkTxFifo:
  7162   00000D                     i2canFillRxFifo@m:
  7163                           	callstack 0
  7164                           
  7165                           ; 2 bytes @ 0xC
  7166   00000D                     	ds	2
  7167   00000F                     i2canFillRxFifo@ptr:
  7168                           	callstack 0
  7169                           
  7170                           ; 2 bytes @ 0xE
  7171   00000F                     	ds	3
  7172   000012                     i2checkTxFifo@m:
  7173                           	callstack 0
  7174                           
  7175                           ; 2 bytes @ 0x11
  7176   000012                     	ds	2
  7177   000014                     i2checkTxFifo@mp:
  7178                           	callstack 0
  7179                           
  7180                           ; 2 bytes @ 0x13
  7181   000014                     	ds	2
  7182   000016                     ??i2_checkCANTimeout:
  7183   000016                     
  7184                           ; 1 bytes @ 0x15
  7185   000016                     	ds	4
  7186   00001A                     ??_highIsr:
  7187   00001A                     
  7188                           ; 1 bytes @ 0x19
  7189   00001A                     	ds	4
  7190   00001E                     highIsr@i:
  7191                           	callstack 0
  7192                           
  7193                           ; 1 bytes @ 0x1D
  7194   00001E                     	ds	1
  7195   00001F                     ??_isrHigh:
  7196                           
  7197                           ; 1 bytes @ 0x1E
  7198   00001F                     	ds	12
  7199                           
  7200 ;;
  7201 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7202 ;;
  7203 ;; *************** function _main *****************
  7204 ;; Defined at:
  7205 ;;		line 1249 in file "../../VLCBlib_PIC/vlcb.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;  i               1    0        unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels required when called: 29
  7225 ;; This function calls:
  7226 ;;		_checkPowerOnPb
  7227 ;;		_factoryReset
  7228 ;;		_initRomOps
  7229 ;;		_loop
  7230 ;;		_poll
  7231 ;;		_powerUp
  7232 ;;		_readNVM
  7233 ;;		_setup
  7234 ;; This function is called by:
  7235 ;;		Startup code after reset
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text0
  7240   00B9A4                     __ptext0:
  7241                           	callstack 0
  7242   00B9A4                     _main:
  7243                           	callstack 2
  7244                           
  7245                           ;../../VLCBlib_PIC/vlcb.c: 1250:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1256:     OSCT
      +                          UNEbits.PLLEN = 1;
  7246                           
  7247                           ;incstack = 0
  7248   00B9A4  8C9B               	bsf	155,6,c	;volatile
  7249                           
  7250                           ;../../VLCBlib_PIC/vlcb.c: 1271:     RCONbits.IPEN = 1;
  7251   00B9A6  8ED0               	bsf	208,7,c	;volatile
  7252                           
  7253                           ;../../VLCBlib_PIC/vlcb.c: 1293:     initRomOps();
  7254   00B9A8  ECB9  F062         	call	_initRomOps	;wreg free
  7255                           
  7256                           ;../../VLCBlib_PIC/vlcb.c: 1295:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
  7257   00B9AC  0EFA               	movlw	250
  7258   00B9AE  0100               	movlb	0	; () banked
  7259   00B9B0  6F91               	movwf	readNVM@index& (0+255),b
  7260   00B9B2  0E03               	movlw	3
  7261   00B9B4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7262   00B9B6  0E00               	movlw	0
  7263   00B9B8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7264   00B9BA  0E00               	movlw	0
  7265   00B9BC  ECD0  F059         	call	_readNVM
  7266   00B9C0  0100               	movlb	0	; () banked
  7267   00B9C2  0591               	decf	?_readNVM& (0+255),w,b
  7268   00B9C4  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7269   00B9C6  A4D8               	btfss	status,2,c
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;../../VLCBlib_PIC/vlcb.c: 1296:         factoryReset();
  7273   00B9C8  ECB1  F042         	call	_factoryReset	;wreg free
  7274                           
  7275                           ;../../VLCBlib_PIC/vlcb.c: 1300:     powerUp();
  7276                           
  7277                           ;../../VLCBlib_PIC/vlcb.c: 1297:     }
  7278   00B9CC  EC78  F044         	call	_powerUp	;wreg free
  7279                           
  7280                           ;../../VLCBlib_PIC/vlcb.c: 1303:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7281   00B9D0  8EF2               	bsf	242,7,c	;volatile
  7282   00B9D2  8CF2               	bsf	242,6,c	;volatile
  7283                           
  7284                           ;../../VLCBlib_PIC/vlcb.c: 1304:     checkPowerOnPb();
  7285   00B9D4  EC2F  F05A         	call	_checkPowerOnPb	;wreg free
  7286                           
  7287                           ;../../VLCBlib_PIC/vlcb.c: 1307:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7288   00B9D8  9EF2               	bcf	242,7,c	;volatile
  7289   00B9DA  9CF2               	bcf	242,6,c	;volatile
  7290                           
  7291                           ;../../VLCBlib_PIC/vlcb.c: 1308:     setup();
  7292   00B9DC  EC9F  F04C         	call	_setup	;wreg free
  7293                           
  7294                           ;../../VLCBlib_PIC/vlcb.c: 1311:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7295   00B9E0  8EF2               	bsf	242,7,c	;volatile
  7296   00B9E2  8CF2               	bsf	242,6,c	;volatile
  7297   00B9E4                     l25006:
  7298                           
  7299                           ;../../VLCBlib_PIC/vlcb.c: 1315:         poll();
  7300   00B9E4  EC86  F01C         	call	_poll	;wreg free
  7301                           
  7302                           ;../../VLCBlib_PIC/vlcb.c: 1316:         loop();
  7303   00B9E8  ECCA  F035         	call	_loop	;wreg free
  7304   00B9EC  D7FB               	goto	l25006
  7305   00B9EE                     __end_of_main:
  7306                           	callstack 0
  7307                           
  7308 ;; *************** function _setup *****************
  7309 ;; Defined at:
  7310 ;;		line 236 in file "../main.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;		None
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 19
  7331 ;; This function calls:
  7332 ;;		_configIO
  7333 ;;		_getNV
  7334 ;;		_initInputScan
  7335 ;;		_initOutputs
  7336 ;;		_initServos
  7337 ;;		_setTimedResponseDelay
  7338 ;;		_tickGet
  7339 ;;		_universalEventsInit
  7340 ;; This function is called by:
  7341 ;;		_main
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text1
  7346   00993E                     __ptext1:
  7347                           	callstack 0
  7348   00993E                     _setup:
  7349                           	callstack 11
  7350                           
  7351                           ;../main.c: 241:     transport = &canTransport;
  7352                           
  7353                           ;incstack = 0
  7354   00993E  0E7A               	movlw	low _canTransport
  7355   009940  0101               	movlb	1	; () banked
  7356   009942  6F62               	movwf	_transport& (0+255),b
  7357   009944  0EEF               	movlw	high _canTransport
  7358   009946  6F63               	movwf	(_transport+1)& (0+255),b
  7359                           
  7360                           ; BSR set to: 1
  7361                           ;../main.c: 248:     INTCON2bits.RBPU = 0;
  7362   009948  9EF1               	bcf	241,7,c	;volatile
  7363                           
  7364                           ; BSR set to: 1
  7365                           ;../main.c: 250:     WPUB = (uint8_t)getNV(4);
  7366   00994A  0E04               	movlw	4
  7367   00994C  EC52  F05E         	call	_getNV
  7368   009950  0100               	movlb	0	; () banked
  7369   009952  518D               	movf	?_getNV& (0+255),w,b
  7370   009954  010F               	movlb	15	; () banked
  7371   009956  6F5B               	movwf	91,b	;volatile
  7372                           
  7373                           ; BSR set to: 15
  7374                           ;../main.c: 304:     setTimedResponseDelay((uint8_t)getNV(5));
  7375   009958  0E05               	movlw	5
  7376   00995A  EC52  F05E         	call	_getNV
  7377   00995E  0100               	movlb	0	; () banked
  7378   009960  518D               	movf	?_getNV& (0+255),w,b
  7379   009962  EC09  F063         	call	_setTimedResponseDelay
  7380                           
  7381                           ;../main.c: 305:     universalEventsInit();
  7382   009966  ECCD  F062         	call	_universalEventsInit	;wreg free
  7383                           
  7384                           ;../main.c: 312:     ANCON0 = 0x00;
  7385   00996A  0E00               	movlw	0
  7386   00996C  010F               	movlb	15	; () banked
  7387   00996E  6F5D               	movwf	93,b	;volatile
  7388                           
  7389                           ; BSR set to: 15
  7390                           ;../main.c: 313:     ANCON1 = 0x00;
  7391   009970  0E00               	movlw	0
  7392   009972  6F5C               	movwf	92,b	;volatile
  7393                           
  7394                           ; BSR set to: 15
  7395                           ;../main.c: 326:     initServos();
  7396   009974  ECFF  F03D         	call	_initServos	;wreg free
  7397                           
  7398                           ;../main.c: 328:     initOutputs();
  7399   009978  EC6D  F060         	call	_initOutputs	;wreg free
  7400                           
  7401                           ;../main.c: 331:     for (io=0; io< 16; io++) {
  7402   00997C  0E00               	movlw	0
  7403   00997E  0100               	movlb	0	; () banked
  7404   009980  6FCF               	movwf	_io& (0+255),b
  7405   009982                     l24754:
  7406                           
  7407                           ; BSR set to: 0
  7408   009982  0E0F               	movlw	15
  7409   009984  65CF               	cpfsgt	_io& (0+255),b
  7410   009986  D001               	goto	l24758
  7411   009988  D006               	goto	l24764
  7412   00998A                     l24758:
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;../main.c: 332:         configIO(io);
  7416   00998A  51CF               	movf	_io& (0+255),w,b
  7417   00998C  EC52  F026         	call	_configIO
  7418                           
  7419                           ;../main.c: 333:     }
  7420   009990  0100               	movlb	0	; () banked
  7421   009992  2BCF               	incf	_io& (0+255),f,b
  7422   009994  D7F6               	goto	l24754
  7423   009996                     l24764:
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;../main.c: 334:     initInputScan();
  7427   009996  ECF4  F04C         	call	_initInputScan	;wreg free
  7428                           
  7429                           ;../main.c: 340:     (INTCONbits.GIE = 1);
  7430   00999A  8EF2               	bsf	242,7,c	;volatile
  7431                           
  7432                           ;../main.c: 342:     startTime.val = tickGet();
  7433   00999C  ECE4  F05A         	call	_tickGet	;wreg free
  7434   0099A0  C08D  F03B         	movff	?_tickGet,_startTime
  7435   0099A4  C08E  F03C         	movff	?_tickGet+1,_startTime+1
  7436   0099A8  C08F  F03D         	movff	?_tickGet+2,_startTime+2
  7437   0099AC  C090  F03E         	movff	?_tickGet+3,_startTime+3
  7438                           
  7439                           ;../main.c: 343:     lastServoStartTime.val = startTime.val;
  7440   0099B0  C03B  F15C         	movff	_startTime,_lastServoStartTime
  7441   0099B4  C03C  F15D         	movff	_startTime+1,_lastServoStartTime+1
  7442   0099B8  C03D  F15E         	movff	_startTime+2,_lastServoStartTime+2
  7443   0099BC  C03E  F15F         	movff	_startTime+3,_lastServoStartTime+3
  7444                           
  7445                           ;../main.c: 344:     lastInputScanTime.val = startTime.val;
  7446   0099C0  C03B  F158         	movff	_startTime,_lastInputScanTime
  7447   0099C4  C03C  F159         	movff	_startTime+1,_lastInputScanTime+1
  7448   0099C8  C03D  F15A         	movff	_startTime+2,_lastInputScanTime+2
  7449   0099CC  C03E  F15B         	movff	_startTime+3,_lastInputScanTime+3
  7450                           
  7451                           ;../main.c: 345:     lastActionPollTime.val = startTime.val;
  7452   0099D0  C03B  F154         	movff	_startTime,_lastActionPollTime
  7453   0099D4  C03C  F155         	movff	_startTime+1,_lastActionPollTime+1
  7454   0099D8  C03D  F156         	movff	_startTime+2,_lastActionPollTime+2
  7455   0099DC  C03E  F157         	movff	_startTime+3,_lastActionPollTime+3
  7456                           
  7457                           ;../main.c: 350:     started = FALSE;
  7458   0099E0  0E00               	movlw	0
  7459   0099E2  0100               	movlb	0	; () banked
  7460   0099E4  6FD0               	movwf	_started& (0+255),b
  7461                           
  7462                           ; BSR set to: 0
  7463   0099E6  0012               	return		;funcret
  7464   0099E8                     __end_of_setup:
  7465                           	callstack 0
  7466                           
  7467 ;; *************** function _universalEventsInit *****************
  7468 ;; Defined at:
  7469 ;;		line 93 in file "../universalEvents.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;		None
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      void 
  7476 ;; Registers used:
  7477 ;;		wreg, status,2
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7487 ;;Total ram usage:        0 bytes
  7488 ;; Hardware stack levels used: 1
  7489 ;; Hardware stack levels required when called: 12
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_setup
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text2
  7498   00C59A                     __ptext2:
  7499                           	callstack 0
  7500   00C59A                     _universalEventsInit:
  7501                           	callstack 17
  7502                           
  7503                           ;../universalEvents.c: 94:     startWait.val = 0;
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;incstack = 0
  7507   00C59A  0E00               	movlw	0
  7508   00C59C  6E37               	movwf	_startWait^0,c
  7509   00C59E  0E00               	movlw	0
  7510   00C5A0  6E38               	movwf	(_startWait+1)^0,c
  7511   00C5A2  0E00               	movlw	0
  7512   00C5A4  6E39               	movwf	(_startWait+2)^0,c
  7513   00C5A6  0E00               	movlw	0
  7514   00C5A8  6E3A               	movwf	(_startWait+3)^0,c
  7515   00C5AA  0012               	return		;funcret
  7516   00C5AC                     __end_of_universalEventsInit:
  7517                           	callstack 0
  7518                           
  7519 ;; *************** function _initServos *****************
  7520 ;; Defined at:
  7521 ;;		line 123 in file "../servo.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;		None
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  io              1   72[BANK0 ] unsigned char 
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7537 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7538 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7539 ;;Total ram usage:        5 bytes
  7540 ;; Hardware stack levels used: 1
  7541 ;; Hardware stack levels required when called: 15
  7542 ;; This function calls:
  7543 ;;		_getNV
  7544 ;;		_readNVM
  7545 ;;		_setOutputPosition
  7546 ;;		_tickGet
  7547 ;; This function is called by:
  7548 ;;		_setup
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text3
  7553   007BFE                     __ptext3:
  7554                           	callstack 0
  7555   007BFE                     _initServos:
  7556                           	callstack 14
  7557                           
  7558                           ;incstack = 0
  7559   007BFE  0E00               	movlw	0
  7560   007C00  0100               	movlb	0	; () banked
  7561   007C02  6FA8               	movwf	initServos@io& (0+255),b
  7562   007C04                     l22712:
  7563                           
  7564                           ; BSR set to: 0
  7565   007C04  51A8               	movf	initServos@io& (0+255),w,b
  7566   007C06  0D07               	mullw	7
  7567   007C08  50F3               	movf	243,w,c
  7568   007C0A  0F11               	addlw	17
  7569   007C0C  EC52  F05E         	call	_getNV
  7570   007C10  0100               	movlb	0	; () banked
  7571   007C12  A58D               	btfss	?_getNV& (0+255),2,b
  7572   007C14  D009               	goto	l22716
  7573                           
  7574                           ; BSR set to: 0
  7575   007C16  0E10               	movlw	low _servoState
  7576   007C18  25A8               	addwf	initServos@io& (0+255),w,b
  7577   007C1A  6ED9               	movwf	fsr2l,c
  7578   007C1C  6ADA               	clrf	fsr2h,c
  7579   007C1E  0E01               	movlw	high _servoState
  7580   007C20  22DA               	addwfc	fsr2h,f,c
  7581   007C22  0E01               	movlw	1
  7582   007C24  6EDF               	movwf	indf2,c
  7583   007C26  D007               	goto	l22718
  7584   007C28                     l22716:
  7585                           
  7586                           ; BSR set to: 0
  7587   007C28  0E10               	movlw	low _servoState
  7588   007C2A  25A8               	addwf	initServos@io& (0+255),w,b
  7589   007C2C  6ED9               	movwf	fsr2l,c
  7590   007C2E  6ADA               	clrf	fsr2h,c
  7591   007C30  0E01               	movlw	high _servoState
  7592   007C32  22DA               	addwfc	fsr2h,f,c
  7593   007C34  6ADF               	clrf	indf2,c
  7594   007C36                     l22718:
  7595                           
  7596                           ; BSR set to: 0
  7597   007C36  ECE4  F05A         	call	_tickGet	;wreg free
  7598   007C3A  0100               	movlb	0	; () banked
  7599   007C3C  51A8               	movf	initServos@io& (0+255),w,b
  7600   007C3E  0D04               	mullw	4
  7601   007C40  0E88               	movlw	low _ticksWhenStopped
  7602   007C42  24F3               	addwf	243,w,c
  7603   007C44  6ED9               	movwf	fsr2l,c
  7604   007C46  0E03               	movlw	high _ticksWhenStopped
  7605   007C48  20F4               	addwfc	prodh,w,c
  7606   007C4A  6EDA               	movwf	fsr2h,c
  7607   007C4C  C08D  FFDE         	movff	?_tickGet,postinc2
  7608   007C50  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7609   007C54  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7610   007C58  C090  FFDE         	movff	?_tickGet+3,postinc2
  7611                           
  7612                           ; BSR set to: 0
  7613   007C5C  51A8               	movf	initServos@io& (0+255),w,b
  7614   007C5E  0D07               	mullw	7
  7615   007C60  50F3               	movf	243,w,c
  7616   007C62  0F11               	addlw	17
  7617   007C64  EC52  F05E         	call	_getNV
  7618   007C68  0100               	movlb	0	; () banked
  7619   007C6A  A58D               	btfss	?_getNV& (0+255),2,b
  7620   007C6C  D020               	goto	l22726
  7621                           
  7622                           ; BSR set to: 0
  7623   007C6E  51A8               	movf	initServos@io& (0+255),w,b
  7624   007C70  0D07               	mullw	7
  7625   007C72  50F3               	movf	243,w,c
  7626   007C74  0F10               	addlw	16
  7627   007C76  EC52  F05E         	call	_getNV
  7628   007C7A  0100               	movlb	0	; () banked
  7629   007C7C  518D               	movf	?_getNV& (0+255),w,b
  7630   007C7E  6FA7               	movwf	_initServos$8087& (0+255),b
  7631                           
  7632                           ; BSR set to: 0
  7633   007C80  0EDE               	movlw	222
  7634   007C82  25A8               	addwf	initServos@io& (0+255),w,b
  7635   007C84  6FA4               	movwf	??_initServos& (0+255),b
  7636   007C86  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7637   007C88  0E03               	movlw	3
  7638   007C8A  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7639   007C8C  C0A4  F091         	movff	??_initServos,readNVM@index
  7640   007C90  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7641   007C94  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7642   007C96  0E00               	movlw	0
  7643   007C98  ECD0  F059         	call	_readNVM
  7644   007C9C  0100               	movlb	0	; () banked
  7645   007C9E  5191               	movf	?_readNVM& (0+255),w,b
  7646   007CA0  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7647   007CA2  C0A7  F0A2         	movff	_initServos$8087,setOutputPosition@type
  7648   007CA6  51A8               	movf	initServos@io& (0+255),w,b
  7649   007CA8  EC4D  F056         	call	_setOutputPosition
  7650   007CAC  D019               	goto	l22730
  7651   007CAE                     l22726:
  7652                           
  7653                           ; BSR set to: 0
  7654   007CAE  51A8               	movf	initServos@io& (0+255),w,b
  7655   007CB0  0D07               	mullw	7
  7656   007CB2  50F3               	movf	243,w,c
  7657   007CB4  0F12               	addlw	18
  7658   007CB6  EC52  F05E         	call	_getNV
  7659   007CBA  0100               	movlb	0	; () banked
  7660   007CBC  518D               	movf	?_getNV& (0+255),w,b
  7661   007CBE  6FA7               	movwf	_initServos$8087& (0+255),b
  7662   007CC0  51A8               	movf	initServos@io& (0+255),w,b
  7663   007CC2  0D07               	mullw	7
  7664   007CC4  50F3               	movf	243,w,c
  7665   007CC6  0F10               	addlw	16
  7666   007CC8  EC52  F05E         	call	_getNV
  7667   007CCC  0100               	movlb	0	; () banked
  7668   007CCE  518D               	movf	?_getNV& (0+255),w,b
  7669   007CD0  6FA6               	movwf	_initServos$8088& (0+255),b
  7670                           
  7671                           ; BSR set to: 0
  7672   007CD2  C0A7  F0A1         	movff	_initServos$8087,setOutputPosition@pos
  7673   007CD6  C0A6  F0A2         	movff	_initServos$8088,setOutputPosition@type
  7674   007CDA  51A8               	movf	initServos@io& (0+255),w,b
  7675   007CDC  EC4D  F056         	call	_setOutputPosition
  7676   007CE0                     l22730:
  7677   007CE0  0E00               	movlw	low _stepsPerPollSpeed
  7678   007CE2  0100               	movlb	0	; () banked
  7679   007CE4  25A8               	addwf	initServos@io& (0+255),w,b
  7680   007CE6  6ED9               	movwf	fsr2l,c
  7681   007CE8  6ADA               	clrf	fsr2h,c
  7682   007CEA  0E01               	movlw	high _stepsPerPollSpeed
  7683   007CEC  22DA               	addwfc	fsr2h,f,c
  7684   007CEE  6ADF               	clrf	indf2,c
  7685                           
  7686                           ; BSR set to: 0
  7687   007CF0  2BA8               	incf	initServos@io& (0+255),f,b
  7688                           
  7689                           ; BSR set to: 0
  7690   007CF2  0E0F               	movlw	15
  7691   007CF4  65A8               	cpfsgt	initServos@io& (0+255),b
  7692   007CF6  D786               	goto	l22712
  7693                           
  7694                           ; BSR set to: 0
  7695   007CF8  9EAA               	bcf	170,7,c	;volatile
  7696                           
  7697                           ; BSR set to: 0
  7698   007CFA  0E3F               	movlw	-193
  7699   007CFC  16CD               	andwf	205,f,c	;volatile
  7700   007CFE  50CD               	movf	205,w,c	;volatile
  7701   007D00  0BCF               	andlw	-49
  7702   007D02  0920               	iorlw	32
  7703   007D04  6ECD               	movwf	205,c	;volatile
  7704                           
  7705                           ; BSR set to: 0
  7706   007D06  86CD               	bsf	205,3,c	;volatile
  7707                           
  7708                           ; BSR set to: 0
  7709   007D08  82CD               	bsf	205,1,c	;volatile
  7710                           
  7711                           ; BSR set to: 0
  7712   007D0A  809D               	bsf	157,0,c	;volatile
  7713                           
  7714                           ; BSR set to: 0
  7715   007D0C  9EB0               	bcf	176,7,c	;volatile
  7716   007D0E  0E3F               	movlw	-193
  7717   007D10  16B1               	andwf	177,f,c	;volatile
  7718   007D12  50B1               	movf	177,w,c	;volatile
  7719   007D14  0BCF               	andlw	-49
  7720   007D16  0920               	iorlw	32
  7721   007D18  6EB1               	movwf	177,c	;volatile
  7722                           
  7723                           ; BSR set to: 0
  7724   007D1A  86B1               	bsf	177,3,c	;volatile
  7725                           
  7726                           ; BSR set to: 0
  7727   007D1C  82B1               	bsf	177,1,c	;volatile
  7728                           
  7729                           ; BSR set to: 0
  7730   007D1E  82A0               	bsf	160,1,c	;volatile
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;../servo.c: 175:     servoInBlock = io -1;
  7734   007D20  05A8               	decf	initServos@io& (0+255),w,b
  7735   007D22  6FC9               	movwf	_servoInBlock& (0+255),b
  7736                           
  7737                           ; BSR set to: 0
  7738   007D24  0012               	return		;funcret
  7739   007D26                     __end_of_initServos:
  7740                           	callstack 0
  7741                           
  7742 ;; *************** function _setOutputPosition *****************
  7743 ;; Defined at:
  7744 ;;		line 148 in file "../outputs.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  io              1    wreg     unsigned char 
  7747 ;;  pos             1   65[BANK0 ] unsigned char 
  7748 ;;  type            1   66[BANK0 ] unsigned char 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  io              1   67[BANK0 ] unsigned char 
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  1    wreg      void 
  7753 ;; Registers used:
  7754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7760 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7763 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7764 ;;Total ram usage:        3 bytes
  7765 ;; Hardware stack levels used: 1
  7766 ;; Hardware stack levels required when called: 14
  7767 ;; This function calls:
  7768 ;;		_getNV
  7769 ;;		_setDigitalOutput
  7770 ;;		_setOutputPin
  7771 ;;		_setServoPosition
  7772 ;; This function is called by:
  7773 ;;		_initServos
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text4
  7778   00AC9A                     __ptext4:
  7779                           	callstack 0
  7780   00AC9A                     _setOutputPosition:
  7781                           	callstack 14
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;incstack = 0
  7785                           ;setOutputPosition@io stored from wreg
  7786   00AC9A  0100               	movlb	0	; () banked
  7787   00AC9C  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7788                           
  7789                           ;../outputs.c: 149:     switch(type) {
  7790   00AC9E  D020               	goto	l21642
  7791   00ACA0                     l21630:
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;../outputs.c: 156:             setDigitalOutput(io, pos);
  7795   00ACA0  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7796   00ACA4  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7797   00ACA6  EC4A  F052         	call	_setDigitalOutput
  7798   00ACAA  0012               	return	
  7799   00ACAC                     l21634:
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;../outputs.c: 166:             setServoPosition(io, pos);
  7803   00ACAC  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7804   00ACB0  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7805   00ACB2  EC77  F061         	call	_setServoPosition
  7806                           
  7807                           ;../outputs.c: 167:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7808   00ACB6  0100               	movlb	0	; () banked
  7809   00ACB8  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7810   00ACBA  0D07               	mullw	7
  7811   00ACBC  50F3               	movf	243,w,c
  7812   00ACBE  0F11               	addlw	17
  7813   00ACC0  0B20               	andlw	32
  7814   00ACC2  EC52  F05E         	call	_getNV
  7815   00ACC6  0100               	movlb	0	; () banked
  7816   00ACC8  518D               	movf	?_getNV& (0+255),w,b
  7817   00ACCA  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7818   00ACCC  B4D8               	btfsc	status,2,c
  7819   00ACCE  D002               	goto	u22180
  7820   00ACD0  0E01               	movlw	1
  7821   00ACD2  D001               	goto	u22190
  7822   00ACD4                     u22180:
  7823   00ACD4  0E00               	movlw	0
  7824   00ACD6                     u22190:
  7825   00ACD6  6F91               	movwf	setOutputPin@state& (0+255),b
  7826   00ACD8  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7827   00ACDA  ECAB  F036         	call	_setOutputPin
  7828   00ACDE  0012               	return	
  7829   00ACE0                     l21642:
  7830   00ACE0  0100               	movlb	0	; () banked
  7831   00ACE2  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7832                           
  7833                           ; Switch size 1, requested type "simple"
  7834                           ; Number of cases is 7, Range of values is 0 to 6
  7835                           ; switch strategies available:
  7836                           ; Name         Instructions Cycles
  7837                           ; simple_byte           22    12 (average)
  7838                           ;	Chosen strategy is simple_byte
  7839   00ACE4  0A00               	xorlw	0	; case 0
  7840   00ACE6  B4D8               	btfsc	status,2,c
  7841   00ACE8  0012               	return	
  7842   00ACEA  0A01               	xorlw	1	; case 1
  7843   00ACEC  B4D8               	btfsc	status,2,c
  7844   00ACEE  D7D8               	goto	l21630
  7845   00ACF0  0A03               	xorlw	3	; case 2
  7846   00ACF2  B4D8               	btfsc	status,2,c
  7847   00ACF4  D7DB               	goto	l21634
  7848   00ACF6  0A01               	xorlw	1	; case 3
  7849   00ACF8  B4D8               	btfsc	status,2,c
  7850   00ACFA  D7D8               	goto	l21634
  7851   00ACFC  0A07               	xorlw	7	; case 4
  7852   00ACFE  B4D8               	btfsc	status,2,c
  7853   00AD00  D7D5               	goto	l21634
  7854   00AD02  0A01               	xorlw	1	; case 5
  7855   00AD04  B4D8               	btfsc	status,2,c
  7856   00AD06  0012               	return	
  7857   00AD08  0A03               	xorlw	3	; case 6
  7858   00AD0A  0012               	return	
  7859   00AD0C                     __end_of_setOutputPosition:
  7860                           	callstack 0
  7861                           
  7862 ;; *************** function _initOutputs *****************
  7863 ;; Defined at:
  7864 ;;		line 86 in file "../digitalOut.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  io              1   45[BANK0 ] unsigned char 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7881 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7882 ;;Total ram usage:        1 bytes
  7883 ;; Hardware stack levels used: 1
  7884 ;; Hardware stack levels required when called: 12
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_setup
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text5
  7893   00C0DA                     __ptext5:
  7894                           	callstack 0
  7895   00C0DA                     _initOutputs:
  7896                           	callstack 17
  7897                           
  7898                           ;../digitalOut.c: 88:     uint8_t io;;../digitalOut.c: 89:     for (io=0; io<16; io++) {
  7899                           
  7900                           ;incstack = 0
  7901   00C0DA  0E00               	movlw	0
  7902   00C0DC  0100               	movlb	0	; () banked
  7903   00C0DE  6F8D               	movwf	initOutputs@io& (0+255),b
  7904   00C0E0                     l15650:
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;../digitalOut.c: 90:        pulseDelays[io] = 0;
  7908   00C0E0  0EA4               	movlw	low _pulseDelays
  7909   00C0E2  258D               	addwf	initOutputs@io& (0+255),w,b
  7910   00C0E4  6ED9               	movwf	fsr2l,c
  7911   00C0E6  6ADA               	clrf	fsr2h,c
  7912   00C0E8  0E02               	movlw	high _pulseDelays
  7913   00C0EA  22DA               	addwfc	fsr2h,f,c
  7914   00C0EC  6ADF               	clrf	indf2,c
  7915                           
  7916                           ;../digitalOut.c: 91:        flashDelays[io] = 0;
  7917   00C0EE  0E30               	movlw	low _flashDelays
  7918   00C0F0  258D               	addwf	initOutputs@io& (0+255),w,b
  7919   00C0F2  6ED9               	movwf	fsr2l,c
  7920   00C0F4  6ADA               	clrf	fsr2h,c
  7921   00C0F6  0E01               	movlw	high _flashDelays
  7922   00C0F8  22DA               	addwfc	fsr2h,f,c
  7923   00C0FA  6ADF               	clrf	indf2,c
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;../digitalOut.c: 92:     }
  7927   00C0FC  2B8D               	incf	initOutputs@io& (0+255),f,b
  7928                           
  7929                           ; BSR set to: 0
  7930   00C0FE  0E0F               	movlw	15
  7931   00C100  658D               	cpfsgt	initOutputs@io& (0+255),b
  7932   00C102  D7EE               	goto	l15650
  7933   00C104  0012               	return	
  7934   00C106                     __end_of_initOutputs:
  7935                           	callstack 0
  7936                           
  7937 ;; *************** function _initInputScan *****************
  7938 ;; Defined at:
  7939 ;;		line 76 in file "../inputs.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  input           1   57[BANK0 ] unsigned char 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7955 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7956 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7957 ;;Total ram usage:        3 bytes
  7958 ;; Hardware stack levels used: 1
  7959 ;; Hardware stack levels required when called: 14
  7960 ;; This function calls:
  7961 ;;		_getNV
  7962 ;;		_readInput
  7963 ;;		_readNVM
  7964 ;; This function is called by:
  7965 ;;		_setup
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text6
  7970   0099E8                     __ptext6:
  7971                           	callstack 0
  7972   0099E8                     _initInputScan:
  7973                           	callstack 15
  7974                           
  7975                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;incstack = 0
  7979   0099E8  0E00               	movlw	0
  7980   0099EA  0100               	movlb	0	; () banked
  7981   0099EC  6FCE               	movwf	_io@inputs$F849& (0+255),b
  7982   0099EE                     l22756:
  7983                           
  7984                           ; BSR set to: 0
  7985   0099EE  0E0F               	movlw	15
  7986   0099F0  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
  7987   0099F2  D001               	goto	l22760
  7988   0099F4  0012               	return	
  7989   0099F6                     l22760:
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  7993   0099F6  51CE               	movf	_io@inputs$F849& (0+255),w,b
  7994   0099F8  ECB0  F03F         	call	_readInput
  7995   0099FC  0100               	movlb	0	; () banked
  7996   0099FE  6F99               	movwf	initInputScan@input& (0+255),b
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;../inputs.c: 79:         inputState[io] = input;
  8000   009A00  0E94               	movlw	low _inputState
  8001   009A02  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8002   009A04  6ED9               	movwf	fsr2l,c
  8003   009A06  6ADA               	clrf	fsr2h,c
  8004   009A08  0E02               	movlw	high _inputState
  8005   009A0A  22DA               	addwfc	fsr2h,f,c
  8006   009A0C  C099  FFDF         	movff	initInputScan@input,indf2
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  8010   009A10  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8011   009A12  0D07               	mullw	7
  8012   009A14  50F3               	movf	243,w,c
  8013   009A16  0F11               	addlw	17
  8014   009A18  EC52  F05E         	call	_getNV
  8015   009A1C  0100               	movlb	0	; () banked
  8016   009A1E  B18D               	btfsc	?_getNV& (0+255),0,b
  8017   009A20  D007               	goto	l22768
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;../inputs.c: 81:             input = !input;
  8021   009A22  5199               	movf	initInputScan@input& (0+255),w,b
  8022   009A24  A4D8               	btfss	status,2,c
  8023   009A26  D002               	goto	u23830
  8024   009A28  0E01               	movlw	1
  8025   009A2A  D001               	goto	u23840
  8026   009A2C                     u23830:
  8027   009A2C  0E00               	movlw	0
  8028   009A2E                     u23840:
  8029   009A2E  6F99               	movwf	initInputScan@input& (0+255),b
  8030   009A30                     l22768:
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;../inputs.c: 83:         outputState[io] = input;
  8034   009A30  0EB4               	movlw	low _outputState
  8035   009A32  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8036   009A34  6ED9               	movwf	fsr2l,c
  8037   009A36  6ADA               	clrf	fsr2h,c
  8038   009A38  0E02               	movlw	high _outputState
  8039   009A3A  22DA               	addwfc	fsr2h,f,c
  8040   009A3C  C099  FFDF         	movff	initInputScan@input,indf2
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  8044   009A40  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8045   009A42  0D07               	mullw	7
  8046   009A44  50F3               	movf	243,w,c
  8047   009A46  0F11               	addlw	17
  8048   009A48  EC52  F05E         	call	_getNV
  8049   009A4C  0100               	movlb	0	; () banked
  8050   009A4E  A98D               	btfss	?_getNV& (0+255),4,b
  8051   009A50  D017               	goto	l22774
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  8055   009A52  0EDE               	movlw	222
  8056   009A54  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8057   009A56  6F97               	movwf	??_initInputScan& (0+255),b
  8058   009A58  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8059   009A5A  0E03               	movlw	3
  8060   009A5C  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8061   009A5E  C097  F091         	movff	??_initInputScan,readNVM@index
  8062   009A62  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8063   009A66  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8064   009A68  0E00               	movlw	0
  8065   009A6A  ECD0  F059         	call	_readNVM
  8066   009A6E  0EB4               	movlw	low _outputState
  8067   009A70  0100               	movlb	0	; () banked
  8068   009A72  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8069   009A74  6ED9               	movwf	fsr2l,c
  8070   009A76  6ADA               	clrf	fsr2h,c
  8071   009A78  0E02               	movlw	high _outputState
  8072   009A7A  22DA               	addwfc	fsr2h,f,c
  8073   009A7C  C091  FFDF         	movff	?_readNVM,indf2
  8074   009A80                     l22774:
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;../inputs.c: 87:         delayCount[io] = 0;
  8078   009A80  0E84               	movlw	low _delayCount
  8079   009A82  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8080   009A84  6ED9               	movwf	fsr2l,c
  8081   009A86  6ADA               	clrf	fsr2h,c
  8082   009A88  0E02               	movlw	high _delayCount
  8083   009A8A  22DA               	addwfc	fsr2h,f,c
  8084   009A8C  6ADF               	clrf	indf2,c
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;../inputs.c: 88:     }
  8088   009A8E  2BCE               	incf	_io@inputs$F849& (0+255),f,b
  8089   009A90  D7AE               	goto	l22756
  8090   009A92                     __end_of_initInputScan:
  8091                           	callstack 0
  8092                           
  8093 ;; *************** function _powerUp *****************
  8094 ;; Defined at:
  8095 ;;		line 876 in file "../../VLCBlib_PIC/vlcb.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  i               1   14[BANK1 ] unsigned char 
  8100 ;;  divider         1    0        unsigned char 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8113 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8114 ;;Total ram usage:        5 bytes
  8115 ;; Hardware stack levels used: 1
  8116 ;; Hardware stack levels required when called: 18
  8117 ;; This function calls:
  8118 ;;		NULL
  8119 ;;		_ackPowerUp
  8120 ;;		_bootPowerUp
  8121 ;;		_canPowerUp
  8122 ;;		_consumer2QPowerUp
  8123 ;;		_initTicker
  8124 ;;		_initTimedResponse
  8125 ;;		_leds_powerUp
  8126 ;;		_mnsPowerUp
  8127 ;;		_nvPowerUp
  8128 ;;		_producerPowerUp
  8129 ;;		_teachPowerUp
  8130 ;; This function is called by:
  8131 ;;		_main
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text7
  8136   0088F0                     __ptext7:
  8137                           	callstack 0
  8138   0088F0                     _powerUp:
  8139                           	callstack 12
  8140                           
  8141                           ;../../VLCBlib_PIC/vlcb.c: 877:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 878:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 881:     initTicker(0);
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;incstack = 0
  8145   0088F0  0E00               	movlw	0
  8146   0088F2  ECAE  F05D         	call	_initTicker
  8147                           
  8148                           ;../../VLCBlib_PIC/vlcb.c: 882:     initTimedResponse();
  8149   0088F6  EC16  F063         	call	_initTimedResponse	;wreg free
  8150                           
  8151                           ;../../VLCBlib_PIC/vlcb.c: 883:     leds_powerUp();
  8152   0088FA  EC69  F05F         	call	_leds_powerUp	;wreg free
  8153                           
  8154                           ;../../VLCBlib_PIC/vlcb.c: 884:     timedResponseDelay = 5;
  8155   0088FE  0E05               	movlw	5
  8156   008900  0101               	movlb	1	; () banked
  8157   008902  6F64               	movwf	_timedResponseDelay& (0+255),b
  8158                           
  8159                           ; BSR set to: 1
  8160                           ;../../VLCBlib_PIC/vlcb.c: 886:     for (i=0; i<9; i++) {
  8161   008904  0E00               	movlw	0
  8162   008906  6FC8               	movwf	powerUp@i& (0+255),b
  8163   008908                     l24820:
  8164                           
  8165                           ; BSR set to: 1
  8166                           ;../../VLCBlib_PIC/vlcb.c: 887:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8167   008908  51C8               	movf	powerUp@i& (0+255),w,b
  8168   00890A  0D02               	mullw	2
  8169   00890C  0E69               	movlw	low _services
  8170   00890E  24F3               	addwf	243,w,c
  8171   008910  6EF6               	movwf	tblptrl,c
  8172   008912  0EEE               	movlw	high _services
  8173   008914  20F4               	addwfc	244,w,c
  8174   008916  6EF7               	movwf	tblptrh,c
  8175   008918                     	if	1	;There are 3 active tblptr bytes
  8176   008918  6AF8               	clrf	tblptru,c
  8177   00891A  0E00               	movlw	low (__mediumconst shr (0+16))
  8178   00891C  22F8               	addwfc	tblptru,f,c
  8179   00891E                     	endif
  8180   00891E  0009               	tblrd		*+
  8181   008920  50F5               	movf	tablat,w,c
  8182   008922  0009               	tblrd		*+
  8183   008924  10F5               	iorwf	tablat,w,c
  8184   008926  B4D8               	btfsc	status,2,c
  8185   008928  D04B               	goto	u26469
  8186                           
  8187                           ; BSR set to: 1
  8188   00892A  51C8               	movf	powerUp@i& (0+255),w,b
  8189   00892C  0D02               	mullw	2
  8190   00892E  0E69               	movlw	low _services
  8191   008930  24F3               	addwf	243,w,c
  8192   008932  6EF6               	movwf	tblptrl,c
  8193   008934  0EEE               	movlw	high _services
  8194   008936  20F4               	addwfc	244,w,c
  8195   008938  6EF7               	movwf	tblptrh,c
  8196   00893A                     	if	1	;There are 3 active tblptr bytes
  8197   00893A  6AF8               	clrf	tblptru,c
  8198   00893C  0E00               	movlw	low (__mediumconst shr (0+16))
  8199   00893E  22F8               	addwfc	tblptru,f,c
  8200   008940                     	endif
  8201   008940  0009               	tblrd		*+
  8202   008942  CFF5 F1C4          	movff	tablat,??_powerUp
  8203   008946  0009               	tblrd		*+
  8204   008948  CFF5 F1C5          	movff	tablat,??_powerUp+1
  8205   00894C  0E04               	movlw	4
  8206   00894E  27C4               	addwf	??_powerUp& (0+255),f,b
  8207   008950  0E00               	movlw	0
  8208   008952  23C5               	addwfc	(??_powerUp+1)& (0+255),f,b
  8209   008954  C1C4  FFF6         	movff	??_powerUp,tblptrl
  8210   008958  C1C5  FFF7         	movff	??_powerUp+1,tblptrh
  8211   00895C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8212   00895C  6AF8               	clrf	tblptru,c
  8213   00895E                     	endif
  8214   00895E                     	if	0	;tblptru may be non-zero
  8215   00895E                     	endif
  8216   00895E  0009               	tblrd		*+
  8217   008960  50F5               	movf	tablat,w,c
  8218   008962  0009               	tblrd		*+
  8219   008964  10F5               	iorwf	tablat,w,c
  8220   008966  B4D8               	btfsc	status,2,c
  8221   008968  D02B               	goto	u26469
  8222                           
  8223                           ; BSR set to: 1
  8224                           ;../../VLCBlib_PIC/vlcb.c: 888:             services[i]->powerUp();
  8225   00896A  51C8               	movf	powerUp@i& (0+255),w,b
  8226   00896C  0D02               	mullw	2
  8227   00896E  0E69               	movlw	low _services
  8228   008970  24F3               	addwf	243,w,c
  8229   008972  6EF6               	movwf	tblptrl,c
  8230   008974  0EEE               	movlw	high _services
  8231   008976  20F4               	addwfc	244,w,c
  8232   008978  6EF7               	movwf	tblptrh,c
  8233   00897A                     	if	1	;There are 3 active tblptr bytes
  8234   00897A  6AF8               	clrf	tblptru,c
  8235   00897C  0E00               	movlw	low (__mediumconst shr (0+16))
  8236   00897E  22F8               	addwfc	tblptru,f,c
  8237   008980                     	endif
  8238   008980  0009               	tblrd		*+
  8239   008982  CFF5 F1C4          	movff	tablat,??_powerUp
  8240   008986  0009               	tblrd		*+
  8241   008988  CFF5 F1C5          	movff	tablat,??_powerUp+1
  8242   00898C  0E04               	movlw	4
  8243   00898E  27C4               	addwf	??_powerUp& (0+255),f,b
  8244   008990  0E00               	movlw	0
  8245   008992  23C5               	addwfc	(??_powerUp+1)& (0+255),f,b
  8246   008994  C1C4  FFF6         	movff	??_powerUp,tblptrl
  8247   008998  C1C5  FFF7         	movff	??_powerUp+1,tblptrh
  8248   00899C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8249   00899C  6AF8               	clrf	tblptru,c
  8250   00899E                     	endif
  8251   00899E                     	if	0	;tblptru may be non-zero
  8252   00899E                     	endif
  8253   00899E  0009               	tblrd		*+
  8254   0089A0  CFF5 F1C6          	movff	tablat,??_powerUp+2
  8255   0089A4  0009               	tblrd		*+
  8256   0089A6  CFF5 F1C7          	movff	tablat,??_powerUp+3
  8257   0089AA  D801               	call	u26468
  8258   0089AC  D009               	goto	u26469
  8259   0089AE                     u26468:
  8260   0089AE  0005               	push	
  8261   0089B0  6EFA               	movwf	pclath,c
  8262   0089B2  51C6               	movf	(??_powerUp+2)& (0+255),w,b
  8263   0089B4  6EFD               	movwf	tosl,c
  8264   0089B6  51C7               	movf	(??_powerUp+3)& (0+255),w,b
  8265   0089B8  6EFE               	movwf	tosh,c
  8266   0089BA  6AFF               	clrf	tosu,c
  8267   0089BC  50FA               	movf	pclath,w,c
  8268   0089BE  0012               	return		;indir
  8269   0089C0                     u26469:
  8270                           
  8271                           ;../../VLCBlib_PIC/vlcb.c: 890:     }
  8272   0089C0  0101               	movlb	1	; () banked
  8273   0089C2  2BC8               	incf	powerUp@i& (0+255),f,b
  8274                           
  8275                           ; BSR set to: 1
  8276   0089C4  0E08               	movlw	8
  8277   0089C6  65C8               	cpfsgt	powerUp@i& (0+255),b
  8278   0089C8  D79F               	goto	l24820
  8279   0089CA  0012               	return	
  8280   0089CC                     __end_of_powerUp:
  8281                           	callstack 0
  8282                           
  8283 ;; *************** function _producerPowerUp *****************
  8284 ;; Defined at:
  8285 ;;		line 108 in file "../../VLCBlib_PIC/event_producer_happening.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;		None
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  i               1   45[BANK0 ] unsigned char 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      void 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8302 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8303 ;;Total ram usage:        1 bytes
  8304 ;; Hardware stack levels used: 1
  8305 ;; Hardware stack levels required when called: 12
  8306 ;; This function calls:
  8307 ;;		Nothing
  8308 ;; This function is called by:
  8309 ;;		_powerUp
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text8
  8314   00C022                     __ptext8:
  8315                           	callstack 0
  8316   00C022                     _producerPowerUp:
  8317                           	callstack 17
  8318                           
  8319                           ;../../VLCBlib_PIC/event_producer_happening.c: 109:     uint8_t i;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 110:     for (i=1; i <= 1; i++) {
  8320                           
  8321                           ; BSR set to: 1
  8322                           ;incstack = 0
  8323   00C022  0E01               	movlw	1
  8324   00C024  0100               	movlb	0	; () banked
  8325   00C026  6F8D               	movwf	producerPowerUp@i& (0+255),b
  8326   00C028                     l24664:
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;../../VLCBlib_PIC/event_producer_happening.c: 111:         producerDiagnostics[i].asUin
      +                          t = 0;
  8330   00C028  518D               	movf	producerPowerUp@i& (0+255),w,b
  8331   00C02A  0D02               	mullw	2
  8332   00C02C  0EAA               	movlw	low _producerDiagnostics
  8333   00C02E  24F3               	addwf	243,w,c
  8334   00C030  6ED9               	movwf	fsr2l,c
  8335   00C032  0E01               	movlw	high _producerDiagnostics
  8336   00C034  20F4               	addwfc	prodh,w,c
  8337   00C036  6EDA               	movwf	fsr2h,c
  8338   00C038  6ADE               	clrf	postinc2,c
  8339   00C03A  6ADD               	clrf	postdec2,c
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;../../VLCBlib_PIC/event_producer_happening.c: 112:     }
  8343   00C03C  2B8D               	incf	producerPowerUp@i& (0+255),f,b
  8344                           
  8345                           ; BSR set to: 0
  8346   00C03E  0E01               	movlw	1
  8347   00C040  658D               	cpfsgt	producerPowerUp@i& (0+255),b
  8348   00C042  D7F2               	goto	l24664
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;../../VLCBlib_PIC/event_producer_happening.c: 113:     producerDiagnostics[0].asUint = 
      +                          1;
  8352   00C044  0E00               	movlw	0
  8353   00C046  0101               	movlb	1	; () banked
  8354   00C048  6FAB               	movwf	(_producerDiagnostics+1)& (0+255),b
  8355   00C04A  0E01               	movlw	1
  8356   00C04C  6FAA               	movwf	_producerDiagnostics& (0+255),b
  8357                           
  8358                           ; BSR set to: 1
  8359   00C04E  0012               	return		;funcret
  8360   00C050                     __end_of_producerPowerUp:
  8361                           	callstack 0
  8362                           
  8363 ;; *************** function _canPowerUp *****************
  8364 ;; Defined at:
  8365 ;;		line 217 in file "../../VLCBlib_PIC/can18_ecan.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  temp            2   56[BANK0 ] int 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;Total ram usage:        3 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; Hardware stack levels required when called: 14
  8386 ;; This function calls:
  8387 ;;		_readNVM
  8388 ;;		_tickGet
  8389 ;; This function is called by:
  8390 ;;		_powerUp
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text9
  8395   006F14                     __ptext9:
  8396                           	callstack 0
  8397   006F14                     _canPowerUp:
  8398                           	callstack 15
  8399                           
  8400                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 221:
      +                               rxQueue.readIndex = 0;
  8401                           
  8402                           ; BSR set to: 1
  8403                           ;incstack = 0
  8404   006F14  0E00               	movlw	0
  8405   006F16  6E51               	movwf	(_rxQueue+2)^0,c
  8406                           
  8407                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     rxQueue.writeIndex = 0;
  8408   006F18  0E00               	movlw	0
  8409   006F1A  6E52               	movwf	(_rxQueue+3)^0,c
  8410                           
  8411                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     rxQueue.messages = rxBuffers;
  8412   006F1C  0EC8               	movlw	low _rxBuffers
  8413   006F1E  6E4F               	movwf	_rxQueue^0,c
  8414   006F20  0E07               	movlw	high _rxBuffers
  8415   006F22  6E50               	movwf	(_rxQueue+1)^0,c
  8416                           
  8417                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     rxQueue.size = 32;
  8418   006F24  0E20               	movlw	32
  8419   006F26  6E53               	movwf	(_rxQueue+4)^0,c
  8420                           
  8421                           ;../../VLCBlib_PIC/can18_ecan.c: 226:     txQueue.readIndex = 0;
  8422   006F28  0E00               	movlw	0
  8423   006F2A  6E4C               	movwf	(_txQueue+2)^0,c
  8424                           
  8425                           ;../../VLCBlib_PIC/can18_ecan.c: 227:     txQueue.writeIndex = 0;
  8426   006F2C  0E00               	movlw	0
  8427   006F2E  6E4D               	movwf	(_txQueue+3)^0,c
  8428                           
  8429                           ;../../VLCBlib_PIC/can18_ecan.c: 228:     txQueue.messages = txBuffers;
  8430   006F30  0E00               	movlw	low _txBuffers
  8431   006F32  6E4A               	movwf	_txQueue^0,c
  8432   006F34  0E05               	movlw	high _txBuffers
  8433   006F36  6E4B               	movwf	(_txQueue+1)^0,c
  8434                           
  8435                           ;../../VLCBlib_PIC/can18_ecan.c: 229:     txQueue.size = 8;
  8436   006F38  0E08               	movlw	8
  8437   006F3A  6E4E               	movwf	(_txQueue+4)^0,c
  8438                           
  8439                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8440   006F3C  0EFE               	movlw	254
  8441   006F3E  0100               	movlb	0	; () banked
  8442   006F40  6F91               	movwf	readNVM@index& (0+255),b
  8443   006F42  0E03               	movlw	3
  8444   006F44  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8445   006F46  0E00               	movlw	0
  8446   006F48  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8447   006F4A  0E00               	movlw	0
  8448   006F4C  ECD0  F059         	call	_readNVM
  8449   006F50  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8450   006F54  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8451                           
  8452                           ;../../VLCBlib_PIC/can18_ecan.c: 234:     if (temp < 0) {
  8453   006F58  0100               	movlb	0	; () banked
  8454   006F5A  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8455   006F5C  D003               	goto	l2444
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;../../VLCBlib_PIC/can18_ecan.c: 236:         canId = 0;
  8459   006F5E  0E00               	movlw	0
  8460   006F60  6FC1               	movwf	_canId& (0+255),b
  8461                           
  8462                           ;../../VLCBlib_PIC/can18_ecan.c: 237:     } else {
  8463   006F62  D002               	goto	l24152
  8464   006F64                     l2444:
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;../../VLCBlib_PIC/can18_ecan.c: 238:         canId = (uint8_t)temp;
  8468   006F64  C098  F0C1         	movff	canPowerUp@temp,_canId
  8469   006F68                     l24152:
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;../../VLCBlib_PIC/can18_ecan.c: 242:     for (temp=1; temp <= 18; temp++) {
  8473   006F68  0E00               	movlw	0
  8474   006F6A  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8475   006F6C  0E01               	movlw	1
  8476   006F6E  6F98               	movwf	canPowerUp@temp& (0+255),b
  8477   006F70                     l24158:
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;../../VLCBlib_PIC/can18_ecan.c: 243:         canDiagnostics[temp].asUint = 0;
  8481   006F70  90D8               	bcf	status,0,c
  8482   006F72  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8483   006F74  6ED9               	movwf	fsr2l,c
  8484   006F76  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8485   006F78  6EDA               	movwf	fsr2h,c
  8486   006F7A  0E67               	movlw	low _canDiagnostics
  8487   006F7C  26D9               	addwf	fsr2l,f,c
  8488   006F7E  0E01               	movlw	high _canDiagnostics
  8489   006F80  22DA               	addwfc	fsr2h,f,c
  8490   006F82  6ADE               	clrf	postinc2,c
  8491   006F84  6ADD               	clrf	postdec2,c
  8492                           
  8493                           ; BSR set to: 0
  8494                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     }
  8495   006F86  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8496   006F88  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8497                           
  8498                           ; BSR set to: 0
  8499   006F8A  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8500   006F8C  D7F1               	goto	l24158
  8501   006F8E  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8502   006F90  E104               	bnz	u25710
  8503   006F92  0E13               	movlw	19
  8504   006F94  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8505   006F96  A0D8               	btfss	status,0,c
  8506   006F98  D7EB               	goto	l24158
  8507   006F9A                     u25710:
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;../../VLCBlib_PIC/can18_ecan.c: 245:     canDiagnostics[0x00].asUint = 18;
  8511   006F9A  0E00               	movlw	0
  8512   006F9C  0101               	movlb	1	; () banked
  8513   006F9E  6F68               	movwf	(_canDiagnostics+1)& (0+255),b
  8514   006FA0  0E12               	movlw	18
  8515   006FA2  6F67               	movwf	_canDiagnostics& (0+255),b
  8516                           
  8517                           ;../../VLCBlib_PIC/can18_ecan.c: 248:     canTransmitFailed=0;
  8518   006FA4  0E00               	movlw	0
  8519   006FA6  0100               	movlb	0	; () banked
  8520   006FA8  6FC0               	movwf	_canTransmitFailed& (0+255),b
  8521                           
  8522                           ;../../VLCBlib_PIC/can18_ecan.c: 249:     IPR5 = 0;
  8523   006FAA  0E00               	movlw	0
  8524   006FAC  6E78               	movwf	120,c	;volatile
  8525                           
  8526                           ;../../VLCBlib_PIC/can18_ecan.c: 252:     CANCON = 0b10000000;
  8527   006FAE  0E80               	movlw	128
  8528   006FB0  6E6F               	movwf	111,c	;volatile
  8529   006FB2                     l2448:
  8530   006FB2  AE6E               	btfss	110,7,c	;volatile
  8531   006FB4  D7FE               	goto	l2448
  8532                           
  8533                           ;../../VLCBlib_PIC/can18_ecan.c: 256:     ECANCON = 0b10110000;
  8534   006FB6  0EB0               	movlw	176
  8535   006FB8  6E72               	movwf	114,c	;volatile
  8536                           
  8537                           ;../../VLCBlib_PIC/can18_ecan.c: 257:     BSEL0 = 0;
  8538   006FBA  0E00               	movlw	0
  8539   006FBC  010E               	movlb	14	; () banked
  8540   006FBE  6F7D               	movwf	125,b	;volatile
  8541                           
  8542                           ;../../VLCBlib_PIC/can18_ecan.c: 281:       BRGCON1 = 0b00001111;
  8543   006FC0  0E0F               	movlw	15
  8544   006FC2  6F43               	movwf	67,b	;volatile
  8545                           
  8546                           ;../../VLCBlib_PIC/can18_ecan.c: 284:     BRGCON2 = 0b10011110;
  8547   006FC4  0E9E               	movlw	158
  8548   006FC6  6F44               	movwf	68,b	;volatile
  8549                           
  8550                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     BRGCON3 = 0b00000011;
  8551   006FC8  0E03               	movlw	3
  8552   006FCA  6F45               	movwf	69,b	;volatile
  8553                           
  8554                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     CIOCON = 0b00100000;
  8555   006FCC  0E20               	movlw	32
  8556   006FCE  6E70               	movwf	112,c	;volatile
  8557                           
  8558                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXM0SIDH = 0;
  8559   006FD0  0E00               	movlw	0
  8560   006FD2  6FF8               	movwf	248,b	;volatile
  8561                           
  8562                           ;../../VLCBlib_PIC/can18_ecan.c: 291:     RXM0SIDL = 0x08;
  8563   006FD4  0E08               	movlw	8
  8564   006FD6  6FF9               	movwf	249,b	;volatile
  8565                           
  8566                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXM0EIDH = 0;
  8567   006FD8  0E00               	movlw	0
  8568   006FDA  6FFA               	movwf	250,b	;volatile
  8569                           
  8570                           ;../../VLCBlib_PIC/can18_ecan.c: 293:     RXM0EIDL = 0;
  8571   006FDC  0E00               	movlw	0
  8572   006FDE  6FFB               	movwf	251,b	;volatile
  8573                           
  8574                           ;../../VLCBlib_PIC/can18_ecan.c: 295:     RXF0SIDL = 0x00;
  8575   006FE0  0E00               	movlw	0
  8576   006FE2  6FE1               	movwf	225,b	;volatile
  8577                           
  8578                           ;../../VLCBlib_PIC/can18_ecan.c: 297:     RXFBCON0 = 0;
  8579   006FE4  0E00               	movlw	0
  8580   006FE6  6F71               	movwf	113,b	;volatile
  8581                           
  8582                           ;../../VLCBlib_PIC/can18_ecan.c: 299:     MSEL0 = 0;
  8583   006FE8  0E00               	movlw	0
  8584   006FEA  6F79               	movwf	121,b	;volatile
  8585                           
  8586                           ;../../VLCBlib_PIC/can18_ecan.c: 301:     RXFCON0 = 1;
  8587   006FEC  0E01               	movlw	1
  8588   006FEE  6F46               	movwf	70,b	;volatile
  8589                           
  8590                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     RXB0CON = 0x00;
  8591   006FF0  0E00               	movlw	0
  8592   006FF2  6E60               	movwf	96,c	;volatile
  8593                           
  8594                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     RXB1CON = 0x00;
  8595   006FF4  0E00               	movlw	0
  8596   006FF6  010F               	movlb	15	; () banked
  8597   006FF8  6F30               	movwf	48,b	;volatile
  8598                           
  8599                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B0CON = 0;
  8600   006FFA  0E00               	movlw	0
  8601   006FFC  010E               	movlb	14	; () banked
  8602   006FFE  6F80               	movwf	128,b	;volatile
  8603                           
  8604                           ;../../VLCBlib_PIC/can18_ecan.c: 311:     B1CON = 0;
  8605   007000  0E00               	movlw	0
  8606   007002  6F90               	movwf	144,b	;volatile
  8607                           
  8608                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     B2CON = 0;
  8609   007004  0E00               	movlw	0
  8610   007006  6FA0               	movwf	160,b	;volatile
  8611                           
  8612                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     B3CON = 0;
  8613   007008  0E00               	movlw	0
  8614   00700A  6FB0               	movwf	176,b	;volatile
  8615                           
  8616                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     B4CON = 0;
  8617   00700C  0E00               	movlw	0
  8618   00700E  6FC0               	movwf	192,b	;volatile
  8619                           
  8620                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     B5CON = 0;
  8621   007010  0E00               	movlw	0
  8622   007012  6FD0               	movwf	208,b	;volatile
  8623                           
  8624                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     BIE0 = 0;
  8625   007014  0E00               	movlw	0
  8626   007016  6F7E               	movwf	126,b	;volatile
  8627                           
  8628                           ; BSR set to: 14
  8629                           ;../../VLCBlib_PIC/can18_ecan.c: 318:     TXBIEbits.TXB0IE = 1;
  8630   007018  857F               	bsf	127,2,b	;volatile
  8631                           
  8632                           ; BSR set to: 14
  8633                           ;../../VLCBlib_PIC/can18_ecan.c: 319:     TXBIEbits.TXB1IE = 0;
  8634   00701A  977F               	bcf	127,3,b	;volatile
  8635                           
  8636                           ; BSR set to: 14
  8637                           ;../../VLCBlib_PIC/can18_ecan.c: 320:     TXBIEbits.TXB2IE = 0;
  8638   00701C  997F               	bcf	127,4,b	;volatile
  8639                           
  8640                           ;../../VLCBlib_PIC/can18_ecan.c: 322:     CANCON = 0;
  8641   00701E  0E00               	movlw	0
  8642   007020  6E6F               	movwf	111,c	;volatile
  8643   007022                     l2451:
  8644   007022  BE6E               	btfsc	110,7,c	;volatile
  8645   007024  D7FE               	goto	l2451
  8646                           
  8647                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0CON = 0;
  8648   007026  0E00               	movlw	0
  8649   007028  010F               	movlb	15	; () banked
  8650   00702A  6F20               	movwf	32,b	;volatile
  8651                           
  8652                           ; BSR set to: 15
  8653                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0CONbits.TXPRI0 = 0;
  8654   00702C  9120               	bcf	32,0,b	;volatile
  8655                           
  8656                           ; BSR set to: 15
  8657                           ;../../VLCBlib_PIC/can18_ecan.c: 329:     TXB0CONbits.TXPRI1 = 0;
  8658   00702E  9320               	bcf	32,1,b	;volatile
  8659                           
  8660                           ;../../VLCBlib_PIC/can18_ecan.c: 330:     TXB0DLC = 0;
  8661   007030  0E00               	movlw	0
  8662   007032  6F25               	movwf	37,b	;volatile
  8663                           
  8664                           ;../../VLCBlib_PIC/can18_ecan.c: 332:     TXB0SIDH = 0;
  8665   007034  0E00               	movlw	0
  8666   007036  6F21               	movwf	33,b	;volatile
  8667                           
  8668                           ;../../VLCBlib_PIC/can18_ecan.c: 333:     TXB0SIDL = 0;
  8669   007038  0E00               	movlw	0
  8670   00703A  6F22               	movwf	34,b	;volatile
  8671                           
  8672                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1CON = 0;
  8673   00703C  0E00               	movlw	0
  8674   00703E  6F10               	movwf	16,b	;volatile
  8675                           
  8676                           ; BSR set to: 15
  8677                           ;../../VLCBlib_PIC/can18_ecan.c: 338:     TXB1CONbits.TXPRI0 = 0;
  8678   007040  9110               	bcf	16,0,b	;volatile
  8679                           
  8680                           ; BSR set to: 15
  8681                           ;../../VLCBlib_PIC/can18_ecan.c: 339:     TXB1CONbits.TXPRI1 = 1;
  8682   007042  8310               	bsf	16,1,b	;volatile
  8683                           
  8684                           ;../../VLCBlib_PIC/can18_ecan.c: 340:     TXB1DLC = 0x40;
  8685   007044  0E40               	movlw	64
  8686   007046  6F15               	movwf	21,b	;volatile
  8687                           
  8688                           ; BSR set to: 15
  8689                           ;../../VLCBlib_PIC/can18_ecan.c: 341:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8690   007048  0E8A               	movlw	low (_canPri+4)
  8691   00704A  6EF6               	movwf	tblptrl,c
  8692   00704C  0EEE               	movlw	high (_canPri+4)
  8693   00704E  6EF7               	movwf	tblptrh,c
  8694   007050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8695   007050  6AF8               	clrf	tblptru,c
  8696   007052                     	endif
  8697   007052                     	if	0	;tblptru may be non-zero
  8698   007052                     	endif
  8699   007052  0008               	tblrd		*
  8700   007054  CFF5 F097          	movff	tablat,??_canPowerUp
  8701   007058  0100               	movlb	0	; () banked
  8702   00705A  39C1               	swapf	_canId& (0+255),w,b
  8703   00705C  46E8               	rlncf	wreg,f,c
  8704   00705E  0B1F               	andlw	31
  8705   007060  0B0F               	andlw	15
  8706   007062  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8707   007064  010F               	movlb	15	; () banked
  8708   007066  6F11               	movwf	17,b	;volatile
  8709                           
  8710                           ; BSR set to: 15
  8711                           ;../../VLCBlib_PIC/can18_ecan.c: 342:     TXB1SIDL = TXB0SIDL;
  8712   007068  CF22 FF12          	movff	3874,3858	;volatile
  8713                           
  8714                           ; BSR set to: 15
  8715                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2CON = 0;
  8716   00706C  0E00               	movlw	0
  8717   00706E  6F00               	movwf	0,b	;volatile
  8718                           
  8719                           ; BSR set to: 15
  8720                           ;../../VLCBlib_PIC/can18_ecan.c: 347:     TXB2CONbits.TXPRI0 = 1;
  8721   007070  8100               	bsf	0,0,b	;volatile
  8722                           
  8723                           ; BSR set to: 15
  8724                           ;../../VLCBlib_PIC/can18_ecan.c: 348:     TXB2CONbits.TXPRI1 = 1;
  8725   007072  8300               	bsf	0,1,b	;volatile
  8726                           
  8727                           ; BSR set to: 15
  8728                           ;../../VLCBlib_PIC/can18_ecan.c: 349:     TXB2DLC = 0;
  8729   007074  0E00               	movlw	0
  8730   007076  6F05               	movwf	5,b	;volatile
  8731                           
  8732                           ; BSR set to: 15
  8733                           ;../../VLCBlib_PIC/can18_ecan.c: 350:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8734   007078  0E8A               	movlw	low (_canPri+4)
  8735   00707A  6EF6               	movwf	tblptrl,c
  8736   00707C  0EEE               	movlw	high (_canPri+4)
  8737   00707E  6EF7               	movwf	tblptrh,c
  8738   007080                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8739   007080  6AF8               	clrf	tblptru,c
  8740   007082                     	endif
  8741   007082                     	if	0	;tblptru may be non-zero
  8742   007082                     	endif
  8743   007082  0008               	tblrd		*
  8744   007084  CFF5 F097          	movff	tablat,??_canPowerUp
  8745   007088  0100               	movlb	0	; () banked
  8746   00708A  39C1               	swapf	_canId& (0+255),w,b
  8747   00708C  46E8               	rlncf	wreg,f,c
  8748   00708E  0B1F               	andlw	31
  8749   007090  0B0F               	andlw	15
  8750   007092  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8751   007094  010F               	movlb	15	; () banked
  8752   007096  6F01               	movwf	1,b	;volatile
  8753                           
  8754                           ; BSR set to: 15
  8755                           ;../../VLCBlib_PIC/can18_ecan.c: 351:     TXB2SIDL = TXB0SIDL;
  8756   007098  CF22 FF02          	movff	3874,3842	;volatile
  8757                           
  8758                           ;../../VLCBlib_PIC/can18_ecan.c: 355:     enumerationState = NO_ENUMERATION;
  8759   00709C  0E00               	movlw	0
  8760   00709E  0100               	movlb	0	; () banked
  8761   0070A0  6FBF               	movwf	_enumerationState& (0+255),b
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     enumerationStartTime.val = tickGet();
  8765   0070A2  ECE4  F05A         	call	_tickGet	;wreg free
  8766   0070A6  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
  8767   0070AA  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
  8768   0070AE  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
  8769   0070B2  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
  8770                           
  8771                           ;../../VLCBlib_PIC/can18_ecan.c: 359:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8772   0070B6  C02B  F02F         	movff	_enumerationStartTime,_canTransmitTimeout
  8773   0070BA  C02C  F030         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8774   0070BE  C02D  F031         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8775   0070C2  C02E  F032         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8776                           
  8777                           ;../../VLCBlib_PIC/can18_ecan.c: 361:     PIE5bits.FIFOWMIE = 1;
  8778   0070C6  8076               	bsf	118,0,c	;volatile
  8779                           
  8780                           ;../../VLCBlib_PIC/can18_ecan.c: 362:     PIE5bits.TXBnIE = 1;
  8781   0070C8  8876               	bsf	118,4,c	;volatile
  8782                           
  8783                           ;../../VLCBlib_PIC/can18_ecan.c: 363:     PIE5bits.ERRIE = 1;
  8784   0070CA  8A76               	bsf	118,5,c	;volatile
  8785   0070CC  0012               	return		;funcret
  8786   0070CE                     __end_of_canPowerUp:
  8787                           	callstack 0
  8788                           
  8789 ;; *************** function _nvPowerUp *****************
  8790 ;; Defined at:
  8791 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;		None
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  i               1   60[BANK0 ] unsigned char 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      void 
  8798 ;; Registers used:
  8799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8808 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8809 ;;Total ram usage:        1 bytes
  8810 ;; Hardware stack levels used: 1
  8811 ;; Hardware stack levels required when called: 15
  8812 ;; This function calls:
  8813 ;;		_loadNvCache
  8814 ;; This function is called by:
  8815 ;;		_powerUp
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text10
  8820   00BE3C                     __ptext10:
  8821                           	callstack 0
  8822   00BE3C                     _nvPowerUp:
  8823                           	callstack 14
  8824                           
  8825                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
  8826                           
  8827                           ;incstack = 0
  8828   00BE3C  0E01               	movlw	1
  8829   00BE3E  0100               	movlb	0	; () banked
  8830   00BE40  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8831   00BE42                     l23900:
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
  8835   00BE42  519C               	movf	nvPowerUp@i& (0+255),w,b
  8836   00BE44  0D02               	mullw	2
  8837   00BE46  0EA4               	movlw	low _nvDiagnostics
  8838   00BE48  24F3               	addwf	243,w,c
  8839   00BE4A  6ED9               	movwf	fsr2l,c
  8840   00BE4C  0E01               	movlw	high _nvDiagnostics
  8841   00BE4E  20F4               	addwfc	prodh,w,c
  8842   00BE50  6EDA               	movwf	fsr2h,c
  8843   00BE52  6ADE               	clrf	postinc2,c
  8844   00BE54  6ADD               	clrf	postdec2,c
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;../../VLCBlib_PIC/nv.c: 141:     }
  8848   00BE56  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8849                           
  8850                           ; BSR set to: 0
  8851   00BE58  0E02               	movlw	2
  8852   00BE5A  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8853   00BE5C  D7F2               	goto	l23900
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
  8857   00BE5E  0E00               	movlw	0
  8858   00BE60  0101               	movlb	1	; () banked
  8859   00BE62  6FA5               	movwf	(_nvDiagnostics+1)& (0+255),b
  8860   00BE64  0E02               	movlw	2
  8861   00BE66  6FA4               	movwf	_nvDiagnostics& (0+255),b
  8862                           
  8863                           ; BSR set to: 1
  8864                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
  8865   00BE68  EC1C  F05D         	call	_loadNvCache	;wreg free
  8866   00BE6C  0012               	return		;funcret
  8867   00BE6E                     __end_of_nvPowerUp:
  8868                           	callstack 0
  8869                           
  8870 ;; *************** function _mnsPowerUp *****************
  8871 ;; Defined at:
  8872 ;;		line 295 in file "../../VLCBlib_PIC/mns.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;		None
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;  temp            2   56[BANK0 ] int 
  8877 ;;  i               1   55[BANK0 ] unsigned char 
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  1    wreg      void 
  8880 ;; Registers used:
  8881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8888 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8890 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8891 ;;Total ram usage:        3 bytes
  8892 ;; Hardware stack levels used: 1
  8893 ;; Hardware stack levels required when called: 14
  8894 ;; This function calls:
  8895 ;;		_readNVM
  8896 ;;		_setLEDsByMode
  8897 ;;		_tickGet
  8898 ;; This function is called by:
  8899 ;;		_powerUp
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text11
  8904   007E4A                     __ptext11:
  8905                           	callstack 0
  8906   007E4A                     _mnsPowerUp:
  8907                           	callstack 15
  8908                           
  8909                           ;../../VLCBlib_PIC/mns.c: 296:     int temp;;../../VLCBlib_PIC/mns.c: 297:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 299:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8910                           
  8911                           ;incstack = 0
  8912   007E4A  0EFD               	movlw	253
  8913   007E4C  0100               	movlb	0	; () banked
  8914   007E4E  6F91               	movwf	readNVM@index& (0+255),b
  8915   007E50  0E03               	movlw	3
  8916   007E52  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8917   007E54  0E00               	movlw	0
  8918   007E56  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8919   007E58  0E00               	movlw	0
  8920   007E5A  ECD0  F059         	call	_readNVM
  8921   007E5E  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8922   007E62  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8923                           
  8924                           ;../../VLCBlib_PIC/mns.c: 300:     if (temp < 0) {
  8925   007E66  0100               	movlb	0	; () banked
  8926   007E68  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8927   007E6A  D005               	goto	l1435
  8928   007E6C                     u24870:
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;../../VLCBlib_PIC/mns.c: 301:         nn.bytes.hi = 0;
  8932   007E6C  0E00               	movlw	0
  8933   007E6E  6FBE               	movwf	(_nn+1)& (0+255),b
  8934                           
  8935                           ;../../VLCBlib_PIC/mns.c: 302:         nn.bytes.lo = 0;
  8936   007E70  0E00               	movlw	0
  8937   007E72  6FBD               	movwf	_nn& (0+255),b
  8938                           
  8939                           ;../../VLCBlib_PIC/mns.c: 303:     } else {
  8940   007E74  D014               	goto	l23410
  8941   007E76                     l1435:
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.hi = (uint8_t)temp;
  8945   007E76  C098  F0BE         	movff	mnsPowerUp@temp,_nn+1
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;../../VLCBlib_PIC/mns.c: 305:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8949   007E7A  0EFC               	movlw	252
  8950   007E7C  6F91               	movwf	readNVM@index& (0+255),b
  8951   007E7E  0E03               	movlw	3
  8952   007E80  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8953   007E82  0E00               	movlw	0
  8954   007E84  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8955   007E86  0E00               	movlw	0
  8956   007E88  ECD0  F059         	call	_readNVM
  8957   007E8C  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8958   007E90  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8959                           
  8960                           ;../../VLCBlib_PIC/mns.c: 306:         if (temp < 0) {
  8961   007E94  0100               	movlb	0	; () banked
  8962   007E96  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8963   007E98  D7E9               	goto	u24870
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;../../VLCBlib_PIC/mns.c: 310:             nn.bytes.lo = (uint8_t)temp;
  8967   007E9A  C098  F0BD         	movff	mnsPowerUp@temp,_nn
  8968   007E9E                     l23410:
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;../../VLCBlib_PIC/mns.c: 313:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  8972   007E9E  0EFB               	movlw	251
  8973   007EA0  6F91               	movwf	readNVM@index& (0+255),b
  8974   007EA2  0E03               	movlw	3
  8975   007EA4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8976   007EA6  0E00               	movlw	0
  8977   007EA8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8978   007EAA  0E00               	movlw	0
  8979   007EAC  ECD0  F059         	call	_readNVM
  8980   007EB0  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8981   007EB4  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8982                           
  8983                           ;../../VLCBlib_PIC/mns.c: 314:     if (temp < 0) {
  8984   007EB8  0100               	movlb	0	; () banked
  8985   007EBA  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8986   007EBC  D002               	goto	l1439
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;../../VLCBlib_PIC/mns.c: 315:         mode_state = MODE_UNINITIALISED;
  8990   007EBE  69C5               	setf	_mode_state& (0+255),b
  8991                           
  8992                           ;../../VLCBlib_PIC/mns.c: 316:     } else {
  8993   007EC0  D002               	goto	l1440
  8994   007EC2                     l1439:
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = (uint8_t)temp;
  8998   007EC2  C098  F0C5         	movff	mnsPowerUp@temp,_mode_state
  8999   007EC6                     l1440:
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;../../VLCBlib_PIC/mns.c: 319:     setupModePreviousMode = mode_state;
  9003   007EC6  C0C5  F165         	movff	_mode_state,_setupModePreviousMode
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;../../VLCBlib_PIC/mns.c: 320:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
  9007   007ECA  0EF9               	movlw	249
  9008   007ECC  6F91               	movwf	readNVM@index& (0+255),b
  9009   007ECE  0E03               	movlw	3
  9010   007ED0  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9011   007ED2  0E00               	movlw	0
  9012   007ED4  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9013   007ED6  0E00               	movlw	0
  9014   007ED8  ECD0  F059         	call	_readNVM
  9015   007EDC  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  9016   007EE0  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  9017                           
  9018                           ;../../VLCBlib_PIC/mns.c: 321:     if (temp < 0) {
  9019   007EE4  0100               	movlb	0	; () banked
  9020   007EE6  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  9021   007EE8  D004               	goto	l1441
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;../../VLCBlib_PIC/mns.c: 322:         mode_flags = 4;
  9025   007EEA  0E04               	movlw	4
  9026   007EEC  0101               	movlb	1	; () banked
  9027   007EEE  6F66               	movwf	_mode_flags& (0+255),b
  9028                           
  9029                           ;../../VLCBlib_PIC/mns.c: 323:     } else {
  9030   007EF0  D002               	goto	l23422
  9031   007EF2                     l1441:
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = (uint8_t)temp;
  9035   007EF2  C098  F166         	movff	mnsPowerUp@temp,_mode_flags
  9036   007EF6                     l23422:
  9037                           
  9038                           ;../../VLCBlib_PIC/mns.c: 327:     setLEDsByMode();
  9039   007EF6  EC50  F05F         	call	_setLEDsByMode	;wreg free
  9040                           
  9041                           ;../../VLCBlib_PIC/mns.c: 329:     pbTimer.val = tickGet();
  9042   007EFA  ECE4  F05A         	call	_tickGet	;wreg free
  9043   007EFE  C08D  F033         	movff	?_tickGet,_pbTimer
  9044   007F02  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
  9045   007F06  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
  9046   007F0A  C090  F036         	movff	?_tickGet+3,_pbTimer+3
  9047                           
  9048                           ;../../VLCBlib_PIC/mns.c: 333:     for (i=1; i<= 6; i++) {
  9049   007F0E  0E01               	movlw	1
  9050   007F10  0100               	movlb	0	; () banked
  9051   007F12  6F97               	movwf	mnsPowerUp@i& (0+255),b
  9052   007F14                     l23430:
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;../../VLCBlib_PIC/mns.c: 334:         mnsDiagnostics[i].asInt = 0;
  9056   007F14  5197               	movf	mnsPowerUp@i& (0+255),w,b
  9057   007F16  0D02               	mullw	2
  9058   007F18  0E8D               	movlw	low _mnsDiagnostics
  9059   007F1A  24F3               	addwf	243,w,c
  9060   007F1C  6ED9               	movwf	fsr2l,c
  9061   007F1E  0E01               	movlw	high _mnsDiagnostics
  9062   007F20  20F4               	addwfc	prodh,w,c
  9063   007F22  6EDA               	movwf	fsr2h,c
  9064   007F24  6ADE               	clrf	postinc2,c
  9065   007F26  6ADD               	clrf	postdec2,c
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;../../VLCBlib_PIC/mns.c: 335:     }
  9069   007F28  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  9070                           
  9071                           ; BSR set to: 0
  9072   007F2A  0E06               	movlw	6
  9073   007F2C  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  9074   007F2E  D7F2               	goto	l23430
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;../../VLCBlib_PIC/mns.c: 336:     mnsDiagnostics[0x00].asInt = 6;
  9078   007F30  0E00               	movlw	0
  9079   007F32  0101               	movlb	1	; () banked
  9080   007F34  6F8E               	movwf	(_mnsDiagnostics+1)& (0+255),b
  9081   007F36  0E06               	movlw	6
  9082   007F38  6F8D               	movwf	_mnsDiagnostics& (0+255),b
  9083                           
  9084                           ;../../VLCBlib_PIC/mns.c: 338:     heartbeatSequence = 0;
  9085   007F3A  0E00               	movlw	0
  9086   007F3C  6E45               	movwf	_heartbeatSequence^0,c
  9087                           
  9088                           ;../../VLCBlib_PIC/mns.c: 339:     heartbeatTimer.val = 0;
  9089   007F3E  0E00               	movlw	0
  9090   007F40  6F50               	movwf	_heartbeatTimer& (0+255),b
  9091   007F42  0E00               	movlw	0
  9092   007F44  6F51               	movwf	(_heartbeatTimer+1)& (0+255),b
  9093   007F46  0E00               	movlw	0
  9094   007F48  6F52               	movwf	(_heartbeatTimer+2)& (0+255),b
  9095   007F4A  0E00               	movlw	0
  9096   007F4C  6F53               	movwf	(_heartbeatTimer+3)& (0+255),b
  9097                           
  9098                           ;../../VLCBlib_PIC/mns.c: 340:     uptimeTimer.val = 0;
  9099   007F4E  0E00               	movlw	0
  9100   007F50  6F4C               	movwf	_uptimeTimer& (0+255),b
  9101   007F52  0E00               	movlw	0
  9102   007F54  6F4D               	movwf	(_uptimeTimer+1)& (0+255),b
  9103   007F56  0E00               	movlw	0
  9104   007F58  6F4E               	movwf	(_uptimeTimer+2)& (0+255),b
  9105   007F5A  0E00               	movlw	0
  9106   007F5C  6F4F               	movwf	(_uptimeTimer+3)& (0+255),b
  9107                           
  9108                           ; BSR set to: 1
  9109   007F5E  0012               	return		;funcret
  9110   007F60                     __end_of_mnsPowerUp:
  9111                           	callstack 0
  9112                           
  9113 ;; *************** function _ackPowerUp *****************
  9114 ;; Defined at:
  9115 ;;		line 97 in file "../../VLCBlib_PIC/event_acknowledge.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;		None
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  i               1   45[BANK0 ] unsigned char 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9132 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9133 ;;Total ram usage:        1 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; Hardware stack levels required when called: 12
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_powerUp
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           	psect	text12
  9144   00C050                     __ptext12:
  9145                           	callstack 0
  9146   00C050                     _ackPowerUp:
  9147                           	callstack 17
  9148                           
  9149                           ;../../VLCBlib_PIC/event_acknowledge.c: 98:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 101:     for (i=1; i<= 1; i++) {
  9150                           
  9151                           ; BSR set to: 1
  9152                           ;incstack = 0
  9153   00C050  0E01               	movlw	1
  9154   00C052  0100               	movlb	0	; () banked
  9155   00C054  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9156   00C056                     l23310:
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;../../VLCBlib_PIC/event_acknowledge.c: 102:         ackDiagnostics[i].asUint = 0;
  9160   00C056  518D               	movf	ackPowerUp@i& (0+255),w,b
  9161   00C058  0D02               	mullw	2
  9162   00C05A  0EB2               	movlw	low _ackDiagnostics
  9163   00C05C  24F3               	addwf	243,w,c
  9164   00C05E  6ED9               	movwf	fsr2l,c
  9165   00C060  0E01               	movlw	high _ackDiagnostics
  9166   00C062  20F4               	addwfc	prodh,w,c
  9167   00C064  6EDA               	movwf	fsr2h,c
  9168   00C066  6ADE               	clrf	postinc2,c
  9169   00C068  6ADD               	clrf	postdec2,c
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;../../VLCBlib_PIC/event_acknowledge.c: 103:     }
  9173   00C06A  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9174                           
  9175                           ; BSR set to: 0
  9176   00C06C  0E01               	movlw	1
  9177   00C06E  658D               	cpfsgt	ackPowerUp@i& (0+255),b
  9178   00C070  D7F2               	goto	l23310
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;../../VLCBlib_PIC/event_acknowledge.c: 104:     ackDiagnostics[0x00].asUint = 1;
  9182   00C072  0E00               	movlw	0
  9183   00C074  0101               	movlb	1	; () banked
  9184   00C076  6FB3               	movwf	(_ackDiagnostics+1)& (0+255),b
  9185   00C078  0E01               	movlw	1
  9186   00C07A  6FB2               	movwf	_ackDiagnostics& (0+255),b
  9187                           
  9188                           ; BSR set to: 1
  9189   00C07C  0012               	return		;funcret
  9190   00C07E                     __end_of_ackPowerUp:
  9191                           	callstack 0
  9192                           
  9193 ;; *************** function _bootPowerUp *****************
  9194 ;; Defined at:
  9195 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  a               3   58[BANK0 ] unsigned um
  9200 ;;  i               1   57[BANK0 ] unsigned char 
  9201 ;;  found           1   56[BANK0 ] unsigned char 
  9202 ;;  b               1   55[BANK0 ] unsigned char 
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  1    wreg      void 
  9205 ;; Registers used:
  9206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/0
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9213 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9215 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9216 ;;Total ram usage:        6 bytes
  9217 ;; Hardware stack levels used: 1
  9218 ;; Hardware stack levels required when called: 14
  9219 ;; This function calls:
  9220 ;;		_readNVM
  9221 ;; This function is called by:
  9222 ;;		_powerUp
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           	psect	text13
  9227   00912C                     __ptext13:
  9228                           	callstack 0
  9229   00912C                     _bootPowerUp:
  9230                           	callstack 15
  9231                           
  9232                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
  9233                           
  9234                           ; BSR set to: 1
  9235                           ;incstack = 0
  9236   00912C  0E00               	movlw	0
  9237   00912E  0100               	movlb	0	; () banked
  9238   009130  6FC8               	movwf	_bootloaderType& (0+255),b
  9239                           
  9240                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
  9241   009132  0E00               	movlw	0
  9242   009134  6E48               	movwf	_bootloaderVersion^0,c
  9243                           
  9244                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
  9245   009136  0E00               	movlw	0
  9246   009138  6F9A               	movwf	bootPowerUp@a& (0+255),b
  9247   00913A  0E00               	movlw	0
  9248   00913C  6F9B               	movwf	(bootPowerUp@a+1)& (0+255),b
  9249   00913E  0E00               	movlw	0
  9250   009140  6F9C               	movwf	(bootPowerUp@a+2)& (0+255),b
  9251   009142                     l23238:
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
  9255   009142  0E00               	movlw	0
  9256   009144  6F99               	movwf	bootPowerUp@i& (0+255),b
  9257   009146                     l23244:
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
  9261   009146  5199               	movf	bootPowerUp@i& (0+255),w,b
  9262   009148  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9263   00914A  6F91               	movwf	readNVM@index& (0+255),b
  9264   00914C  0E00               	movlw	0
  9265   00914E  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9266   009150  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9267   009152  0E00               	movlw	0
  9268   009154  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9269   009156  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9270   009158  0E01               	movlw	1
  9271   00915A  ECD0  F059         	call	_readNVM
  9272   00915E  0100               	movlb	0	; () banked
  9273   009160  5191               	movf	?_readNVM& (0+255),w,b
  9274   009162  6F97               	movwf	bootPowerUp@b& (0+255),b
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
  9278   009164  0E7B               	movlw	low _bl_version
  9279   009166  2599               	addwf	bootPowerUp@i& (0+255),w,b
  9280   009168  6EF6               	movwf	tblptrl,c
  9281   00916A  6AF7               	clrf	tblptrh,c
  9282   00916C  0EEE               	movlw	high _bl_version
  9283   00916E  22F7               	addwfc	tblptrh,f,c
  9284   009170                     	if	1	;There are 3 active tblptr bytes
  9285   009170  6AF8               	clrf	tblptru,c
  9286   009172  0E00               	movlw	low (__mediumconst shr (0+16))
  9287   009174  22F8               	addwfc	tblptru,f,c
  9288   009176                     	endif
  9289   009176  0008               	tblrd		*
  9290   009178  50F5               	movf	tablat,w,c
  9291   00917A  1997               	xorwf	bootPowerUp@b& (0+255),w,b
  9292   00917C  B4D8               	btfsc	status,2,c
  9293   00917E  D003               	goto	l23252
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
  9297   009180  0E00               	movlw	0
  9298   009182  6F98               	movwf	bootPowerUp@found& (0+255),b
  9299                           
  9300                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
  9301   009184  D006               	goto	u24690
  9302   009186                     l23252:
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
  9306   009186  0E01               	movlw	1
  9307   009188  6F98               	movwf	bootPowerUp@found& (0+255),b
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;../../VLCBlib_PIC/boot.c: 217:         }
  9311   00918A  2B99               	incf	bootPowerUp@i& (0+255),f,b
  9312                           
  9313                           ; BSR set to: 0
  9314   00918C  0E0A               	movlw	10
  9315   00918E  6599               	cpfsgt	bootPowerUp@i& (0+255),b
  9316   009190  D7DA               	goto	l23244
  9317   009192                     u24690:
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
  9321   009192  5198               	movf	bootPowerUp@found& (0+255),w,b
  9322   009194  B4D8               	btfsc	status,2,c
  9323   009196  D01F               	goto	l1256
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
  9327   009198  0E0B               	movlw	11
  9328   00919A  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9329   00919C  6F91               	movwf	readNVM@index& (0+255),b
  9330   00919E  0E00               	movlw	0
  9331   0091A0  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9332   0091A2  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9333   0091A4  0E00               	movlw	0
  9334   0091A6  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9335   0091A8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9336   0091AA  0E01               	movlw	1
  9337   0091AC  ECD0  F059         	call	_readNVM
  9338   0091B0  0100               	movlb	0	; () banked
  9339   0091B2  5191               	movf	?_readNVM& (0+255),w,b
  9340   0091B4  6FC8               	movwf	_bootloaderType& (0+255),b
  9341                           
  9342                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
  9343   0091B6  0E0C               	movlw	12
  9344   0091B8  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9345   0091BA  6F91               	movwf	readNVM@index& (0+255),b
  9346   0091BC  0E00               	movlw	0
  9347   0091BE  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9348   0091C0  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9349   0091C2  0E00               	movlw	0
  9350   0091C4  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9351   0091C6  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9352   0091C8  0E01               	movlw	1
  9353   0091CA  ECD0  F059         	call	_readNVM
  9354   0091CE  0100               	movlb	0	; () banked
  9355   0091D0  5191               	movf	?_readNVM& (0+255),w,b
  9356   0091D2  6E48               	movwf	_bootloaderVersion^0,c
  9357   0091D4  0012               	return	
  9358   0091D6                     l1256:
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;../../VLCBlib_PIC/boot.c: 223:     }
  9362   0091D6  0E01               	movlw	1
  9363   0091D8  279A               	addwf	bootPowerUp@a& (0+255),f,b
  9364   0091DA  0E00               	movlw	0
  9365   0091DC  239B               	addwfc	(bootPowerUp@a+1)& (0+255),f,b
  9366   0091DE  0E00               	movlw	0
  9367   0091E0  239C               	addwfc	(bootPowerUp@a+2)& (0+255),f,b
  9368                           
  9369                           ; BSR set to: 0
  9370   0091E2  519C               	movf	(bootPowerUp@a+2)& (0+255),w,b
  9371   0091E4  E106               	bnz	u24710
  9372   0091E6  299A               	incf	bootPowerUp@a& (0+255),w,b
  9373   0091E8  0E07               	movlw	7
  9374   0091EA  599B               	subwfb	(bootPowerUp@a+1)& (0+255),w,b
  9375   0091EC  B0D8               	btfsc	status,0,c
  9376   0091EE  0012               	return	
  9377   0091F0  D7A8               	goto	l23238
  9378   0091F2                     u24710:
  9379                           
  9380                           ; BSR set to: 0
  9381   0091F2  0012               	return		;funcret
  9382   0091F4                     __end_of_bootPowerUp:
  9383                           	callstack 0
  9384                           
  9385 ;; *************** function _consumer2QPowerUp *****************
  9386 ;; Defined at:
  9387 ;;		line 109 in file "../event_consumerDualActionQueue.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;		None
  9390 ;; Auto vars:     Size  Location     Type
  9391 ;;		None
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  1    wreg      void 
  9394 ;; Registers used:
  9395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9405 ;;Total ram usage:        0 bytes
  9406 ;; Hardware stack levels used: 1
  9407 ;; Hardware stack levels required when called: 12
  9408 ;; This function calls:
  9409 ;;		Nothing
  9410 ;; This function is called by:
  9411 ;;		_powerUp
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           	psect	text14
  9416   00BACC                     __ptext14:
  9417                           	callstack 0
  9418   00BACC                     _consumer2QPowerUp:
  9419                           	callstack 17
  9420                           
  9421                           ;../event_consumerDualActionQueue.c: 110:     for (normalReadIndex=1; normalReadIndex <=
      +                           1; normalReadIndex++) {
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;incstack = 0
  9425   00BACC  0E01               	movlw	1
  9426   00BACE  0100               	movlb	0	; () banked
  9427   00BAD0  6FCD               	movwf	_normalReadIndex& (0+255),b
  9428   00BAD2                     l23040:
  9429                           
  9430                           ; BSR set to: 0
  9431   00BAD2  0E01               	movlw	1
  9432   00BAD4  65CD               	cpfsgt	_normalReadIndex& (0+255),b
  9433   00BAD6  D001               	goto	l23044
  9434   00BAD8  D00C               	goto	l23050
  9435   00BADA                     l23044:
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;../event_consumerDualActionQueue.c: 111:         consumer2QDiagnostics[normalReadIndex]
      +                          .asUint = 0;
  9439   00BADA  51CD               	movf	_normalReadIndex& (0+255),w,b
  9440   00BADC  0D02               	mullw	2
  9441   00BADE  0EB6               	movlw	low _consumer2QDiagnostics
  9442   00BAE0  24F3               	addwf	243,w,c
  9443   00BAE2  6ED9               	movwf	fsr2l,c
  9444   00BAE4  0E01               	movlw	high _consumer2QDiagnostics
  9445   00BAE6  20F4               	addwfc	prodh,w,c
  9446   00BAE8  6EDA               	movwf	fsr2h,c
  9447   00BAEA  6ADE               	clrf	postinc2,c
  9448   00BAEC  6ADD               	clrf	postdec2,c
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;../event_consumerDualActionQueue.c: 112:     }
  9452   00BAEE  2BCD               	incf	_normalReadIndex& (0+255),f,b
  9453   00BAF0  D7F0               	goto	l23040
  9454   00BAF2                     l23050:
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;../event_consumerDualActionQueue.c: 113:     consumer2QDiagnostics[0].asUint = 1;
  9458   00BAF2  0E00               	movlw	0
  9459   00BAF4  0101               	movlb	1	; () banked
  9460   00BAF6  6FB7               	movwf	(_consumer2QDiagnostics+1)& (0+255),b
  9461   00BAF8  0E01               	movlw	1
  9462   00BAFA  6FB6               	movwf	_consumer2QDiagnostics& (0+255),b
  9463                           
  9464                           ;../event_consumerDualActionQueue.c: 115:     normalReadIndex = 0;
  9465   00BAFC  0E00               	movlw	0
  9466   00BAFE  0100               	movlb	0	; () banked
  9467   00BB00  6FCD               	movwf	_normalReadIndex& (0+255),b
  9468                           
  9469                           ;../event_consumerDualActionQueue.c: 116:     normalWriteIndex = 0;
  9470   00BB02  0E00               	movlw	0
  9471   00BB04  6FCC               	movwf	_normalWriteIndex& (0+255),b
  9472                           
  9473                           ;../event_consumerDualActionQueue.c: 117:     expeditedReadIndex = 0;
  9474   00BB06  0E00               	movlw	0
  9475   00BB08  6FCB               	movwf	_expeditedReadIndex& (0+255),b
  9476                           
  9477                           ;../event_consumerDualActionQueue.c: 118:     expeditedWriteIndex = 0;
  9478   00BB0A  0E00               	movlw	0
  9479   00BB0C  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
  9480                           
  9481                           ;../event_consumerDualActionQueue.c: 120:     expedited = FALSE;
  9482   00BB0E  0E00               	movlw	0
  9483   00BB10  6E49               	movwf	_expedited^0,c
  9484                           
  9485                           ; BSR set to: 0
  9486   00BB12  0012               	return		;funcret
  9487   00BB14                     __end_of_consumer2QPowerUp:
  9488                           	callstack 0
  9489                           
  9490 ;; *************** function _teachPowerUp *****************
  9491 ;; Defined at:
  9492 ;;		line 359 in file "../../VLCBlib_PIC/event_teach_large.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  i               1    9[BANK1 ] unsigned char 
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9507 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9509 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9510 ;;Total ram usage:        1 bytes
  9511 ;; Hardware stack levels used: 1
  9512 ;; Hardware stack levels required when called: 17
  9513 ;; This function calls:
  9514 ;;		_rebuildHashtable
  9515 ;; This function is called by:
  9516 ;;		_powerUp
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text15
  9521   00BE6E                     __ptext15:
  9522                           	callstack 0
  9523   00BE6E                     _teachPowerUp:
  9524                           	callstack 12
  9525                           
  9526                           ;../../VLCBlib_PIC/event_teach_large.c: 360:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 362:     rebuildHashtable();
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;incstack = 0
  9530   00BE6E  EC93  F03E         	call	_rebuildHashtable	;wreg free
  9531                           
  9532                           ;../../VLCBlib_PIC/event_teach_large.c: 366:     for (i=1; i<= 1; i++) {
  9533   00BE72  0E01               	movlw	1
  9534   00BE74  0101               	movlb	1	; () banked
  9535   00BE76  6FC3               	movwf	teachPowerUp@i& (0+255),b
  9536   00BE78                     l24368:
  9537                           
  9538                           ; BSR set to: 1
  9539                           ;../../VLCBlib_PIC/event_teach_large.c: 367:         teachDiagnostics[i].asUint = 0;
  9540   00BE78  51C3               	movf	teachPowerUp@i& (0+255),w,b
  9541   00BE7A  0D02               	mullw	2
  9542   00BE7C  0EAE               	movlw	low _teachDiagnostics
  9543   00BE7E  24F3               	addwf	243,w,c
  9544   00BE80  6ED9               	movwf	fsr2l,c
  9545   00BE82  0E01               	movlw	high _teachDiagnostics
  9546   00BE84  20F4               	addwfc	prodh,w,c
  9547   00BE86  6EDA               	movwf	fsr2h,c
  9548   00BE88  6ADE               	clrf	postinc2,c
  9549   00BE8A  6ADD               	clrf	postdec2,c
  9550                           
  9551                           ; BSR set to: 1
  9552                           ;../../VLCBlib_PIC/event_teach_large.c: 368:     }
  9553   00BE8C  2BC3               	incf	teachPowerUp@i& (0+255),f,b
  9554                           
  9555                           ; BSR set to: 1
  9556   00BE8E  0E01               	movlw	1
  9557   00BE90  65C3               	cpfsgt	teachPowerUp@i& (0+255),b
  9558   00BE92  D7F2               	goto	l24368
  9559                           
  9560                           ; BSR set to: 1
  9561                           ;../../VLCBlib_PIC/event_teach_large.c: 369:     teachDiagnostics[0x00].asUint = 1;
  9562   00BE94  0E00               	movlw	0
  9563   00BE96  6FAF               	movwf	(_teachDiagnostics+1)& (0+255),b
  9564   00BE98  0E01               	movlw	1
  9565   00BE9A  6FAE               	movwf	_teachDiagnostics& (0+255),b
  9566                           
  9567                           ; BSR set to: 1
  9568                           ;../../VLCBlib_PIC/event_teach_large.c: 371:     mode_flags &= ~1;
  9569   00BE9C  9166               	bcf	_mode_flags& (0+255),0,b
  9570                           
  9571                           ; BSR set to: 1
  9572   00BE9E  0012               	return		;funcret
  9573   00BEA0                     __end_of_teachPowerUp:
  9574                           	callstack 0
  9575                           
  9576 ;; *************** function _leds_powerUp *****************
  9577 ;; Defined at:
  9578 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;		None
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;		None
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9596 ;;Total ram usage:        0 bytes
  9597 ;; Hardware stack levels used: 1
  9598 ;; Hardware stack levels required when called: 13
  9599 ;; This function calls:
  9600 ;;		_tickGet
  9601 ;; This function is called by:
  9602 ;;		_powerUp
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text16
  9607   00BED2                     __ptext16:
  9608                           	callstack 0
  9609   00BED2                     _leds_powerUp:
  9610                           	callstack 16
  9611                           
  9612                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9613                           
  9614                           ; BSR set to: 1
  9615                           ;incstack = 0
  9616   00BED2  0E00               	movlw	0
  9617   00BED4  010F               	movlb	15	; () banked
  9618   00BED6  6F5C               	movwf	92,b	;volatile
  9619   00BED8  CF5C FF5D          	movff	3932,3933	;volatile
  9620                           
  9621                           ; BSR set to: 15
  9622   00BEDC  9E93               	bcf	147,7,c	;volatile
  9623   00BEDE  9C93               	bcf	147,6,c	;volatile
  9624                           
  9625                           ; BSR set to: 15
  9626   00BEE0  8492               	bsf	146,2,c	;volatile
  9627                           
  9628                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
  9629   00BEE2  0E00               	movlw	0
  9630   00BEE4  0100               	movlb	0	; () banked
  9631   00BEE6  6FB9               	movwf	_flashCounter& (0+255),b
  9632                           
  9633                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
  9634   00BEE8  0E00               	movlw	0
  9635   00BEEA  6FBA               	movwf	(_flashCounter+1)& (0+255),b
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
  9639   00BEEC  ECE4  F05A         	call	_tickGet	;wreg free
  9640   00BEF0  C08D  F148         	movff	?_tickGet,_ledTimer
  9641   00BEF4  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
  9642   00BEF8  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
  9643   00BEFC  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
  9644   00BF00  0012               	return		;funcret
  9645   00BF02                     __end_of_leds_powerUp:
  9646                           	callstack 0
  9647                           
  9648 ;; *************** function _initTimedResponse *****************
  9649 ;; Defined at:
  9650 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;		None
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;		None
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1    wreg      void 
  9657 ;; Registers used:
  9658 ;;		None
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9668 ;;Total ram usage:        0 bytes
  9669 ;; Hardware stack levels used: 1
  9670 ;; Hardware stack levels required when called: 12
  9671 ;; This function calls:
  9672 ;;		Nothing
  9673 ;; This function is called by:
  9674 ;;		_powerUp
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           	psect	text17
  9679   00C62C                     __ptext17:
  9680                           	callstack 0
  9681   00C62C                     _initTimedResponse:
  9682                           	callstack 17
  9683                           
  9684                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9685                           
  9686                           ;incstack = 0
  9687   00C62C  0100               	movlb	0	; () banked
  9688   00C62E  69C3               	setf	_timedResponseType& (0+255),b
  9689                           
  9690                           ; BSR set to: 0
  9691   00C630  0012               	return		;funcret
  9692   00C632                     __end_of_initTimedResponse:
  9693                           	callstack 0
  9694                           
  9695 ;; *************** function _initTicker *****************
  9696 ;; Defined at:
  9697 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  priority        1    wreg     unsigned char 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  priority        1   45[BANK0 ] unsigned char 
  9702 ;;  i               1   47[BANK0 ] unsigned char 
  9703 ;;  divider         1   46[BANK0 ] unsigned char 
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  1    wreg      void 
  9706 ;; Registers used:
  9707 ;;		wreg, status,2, status,0
  9708 ;; Tracked objects:
  9709 ;;		On entry : 0/0
  9710 ;;		On exit  : 0/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9714 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9716 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9717 ;;Total ram usage:        3 bytes
  9718 ;; Hardware stack levels used: 1
  9719 ;; Hardware stack levels required when called: 12
  9720 ;; This function calls:
  9721 ;;		Nothing
  9722 ;; This function is called by:
  9723 ;;		_powerUp
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727                           	psect	text18
  9728   00BB5C                     __ptext18:
  9729                           	callstack 0
  9730   00BB5C                     _initTicker:
  9731                           	callstack 17
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;incstack = 0
  9735                           ;initTicker@priority stored from wreg
  9736   00BB5C  0100               	movlb	0	; () banked
  9737   00BB5E  6F8D               	movwf	initTicker@priority& (0+255),b
  9738                           
  9739                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9740   00BB60  0E00               	movlw	0
  9741   00BB62  0100               	movlb	0	; () banked
  9742   00BB64  6F8E               	movwf	initTicker@divider& (0+255),b
  9743                           
  9744                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9745   00BB66  0E40               	movlw	64
  9746   00BB68  6F8F               	movwf	initTicker@i& (0+255),b
  9747   00BB6A                     l24060:
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9751   00BB6A  2B8E               	incf	initTicker@divider& (0+255),f,b
  9752                           
  9753                           ; BSR set to: 0
  9754   00BB6C  90D8               	bcf	status,0,c
  9755   00BB6E  338F               	rrcf	initTicker@i& (0+255),f,b
  9756                           
  9757                           ; BSR set to: 0
  9758   00BB70  518F               	movf	initTicker@i& (0+255),w,b
  9759   00BB72  A4D8               	btfss	status,2,c
  9760   00BB74  D7FA               	goto	l24060
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9764   00BB76  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9765                           
  9766                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9767   00BB7A  9CD5               	bcf	213,6,c	;volatile
  9768                           
  9769                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9770   00BB7C  9AD5               	bcf	213,5,c	;volatile
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9774   00BB7E  0E00               	movlw	0
  9775   00BB80  6ED7               	movwf	215,c	;volatile
  9776                           
  9777                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9778   00BB82  0E00               	movlw	0
  9779   00BB84  6ED6               	movwf	214,c	;volatile
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9783   00BB86  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9784   00BB88  D002               	bra	u25605
  9785   00BB8A  94F1               	bcf	241,2,c	;volatile
  9786   00BB8C  D001               	bra	u25606
  9787   00BB8E                     u25605:
  9788   00BB8E  84F1               	bsf	241,2,c	;volatile
  9789   00BB90                     u25606:
  9790                           
  9791                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9792   00BB90  94F2               	bcf	242,2,c	;volatile
  9793                           
  9794                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9795   00BB92  8AF2               	bsf	242,5,c	;volatile
  9796                           
  9797                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9798   00BB94  8ED5               	bsf	213,7,c	;volatile
  9799                           
  9800                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9801   00BB96  0E00               	movlw	0
  9802   00BB98  0100               	movlb	0	; () banked
  9803   00BB9A  6FC7               	movwf	_timerExtension1& (0+255),b	;volatile
  9804                           
  9805                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9806   00BB9C  0E00               	movlw	0
  9807   00BB9E  6FC6               	movwf	_timerExtension2& (0+255),b	;volatile
  9808                           
  9809                           ; BSR set to: 0
  9810   00BBA0  0012               	return		;funcret
  9811   00BBA2                     __end_of_initTicker:
  9812                           	callstack 0
  9813                           
  9814 ;; *************** function _poll *****************
  9815 ;; Defined at:
  9816 ;;		line 993 in file "../../VLCBlib_PIC/vlcb.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;		None
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  m               9   36[BANK2 ] struct Message
  9821 ;;  i               1   35[BANK2 ] unsigned char 
  9822 ;;  handled         1   34[BANK2 ] enum E12799
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      void 
  9825 ;; Registers used:
  9826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9833 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9834 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9835 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9836 ;;Total ram usage:       15 bytes
  9837 ;; Hardware stack levels used: 1
  9838 ;; Hardware stack levels required when called: 28
  9839 ;; This function calls:
  9840 ;;		NULL
  9841 ;;		_APP_postProcessMessage
  9842 ;;		_APP_preProcessMessage
  9843 ;;		___lmul
  9844 ;;		_ackEventProcessMessage
  9845 ;;		_bootProcessMessage
  9846 ;;		_canProcessMessage
  9847 ;;		_canReceiveMessage
  9848 ;;		_consumer2QProcessMessage
  9849 ;;		_flushFlashBlock
  9850 ;;		_leds_poll
  9851 ;;		_mnsPoll
  9852 ;;		_mnsProcessMessage
  9853 ;;		_nvProcessMessage
  9854 ;;		_pollTimedResponse
  9855 ;;		_producerProcessMessage
  9856 ;;		_showStatus
  9857 ;;		_teachProcessMessage
  9858 ;;		_tickGet
  9859 ;; This function is called by:
  9860 ;;		_main
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text19
  9865   00390C                     __ptext19:
  9866                           	callstack 0
  9867   00390C                     _poll:
  9868                           	callstack 2
  9869                           
  9870                           ;../../VLCBlib_PIC/vlcb.c: 994:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 995:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 996:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 999
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;incstack = 0
  9874   00390C  ECE4  F05A         	call	_tickGet	;wreg free
  9875   003910  0101               	movlb	1	; () banked
  9876   003912  5144               	movf	_timedResponseTime& (0+255),w,b
  9877   003914  0100               	movlb	0	; () banked
  9878   003916  5D8D               	subwf	?_tickGet& (0+255),w,b
  9879   003918  0102               	movlb	2	; () banked
  9880   00391A  6FEA               	movwf	??_poll& (0+255),b
  9881   00391C  0101               	movlb	1	; () banked
  9882   00391E  5145               	movf	(_timedResponseTime+1)& (0+255),w,b
  9883   003920  0100               	movlb	0	; () banked
  9884   003922  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9885   003924  0102               	movlb	2	; () banked
  9886   003926  6FEB               	movwf	(??_poll+1)& (0+255),b
  9887   003928  0101               	movlb	1	; () banked
  9888   00392A  5146               	movf	(_timedResponseTime+2)& (0+255),w,b
  9889   00392C  0100               	movlb	0	; () banked
  9890   00392E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9891   003930  0102               	movlb	2	; () banked
  9892   003932  6FEC               	movwf	(??_poll+2)& (0+255),b
  9893   003934  0101               	movlb	1	; () banked
  9894   003936  5147               	movf	(_timedResponseTime+3)& (0+255),w,b
  9895   003938  0100               	movlb	0	; () banked
  9896   00393A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9897   00393C  0102               	movlb	2	; () banked
  9898   00393E  6FED               	movwf	(??_poll+3)& (0+255),b
  9899   003940  0101               	movlb	1	; () banked
  9900   003942  5164               	movf	_timedResponseDelay& (0+255),w,b
  9901   003944  0100               	movlb	0	; () banked
  9902   003946  6F91               	movwf	___lmul@multiplier& (0+255),b
  9903   003948  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9904   00394A  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9905   00394C  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9906   00394E  0E3E               	movlw	62
  9907   003950  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9908   003952  0E00               	movlw	0
  9909   003954  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9910   003956  0E00               	movlw	0
  9911   003958  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9912   00395A  0E00               	movlw	0
  9913   00395C  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9914   00395E  EC10  F05B         	call	___lmul	;wreg free
  9915   003962  0102               	movlb	2	; () banked
  9916   003964  51EA               	movf	??_poll& (0+255),w,b
  9917   003966  0100               	movlb	0	; () banked
  9918   003968  5D91               	subwf	?___lmul& (0+255),w,b
  9919   00396A  0102               	movlb	2	; () banked
  9920   00396C  51EB               	movf	(??_poll+1)& (0+255),w,b
  9921   00396E  0100               	movlb	0	; () banked
  9922   003970  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9923   003972  0102               	movlb	2	; () banked
  9924   003974  51EC               	movf	(??_poll+2)& (0+255),w,b
  9925   003976  0100               	movlb	0	; () banked
  9926   003978  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9927   00397A  0102               	movlb	2	; () banked
  9928   00397C  51ED               	movf	(??_poll+3)& (0+255),w,b
  9929   00397E  0100               	movlb	0	; () banked
  9930   003980  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9931   003982  B0D8               	btfsc	status,0,c
  9932   003984  D00C               	goto	l24868
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;../../VLCBlib_PIC/vlcb.c: 1000:         pollTimedResponse();
  9936   003986  ECE2  F054         	call	_pollTimedResponse	;wreg free
  9937                           
  9938                           ;../../VLCBlib_PIC/vlcb.c: 1001:         timedResponseTime.val = tickGet();
  9939   00398A  ECE4  F05A         	call	_tickGet	;wreg free
  9940   00398E  C08D  F144         	movff	?_tickGet,_timedResponseTime
  9941   003992  C08E  F145         	movff	?_tickGet+1,_timedResponseTime+1
  9942   003996  C08F  F146         	movff	?_tickGet+2,_timedResponseTime+2
  9943   00399A  C090  F147         	movff	?_tickGet+3,_timedResponseTime+3
  9944   00399E                     l24868:
  9945                           
  9946                           ;../../VLCBlib_PIC/vlcb.c: 1003:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9947   00399E  ECE4  F05A         	call	_tickGet	;wreg free
  9948   0039A2  0101               	movlb	1	; () banked
  9949   0039A4  5140               	movf	_flashFlushTime& (0+255),w,b
  9950   0039A6  0100               	movlb	0	; () banked
  9951   0039A8  5D8D               	subwf	?_tickGet& (0+255),w,b
  9952   0039AA  0102               	movlb	2	; () banked
  9953   0039AC  6FEA               	movwf	??_poll& (0+255),b
  9954   0039AE  0101               	movlb	1	; () banked
  9955   0039B0  5141               	movf	(_flashFlushTime+1)& (0+255),w,b
  9956   0039B2  0100               	movlb	0	; () banked
  9957   0039B4  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9958   0039B6  0102               	movlb	2	; () banked
  9959   0039B8  6FEB               	movwf	(??_poll+1)& (0+255),b
  9960   0039BA  0101               	movlb	1	; () banked
  9961   0039BC  5142               	movf	(_flashFlushTime+2)& (0+255),w,b
  9962   0039BE  0100               	movlb	0	; () banked
  9963   0039C0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9964   0039C2  0102               	movlb	2	; () banked
  9965   0039C4  6FEC               	movwf	(??_poll+2)& (0+255),b
  9966   0039C6  0101               	movlb	1	; () banked
  9967   0039C8  5143               	movf	(_flashFlushTime+3)& (0+255),w,b
  9968   0039CA  0100               	movlb	0	; () banked
  9969   0039CC  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9970   0039CE  0102               	movlb	2	; () banked
  9971   0039D0  6FED               	movwf	(??_poll+3)& (0+255),b
  9972   0039D2  51ED               	movf	(??_poll+3)& (0+255),w,b
  9973   0039D4  11EC               	iorwf	(??_poll+2)& (0+255),w,b
  9974   0039D6  E106               	bnz	u26570
  9975   0039D8  0E25               	movlw	37
  9976   0039DA  5DEA               	subwf	??_poll& (0+255),w,b
  9977   0039DC  0EF4               	movlw	244
  9978   0039DE  59EB               	subwfb	(??_poll+1)& (0+255),w,b
  9979   0039E0  A0D8               	btfss	status,0,c
  9980   0039E2  D00C               	goto	l24874
  9981   0039E4                     u26570:
  9982                           
  9983                           ; BSR set to: 2
  9984                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flushFlashBlock();
  9985   0039E4  EC5F  F053         	call	_flushFlashBlock	;wreg free
  9986                           
  9987                           ;../../VLCBlib_PIC/vlcb.c: 1005:         flashFlushTime.val = tickGet();
  9988   0039E8  ECE4  F05A         	call	_tickGet	;wreg free
  9989   0039EC  C08D  F140         	movff	?_tickGet,_flashFlushTime
  9990   0039F0  C08E  F141         	movff	?_tickGet+1,_flashFlushTime+1
  9991   0039F4  C08F  F142         	movff	?_tickGet+2,_flashFlushTime+2
  9992   0039F8  C090  F143         	movff	?_tickGet+3,_flashFlushTime+3
  9993   0039FC                     l24874:
  9994                           
  9995                           ;../../VLCBlib_PIC/vlcb.c: 1008:     for (i=0; i<9; i++) {
  9996   0039FC  0E00               	movlw	0
  9997   0039FE  0102               	movlb	2	; () banked
  9998   003A00  6FEF               	movwf	poll@i& (0+255),b
  9999   003A02                     l24880:
 10000                           
 10001                           ; BSR set to: 2
 10002                           ;../../VLCBlib_PIC/vlcb.c: 1009:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 10003   003A02  51EF               	movf	poll@i& (0+255),w,b
 10004   003A04  0D02               	mullw	2
 10005   003A06  0E69               	movlw	low _services
 10006   003A08  24F3               	addwf	243,w,c
 10007   003A0A  6EF6               	movwf	tblptrl,c
 10008   003A0C  0EEE               	movlw	high _services
 10009   003A0E  20F4               	addwfc	244,w,c
 10010   003A10  6EF7               	movwf	tblptrh,c
 10011   003A12                     	if	1	;There are 3 active tblptr bytes
 10012   003A12  6AF8               	clrf	tblptru,c
 10013   003A14  0E00               	movlw	low (__mediumconst shr (0+16))
 10014   003A16  22F8               	addwfc	tblptru,f,c
 10015   003A18                     	endif
 10016   003A18  0009               	tblrd		*+
 10017   003A1A  50F5               	movf	tablat,w,c
 10018   003A1C  0009               	tblrd		*+
 10019   003A1E  10F5               	iorwf	tablat,w,c
 10020   003A20  B4D8               	btfsc	status,2,c
 10021   003A22  D04B               	goto	u26609
 10022                           
 10023                           ; BSR set to: 2
 10024   003A24  51EF               	movf	poll@i& (0+255),w,b
 10025   003A26  0D02               	mullw	2
 10026   003A28  0E69               	movlw	low _services
 10027   003A2A  24F3               	addwf	243,w,c
 10028   003A2C  6EF6               	movwf	tblptrl,c
 10029   003A2E  0EEE               	movlw	high _services
 10030   003A30  20F4               	addwfc	244,w,c
 10031   003A32  6EF7               	movwf	tblptrh,c
 10032   003A34                     	if	1	;There are 3 active tblptr bytes
 10033   003A34  6AF8               	clrf	tblptru,c
 10034   003A36  0E00               	movlw	low (__mediumconst shr (0+16))
 10035   003A38  22F8               	addwfc	tblptru,f,c
 10036   003A3A                     	endif
 10037   003A3A  0009               	tblrd		*+
 10038   003A3C  CFF5 F2EA          	movff	tablat,??_poll
 10039   003A40  0009               	tblrd		*+
 10040   003A42  CFF5 F2EB          	movff	tablat,??_poll+1
 10041   003A46  0E08               	movlw	8
 10042   003A48  27EA               	addwf	??_poll& (0+255),f,b
 10043   003A4A  0E00               	movlw	0
 10044   003A4C  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10045   003A4E  C2EA  FFF6         	movff	??_poll,tblptrl
 10046   003A52  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10047   003A56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10048   003A56  6AF8               	clrf	tblptru,c
 10049   003A58                     	endif
 10050   003A58                     	if	0	;tblptru may be non-zero
 10051   003A58                     	endif
 10052   003A58  0009               	tblrd		*+
 10053   003A5A  50F5               	movf	tablat,w,c
 10054   003A5C  0009               	tblrd		*+
 10055   003A5E  10F5               	iorwf	tablat,w,c
 10056   003A60  B4D8               	btfsc	status,2,c
 10057   003A62  D02B               	goto	u26609
 10058                           
 10059                           ; BSR set to: 2
 10060                           ;../../VLCBlib_PIC/vlcb.c: 1010:             services[i]->poll();
 10061   003A64  51EF               	movf	poll@i& (0+255),w,b
 10062   003A66  0D02               	mullw	2
 10063   003A68  0E69               	movlw	low _services
 10064   003A6A  24F3               	addwf	243,w,c
 10065   003A6C  6EF6               	movwf	tblptrl,c
 10066   003A6E  0EEE               	movlw	high _services
 10067   003A70  20F4               	addwfc	244,w,c
 10068   003A72  6EF7               	movwf	tblptrh,c
 10069   003A74                     	if	1	;There are 3 active tblptr bytes
 10070   003A74  6AF8               	clrf	tblptru,c
 10071   003A76  0E00               	movlw	low (__mediumconst shr (0+16))
 10072   003A78  22F8               	addwfc	tblptru,f,c
 10073   003A7A                     	endif
 10074   003A7A  0009               	tblrd		*+
 10075   003A7C  CFF5 F2EA          	movff	tablat,??_poll
 10076   003A80  0009               	tblrd		*+
 10077   003A82  CFF5 F2EB          	movff	tablat,??_poll+1
 10078   003A86  0E08               	movlw	8
 10079   003A88  27EA               	addwf	??_poll& (0+255),f,b
 10080   003A8A  0E00               	movlw	0
 10081   003A8C  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10082   003A8E  C2EA  FFF6         	movff	??_poll,tblptrl
 10083   003A92  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10084   003A96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10085   003A96  6AF8               	clrf	tblptru,c
 10086   003A98                     	endif
 10087   003A98                     	if	0	;tblptru may be non-zero
 10088   003A98                     	endif
 10089   003A98  0009               	tblrd		*+
 10090   003A9A  CFF5 F2EC          	movff	tablat,??_poll+2
 10091   003A9E  0009               	tblrd		*+
 10092   003AA0  CFF5 F2ED          	movff	tablat,??_poll+3
 10093   003AA4  D801               	call	u26608
 10094   003AA6  D009               	goto	u26609
 10095   003AA8                     u26608:
 10096   003AA8  0005               	push	
 10097   003AAA  6EFA               	movwf	pclath,c
 10098   003AAC  51EC               	movf	(??_poll+2)& (0+255),w,b
 10099   003AAE  6EFD               	movwf	tosl,c
 10100   003AB0  51ED               	movf	(??_poll+3)& (0+255),w,b
 10101   003AB2  6EFE               	movwf	tosh,c
 10102   003AB4  6AFF               	clrf	tosu,c
 10103   003AB6  50FA               	movf	pclath,w,c
 10104   003AB8  0012               	return		;indir
 10105   003ABA                     u26609:
 10106                           
 10107                           ;../../VLCBlib_PIC/vlcb.c: 1012:     }
 10108   003ABA  0102               	movlb	2	; () banked
 10109   003ABC  2BEF               	incf	poll@i& (0+255),f,b
 10110                           
 10111                           ; BSR set to: 2
 10112   003ABE  0E08               	movlw	8
 10113   003AC0  65EF               	cpfsgt	poll@i& (0+255),b
 10114   003AC2  D79F               	goto	l24880
 10115                           
 10116                           ; BSR set to: 2
 10117                           ;../../VLCBlib_PIC/vlcb.c: 1014:     leds_poll();
 10118   003AC4  EC6E  F02E         	call	_leds_poll	;wreg free
 10119                           
 10120                           ;../../VLCBlib_PIC/vlcb.c: 1017:     handled = NOT_PROCESSED;
 10121   003AC8  0E00               	movlw	0
 10122   003ACA  0102               	movlb	2	; () banked
 10123   003ACC  6FEE               	movwf	poll@handled& (0+255),b
 10124                           
 10125                           ; BSR set to: 2
 10126                           ;../../VLCBlib_PIC/vlcb.c: 1018:     if (transport != ((void*)0)) {
 10127   003ACE  0101               	movlb	1	; () banked
 10128   003AD0  5162               	movf	_transport& (0+255),w,b
 10129   003AD2  1163               	iorwf	(_transport+1)& (0+255),w,b
 10130   003AD4  B4D8               	btfsc	status,2,c
 10131   003AD6  D0CA               	goto	l2017
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;../../VLCBlib_PIC/vlcb.c: 1019:         if (transport->receiveMessage != ((void*)0)) {
 10135   003AD8  0E02               	movlw	2
 10136   003ADA  2562               	addwf	_transport& (0+255),w,b
 10137   003ADC  0102               	movlb	2	; () banked
 10138   003ADE  6FEA               	movwf	??_poll& (0+255),b
 10139   003AE0  0E00               	movlw	0
 10140   003AE2  0101               	movlb	1	; () banked
 10141   003AE4  2163               	addwfc	(_transport+1)& (0+255),w,b
 10142   003AE6  0102               	movlb	2	; () banked
 10143   003AE8  6FEB               	movwf	(??_poll+1)& (0+255),b
 10144   003AEA  C2EA  FFF6         	movff	??_poll,tblptrl
 10145   003AEE  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10146   003AF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10147   003AF2  6AF8               	clrf	tblptru,c
 10148   003AF4                     	endif
 10149   003AF4                     	if	0	;tblptru may be non-zero
 10150   003AF4                     	endif
 10151   003AF4  0009               	tblrd		*+
 10152   003AF6  50F5               	movf	tablat,w,c
 10153   003AF8  0009               	tblrd		*+
 10154   003AFA  10F5               	iorwf	tablat,w,c
 10155   003AFC  B4D8               	btfsc	status,2,c
 10156   003AFE  D0B6               	goto	l2017
 10157                           
 10158                           ; BSR set to: 2
 10159                           ;../../VLCBlib_PIC/vlcb.c: 1020:             if (transport->receiveMessage(&m)) {
 10160   003B00  0EF0               	movlw	low poll@m
 10161   003B02  0101               	movlb	1	; () banked
 10162   003B04  6FC4               	movwf	canReceiveMessage@m& (0+255),b
 10163   003B06  0E02               	movlw	high poll@m
 10164   003B08  6FC5               	movwf	(canReceiveMessage@m+1)& (0+255),b
 10165   003B0A  0E02               	movlw	2
 10166   003B0C  2562               	addwf	_transport& (0+255),w,b
 10167   003B0E  0102               	movlb	2	; () banked
 10168   003B10  6FEA               	movwf	??_poll& (0+255),b
 10169   003B12  0E00               	movlw	0
 10170   003B14  0101               	movlb	1	; () banked
 10171   003B16  2163               	addwfc	(_transport+1)& (0+255),w,b
 10172   003B18  0102               	movlb	2	; () banked
 10173   003B1A  6FEB               	movwf	(??_poll+1)& (0+255),b
 10174   003B1C  C2EA  FFF6         	movff	??_poll,tblptrl
 10175   003B20  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10176   003B24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10177   003B24  6AF8               	clrf	tblptru,c
 10178   003B26                     	endif
 10179   003B26                     	if	0	;tblptru may be non-zero
 10180   003B26                     	endif
 10181   003B26  0009               	tblrd		*+
 10182   003B28  CFF5 F2EC          	movff	tablat,??_poll+2
 10183   003B2C  0009               	tblrd		*+
 10184   003B2E  CFF5 F2ED          	movff	tablat,??_poll+3
 10185   003B32  D801               	call	u26648
 10186   003B34  D009               	goto	u26649
 10187   003B36                     u26648:
 10188   003B36  0005               	push	
 10189   003B38  6EFA               	movwf	pclath,c
 10190   003B3A  51EC               	movf	(??_poll+2)& (0+255),w,b
 10191   003B3C  6EFD               	movwf	tosl,c
 10192   003B3E  51ED               	movf	(??_poll+3)& (0+255),w,b
 10193   003B40  6EFE               	movwf	tosh,c
 10194   003B42  6AFF               	clrf	tosu,c
 10195   003B44  50FA               	movf	pclath,w,c
 10196   003B46  0012               	return		;indir
 10197   003B48                     u26649:
 10198   003B48  0900               	iorlw	0
 10199   003B4A  B4D8               	btfsc	status,2,c
 10200   003B4C  D08F               	goto	l2017
 10201                           
 10202                           ;../../VLCBlib_PIC/vlcb.c: 1021:                 if (m.len > 0) {
 10203   003B4E  0102               	movlb	2	; () banked
 10204   003B50  51F0               	movf	poll@m& (0+255),w,b
 10205   003B52  B4D8               	btfsc	status,2,c
 10206   003B54  D08B               	goto	l2017
 10207                           
 10208                           ; BSR set to: 2
 10209                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 10210   003B56  0E07               	movlw	7
 10211   003B58  EC96  F043         	call	_showStatus
 10212                           
 10213                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     handled = APP_preProcessMessage(&m)
      +                          ;
 10214   003B5C  0EF0               	movlw	low poll@m
 10215   003B5E  0100               	movlb	0	; () banked
 10216   003B60  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
 10217   003B62  0E02               	movlw	high poll@m
 10218   003B64  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
 10219   003B66  EC25  F063         	call	_APP_preProcessMessage	;wreg free
 10220   003B6A  0102               	movlb	2	; () banked
 10221   003B6C  6FEE               	movwf	poll@handled& (0+255),b
 10222                           
 10223                           ; BSR set to: 2
 10224                           ;../../VLCBlib_PIC/vlcb.c: 1024:                     if (handled == NOT_PROCESSED) {
 10225   003B6E  51EE               	movf	poll@handled& (0+255),w,b
 10226   003B70  A4D8               	btfss	status,2,c
 10227   003B72  D07C               	goto	l2017
 10228                           
 10229                           ; BSR set to: 2
 10230                           ;../../VLCBlib_PIC/vlcb.c: 1025:                         for (i=0; i<9; i++) {
 10231   003B74  0E00               	movlw	0
 10232   003B76  6FEF               	movwf	poll@i& (0+255),b
 10233   003B78                     l24912:
 10234                           
 10235                           ; BSR set to: 2
 10236                           ;../../VLCBlib_PIC/vlcb.c: 1026:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 10237   003B78  51EF               	movf	poll@i& (0+255),w,b
 10238   003B7A  0D02               	mullw	2
 10239   003B7C  0E69               	movlw	low _services
 10240   003B7E  24F3               	addwf	243,w,c
 10241   003B80  6EF6               	movwf	tblptrl,c
 10242   003B82  0EEE               	movlw	high _services
 10243   003B84  20F4               	addwfc	244,w,c
 10244   003B86  6EF7               	movwf	tblptrh,c
 10245   003B88                     	if	1	;There are 3 active tblptr bytes
 10246   003B88  6AF8               	clrf	tblptru,c
 10247   003B8A  0E00               	movlw	low (__mediumconst shr (0+16))
 10248   003B8C  22F8               	addwfc	tblptru,f,c
 10249   003B8E                     	endif
 10250   003B8E  0009               	tblrd		*+
 10251   003B90  50F5               	movf	tablat,w,c
 10252   003B92  0009               	tblrd		*+
 10253   003B94  10F5               	iorwf	tablat,w,c
 10254   003B96  B4D8               	btfsc	status,2,c
 10255   003B98  D058               	goto	l24920
 10256                           
 10257                           ; BSR set to: 2
 10258   003B9A  51EF               	movf	poll@i& (0+255),w,b
 10259   003B9C  0D02               	mullw	2
 10260   003B9E  0E69               	movlw	low _services
 10261   003BA0  24F3               	addwf	243,w,c
 10262   003BA2  6EF6               	movwf	tblptrl,c
 10263   003BA4  0EEE               	movlw	high _services
 10264   003BA6  20F4               	addwfc	244,w,c
 10265   003BA8  6EF7               	movwf	tblptrh,c
 10266   003BAA                     	if	1	;There are 3 active tblptr bytes
 10267   003BAA  6AF8               	clrf	tblptru,c
 10268   003BAC  0E00               	movlw	low (__mediumconst shr (0+16))
 10269   003BAE  22F8               	addwfc	tblptru,f,c
 10270   003BB0                     	endif
 10271   003BB0  0009               	tblrd		*+
 10272   003BB2  CFF5 F2EA          	movff	tablat,??_poll
 10273   003BB6  0009               	tblrd		*+
 10274   003BB8  CFF5 F2EB          	movff	tablat,??_poll+1
 10275   003BBC  0E06               	movlw	6
 10276   003BBE  27EA               	addwf	??_poll& (0+255),f,b
 10277   003BC0  0E00               	movlw	0
 10278   003BC2  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10279   003BC4  C2EA  FFF6         	movff	??_poll,tblptrl
 10280   003BC8  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10281   003BCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10282   003BCC  6AF8               	clrf	tblptru,c
 10283   003BCE                     	endif
 10284   003BCE                     	if	0	;tblptru may be non-zero
 10285   003BCE                     	endif
 10286   003BCE  0009               	tblrd		*+
 10287   003BD0  50F5               	movf	tablat,w,c
 10288   003BD2  0009               	tblrd		*+
 10289   003BD4  10F5               	iorwf	tablat,w,c
 10290   003BD6  B4D8               	btfsc	status,2,c
 10291   003BD8  D038               	goto	l24920
 10292                           
 10293                           ; BSR set to: 2
 10294                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 10295   003BDA  0EF0               	movlw	low poll@m
 10296   003BDC  0101               	movlb	1	; () banked
 10297   003BDE  6FF9               	movwf	producerProcessMessage@m& (0+255),b
 10298   003BE0  0E02               	movlw	high poll@m
 10299   003BE2  6FFA               	movwf	(producerProcessMessage@m+1)& (0+255),b
 10300   003BE4  0102               	movlb	2	; () banked
 10301   003BE6  51EF               	movf	poll@i& (0+255),w,b
 10302   003BE8  0D02               	mullw	2
 10303   003BEA  0E69               	movlw	low _services
 10304   003BEC  24F3               	addwf	243,w,c
 10305   003BEE  6EF6               	movwf	tblptrl,c
 10306   003BF0  0EEE               	movlw	high _services
 10307   003BF2  20F4               	addwfc	244,w,c
 10308   003BF4  6EF7               	movwf	tblptrh,c
 10309   003BF6                     	if	1	;There are 3 active tblptr bytes
 10310   003BF6  6AF8               	clrf	tblptru,c
 10311   003BF8  0E00               	movlw	low (__mediumconst shr (0+16))
 10312   003BFA  22F8               	addwfc	tblptru,f,c
 10313   003BFC                     	endif
 10314   003BFC  0009               	tblrd		*+
 10315   003BFE  CFF5 F2EA          	movff	tablat,??_poll
 10316   003C02  0009               	tblrd		*+
 10317   003C04  CFF5 F2EB          	movff	tablat,??_poll+1
 10318   003C08  0E06               	movlw	6
 10319   003C0A  27EA               	addwf	??_poll& (0+255),f,b
 10320   003C0C  0E00               	movlw	0
 10321   003C0E  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10322   003C10  C2EA  FFF6         	movff	??_poll,tblptrl
 10323   003C14  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10324   003C18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10325   003C18  6AF8               	clrf	tblptru,c
 10326   003C1A                     	endif
 10327   003C1A                     	if	0	;tblptru may be non-zero
 10328   003C1A                     	endif
 10329   003C1A  0009               	tblrd		*+
 10330   003C1C  CFF5 F2EC          	movff	tablat,??_poll+2
 10331   003C20  0009               	tblrd		*+
 10332   003C22  CFF5 F2ED          	movff	tablat,??_poll+3
 10333   003C26  D801               	call	u26708
 10334   003C28  D009               	goto	u26709
 10335   003C2A                     u26708:
 10336   003C2A  0005               	push	
 10337   003C2C  6EFA               	movwf	pclath,c
 10338   003C2E  51EC               	movf	(??_poll+2)& (0+255),w,b
 10339   003C30  6EFD               	movwf	tosl,c
 10340   003C32  51ED               	movf	(??_poll+3)& (0+255),w,b
 10341   003C34  6EFE               	movwf	tosh,c
 10342   003C36  6AFF               	clrf	tosu,c
 10343   003C38  50FA               	movf	pclath,w,c
 10344   003C3A  0012               	return		;indir
 10345   003C3C                     u26709:
 10346   003C3C  06E8               	decf	wreg,f,c
 10347   003C3E  A4D8               	btfss	status,2,c
 10348   003C40  D004               	goto	l24920
 10349                           
 10350                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     handled = PROCESSED
      +                          ;
 10351   003C42  0E01               	movlw	1
 10352   003C44  0102               	movlb	2	; () banked
 10353   003C46  6FEE               	movwf	poll@handled& (0+255),b
 10354                           
 10355                           ;../../VLCBlib_PIC/vlcb.c: 1029:                                     break;
 10356   003C48  D005               	goto	u26720
 10357   003C4A                     l24920:
 10358                           
 10359                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         }
 10360   003C4A  0102               	movlb	2	; () banked
 10361   003C4C  2BEF               	incf	poll@i& (0+255),f,b
 10362                           
 10363                           ; BSR set to: 2
 10364   003C4E  0E08               	movlw	8
 10365   003C50  65EF               	cpfsgt	poll@i& (0+255),b
 10366   003C52  D792               	goto	l24912
 10367   003C54                     u26720:
 10368                           
 10369                           ; BSR set to: 2
 10370                           ;../../VLCBlib_PIC/vlcb.c: 1033:                         if (handled == NOT_PROCESSED) {
 10371   003C54  51EE               	movf	poll@handled& (0+255),w,b
 10372   003C56  A4D8               	btfss	status,2,c
 10373   003C58  D009               	goto	l2017
 10374                           
 10375                           ; BSR set to: 2
 10376                           ;../../VLCBlib_PIC/vlcb.c: 1034:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10377   003C5A  0EF0               	movlw	low poll@m
 10378   003C5C  0100               	movlb	0	; () banked
 10379   003C5E  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10380   003C60  0E02               	movlw	high poll@m
 10381   003C62  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10382   003C64  EC27  F063         	call	_APP_postProcessMessage	;wreg free
 10383   003C68  0102               	movlb	2	; () banked
 10384   003C6A  6FEE               	movwf	poll@handled& (0+255),b
 10385   003C6C                     l2017:
 10386                           
 10387                           ;../../VLCBlib_PIC/vlcb.c: 1041:     if (handled) {
 10388                           
 10389                           ; BSR set to: 2
 10390   003C6C  0102               	movlb	2	; () banked
 10391   003C6E  51EE               	movf	poll@handled& (0+255),w,b
 10392   003C70  B4D8               	btfsc	status,2,c
 10393   003C72  0012               	return	
 10394                           
 10395                           ; BSR set to: 2
 10396                           ;../../VLCBlib_PIC/vlcb.c: 1042:         mnsDiagnostics[0x06].asUint++;
 10397   003C74  0101               	movlb	1	; () banked
 10398   003C76  4B99               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 10399   003C78  2B9A               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 10400                           
 10401                           ; BSR set to: 1
 10402                           ;../../VLCBlib_PIC/vlcb.c: 1043:         showStatus(STATUS_MESSAGE_ACTED);
 10403   003C7A  0E08               	movlw	8
 10404   003C7C  EC96  F043         	call	_showStatus
 10405   003C80  0012               	return		;funcret
 10406   003C82                     __end_of_poll:
 10407                           	callstack 0
 10408                           
 10409 ;; *************** function _producerProcessMessage *****************
 10410 ;; Defined at:
 10411 ;;		line 124 in file "../../VLCBlib_PIC/event_producer_happening.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  m               2   63[BANK1 ] PTR struct Message
 10414 ;;		 -> poll@m(9), 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  ev              2   65[BANK1 ] short 
 10417 ;;  index           1   68[BANK1 ] unsigned char 
 10418 ;;  h               1   67[BANK1 ] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      enum E12749
 10421 ;; Registers used:
 10422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10428 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10429 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10430 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10431 ;;      Totals:         0       0       6       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10432 ;;Total ram usage:       12 bytes
 10433 ;; Hardware stack levels used: 1
 10434 ;; Hardware stack levels required when called: 17
 10435 ;; This function calls:
 10436 ;;		_APP_GetEventState
 10437 ;;		_findEvent
 10438 ;;		_getEv
 10439 ;;		_sendMessage3
 10440 ;;		_sendMessage4
 10441 ;; This function is called by:
 10442 ;;		_poll
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446                           	psect	text20
 10447   005F4A                     __ptext20:
 10448                           	callstack 0
 10449   005F4A                     _producerProcessMessage:
 10450                           	callstack 12
 10451                           
 10452                           ;../../VLCBlib_PIC/event_producer_happening.c: 125:     uint8_t index;;../../VLCBlib_PIC
      +                          /event_producer_happening.c: 126:     Happening h;;../../VLCBlib_PIC/event_producer_happ
      +                          ening.c: 127:     int16_t ev;;../../VLCBlib_PIC/event_producer_happening.c: 129:     swi
      +                          tch (m->opc) {
 10453                           
 10454                           ;incstack = 0
 10455   005F4A  D11B               	goto	l24722
 10456   005F4C                     l24674:
 10457                           
 10458                           ; BSR set to: 2
 10459                           ;../../VLCBlib_PIC/event_producer_happening.c: 132:             if (m->len < 5) {
 10460   005F4C  C1F9  FFD9         	movff	producerProcessMessage@m,fsr2l
 10461   005F50  C1FA  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 10462   005F54  0E05               	movlw	5
 10463   005F56  60DF               	cpfslt	indf2,c
 10464   005F58  D00C               	goto	l24682
 10465                           
 10466                           ; BSR set to: 2
 10467                           ;../../VLCBlib_PIC/event_producer_happening.c: 133:                 sendMessage3(OPC_CMD
      +                          ERR, nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 10468   005F5A  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 10469   005F5E  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 10470   005F62  0E01               	movlw	1
 10471   005F64  0100               	movlb	0	; () banked
 10472   005F66  6FA8               	movwf	sendMessage3@data3& (0+255),b
 10473   005F68  0E6F               	movlw	111
 10474   005F6A  EC3F  F060         	call	_sendMessage3
 10475   005F6E                     l24678:
 10476                           
 10477                           ;../../VLCBlib_PIC/event_producer_happening.c: 134:                 return PROCESSED;
 10478   005F6E  0E01               	movlw	1
 10479   005F70  0012               	return	
 10480   005F72                     l24682:
 10481                           
 10482                           ; BSR set to: 2
 10483                           ;../../VLCBlib_PIC/event_producer_happening.c: 136:             if (m->opc == OPC_AREQ) 
      +                          {
 10484   005F72  0101               	movlb	1	; () banked
 10485   005F74  EE20 F001          	lfsr	2,1
 10486   005F78  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10487   005F7A  26D9               	addwf	fsr2l,f,c
 10488   005F7C  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10489   005F7E  22DA               	addwfc	fsr2h,f,c
 10490   005F80  0E92               	movlw	146
 10491   005F82  18DE               	xorwf	postinc2,w,c
 10492   005F84  A4D8               	btfss	status,2,c
 10493   005F86  D033               	goto	l24686
 10494                           
 10495                           ; BSR set to: 1
 10496                           ;../../VLCBlib_PIC/event_producer_happening.c: 137:                 index = findEvent((u
      +                          int16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10497   005F88  EE20 F003          	lfsr	2,3
 10498   005F8C  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10499   005F8E  26D9               	addwf	fsr2l,f,c
 10500   005F90  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10501   005F92  22DA               	addwfc	fsr2h,f,c
 10502   005F94  50DF               	movf	indf2,w,c
 10503   005F96  0102               	movlb	2	; () banked
 10504   005F98  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10505   005F9A  0101               	movlb	1	; () banked
 10506   005F9C  EE20 F002          	lfsr	2,2
 10507   005FA0  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10508   005FA2  26D9               	addwf	fsr2l,f,c
 10509   005FA4  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10510   005FA6  22DA               	addwfc	fsr2h,f,c
 10511   005FA8  50DF               	movf	indf2,w,c
 10512   005FAA  0102               	movlb	2	; () banked
 10513   005FAC  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10514   005FAE  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10515   005FB0  0101               	movlb	1	; () banked
 10516   005FB2  6FBA               	movwf	findEvent@nodeNumber& (0+255),b
 10517   005FB4  C2CD  F1BB         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 10518   005FB8  EE20 F005          	lfsr	2,5
 10519   005FBC  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10520   005FBE  26D9               	addwf	fsr2l,f,c
 10521   005FC0  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10522   005FC2  22DA               	addwfc	fsr2h,f,c
 10523   005FC4  50DF               	movf	indf2,w,c
 10524   005FC6  0102               	movlb	2	; () banked
 10525   005FC8  6FCF               	movwf	(??_producerProcessMessage+3)& (0+255),b
 10526   005FCA  0101               	movlb	1	; () banked
 10527   005FCC  EE20 F004          	lfsr	2,4
 10528   005FD0  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10529   005FD2  26D9               	addwf	fsr2l,f,c
 10530   005FD4  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10531   005FD6  22DA               	addwfc	fsr2h,f,c
 10532   005FD8  50DF               	movf	indf2,w,c
 10533   005FDA  0102               	movlb	2	; () banked
 10534   005FDC  6FD0               	movwf	(??_producerProcessMessage+4)& (0+255),b
 10535   005FDE  51CF               	movf	(??_producerProcessMessage+3)& (0+255),w,b
 10536   005FE0  0101               	movlb	1	; () banked
 10537   005FE2  6FBC               	movwf	findEvent@eventNumber& (0+255),b
 10538   005FE4  C2D0  F1BD         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 10539   005FE8  ECBB  F051         	call	_findEvent	;wreg free
 10540   005FEC  D01E               	goto	L1
 10541   005FEE                     l24686:
 10542                           
 10543                           ; BSR set to: 1
 10544                           ;../../VLCBlib_PIC/event_producer_happening.c: 139:                 index = findEvent(0,
      +                           (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10545   005FEE  0E00               	movlw	0
 10546   005FF0  6FBB               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 10547   005FF2  0E00               	movlw	0
 10548   005FF4  6FBA               	movwf	findEvent@nodeNumber& (0+255),b
 10549   005FF6  EE20 F005          	lfsr	2,5
 10550   005FFA  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10551   005FFC  26D9               	addwf	fsr2l,f,c
 10552   005FFE  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10553   006000  22DA               	addwfc	fsr2h,f,c
 10554   006002  50DF               	movf	indf2,w,c
 10555   006004  0102               	movlb	2	; () banked
 10556   006006  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10557   006008  0101               	movlb	1	; () banked
 10558   00600A  EE20 F004          	lfsr	2,4
 10559   00600E  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10560   006010  26D9               	addwf	fsr2l,f,c
 10561   006012  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10562   006014  22DA               	addwfc	fsr2h,f,c
 10563   006016  50DF               	movf	indf2,w,c
 10564   006018  0102               	movlb	2	; () banked
 10565   00601A  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10566   00601C  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10567   00601E  0101               	movlb	1	; () banked
 10568   006020  6FBC               	movwf	findEvent@eventNumber& (0+255),b
 10569   006022  C2CD  F1BD         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 10570   006026  ECBB  F051         	call	_findEvent	;wreg free
 10571   00602A                     L1:
 10572   00602A  0101               	movlb	1	; () banked
 10573   00602C  6FFE               	movwf	producerProcessMessage@index& (0+255),b
 10574                           
 10575                           ; BSR set to: 1
 10576                           ;../../VLCBlib_PIC/event_producer_happening.c: 141:             if (index == 0xff) retur
      +                          n PROCESSED;
 10577   00602E  29FE               	incf	producerProcessMessage@index& (0+255),w,b
 10578   006030  B4D8               	btfsc	status,2,c
 10579   006032  D79D               	goto	l24678
 10580                           
 10581                           ; BSR set to: 1
 10582                           ;../../VLCBlib_PIC/event_producer_happening.c: 143:             ev = getEv(index, 0);
 10583   006034  0E00               	movlw	0
 10584   006036  0100               	movlb	0	; () banked
 10585   006038  6F9D               	movwf	getEv@evNum& (0+255),b
 10586   00603A  0101               	movlb	1	; () banked
 10587   00603C  51FE               	movf	producerProcessMessage@index& (0+255),w,b
 10588   00603E  EC0A  F03C         	call	_getEv
 10589   006042  C09D  F1FB         	movff	?_getEv,producerProcessMessage@ev
 10590   006046  C09E  F1FC         	movff	?_getEv+1,producerProcessMessage@ev+1
 10591                           
 10592                           ;../../VLCBlib_PIC/event_producer_happening.c: 144:             if (ev <= 0) return PROC
      +                          ESSED;
 10593   00604A  0101               	movlb	1	; () banked
 10594   00604C  BFFC               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 10595   00604E  D78F               	goto	l24678
 10596   006050  51FC               	movf	(producerProcessMessage@ev+1)& (0+255),w,b
 10597   006052  E103               	bnz	l3056
 10598   006054  05FB               	decf	producerProcessMessage@ev& (0+255),w,b
 10599   006056  A0D8               	btfss	status,0,c
 10600   006058  D78A               	goto	l24678
 10601   00605A                     l3056:
 10602                           
 10603                           ; BSR set to: 1
 10604                           ;../../VLCBlib_PIC/event_producer_happening.c: 146:             h = (uint8_t)ev;
 10605   00605A  C1FB  F1FD         	movff	producerProcessMessage@ev,producerProcessMessage@h
 10606                           
 10607                           ; BSR set to: 1
 10608                           ;../../VLCBlib_PIC/event_producer_happening.c: 154:             if (m->opc == OPC_AREQ) 
      +                          {
 10609   00605E  EE20 F001          	lfsr	2,1
 10610   006062  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10611   006064  26D9               	addwf	fsr2l,f,c
 10612   006066  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10613   006068  22DA               	addwfc	fsr2h,f,c
 10614   00606A  0E92               	movlw	146
 10615   00606C  18DE               	xorwf	postinc2,w,c
 10616   00606E  A4D8               	btfss	status,2,c
 10617   006070  D050               	goto	l24710
 10618                           
 10619                           ; BSR set to: 1
 10620                           ;../../VLCBlib_PIC/event_producer_happening.c: 155:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10621   006072  51FD               	movf	producerProcessMessage@h& (0+255),w,b
 10622   006074  EC41  F01E         	call	_APP_GetEventState
 10623   006078  06E8               	decf	wreg,f,c
 10624   00607A  A4D8               	btfss	status,2,c
 10625   00607C  D025               	goto	l24708
 10626                           
 10627                           ;../../VLCBlib_PIC/event_producer_happening.c: 156:                     sendMessage4(OPC
      +                          _ARON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10628   00607E  0101               	movlb	1	; () banked
 10629   006080  EE20 F002          	lfsr	2,2
 10630   006084  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10631   006086  26D9               	addwf	fsr2l,f,c
 10632   006088  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10633   00608A  22DA               	addwfc	fsr2h,f,c
 10634   00608C  50DF               	movf	indf2,w,c
 10635   00608E  6FC2               	movwf	sendMessage4@data1& (0+255),b
 10636   006090  EE20 F003          	lfsr	2,3
 10637   006094  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10638   006096  26D9               	addwf	fsr2l,f,c
 10639   006098  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10640   00609A  22DA               	addwfc	fsr2h,f,c
 10641   00609C  50DF               	movf	indf2,w,c
 10642   00609E  6FC3               	movwf	sendMessage4@data2& (0+255),b
 10643   0060A0  EE20 F004          	lfsr	2,4
 10644   0060A4  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10645   0060A6  26D9               	addwf	fsr2l,f,c
 10646   0060A8  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10647   0060AA  22DA               	addwfc	fsr2h,f,c
 10648   0060AC  50DF               	movf	indf2,w,c
 10649   0060AE  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10650   0060B0  EE20 F005          	lfsr	2,5
 10651   0060B4  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10652   0060B6  26D9               	addwf	fsr2l,f,c
 10653   0060B8  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10654   0060BA  22DA               	addwfc	fsr2h,f,c
 10655   0060BC  50DF               	movf	indf2,w,c
 10656   0060BE  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10657   0060C0  0E93               	movlw	147
 10658   0060C2  ECF9  F05F         	call	_sendMessage4
 10659                           
 10660                           ;../../VLCBlib_PIC/event_producer_happening.c: 157:                 } else {
 10661   0060C6  D753               	goto	l24678
 10662   0060C8                     l24708:
 10663                           
 10664                           ;../../VLCBlib_PIC/event_producer_happening.c: 158:                     sendMessage4(OPC
      +                          _AROF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10665   0060C8  0101               	movlb	1	; () banked
 10666   0060CA  EE20 F002          	lfsr	2,2
 10667   0060CE  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10668   0060D0  26D9               	addwf	fsr2l,f,c
 10669   0060D2  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10670   0060D4  22DA               	addwfc	fsr2h,f,c
 10671   0060D6  50DF               	movf	indf2,w,c
 10672   0060D8  6FC2               	movwf	sendMessage4@data1& (0+255),b
 10673   0060DA  EE20 F003          	lfsr	2,3
 10674   0060DE  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10675   0060E0  26D9               	addwf	fsr2l,f,c
 10676   0060E2  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10677   0060E4  22DA               	addwfc	fsr2h,f,c
 10678   0060E6  50DF               	movf	indf2,w,c
 10679   0060E8  6FC3               	movwf	sendMessage4@data2& (0+255),b
 10680   0060EA  EE20 F004          	lfsr	2,4
 10681   0060EE  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10682   0060F0  26D9               	addwf	fsr2l,f,c
 10683   0060F2  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10684   0060F4  22DA               	addwfc	fsr2h,f,c
 10685   0060F6  50DF               	movf	indf2,w,c
 10686   0060F8  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10687   0060FA  EE20 F005          	lfsr	2,5
 10688   0060FE  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10689   006100  26D9               	addwf	fsr2l,f,c
 10690   006102  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10691   006104  22DA               	addwfc	fsr2h,f,c
 10692   006106  50DF               	movf	indf2,w,c
 10693   006108  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10694   00610A  0E94               	movlw	148
 10695   00610C  ECF9  F05F         	call	_sendMessage4
 10696   006110  D72E               	goto	l24678
 10697   006112                     l24710:
 10698                           
 10699                           ; BSR set to: 1
 10700                           ;../../VLCBlib_PIC/event_producer_happening.c: 161:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10701   006112  51FD               	movf	producerProcessMessage@h& (0+255),w,b
 10702   006114  EC41  F01E         	call	_APP_GetEventState
 10703   006118  06E8               	decf	wreg,f,c
 10704   00611A  A4D8               	btfss	status,2,c
 10705   00611C  D019               	goto	l24714
 10706                           
 10707                           ;../../VLCBlib_PIC/event_producer_happening.c: 162:                     sendMessage4(OPC
      +                          _ARSON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10708   00611E  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 10709   006122  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 10710   006126  0101               	movlb	1	; () banked
 10711   006128  EE20 F004          	lfsr	2,4
 10712   00612C  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10713   00612E  26D9               	addwf	fsr2l,f,c
 10714   006130  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10715   006132  22DA               	addwfc	fsr2h,f,c
 10716   006134  50DF               	movf	indf2,w,c
 10717   006136  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10718   006138  EE20 F005          	lfsr	2,5
 10719   00613C  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10720   00613E  26D9               	addwf	fsr2l,f,c
 10721   006140  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10722   006142  22DA               	addwfc	fsr2h,f,c
 10723   006144  50DF               	movf	indf2,w,c
 10724   006146  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10725   006148  0E9D               	movlw	157
 10726   00614A  ECF9  F05F         	call	_sendMessage4
 10727                           
 10728                           ;../../VLCBlib_PIC/event_producer_happening.c: 163:                 } else {
 10729   00614E  D70F               	goto	l24678
 10730   006150                     l24714:
 10731                           
 10732                           ;../../VLCBlib_PIC/event_producer_happening.c: 164:                     sendMessage4(OPC
      +                          _ARSOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10733   006150  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 10734   006154  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 10735   006158  0101               	movlb	1	; () banked
 10736   00615A  EE20 F004          	lfsr	2,4
 10737   00615E  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10738   006160  26D9               	addwf	fsr2l,f,c
 10739   006162  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10740   006164  22DA               	addwfc	fsr2h,f,c
 10741   006166  50DF               	movf	indf2,w,c
 10742   006168  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10743   00616A  EE20 F005          	lfsr	2,5
 10744   00616E  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10745   006170  26D9               	addwf	fsr2l,f,c
 10746   006172  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10747   006174  22DA               	addwfc	fsr2h,f,c
 10748   006176  50DF               	movf	indf2,w,c
 10749   006178  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10750   00617A  0E9E               	movlw	158
 10751   00617C  ECF9  F05F         	call	_sendMessage4
 10752   006180  D6F6               	goto	l24678
 10753   006182                     l24722:
 10754   006182  0101               	movlb	1	; () banked
 10755   006184  EE20 F001          	lfsr	2,1
 10756   006188  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10757   00618A  26D9               	addwf	fsr2l,f,c
 10758   00618C  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10759   00618E  22DA               	addwfc	fsr2h,f,c
 10760   006190  50DF               	movf	indf2,w,c
 10761   006192  0102               	movlb	2	; () banked
 10762   006194  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10763   006196  6BCD               	clrf	(??_producerProcessMessage+1)& (0+255),b
 10764                           
 10765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10766                           ; Switch size 1, requested type "simple"
 10767                           ; Number of cases is 1, Range of values is 0 to 0
 10768                           ; switch strategies available:
 10769                           ; Name         Instructions Cycles
 10770                           ; simple_byte            4     3 (average)
 10771                           ;	Chosen strategy is simple_byte
 10772   006198  51CD               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 10773   00619A  0A00               	xorlw	0	; case 0
 10774   00619C  A4D8               	btfss	status,2,c
 10775   00619E  D007               	goto	l24724
 10776                           
 10777                           ; BSR set to: 2
 10778                           ; Switch size 1, requested type "simple"
 10779                           ; Number of cases is 2, Range of values is 146 to 154
 10780                           ; switch strategies available:
 10781                           ; Name         Instructions Cycles
 10782                           ; simple_byte            7     4 (average)
 10783                           ;	Chosen strategy is simple_byte
 10784   0061A0  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10785   0061A2  0A92               	xorlw	146	; case 146
 10786   0061A4  B4D8               	btfsc	status,2,c
 10787   0061A6  D6D2               	goto	l24674
 10788   0061A8  0A08               	xorlw	8	; case 154
 10789   0061AA  B4D8               	btfsc	status,2,c
 10790   0061AC  D6CF               	goto	l24674
 10791   0061AE                     l24724:
 10792                           
 10793                           ; BSR set to: 2
 10794                           ;../../VLCBlib_PIC/event_producer_happening.c: 171:     return NOT_PROCESSED;
 10795   0061AE  0E00               	movlw	0
 10796   0061B0  0012               	return		;funcret
 10797   0061B2                     __end_of_producerProcessMessage:
 10798                           	callstack 0
 10799                           
 10800 ;; *************** function _canProcessMessage *****************
 10801 ;; Defined at:
 10802 ;;		line 373 in file "../../VLCBlib_PIC/can18_ecan.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;  m               2   63[BANK1 ] PTR struct Message
 10805 ;;		 -> poll@m(9), 
 10806 ;; Auto vars:     Size  Location     Type
 10807 ;;		None
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  1    wreg      enum E12966
 10810 ;; Registers used:
 10811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10817 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10819 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10820 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10821 ;;Total ram usage:        4 bytes
 10822 ;; Hardware stack levels used: 1
 10823 ;; Hardware stack levels required when called: 17
 10824 ;; This function calls:
 10825 ;;		_sendMessage5
 10826 ;; This function is called by:
 10827 ;;		_poll
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           	psect	text21
 10832   009B38                     __ptext21:
 10833                           	callstack 0
 10834   009B38                     _canProcessMessage:
 10835                           	callstack 12
 10836                           
 10837                           ;../../VLCBlib_PIC/can18_ecan.c: 375:     if (m->len < 3) return NOT_PROCESSED;
 10838                           
 10839                           ;incstack = 0
 10840   009B38  C1F9  FFD9         	movff	canProcessMessage@m,fsr2l
 10841   009B3C  C1FA  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10842   009B40  0E03               	movlw	3
 10843   009B42  60DF               	cpfslt	indf2,c
 10844   009B44  D002               	goto	l24216
 10845   009B46                     u25740:
 10846   009B46  0E00               	movlw	0
 10847   009B48  0012               	return	
 10848   009B4A                     l24216:
 10849                           
 10850                           ;../../VLCBlib_PIC/can18_ecan.c: 376:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10851   009B4A  0101               	movlb	1	; () banked
 10852   009B4C  EE20 F002          	lfsr	2,2
 10853   009B50  51F9               	movf	canProcessMessage@m& (0+255),w,b
 10854   009B52  26D9               	addwf	fsr2l,f,c
 10855   009B54  51FA               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10856   009B56  22DA               	addwfc	fsr2h,f,c
 10857   009B58  50DE               	movf	postinc2,w,c
 10858   009B5A  0100               	movlb	0	; () banked
 10859   009B5C  19BE               	xorwf	(_nn+1)& (0+255),w,b
 10860   009B5E  A4D8               	btfss	status,2,c
 10861   009B60  D7F2               	goto	u25740
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;../../VLCBlib_PIC/can18_ecan.c: 377:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10865   009B62  0101               	movlb	1	; () banked
 10866   009B64  EE20 F003          	lfsr	2,3
 10867   009B68  51F9               	movf	canProcessMessage@m& (0+255),w,b
 10868   009B6A  26D9               	addwf	fsr2l,f,c
 10869   009B6C  51FA               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10870   009B6E  22DA               	addwfc	fsr2h,f,c
 10871   009B70  0100               	movlb	0	; () banked
 10872   009B72  51BD               	movf	_nn& (0+255),w,b
 10873   009B74  18DE               	xorwf	postinc2,w,c
 10874   009B76  A4D8               	btfss	status,2,c
 10875   009B78  D7E6               	goto	u25740
 10876   009B7A  D017               	goto	l24246
 10877   009B7C                     l24228:
 10878                           
 10879                           ;../../VLCBlib_PIC/can18_ecan.c: 383:             return PROCESSED;
 10880   009B7C  0E01               	movlw	1
 10881   009B7E  0012               	return	
 10882   009B80                     l24232:
 10883                           
 10884                           ; BSR set to: 1
 10885                           ;../../VLCBlib_PIC/can18_ecan.c: 385:             if (m->len < 4) {
 10886   009B80  C1F9  FFD9         	movff	canProcessMessage@m,fsr2l
 10887   009B84  C1FA  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10888   009B88  0E04               	movlw	4
 10889   009B8A  60DF               	cpfslt	indf2,c
 10890   009B8C  D7F7               	goto	l24228
 10891                           
 10892                           ; BSR set to: 1
 10893                           ;../../VLCBlib_PIC/can18_ecan.c: 387:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10894   009B8E  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 10895   009B92  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 10896   009B96  0E75               	movlw	117
 10897   009B98  6FC4               	movwf	sendMessage5@data3& (0+255),b
 10898   009B9A  0E01               	movlw	1
 10899   009B9C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 10900   009B9E  0E01               	movlw	1
 10901   009BA0  6FC6               	movwf	sendMessage5@data5& (0+255),b
 10902   009BA2  0EAF               	movlw	175
 10903   009BA4  ECE1  F05F         	call	_sendMessage5
 10904   009BA8  D7E9               	goto	l24228
 10905   009BAA                     l24246:
 10906                           
 10907                           ; BSR set to: 0
 10908   009BAA  0101               	movlb	1	; () banked
 10909   009BAC  EE20 F001          	lfsr	2,1
 10910   009BB0  51F9               	movf	canProcessMessage@m& (0+255),w,b
 10911   009BB2  26D9               	addwf	fsr2l,f,c
 10912   009BB4  51FA               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10913   009BB6  22DA               	addwfc	fsr2h,f,c
 10914   009BB8  50DF               	movf	indf2,w,c
 10915   009BBA  6FFB               	movwf	??_canProcessMessage& (0+255),b
 10916   009BBC  6BFC               	clrf	(??_canProcessMessage+1)& (0+255),b
 10917                           
 10918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10919                           ; Switch size 1, requested type "simple"
 10920                           ; Number of cases is 1, Range of values is 0 to 0
 10921                           ; switch strategies available:
 10922                           ; Name         Instructions Cycles
 10923                           ; simple_byte            4     3 (average)
 10924                           ;	Chosen strategy is simple_byte
 10925   009BBE  51FC               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10926   009BC0  0A00               	xorlw	0	; case 0
 10927   009BC2  A4D8               	btfss	status,2,c
 10928   009BC4  D7C0               	goto	u25740
 10929                           
 10930                           ; BSR set to: 1
 10931                           ; Switch size 1, requested type "simple"
 10932                           ; Number of cases is 2, Range of values is 93 to 117
 10933                           ; switch strategies available:
 10934                           ; Name         Instructions Cycles
 10935                           ; simple_byte            7     4 (average)
 10936                           ;	Chosen strategy is simple_byte
 10937   009BC6  51FB               	movf	??_canProcessMessage& (0+255),w,b
 10938   009BC8  0A5D               	xorlw	93	; case 93
 10939   009BCA  B4D8               	btfsc	status,2,c
 10940   009BCC  D7D7               	goto	l24228
 10941   009BCE  0A28               	xorlw	40	; case 117
 10942   009BD0  B4D8               	btfsc	status,2,c
 10943   009BD2  D7D6               	goto	l24232
 10944   009BD4  D7B8               	goto	u25740
 10945   009BD6                     __end_of_canProcessMessage:
 10946                           	callstack 0
 10947                           
 10948 ;; *************** function _nvProcessMessage *****************
 10949 ;; Defined at:
 10950 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  m               2   63[BANK1 ] PTR struct Message
 10953 ;;		 -> poll@m(9), 
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;  valueOrError    2   67[BANK1 ] short 
 10956 ;; Return value:  Size  Location     Type
 10957 ;;                  1    wreg      enum E12799
 10958 ;; Registers used:
 10959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10960 ;; Tracked objects:
 10961 ;;		On entry : 0/0
 10962 ;;		On exit  : 0/0
 10963 ;;		Unchanged: 0/0
 10964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10965 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10966 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10967 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10968 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10969 ;;Total ram usage:        6 bytes
 10970 ;; Hardware stack levels used: 1
 10971 ;; Hardware stack levels required when called: 27
 10972 ;; This function calls:
 10973 ;;		_findServiceIndex
 10974 ;;		_getNV
 10975 ;;		_sendMessage2
 10976 ;;		_sendMessage3
 10977 ;;		_sendMessage4
 10978 ;;		_sendMessage5
 10979 ;;		_setNV
 10980 ;;		_startTimedResponse
 10981 ;; This function is called by:
 10982 ;;		_poll
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           
 10986                           	psect	text22
 10987   00468C                     __ptext22:
 10988                           	callstack 0
 10989   00468C                     _nvProcessMessage:
 10990                           	callstack 2
 10991                           
 10992                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 10993                           
 10994                           ;incstack = 0
 10995   00468C  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 10996   004690  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10997   004694  0E03               	movlw	3
 10998   004696  60DF               	cpfslt	indf2,c
 10999   004698  D002               	goto	l23916
 11000   00469A                     u25480:
 11001                           
 11002                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 11003   00469A  0E00               	movlw	0
 11004   00469C  0012               	return	
 11005   00469E                     l23916:
 11006                           
 11007                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11008   00469E  0101               	movlb	1	; () banked
 11009   0046A0  EE20 F002          	lfsr	2,2
 11010   0046A4  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11011   0046A6  26D9               	addwf	fsr2l,f,c
 11012   0046A8  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11013   0046AA  22DA               	addwfc	fsr2h,f,c
 11014   0046AC  50DE               	movf	postinc2,w,c
 11015   0046AE  0100               	movlb	0	; () banked
 11016   0046B0  19BE               	xorwf	(_nn+1)& (0+255),w,b
 11017   0046B2  A4D8               	btfss	status,2,c
 11018   0046B4  D7F2               	goto	u25480
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11022   0046B6  0101               	movlb	1	; () banked
 11023   0046B8  EE20 F003          	lfsr	2,3
 11024   0046BC  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11025   0046BE  26D9               	addwf	fsr2l,f,c
 11026   0046C0  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11027   0046C2  22DA               	addwfc	fsr2h,f,c
 11028   0046C4  0100               	movlb	0	; () banked
 11029   0046C6  51BD               	movf	_nn& (0+255),w,b
 11030   0046C8  18DE               	xorwf	postinc2,w,c
 11031   0046CA  A4D8               	btfss	status,2,c
 11032   0046CC  D7E6               	goto	u25480
 11033   0046CE  D155               	goto	l24038
 11034   0046D0                     l23928:
 11035                           
 11036                           ; BSR set to: 1
 11037                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 11038   0046D0  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 11039   0046D4  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11040   0046D8  0E04               	movlw	4
 11041   0046DA  60DF               	cpfslt	indf2,c
 11042   0046DC  D01D               	goto	l23938
 11043                           
 11044                           ; BSR set to: 1
 11045                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 11046   0046DE  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11047   0046E2  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11048   0046E6  0E01               	movlw	1
 11049   0046E8  0100               	movlb	0	; () banked
 11050   0046EA  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11051   0046EC  0E6F               	movlw	111
 11052   0046EE  EC3F  F060         	call	_sendMessage3
 11053                           
 11054                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11055   0046F2  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11056   0046F6  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11057   0046FA  0E71               	movlw	113
 11058   0046FC  0101               	movlb	1	; () banked
 11059   0046FE  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11060   004700  0E01               	movlw	1
 11061   004702  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11062   004704  0E01               	movlw	1
 11063   004706  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11064   004708  0EAF               	movlw	175
 11065   00470A  ECE1  F05F         	call	_sendMessage5
 11066   00470E                     l23932:
 11067                           
 11068                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 11069   00470E  0101               	movlb	1	; () banked
 11070   004710  4BA8               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 11071   004712  2BA9               	incf	(_nvDiagnostics+5)& (0+255),f,b
 11072   004714                     l23934:
 11073                           
 11074                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 11075   004714  0E01               	movlw	1
 11076   004716  0012               	return	
 11077   004718                     l23938:
 11078                           
 11079                           ; BSR set to: 1
 11080                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 11081   004718  EE20 F004          	lfsr	2,4
 11082   00471C  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11083   00471E  26D9               	addwf	fsr2l,f,c
 11084   004720  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11085   004722  22DA               	addwfc	fsr2h,f,c
 11086   004724  50DF               	movf	indf2,w,c
 11087   004726  EC52  F05E         	call	_getNV
 11088   00472A  C08D  F1FD         	movff	?_getNV,nvProcessMessage@valueOrError
 11089   00472E  C08E  F1FE         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11090                           
 11091                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 11092   004732  0101               	movlb	1	; () banked
 11093   004734  AFFE               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11094   004736  D01B               	goto	l23950
 11095                           
 11096                           ; BSR set to: 1
 11097                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11098   004738  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11099   00473C  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11100   004740  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11101   004742  0800               	sublw	0
 11102   004744  0100               	movlb	0	; () banked
 11103   004746  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11104   004748  0E6F               	movlw	111
 11105   00474A  EC3F  F060         	call	_sendMessage3
 11106                           
 11107                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11108   00474E  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11109   004752  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11110   004756  0E71               	movlw	113
 11111   004758  0101               	movlb	1	; () banked
 11112   00475A  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11113   00475C  0E01               	movlw	1
 11114   00475E  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11115   004760  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11116   004762  0800               	sublw	0
 11117   004764  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11118   004766  0EAF               	movlw	175
 11119   004768  ECE1  F05F         	call	_sendMessage5
 11120   00476C  D7D0               	goto	l23932
 11121   00476E                     l23950:
 11122                           
 11123                           ; BSR set to: 1
 11124                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 11125   00476E  4BA6               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11126   004770  2BA7               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11127                           
 11128                           ; BSR set to: 1
 11129                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11130   004772  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 11131   004776  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 11132   00477A  EE20 F004          	lfsr	2,4
 11133   00477E  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11134   004780  26D9               	addwf	fsr2l,f,c
 11135   004782  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11136   004784  22DA               	addwfc	fsr2h,f,c
 11137   004786  50DF               	movf	indf2,w,c
 11138   004788  6FC4               	movwf	sendMessage4@data3& (0+255),b
 11139   00478A  C1FD  F1C5         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11140   00478E  0E97               	movlw	151
 11141   004790  ECF9  F05F         	call	_sendMessage4
 11142                           
 11143                           ;../../VLCBlib_PIC/nv.c: 278:             if (m->bytes[2] == 0) {
 11144   004794  0101               	movlb	1	; () banked
 11145   004796  EE20 F004          	lfsr	2,4
 11146   00479A  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11147   00479C  26D9               	addwf	fsr2l,f,c
 11148   00479E  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11149   0047A0  22DA               	addwfc	fsr2h,f,c
 11150   0047A2  50DF               	movf	indf2,w,c
 11151   0047A4  A4D8               	btfss	status,2,c
 11152   0047A6  D7B6               	goto	l23934
 11153                           
 11154                           ; BSR set to: 1
 11155                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 11156   0047A8  0E02               	movlw	2
 11157   0047AA  ECBF  F056         	call	_findServiceIndex
 11158   0047AE  0100               	movlb	0	; () banked
 11159   0047B0  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11160   0047B2  0EE8               	movlw	low _nvTRnvrdCallback
 11161   0047B4  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11162   0047B6  0EBB               	movlw	high _nvTRnvrdCallback
 11163   0047B8  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11164   0047BA  0E06               	movlw	6
 11165   0047BC  EC14  F05E         	call	_startTimedResponse
 11166   0047C0  D7A9               	goto	l23934
 11167   0047C2                     l23962:
 11168                           
 11169                           ; BSR set to: 1
 11170                           ;../../VLCBlib_PIC/nv.c: 285:             if (m->len < 5) {
 11171   0047C2  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 11172   0047C6  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11173   0047CA  0E05               	movlw	5
 11174   0047CC  60DF               	cpfslt	indf2,c
 11175   0047CE  D00E               	goto	l23972
 11176                           
 11177                           ; BSR set to: 1
 11178                           ;../../VLCBlib_PIC/nv.c: 288:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11179   0047D0  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11180   0047D4  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11181   0047D8  0E96               	movlw	150
 11182   0047DA  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11183   0047DC  0E01               	movlw	1
 11184   0047DE  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11185   0047E0  0E01               	movlw	1
 11186   0047E2  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11187   0047E4  0EAF               	movlw	175
 11188   0047E6  ECE1  F05F         	call	_sendMessage5
 11189   0047EA  D791               	goto	l23932
 11190   0047EC                     l23972:
 11191                           
 11192                           ; BSR set to: 1
 11193                           ;../../VLCBlib_PIC/nv.c: 295:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11194   0047EC  EE20 F005          	lfsr	2,5
 11195   0047F0  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11196   0047F2  26D9               	addwf	fsr2l,f,c
 11197   0047F4  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11198   0047F6  22DA               	addwfc	fsr2h,f,c
 11199   0047F8  50DF               	movf	indf2,w,c
 11200   0047FA  6FF4               	movwf	setNV@value& (0+255),b
 11201   0047FC  EE20 F004          	lfsr	2,4
 11202   004800  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11203   004802  26D9               	addwf	fsr2l,f,c
 11204   004804  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11205   004806  22DA               	addwfc	fsr2h,f,c
 11206   004808  50DF               	movf	indf2,w,c
 11207   00480A  EC20  F055         	call	_setNV
 11208   00480E  0101               	movlb	1	; () banked
 11209   004810  6FFB               	movwf	??_nvProcessMessage& (0+255),b
 11210   004812  51FB               	movf	??_nvProcessMessage& (0+255),w,b
 11211   004814  6FFD               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11212   004816  6BFE               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11213                           
 11214                           ; BSR set to: 1
 11215                           ;../../VLCBlib_PIC/nv.c: 296:             if (valueOrError >0) {
 11216   004818  BFFE               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11217   00481A  D00F               	goto	l23984
 11218   00481C  51FE               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11219   00481E  E103               	bnz	u25550
 11220   004820  05FD               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11221   004822  A0D8               	btfss	status,0,c
 11222   004824  D00A               	goto	l23984
 11223   004826                     u25550:
 11224                           
 11225                           ; BSR set to: 1
 11226                           ;../../VLCBlib_PIC/nv.c: 297:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11227   004826  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11228   00482A  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11229   00482E  C1FD  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11230   004832  0E6F               	movlw	111
 11231   004834  EC3F  F060         	call	_sendMessage3
 11232   004838  D76A               	goto	l23932
 11233   00483A                     l23984:
 11234                           
 11235                           ; BSR set to: 1
 11236                           ;../../VLCBlib_PIC/nv.c: 304:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 11237   00483A  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 11238   00483E  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 11239   004842  0E59               	movlw	89
 11240   004844  ECB1  F05F         	call	_sendMessage2
 11241                           
 11242                           ;../../VLCBlib_PIC/nv.c: 306:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 11243   004848  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11244   00484C  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11245   004850  0E96               	movlw	150
 11246   004852  0101               	movlb	1	; () banked
 11247   004854  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11248   004856  0E01               	movlw	1
 11249   004858  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11250   00485A  0E00               	movlw	0
 11251   00485C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11252   00485E  0EAF               	movlw	175
 11253   004860  ECE1  F05F         	call	_sendMessage5
 11254   004864  D757               	goto	l23934
 11255   004866                     l23990:
 11256                           
 11257                           ; BSR set to: 1
 11258                           ;../../VLCBlib_PIC/nv.c: 311:             if (m->len < 5) {
 11259   004866  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 11260   00486A  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11261   00486E  0E05               	movlw	5
 11262   004870  60DF               	cpfslt	indf2,c
 11263   004872  D00E               	goto	l24000
 11264                           
 11265                           ; BSR set to: 1
 11266                           ;../../VLCBlib_PIC/nv.c: 313:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11267   004874  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11268   004878  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11269   00487C  0E8E               	movlw	142
 11270   00487E  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11271   004880  0E01               	movlw	1
 11272   004882  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11273   004884  0E01               	movlw	1
 11274   004886  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11275   004888  0EAF               	movlw	175
 11276   00488A  ECE1  F05F         	call	_sendMessage5
 11277   00488E  D73F               	goto	l23932
 11278   004890                     l24000:
 11279                           
 11280                           ; BSR set to: 1
 11281                           ;../../VLCBlib_PIC/nv.c: 319:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11282   004890  EE20 F005          	lfsr	2,5
 11283   004894  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11284   004896  26D9               	addwf	fsr2l,f,c
 11285   004898  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11286   00489A  22DA               	addwfc	fsr2h,f,c
 11287   00489C  50DF               	movf	indf2,w,c
 11288   00489E  6FF4               	movwf	setNV@value& (0+255),b
 11289   0048A0  EE20 F004          	lfsr	2,4
 11290   0048A4  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11291   0048A6  26D9               	addwf	fsr2l,f,c
 11292   0048A8  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11293   0048AA  22DA               	addwfc	fsr2h,f,c
 11294   0048AC  50DF               	movf	indf2,w,c
 11295   0048AE  EC20  F055         	call	_setNV
 11296   0048B2  0101               	movlb	1	; () banked
 11297   0048B4  6FFB               	movwf	??_nvProcessMessage& (0+255),b
 11298   0048B6  51FB               	movf	??_nvProcessMessage& (0+255),w,b
 11299   0048B8  6FFD               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11300   0048BA  6BFE               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11301                           
 11302                           ; BSR set to: 1
 11303                           ;../../VLCBlib_PIC/nv.c: 320:             if (valueOrError >0) {
 11304   0048BC  BFFE               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11305   0048BE  D01D               	goto	l24012
 11306   0048C0  51FE               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11307   0048C2  E103               	bnz	u25570
 11308   0048C4  05FD               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11309   0048C6  A0D8               	btfss	status,0,c
 11310   0048C8  D018               	goto	l24012
 11311   0048CA                     u25570:
 11312                           
 11313                           ; BSR set to: 1
 11314                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11315   0048CA  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11316   0048CE  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11317   0048D2  C1FD  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11318   0048D6  0E6F               	movlw	111
 11319   0048D8  EC3F  F060         	call	_sendMessage3
 11320                           
 11321                           ;../../VLCBlib_PIC/nv.c: 322:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 11322   0048DC  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11323   0048E0  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11324   0048E4  0E8E               	movlw	142
 11325   0048E6  0101               	movlb	1	; () banked
 11326   0048E8  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11327   0048EA  0E01               	movlw	1
 11328   0048EC  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11329   0048EE  C1FD  F1C6         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 11330   0048F2  0EAF               	movlw	175
 11331   0048F4  ECE1  F05F         	call	_sendMessage5
 11332   0048F8  D70A               	goto	l23932
 11333   0048FA                     l24012:
 11334                           
 11335                           ; BSR set to: 1
 11336                           ;../../VLCBlib_PIC/nv.c: 328:             valueOrError = getNV(m->bytes[2]);
 11337   0048FA  EE20 F004          	lfsr	2,4
 11338   0048FE  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11339   004900  26D9               	addwf	fsr2l,f,c
 11340   004902  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11341   004904  22DA               	addwfc	fsr2h,f,c
 11342   004906  50DF               	movf	indf2,w,c
 11343   004908  EC52  F05E         	call	_getNV
 11344   00490C  C08D  F1FD         	movff	?_getNV,nvProcessMessage@valueOrError
 11345   004910  C08E  F1FE         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11346                           
 11347                           ;../../VLCBlib_PIC/nv.c: 329:             if (valueOrError < 0) {
 11348   004914  0101               	movlb	1	; () banked
 11349   004916  AFFE               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11350   004918  D01B               	goto	l24024
 11351                           
 11352                           ; BSR set to: 1
 11353                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11354   00491A  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11355   00491E  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11356   004922  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11357   004924  0800               	sublw	0
 11358   004926  0100               	movlb	0	; () banked
 11359   004928  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11360   00492A  0E6F               	movlw	111
 11361   00492C  EC3F  F060         	call	_sendMessage3
 11362                           
 11363                           ;../../VLCBlib_PIC/nv.c: 331:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11364   004930  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11365   004934  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11366   004938  0E8E               	movlw	142
 11367   00493A  0101               	movlb	1	; () banked
 11368   00493C  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11369   00493E  0E01               	movlw	1
 11370   004940  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11371   004942  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11372   004944  0800               	sublw	0
 11373   004946  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11374   004948  0EAF               	movlw	175
 11375   00494A  ECE1  F05F         	call	_sendMessage5
 11376   00494E  D6DF               	goto	l23932
 11377   004950                     l24024:
 11378                           
 11379                           ; BSR set to: 1
 11380                           ;../../VLCBlib_PIC/nv.c: 337:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11381   004950  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 11382   004954  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 11383   004958  EE20 F004          	lfsr	2,4
 11384   00495C  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11385   00495E  26D9               	addwf	fsr2l,f,c
 11386   004960  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11387   004962  22DA               	addwfc	fsr2h,f,c
 11388   004964  50DF               	movf	indf2,w,c
 11389   004966  6FC4               	movwf	sendMessage4@data3& (0+255),b
 11390   004968  C1FD  F1C5         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11391   00496C  0E97               	movlw	151
 11392   00496E  ECF9  F05F         	call	_sendMessage4
 11393                           
 11394                           ;../../VLCBlib_PIC/nv.c: 339:             nvDiagnostics[0x01].asUint++;
 11395   004972  0101               	movlb	1	; () banked
 11396   004974  4BA6               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11397   004976  2BA7               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11398   004978  D6CD               	goto	l23934
 11399   00497A                     l24038:
 11400                           
 11401                           ; BSR set to: 0
 11402   00497A  0101               	movlb	1	; () banked
 11403   00497C  EE20 F001          	lfsr	2,1
 11404   004980  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11405   004982  26D9               	addwf	fsr2l,f,c
 11406   004984  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11407   004986  22DA               	addwfc	fsr2h,f,c
 11408   004988  50DF               	movf	indf2,w,c
 11409   00498A  6FFB               	movwf	??_nvProcessMessage& (0+255),b
 11410   00498C  6BFC               	clrf	(??_nvProcessMessage+1)& (0+255),b
 11411                           
 11412                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11413                           ; Switch size 1, requested type "simple"
 11414                           ; Number of cases is 1, Range of values is 0 to 0
 11415                           ; switch strategies available:
 11416                           ; Name         Instructions Cycles
 11417                           ; simple_byte            4     3 (average)
 11418                           ;	Chosen strategy is simple_byte
 11419   00498E  51FC               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 11420   004990  0A00               	xorlw	0	; case 0
 11421   004992  A4D8               	btfss	status,2,c
 11422   004994  D682               	goto	u25480
 11423                           
 11424                           ; BSR set to: 1
 11425                           ; Switch size 1, requested type "simple"
 11426                           ; Number of cases is 3, Range of values is 113 to 150
 11427                           ; switch strategies available:
 11428                           ; Name         Instructions Cycles
 11429                           ; simple_byte           10     6 (average)
 11430                           ;	Chosen strategy is simple_byte
 11431   004996  51FB               	movf	??_nvProcessMessage& (0+255),w,b
 11432   004998  0A71               	xorlw	113	; case 113
 11433   00499A  B4D8               	btfsc	status,2,c
 11434   00499C  D699               	goto	l23928
 11435   00499E  0AFF               	xorlw	255	; case 142
 11436   0049A0  B4D8               	btfsc	status,2,c
 11437   0049A2  D761               	goto	l23990
 11438   0049A4  0A18               	xorlw	24	; case 150
 11439   0049A6  B4D8               	btfsc	status,2,c
 11440   0049A8  D70C               	goto	l23962
 11441   0049AA  D677               	goto	u25480
 11442   0049AC                     __end_of_nvProcessMessage:
 11443                           	callstack 0
 11444                           
 11445 ;; *************** function _mnsProcessMessage *****************
 11446 ;; Defined at:
 11447 ;;		line 351 in file "../../VLCBlib_PIC/mns.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  m               2   63[BANK1 ] PTR struct Message
 11450 ;;		 -> poll@m(9), 
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;  d               2   66[BANK1 ] PTR struct DiagnosticVal
 11453 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 11454 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 11455 ;;  newMode         1   68[BANK1 ] unsigned char 
 11456 ;;  i               1   65[BANK1 ] unsigned char 
 11457 ;;  flags           1    0        unsigned char 
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      enum E12799
 11460 ;; Registers used:
 11461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11467 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11468 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11469 ;;      Temps:          0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11470 ;;      Totals:         0       0       6      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11471 ;;Total ram usage:       36 bytes
 11472 ;; Hardware stack levels used: 1
 11473 ;; Hardware stack levels required when called: 27
 11474 ;; This function calls:
 11475 ;;		NULL
 11476 ;;		_ackGetDiagnostic
 11477 ;;		_bootEsdData
 11478 ;;		_canEsdData
 11479 ;;		_canGetDiagnostic
 11480 ;;		_consumer2QEsdData
 11481 ;;		_consumer2QGetDiagnostic
 11482 ;;		_factoryReset
 11483 ;;		_findServiceIndex
 11484 ;;		_getParameter
 11485 ;;		_getParameterFlags
 11486 ;;		_mnsGetDiagnostic
 11487 ;;		_nvGetDiagnostic
 11488 ;;		_nvGetESDdata
 11489 ;;		_producerEsdData
 11490 ;;		_producerGetDiagnostic
 11491 ;;		_rebuildHashtable
 11492 ;;		_sendMessage2
 11493 ;;		_sendMessage3
 11494 ;;		_sendMessage4
 11495 ;;		_sendMessage5
 11496 ;;		_sendMessage6
 11497 ;;		_sendMessage7
 11498 ;;		_setLEDsByMode
 11499 ;;		_startTimedResponse
 11500 ;;		_teachGetDiagnostic
 11501 ;;		_teachGetESDdata
 11502 ;;		_writeNVM
 11503 ;; This function is called by:
 11504 ;;		_poll
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           	psect	text23
 11509   0016CE                     __ptext23:
 11510                           	callstack 0
 11511   0016CE                     _mnsProcessMessage:
 11512                           	callstack 2
 11513                           
 11514                           ;../../VLCBlib_PIC/mns.c: 352:     uint8_t i;;../../VLCBlib_PIC/mns.c: 353:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 355:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 360: 
      +                              if (mode_state == MODE_SETUP) {
 11515                           
 11516                           ;incstack = 0
 11517   0016CE  0100               	movlb	0	; () banked
 11518   0016D0  51C5               	movf	_mode_state& (0+255),w,b
 11519   0016D2  B4D8               	btfsc	status,2,c
 11520   0016D4  D0BC               	goto	l23486
 11521   0016D6  D127               	goto	l23532
 11522   0016D8                     l23442:
 11523                           
 11524                           ; BSR set to: 2
 11525                           ;../../VLCBlib_PIC/mns.c: 363:                 if (m->len < 3) {
 11526   0016D8  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11527   0016DC  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11528   0016E0  0E03               	movlw	3
 11529   0016E2  60DF               	cpfslt	indf2,c
 11530   0016E4  D00F               	goto	l23446
 11531                           
 11532                           ; BSR set to: 2
 11533                           ;../../VLCBlib_PIC/mns.c: 365:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11534   0016E6  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11535   0016EA  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11536   0016EE  0E42               	movlw	66
 11537   0016F0  0101               	movlb	1	; () banked
 11538   0016F2  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11539   0016F4  0E01               	movlw	1
 11540   0016F6  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11541   0016F8  0E01               	movlw	1
 11542   0016FA  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11543   0016FC  0EAF               	movlw	175
 11544   0016FE  ECE1  F05F         	call	_sendMessage5
 11545                           
 11546                           ;../../VLCBlib_PIC/mns.c: 367:                 } else {
 11547   001702  D03C               	goto	l23462
 11548   001704                     l23446:
 11549                           
 11550                           ; BSR set to: 2
 11551                           ;../../VLCBlib_PIC/mns.c: 368:                     nn.bytes.hi = m->bytes[0];
 11552   001704  0101               	movlb	1	; () banked
 11553   001706  EE20 F002          	lfsr	2,2
 11554   00170A  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11555   00170C  26D9               	addwf	fsr2l,f,c
 11556   00170E  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11557   001710  22DA               	addwfc	fsr2h,f,c
 11558   001712  50DF               	movf	indf2,w,c
 11559   001714  0100               	movlb	0	; () banked
 11560   001716  6FBE               	movwf	(_nn+1)& (0+255),b
 11561                           
 11562                           ;../../VLCBlib_PIC/mns.c: 369:                     nn.bytes.lo = m->bytes[1];
 11563   001718  0101               	movlb	1	; () banked
 11564   00171A  EE20 F003          	lfsr	2,3
 11565   00171E  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11566   001720  26D9               	addwf	fsr2l,f,c
 11567   001722  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11568   001724  22DA               	addwfc	fsr2h,f,c
 11569   001726  50DF               	movf	indf2,w,c
 11570   001728  0100               	movlb	0	; () banked
 11571   00172A  6FBD               	movwf	_nn& (0+255),b
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;../../VLCBlib_PIC/mns.c: 370:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 11575   00172C  0EFD               	movlw	253
 11576   00172E  6FA4               	movwf	writeNVM@index& (0+255),b
 11577   001730  0E03               	movlw	3
 11578   001732  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11579   001734  0E00               	movlw	0
 11580   001736  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11581   001738  C0BE  F0A7         	movff	_nn+1,writeNVM@value
 11582   00173C  0E00               	movlw	0
 11583   00173E  EC60  F05C         	call	_writeNVM
 11584                           
 11585                           ;../../VLCBlib_PIC/mns.c: 371:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 11586   001742  0EFC               	movlw	252
 11587   001744  0100               	movlb	0	; () banked
 11588   001746  6FA4               	movwf	writeNVM@index& (0+255),b
 11589   001748  0E03               	movlw	3
 11590   00174A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11591   00174C  0E00               	movlw	0
 11592   00174E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11593   001750  C0BD  F0A7         	movff	_nn,writeNVM@value
 11594   001754  0E00               	movlw	0
 11595   001756  EC60  F05C         	call	_writeNVM
 11596                           
 11597                           ;../../VLCBlib_PIC/mns.c: 373:                     mode_state = MODE_NORMAL;
 11598   00175A  0E01               	movlw	1
 11599   00175C  0100               	movlb	0	; () banked
 11600   00175E  6FC5               	movwf	_mode_state& (0+255),b
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;../../VLCBlib_PIC/mns.c: 376:                     rebuildHashtable();
 11604   001760  EC93  F03E         	call	_rebuildHashtable	;wreg free
 11605                           
 11606                           ;../../VLCBlib_PIC/mns.c: 379:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 11607   001764  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 11608   001768  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 11609   00176C  0E52               	movlw	82
 11610   00176E  ECB1  F05F         	call	_sendMessage2
 11611                           
 11612                           ;../../VLCBlib_PIC/mns.c: 381:                     mnsDiagnostics[0x05].asUint++;
 11613   001772  0101               	movlb	1	; () banked
 11614   001774  4B97               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 11615   001776  2B98               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 11616   001778                     l23460:
 11617                           
 11618                           ;../../VLCBlib_PIC/mns.c: 384:                     setLEDsByMode();
 11619   001778  EC50  F05F         	call	_setLEDsByMode	;wreg free
 11620   00177C                     l23462:
 11621                           
 11622                           ;../../VLCBlib_PIC/mns.c: 386:                 return PROCESSED;
 11623   00177C  0E01               	movlw	1
 11624   00177E  0012               	return	
 11625   001780                     l23466:
 11626                           
 11627                           ; BSR set to: 2
 11628                           ;../../VLCBlib_PIC/mns.c: 388:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 11629   001780  0EA5               	movlw	165
 11630   001782  0101               	movlb	1	; () banked
 11631   001784  6FC2               	movwf	sendMessage7@data1& (0+255),b
 11632   001786  0E61               	movlw	97
 11633   001788  6FC3               	movwf	sendMessage7@data2& (0+255),b
 11634   00178A  0E20               	movlw	32
 11635   00178C  6FC4               	movwf	sendMessage7@data3& (0+255),b
 11636   00178E  0EFF               	movlw	255
 11637   001790  6FC5               	movwf	sendMessage7@data4& (0+255),b
 11638   001792  0E14               	movlw	20
 11639   001794  6FC6               	movwf	sendMessage7@data5& (0+255),b
 11640   001796  0E7F               	movlw	127
 11641   001798  6FC7               	movwf	sendMessage7@data6& (0+255),b
 11642   00179A  0E04               	movlw	4
 11643   00179C  6FC8               	movwf	sendMessage7@data7& (0+255),b
 11644   00179E  0EEF               	movlw	239
 11645   0017A0  ECC9  F05F         	call	_sendMessage7
 11646   0017A4  D7EB               	goto	l23462
 11647   0017A6                     l23472:
 11648                           
 11649                           ; BSR set to: 2
 11650                           ;../../VLCBlib_PIC/mns.c: 393:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 11651   0017A6  0E48               	movlw	72
 11652   0017A8  6EF6               	movwf	tblptrl,c
 11653   0017AA                     	if	1	;There is more than 1 active tblptr byte
 11654   0017AA  0E08               	movlw	8
 11655   0017AC  6EF7               	movwf	tblptrh,c
 11656   0017AE                     	endif
 11657   0017AE                     	if	1	;There are 3 active tblptr bytes
 11658   0017AE  0E00               	movlw	0
 11659   0017B0  6EF8               	movwf	tblptru,c
 11660   0017B2                     	endif
 11661   0017B2  0008               	tblrd		*
 11662   0017B4  CFF5 F1C2          	movff	tablat,sendMessage7@data1
 11663   0017B8  0E49               	movlw	73
 11664   0017BA  6EF6               	movwf	tblptrl,c
 11665   0017BC  0E08               	movlw	8
 11666   0017BE  6EF7               	movwf	tblptrh,c
 11667   0017C0  0E00               	movlw	0
 11668   0017C2  6EF8               	movwf	tblptru,c
 11669   0017C4  0008               	tblrd		*
 11670   0017C6  CFF5 F1C3          	movff	tablat,sendMessage7@data2
 11671   0017CA  0E4A               	movlw	74
 11672   0017CC  6EF6               	movwf	tblptrl,c
 11673   0017CE  0E08               	movlw	8
 11674   0017D0  6EF7               	movwf	tblptrh,c
 11675   0017D2  0E00               	movlw	0
 11676   0017D4  6EF8               	movwf	tblptru,c
 11677   0017D6  0008               	tblrd		*
 11678   0017D8  CFF5 F1C4          	movff	tablat,sendMessage7@data3
 11679   0017DC  0E4B               	movlw	75
 11680   0017DE  6EF6               	movwf	tblptrl,c
 11681   0017E0  0E08               	movlw	8
 11682   0017E2  6EF7               	movwf	tblptrh,c
 11683   0017E4  0E00               	movlw	0
 11684   0017E6  6EF8               	movwf	tblptru,c
 11685   0017E8  0008               	tblrd		*
 11686   0017EA  CFF5 F1C5          	movff	tablat,sendMessage7@data4
 11687   0017EE  0E4C               	movlw	76
 11688   0017F0  6EF6               	movwf	tblptrl,c
 11689   0017F2  0E08               	movlw	8
 11690   0017F4  6EF7               	movwf	tblptrh,c
 11691   0017F6  0E00               	movlw	0
 11692   0017F8  6EF8               	movwf	tblptru,c
 11693   0017FA  0008               	tblrd		*
 11694   0017FC  CFF5 F1C6          	movff	tablat,sendMessage7@data5
 11695   001800  0E4D               	movlw	77
 11696   001802  6EF6               	movwf	tblptrl,c
 11697   001804  0E08               	movlw	8
 11698   001806  6EF7               	movwf	tblptrh,c
 11699   001808  0E00               	movlw	0
 11700   00180A  6EF8               	movwf	tblptru,c
 11701   00180C  0008               	tblrd		*
 11702   00180E  CFF5 F1C7          	movff	tablat,sendMessage7@data6
 11703   001812  0E4E               	movlw	78
 11704   001814  6EF6               	movwf	tblptrl,c
 11705   001816  0E08               	movlw	8
 11706   001818  6EF7               	movwf	tblptrh,c
 11707   00181A  0E00               	movlw	0
 11708   00181C  6EF8               	movwf	tblptru,c
 11709   00181E  0008               	tblrd		*
 11710   001820  CFF5 F1C8          	movff	tablat,sendMessage7@data7
 11711   001824  0EE2               	movlw	226
 11712   001826  ECC9  F05F         	call	_sendMessage7
 11713   00182A  D7A8               	goto	l23462
 11714   00182C                     l23478:
 11715                           
 11716                           ; BSR set to: 2
 11717                           ;../../VLCBlib_PIC/mns.c: 397:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 11718   00182C  0E00               	movlw	0
 11719   00182E  0101               	movlb	1	; () banked
 11720   001830  6FC2               	movwf	sendMessage5@data1& (0+255),b
 11721   001832  0E00               	movlw	0
 11722   001834  6FC3               	movwf	sendMessage5@data2& (0+255),b
 11723   001836  0EA5               	movlw	165
 11724   001838  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11725   00183A  0E20               	movlw	32
 11726   00183C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11727   00183E  ECB8  F05A         	call	_getParameterFlags	;wreg free
 11728   001842  0101               	movlb	1	; () banked
 11729   001844  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11730   001846  0EB6               	movlw	182
 11731   001848  ECE1  F05F         	call	_sendMessage5
 11732   00184C  D797               	goto	l23462
 11733   00184E                     l23486:
 11734                           
 11735                           ; BSR set to: 0
 11736   00184E  0101               	movlb	1	; () banked
 11737   001850  EE20 F001          	lfsr	2,1
 11738   001854  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11739   001856  26D9               	addwf	fsr2l,f,c
 11740   001858  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11741   00185A  22DA               	addwfc	fsr2h,f,c
 11742   00185C  50DF               	movf	indf2,w,c
 11743   00185E  0102               	movlb	2	; () banked
 11744   001860  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11745   001862  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11746                           
 11747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11748                           ; Switch size 1, requested type "simple"
 11749                           ; Number of cases is 1, Range of values is 0 to 0
 11750                           ; switch strategies available:
 11751                           ; Name         Instructions Cycles
 11752                           ; simple_byte            4     3 (average)
 11753                           ;	Chosen strategy is simple_byte
 11754   001864  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11755   001866  0A00               	xorlw	0	; case 0
 11756   001868  A4D8               	btfss	status,2,c
 11757   00186A  D00D               	goto	l23488
 11758                           
 11759                           ; BSR set to: 2
 11760                           ; Switch size 1, requested type "simple"
 11761                           ; Number of cases is 4, Range of values is 13 to 66
 11762                           ; switch strategies available:
 11763                           ; Name         Instructions Cycles
 11764                           ; simple_byte           13     7 (average)
 11765                           ;	Chosen strategy is simple_byte
 11766   00186C  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11767   00186E  0A0D               	xorlw	13	; case 13
 11768   001870  B4D8               	btfsc	status,2,c
 11769   001872  D7DC               	goto	l23478
 11770   001874  0A1D               	xorlw	29	; case 16
 11771   001876  B4D8               	btfsc	status,2,c
 11772   001878  D783               	goto	l23466
 11773   00187A  0A01               	xorlw	1	; case 17
 11774   00187C  B4D8               	btfsc	status,2,c
 11775   00187E  D793               	goto	l23472
 11776   001880  0A53               	xorlw	83	; case 66
 11777   001882  B4D8               	btfsc	status,2,c
 11778   001884  D729               	goto	l23442
 11779   001886                     l23488:
 11780                           
 11781                           ;../../VLCBlib_PIC/mns.c: 402:         return NOT_PROCESSED;
 11782   001886  0E00               	movlw	0
 11783   001888  0012               	return	
 11784   00188A                     l23492:
 11785                           
 11786                           ; BSR set to: 2
 11787                           ;../../VLCBlib_PIC/mns.c: 407:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11788   00188A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11789   00188E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11790   001892  0EA5               	movlw	165
 11791   001894  0101               	movlb	1	; () banked
 11792   001896  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11793   001898  0E20               	movlw	32
 11794   00189A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11795   00189C  ECB8  F05A         	call	_getParameterFlags	;wreg free
 11796   0018A0  0101               	movlb	1	; () banked
 11797   0018A2  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11798   0018A4  0EB6               	movlw	182
 11799   0018A6  ECE1  F05F         	call	_sendMessage5
 11800   0018AA  D768               	goto	l23462
 11801   0018AC                     l23498:
 11802                           
 11803                           ; BSR set to: 2
 11804                           ;../../VLCBlib_PIC/mns.c: 411:             if (m->len < 4) {
 11805   0018AC  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11806   0018B0  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11807   0018B4  0E04               	movlw	4
 11808   0018B6  60DF               	cpfslt	indf2,c
 11809   0018B8  D00F               	goto	l23506
 11810                           
 11811                           ; BSR set to: 2
 11812                           ;../../VLCBlib_PIC/mns.c: 412:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11813   0018BA  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11814   0018BE  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11815   0018C2  0E76               	movlw	118
 11816   0018C4  0101               	movlb	1	; () banked
 11817   0018C6  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11818   0018C8  0E01               	movlw	1
 11819   0018CA  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11820   0018CC  0E01               	movlw	1
 11821   0018CE  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11822   0018D0  0EAF               	movlw	175
 11823   0018D2  ECE1  F05F         	call	_sendMessage5
 11824   0018D6  D752               	goto	l23462
 11825   0018D8                     l23506:
 11826                           
 11827                           ; BSR set to: 2
 11828                           ;../../VLCBlib_PIC/mns.c: 415:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11829   0018D8  0101               	movlb	1	; () banked
 11830   0018DA  EE20 F002          	lfsr	2,2
 11831   0018DE  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11832   0018E0  26D9               	addwf	fsr2l,f,c
 11833   0018E2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11834   0018E4  22DA               	addwfc	fsr2h,f,c
 11835   0018E6  50DF               	movf	indf2,w,c
 11836   0018E8  A4D8               	btfss	status,2,c
 11837   0018EA  D033               	goto	l23534
 11838                           
 11839                           ; BSR set to: 1
 11840   0018EC  EE20 F003          	lfsr	2,3
 11841   0018F0  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11842   0018F2  26D9               	addwf	fsr2l,f,c
 11843   0018F4  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11844   0018F6  22DA               	addwfc	fsr2h,f,c
 11845   0018F8  50DF               	movf	indf2,w,c
 11846   0018FA  A4D8               	btfss	status,2,c
 11847   0018FC  D02A               	goto	l23534
 11848                           
 11849                           ; BSR set to: 1
 11850                           ;../../VLCBlib_PIC/mns.c: 416:                 newMode = m->bytes[2];
 11851   0018FE  EE20 F004          	lfsr	2,4
 11852   001902  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11853   001904  26D9               	addwf	fsr2l,f,c
 11854   001906  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11855   001908  22DA               	addwfc	fsr2h,f,c
 11856   00190A  50DF               	movf	indf2,w,c
 11857   00190C  6FFE               	movwf	mnsProcessMessage@newMode& (0+255),b
 11858                           
 11859                           ; BSR set to: 1
 11860                           ;../../VLCBlib_PIC/mns.c: 418:                 if (newMode == MODE_HEARTBEAT_ON) {
 11861   00190E  0E0C               	movlw	12
 11862   001910  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11863   001912  A4D8               	btfss	status,2,c
 11864   001914  D002               	goto	l23522
 11865                           
 11866                           ; BSR set to: 1
 11867                           ;../../VLCBlib_PIC/mns.c: 419:                     mode_flags |= 4;
 11868   001916  8566               	bsf	_mode_flags& (0+255),2,b
 11869   001918  D731               	goto	l23462
 11870   00191A                     l23522:
 11871                           
 11872                           ; BSR set to: 1
 11873   00191A  0E0D               	movlw	13
 11874   00191C  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11875   00191E  A4D8               	btfss	status,2,c
 11876   001920  D018               	goto	l23534
 11877                           
 11878                           ; BSR set to: 1
 11879                           ;../../VLCBlib_PIC/mns.c: 423:                     mode_flags &= ~4;
 11880   001922  9566               	bcf	_mode_flags& (0+255),2,b
 11881   001924  D72B               	goto	l23462
 11882   001926                     l23532:
 11883                           
 11884                           ; BSR set to: 0
 11885   001926  0101               	movlb	1	; () banked
 11886   001928  EE20 F001          	lfsr	2,1
 11887   00192C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11888   00192E  26D9               	addwf	fsr2l,f,c
 11889   001930  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11890   001932  22DA               	addwfc	fsr2h,f,c
 11891   001934  50DF               	movf	indf2,w,c
 11892   001936  0102               	movlb	2	; () banked
 11893   001938  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11894   00193A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11895                           
 11896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11897                           ; Switch size 1, requested type "simple"
 11898                           ; Number of cases is 1, Range of values is 0 to 0
 11899                           ; switch strategies available:
 11900                           ; Name         Instructions Cycles
 11901                           ; simple_byte            4     3 (average)
 11902                           ;	Chosen strategy is simple_byte
 11903   00193C  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11904   00193E  0A00               	xorlw	0	; case 0
 11905   001940  A4D8               	btfss	status,2,c
 11906   001942  D007               	goto	l23534
 11907                           
 11908                           ; BSR set to: 2
 11909                           ; Switch size 1, requested type "simple"
 11910                           ; Number of cases is 2, Range of values is 13 to 118
 11911                           ; switch strategies available:
 11912                           ; Name         Instructions Cycles
 11913                           ; simple_byte            7     4 (average)
 11914                           ;	Chosen strategy is simple_byte
 11915   001944  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11916   001946  0A0D               	xorlw	13	; case 13
 11917   001948  B4D8               	btfsc	status,2,c
 11918   00194A  D79F               	goto	l23492
 11919   00194C  0A7B               	xorlw	123	; case 118
 11920   00194E  B4D8               	btfsc	status,2,c
 11921   001950  D7AD               	goto	l23498
 11922   001952                     l23534:
 11923                           
 11924                           ;../../VLCBlib_PIC/mns.c: 433:     if (m->len < 3) {
 11925   001952  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11926   001956  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11927   00195A  0E03               	movlw	3
 11928   00195C  60DF               	cpfslt	indf2,c
 11929   00195E  D001               	goto	l23540
 11930   001960  D792               	goto	l23488
 11931   001962                     l23540:
 11932                           
 11933                           ;../../VLCBlib_PIC/mns.c: 437:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11934   001962  0101               	movlb	1	; () banked
 11935   001964  EE20 F002          	lfsr	2,2
 11936   001968  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11937   00196A  26D9               	addwf	fsr2l,f,c
 11938   00196C  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11939   00196E  22DA               	addwfc	fsr2h,f,c
 11940   001970  50DE               	movf	postinc2,w,c
 11941   001972  0100               	movlb	0	; () banked
 11942   001974  19BE               	xorwf	(_nn+1)& (0+255),w,b
 11943   001976  A4D8               	btfss	status,2,c
 11944   001978  D786               	goto	l23488
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;../../VLCBlib_PIC/mns.c: 438:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11948   00197A  0101               	movlb	1	; () banked
 11949   00197C  EE20 F003          	lfsr	2,3
 11950   001980  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11951   001982  26D9               	addwf	fsr2l,f,c
 11952   001984  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11953   001986  22DA               	addwfc	fsr2h,f,c
 11954   001988  0100               	movlb	0	; () banked
 11955   00198A  51BD               	movf	_nn& (0+255),w,b
 11956   00198C  18DE               	xorwf	postinc2,w,c
 11957   00198E  A4D8               	btfss	status,2,c
 11958   001990  D77A               	goto	l23488
 11959   001992  EFDF  F010         	goto	l23750
 11960   001996                     l23552:
 11961                           
 11962                           ; BSR set to: 2
 11963                           ;../../VLCBlib_PIC/mns.c: 442:             if (m->len < 4) {
 11964   001996  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11965   00199A  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11966   00199E  0E04               	movlw	4
 11967   0019A0  60DF               	cpfslt	indf2,c
 11968   0019A2  D00F               	goto	l23560
 11969                           
 11970                           ; BSR set to: 2
 11971                           ;../../VLCBlib_PIC/mns.c: 444:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11972   0019A4  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11973   0019A8  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11974   0019AC  0E73               	movlw	115
 11975   0019AE  0101               	movlb	1	; () banked
 11976   0019B0  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11977   0019B2  0E01               	movlw	1
 11978   0019B4  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11979   0019B6  0E01               	movlw	1
 11980   0019B8  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11981   0019BA  0EAF               	movlw	175
 11982   0019BC  ECE1  F05F         	call	_sendMessage5
 11983   0019C0  D6DD               	goto	l23462
 11984   0019C2                     l23560:
 11985                           
 11986                           ; BSR set to: 2
 11987                           ;../../VLCBlib_PIC/mns.c: 448:             if (m->bytes[2] > 20) {
 11988   0019C2  0101               	movlb	1	; () banked
 11989   0019C4  EE20 F004          	lfsr	2,4
 11990   0019C8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11991   0019CA  26D9               	addwf	fsr2l,f,c
 11992   0019CC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11993   0019CE  22DA               	addwfc	fsr2h,f,c
 11994   0019D0  0E14               	movlw	20
 11995   0019D2  64DF               	cpfsgt	indf2,c
 11996   0019D4  D019               	goto	l23568
 11997                           
 11998                           ; BSR set to: 1
 11999                           ;../../VLCBlib_PIC/mns.c: 449:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 12000   0019D6  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 12001   0019DA  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 12002   0019DE  0E09               	movlw	9
 12003   0019E0  0100               	movlb	0	; () banked
 12004   0019E2  6FA8               	movwf	sendMessage3@data3& (0+255),b
 12005   0019E4  0E6F               	movlw	111
 12006   0019E6  EC3F  F060         	call	_sendMessage3
 12007                           
 12008                           ;../../VLCBlib_PIC/mns.c: 451:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 12009   0019EA  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12010   0019EE  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12011   0019F2  0E73               	movlw	115
 12012   0019F4  0101               	movlb	1	; () banked
 12013   0019F6  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12014   0019F8  0E01               	movlw	1
 12015   0019FA  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12016   0019FC  0E09               	movlw	9
 12017   0019FE  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12018   001A00  0EAF               	movlw	175
 12019   001A02  ECE1  F05F         	call	_sendMessage5
 12020   001A06  D6BA               	goto	l23462
 12021   001A08                     l23568:
 12022                           
 12023                           ; BSR set to: 1
 12024                           ;../../VLCBlib_PIC/mns.c: 455:             i = getParameter(m->bytes[2]);
 12025   001A08  EE20 F004          	lfsr	2,4
 12026   001A0C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12027   001A0E  26D9               	addwf	fsr2l,f,c
 12028   001A10  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12029   001A12  22DA               	addwfc	fsr2h,f,c
 12030   001A14  50DF               	movf	indf2,w,c
 12031   001A16  EC24  F043         	call	_getParameter
 12032   001A1A  0101               	movlb	1	; () banked
 12033   001A1C  6FFB               	movwf	mnsProcessMessage@i& (0+255),b
 12034                           
 12035                           ; BSR set to: 1
 12036                           ;../../VLCBlib_PIC/mns.c: 456:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 12037   001A1E  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 12038   001A22  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 12039   001A26  EE20 F004          	lfsr	2,4
 12040   001A2A  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12041   001A2C  26D9               	addwf	fsr2l,f,c
 12042   001A2E  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12043   001A30  22DA               	addwfc	fsr2h,f,c
 12044   001A32  50DF               	movf	indf2,w,c
 12045   001A34  6FC4               	movwf	sendMessage4@data3& (0+255),b
 12046   001A36  C1FB  F1C5         	movff	mnsProcessMessage@i,sendMessage4@data4
 12047   001A3A  0E9B               	movlw	155
 12048   001A3C  ECF9  F05F         	call	_sendMessage4
 12049                           
 12050                           ;../../VLCBlib_PIC/mns.c: 458:             if (m->bytes[2] == 0) {
 12051   001A40  0101               	movlb	1	; () banked
 12052   001A42  EE20 F004          	lfsr	2,4
 12053   001A46  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12054   001A48  26D9               	addwf	fsr2l,f,c
 12055   001A4A  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12056   001A4C  22DA               	addwfc	fsr2h,f,c
 12057   001A4E  50DF               	movf	indf2,w,c
 12058   001A50  A4D8               	btfss	status,2,c
 12059   001A52  D694               	goto	l23462
 12060                           
 12061                           ; BSR set to: 1
 12062                           ;../../VLCBlib_PIC/mns.c: 459:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 12063   001A54  0E01               	movlw	1
 12064   001A56  ECBF  F056         	call	_findServiceIndex
 12065   001A5A  0100               	movlb	0	; () banked
 12066   001A5C  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12067   001A5E  0E06               	movlw	low _mnsTRrqnpnCallback
 12068   001A60  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12069   001A62  0EC1               	movlw	high _mnsTRrqnpnCallback
 12070   001A64  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12071   001A66  0E07               	movlw	7
 12072   001A68  EC14  F05E         	call	_startTimedResponse
 12073   001A6C  D687               	goto	l23462
 12074   001A6E                     l1477:
 12075                           
 12076                           ; BSR set to: 2
 12077                           ;../../VLCBlib_PIC/mns.c: 464:             previousNN.word = nn.word;
 12078   001A6E  C0BD  F160         	movff	_nn,_previousNN
 12079   001A72  C0BE  F161         	movff	_nn+1,_previousNN+1
 12080                           
 12081                           ; BSR set to: 2
 12082                           ;../../VLCBlib_PIC/mns.c: 465:             factoryReset();
 12083   001A76  ECB1  F042         	call	_factoryReset	;wreg free
 12084                           
 12085                           ;../../VLCBlib_PIC/mns.c: 466:             if (previousNN.word != 0) {
 12086   001A7A  0101               	movlb	1	; () banked
 12087   001A7C  5160               	movf	_previousNN& (0+255),w,b
 12088   001A7E  1161               	iorwf	(_previousNN+1)& (0+255),w,b
 12089   001A80  B4D8               	btfsc	status,2,c
 12090   001A82  D007               	goto	l1478
 12091                           
 12092                           ; BSR set to: 1
 12093                           ;../../VLCBlib_PIC/mns.c: 467:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 12094   001A84  C161  F0A6         	movff	_previousNN+1,sendMessage2@data1
 12095   001A88  C160  F0A7         	movff	_previousNN,sendMessage2@data2
 12096   001A8C  0E51               	movlw	81
 12097   001A8E  ECB1  F05F         	call	_sendMessage2
 12098   001A92                     l1478:
 12099   001A92  00FF               	reset		;# 
 12100   001A94                     l23586:
 12101                           
 12102                           ;../../VLCBlib_PIC/mns.c: 472:             if (m->len < 5) {
 12103   001A94  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12104   001A98  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12105   001A9C  0E05               	movlw	5
 12106   001A9E  60DF               	cpfslt	indf2,c
 12107   001AA0  D00F               	goto	l23594
 12108                           
 12109                           ;../../VLCBlib_PIC/mns.c: 473:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12110   001AA2  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12111   001AA6  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12112   001AAA  0E87               	movlw	135
 12113   001AAC  0101               	movlb	1	; () banked
 12114   001AAE  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12115   001AB0  0E01               	movlw	1
 12116   001AB2  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12117   001AB4  0E01               	movlw	1
 12118   001AB6  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12119   001AB8  0EAF               	movlw	175
 12120   001ABA  ECE1  F05F         	call	_sendMessage5
 12121   001ABE  D65E               	goto	l23462
 12122   001AC0                     l23594:
 12123                           
 12124                           ;../../VLCBlib_PIC/mns.c: 476:             if (m->bytes[2] == 0) {
 12125   001AC0  0101               	movlb	1	; () banked
 12126   001AC2  EE20 F004          	lfsr	2,4
 12127   001AC6  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12128   001AC8  26D9               	addwf	fsr2l,f,c
 12129   001ACA  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12130   001ACC  22DA               	addwfc	fsr2h,f,c
 12131   001ACE  50DF               	movf	indf2,w,c
 12132   001AD0  A4D8               	btfss	status,2,c
 12133   001AD2  D00B               	goto	l23598
 12134                           
 12135                           ; BSR set to: 1
 12136                           ;../../VLCBlib_PIC/mns.c: 478:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 12137   001AD4  0E00               	movlw	0
 12138   001AD6  0100               	movlb	0	; () banked
 12139   001AD8  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12140   001ADA  0E70               	movlw	low _mnsTRallDiagnosticsCallback
 12141   001ADC  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12142   001ADE  0E81               	movlw	high _mnsTRallDiagnosticsCallback
 12143   001AE0  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12144   001AE2  0E04               	movlw	4
 12145   001AE4  EC14  F05E         	call	_startTimedResponse
 12146                           
 12147                           ;../../VLCBlib_PIC/mns.c: 479:             } else {
 12148   001AE8  D649               	goto	l23462
 12149   001AEA                     l23598:
 12150                           
 12151                           ; BSR set to: 1
 12152                           ;../../VLCBlib_PIC/mns.c: 481:                 if (m->bytes[2] > 9) {
 12153   001AEA  EE20 F004          	lfsr	2,4
 12154   001AEE  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12155   001AF0  26D9               	addwf	fsr2l,f,c
 12156   001AF2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12157   001AF4  22DA               	addwfc	fsr2h,f,c
 12158   001AF6  0E09               	movlw	9
 12159   001AF8  64DF               	cpfsgt	indf2,c
 12160   001AFA  D00E               	goto	l23606
 12161                           
 12162                           ; BSR set to: 1
 12163                           ;../../VLCBlib_PIC/mns.c: 482:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 12164   001AFC  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12165   001B00  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12166   001B04  0E87               	movlw	135
 12167   001B06  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12168   001B08  0E01               	movlw	1
 12169   001B0A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12170   001B0C  0EFC               	movlw	252
 12171   001B0E  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12172   001B10  0EAF               	movlw	175
 12173   001B12  ECE1  F05F         	call	_sendMessage5
 12174   001B16  D632               	goto	l23462
 12175   001B18                     l23606:
 12176                           
 12177                           ; BSR set to: 1
 12178                           ;../../VLCBlib_PIC/mns.c: 485:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 12179   001B18  EE20 F004          	lfsr	2,4
 12180   001B1C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12181   001B1E  26D9               	addwf	fsr2l,f,c
 12182   001B20  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12183   001B22  22DA               	addwfc	fsr2h,f,c
 12184   001B24  50DF               	movf	indf2,w,c
 12185   001B26  0102               	movlb	2	; () banked
 12186   001B28  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12187   001B2A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12188   001B2C  90D8               	bcf	status,0,c
 12189   001B2E  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12190   001B30  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12191   001B32  0EFE               	movlw	254
 12192   001B34  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12193   001B36  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12194   001B38  0EFF               	movlw	255
 12195   001B3A  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12196   001B3C  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12197   001B3E  0E69               	movlw	low _services
 12198   001B40  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12199   001B42  6EF6               	movwf	tblptrl,c
 12200   001B44  0EEE               	movlw	high _services
 12201   001B46  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12202   001B48  6EF7               	movwf	tblptrh,c
 12203   001B4A                     	if	1	;There are 3 active tblptr bytes
 12204   001B4A  6AF8               	clrf	tblptru,c
 12205   001B4C  0E00               	movlw	low (__mediumconst shr (0+16))
 12206   001B4E  22F8               	addwfc	tblptru,f,c
 12207   001B50                     	endif
 12208   001B50  0009               	tblrd		*+
 12209   001B52  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12210   001B56  0009               	tblrd		*+
 12211   001B58  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12212   001B5C  0E10               	movlw	16
 12213   001B5E  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12214   001B60  0E00               	movlw	0
 12215   001B62  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12216   001B64  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12217   001B68  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12218   001B6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12219   001B6C  6AF8               	clrf	tblptru,c
 12220   001B6E                     	endif
 12221   001B6E                     	if	0	;tblptru may be non-zero
 12222   001B6E                     	endif
 12223   001B6E  0009               	tblrd		*+
 12224   001B70  50F5               	movf	tablat,w,c
 12225   001B72  0009               	tblrd		*+
 12226   001B74  10F5               	iorwf	tablat,w,c
 12227   001B76  A4D8               	btfss	status,2,c
 12228   001B78  D014               	goto	l23610
 12229                           
 12230                           ; BSR set to: 2
 12231                           ;../../VLCBlib_PIC/mns.c: 487:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 12232   001B7A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12233   001B7E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12234   001B82  0E87               	movlw	135
 12235   001B84  0101               	movlb	1	; () banked
 12236   001B86  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12237   001B88  EE20 F004          	lfsr	2,4
 12238   001B8C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12239   001B8E  26D9               	addwf	fsr2l,f,c
 12240   001B90  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12241   001B92  22DA               	addwfc	fsr2h,f,c
 12242   001B94  50DF               	movf	indf2,w,c
 12243   001B96  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12244   001B98  0E00               	movlw	0
 12245   001B9A  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12246   001B9C  0EC7               	movlw	199
 12247   001B9E  ECE1  F05F         	call	_sendMessage5
 12248   001BA2                     l23610:
 12249                           
 12250                           ;../../VLCBlib_PIC/mns.c: 489:                 if (m->bytes[3] == 0) {
 12251   001BA2  0101               	movlb	1	; () banked
 12252   001BA4  EE20 F005          	lfsr	2,5
 12253   001BA8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12254   001BAA  26D9               	addwf	fsr2l,f,c
 12255   001BAC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12256   001BAE  22DA               	addwfc	fsr2h,f,c
 12257   001BB0  50DF               	movf	indf2,w,c
 12258   001BB2  A4D8               	btfss	status,2,c
 12259   001BB4  D011               	goto	l23620
 12260                           
 12261                           ; BSR set to: 1
 12262                           ;../../VLCBlib_PIC/mns.c: 491:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 12263   001BB6  EE20 F004          	lfsr	2,4
 12264   001BBA  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12265   001BBC  26D9               	addwf	fsr2l,f,c
 12266   001BBE  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12267   001BC0  22DA               	addwfc	fsr2h,f,c
 12268   001BC2  50DF               	movf	indf2,w,c
 12269   001BC4  0100               	movlb	0	; () banked
 12270   001BC6  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12271   001BC8  0E70               	movlw	low _mnsTRallDiagnosticsCallback
 12272   001BCA  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12273   001BCC  0E81               	movlw	high _mnsTRallDiagnosticsCallback
 12274   001BCE  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12275   001BD0  0E04               	movlw	4
 12276   001BD2  EC14  F05E         	call	_startTimedResponse
 12277   001BD6  D5D2               	goto	l23462
 12278   001BD8                     l23620:
 12279                           
 12280                           ; BSR set to: 1
 12281                           ;../../VLCBlib_PIC/mns.c: 494:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 12282   001BD8  EE20 F004          	lfsr	2,4
 12283   001BDC  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12284   001BDE  26D9               	addwf	fsr2l,f,c
 12285   001BE0  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12286   001BE2  22DA               	addwfc	fsr2h,f,c
 12287   001BE4  50DF               	movf	indf2,w,c
 12288   001BE6  0102               	movlb	2	; () banked
 12289   001BE8  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12290   001BEA  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12291   001BEC  90D8               	bcf	status,0,c
 12292   001BEE  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12293   001BF0  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12294   001BF2  0EFE               	movlw	254
 12295   001BF4  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12296   001BF6  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12297   001BF8  0EFF               	movlw	255
 12298   001BFA  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12299   001BFC  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12300   001BFE  0E69               	movlw	low _services
 12301   001C00  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12302   001C02  6EF6               	movwf	tblptrl,c
 12303   001C04  0EEE               	movlw	high _services
 12304   001C06  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12305   001C08  6EF7               	movwf	tblptrh,c
 12306   001C0A                     	if	1	;There are 3 active tblptr bytes
 12307   001C0A  6AF8               	clrf	tblptru,c
 12308   001C0C  0E00               	movlw	low (__mediumconst shr (0+16))
 12309   001C0E  22F8               	addwfc	tblptru,f,c
 12310   001C10                     	endif
 12311   001C10  0009               	tblrd		*+
 12312   001C12  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12313   001C16  0009               	tblrd		*+
 12314   001C18  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12315   001C1C  0E10               	movlw	16
 12316   001C1E  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12317   001C20  0E00               	movlw	0
 12318   001C22  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12319   001C24  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12320   001C28  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12321   001C2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12322   001C2C  6AF8               	clrf	tblptru,c
 12323   001C2E                     	endif
 12324   001C2E                     	if	0	;tblptru may be non-zero
 12325   001C2E                     	endif
 12326   001C2E  0009               	tblrd		*+
 12327   001C30  CFF5 F2D2          	movff	tablat,??_mnsProcessMessage+6
 12328   001C34  0009               	tblrd		*+
 12329   001C36  CFF5 F2D3          	movff	tablat,??_mnsProcessMessage+7
 12330   001C3A  D801               	call	u25118
 12331   001C3C  D011               	goto	u25119
 12332   001C3E                     u25118:
 12333   001C3E  0005               	push	
 12334   001C40  6EFA               	movwf	pclath,c
 12335   001C42  51D2               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 12336   001C44  6EFD               	movwf	tosl,c
 12337   001C46  51D3               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 12338   001C48  6EFE               	movwf	tosh,c
 12339   001C4A  6AFF               	clrf	tosu,c
 12340   001C4C  50FA               	movf	pclath,w,c
 12341   001C4E  0101               	movlb	1	; () banked
 12342   001C50  EE20 F005          	lfsr	2,5
 12343   001C54  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12344   001C56  26D9               	addwf	fsr2l,f,c
 12345   001C58  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12346   001C5A  22DA               	addwfc	fsr2h,f,c
 12347   001C5C  50DF               	movf	indf2,w,c
 12348   001C5E  0012               	return		;indir
 12349   001C60                     u25119:
 12350   001C60  C096  F1FC         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 12351   001C64  C097  F1FD         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 12352                           
 12353                           ;../../VLCBlib_PIC/mns.c: 495:                     if (d == ((void*)0)) {
 12354   001C68  0101               	movlb	1	; () banked
 12355   001C6A  51FC               	movf	mnsProcessMessage@d& (0+255),w,b
 12356   001C6C  11FD               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 12357   001C6E  A4D8               	btfss	status,2,c
 12358   001C70  D00E               	goto	l23626
 12359                           
 12360                           ; BSR set to: 1
 12361                           ;../../VLCBlib_PIC/mns.c: 497:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 12362   001C72  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12363   001C76  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12364   001C7A  0E87               	movlw	135
 12365   001C7C  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12366   001C7E  0E01               	movlw	1
 12367   001C80  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12368   001C82  0EFD               	movlw	253
 12369   001C84  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12370   001C86  0EAF               	movlw	175
 12371   001C88  ECE1  F05F         	call	_sendMessage5
 12372                           
 12373                           ;../../VLCBlib_PIC/mns.c: 498:                     } else {
 12374   001C8C  D577               	goto	l23462
 12375   001C8E                     l23626:
 12376                           
 12377                           ; BSR set to: 1
 12378                           ;../../VLCBlib_PIC/mns.c: 500:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 12379   001C8E  C0BE  F1C2         	movff	_nn+1,sendMessage6@data1
 12380   001C92  C0BD  F1C3         	movff	_nn,sendMessage6@data2
 12381   001C96  EE20 F004          	lfsr	2,4
 12382   001C9A  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12383   001C9C  26D9               	addwf	fsr2l,f,c
 12384   001C9E  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12385   001CA0  22DA               	addwfc	fsr2h,f,c
 12386   001CA2  50DF               	movf	indf2,w,c
 12387   001CA4  6FC4               	movwf	sendMessage6@data3& (0+255),b
 12388   001CA6  EE20 F005          	lfsr	2,5
 12389   001CAA  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12390   001CAC  26D9               	addwf	fsr2l,f,c
 12391   001CAE  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12392   001CB0  22DA               	addwfc	fsr2h,f,c
 12393   001CB2  50DF               	movf	indf2,w,c
 12394   001CB4  6FC5               	movwf	sendMessage6@data4& (0+255),b
 12395   001CB6  EE20 F001          	lfsr	2,1
 12396   001CBA  51FC               	movf	mnsProcessMessage@d& (0+255),w,b
 12397   001CBC  26D9               	addwf	fsr2l,f,c
 12398   001CBE  51FD               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 12399   001CC0  22DA               	addwfc	fsr2h,f,c
 12400   001CC2  50DF               	movf	indf2,w,c
 12401   001CC4  6FC6               	movwf	sendMessage6@data5& (0+255),b
 12402   001CC6  C1FC  FFD9         	movff	mnsProcessMessage@d,fsr2l
 12403   001CCA  C1FD  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 12404   001CCE  50DF               	movf	indf2,w,c
 12405   001CD0  6FC7               	movwf	sendMessage6@data6& (0+255),b
 12406   001CD2  0EC7               	movlw	199
 12407   001CD4  EC99  F05F         	call	_sendMessage6
 12408   001CD8  D551               	goto	l23462
 12409   001CDA                     l23632:
 12410                           
 12411                           ; BSR set to: 2
 12412                           ;../../VLCBlib_PIC/mns.c: 508:             if (m->len < 4) {
 12413   001CDA  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12414   001CDE  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12415   001CE2  0E04               	movlw	4
 12416   001CE4  60DF               	cpfslt	indf2,c
 12417   001CE6  D00F               	goto	l23640
 12418                           
 12419                           ; BSR set to: 2
 12420                           ;../../VLCBlib_PIC/mns.c: 509:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12421   001CE8  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12422   001CEC  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12423   001CF0  0E78               	movlw	120
 12424   001CF2  0101               	movlb	1	; () banked
 12425   001CF4  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12426   001CF6  0E01               	movlw	1
 12427   001CF8  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12428   001CFA  0E01               	movlw	1
 12429   001CFC  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12430   001CFE  0EAF               	movlw	175
 12431   001D00  ECE1  F05F         	call	_sendMessage5
 12432   001D04  D53B               	goto	l23462
 12433   001D06                     l23640:
 12434                           
 12435                           ; BSR set to: 2
 12436                           ;../../VLCBlib_PIC/mns.c: 512:             if (m->bytes[2] == 0) {
 12437   001D06  0101               	movlb	1	; () banked
 12438   001D08  EE20 F004          	lfsr	2,4
 12439   001D0C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12440   001D0E  26D9               	addwf	fsr2l,f,c
 12441   001D10  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12442   001D12  22DA               	addwfc	fsr2h,f,c
 12443   001D14  50DF               	movf	indf2,w,c
 12444   001D16  A4D8               	btfss	status,2,c
 12445   001D18  D018               	goto	l23646
 12446                           
 12447                           ; BSR set to: 1
 12448                           ;../../VLCBlib_PIC/mns.c: 514:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 12449   001D1A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12450   001D1E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12451   001D22  0E00               	movlw	0
 12452   001D24  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12453   001D26  0E00               	movlw	0
 12454   001D28  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12455   001D2A  0E09               	movlw	9
 12456   001D2C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12457   001D2E  0EAC               	movlw	172
 12458   001D30  ECE1  F05F         	call	_sendMessage5
 12459                           
 12460                           ;../../VLCBlib_PIC/mns.c: 516:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 12461   001D34  0E01               	movlw	1
 12462   001D36  0100               	movlb	0	; () banked
 12463   001D38  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12464   001D3A  0E06               	movlw	low _mnsTRserviceDiscoveryCallback
 12465   001D3C  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12466   001D3E  0EA4               	movlw	high _mnsTRserviceDiscoveryCallback
 12467   001D40  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12468   001D42  0E03               	movlw	3
 12469   001D44  EC14  F05E         	call	_startTimedResponse
 12470                           
 12471                           ;../../VLCBlib_PIC/mns.c: 517:             } else if (m->bytes[2] > 9) {
 12472   001D48  D519               	goto	l23462
 12473   001D4A                     l23646:
 12474                           
 12475                           ; BSR set to: 1
 12476   001D4A  EE20 F004          	lfsr	2,4
 12477   001D4E  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12478   001D50  26D9               	addwf	fsr2l,f,c
 12479   001D52  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12480   001D54  22DA               	addwfc	fsr2h,f,c
 12481   001D56  0E09               	movlw	9
 12482   001D58  64DF               	cpfsgt	indf2,c
 12483   001D5A  D00E               	goto	l23656
 12484                           
 12485                           ; BSR set to: 1
 12486                           ;../../VLCBlib_PIC/mns.c: 518:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 12487   001D5C  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12488   001D60  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12489   001D64  0E78               	movlw	120
 12490   001D66  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12491   001D68  0E01               	movlw	1
 12492   001D6A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12493   001D6C  0EFC               	movlw	252
 12494   001D6E  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12495   001D70  0EAF               	movlw	175
 12496   001D72  ECE1  F05F         	call	_sendMessage5
 12497   001D76  D502               	goto	l23462
 12498   001D78                     l23656:
 12499                           
 12500                           ; BSR set to: 1
 12501                           ;../../VLCBlib_PIC/mns.c: 522:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 12502   001D78  EE20 F004          	lfsr	2,4
 12503   001D7C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12504   001D7E  26D9               	addwf	fsr2l,f,c
 12505   001D80  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12506   001D82  22DA               	addwfc	fsr2h,f,c
 12507   001D84  50DF               	movf	indf2,w,c
 12508   001D86  0102               	movlb	2	; () banked
 12509   001D88  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12510   001D8A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12511   001D8C  90D8               	bcf	status,0,c
 12512   001D8E  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12513   001D90  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12514   001D92  0EFE               	movlw	254
 12515   001D94  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12516   001D96  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12517   001D98  0EFF               	movlw	255
 12518   001D9A  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12519   001D9C  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12520   001D9E  0E69               	movlw	low _services
 12521   001DA0  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12522   001DA2  6EF6               	movwf	tblptrl,c
 12523   001DA4  0EEE               	movlw	high _services
 12524   001DA6  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12525   001DA8  6EF7               	movwf	tblptrh,c
 12526   001DAA                     	if	1	;There are 3 active tblptr bytes
 12527   001DAA  6AF8               	clrf	tblptru,c
 12528   001DAC  0E00               	movlw	low (__mediumconst shr (0+16))
 12529   001DAE  22F8               	addwfc	tblptru,f,c
 12530   001DB0                     	endif
 12531   001DB0  0009               	tblrd		*+
 12532   001DB2  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12533   001DB6  0009               	tblrd		*+
 12534   001DB8  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12535   001DBC  0E0E               	movlw	14
 12536   001DBE  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12537   001DC0  0E00               	movlw	0
 12538   001DC2  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12539   001DC4  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12540   001DC8  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12541   001DCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12542   001DCC  6AF8               	clrf	tblptru,c
 12543   001DCE                     	endif
 12544   001DCE                     	if	0	;tblptru may be non-zero
 12545   001DCE                     	endif
 12546   001DCE  0009               	tblrd		*+
 12547   001DD0  50F5               	movf	tablat,w,c
 12548   001DD2  0009               	tblrd		*+
 12549   001DD4  10F5               	iorwf	tablat,w,c
 12550   001DD6  A4D8               	btfss	status,2,c
 12551   001DD8  D042               	goto	l23660
 12552                           
 12553                           ; BSR set to: 2
 12554                           ;../../VLCBlib_PIC/mns.c: 523:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 12555   001DDA  C0BE  F1C2         	movff	_nn+1,sendMessage7@data1
 12556   001DDE  C0BD  F1C3         	movff	_nn,sendMessage7@data2
 12557   001DE2  0101               	movlb	1	; () banked
 12558   001DE4  EE20 F004          	lfsr	2,4
 12559   001DE8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12560   001DEA  26D9               	addwf	fsr2l,f,c
 12561   001DEC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12562   001DEE  22DA               	addwfc	fsr2h,f,c
 12563   001DF0  50DF               	movf	indf2,w,c
 12564   001DF2  6FC4               	movwf	sendMessage7@data3& (0+255),b
 12565   001DF4  EE20 F004          	lfsr	2,4
 12566   001DF8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12567   001DFA  26D9               	addwf	fsr2l,f,c
 12568   001DFC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12569   001DFE  22DA               	addwfc	fsr2h,f,c
 12570   001E00  50DF               	movf	indf2,w,c
 12571   001E02  0102               	movlb	2	; () banked
 12572   001E04  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12573   001E06  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12574   001E08  90D8               	bcf	status,0,c
 12575   001E0A  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12576   001E0C  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12577   001E0E  0EFE               	movlw	254
 12578   001E10  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12579   001E12  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12580   001E14  0EFF               	movlw	255
 12581   001E16  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12582   001E18  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12583   001E1A  0E69               	movlw	low _services
 12584   001E1C  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12585   001E1E  6EF6               	movwf	tblptrl,c
 12586   001E20  0EEE               	movlw	high _services
 12587   001E22  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12588   001E24  6EF7               	movwf	tblptrh,c
 12589   001E26                     	if	1	;There are 3 active tblptr bytes
 12590   001E26  6AF8               	clrf	tblptru,c
 12591   001E28  0E00               	movlw	low (__mediumconst shr (0+16))
 12592   001E2A  22F8               	addwfc	tblptru,f,c
 12593   001E2C                     	endif
 12594   001E2C  0009               	tblrd		*+
 12595   001E2E  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12596   001E32  0009               	tblrd		*+
 12597   001E34  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12598   001E38  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12599   001E3C  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12600   001E40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12601   001E40  6AF8               	clrf	tblptru,c
 12602   001E42                     	endif
 12603   001E42                     	if	0	;tblptru may be non-zero
 12604   001E42                     	endif
 12605   001E42  0008               	tblrd		*
 12606   001E44  CFF5 F1C5          	movff	tablat,sendMessage7@data4
 12607   001E48  0E00               	movlw	0
 12608   001E4A  0101               	movlb	1	; () banked
 12609   001E4C  6FC6               	movwf	sendMessage7@data5& (0+255),b
 12610   001E4E  0E00               	movlw	0
 12611   001E50  6FC7               	movwf	sendMessage7@data6& (0+255),b
 12612   001E52  0E00               	movlw	0
 12613   001E54  6FC8               	movwf	sendMessage7@data7& (0+255),b
 12614   001E56  0EE7               	movlw	231
 12615   001E58  ECC9  F05F         	call	_sendMessage7
 12616                           
 12617                           ;../../VLCBlib_PIC/mns.c: 524:                 } else {
 12618   001E5C  D48F               	goto	l23462
 12619   001E5E                     l23660:
 12620                           
 12621                           ; BSR set to: 2
 12622                           ;../../VLCBlib_PIC/mns.c: 525:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 12623   001E5E  C0BE  F1C2         	movff	_nn+1,sendMessage7@data1
 12624   001E62  C0BD  F1C3         	movff	_nn,sendMessage7@data2
 12625   001E66  0101               	movlb	1	; () banked
 12626   001E68  EE20 F004          	lfsr	2,4
 12627   001E6C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12628   001E6E  26D9               	addwf	fsr2l,f,c
 12629   001E70  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12630   001E72  22DA               	addwfc	fsr2h,f,c
 12631   001E74  50DF               	movf	indf2,w,c
 12632   001E76  6FC4               	movwf	sendMessage7@data3& (0+255),b
 12633   001E78  EE20 F004          	lfsr	2,4
 12634   001E7C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12635   001E7E  26D9               	addwf	fsr2l,f,c
 12636   001E80  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12637   001E82  22DA               	addwfc	fsr2h,f,c
 12638   001E84  50DF               	movf	indf2,w,c
 12639   001E86  0102               	movlb	2	; () banked
 12640   001E88  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12641   001E8A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12642   001E8C  90D8               	bcf	status,0,c
 12643   001E8E  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12644   001E90  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12645   001E92  0EFE               	movlw	254
 12646   001E94  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12647   001E96  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12648   001E98  0EFF               	movlw	255
 12649   001E9A  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12650   001E9C  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12651   001E9E  0E69               	movlw	low _services
 12652   001EA0  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12653   001EA2  6EF6               	movwf	tblptrl,c
 12654   001EA4  0EEE               	movlw	high _services
 12655   001EA6  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12656   001EA8  6EF7               	movwf	tblptrh,c
 12657   001EAA                     	if	1	;There are 3 active tblptr bytes
 12658   001EAA  6AF8               	clrf	tblptru,c
 12659   001EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 12660   001EAE  22F8               	addwfc	tblptru,f,c
 12661   001EB0                     	endif
 12662   001EB0  0009               	tblrd		*+
 12663   001EB2  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12664   001EB6  0009               	tblrd		*+
 12665   001EB8  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12666   001EBC  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12667   001EC0  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12668   001EC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12669   001EC4  6AF8               	clrf	tblptru,c
 12670   001EC6                     	endif
 12671   001EC6                     	if	0	;tblptru may be non-zero
 12672   001EC6                     	endif
 12673   001EC6  0008               	tblrd		*
 12674   001EC8  CFF5 F1C5          	movff	tablat,sendMessage7@data4
 12675   001ECC  0101               	movlb	1	; () banked
 12676   001ECE  EE20 F004          	lfsr	2,4
 12677   001ED2  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12678   001ED4  26D9               	addwf	fsr2l,f,c
 12679   001ED6  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12680   001ED8  22DA               	addwfc	fsr2h,f,c
 12681   001EDA  50DF               	movf	indf2,w,c
 12682   001EDC  0102               	movlb	2	; () banked
 12683   001EDE  6FD2               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 12684   001EE0  6BD3               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 12685   001EE2  90D8               	bcf	status,0,c
 12686   001EE4  37D2               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 12687   001EE6  37D3               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 12688   001EE8  0EFE               	movlw	254
 12689   001EEA  25D2               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 12690   001EEC  6FD4               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 12691   001EEE  0EFF               	movlw	255
 12692   001EF0  21D3               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 12693   001EF2  6FD5               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 12694   001EF4  0E69               	movlw	low _services
 12695   001EF6  25D4               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 12696   001EF8  6EF6               	movwf	tblptrl,c
 12697   001EFA  0EEE               	movlw	high _services
 12698   001EFC  21D5               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 12699   001EFE  6EF7               	movwf	tblptrh,c
 12700   001F00                     	if	1	;There are 3 active tblptr bytes
 12701   001F00  6AF8               	clrf	tblptru,c
 12702   001F02  0E00               	movlw	low (__mediumconst shr (0+16))
 12703   001F04  22F8               	addwfc	tblptru,f,c
 12704   001F06                     	endif
 12705   001F06  0009               	tblrd		*+
 12706   001F08  CFF5 F2D6          	movff	tablat,??_mnsProcessMessage+10
 12707   001F0C  0009               	tblrd		*+
 12708   001F0E  CFF5 F2D7          	movff	tablat,??_mnsProcessMessage+11
 12709   001F12  0E0E               	movlw	14
 12710   001F14  27D6               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 12711   001F16  0E00               	movlw	0
 12712   001F18  23D7               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 12713   001F1A  C2D6  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 12714   001F1E  C2D7  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 12715   001F22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12716   001F22  6AF8               	clrf	tblptru,c
 12717   001F24                     	endif
 12718   001F24                     	if	0	;tblptru may be non-zero
 12719   001F24                     	endif
 12720   001F24  0009               	tblrd		*+
 12721   001F26  CFF5 F2D8          	movff	tablat,??_mnsProcessMessage+12
 12722   001F2A  0009               	tblrd		*+
 12723   001F2C  CFF5 F2D9          	movff	tablat,??_mnsProcessMessage+13
 12724   001F30  D801               	call	u25178
 12725   001F32  D00A               	goto	u25179
 12726   001F34                     u25178:
 12727   001F34  0005               	push	
 12728   001F36  6EFA               	movwf	pclath,c
 12729   001F38  51D8               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 12730   001F3A  6EFD               	movwf	tosl,c
 12731   001F3C  51D9               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 12732   001F3E  6EFE               	movwf	tosh,c
 12733   001F40  6AFF               	clrf	tosu,c
 12734   001F42  50FA               	movf	pclath,w,c
 12735   001F44  0E01               	movlw	1
 12736   001F46  0012               	return		;indir
 12737   001F48                     u25179:
 12738   001F48  0101               	movlb	1	; () banked
 12739   001F4A  6FC6               	movwf	sendMessage7@data5& (0+255),b
 12740   001F4C  EE20 F004          	lfsr	2,4
 12741   001F50  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12742   001F52  26D9               	addwf	fsr2l,f,c
 12743   001F54  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12744   001F56  22DA               	addwfc	fsr2h,f,c
 12745   001F58  50DF               	movf	indf2,w,c
 12746   001F5A  0102               	movlb	2	; () banked
 12747   001F5C  6FDA               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 12748   001F5E  6BDB               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 12749   001F60  90D8               	bcf	status,0,c
 12750   001F62  37DA               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 12751   001F64  37DB               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 12752   001F66  0EFE               	movlw	254
 12753   001F68  25DA               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12754   001F6A  6FDC               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12755   001F6C  0EFF               	movlw	255
 12756   001F6E  21DB               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12757   001F70  6FDD               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12758   001F72  0E69               	movlw	low _services
 12759   001F74  25DC               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12760   001F76  6EF6               	movwf	tblptrl,c
 12761   001F78  0EEE               	movlw	high _services
 12762   001F7A  21DD               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12763   001F7C  6EF7               	movwf	tblptrh,c
 12764   001F7E                     	if	1	;There are 3 active tblptr bytes
 12765   001F7E  6AF8               	clrf	tblptru,c
 12766   001F80  0E00               	movlw	low (__mediumconst shr (0+16))
 12767   001F82  22F8               	addwfc	tblptru,f,c
 12768   001F84                     	endif
 12769   001F84  0009               	tblrd		*+
 12770   001F86  CFF5 F2DE          	movff	tablat,??_mnsProcessMessage+18
 12771   001F8A  0009               	tblrd		*+
 12772   001F8C  CFF5 F2DF          	movff	tablat,??_mnsProcessMessage+19
 12773   001F90  0E0E               	movlw	14
 12774   001F92  27DE               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12775   001F94  0E00               	movlw	0
 12776   001F96  23DF               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12777   001F98  C2DE  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12778   001F9C  C2DF  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12779   001FA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12780   001FA0  6AF8               	clrf	tblptru,c
 12781   001FA2                     	endif
 12782   001FA2                     	if	0	;tblptru may be non-zero
 12783   001FA2                     	endif
 12784   001FA2  0009               	tblrd		*+
 12785   001FA4  CFF5 F2E0          	movff	tablat,??_mnsProcessMessage+20
 12786   001FA8  0009               	tblrd		*+
 12787   001FAA  CFF5 F2E1          	movff	tablat,??_mnsProcessMessage+21
 12788   001FAE  D801               	call	u25188
 12789   001FB0  D00A               	goto	u25189
 12790   001FB2                     u25188:
 12791   001FB2  0005               	push	
 12792   001FB4  6EFA               	movwf	pclath,c
 12793   001FB6  51E0               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12794   001FB8  6EFD               	movwf	tosl,c
 12795   001FBA  51E1               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12796   001FBC  6EFE               	movwf	tosh,c
 12797   001FBE  6AFF               	clrf	tosu,c
 12798   001FC0  50FA               	movf	pclath,w,c
 12799   001FC2  0E02               	movlw	2
 12800   001FC4  0012               	return		;indir
 12801   001FC6                     u25189:
 12802   001FC6  0101               	movlb	1	; () banked
 12803   001FC8  6FC7               	movwf	sendMessage7@data6& (0+255),b
 12804   001FCA  EE20 F004          	lfsr	2,4
 12805   001FCE  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12806   001FD0  26D9               	addwf	fsr2l,f,c
 12807   001FD2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12808   001FD4  22DA               	addwfc	fsr2h,f,c
 12809   001FD6  50DF               	movf	indf2,w,c
 12810   001FD8  0102               	movlb	2	; () banked
 12811   001FDA  6FE2               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12812   001FDC  6BE3               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12813   001FDE  90D8               	bcf	status,0,c
 12814   001FE0  37E2               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12815   001FE2  37E3               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12816   001FE4  0EFE               	movlw	254
 12817   001FE6  25E2               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12818   001FE8  6FE4               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12819   001FEA  0EFF               	movlw	255
 12820   001FEC  21E3               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12821   001FEE  6FE5               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12822   001FF0  0E69               	movlw	low _services
 12823   001FF2  25E4               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12824   001FF4  6EF6               	movwf	tblptrl,c
 12825   001FF6  0EEE               	movlw	high _services
 12826   001FF8  21E5               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12827   001FFA  6EF7               	movwf	tblptrh,c
 12828   001FFC                     	if	1	;There are 3 active tblptr bytes
 12829   001FFC  6AF8               	clrf	tblptru,c
 12830   001FFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12831   002000  22F8               	addwfc	tblptru,f,c
 12832   002002                     	endif
 12833   002002  0009               	tblrd		*+
 12834   002004  CFF5 F2E6          	movff	tablat,??_mnsProcessMessage+26
 12835   002008  0009               	tblrd		*+
 12836   00200A  CFF5 F2E7          	movff	tablat,??_mnsProcessMessage+27
 12837   00200E  0E0E               	movlw	14
 12838   002010  27E6               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12839   002012  0E00               	movlw	0
 12840   002014  23E7               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12841   002016  C2E6  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12842   00201A  C2E7  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12843   00201E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12844   00201E  6AF8               	clrf	tblptru,c
 12845   002020                     	endif
 12846   002020                     	if	0	;tblptru may be non-zero
 12847   002020                     	endif
 12848   002020  0009               	tblrd		*+
 12849   002022  CFF5 F2E8          	movff	tablat,??_mnsProcessMessage+28
 12850   002026  0009               	tblrd		*+
 12851   002028  CFF5 F2E9          	movff	tablat,??_mnsProcessMessage+29
 12852   00202C  D801               	call	u25198
 12853   00202E  D00A               	goto	u25199
 12854   002030                     u25198:
 12855   002030  0005               	push	
 12856   002032  6EFA               	movwf	pclath,c
 12857   002034  51E8               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12858   002036  6EFD               	movwf	tosl,c
 12859   002038  51E9               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12860   00203A  6EFE               	movwf	tosh,c
 12861   00203C  6AFF               	clrf	tosu,c
 12862   00203E  50FA               	movf	pclath,w,c
 12863   002040  0E03               	movlw	3
 12864   002042  0012               	return		;indir
 12865   002044                     u25199:
 12866   002044  0101               	movlb	1	; () banked
 12867   002046  6FC8               	movwf	sendMessage7@data7& (0+255),b
 12868   002048  0EE7               	movlw	231
 12869   00204A  ECC9  F05F         	call	_sendMessage7
 12870   00204E  EFBE  F00B         	goto	l23462
 12871   002052                     l23666:
 12872                           
 12873                           ; BSR set to: 2
 12874                           ;../../VLCBlib_PIC/mns.c: 535:             if (m->len < 4) {
 12875   002052  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12876   002056  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12877   00205A  0E04               	movlw	4
 12878   00205C  60DF               	cpfslt	indf2,c
 12879   00205E  D010               	goto	l23674
 12880                           
 12881                           ; BSR set to: 2
 12882                           ;../../VLCBlib_PIC/mns.c: 536:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12883   002060  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12884   002064  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12885   002068  0E76               	movlw	118
 12886   00206A  0101               	movlb	1	; () banked
 12887   00206C  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12888   00206E  0E01               	movlw	1
 12889   002070  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12890   002072  0E01               	movlw	1
 12891   002074  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12892   002076  0EAF               	movlw	175
 12893   002078  ECE1  F05F         	call	_sendMessage5
 12894   00207C  EFBE  F00B         	goto	l23462
 12895   002080                     l23674:
 12896                           
 12897                           ; BSR set to: 2
 12898                           ;../../VLCBlib_PIC/mns.c: 539:             newMode = m->bytes[2];
 12899   002080  0101               	movlb	1	; () banked
 12900   002082  EE20 F004          	lfsr	2,4
 12901   002086  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12902   002088  26D9               	addwf	fsr2l,f,c
 12903   00208A  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12904   00208C  22DA               	addwfc	fsr2h,f,c
 12905   00208E  50DF               	movf	indf2,w,c
 12906   002090  6FFE               	movwf	mnsProcessMessage@newMode& (0+255),b
 12907                           
 12908                           ; BSR set to: 1
 12909                           ;../../VLCBlib_PIC/mns.c: 540:             previousNN.word = nn.word;
 12910   002092  C0BD  F160         	movff	_nn,_previousNN
 12911   002096  C0BE  F161         	movff	_nn+1,_previousNN+1
 12912                           
 12913                           ;../../VLCBlib_PIC/mns.c: 542:             switch (mode_state) {
 12914   00209A  D05B               	goto	l23716
 12915   00209C                     l23678:
 12916                           
 12917                           ; BSR set to: 0
 12918                           ;../../VLCBlib_PIC/mns.c: 544:                     if (newMode == MODE_SETUP) {
 12919   00209C  0101               	movlb	1	; () banked
 12920   00209E  51FE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12921   0020A0  A4D8               	btfss	status,2,c
 12922   0020A2  D060               	goto	l23718
 12923                           
 12924                           ; BSR set to: 1
 12925                           ;../../VLCBlib_PIC/mns.c: 545:                         mode_state = MODE_SETUP;
 12926   0020A4  0E00               	movlw	0
 12927   0020A6  0100               	movlb	0	; () banked
 12928   0020A8  6FC5               	movwf	_mode_state& (0+255),b
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;../../VLCBlib_PIC/mns.c: 546:                         setupModePreviousMode = MODE_UNIN
      +                          ITIALISED;
 12932   0020AA  0101               	movlb	1	; () banked
 12933   0020AC  6965               	setf	_setupModePreviousMode& (0+255),b
 12934                           
 12935                           ; BSR set to: 1
 12936                           ;../../VLCBlib_PIC/mns.c: 547:                         sendMessage5(OPC_GRSP, previousNN
      +                          .bytes.hi, previousNN.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12937   0020AE  C161  F1C2         	movff	_previousNN+1,sendMessage5@data1
 12938   0020B2  C160  F1C3         	movff	_previousNN,sendMessage5@data2
 12939   0020B6  0E76               	movlw	118
 12940   0020B8  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12941   0020BA  0E01               	movlw	1
 12942   0020BC  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12943   0020BE  0E00               	movlw	0
 12944   0020C0  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12945   0020C2  0EAF               	movlw	175
 12946   0020C4  ECE1  F05F         	call	_sendMessage5
 12947                           
 12948                           ;../../VLCBlib_PIC/mns.c: 549:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12949   0020C8  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 12950   0020CC  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 12951   0020D0  0E50               	movlw	80
 12952   0020D2  ECB1  F05F         	call	_sendMessage2
 12953   0020D6  EFBC  F00B         	goto	l23460
 12954   0020DA                     l23694:
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;../../VLCBlib_PIC/mns.c: 558:                     if (newMode == MODE_SETUP) {
 12958   0020DA  0101               	movlb	1	; () banked
 12959   0020DC  51FE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12960   0020DE  A4D8               	btfss	status,2,c
 12961   0020E0  D041               	goto	l23718
 12962                           
 12963                           ; BSR set to: 1
 12964                           ;../../VLCBlib_PIC/mns.c: 559:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12965   0020E2  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12966   0020E6  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12967   0020EA  0E76               	movlw	118
 12968   0020EC  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12969   0020EE  0E01               	movlw	1
 12970   0020F0  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12971   0020F2  0E00               	movlw	0
 12972   0020F4  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12973   0020F6  0EAF               	movlw	175
 12974   0020F8  ECE1  F05F         	call	_sendMessage5
 12975                           
 12976                           ;../../VLCBlib_PIC/mns.c: 562:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12977   0020FC  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 12978   002100  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 12979   002104  0E50               	movlw	80
 12980   002106  ECB1  F05F         	call	_sendMessage2
 12981                           
 12982                           ;../../VLCBlib_PIC/mns.c: 564:                         nn.bytes.lo = nn.bytes.hi = 0;
 12983   00210A  0E00               	movlw	0
 12984   00210C  0100               	movlb	0	; () banked
 12985   00210E  6FBE               	movwf	(_nn+1)& (0+255),b
 12986   002110  C0BE  F0BD         	movff	_nn+1,_nn
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;../../VLCBlib_PIC/mns.c: 565:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.hi);
 12990   002114  0EFD               	movlw	253
 12991   002116  6FA4               	movwf	writeNVM@index& (0+255),b
 12992   002118  0E03               	movlw	3
 12993   00211A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12994   00211C  0E00               	movlw	0
 12995   00211E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12996   002120  C0BE  F0A7         	movff	_nn+1,writeNVM@value
 12997   002124  0E00               	movlw	0
 12998   002126  EC60  F05C         	call	_writeNVM
 12999                           
 13000                           ;../../VLCBlib_PIC/mns.c: 566:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.lo);
 13001   00212A  0EFC               	movlw	252
 13002   00212C  0100               	movlb	0	; () banked
 13003   00212E  6FA4               	movwf	writeNVM@index& (0+255),b
 13004   002130  0E03               	movlw	3
 13005   002132  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13006   002134  0E00               	movlw	0
 13007   002136  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13008   002138  C0BD  F0A7         	movff	_nn,writeNVM@value
 13009   00213C  0E00               	movlw	0
 13010   00213E  EC60  F05C         	call	_writeNVM
 13011                           
 13012                           ;../../VLCBlib_PIC/mns.c: 568:                         mode_state = MODE_SETUP;
 13013   002142  0E00               	movlw	0
 13014   002144  0100               	movlb	0	; () banked
 13015   002146  6FC5               	movwf	_mode_state& (0+255),b
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;../../VLCBlib_PIC/mns.c: 569:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 13019   002148  0E01               	movlw	1
 13020   00214A  0101               	movlb	1	; () banked
 13021   00214C  6F65               	movwf	_setupModePreviousMode& (0+255),b
 13022   00214E  EFBC  F00B         	goto	l23460
 13023   002152                     l23716:
 13024                           
 13025                           ; BSR set to: 1
 13026   002152  0100               	movlb	0	; () banked
 13027   002154  51C5               	movf	_mode_state& (0+255),w,b
 13028                           
 13029                           ; Switch size 1, requested type "simple"
 13030                           ; Number of cases is 2, Range of values is 0 to 255
 13031                           ; switch strategies available:
 13032                           ; Name         Instructions Cycles
 13033                           ; simple_byte            7     4 (average)
 13034                           ;	Chosen strategy is simple_byte
 13035   002156  0A00               	xorlw	0	; case 0
 13036   002158  B4D8               	btfsc	status,2,c
 13037   00215A  D004               	goto	l23718
 13038   00215C  0AFF               	xorlw	255	; case 255
 13039   00215E  B4D8               	btfsc	status,2,c
 13040   002160  D79D               	goto	l23678
 13041   002162  D7BB               	goto	l23694
 13042   002164                     l23718:
 13043                           
 13044                           ;../../VLCBlib_PIC/mns.c: 578:             if (newMode == MODE_HEARTBEAT_ON) {
 13045   002164  0E0C               	movlw	12
 13046   002166  0101               	movlb	1	; () banked
 13047   002168  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13048   00216A  A4D8               	btfss	status,2,c
 13049   00216C  D010               	goto	l23730
 13050                           
 13051                           ; BSR set to: 1
 13052                           ;../../VLCBlib_PIC/mns.c: 579:                 mode_flags |= 4;
 13053   00216E  8566               	bsf	_mode_flags& (0+255),2,b
 13054                           
 13055                           ; BSR set to: 1
 13056                           ;../../VLCBlib_PIC/mns.c: 580:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13057   002170  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 13058   002174  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 13059   002178  0E76               	movlw	118
 13060   00217A  6FC4               	movwf	sendMessage5@data3& (0+255),b
 13061   00217C  0E01               	movlw	1
 13062   00217E  6FC5               	movwf	sendMessage5@data4& (0+255),b
 13063   002180  0E00               	movlw	0
 13064   002182  6FC6               	movwf	sendMessage5@data5& (0+255),b
 13065   002184  0EAF               	movlw	175
 13066   002186  ECE1  F05F         	call	_sendMessage5
 13067   00218A  EFBE  F00B         	goto	l23462
 13068   00218E                     l23730:
 13069                           
 13070                           ; BSR set to: 1
 13071   00218E  0E0D               	movlw	13
 13072   002190  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13073   002192  A4D8               	btfss	status,2,c
 13074   002194  EF43  F00C         	goto	l23488
 13075                           
 13076                           ; BSR set to: 1
 13077                           ;../../VLCBlib_PIC/mns.c: 583:                 mode_flags &= ~4;
 13078   002198  9566               	bcf	_mode_flags& (0+255),2,b
 13079                           
 13080                           ; BSR set to: 1
 13081                           ;../../VLCBlib_PIC/mns.c: 584:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13082   00219A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 13083   00219E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 13084   0021A2  0E76               	movlw	118
 13085   0021A4  6FC4               	movwf	sendMessage5@data3& (0+255),b
 13086   0021A6  0E01               	movlw	1
 13087   0021A8  6FC5               	movwf	sendMessage5@data4& (0+255),b
 13088   0021AA  0E00               	movlw	0
 13089   0021AC  6FC6               	movwf	sendMessage5@data5& (0+255),b
 13090   0021AE  0EAF               	movlw	175
 13091   0021B0  ECE1  F05F         	call	_sendMessage5
 13092   0021B4  EFBE  F00B         	goto	l23462
 13093   0021B8                     l1509:
 13094                           
 13095                           ; BSR set to: 2
 13096   0021B8  00FF               	reset		;# 
 13097   0021BA  EFBE  F00B         	goto	l23462
 13098   0021BE                     l23750:
 13099                           
 13100                           ; BSR set to: 0
 13101   0021BE  0101               	movlb	1	; () banked
 13102   0021C0  EE20 F001          	lfsr	2,1
 13103   0021C4  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 13104   0021C6  26D9               	addwf	fsr2l,f,c
 13105   0021C8  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 13106   0021CA  22DA               	addwfc	fsr2h,f,c
 13107   0021CC  50DF               	movf	indf2,w,c
 13108   0021CE  0102               	movlb	2	; () banked
 13109   0021D0  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 13110   0021D2  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 13111                           
 13112                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13113                           ; Switch size 1, requested type "simple"
 13114                           ; Number of cases is 1, Range of values is 0 to 0
 13115                           ; switch strategies available:
 13116                           ; Name         Instructions Cycles
 13117                           ; simple_byte            4     3 (average)
 13118                           ;	Chosen strategy is simple_byte
 13119   0021D4  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 13120   0021D6  0A00               	xorlw	0	; case 0
 13121   0021D8  A4D8               	btfss	status,2,c
 13122   0021DA  EF43  F00C         	goto	l23488
 13123                           
 13124                           ; BSR set to: 2
 13125                           ; Switch size 1, requested type "simple"
 13126                           ; Number of cases is 6, Range of values is 79 to 135
 13127                           ; switch strategies available:
 13128                           ; Name         Instructions Cycles
 13129                           ; simple_byte           19    10 (average)
 13130                           ;	Chosen strategy is simple_byte
 13131   0021DE  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 13132   0021E0  0A4F               	xorlw	79	; case 79
 13133   0021E2  B4D8               	btfsc	status,2,c
 13134   0021E4  D444               	goto	l1477
 13135   0021E6  0A11               	xorlw	17	; case 94
 13136   0021E8  B4D8               	btfsc	status,2,c
 13137   0021EA  D7E6               	goto	l1509
 13138   0021EC  0A2D               	xorlw	45	; case 115
 13139   0021EE  B4D8               	btfsc	status,2,c
 13140   0021F0  EFCB  F00C         	goto	l23552
 13141   0021F4  0A05               	xorlw	5	; case 118
 13142   0021F6  B4D8               	btfsc	status,2,c
 13143   0021F8  D72C               	goto	l23666
 13144   0021FA  0A0E               	xorlw	14	; case 120
 13145   0021FC  B4D8               	btfsc	status,2,c
 13146   0021FE  D56D               	goto	l23632
 13147   002200  0AFF               	xorlw	255	; case 135
 13148   002202  B4D8               	btfsc	status,2,c
 13149   002204  D447               	goto	l23586
 13150   002206  EF43  F00C         	goto	l23488
 13151   00220A                     __end_of_mnsProcessMessage:
 13152                           	callstack 0
 13153                           
 13154 ;; *************** function _ackEventProcessMessage *****************
 13155 ;; Defined at:
 13156 ;;		line 111 in file "../../VLCBlib_PIC/event_acknowledge.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;  m               2   63[BANK1 ] PTR struct Message
 13159 ;;		 -> poll@m(9), 
 13160 ;; Auto vars:     Size  Location     Type
 13161 ;;  eventNN         2    3[BANK2 ] struct Word
 13162 ;;  eventEN         2    0[BANK2 ] struct Word
 13163 ;;  ev              2    0        short 
 13164 ;;  eventIndex      1    2[BANK2 ] unsigned char 
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  1    wreg      enum E12799
 13167 ;; Registers used:
 13168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 13169 ;; Tracked objects:
 13170 ;;		On entry : 0/0
 13171 ;;		On exit  : 0/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13174 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13175 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13176 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13177 ;;      Totals:         0       0       4       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13178 ;;Total ram usage:        9 bytes
 13179 ;; Hardware stack levels used: 1
 13180 ;; Hardware stack levels required when called: 19
 13181 ;; This function calls:
 13182 ;;		_ackEventCheckLen
 13183 ;;		_findEvent
 13184 ;;		_findService
 13185 ;;		_isConsumedEvent
 13186 ;;		_sendMessage7
 13187 ;; This function is called by:
 13188 ;;		_poll
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192                           	psect	text24
 13193   0065EE                     __ptext24:
 13194                           	callstack 0
 13195   0065EE                     _ackEventProcessMessage:
 13196                           	callstack 10
 13197                           
 13198                           ;../../VLCBlib_PIC/event_acknowledge.c: 112:     Word eventNN, eventEN;;../../VLCBlib_PI
      +                          C/event_acknowledge.c: 113:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.
      +                          c: 114:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 117:     if (m->opc == OP
      +                          C_MODE) {
 13199                           
 13200                           ;incstack = 0
 13201   0065EE  0101               	movlb	1	; () banked
 13202   0065F0  EE20 F001          	lfsr	2,1
 13203   0065F4  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13204   0065F6  26D9               	addwf	fsr2l,f,c
 13205   0065F8  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13206   0065FA  22DA               	addwfc	fsr2h,f,c
 13207   0065FC  0E76               	movlw	118
 13208   0065FE  18DE               	xorwf	postinc2,w,c
 13209   006600  A4D8               	btfss	status,2,c
 13210   006602  D040               	goto	l1310
 13211                           
 13212                           ; BSR set to: 1
 13213                           ;../../VLCBlib_PIC/event_acknowledge.c: 118:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 13214   006604  C1F9  F1CB         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 13215   006608  C1FA  F1CC         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 13216   00660C  0E04               	movlw	4
 13217   00660E  6FCD               	movwf	ackEventCheckLen@needed& (0+255),b
 13218   006610  EC96  F062         	call	_ackEventCheckLen	;wreg free
 13219   006614  06E8               	decf	wreg,f,c
 13220   006616  A4D8               	btfss	status,2,c
 13221   006618  D002               	goto	l23326
 13222   00661A                     u24770:
 13223   00661A  0E01               	movlw	1
 13224   00661C  0012               	return	
 13225   00661E                     l23326:
 13226                           
 13227                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 13228   00661E  0101               	movlb	1	; () banked
 13229   006620  EE20 F002          	lfsr	2,2
 13230   006624  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13231   006626  26D9               	addwf	fsr2l,f,c
 13232   006628  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13233   00662A  22DA               	addwfc	fsr2h,f,c
 13234   00662C  50DE               	movf	postinc2,w,c
 13235   00662E  0100               	movlb	0	; () banked
 13236   006630  19BE               	xorwf	(_nn+1)& (0+255),w,b
 13237   006632  A4D8               	btfss	status,2,c
 13238   006634  D025               	goto	l23348
 13239                           
 13240                           ; BSR set to: 0
 13241   006636  0101               	movlb	1	; () banked
 13242   006638  EE20 F003          	lfsr	2,3
 13243   00663C  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13244   00663E  26D9               	addwf	fsr2l,f,c
 13245   006640  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13246   006642  22DA               	addwfc	fsr2h,f,c
 13247   006644  0100               	movlb	0	; () banked
 13248   006646  51BD               	movf	_nn& (0+255),w,b
 13249   006648  18DE               	xorwf	postinc2,w,c
 13250   00664A  A4D8               	btfss	status,2,c
 13251   00664C  D019               	goto	l23348
 13252                           
 13253                           ; BSR set to: 0
 13254                           ;../../VLCBlib_PIC/event_acknowledge.c: 120:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 13255   00664E  0101               	movlb	1	; () banked
 13256   006650  EE20 F004          	lfsr	2,4
 13257   006654  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13258   006656  26D9               	addwf	fsr2l,f,c
 13259   006658  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13260   00665A  22DA               	addwfc	fsr2h,f,c
 13261   00665C  0E0A               	movlw	10
 13262   00665E  18DE               	xorwf	postinc2,w,c
 13263   006660  A4D8               	btfss	status,2,c
 13264   006662  D002               	goto	l23340
 13265                           
 13266                           ; BSR set to: 1
 13267                           ;../../VLCBlib_PIC/event_acknowledge.c: 122:                 mode_flags |= 1;
 13268   006664  8166               	bsf	_mode_flags& (0+255),0,b
 13269   006666  D7D9               	goto	u24770
 13270   006668                     l23340:
 13271                           
 13272                           ; BSR set to: 1
 13273   006668  EE20 F004          	lfsr	2,4
 13274   00666C  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13275   00666E  26D9               	addwf	fsr2l,f,c
 13276   006670  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13277   006672  22DA               	addwfc	fsr2h,f,c
 13278   006674  0E0B               	movlw	11
 13279   006676  18DE               	xorwf	postinc2,w,c
 13280   006678  A4D8               	btfss	status,2,c
 13281   00667A  D002               	goto	l23348
 13282                           
 13283                           ; BSR set to: 1
 13284                           ;../../VLCBlib_PIC/event_acknowledge.c: 126:                 mode_flags &= ~1;
 13285   00667C  9166               	bcf	_mode_flags& (0+255),0,b
 13286   00667E  D7CD               	goto	u24770
 13287   006680                     l23348:
 13288                           
 13289                           ;../../VLCBlib_PIC/event_acknowledge.c: 130:         return NOT_PROCESSED;
 13290   006680  0E00               	movlw	0
 13291   006682  0012               	return	
 13292   006684                     l1310:
 13293                           
 13294                           ; BSR set to: 1
 13295                           ;../../VLCBlib_PIC/event_acknowledge.c: 135:     if (! (mode_flags & 2)) {
 13296   006684  A366               	btfss	_mode_flags& (0+255),1,b
 13297   006686  D7FC               	goto	l23348
 13298                           
 13299                           ; BSR set to: 1
 13300                           ;../../VLCBlib_PIC/event_acknowledge.c: 139:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 13301   006688  0E06               	movlw	6
 13302   00668A  ECD3  F04E         	call	_findService
 13303   00668E  0100               	movlb	0	; () banked
 13304   006690  518D               	movf	?_findService& (0+255),w,b
 13305   006692  118E               	iorwf	(?_findService+1)& (0+255),w,b
 13306   006694  B4D8               	btfsc	status,2,c
 13307   006696  D7F4               	goto	l23348
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;../../VLCBlib_PIC/event_acknowledge.c: 142:     if (m->len < 5) {
 13311   006698  C1F9  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 13312   00669C  C1FA  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 13313   0066A0  0E05               	movlw	5
 13314   0066A2  60DF               	cpfslt	indf2,c
 13315   0066A4  D001               	goto	l23368
 13316   0066A6  D7EC               	goto	l23348
 13317   0066A8                     l23368:
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;../../VLCBlib_PIC/event_acknowledge.c: 145:     eventNN.bytes.hi = m->bytes[0];
 13321   0066A8  0101               	movlb	1	; () banked
 13322   0066AA  EE20 F002          	lfsr	2,2
 13323   0066AE  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13324   0066B0  26D9               	addwf	fsr2l,f,c
 13325   0066B2  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13326   0066B4  22DA               	addwfc	fsr2h,f,c
 13327   0066B6  50DF               	movf	indf2,w,c
 13328   0066B8  0102               	movlb	2	; () banked
 13329   0066BA  6FD0               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 13330                           
 13331                           ;../../VLCBlib_PIC/event_acknowledge.c: 146:     eventNN.bytes.lo = m->bytes[1];
 13332   0066BC  0101               	movlb	1	; () banked
 13333   0066BE  EE20 F003          	lfsr	2,3
 13334   0066C2  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13335   0066C4  26D9               	addwf	fsr2l,f,c
 13336   0066C6  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13337   0066C8  22DA               	addwfc	fsr2h,f,c
 13338   0066CA  50DF               	movf	indf2,w,c
 13339   0066CC  0102               	movlb	2	; () banked
 13340   0066CE  6FCF               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 13341                           
 13342                           ;../../VLCBlib_PIC/event_acknowledge.c: 147:     eventEN.bytes.hi = m->bytes[2];
 13343   0066D0  0101               	movlb	1	; () banked
 13344   0066D2  EE20 F004          	lfsr	2,4
 13345   0066D6  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13346   0066D8  26D9               	addwf	fsr2l,f,c
 13347   0066DA  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13348   0066DC  22DA               	addwfc	fsr2h,f,c
 13349   0066DE  50DF               	movf	indf2,w,c
 13350   0066E0  0102               	movlb	2	; () banked
 13351   0066E2  6FCD               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 13352                           
 13353                           ;../../VLCBlib_PIC/event_acknowledge.c: 148:     eventEN.bytes.lo = m->bytes[3];
 13354   0066E4  0101               	movlb	1	; () banked
 13355   0066E6  EE20 F005          	lfsr	2,5
 13356   0066EA  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13357   0066EC  26D9               	addwf	fsr2l,f,c
 13358   0066EE  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13359   0066F0  22DA               	addwfc	fsr2h,f,c
 13360   0066F2  50DF               	movf	indf2,w,c
 13361   0066F4  0102               	movlb	2	; () banked
 13362   0066F6  6FCC               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13363                           
 13364                           ;../../VLCBlib_PIC/event_acknowledge.c: 150:     switch (m->opc) {
 13365   0066F8  D018               	goto	l23380
 13366   0066FA                     l23370:
 13367                           
 13368                           ; BSR set to: 1
 13369                           ;../../VLCBlib_PIC/event_acknowledge.c: 154:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13370   0066FA  C2CF  F1BA         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13371   0066FE  C2D0  F1BB         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13372   006702  C2CF  F1BC         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13373   006706  C2D0  F1BD         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13374   00670A  ECBB  F051         	call	_findEvent	;wreg free
 13375   00670E  D00A               	goto	L2
 13376   006710                     l23372:
 13377                           
 13378                           ; BSR set to: 1
 13379                           ;../../VLCBlib_PIC/event_acknowledge.c: 159:             eventIndex = findEvent(0, event
      +                          NN.word);
 13380   006710  0E00               	movlw	0
 13381   006712  6FBB               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13382   006714  0E00               	movlw	0
 13383   006716  6FBA               	movwf	findEvent@nodeNumber& (0+255),b
 13384   006718  C2CF  F1BC         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13385   00671C  C2D0  F1BD         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13386   006720  ECBB  F051         	call	_findEvent	;wreg free
 13387   006724                     L2:
 13388   006724  0102               	movlb	2	; () banked
 13389   006726  6FCE               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13390                           
 13391                           ;../../VLCBlib_PIC/event_acknowledge.c: 160:             break;
 13392   006728  D01C               	goto	l23382
 13393   00672A                     l23380:
 13394                           
 13395                           ; BSR set to: 2
 13396   00672A  0101               	movlb	1	; () banked
 13397   00672C  EE20 F001          	lfsr	2,1
 13398   006730  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13399   006732  26D9               	addwf	fsr2l,f,c
 13400   006734  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13401   006736  22DA               	addwfc	fsr2h,f,c
 13402   006738  50DF               	movf	indf2,w,c
 13403   00673A  6FFB               	movwf	??_ackEventProcessMessage& (0+255),b
 13404   00673C  6BFC               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13405                           
 13406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13407                           ; Switch size 1, requested type "simple"
 13408                           ; Number of cases is 1, Range of values is 0 to 0
 13409                           ; switch strategies available:
 13410                           ; Name         Instructions Cycles
 13411                           ; simple_byte            4     3 (average)
 13412                           ;	Chosen strategy is simple_byte
 13413   00673E  51FC               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13414   006740  0A00               	xorlw	0	; case 0
 13415   006742  A4D8               	btfss	status,2,c
 13416   006744  D79D               	goto	l23348
 13417                           
 13418                           ; BSR set to: 1
 13419                           ; Switch size 1, requested type "simple"
 13420                           ; Number of cases is 4, Range of values is 144 to 153
 13421                           ; switch strategies available:
 13422                           ; Name         Instructions Cycles
 13423                           ; simple_byte           13     7 (average)
 13424                           ;	Chosen strategy is simple_byte
 13425   006746  51FB               	movf	??_ackEventProcessMessage& (0+255),w,b
 13426   006748  0A90               	xorlw	144	; case 144
 13427   00674A  B4D8               	btfsc	status,2,c
 13428   00674C  D7D6               	goto	l23370
 13429   00674E  0A01               	xorlw	1	; case 145
 13430   006750  B4D8               	btfsc	status,2,c
 13431   006752  D7D3               	goto	l23370
 13432   006754  0A09               	xorlw	9	; case 152
 13433   006756  B4D8               	btfsc	status,2,c
 13434   006758  D7DB               	goto	l23372
 13435   00675A  0A01               	xorlw	1	; case 153
 13436   00675C  B4D8               	btfsc	status,2,c
 13437   00675E  D7D8               	goto	l23372
 13438   006760  D78F               	goto	l23348
 13439   006762                     l23382:
 13440                           
 13441                           ; BSR set to: 2
 13442                           ;../../VLCBlib_PIC/event_acknowledge.c: 164:     if (eventIndex != 0xff) {
 13443   006762  29CE               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13444   006764  B4D8               	btfsc	status,2,c
 13445   006766  D78C               	goto	l23348
 13446                           
 13447                           ; BSR set to: 2
 13448                           ;../../VLCBlib_PIC/event_acknowledge.c: 167:         if (isConsumedEvent(eventIndex)) {
 13449   006768  51CE               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13450   00676A  ECAD  F061         	call	_isConsumedEvent
 13451   00676E  0900               	iorlw	0
 13452   006770  B4D8               	btfsc	status,2,c
 13453   006772  D786               	goto	l23348
 13454                           
 13455                           ;../../VLCBlib_PIC/event_acknowledge.c: 169:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13456   006774  C0BE  F1C2         	movff	_nn+1,sendMessage7@data1
 13457   006778  C0BD  F1C3         	movff	_nn,sendMessage7@data2
 13458   00677C  0101               	movlb	1	; () banked
 13459   00677E  EE20 F001          	lfsr	2,1
 13460   006782  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13461   006784  26D9               	addwf	fsr2l,f,c
 13462   006786  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13463   006788  22DA               	addwfc	fsr2h,f,c
 13464   00678A  50DF               	movf	indf2,w,c
 13465   00678C  6FC4               	movwf	sendMessage7@data3& (0+255),b
 13466   00678E  EE20 F002          	lfsr	2,2
 13467   006792  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13468   006794  26D9               	addwf	fsr2l,f,c
 13469   006796  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13470   006798  22DA               	addwfc	fsr2h,f,c
 13471   00679A  50DF               	movf	indf2,w,c
 13472   00679C  6FC5               	movwf	sendMessage7@data4& (0+255),b
 13473   00679E  EE20 F003          	lfsr	2,3
 13474   0067A2  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13475   0067A4  26D9               	addwf	fsr2l,f,c
 13476   0067A6  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13477   0067A8  22DA               	addwfc	fsr2h,f,c
 13478   0067AA  50DF               	movf	indf2,w,c
 13479   0067AC  6FC6               	movwf	sendMessage7@data5& (0+255),b
 13480   0067AE  EE20 F004          	lfsr	2,4
 13481   0067B2  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13482   0067B4  26D9               	addwf	fsr2l,f,c
 13483   0067B6  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13484   0067B8  22DA               	addwfc	fsr2h,f,c
 13485   0067BA  50DF               	movf	indf2,w,c
 13486   0067BC  6FC7               	movwf	sendMessage7@data6& (0+255),b
 13487   0067BE  EE20 F005          	lfsr	2,5
 13488   0067C2  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13489   0067C4  26D9               	addwf	fsr2l,f,c
 13490   0067C6  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13491   0067C8  22DA               	addwfc	fsr2h,f,c
 13492   0067CA  50DF               	movf	indf2,w,c
 13493   0067CC  6FC8               	movwf	sendMessage7@data7& (0+255),b
 13494   0067CE  0EE6               	movlw	230
 13495   0067D0  ECC9  F05F         	call	_sendMessage7
 13496                           
 13497                           ;../../VLCBlib_PIC/event_acknowledge.c: 171:             ackDiagnostics[0x01].asInt++;
 13498   0067D4  0101               	movlb	1	; () banked
 13499   0067D6  4BB4               	infsnz	(_ackDiagnostics+2)& (0+255),f,b
 13500   0067D8  2BB5               	incf	(_ackDiagnostics+3)& (0+255),f,b
 13501   0067DA  D752               	goto	l23348
 13502   0067DC                     __end_of_ackEventProcessMessage:
 13503                           	callstack 0
 13504                           
 13505 ;; *************** function _bootProcessMessage *****************
 13506 ;; Defined at:
 13507 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 13508 ;; Parameters:    Size  Location     Type
 13509 ;;  m               2   63[BANK1 ] PTR struct Message
 13510 ;;		 -> poll@m(9), 
 13511 ;; Auto vars:     Size  Location     Type
 13512 ;;		None
 13513 ;; Return value:  Size  Location     Type
 13514 ;;                  1    wreg      enum E12799
 13515 ;; Registers used:
 13516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13517 ;; Tracked objects:
 13518 ;;		On entry : 0/0
 13519 ;;		On exit  : 0/0
 13520 ;;		Unchanged: 0/0
 13521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13522 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13524 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13525 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13526 ;;Total ram usage:        4 bytes
 13527 ;; Hardware stack levels used: 1
 13528 ;; Hardware stack levels required when called: 18
 13529 ;; This function calls:
 13530 ;;		_writeNVM
 13531 ;; This function is called by:
 13532 ;;		_poll
 13533 ;; This function uses a non-reentrant model
 13534 ;;
 13535                           
 13536                           	psect	text25
 13537   00A098                     __ptext25:
 13538                           	callstack 0
 13539   00A098                     _bootProcessMessage:
 13540                           	callstack 11
 13541                           
 13542                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13543                           
 13544                           ;incstack = 0
 13545   00A098  0101               	movlb	1	; () banked
 13546   00A09A  EE20 F002          	lfsr	2,2
 13547   00A09E  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13548   00A0A0  26D9               	addwf	fsr2l,f,c
 13549   00A0A2  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13550   00A0A4  22DA               	addwfc	fsr2h,f,c
 13551   00A0A6  50DE               	movf	postinc2,w,c
 13552   00A0A8  0100               	movlb	0	; () banked
 13553   00A0AA  19BE               	xorwf	(_nn+1)& (0+255),w,b
 13554   00A0AC  B4D8               	btfsc	status,2,c
 13555   00A0AE  D002               	goto	l23272
 13556   00A0B0                     u24720:
 13557   00A0B0  0E00               	movlw	0
 13558   00A0B2  0012               	return	
 13559   00A0B4                     l23272:
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13563   00A0B4  0101               	movlb	1	; () banked
 13564   00A0B6  EE20 F003          	lfsr	2,3
 13565   00A0BA  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13566   00A0BC  26D9               	addwf	fsr2l,f,c
 13567   00A0BE  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13568   00A0C0  22DA               	addwfc	fsr2h,f,c
 13569   00A0C2  0100               	movlb	0	; () banked
 13570   00A0C4  51BD               	movf	_nn& (0+255),w,b
 13571   00A0C6  18DE               	xorwf	postinc2,w,c
 13572   00A0C8  A4D8               	btfss	status,2,c
 13573   00A0CA  D7F2               	goto	u24720
 13574   00A0CC  D019               	goto	l23296
 13575   00A0CE                     l23278:
 13576                           
 13577                           ; BSR set to: 1
 13578                           ;../../VLCBlib_PIC/boot.c: 239:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13579   00A0CE  EE20 F004          	lfsr	2,4
 13580   00A0D2  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13581   00A0D4  26D9               	addwf	fsr2l,f,c
 13582   00A0D6  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13583   00A0D8  22DA               	addwfc	fsr2h,f,c
 13584   00A0DA  0E0E               	movlw	14
 13585   00A0DC  18DE               	xorwf	postinc2,w,c
 13586   00A0DE  A4D8               	btfss	status,2,c
 13587   00A0E0  D7E7               	goto	u24720
 13588   00A0E2                     l23284:
 13589                           
 13590                           ; BSR set to: 1
 13591                           ;../../VLCBlib_PIC/boot.c: 244:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13592   00A0E2  0EFF               	movlw	255
 13593   00A0E4  0100               	movlb	0	; () banked
 13594   00A0E6  6FA4               	movwf	writeNVM@index& (0+255),b
 13595   00A0E8  0E03               	movlw	3
 13596   00A0EA  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13597   00A0EC  0E00               	movlw	0
 13598   00A0EE  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13599   00A0F0  0EFF               	movlw	255
 13600   00A0F2  6FA7               	movwf	writeNVM@value& (0+255),b
 13601   00A0F4  0E00               	movlw	0
 13602   00A0F6  EC60  F05C         	call	_writeNVM
 13603   00A0FA  00FF               	reset		;# 
 13604                           
 13605                           ;../../VLCBlib_PIC/boot.c: 246:             return PROCESSED;
 13606   00A0FC  0E01               	movlw	1
 13607   00A0FE  0012               	return	
 13608   00A100                     l23296:
 13609                           
 13610                           ; BSR set to: 0
 13611   00A100  0101               	movlb	1	; () banked
 13612   00A102  EE20 F001          	lfsr	2,1
 13613   00A106  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13614   00A108  26D9               	addwf	fsr2l,f,c
 13615   00A10A  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13616   00A10C  22DA               	addwfc	fsr2h,f,c
 13617   00A10E  50DF               	movf	indf2,w,c
 13618   00A110  6FFB               	movwf	??_bootProcessMessage& (0+255),b
 13619   00A112  6BFC               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13620                           
 13621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13622                           ; Switch size 1, requested type "simple"
 13623                           ; Number of cases is 1, Range of values is 0 to 0
 13624                           ; switch strategies available:
 13625                           ; Name         Instructions Cycles
 13626                           ; simple_byte            4     3 (average)
 13627                           ;	Chosen strategy is simple_byte
 13628   00A114  51FC               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13629   00A116  0A00               	xorlw	0	; case 0
 13630   00A118  A4D8               	btfss	status,2,c
 13631   00A11A  D7CA               	goto	u24720
 13632                           
 13633                           ; BSR set to: 1
 13634                           ; Switch size 1, requested type "simple"
 13635                           ; Number of cases is 2, Range of values is 92 to 118
 13636                           ; switch strategies available:
 13637                           ; Name         Instructions Cycles
 13638                           ; simple_byte            7     4 (average)
 13639                           ;	Chosen strategy is simple_byte
 13640   00A11C  51FB               	movf	??_bootProcessMessage& (0+255),w,b
 13641   00A11E  0A5C               	xorlw	92	; case 92
 13642   00A120  B4D8               	btfsc	status,2,c
 13643   00A122  D7DF               	goto	l23284
 13644   00A124  0A2A               	xorlw	42	; case 118
 13645   00A126  B4D8               	btfsc	status,2,c
 13646   00A128  D7D2               	goto	l23278
 13647   00A12A  D7C2               	goto	u24720
 13648   00A12C                     __end_of_bootProcessMessage:
 13649                           	callstack 0
 13650                           
 13651 ;; *************** function _consumer2QProcessMessage *****************
 13652 ;; Defined at:
 13653 ;;		line 142 in file "../event_consumerDualActionQueue.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;  m               2   63[BANK1 ] PTR struct Message
 13656 ;;		 -> poll@m(9), 
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;  nextSimultan    1    8[BANK2 ] unsigned char 
 13659 ;;  firstAction     1    7[BANK2 ] unsigned char 
 13660 ;;  nextAction      1    6[BANK2 ] unsigned char 
 13661 ;;  enn             2    3[BANK2 ] unsigned short 
 13662 ;;  action          1   13[BANK2 ] unsigned char 
 13663 ;;  e               1   12[BANK2 ] unsigned char 
 13664 ;;  ca              1   11[BANK2 ] unsigned char 
 13665 ;;  masked_actio    1   10[BANK2 ] unsigned char 
 13666 ;;  io              1    9[BANK2 ] unsigned char 
 13667 ;;  tableIndex      1    5[BANK2 ] unsigned char 
 13668 ;;  opc             1    2[BANK2 ] unsigned char 
 13669 ;;  change          1    1[BANK2 ] char 
 13670 ;;  end             1    0[BANK2 ] unsigned char 
 13671 ;;  start           1    0        unsigned char 
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  1    wreg      enum E12799
 13674 ;; Registers used:
 13675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13676 ;; Tracked objects:
 13677 ;;		On entry : 0/0
 13678 ;;		On exit  : 0/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13681 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13682 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13683 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13684 ;;      Totals:         0       0       5      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13685 ;;Total ram usage:       19 bytes
 13686 ;; Hardware stack levels used: 1
 13687 ;; Hardware stack levels required when called: 16
 13688 ;; This function calls:
 13689 ;;		___awdiv
 13690 ;;		___awmod
 13691 ;;		_findEvent
 13692 ;;		_getEVs
 13693 ;;		_getNV
 13694 ;;		_pushTwoAction
 13695 ;;		_setExpeditedActions
 13696 ;;		_setNormalActions
 13697 ;; This function is called by:
 13698 ;;		_poll
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           	psect	text26
 13703   003582                     __ptext26:
 13704                           	callstack 0
 13705   003582                     _consumer2QProcessMessage:
 13706                           	callstack 13
 13707                           
 13708                           ;../event_consumerDualActionQueue.c: 143:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 144:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 145:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 146:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 147:     uint8_t action;;../event_consumerDualActionQueue.c: 148:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 149:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 150:     uint8_t io;;../event_consumerDualActionQueue.c: 15
      +                          1:     uint16_t enn;
 13709                           
 13710                           ;incstack = 0
 13711   003582  C1F9  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13712   003586  C1FA  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13713   00358A  0E05               	movlw	5
 13714   00358C  60DF               	cpfslt	indf2,c
 13715   00358E  D002               	goto	l23058
 13716   003590                     u24450:
 13717   003590  0E00               	movlw	0
 13718   003592  0012               	return	
 13719   003594                     l23058:
 13720                           
 13721                           ;../event_consumerDualActionQueue.c: 155:     enn = ((uint16_t)m->bytes[0])*256+m->bytes
      +                          [1];
 13722   003594  0101               	movlb	1	; () banked
 13723   003596  EE20 F003          	lfsr	2,3
 13724   00359A  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13725   00359C  26D9               	addwf	fsr2l,f,c
 13726   00359E  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13727   0035A0  22DA               	addwfc	fsr2h,f,c
 13728   0035A2  50DF               	movf	indf2,w,c
 13729   0035A4  6FFB               	movwf	??_consumer2QProcessMessage& (0+255),b
 13730   0035A6  EE20 F002          	lfsr	2,2
 13731   0035AA  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13732   0035AC  26D9               	addwf	fsr2l,f,c
 13733   0035AE  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13734   0035B0  22DA               	addwfc	fsr2h,f,c
 13735   0035B2  50DF               	movf	indf2,w,c
 13736   0035B4  6FFC               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13737   0035B6  51FB               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13738   0035B8  0102               	movlb	2	; () banked
 13739   0035BA  6FCF               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13740   0035BC  C1FC  F2D0         	movff	??_consumer2QProcessMessage+1,consumer2QProcessMessage@enn+1
 13741                           
 13742                           ;../event_consumerDualActionQueue.c: 157:     switch (m->opc) {
 13743   0035C0  D014               	goto	l23072
 13744   0035C2                     l448:
 13745                           
 13746                           ; BSR set to: 1
 13747                           ;../event_consumerDualActionQueue.c: 164:             enn = 0;
 13748                           
 13749                           ; BSR set to: 1
 13750   0035C2  0E00               	movlw	0
 13751   0035C4  0102               	movlb	2	; () banked
 13752   0035C6  6FD0               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13753   0035C8  0E00               	movlw	0
 13754   0035CA  6FCF               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13755   0035CC                     l453:
 13756                           
 13757                           ;../event_consumerDualActionQueue.c: 173:             end = 20;
 13758   0035CC  0E14               	movlw	20
 13759   0035CE  0102               	movlb	2	; () banked
 13760   0035D0  6FCC               	movwf	consumer2QProcessMessage@end& (0+255),b
 13761                           
 13762                           ;../event_consumerDualActionQueue.c: 174:             change = 1;
 13763   0035D2  0E01               	movlw	1
 13764   0035D4  6FCD               	movwf	consumer2QProcessMessage@change& (0+255),b
 13765                           
 13766                           ;../event_consumerDualActionQueue.c: 175:             break;
 13767   0035D6  D049               	goto	l23074
 13768   0035D8                     l457:
 13769                           
 13770                           ; BSR set to: 1
 13771                           ;../event_consumerDualActionQueue.c: 182:             enn = 0;
 13772                           
 13773                           ; BSR set to: 1
 13774   0035D8  0E00               	movlw	0
 13775   0035DA  0102               	movlb	2	; () banked
 13776   0035DC  6FD0               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13777   0035DE  0E00               	movlw	0
 13778   0035E0  6FCF               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13779   0035E2                     l462:
 13780                           
 13781                           ;../event_consumerDualActionQueue.c: 191:             end = 1 -1;
 13782   0035E2  0E00               	movlw	0
 13783   0035E4  0102               	movlb	2	; () banked
 13784   0035E6  6FCC               	movwf	consumer2QProcessMessage@end& (0+255),b
 13785                           
 13786                           ; BSR set to: 2
 13787                           ;../event_consumerDualActionQueue.c: 193:             break;
 13788   0035E8  D040               	goto	l23074
 13789   0035EA                     l23072:
 13790                           
 13791                           ; BSR set to: 2
 13792   0035EA  0101               	movlb	1	; () banked
 13793   0035EC  EE20 F001          	lfsr	2,1
 13794   0035F0  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13795   0035F2  26D9               	addwf	fsr2l,f,c
 13796   0035F4  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13797   0035F6  22DA               	addwfc	fsr2h,f,c
 13798   0035F8  50DF               	movf	indf2,w,c
 13799   0035FA  6FFB               	movwf	??_consumer2QProcessMessage& (0+255),b
 13800   0035FC  6BFC               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13801                           
 13802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13803                           ; Switch size 1, requested type "simple"
 13804                           ; Number of cases is 1, Range of values is 0 to 0
 13805                           ; switch strategies available:
 13806                           ; Name         Instructions Cycles
 13807                           ; simple_byte            4     3 (average)
 13808                           ;	Chosen strategy is simple_byte
 13809   0035FE  51FC               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13810   003600  0A00               	xorlw	0	; case 0
 13811   003602  A4D8               	btfss	status,2,c
 13812   003604  D7C5               	goto	u24450
 13813                           
 13814                           ; BSR set to: 1
 13815                           ; Switch size 1, requested type "simple"
 13816                           ; Number of cases is 16, Range of values is 144 to 249
 13817                           ; switch strategies available:
 13818                           ; Name         Instructions Cycles
 13819                           ; simple_byte           49    25 (average)
 13820                           ;	Chosen strategy is simple_byte
 13821   003606  51FB               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13822   003608  0A90               	xorlw	144	; case 144
 13823   00360A  B4D8               	btfsc	status,2,c
 13824   00360C  D7DF               	goto	l453
 13825   00360E  0A01               	xorlw	1	; case 145
 13826   003610  B4D8               	btfsc	status,2,c
 13827   003612  D7E7               	goto	l462
 13828   003614  0A09               	xorlw	9	; case 152
 13829   003616  B4D8               	btfsc	status,2,c
 13830   003618  D7D4               	goto	l448
 13831   00361A  0A01               	xorlw	1	; case 153
 13832   00361C  B4D8               	btfsc	status,2,c
 13833   00361E  D7DC               	goto	l457
 13834   003620  0A29               	xorlw	41	; case 176
 13835   003622  B4D8               	btfsc	status,2,c
 13836   003624  D7D3               	goto	l453
 13837   003626  0A01               	xorlw	1	; case 177
 13838   003628  B4D8               	btfsc	status,2,c
 13839   00362A  D7DB               	goto	l462
 13840   00362C  0A09               	xorlw	9	; case 184
 13841   00362E  B4D8               	btfsc	status,2,c
 13842   003630  D7C8               	goto	l448
 13843   003632  0A01               	xorlw	1	; case 185
 13844   003634  B4D8               	btfsc	status,2,c
 13845   003636  D7D0               	goto	l457
 13846   003638  0A69               	xorlw	105	; case 208
 13847   00363A  B4D8               	btfsc	status,2,c
 13848   00363C  D7C7               	goto	l453
 13849   00363E  0A01               	xorlw	1	; case 209
 13850   003640  B4D8               	btfsc	status,2,c
 13851   003642  D7CF               	goto	l462
 13852   003644  0A09               	xorlw	9	; case 216
 13853   003646  B4D8               	btfsc	status,2,c
 13854   003648  D7BC               	goto	l448
 13855   00364A  0A01               	xorlw	1	; case 217
 13856   00364C  B4D8               	btfsc	status,2,c
 13857   00364E  D7C4               	goto	l457
 13858   003650  0A29               	xorlw	41	; case 240
 13859   003652  B4D8               	btfsc	status,2,c
 13860   003654  D7BB               	goto	l453
 13861   003656  0A01               	xorlw	1	; case 241
 13862   003658  B4D8               	btfsc	status,2,c
 13863   00365A  D7C3               	goto	l462
 13864   00365C  0A09               	xorlw	9	; case 248
 13865   00365E  B4D8               	btfsc	status,2,c
 13866   003660  D7B0               	goto	l448
 13867   003662  0A01               	xorlw	1	; case 249
 13868   003664  B4D8               	btfsc	status,2,c
 13869   003666  D7B8               	goto	l457
 13870   003668  D793               	goto	u24450
 13871   00366A                     l23074:
 13872                           
 13873                           ; BSR set to: 2
 13874                           ;../event_consumerDualActionQueue.c: 199:     tableIndex = findEvent(enn, ((uint16_t)m->
      +                          bytes[2])*256+m->bytes[3]);
 13875   00366A  C2CF  F1BA         	movff	consumer2QProcessMessage@enn,findEvent@nodeNumber
 13876   00366E  C2D0  F1BB         	movff	consumer2QProcessMessage@enn+1,findEvent@nodeNumber+1
 13877   003672  0101               	movlb	1	; () banked
 13878   003674  EE20 F005          	lfsr	2,5
 13879   003678  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13880   00367A  26D9               	addwf	fsr2l,f,c
 13881   00367C  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13882   00367E  22DA               	addwfc	fsr2h,f,c
 13883   003680  50DF               	movf	indf2,w,c
 13884   003682  6FFB               	movwf	??_consumer2QProcessMessage& (0+255),b
 13885   003684  EE20 F004          	lfsr	2,4
 13886   003688  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13887   00368A  26D9               	addwf	fsr2l,f,c
 13888   00368C  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13889   00368E  22DA               	addwfc	fsr2h,f,c
 13890   003690  50DF               	movf	indf2,w,c
 13891   003692  6FFC               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13892   003694  51FB               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13893   003696  6FBC               	movwf	findEvent@eventNumber& (0+255),b
 13894   003698  C1FC  F1BD         	movff	??_consumer2QProcessMessage+1,findEvent@eventNumber+1
 13895   00369C  ECBB  F051         	call	_findEvent	;wreg free
 13896   0036A0  0102               	movlb	2	; () banked
 13897   0036A2  6FD1               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13898                           
 13899                           ; BSR set to: 2
 13900                           ;../event_consumerDualActionQueue.c: 200:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13901   0036A4  29D1               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13902   0036A6  B4D8               	btfsc	status,2,c
 13903   0036A8  D773               	goto	u24450
 13904                           
 13905                           ; BSR set to: 2
 13906   0036AA  51D1               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13907   0036AC  EC3A  F041         	call	_getEVs
 13908                           
 13909                           ;../event_consumerDualActionQueue.c: 208:     opc=m->opc;
 13910   0036B0  0101               	movlb	1	; () banked
 13911   0036B2  EE20 F001          	lfsr	2,1
 13912   0036B6  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13913   0036B8  26D9               	addwf	fsr2l,f,c
 13914   0036BA  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13915   0036BC  22DA               	addwfc	fsr2h,f,c
 13916   0036BE  50DF               	movf	indf2,w,c
 13917   0036C0  0102               	movlb	2	; () banked
 13918   0036C2  6FCE               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13919                           
 13920                           ; BSR set to: 2
 13921                           ;../event_consumerDualActionQueue.c: 210:     if ( ! (opc&0b00000001)) {
 13922   0036C4  B1CE               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13923   0036C6  D07F               	goto	l465
 13924                           
 13925                           ; BSR set to: 2
 13926                           ;../event_consumerDualActionQueue.c: 214:         for (e=1; e<20 ;e++) {
 13927   0036C8  0E01               	movlw	1
 13928   0036CA  6FD8               	movwf	consumer2QProcessMessage@e& (0+255),b
 13929   0036CC                     l23094:
 13930                           
 13931                           ; BSR set to: 2
 13932                           ;../event_consumerDualActionQueue.c: 215:             action = evs[e];
 13933   0036CC  0E20               	movlw	low _evs
 13934   0036CE  25D8               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13935   0036D0  6ED9               	movwf	fsr2l,c
 13936   0036D2  6ADA               	clrf	fsr2h,c
 13937   0036D4  0E02               	movlw	high _evs
 13938   0036D6  22DA               	addwfc	fsr2h,f,c
 13939   0036D8  50DF               	movf	indf2,w,c
 13940   0036DA  6FD9               	movwf	consumer2QProcessMessage@action& (0+255),b
 13941                           
 13942                           ; BSR set to: 2
 13943                           ;../event_consumerDualActionQueue.c: 216:             if (action != 0) {
 13944   0036DC  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13945   0036DE  B4D8               	btfsc	status,2,c
 13946   0036E0  D06C               	goto	l469
 13947                           
 13948                           ; BSR set to: 2
 13949                           ;../event_consumerDualActionQueue.c: 218:                 masked_action = action&0x7F;
 13950   0036E2  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13951   0036E4  0B7F               	andlw	127
 13952   0036E6  6FD6               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13953                           
 13954                           ;../event_consumerDualActionQueue.c: 219:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 13955   0036E8  0E59               	movlw	89
 13956   0036EA  61D6               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13957   0036EC  D066               	goto	l469
 13958                           
 13959                           ; BSR set to: 2
 13960                           ;../event_consumerDualActionQueue.c: 221:                     if ((masked_action) == 7) 
      +                          {
 13961   0036EE  0E07               	movlw	7
 13962   0036F0  19D6               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13963   0036F2  B4D8               	btfsc	status,2,c
 13964   0036F4  D106               	goto	u24670
 13965                           
 13966                           ; BSR set to: 2
 13967                           ;../event_consumerDualActionQueue.c: 224:                     if ((masked_action) < 8) {
 13968   0036F6  0E08               	movlw	8
 13969   0036F8  61D6               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13970   0036FA  D004               	goto	l23108
 13971                           
 13972                           ; BSR set to: 2
 13973                           ;../event_consumerDualActionQueue.c: 225:                         pushTwoAction(action);
 13974   0036FC  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13975   0036FE  EC00  F05A         	call	_pushTwoAction
 13976                           
 13977                           ;../event_consumerDualActionQueue.c: 226:                     } else {
 13978   003702  D05B               	goto	l469
 13979   003704                     l23108:
 13980                           
 13981                           ; BSR set to: 2
 13982                           ;../event_consumerDualActionQueue.c: 227:                         io = (((masked_action)
      +                          -8)/5);
 13983   003704  0EF8               	movlw	248
 13984   003706  25D6               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13985   003708  0100               	movlb	0	; () banked
 13986   00370A  6F97               	movwf	___awdiv@dividend& (0+255),b
 13987   00370C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13988   00370E  0EFF               	movlw	255
 13989   003710  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13990   003712  0E00               	movlw	0
 13991   003714  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13992   003716  0E05               	movlw	5
 13993   003718  6F99               	movwf	___awdiv@divisor& (0+255),b
 13994   00371A  EC1C  F053         	call	___awdiv	;wreg free
 13995   00371E  0100               	movlb	0	; () banked
 13996   003720  5197               	movf	?___awdiv& (0+255),w,b
 13997   003722  0102               	movlb	2	; () banked
 13998   003724  6FD5               	movwf	consumer2QProcessMessage@io& (0+255),b
 13999                           
 14000                           ;../event_consumerDualActionQueue.c: 228:                         ca = (((masked_action)
      +                          -8)%5);
 14001   003726  0EF8               	movlw	248
 14002   003728  25D6               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14003   00372A  0100               	movlb	0	; () banked
 14004   00372C  6F8D               	movwf	___awmod@dividend& (0+255),b
 14005   00372E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14006   003730  0EFF               	movlw	255
 14007   003732  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14008   003734  0E00               	movlw	0
 14009   003736  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14010   003738  0E05               	movlw	5
 14011   00373A  6F8F               	movwf	___awmod@divisor& (0+255),b
 14012   00373C  EC31  F057         	call	___awmod	;wreg free
 14013   003740  0100               	movlb	0	; () banked
 14014   003742  518D               	movf	?___awmod& (0+255),w,b
 14015   003744  0102               	movlb	2	; () banked
 14016   003746  6FD7               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14017                           
 14018                           ;../event_consumerDualActionQueue.c: 229:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14019   003748  D020               	goto	l23130
 14020   00374A                     l23110:
 14021                           
 14022                           ; BSR set to: 0
 14023                           ;../event_consumerDualActionQueue.c: 234:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14024   00374A  0102               	movlb	2	; () banked
 14025   00374C  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14026   00374E  0D07               	mullw	7
 14027   003750  50F3               	movf	243,w,c
 14028   003752  0F11               	addlw	17
 14029   003754  EC52  F05E         	call	_getNV
 14030   003758  0100               	movlb	0	; () banked
 14031   00375A  BF8D               	btfsc	?_getNV& (0+255),7,b
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;../event_consumerDualActionQueue.c: 235:                                     setExpedit
      +                          edActions();
 14035   00375C  EC1C  F063         	call	_setExpeditedActions	;wreg free
 14036   003760                     l23114:
 14037                           
 14038                           ;../event_consumerDualActionQueue.c: 240:                                 if (ca == 0) {
 14039   003760  0102               	movlb	2	; () banked
 14040   003762  51D7               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14041   003764  B4D8               	btfsc	status,2,c
 14042                           
 14043                           ; BSR set to: 2
 14044                           ;../event_consumerDualActionQueue.c: 242:                                     action++;
 14045   003766  2BD9               	incf	consumer2QProcessMessage@action& (0+255),f,b
 14046                           
 14047                           ; BSR set to: 2
 14048                           ;../event_consumerDualActionQueue.c: 244:                                 if (ca == 4) {
 14049   003768  0E04               	movlw	4
 14050   00376A  19D7               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14051   00376C  A4D8               	btfss	status,2,c
 14052   00376E  D002               	goto	l23122
 14053                           
 14054                           ; BSR set to: 2
 14055                           ;../event_consumerDualActionQueue.c: 246:                                     action-=2;
 14056   003770  0E02               	movlw	2
 14057   003772  5FD9               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14058   003774                     l23122:
 14059                           
 14060                           ; BSR set to: 2
 14061                           ;../event_consumerDualActionQueue.c: 248:                                 pushTwoAction(
      +                          action);
 14062   003774  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14063   003776  EC00  F05A         	call	_pushTwoAction
 14064                           
 14065                           ;../event_consumerDualActionQueue.c: 249:                                 setNormalActio
      +                          ns();
 14066   00377A  EC19  F063         	call	_setNormalActions	;wreg free
 14067                           
 14068                           ;../event_consumerDualActionQueue.c: 250:                                 break;
 14069   00377E  D01D               	goto	l469
 14070   003780                     l23126:
 14071                           
 14072                           ; BSR set to: 0
 14073                           ;../event_consumerDualActionQueue.c: 252:                                 pushTwoAction(
      +                          action);
 14074   003780  0102               	movlb	2	; () banked
 14075   003782  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14076   003784  EC00  F05A         	call	_pushTwoAction
 14077                           
 14078                           ;../event_consumerDualActionQueue.c: 253:                                 break;
 14079   003788  D018               	goto	l469
 14080   00378A                     l23130:
 14081                           
 14082                           ; BSR set to: 2
 14083   00378A  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14084   00378C  0D07               	mullw	7
 14085   00378E  50F3               	movf	243,w,c
 14086   003790  0F10               	addlw	16
 14087   003792  EC52  F05E         	call	_getNV
 14088                           
 14089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14090                           ; Switch size 1, requested type "simple"
 14091                           ; Number of cases is 1, Range of values is 0 to 0
 14092                           ; switch strategies available:
 14093                           ; Name         Instructions Cycles
 14094                           ; simple_byte            4     3 (average)
 14095                           ;	Chosen strategy is simple_byte
 14096   003796  0100               	movlb	0	; () banked
 14097   003798  518E               	movf	(?_getNV+1)& (0+255),w,b
 14098   00379A  0A00               	xorlw	0	; case 0
 14099   00379C  A4D8               	btfss	status,2,c
 14100   00379E  D00D               	goto	l469
 14101                           
 14102                           ; BSR set to: 0
 14103                           ; Switch size 1, requested type "simple"
 14104                           ; Number of cases is 4, Range of values is 1 to 4
 14105                           ; switch strategies available:
 14106                           ; Name         Instructions Cycles
 14107                           ; simple_byte           13     7 (average)
 14108                           ;	Chosen strategy is simple_byte
 14109   0037A0  518D               	movf	?_getNV& (0+255),w,b
 14110   0037A2  0A01               	xorlw	1	; case 1
 14111   0037A4  B4D8               	btfsc	status,2,c
 14112   0037A6  D7D1               	goto	l23110
 14113   0037A8  0A03               	xorlw	3	; case 2
 14114   0037AA  B4D8               	btfsc	status,2,c
 14115   0037AC  D7D9               	goto	l23114
 14116   0037AE  0A01               	xorlw	1	; case 3
 14117   0037B0  B4D8               	btfsc	status,2,c
 14118   0037B2  D7D6               	goto	l23114
 14119   0037B4  0A07               	xorlw	7	; case 4
 14120   0037B6  B4D8               	btfsc	status,2,c
 14121   0037B8  D7E3               	goto	l23126
 14122   0037BA                     l469:
 14123                           
 14124                           ;../event_consumerDualActionQueue.c: 261:         }
 14125                           
 14126                           ; BSR set to: 0
 14127   0037BA  0102               	movlb	2	; () banked
 14128   0037BC  2BD8               	incf	consumer2QProcessMessage@e& (0+255),f,b
 14129                           
 14130                           ; BSR set to: 2
 14131   0037BE  0E13               	movlw	19
 14132   0037C0  65D8               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14133   0037C2  D784               	goto	l23094
 14134   0037C4  D09E               	goto	u24670
 14135   0037C6                     l465:
 14136                           
 14137                           ; BSR set to: 2
 14138                           ;../event_consumerDualActionQueue.c: 265:         uint8_t nextAction = evs[20 -1];
 14139   0037C6  C233  F2D2         	movff	_evs+19,consumer2QProcessMessage@nextAction
 14140                           
 14141                           ; BSR set to: 2
 14142                           ;../event_consumerDualActionQueue.c: 267:         for (e=20 -1; e>=1 ;e--) {
 14143   0037CA  0E13               	movlw	19
 14144   0037CC  6FD8               	movwf	consumer2QProcessMessage@e& (0+255),b
 14145   0037CE                     l23140:
 14146                           
 14147                           ; BSR set to: 2
 14148                           ;../event_consumerDualActionQueue.c: 268:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 269:             uint8_t firstAction = 0;
 14149   0037CE  0E00               	movlw	0
 14150   0037D0  6FD3               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 14151                           
 14152                           ; BSR set to: 2
 14153                           ;../event_consumerDualActionQueue.c: 270:             action = nextAction;
 14154   0037D2  C2D2  F2D9         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 14155                           
 14156                           ; BSR set to: 2
 14157                           ;../event_consumerDualActionQueue.c: 274:             if (e > 1) {
 14158   0037D6  0E01               	movlw	1
 14159   0037D8  65D8               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14160   0037DA  D00A               	goto	l23150
 14161                           
 14162                           ; BSR set to: 2
 14163                           ;../event_consumerDualActionQueue.c: 275:                 nextAction = evs[e-1];
 14164   0037DC  0E1F               	movlw	low (_evs+65535)
 14165   0037DE  25D8               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 14166   0037E0  6ED9               	movwf	fsr2l,c
 14167   0037E2  6ADA               	clrf	fsr2h,c
 14168   0037E4  0E02               	movlw	high (_evs+65535)
 14169   0037E6  22DA               	addwfc	fsr2h,f,c
 14170   0037E8  50DF               	movf	indf2,w,c
 14171   0037EA  6FD2               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 14172                           
 14173                           ; BSR set to: 2
 14174                           ;../event_consumerDualActionQueue.c: 276:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 14175   0037EC  51D2               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 14176   0037EE  D001               	goto	L3
 14177   0037F0                     l23150:
 14178                           
 14179                           ; BSR set to: 2
 14180                           ;../event_consumerDualActionQueue.c: 278:                 nextSimultaneous = firstAction
      +                           & 0x80;
 14181   0037F0  51D3               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14182   0037F2                     L3:
 14183   0037F2  0B80               	andlw	128
 14184   0037F4  6FD4               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 14185                           
 14186                           ; BSR set to: 2
 14187                           ;../event_consumerDualActionQueue.c: 280:             if (action != 0) {
 14188   0037F6  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14189   0037F8  B4D8               	btfsc	status,2,c
 14190   0037FA  D07E               	goto	l490
 14191                           
 14192                           ; BSR set to: 2
 14193                           ;../event_consumerDualActionQueue.c: 282:                 if (firstAction == 0) {
 14194   0037FC  51D3               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14195   0037FE  B4D8               	btfsc	status,2,c
 14196                           
 14197                           ; BSR set to: 2
 14198                           ;../event_consumerDualActionQueue.c: 283:                     firstAction = action;
 14199   003800  C2D9  F2D3         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 14200                           
 14201                           ; BSR set to: 2
 14202                           ;../event_consumerDualActionQueue.c: 285:                 action &= 0x7F;
 14203   003804  9FD9               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 14204                           
 14205                           ; BSR set to: 2
 14206                           ;../event_consumerDualActionQueue.c: 286:                 if (action <= (8 + 5 * 16)) {
 14207   003806  0E59               	movlw	89
 14208   003808  61D9               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14209   00380A  D076               	goto	l490
 14210                           
 14211                           ; BSR set to: 2
 14212                           ;../event_consumerDualActionQueue.c: 288:                     if ((action) == 7) {
 14213   00380C  0E07               	movlw	7
 14214   00380E  19D9               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 14215   003810  B4D8               	btfsc	status,2,c
 14216   003812  D077               	goto	u24670
 14217                           
 14218                           ; BSR set to: 2
 14219                           ;../event_consumerDualActionQueue.c: 291:                     if ((action < 8) && (actio
      +                          n != 1)) {
 14220   003814  0E08               	movlw	8
 14221   003816  61D9               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14222   003818  D009               	goto	l23174
 14223                           
 14224                           ; BSR set to: 2
 14225   00381A  05D9               	decf	consumer2QProcessMessage@action& (0+255),w,b
 14226   00381C  B4D8               	btfsc	status,2,c
 14227   00381E  D006               	goto	l23174
 14228                           
 14229                           ; BSR set to: 2
 14230                           ;../event_consumerDualActionQueue.c: 292:                         action |= nextSimultan
      +                          eous;
 14231   003820  51D4               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14232   003822  13D9               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14233                           
 14234                           ; BSR set to: 2
 14235                           ;../event_consumerDualActionQueue.c: 293:                         pushTwoAction(action);
 14236   003824  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14237   003826  EC00  F05A         	call	_pushTwoAction
 14238                           
 14239                           ;../event_consumerDualActionQueue.c: 294:                     } else {
 14240   00382A  D066               	goto	l490
 14241   00382C                     l23174:
 14242                           
 14243                           ; BSR set to: 2
 14244                           ;../event_consumerDualActionQueue.c: 295:                         io = (((action)-8)/5);
 14245   00382C  0EF8               	movlw	248
 14246   00382E  25D9               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14247   003830  0100               	movlb	0	; () banked
 14248   003832  6F97               	movwf	___awdiv@dividend& (0+255),b
 14249   003834  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 14250   003836  0EFF               	movlw	255
 14251   003838  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 14252   00383A  0E00               	movlw	0
 14253   00383C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 14254   00383E  0E05               	movlw	5
 14255   003840  6F99               	movwf	___awdiv@divisor& (0+255),b
 14256   003842  EC1C  F053         	call	___awdiv	;wreg free
 14257   003846  0100               	movlb	0	; () banked
 14258   003848  5197               	movf	?___awdiv& (0+255),w,b
 14259   00384A  0102               	movlb	2	; () banked
 14260   00384C  6FD5               	movwf	consumer2QProcessMessage@io& (0+255),b
 14261                           
 14262                           ;../event_consumerDualActionQueue.c: 296:                         ca = (((action)-8)%5);
 14263   00384E  0EF8               	movlw	248
 14264   003850  25D9               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14265   003852  0100               	movlb	0	; () banked
 14266   003854  6F8D               	movwf	___awmod@dividend& (0+255),b
 14267   003856  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14268   003858  0EFF               	movlw	255
 14269   00385A  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14270   00385C  0E00               	movlw	0
 14271   00385E  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14272   003860  0E05               	movlw	5
 14273   003862  6F8F               	movwf	___awmod@divisor& (0+255),b
 14274   003864  EC31  F057         	call	___awmod	;wreg free
 14275   003868  0100               	movlb	0	; () banked
 14276   00386A  518D               	movf	?___awmod& (0+255),w,b
 14277   00386C  0102               	movlb	2	; () banked
 14278   00386E  6FD7               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14279                           
 14280                           ;../event_consumerDualActionQueue.c: 297:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14281   003870  D02B               	goto	l23202
 14282   003872                     l23176:
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;../event_consumerDualActionQueue.c: 302:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14286   003872  0102               	movlb	2	; () banked
 14287   003874  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14288   003876  0D07               	mullw	7
 14289   003878  50F3               	movf	243,w,c
 14290   00387A  0F11               	addlw	17
 14291   00387C  EC52  F05E         	call	_getNV
 14292   003880  0100               	movlb	0	; () banked
 14293   003882  BF8D               	btfsc	?_getNV& (0+255),7,b
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;../event_consumerDualActionQueue.c: 303:                                     setExpedit
      +                          edActions();
 14297   003884  EC1C  F063         	call	_setExpeditedActions	;wreg free
 14298                           
 14299                           ;../event_consumerDualActionQueue.c: 305:                                 if (ca == 3) {
 14300   003888  0E03               	movlw	3
 14301   00388A  0102               	movlb	2	; () banked
 14302   00388C  19D7               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14303   00388E  B4D8               	btfsc	status,2,c
 14304                           
 14305                           ; BSR set to: 2
 14306                           ;../event_consumerDualActionQueue.c: 307:                                     action--;
 14307   003890  07D9               	decf	consumer2QProcessMessage@action& (0+255),f,b
 14308   003892                     l23184:
 14309                           
 14310                           ;../event_consumerDualActionQueue.c: 312:                                 if (ca == 0) {
 14311   003892  0102               	movlb	2	; () banked
 14312   003894  51D7               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14313   003896  A4D8               	btfss	status,2,c
 14314   003898  D002               	goto	l500
 14315                           
 14316                           ; BSR set to: 2
 14317                           ;../event_consumerDualActionQueue.c: 314:                                     action += 
      +                          2;
 14318   00389A  0E02               	movlw	2
 14319   00389C  27D9               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 14320   00389E                     l500:
 14321                           
 14322                           ; BSR set to: 2
 14323                           ;../event_consumerDualActionQueue.c: 316:                                 if (ca == 4) {
 14324   00389E  0E04               	movlw	4
 14325   0038A0  19D7               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14326   0038A2  A4D8               	btfss	status,2,c
 14327   0038A4  D002               	goto	l501
 14328                           
 14329                           ; BSR set to: 2
 14330                           ;../event_consumerDualActionQueue.c: 318:                                     action -= 
      +                          3;
 14331   0038A6  0E03               	movlw	3
 14332   0038A8  5FD9               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14333   0038AA                     l501:
 14334                           
 14335                           ; BSR set to: 2
 14336                           ;../event_consumerDualActionQueue.c: 320:                                 action |= next
      +                          Simultaneous;
 14337   0038AA  51D4               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14338   0038AC  13D9               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14339                           
 14340                           ; BSR set to: 2
 14341                           ;../event_consumerDualActionQueue.c: 321:                                 pushTwoAction(
      +                          action);
 14342   0038AE  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14343   0038B0  EC00  F05A         	call	_pushTwoAction
 14344   0038B4                     l23192:
 14345                           
 14346                           ;../event_consumerDualActionQueue.c: 322:                                 setNormalActio
      +                          ns();
 14347   0038B4  EC19  F063         	call	_setNormalActions	;wreg free
 14348                           
 14349                           ;../event_consumerDualActionQueue.c: 323:                                 break;
 14350   0038B8  D01F               	goto	l490
 14351   0038BA                     l23194:
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;../event_consumerDualActionQueue.c: 325:                                 action |= next
      +                          Simultaneous;
 14355   0038BA  0102               	movlb	2	; () banked
 14356   0038BC  51D4               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14357   0038BE  13D9               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14358                           
 14359                           ; BSR set to: 2
 14360                           ;../event_consumerDualActionQueue.c: 326:                                 pushTwoAction(
      +                          action);
 14361   0038C0  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14362   0038C2  EC00  F05A         	call	_pushTwoAction
 14363   0038C6  D7F6               	goto	l23192
 14364   0038C8                     l23202:
 14365                           
 14366                           ; BSR set to: 2
 14367   0038C8  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14368   0038CA  0D07               	mullw	7
 14369   0038CC  50F3               	movf	243,w,c
 14370   0038CE  0F10               	addlw	16
 14371   0038D0  EC52  F05E         	call	_getNV
 14372                           
 14373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14374                           ; Switch size 1, requested type "simple"
 14375                           ; Number of cases is 1, Range of values is 0 to 0
 14376                           ; switch strategies available:
 14377                           ; Name         Instructions Cycles
 14378                           ; simple_byte            4     3 (average)
 14379                           ;	Chosen strategy is simple_byte
 14380   0038D4  0100               	movlb	0	; () banked
 14381   0038D6  518E               	movf	(?_getNV+1)& (0+255),w,b
 14382   0038D8  0A00               	xorlw	0	; case 0
 14383   0038DA  A4D8               	btfss	status,2,c
 14384   0038DC  D00D               	goto	l490
 14385                           
 14386                           ; BSR set to: 0
 14387                           ; Switch size 1, requested type "simple"
 14388                           ; Number of cases is 4, Range of values is 1 to 4
 14389                           ; switch strategies available:
 14390                           ; Name         Instructions Cycles
 14391                           ; simple_byte           13     7 (average)
 14392                           ;	Chosen strategy is simple_byte
 14393   0038DE  518D               	movf	?_getNV& (0+255),w,b
 14394   0038E0  0A01               	xorlw	1	; case 1
 14395   0038E2  B4D8               	btfsc	status,2,c
 14396   0038E4  D7C6               	goto	l23176
 14397   0038E6  0A03               	xorlw	3	; case 2
 14398   0038E8  B4D8               	btfsc	status,2,c
 14399   0038EA  D7D3               	goto	l23184
 14400   0038EC  0A01               	xorlw	1	; case 3
 14401   0038EE  B4D8               	btfsc	status,2,c
 14402   0038F0  D7D0               	goto	l23184
 14403   0038F2  0A07               	xorlw	7	; case 4
 14404   0038F4  B4D8               	btfsc	status,2,c
 14405   0038F6  D7E1               	goto	l23194
 14406   0038F8                     l490:
 14407                           
 14408                           ;../event_consumerDualActionQueue.c: 336:         }
 14409                           
 14410                           ; BSR set to: 0
 14411   0038F8  0102               	movlb	2	; () banked
 14412   0038FA  07D8               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14413                           
 14414                           ; BSR set to: 2
 14415   0038FC  51D8               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14416   0038FE  A4D8               	btfss	status,2,c
 14417   003900  D766               	goto	l23140
 14418   003902                     u24670:
 14419                           
 14420                           ; BSR set to: 2
 14421                           ;../event_consumerDualActionQueue.c: 339:     consumer2QDiagnostics[1].asUint++;
 14422   003902  0101               	movlb	1	; () banked
 14423   003904  4BB8               	infsnz	(_consumer2QDiagnostics+2)& (0+255),f,b
 14424   003906  2BB9               	incf	(_consumer2QDiagnostics+3)& (0+255),f,b
 14425                           
 14426                           ; BSR set to: 1
 14427                           ;../event_consumerDualActionQueue.c: 341:     return PROCESSED;
 14428   003908  0E01               	movlw	1
 14429   00390A  0012               	return		;funcret
 14430   00390C                     __end_of_consumer2QProcessMessage:
 14431                           	callstack 0
 14432                           
 14433 ;; *************** function _teachProcessMessage *****************
 14434 ;; Defined at:
 14435 ;;		line 381 in file "../../VLCBlib_PIC/event_teach_large.c"
 14436 ;; Parameters:    Size  Location     Type
 14437 ;;  m               2   63[BANK1 ] PTR struct Message
 14438 ;;		 -> poll@m(9), 
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;		None
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  1    wreg      enum E12799
 14443 ;; Registers used:
 14444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14445 ;; Tracked objects:
 14446 ;;		On entry : 0/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14450 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14452 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14453 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14454 ;;Total ram usage:        8 bytes
 14455 ;; Hardware stack levels used: 1
 14456 ;; Hardware stack levels required when called: 24
 14457 ;; This function calls:
 14458 ;;		_doEvlrn
 14459 ;;		_doEvuln
 14460 ;;		_doNenrd
 14461 ;;		_doNerd
 14462 ;;		_doNnclr
 14463 ;;		_doNnevn
 14464 ;;		_doReqev
 14465 ;;		_doReval
 14466 ;;		_doRqevn
 14467 ;;		_sendMessage3
 14468 ;;		_sendMessage5
 14469 ;;		_teachCheckLen
 14470 ;; This function is called by:
 14471 ;;		_poll
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475                           	psect	text27
 14476   00220A                     __ptext27:
 14477                           	callstack 0
 14478   00220A                     _teachProcessMessage:
 14479                           	callstack 5
 14480                           
 14481                           ;../../VLCBlib_PIC/event_teach_large.c: 382:     switch(m->opc) {
 14482                           
 14483                           ;incstack = 0
 14484   00220A  D318               	goto	l24646
 14485   00220C                     l24380:
 14486                           
 14487                           ; BSR set to: 2
 14488                           ;../../VLCBlib_PIC/event_teach_large.c: 385:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14489   00220C  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14490   002210  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14491   002214  0E03               	movlw	3
 14492   002216  0101               	movlb	1	; () banked
 14493   002218  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14494   00221A  0E00               	movlw	0
 14495   00221C  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14496   00221E  EC70  F059         	call	_teachCheckLen	;wreg free
 14497   002222  06E8               	decf	wreg,f,c
 14498   002224  A4D8               	btfss	status,2,c
 14499   002226  D002               	goto	l24386
 14500   002228                     u25900:
 14501   002228  0E01               	movlw	1
 14502   00222A  0012               	return	
 14503   00222C                     l24386:
 14504                           
 14505                           ;../../VLCBlib_PIC/event_teach_large.c: 386:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14506   00222C  0101               	movlb	1	; () banked
 14507   00222E  EE20 F002          	lfsr	2,2
 14508   002232  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14509   002234  26D9               	addwf	fsr2l,f,c
 14510   002236  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14511   002238  22DA               	addwfc	fsr2h,f,c
 14512   00223A  50DE               	movf	postinc2,w,c
 14513   00223C  0100               	movlb	0	; () banked
 14514   00223E  19BE               	xorwf	(_nn+1)& (0+255),w,b
 14515   002240  A4D8               	btfss	status,2,c
 14516   002242  D00F               	goto	l24392
 14517                           
 14518                           ; BSR set to: 0
 14519   002244  0101               	movlb	1	; () banked
 14520   002246  EE20 F003          	lfsr	2,3
 14521   00224A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14522   00224C  26D9               	addwf	fsr2l,f,c
 14523   00224E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14524   002250  22DA               	addwfc	fsr2h,f,c
 14525   002252  0100               	movlb	0	; () banked
 14526   002254  51BD               	movf	_nn& (0+255),w,b
 14527   002256  18DE               	xorwf	postinc2,w,c
 14528   002258  A4D8               	btfss	status,2,c
 14529   00225A  D003               	goto	l24392
 14530   00225C                     u25920:
 14531                           
 14532                           ;../../VLCBlib_PIC/event_teach_large.c: 387:                 mode_flags |= 1;
 14533   00225C  0101               	movlb	1	; () banked
 14534   00225E  8166               	bsf	_mode_flags& (0+255),0,b
 14535                           
 14536                           ;../../VLCBlib_PIC/event_teach_large.c: 388:             } else {
 14537   002260  D7E3               	goto	u25900
 14538   002262                     l24392:
 14539                           
 14540                           ;../../VLCBlib_PIC/event_teach_large.c: 389:                 mode_flags &= ~1;
 14541   002262  0101               	movlb	1	; () banked
 14542   002264  9166               	bcf	_mode_flags& (0+255),0,b
 14543   002266  D7E0               	goto	u25900
 14544   002268                     l24398:
 14545                           
 14546                           ; BSR set to: 2
 14547                           ;../../VLCBlib_PIC/event_teach_large.c: 394:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14548   002268  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14549   00226C  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14550   002270  0E04               	movlw	4
 14551   002272  0101               	movlb	1	; () banked
 14552   002274  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14553   002276  0E00               	movlw	0
 14554   002278  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14555   00227A  EC70  F059         	call	_teachCheckLen	;wreg free
 14556   00227E  06E8               	decf	wreg,f,c
 14557   002280  B4D8               	btfsc	status,2,c
 14558   002282  D7D2               	goto	u25900
 14559                           
 14560                           ;../../VLCBlib_PIC/event_teach_large.c: 395:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14561   002284  0101               	movlb	1	; () banked
 14562   002286  EE20 F002          	lfsr	2,2
 14563   00228A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14564   00228C  26D9               	addwf	fsr2l,f,c
 14565   00228E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14566   002290  22DA               	addwfc	fsr2h,f,c
 14567   002292  50DE               	movf	postinc2,w,c
 14568   002294  0100               	movlb	0	; () banked
 14569   002296  19BE               	xorwf	(_nn+1)& (0+255),w,b
 14570   002298  A4D8               	btfss	status,2,c
 14571   00229A  D022               	goto	l24426
 14572                           
 14573                           ; BSR set to: 0
 14574   00229C  0101               	movlb	1	; () banked
 14575   00229E  EE20 F003          	lfsr	2,3
 14576   0022A2  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14577   0022A4  26D9               	addwf	fsr2l,f,c
 14578   0022A6  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14579   0022A8  22DA               	addwfc	fsr2h,f,c
 14580   0022AA  0100               	movlb	0	; () banked
 14581   0022AC  51BD               	movf	_nn& (0+255),w,b
 14582   0022AE  18DE               	xorwf	postinc2,w,c
 14583   0022B0  A4D8               	btfss	status,2,c
 14584   0022B2  D016               	goto	l24426
 14585                           
 14586                           ; BSR set to: 0
 14587                           ;../../VLCBlib_PIC/event_teach_large.c: 396:                 if (m->bytes[2] == MODE_LEA
      +                          RN_ON) {
 14588   0022B4  0101               	movlb	1	; () banked
 14589   0022B6  EE20 F004          	lfsr	2,4
 14590   0022BA  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14591   0022BC  26D9               	addwf	fsr2l,f,c
 14592   0022BE  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14593   0022C0  22DA               	addwfc	fsr2h,f,c
 14594   0022C2  0E08               	movlw	8
 14595   0022C4  18DE               	xorwf	postinc2,w,c
 14596   0022C6  B4D8               	btfsc	status,2,c
 14597   0022C8  D7C9               	goto	u25920
 14598                           
 14599                           ; BSR set to: 1
 14600   0022CA  EE20 F004          	lfsr	2,4
 14601   0022CE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14602   0022D0  26D9               	addwf	fsr2l,f,c
 14603   0022D2  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14604   0022D4  22DA               	addwfc	fsr2h,f,c
 14605   0022D6  0E09               	movlw	9
 14606   0022D8  18DE               	xorwf	postinc2,w,c
 14607   0022DA  B4D8               	btfsc	status,2,c
 14608   0022DC  D7C2               	goto	l24392
 14609   0022DE  D002               	goto	l24428
 14610   0022E0                     l24426:
 14611                           
 14612                           ; BSR set to: 0
 14613                           ;../../VLCBlib_PIC/event_teach_large.c: 407:                 mode_flags &= ~1;
 14614   0022E0  0101               	movlb	1	; () banked
 14615   0022E2  9166               	bcf	_mode_flags& (0+255),0,b
 14616   0022E4                     l24428:
 14617                           
 14618                           ;../../VLCBlib_PIC/event_teach_large.c: 409:             return NOT_PROCESSED;
 14619   0022E4  0E00               	movlw	0
 14620   0022E6  0012               	return	
 14621   0022E8                     l24432:
 14622                           
 14623                           ; BSR set to: 2
 14624                           ;../../VLCBlib_PIC/event_teach_large.c: 413:             if (teachCheckLen(m, 7, 1) == P
      +                          ROCESSED) {
 14625   0022E8  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14626   0022EC  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14627   0022F0  0E07               	movlw	7
 14628   0022F2  0101               	movlb	1	; () banked
 14629   0022F4  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14630   0022F6  0E01               	movlw	1
 14631   0022F8  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14632   0022FA  EC70  F059         	call	_teachCheckLen	;wreg free
 14633   0022FE  06E8               	decf	wreg,f,c
 14634   002300  A4D8               	btfss	status,2,c
 14635   002302  D00B               	goto	l2737
 14636                           
 14637                           ;../../VLCBlib_PIC/event_teach_large.c: 414:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 14638   002304  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 14639   002308  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 14640   00230C  0E01               	movlw	1
 14641   00230E  0100               	movlb	0	; () banked
 14642   002310  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14643   002312  0E6F               	movlw	111
 14644   002314  EC3F  F060         	call	_sendMessage3
 14645   002318  D787               	goto	u25900
 14646   00231A                     l2737:
 14647                           
 14648                           ;../../VLCBlib_PIC/event_teach_large.c: 418:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14649   00231A  0101               	movlb	1	; () banked
 14650   00231C  A166               	btfss	_mode_flags& (0+255),0,b
 14651   00231E  D784               	goto	u25900
 14652                           
 14653                           ; BSR set to: 1
 14654                           ;../../VLCBlib_PIC/event_teach_large.c: 420:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5
      +                          ]);
 14655   002320  EE20 F003          	lfsr	2,3
 14656   002324  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14657   002326  26D9               	addwf	fsr2l,f,c
 14658   002328  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14659   00232A  22DA               	addwfc	fsr2h,f,c
 14660   00232C  50DF               	movf	indf2,w,c
 14661   00232E  0102               	movlb	2	; () banked
 14662   002330  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14663   002332  0101               	movlb	1	; () banked
 14664   002334  EE20 F002          	lfsr	2,2
 14665   002338  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14666   00233A  26D9               	addwf	fsr2l,f,c
 14667   00233C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14668   00233E  22DA               	addwfc	fsr2h,f,c
 14669   002340  50DF               	movf	indf2,w,c
 14670   002342  0102               	movlb	2	; () banked
 14671   002344  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14672   002346  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14673   002348  0101               	movlb	1	; () banked
 14674   00234A  6FEE               	movwf	doEvlrn@nodeNumber& (0+255),b
 14675   00234C  C2CD  F1EF         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14676   002350  EE20 F005          	lfsr	2,5
 14677   002354  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14678   002356  26D9               	addwf	fsr2l,f,c
 14679   002358  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14680   00235A  22DA               	addwfc	fsr2h,f,c
 14681   00235C  50DF               	movf	indf2,w,c
 14682   00235E  0102               	movlb	2	; () banked
 14683   002360  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14684   002362  0101               	movlb	1	; () banked
 14685   002364  EE20 F004          	lfsr	2,4
 14686   002368  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14687   00236A  26D9               	addwf	fsr2l,f,c
 14688   00236C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14689   00236E  22DA               	addwfc	fsr2h,f,c
 14690   002370  50DF               	movf	indf2,w,c
 14691   002372  0102               	movlb	2	; () banked
 14692   002374  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14693   002376  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14694   002378  0101               	movlb	1	; () banked
 14695   00237A  6FF0               	movwf	doEvlrn@eventNumber& (0+255),b
 14696   00237C  C2D0  F1F1         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14697   002380  EE20 F006          	lfsr	2,6
 14698   002384  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14699   002386  26D9               	addwf	fsr2l,f,c
 14700   002388  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14701   00238A  22DA               	addwfc	fsr2h,f,c
 14702   00238C  50DF               	movf	indf2,w,c
 14703   00238E  6FF2               	movwf	doEvlrn@evNum& (0+255),b
 14704   002390  EE20 F007          	lfsr	2,7
 14705   002394  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14706   002396  26D9               	addwf	fsr2l,f,c
 14707   002398  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14708   00239A  22DA               	addwfc	fsr2h,f,c
 14709   00239C  50DF               	movf	indf2,w,c
 14710   00239E  6FF3               	movwf	doEvlrn@evVal& (0+255),b
 14711   0023A0  ECFA  F048         	call	_doEvlrn	;wreg free
 14712   0023A4  D741               	goto	u25900
 14713   0023A6                     l24450:
 14714                           
 14715                           ; BSR set to: 2
 14716                           ;../../VLCBlib_PIC/event_teach_large.c: 423:             if (teachCheckLen(m, 5, 1) == P
      +                          ROCESSED) return PROCESSED;
 14717   0023A6  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14718   0023AA  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14719   0023AE  0E05               	movlw	5
 14720   0023B0  0101               	movlb	1	; () banked
 14721   0023B2  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14722   0023B4  0E01               	movlw	1
 14723   0023B6  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14724   0023B8  EC70  F059         	call	_teachCheckLen	;wreg free
 14725   0023BC  06E8               	decf	wreg,f,c
 14726   0023BE  B4D8               	btfsc	status,2,c
 14727   0023C0  D733               	goto	u25900
 14728                           
 14729                           ;../../VLCBlib_PIC/event_teach_large.c: 424:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14730   0023C2  0101               	movlb	1	; () banked
 14731   0023C4  A166               	btfss	_mode_flags& (0+255),0,b
 14732   0023C6  D730               	goto	u25900
 14733                           
 14734                           ; BSR set to: 1
 14735                           ;../../VLCBlib_PIC/event_teach_large.c: 426:             doEvuln((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14736   0023C8  EE20 F003          	lfsr	2,3
 14737   0023CC  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14738   0023CE  26D9               	addwf	fsr2l,f,c
 14739   0023D0  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14740   0023D2  22DA               	addwfc	fsr2h,f,c
 14741   0023D4  50DF               	movf	indf2,w,c
 14742   0023D6  0102               	movlb	2	; () banked
 14743   0023D8  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14744   0023DA  0101               	movlb	1	; () banked
 14745   0023DC  EE20 F002          	lfsr	2,2
 14746   0023E0  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14747   0023E2  26D9               	addwf	fsr2l,f,c
 14748   0023E4  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14749   0023E6  22DA               	addwfc	fsr2h,f,c
 14750   0023E8  50DF               	movf	indf2,w,c
 14751   0023EA  0102               	movlb	2	; () banked
 14752   0023EC  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14753   0023EE  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14754   0023F0  0101               	movlb	1	; () banked
 14755   0023F2  6FCE               	movwf	doEvuln@nodeNumber& (0+255),b
 14756   0023F4  C2CD  F1CF         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14757   0023F8  EE20 F005          	lfsr	2,5
 14758   0023FC  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14759   0023FE  26D9               	addwf	fsr2l,f,c
 14760   002400  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14761   002402  22DA               	addwfc	fsr2h,f,c
 14762   002404  50DF               	movf	indf2,w,c
 14763   002406  0102               	movlb	2	; () banked
 14764   002408  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14765   00240A  0101               	movlb	1	; () banked
 14766   00240C  EE20 F004          	lfsr	2,4
 14767   002410  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14768   002412  26D9               	addwf	fsr2l,f,c
 14769   002414  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14770   002416  22DA               	addwfc	fsr2h,f,c
 14771   002418  50DF               	movf	indf2,w,c
 14772   00241A  0102               	movlb	2	; () banked
 14773   00241C  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14774   00241E  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14775   002420  0101               	movlb	1	; () banked
 14776   002422  6FD0               	movwf	doEvuln@eventNumber& (0+255),b
 14777   002424  C2D0  F1D1         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14778   002428  EC5E  F055         	call	_doEvuln	;wreg free
 14779   00242C  D6FD               	goto	u25900
 14780   00242E                     l24466:
 14781                           
 14782                           ; BSR set to: 2
 14783                           ;../../VLCBlib_PIC/event_teach_large.c: 429:             if (teachCheckLen(m, 6, 1) == P
      +                          ROCESSED) return PROCESSED;
 14784   00242E  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14785   002432  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14786   002436  0E06               	movlw	6
 14787   002438  0101               	movlb	1	; () banked
 14788   00243A  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14789   00243C  0E01               	movlw	1
 14790   00243E  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14791   002440  EC70  F059         	call	_teachCheckLen	;wreg free
 14792   002444  06E8               	decf	wreg,f,c
 14793   002446  B4D8               	btfsc	status,2,c
 14794   002448  D6EF               	goto	u25900
 14795                           
 14796                           ;../../VLCBlib_PIC/event_teach_large.c: 430:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14797   00244A  0101               	movlb	1	; () banked
 14798   00244C  A166               	btfss	_mode_flags& (0+255),0,b
 14799   00244E  D6EC               	goto	u25900
 14800                           
 14801                           ; BSR set to: 1
 14802                           ;../../VLCBlib_PIC/event_teach_large.c: 432:             doReqev((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14803   002450  EE20 F003          	lfsr	2,3
 14804   002454  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14805   002456  26D9               	addwf	fsr2l,f,c
 14806   002458  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14807   00245A  22DA               	addwfc	fsr2h,f,c
 14808   00245C  50DF               	movf	indf2,w,c
 14809   00245E  0102               	movlb	2	; () banked
 14810   002460  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14811   002462  0101               	movlb	1	; () banked
 14812   002464  EE20 F002          	lfsr	2,2
 14813   002468  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14814   00246A  26D9               	addwf	fsr2l,f,c
 14815   00246C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14816   00246E  22DA               	addwfc	fsr2h,f,c
 14817   002470  50DF               	movf	indf2,w,c
 14818   002472  0102               	movlb	2	; () banked
 14819   002474  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14820   002476  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14821   002478  0101               	movlb	1	; () banked
 14822   00247A  6FC8               	movwf	doReqev@nodeNumber& (0+255),b
 14823   00247C  C2CD  F1C9         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14824   002480  EE20 F005          	lfsr	2,5
 14825   002484  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14826   002486  26D9               	addwf	fsr2l,f,c
 14827   002488  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14828   00248A  22DA               	addwfc	fsr2h,f,c
 14829   00248C  50DF               	movf	indf2,w,c
 14830   00248E  0102               	movlb	2	; () banked
 14831   002490  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14832   002492  0101               	movlb	1	; () banked
 14833   002494  EE20 F004          	lfsr	2,4
 14834   002498  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14835   00249A  26D9               	addwf	fsr2l,f,c
 14836   00249C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14837   00249E  22DA               	addwfc	fsr2h,f,c
 14838   0024A0  50DF               	movf	indf2,w,c
 14839   0024A2  0102               	movlb	2	; () banked
 14840   0024A4  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14841   0024A6  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14842   0024A8  0101               	movlb	1	; () banked
 14843   0024AA  6FCA               	movwf	doReqev@eventNumber& (0+255),b
 14844   0024AC  C2D0  F1CB         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14845   0024B0  EE20 F006          	lfsr	2,6
 14846   0024B4  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14847   0024B6  26D9               	addwf	fsr2l,f,c
 14848   0024B8  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14849   0024BA  22DA               	addwfc	fsr2h,f,c
 14850   0024BC  50DF               	movf	indf2,w,c
 14851   0024BE  6FCC               	movwf	doReqev@evNum& (0+255),b
 14852   0024C0  EC5F  F03D         	call	_doReqev	;wreg free
 14853   0024C4  D6B1               	goto	u25900
 14854   0024C6                     l24482:
 14855                           
 14856                           ; BSR set to: 2
 14857                           ;../../VLCBlib_PIC/event_teach_large.c: 436:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14858   0024C6  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14859   0024CA  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14860   0024CE  0E03               	movlw	3
 14861   0024D0  0101               	movlb	1	; () banked
 14862   0024D2  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14863   0024D4  0E00               	movlw	0
 14864   0024D6  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14865   0024D8  EC70  F059         	call	_teachCheckLen	;wreg free
 14866   0024DC  06E8               	decf	wreg,f,c
 14867   0024DE  B4D8               	btfsc	status,2,c
 14868   0024E0  D6A3               	goto	u25900
 14869                           
 14870                           ;../../VLCBlib_PIC/event_teach_large.c: 437:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14871   0024E2  0101               	movlb	1	; () banked
 14872   0024E4  EE20 F002          	lfsr	2,2
 14873   0024E8  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14874   0024EA  26D9               	addwf	fsr2l,f,c
 14875   0024EC  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14876   0024EE  22DA               	addwfc	fsr2h,f,c
 14877   0024F0  50DE               	movf	postinc2,w,c
 14878   0024F2  0100               	movlb	0	; () banked
 14879   0024F4  19BE               	xorwf	(_nn+1)& (0+255),w,b
 14880   0024F6  A4D8               	btfss	status,2,c
 14881   0024F8  D697               	goto	u25900
 14882                           
 14883                           ; BSR set to: 0
 14884   0024FA  0101               	movlb	1	; () banked
 14885   0024FC  EE20 F003          	lfsr	2,3
 14886   002500  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14887   002502  26D9               	addwf	fsr2l,f,c
 14888   002504  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14889   002506  22DA               	addwfc	fsr2h,f,c
 14890   002508  0100               	movlb	0	; () banked
 14891   00250A  51BD               	movf	_nn& (0+255),w,b
 14892   00250C  18DE               	xorwf	postinc2,w,c
 14893   00250E  A4D8               	btfss	status,2,c
 14894   002510  D68B               	goto	u25900
 14895   002512  D6A7               	goto	l24392
 14896   002514                     l24502:
 14897                           
 14898                           ; BSR set to: 2
 14899                           ;../../VLCBlib_PIC/event_teach_large.c: 442:             if (teachCheckLen(m, 3, 1) == P
      +                          ROCESSED) return PROCESSED;
 14900   002514  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14901   002518  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14902   00251C  0E03               	movlw	3
 14903   00251E  0101               	movlb	1	; () banked
 14904   002520  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14905   002522  0E01               	movlw	1
 14906   002524  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14907   002526  EC70  F059         	call	_teachCheckLen	;wreg free
 14908   00252A  06E8               	decf	wreg,f,c
 14909   00252C  B4D8               	btfsc	status,2,c
 14910   00252E  D67C               	goto	u25900
 14911                           
 14912                           ;../../VLCBlib_PIC/event_teach_large.c: 443:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14913   002530  0101               	movlb	1	; () banked
 14914   002532  EE20 F002          	lfsr	2,2
 14915   002536  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14916   002538  26D9               	addwf	fsr2l,f,c
 14917   00253A  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14918   00253C  22DA               	addwfc	fsr2h,f,c
 14919   00253E  50DE               	movf	postinc2,w,c
 14920   002540  0100               	movlb	0	; () banked
 14921   002542  19BE               	xorwf	(_nn+1)& (0+255),w,b
 14922   002544  A4D8               	btfss	status,2,c
 14923   002546  D670               	goto	u25900
 14924                           
 14925                           ; BSR set to: 0
 14926   002548  0101               	movlb	1	; () banked
 14927   00254A  EE20 F003          	lfsr	2,3
 14928   00254E  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14929   002550  26D9               	addwf	fsr2l,f,c
 14930   002552  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14931   002554  22DA               	addwfc	fsr2h,f,c
 14932   002556  0100               	movlb	0	; () banked
 14933   002558  51BD               	movf	_nn& (0+255),w,b
 14934   00255A  18DE               	xorwf	postinc2,w,c
 14935   00255C  A4D8               	btfss	status,2,c
 14936   00255E  D664               	goto	u25900
 14937                           
 14938                           ; BSR set to: 0
 14939                           ;../../VLCBlib_PIC/event_teach_large.c: 445:             if (! (mode_flags & 1)) {
 14940   002560  0101               	movlb	1	; () banked
 14941   002562  B166               	btfsc	_mode_flags& (0+255),0,b
 14942   002564  D019               	goto	l24522
 14943                           
 14944                           ; BSR set to: 1
 14945                           ;../../VLCBlib_PIC/event_teach_large.c: 446:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14946   002566  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 14947   00256A  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 14948   00256E  0E02               	movlw	2
 14949   002570  0100               	movlb	0	; () banked
 14950   002572  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14951   002574  0E6F               	movlw	111
 14952   002576  EC3F  F060         	call	_sendMessage3
 14953                           
 14954                           ;../../VLCBlib_PIC/event_teach_large.c: 448:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 14955   00257A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 14956   00257E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 14957   002582  0E55               	movlw	85
 14958   002584  0101               	movlb	1	; () banked
 14959   002586  6FC4               	movwf	sendMessage5@data3& (0+255),b
 14960   002588  0E04               	movlw	4
 14961   00258A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 14962   00258C  0E02               	movlw	2
 14963   00258E  6FC6               	movwf	sendMessage5@data5& (0+255),b
 14964   002590  0EAF               	movlw	175
 14965   002592  ECE1  F05F         	call	_sendMessage5
 14966   002596  D648               	goto	u25900
 14967   002598                     l24522:
 14968                           
 14969                           ; BSR set to: 1
 14970                           ;../../VLCBlib_PIC/event_teach_large.c: 453:             doNnclr();
 14971   002598  EC81  F05F         	call	_doNnclr	;wreg free
 14972                           
 14973                           ;../../VLCBlib_PIC/event_teach_large.c: 454:             break;
 14974   00259C  D6A3               	goto	l24428
 14975   00259E                     l24524:
 14976                           
 14977                           ; BSR set to: 2
 14978                           ;../../VLCBlib_PIC/event_teach_large.c: 456:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14979   00259E  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14980   0025A2  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14981   0025A6  0E03               	movlw	3
 14982   0025A8  0101               	movlb	1	; () banked
 14983   0025AA  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14984   0025AC  0E00               	movlw	0
 14985   0025AE  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14986   0025B0  EC70  F059         	call	_teachCheckLen	;wreg free
 14987   0025B4  06E8               	decf	wreg,f,c
 14988   0025B6  B4D8               	btfsc	status,2,c
 14989   0025B8  D637               	goto	u25900
 14990                           
 14991                           ;../../VLCBlib_PIC/event_teach_large.c: 457:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14992   0025BA  0101               	movlb	1	; () banked
 14993   0025BC  EE20 F002          	lfsr	2,2
 14994   0025C0  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14995   0025C2  26D9               	addwf	fsr2l,f,c
 14996   0025C4  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14997   0025C6  22DA               	addwfc	fsr2h,f,c
 14998   0025C8  50DE               	movf	postinc2,w,c
 14999   0025CA  0100               	movlb	0	; () banked
 15000   0025CC  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15001   0025CE  A4D8               	btfss	status,2,c
 15002   0025D0  D62B               	goto	u25900
 15003                           
 15004                           ; BSR set to: 0
 15005   0025D2  0101               	movlb	1	; () banked
 15006   0025D4  EE20 F003          	lfsr	2,3
 15007   0025D8  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15008   0025DA  26D9               	addwf	fsr2l,f,c
 15009   0025DC  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15010   0025DE  22DA               	addwfc	fsr2h,f,c
 15011   0025E0  0100               	movlb	0	; () banked
 15012   0025E2  51BD               	movf	_nn& (0+255),w,b
 15013   0025E4  18DE               	xorwf	postinc2,w,c
 15014   0025E6  A4D8               	btfss	status,2,c
 15015   0025E8  D61F               	goto	u25900
 15016                           
 15017                           ; BSR set to: 0
 15018                           ;../../VLCBlib_PIC/event_teach_large.c: 459:             doNerd();
 15019   0025EA  EC62  F062         	call	_doNerd	;wreg free
 15020   0025EE  D61C               	goto	u25900
 15021   0025F0                     l24544:
 15022                           
 15023                           ; BSR set to: 2
 15024                           ;../../VLCBlib_PIC/event_teach_large.c: 462:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15025   0025F0  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15026   0025F4  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15027   0025F8  0E03               	movlw	3
 15028   0025FA  0101               	movlb	1	; () banked
 15029   0025FC  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15030   0025FE  0E00               	movlw	0
 15031   002600  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15032   002602  EC70  F059         	call	_teachCheckLen	;wreg free
 15033   002606  06E8               	decf	wreg,f,c
 15034   002608  B4D8               	btfsc	status,2,c
 15035   00260A  D60E               	goto	u25900
 15036                           
 15037                           ;../../VLCBlib_PIC/event_teach_large.c: 463:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15038   00260C  0101               	movlb	1	; () banked
 15039   00260E  EE20 F002          	lfsr	2,2
 15040   002612  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15041   002614  26D9               	addwf	fsr2l,f,c
 15042   002616  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15043   002618  22DA               	addwfc	fsr2h,f,c
 15044   00261A  50DE               	movf	postinc2,w,c
 15045   00261C  0100               	movlb	0	; () banked
 15046   00261E  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15047   002620  A4D8               	btfss	status,2,c
 15048   002622  D602               	goto	u25900
 15049                           
 15050                           ; BSR set to: 0
 15051   002624  0101               	movlb	1	; () banked
 15052   002626  EE20 F003          	lfsr	2,3
 15053   00262A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15054   00262C  26D9               	addwf	fsr2l,f,c
 15055   00262E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15056   002630  22DA               	addwfc	fsr2h,f,c
 15057   002632  0100               	movlb	0	; () banked
 15058   002634  51BD               	movf	_nn& (0+255),w,b
 15059   002636  18DE               	xorwf	postinc2,w,c
 15060   002638  A4D8               	btfss	status,2,c
 15061   00263A  D5F6               	goto	u25900
 15062                           
 15063                           ; BSR set to: 0
 15064                           ;../../VLCBlib_PIC/event_teach_large.c: 465:             doNnevn();
 15065   00263C  EC0E  F058         	call	_doNnevn	;wreg free
 15066   002640  D5F3               	goto	u25900
 15067   002642                     l24564:
 15068                           
 15069                           ; BSR set to: 2
 15070                           ;../../VLCBlib_PIC/event_teach_large.c: 468:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15071   002642  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15072   002646  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15073   00264A  0E03               	movlw	3
 15074   00264C  0101               	movlb	1	; () banked
 15075   00264E  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15076   002650  0E00               	movlw	0
 15077   002652  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15078   002654  EC70  F059         	call	_teachCheckLen	;wreg free
 15079   002658  06E8               	decf	wreg,f,c
 15080   00265A  B4D8               	btfsc	status,2,c
 15081   00265C  D5E5               	goto	u25900
 15082                           
 15083                           ;../../VLCBlib_PIC/event_teach_large.c: 469:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15084   00265E  0101               	movlb	1	; () banked
 15085   002660  EE20 F002          	lfsr	2,2
 15086   002664  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15087   002666  26D9               	addwf	fsr2l,f,c
 15088   002668  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15089   00266A  22DA               	addwfc	fsr2h,f,c
 15090   00266C  50DE               	movf	postinc2,w,c
 15091   00266E  0100               	movlb	0	; () banked
 15092   002670  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15093   002672  A4D8               	btfss	status,2,c
 15094   002674  D5D9               	goto	u25900
 15095                           
 15096                           ; BSR set to: 0
 15097   002676  0101               	movlb	1	; () banked
 15098   002678  EE20 F003          	lfsr	2,3
 15099   00267C  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15100   00267E  26D9               	addwf	fsr2l,f,c
 15101   002680  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15102   002682  22DA               	addwfc	fsr2h,f,c
 15103   002684  0100               	movlb	0	; () banked
 15104   002686  51BD               	movf	_nn& (0+255),w,b
 15105   002688  18DE               	xorwf	postinc2,w,c
 15106   00268A  A4D8               	btfss	status,2,c
 15107   00268C  D5CD               	goto	u25900
 15108                           
 15109                           ; BSR set to: 0
 15110                           ;../../VLCBlib_PIC/event_teach_large.c: 471:             doRqevn();
 15111   00268E  ECE6  F05E         	call	_doRqevn	;wreg free
 15112   002692  D5CA               	goto	u25900
 15113   002694                     l24584:
 15114                           
 15115                           ; BSR set to: 2
 15116                           ;../../VLCBlib_PIC/event_teach_large.c: 474:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 15117   002694  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15118   002698  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15119   00269C  0E04               	movlw	4
 15120   00269E  0101               	movlb	1	; () banked
 15121   0026A0  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15122   0026A2  0E00               	movlw	0
 15123   0026A4  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15124   0026A6  EC70  F059         	call	_teachCheckLen	;wreg free
 15125   0026AA  06E8               	decf	wreg,f,c
 15126   0026AC  B4D8               	btfsc	status,2,c
 15127   0026AE  D5BC               	goto	u25900
 15128                           
 15129                           ;../../VLCBlib_PIC/event_teach_large.c: 475:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15130   0026B0  0101               	movlb	1	; () banked
 15131   0026B2  EE20 F002          	lfsr	2,2
 15132   0026B6  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15133   0026B8  26D9               	addwf	fsr2l,f,c
 15134   0026BA  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15135   0026BC  22DA               	addwfc	fsr2h,f,c
 15136   0026BE  50DE               	movf	postinc2,w,c
 15137   0026C0  0100               	movlb	0	; () banked
 15138   0026C2  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15139   0026C4  A4D8               	btfss	status,2,c
 15140   0026C6  D5B0               	goto	u25900
 15141                           
 15142                           ; BSR set to: 0
 15143   0026C8  0101               	movlb	1	; () banked
 15144   0026CA  EE20 F003          	lfsr	2,3
 15145   0026CE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15146   0026D0  26D9               	addwf	fsr2l,f,c
 15147   0026D2  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15148   0026D4  22DA               	addwfc	fsr2h,f,c
 15149   0026D6  0100               	movlb	0	; () banked
 15150   0026D8  51BD               	movf	_nn& (0+255),w,b
 15151   0026DA  18DE               	xorwf	postinc2,w,c
 15152   0026DC  A4D8               	btfss	status,2,c
 15153   0026DE  D5A4               	goto	u25900
 15154                           
 15155                           ; BSR set to: 0
 15156                           ;../../VLCBlib_PIC/event_teach_large.c: 477:             doNenrd(m->bytes[2]);
 15157   0026E0  0101               	movlb	1	; () banked
 15158   0026E2  EE20 F004          	lfsr	2,4
 15159   0026E6  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15160   0026E8  26D9               	addwf	fsr2l,f,c
 15161   0026EA  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15162   0026EC  22DA               	addwfc	fsr2h,f,c
 15163   0026EE  50DF               	movf	indf2,w,c
 15164   0026F0  EC6A  F057         	call	_doNenrd
 15165   0026F4  D599               	goto	u25900
 15166   0026F6                     l24604:
 15167                           
 15168                           ; BSR set to: 2
 15169                           ;../../VLCBlib_PIC/event_teach_large.c: 480:             if (teachCheckLen(m, 5, 0) == P
      +                          ROCESSED) return PROCESSED;
 15170   0026F6  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15171   0026FA  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15172   0026FE  0E05               	movlw	5
 15173   002700  0101               	movlb	1	; () banked
 15174   002702  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15175   002704  0E00               	movlw	0
 15176   002706  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15177   002708  EC70  F059         	call	_teachCheckLen	;wreg free
 15178   00270C  06E8               	decf	wreg,f,c
 15179   00270E  B4D8               	btfsc	status,2,c
 15180   002710  D58B               	goto	u25900
 15181                           
 15182                           ;../../VLCBlib_PIC/event_teach_large.c: 481:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15183   002712  0101               	movlb	1	; () banked
 15184   002714  EE20 F002          	lfsr	2,2
 15185   002718  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15186   00271A  26D9               	addwf	fsr2l,f,c
 15187   00271C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15188   00271E  22DA               	addwfc	fsr2h,f,c
 15189   002720  50DE               	movf	postinc2,w,c
 15190   002722  0100               	movlb	0	; () banked
 15191   002724  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15192   002726  A4D8               	btfss	status,2,c
 15193   002728  D57F               	goto	u25900
 15194                           
 15195                           ; BSR set to: 0
 15196   00272A  0101               	movlb	1	; () banked
 15197   00272C  EE20 F003          	lfsr	2,3
 15198   002730  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15199   002732  26D9               	addwf	fsr2l,f,c
 15200   002734  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15201   002736  22DA               	addwfc	fsr2h,f,c
 15202   002738  0100               	movlb	0	; () banked
 15203   00273A  51BD               	movf	_nn& (0+255),w,b
 15204   00273C  18DE               	xorwf	postinc2,w,c
 15205   00273E  A4D8               	btfss	status,2,c
 15206   002740  D573               	goto	u25900
 15207                           
 15208                           ; BSR set to: 0
 15209                           ;../../VLCBlib_PIC/event_teach_large.c: 483:             doReval(m->bytes[2], m->bytes[3
      +                          ]);
 15210   002742  0101               	movlb	1	; () banked
 15211   002744  EE20 F005          	lfsr	2,5
 15212   002748  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15213   00274A  26D9               	addwf	fsr2l,f,c
 15214   00274C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15215   00274E  22DA               	addwfc	fsr2h,f,c
 15216   002750  50DF               	movf	indf2,w,c
 15217   002752  6FC7               	movwf	doReval@evNum& (0+255),b
 15218   002754  EE20 F004          	lfsr	2,4
 15219   002758  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15220   00275A  26D9               	addwf	fsr2l,f,c
 15221   00275C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15222   00275E  22DA               	addwfc	fsr2h,f,c
 15223   002760  50DF               	movf	indf2,w,c
 15224   002762  EC20  F04A         	call	_doReval
 15225   002766  D560               	goto	u25900
 15226   002768                     l24624:
 15227                           
 15228                           ; BSR set to: 2
 15229                           ;../../VLCBlib_PIC/event_teach_large.c: 486:             if (teachCheckLen(m, 8, 1) == P
      +                          ROCESSED) return PROCESSED;
 15230   002768  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15231   00276C  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15232   002770  0E08               	movlw	8
 15233   002772  0101               	movlb	1	; () banked
 15234   002774  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15235   002776  0E01               	movlw	1
 15236   002778  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15237   00277A  EC70  F059         	call	_teachCheckLen	;wreg free
 15238   00277E  06E8               	decf	wreg,f,c
 15239   002780  B4D8               	btfsc	status,2,c
 15240   002782  D552               	goto	u25900
 15241                           
 15242                           ;../../VLCBlib_PIC/event_teach_large.c: 487:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15243   002784  0101               	movlb	1	; () banked
 15244   002786  EE20 F002          	lfsr	2,2
 15245   00278A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15246   00278C  26D9               	addwf	fsr2l,f,c
 15247   00278E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15248   002790  22DA               	addwfc	fsr2h,f,c
 15249   002792  50DE               	movf	postinc2,w,c
 15250   002794  0100               	movlb	0	; () banked
 15251   002796  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15252   002798  A4D8               	btfss	status,2,c
 15253   00279A  D546               	goto	u25900
 15254                           
 15255                           ; BSR set to: 0
 15256   00279C  0101               	movlb	1	; () banked
 15257   00279E  EE20 F003          	lfsr	2,3
 15258   0027A2  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15259   0027A4  26D9               	addwf	fsr2l,f,c
 15260   0027A6  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15261   0027A8  22DA               	addwfc	fsr2h,f,c
 15262   0027AA  0100               	movlb	0	; () banked
 15263   0027AC  51BD               	movf	_nn& (0+255),w,b
 15264   0027AE  18DE               	xorwf	postinc2,w,c
 15265   0027B0  A4D8               	btfss	status,2,c
 15266   0027B2  D53A               	goto	u25900
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;../../VLCBlib_PIC/event_teach_large.c: 489:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6
      +                          ]);
 15270   0027B4  0101               	movlb	1	; () banked
 15271   0027B6  EE20 F003          	lfsr	2,3
 15272   0027BA  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15273   0027BC  26D9               	addwf	fsr2l,f,c
 15274   0027BE  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15275   0027C0  22DA               	addwfc	fsr2h,f,c
 15276   0027C2  50DF               	movf	indf2,w,c
 15277   0027C4  0102               	movlb	2	; () banked
 15278   0027C6  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15279   0027C8  0101               	movlb	1	; () banked
 15280   0027CA  EE20 F002          	lfsr	2,2
 15281   0027CE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15282   0027D0  26D9               	addwf	fsr2l,f,c
 15283   0027D2  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15284   0027D4  22DA               	addwfc	fsr2h,f,c
 15285   0027D6  50DF               	movf	indf2,w,c
 15286   0027D8  0102               	movlb	2	; () banked
 15287   0027DA  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 15288   0027DC  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15289   0027DE  0101               	movlb	1	; () banked
 15290   0027E0  6FEE               	movwf	doEvlrn@nodeNumber& (0+255),b
 15291   0027E2  C2CD  F1EF         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 15292   0027E6  EE20 F005          	lfsr	2,5
 15293   0027EA  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15294   0027EC  26D9               	addwf	fsr2l,f,c
 15295   0027EE  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15296   0027F0  22DA               	addwfc	fsr2h,f,c
 15297   0027F2  50DF               	movf	indf2,w,c
 15298   0027F4  0102               	movlb	2	; () banked
 15299   0027F6  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 15300   0027F8  0101               	movlb	1	; () banked
 15301   0027FA  EE20 F004          	lfsr	2,4
 15302   0027FE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15303   002800  26D9               	addwf	fsr2l,f,c
 15304   002802  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15305   002804  22DA               	addwfc	fsr2h,f,c
 15306   002806  50DF               	movf	indf2,w,c
 15307   002808  0102               	movlb	2	; () banked
 15308   00280A  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 15309   00280C  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 15310   00280E  0101               	movlb	1	; () banked
 15311   002810  6FF0               	movwf	doEvlrn@eventNumber& (0+255),b
 15312   002812  C2D0  F1F1         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 15313   002816  EE20 F007          	lfsr	2,7
 15314   00281A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15315   00281C  26D9               	addwf	fsr2l,f,c
 15316   00281E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15317   002820  22DA               	addwfc	fsr2h,f,c
 15318   002822  50DF               	movf	indf2,w,c
 15319   002824  6FF2               	movwf	doEvlrn@evNum& (0+255),b
 15320   002826  EE20 F008          	lfsr	2,8
 15321   00282A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15322   00282C  26D9               	addwf	fsr2l,f,c
 15323   00282E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15324   002830  22DA               	addwfc	fsr2h,f,c
 15325   002832  50DF               	movf	indf2,w,c
 15326   002834  6FF3               	movwf	doEvlrn@evVal& (0+255),b
 15327   002836  ECFA  F048         	call	_doEvlrn	;wreg free
 15328   00283A  D4F6               	goto	u25900
 15329   00283C                     l24646:
 15330   00283C  0101               	movlb	1	; () banked
 15331   00283E  EE20 F001          	lfsr	2,1
 15332   002842  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15333   002844  26D9               	addwf	fsr2l,f,c
 15334   002846  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15335   002848  22DA               	addwfc	fsr2h,f,c
 15336   00284A  50DF               	movf	indf2,w,c
 15337   00284C  0102               	movlb	2	; () banked
 15338   00284E  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15339   002850  6BCD               	clrf	(??_teachProcessMessage+1)& (0+255),b
 15340                           
 15341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15342                           ; Switch size 1, requested type "simple"
 15343                           ; Number of cases is 1, Range of values is 0 to 0
 15344                           ; switch strategies available:
 15345                           ; Name         Instructions Cycles
 15346                           ; simple_byte            4     3 (average)
 15347                           ;	Chosen strategy is simple_byte
 15348   002852  51CD               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 15349   002854  0A00               	xorlw	0	; case 0
 15350   002856  A4D8               	btfss	status,2,c
 15351   002858  D545               	goto	l24428
 15352                           
 15353                           ; BSR set to: 2
 15354                           ; Switch size 1, requested type "simple"
 15355                           ; Number of cases is 13, Range of values is 83 to 245
 15356                           ; switch strategies available:
 15357                           ; Name         Instructions Cycles
 15358                           ; simple_byte           40    21 (average)
 15359                           ;	Chosen strategy is simple_byte
 15360   00285A  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15361   00285C  0A53               	xorlw	83	; case 83
 15362   00285E  B4D8               	btfsc	status,2,c
 15363   002860  D4D5               	goto	l24380
 15364   002862  0A07               	xorlw	7	; case 84
 15365   002864  B4D8               	btfsc	status,2,c
 15366   002866  D62F               	goto	l24482
 15367   002868  0A01               	xorlw	1	; case 85
 15368   00286A  B4D8               	btfsc	status,2,c
 15369   00286C  D653               	goto	l24502
 15370   00286E  0A03               	xorlw	3	; case 86
 15371   002870  B4D8               	btfsc	status,2,c
 15372   002872  D6BE               	goto	l24544
 15373   002874  0A01               	xorlw	1	; case 87
 15374   002876  B4D8               	btfsc	status,2,c
 15375   002878  D692               	goto	l24524
 15376   00287A  0A0F               	xorlw	15	; case 88
 15377   00287C  B4D8               	btfsc	status,2,c
 15378   00287E  D6E1               	goto	l24564
 15379   002880  0A2A               	xorlw	42	; case 114
 15380   002882  B4D8               	btfsc	status,2,c
 15381   002884  D707               	goto	l24584
 15382   002886  0A04               	xorlw	4	; case 118
 15383   002888  B4D8               	btfsc	status,2,c
 15384   00288A  D4EE               	goto	l24398
 15385   00288C  0AE3               	xorlw	227	; case 149
 15386   00288E  B4D8               	btfsc	status,2,c
 15387   002890  D58A               	goto	l24450
 15388   002892  0A09               	xorlw	9	; case 156
 15389   002894  B4D8               	btfsc	status,2,c
 15390   002896  D72F               	goto	l24604
 15391   002898  0A2E               	xorlw	46	; case 178
 15392   00289A  B4D8               	btfsc	status,2,c
 15393   00289C  D5C8               	goto	l24466
 15394   00289E  0A60               	xorlw	96	; case 210
 15395   0028A0  B4D8               	btfsc	status,2,c
 15396   0028A2  D522               	goto	l24432
 15397   0028A4  0A27               	xorlw	39	; case 245
 15398   0028A6  B4D8               	btfsc	status,2,c
 15399   0028A8  D75F               	goto	l24624
 15400   0028AA  D51C               	goto	l24428
 15401   0028AC                     __end_of_teachProcessMessage:
 15402                           	callstack 0
 15403                           
 15404 ;; *************** function _teachCheckLen *****************
 15405 ;; Defined at:
 15406 ;;		line 504 in file "../../VLCBlib_PIC/event_teach_large.c"
 15407 ;; Parameters:    Size  Location     Type
 15408 ;;  m               2   17[BANK1 ] PTR struct Message
 15409 ;;		 -> poll@m(9), 
 15410 ;;  needed          1   19[BANK1 ] unsigned char 
 15411 ;;  learn           1   20[BANK1 ] unsigned char 
 15412 ;; Auto vars:     Size  Location     Type
 15413 ;;		None
 15414 ;; Return value:  Size  Location     Type
 15415 ;;                  1    wreg      enum E12799
 15416 ;; Registers used:
 15417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15418 ;; Tracked objects:
 15419 ;;		On entry : 0/0
 15420 ;;		On exit  : 0/0
 15421 ;;		Unchanged: 0/0
 15422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15423 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15426 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15427 ;;Total ram usage:        5 bytes
 15428 ;; Hardware stack levels used: 1
 15429 ;; Hardware stack levels required when called: 18
 15430 ;; This function calls:
 15431 ;;		_checkLen
 15432 ;;		_sendMessage5
 15433 ;; This function is called by:
 15434 ;;		_teachProcessMessage
 15435 ;; This function uses a non-reentrant model
 15436 ;;
 15437                           
 15438                           	psect	text28
 15439   00B2E0                     __ptext28:
 15440                           	callstack 0
 15441   00B2E0                     _teachCheckLen:
 15442                           	callstack 10
 15443                           
 15444                           ;../../VLCBlib_PIC/event_teach_large.c: 505:     if (learn) {
 15445                           
 15446                           ;incstack = 0
 15447   00B2E0  0101               	movlb	1	; () banked
 15448   00B2E2  51CE               	movf	teachCheckLen@learn& (0+255),w,b
 15449   00B2E4  B4D8               	btfsc	status,2,c
 15450   00B2E6  D021               	goto	l22482
 15451                           
 15452                           ; BSR set to: 1
 15453                           ;../../VLCBlib_PIC/event_teach_large.c: 507:         if (m->len < needed) {
 15454   00B2E8  C1CB  FFD9         	movff	teachCheckLen@m,fsr2l
 15455   00B2EC  C1CC  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15456   00B2F0  51CD               	movf	teachCheckLen@needed& (0+255),w,b
 15457   00B2F2  5CDE               	subwf	postinc2,w,c
 15458   00B2F4  B0D8               	btfsc	status,0,c
 15459   00B2F6  D017               	goto	l22478
 15460                           
 15461                           ; BSR set to: 1
 15462                           ;../../VLCBlib_PIC/event_teach_large.c: 509:             if (mode_flags & 1) {
 15463   00B2F8  A166               	btfss	_mode_flags& (0+255),0,b
 15464   00B2FA  D013               	goto	l22474
 15465                           
 15466                           ; BSR set to: 1
 15467                           ;../../VLCBlib_PIC/event_teach_large.c: 512:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15468   00B2FC  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15469   00B300  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15470   00B304  EE20 F001          	lfsr	2,1
 15471   00B308  51CB               	movf	teachCheckLen@m& (0+255),w,b
 15472   00B30A  26D9               	addwf	fsr2l,f,c
 15473   00B30C  51CC               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15474   00B30E  22DA               	addwfc	fsr2h,f,c
 15475   00B310  50DF               	movf	indf2,w,c
 15476   00B312  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15477   00B314  0E04               	movlw	4
 15478   00B316  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15479   00B318  0E01               	movlw	1
 15480   00B31A  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15481   00B31C  0EAF               	movlw	175
 15482   00B31E  ECE1  F05F         	call	_sendMessage5
 15483   00B322                     l22474:
 15484                           
 15485                           ;../../VLCBlib_PIC/event_teach_large.c: 515:             return PROCESSED;
 15486   00B322  0E01               	movlw	1
 15487   00B324  0012               	return	
 15488   00B326                     l22478:
 15489                           
 15490                           ; BSR set to: 1
 15491                           ;../../VLCBlib_PIC/event_teach_large.c: 517:         return NOT_PROCESSED;
 15492   00B326  0E00               	movlw	0
 15493   00B328  0012               	return	
 15494   00B32A                     l22482:
 15495                           
 15496                           ; BSR set to: 1
 15497                           ;../../VLCBlib_PIC/event_teach_large.c: 519:     return checkLen(m, needed, SERVICE_ID_O
      +                          LD_TEACH);
 15498   00B32A  C1CB  F1C7         	movff	teachCheckLen@m,checkLen@m
 15499   00B32E  C1CC  F1C8         	movff	teachCheckLen@m+1,checkLen@m+1
 15500   00B332  C1CD  F1C9         	movff	teachCheckLen@needed,checkLen@needed
 15501   00B336  0E04               	movlw	4
 15502   00B338  6FCA               	movwf	checkLen@service& (0+255),b
 15503   00B33A  EC25  F054         	call	_checkLen	;wreg free
 15504   00B33E  0012               	return		;funcret
 15505   00B340                     __end_of_teachCheckLen:
 15506                           	callstack 0
 15507                           
 15508 ;; *************** function _doRqevn *****************
 15509 ;; Defined at:
 15510 ;;		line 649 in file "../../VLCBlib_PIC/event_teach_large.c"
 15511 ;; Parameters:    Size  Location     Type
 15512 ;;		None
 15513 ;; Auto vars:     Size  Location     Type
 15514 ;;  i               1   10[BANK1 ] unsigned char 
 15515 ;;  count           1    9[BANK1 ] unsigned char 
 15516 ;; Return value:  Size  Location     Type
 15517 ;;                  1    wreg      void 
 15518 ;; Registers used:
 15519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15520 ;; Tracked objects:
 15521 ;;		On entry : 0/0
 15522 ;;		On exit  : 0/0
 15523 ;;		Unchanged: 0/0
 15524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15526 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15528 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15529 ;;Total ram usage:        2 bytes
 15530 ;; Hardware stack levels used: 1
 15531 ;; Hardware stack levels required when called: 17
 15532 ;; This function calls:
 15533 ;;		_sendMessage3
 15534 ;;		_validStart
 15535 ;; This function is called by:
 15536 ;;		_teachProcessMessage
 15537 ;; This function uses a non-reentrant model
 15538 ;;
 15539                           
 15540                           	psect	text29
 15541   00BDCC                     __ptext29:
 15542                           	callstack 0
 15543   00BDCC                     _doRqevn:
 15544                           	callstack 11
 15545                           
 15546                           ;../../VLCBlib_PIC/event_teach_large.c: 651:     uint8_t count = 0;
 15547                           
 15548                           ;incstack = 0
 15549   00BDCC  0E00               	movlw	0
 15550   00BDCE  0101               	movlb	1	; () banked
 15551   00BDD0  6FC3               	movwf	doRqevn@count& (0+255),b
 15552                           
 15553                           ;../../VLCBlib_PIC/event_teach_large.c: 652:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 653:     for (i=0; i<255; i++) {
 15554   00BDD2  0E00               	movlw	0
 15555   00BDD4  6FC4               	movwf	doRqevn@i& (0+255),b
 15556   00BDD6                     l22586:
 15557                           
 15558                           ; BSR set to: 1
 15559                           ;../../VLCBlib_PIC/event_teach_large.c: 654:         if (validStart(i)) {
 15560   00BDD6  51C4               	movf	doRqevn@i& (0+255),w,b
 15561   00BDD8  EC39  F05C         	call	_validStart
 15562   00BDDC  0900               	iorlw	0
 15563   00BDDE  B4D8               	btfsc	status,2,c
 15564   00BDE0  D002               	goto	l2833
 15565                           
 15566                           ;../../VLCBlib_PIC/event_teach_large.c: 655:             count++;
 15567   00BDE2  0101               	movlb	1	; () banked
 15568   00BDE4  2BC3               	incf	doRqevn@count& (0+255),f,b
 15569   00BDE6                     l2833:
 15570                           
 15571                           ;../../VLCBlib_PIC/event_teach_large.c: 657:     }
 15572   00BDE6  0101               	movlb	1	; () banked
 15573   00BDE8  2BC4               	incf	doRqevn@i& (0+255),f,b
 15574                           
 15575                           ; BSR set to: 1
 15576   00BDEA  29C4               	incf	doRqevn@i& (0+255),w,b
 15577   00BDEC  A4D8               	btfss	status,2,c
 15578   00BDEE  D7F3               	goto	l22586
 15579                           
 15580                           ; BSR set to: 1
 15581                           ;../../VLCBlib_PIC/event_teach_large.c: 658:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15582   00BDF0  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15583   00BDF4  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15584   00BDF8  C1C3  F0A8         	movff	doRqevn@count,sendMessage3@data3
 15585   00BDFC  0E74               	movlw	116
 15586   00BDFE  EC3F  F060         	call	_sendMessage3
 15587   00BE02  0012               	return		;funcret
 15588   00BE04                     __end_of_doRqevn:
 15589                           	callstack 0
 15590                           
 15591 ;; *************** function _doReval *****************
 15592 ;; Defined at:
 15593 ;;		line 719 in file "../../VLCBlib_PIC/event_teach_large.c"
 15594 ;; Parameters:    Size  Location     Type
 15595 ;;  enNum           1    wreg     unsigned char 
 15596 ;;  evNum           1   13[BANK1 ] unsigned char 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;  enNum           1   16[BANK1 ] unsigned char 
 15599 ;;  evVal           2   17[BANK1 ] int 
 15600 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15601 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15602 ;; Return value:  Size  Location     Type
 15603 ;;                  1    wreg      void 
 15604 ;; Registers used:
 15605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15606 ;; Tracked objects:
 15607 ;;		On entry : 0/0
 15608 ;;		On exit  : 0/0
 15609 ;;		Unchanged: 0/0
 15610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15611 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15612 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15613 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15614 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15615 ;;Total ram usage:        7 bytes
 15616 ;; Hardware stack levels used: 1
 15617 ;; Hardware stack levels required when called: 17
 15618 ;; This function calls:
 15619 ;;		_evtIdxToTableIndex
 15620 ;;		_getEv
 15621 ;;		_numEv
 15622 ;;		_sendMessage3
 15623 ;;		_sendMessage5
 15624 ;;		_validStart
 15625 ;; This function is called by:
 15626 ;;		_teachProcessMessage
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           
 15630                           	psect	text30
 15631   009440                     __ptext30:
 15632                           	callstack 0
 15633   009440                     _doReval:
 15634                           	callstack 11
 15635                           
 15636                           ;incstack = 0
 15637                           ;doReval@enNum stored from wreg
 15638   009440  0101               	movlb	1	; () banked
 15639   009442  6FCA               	movwf	doReval@enNum& (0+255),b
 15640                           
 15641                           ;../../VLCBlib_PIC/event_teach_large.c: 722:     uint8_t evIndex;;../../VLCBlib_PIC/even
      +                          t_teach_large.c: 723:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15642   009444  0101               	movlb	1	; () banked
 15643   009446  51CA               	movf	doReval@enNum& (0+255),w,b
 15644   009448  ECFF  F062         	call	_evtIdxToTableIndex
 15645   00944C  0101               	movlb	1	; () banked
 15646   00944E  6FCD               	movwf	doReval@tableIndex& (0+255),b
 15647                           
 15648                           ; BSR set to: 1
 15649                           ;../../VLCBlib_PIC/event_teach_large.c: 725:     if (evNum > 20) {
 15650   009450  0E14               	movlw	20
 15651   009452  65C7               	cpfsgt	doReval@evNum& (0+255),b
 15652   009454  D00B               	goto	l22614
 15653                           
 15654                           ; BSR set to: 1
 15655                           ;../../VLCBlib_PIC/event_teach_large.c: 726:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15656   009456  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15657   00945A  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15658   00945E  0E06               	movlw	6
 15659   009460  0100               	movlb	0	; () banked
 15660   009462  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15661   009464  0E6F               	movlw	111
 15662   009466  EC3F  F060         	call	_sendMessage3
 15663   00946A  0012               	return	
 15664   00946C                     l22614:
 15665                           
 15666                           ; BSR set to: 1
 15667                           ;../../VLCBlib_PIC/event_teach_large.c: 730:     evIndex = evNum-1U;
 15668   00946C  05C7               	decf	doReval@evNum& (0+255),w,b
 15669   00946E  6FC9               	movwf	doReval@evIndex& (0+255),b
 15670                           
 15671                           ;../../VLCBlib_PIC/event_teach_large.c: 733:     if (tableIndex < 255) {
 15672   009470  29CD               	incf	doReval@tableIndex& (0+255),w,b
 15673   009472  B4D8               	btfsc	status,2,c
 15674   009474  D039               	goto	l22634
 15675                           
 15676                           ; BSR set to: 1
 15677                           ;../../VLCBlib_PIC/event_teach_large.c: 734:         if (validStart(tableIndex)) {
 15678   009476  51CD               	movf	doReval@tableIndex& (0+255),w,b
 15679   009478  EC39  F05C         	call	_validStart
 15680   00947C  0900               	iorlw	0
 15681   00947E  B4D8               	btfsc	status,2,c
 15682   009480  D033               	goto	l22634
 15683                           
 15684                           ;../../VLCBlib_PIC/event_teach_large.c: 735:             int evVal;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 736:             if (evNum == 0) {
 15685   009482  0101               	movlb	1	; () banked
 15686   009484  51C7               	movf	doReval@evNum& (0+255),w,b
 15687   009486  A4D8               	btfss	status,2,c
 15688   009488  D009               	goto	l22622
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;../../VLCBlib_PIC/event_teach_large.c: 737:                 evVal = numEv(tableIndex);
 15692   00948A  51CD               	movf	doReval@tableIndex& (0+255),w,b
 15693   00948C  EC54  F045         	call	_numEv
 15694   009490  0101               	movlb	1	; () banked
 15695   009492  6FC8               	movwf	??_doReval& (0+255),b
 15696   009494  51C8               	movf	??_doReval& (0+255),w,b
 15697   009496  6FCB               	movwf	doReval@evVal& (0+255),b
 15698   009498  6BCC               	clrf	(doReval@evVal+1)& (0+255),b
 15699                           
 15700                           ;../../VLCBlib_PIC/event_teach_large.c: 738:             } else {
 15701   00949A  D009               	goto	l22624
 15702   00949C                     l22622:
 15703                           
 15704                           ; BSR set to: 1
 15705                           ;../../VLCBlib_PIC/event_teach_large.c: 739:                 evVal = getEv(tableIndex, e
      +                          vIndex);
 15706   00949C  C1C9  F09D         	movff	doReval@evIndex,getEv@evNum
 15707   0094A0  51CD               	movf	doReval@tableIndex& (0+255),w,b
 15708   0094A2  EC0A  F03C         	call	_getEv
 15709   0094A6  C09D  F1CB         	movff	?_getEv,doReval@evVal
 15710   0094AA  C09E  F1CC         	movff	?_getEv+1,doReval@evVal+1
 15711   0094AE                     l22624:
 15712                           
 15713                           ;../../VLCBlib_PIC/event_teach_large.c: 741:             if (evVal >= 0) {
 15714   0094AE  0101               	movlb	1	; () banked
 15715   0094B0  BFCC               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15716   0094B2  D00E               	goto	l22630
 15717                           
 15718                           ; BSR set to: 1
 15719                           ;../../VLCBlib_PIC/event_teach_large.c: 742:                 sendMessage5(OPC_NEVAL, nn.
      +                          bytes.hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15720   0094B4  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15721   0094B8  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15722   0094BC  C1CA  F1C4         	movff	doReval@enNum,sendMessage5@data3
 15723   0094C0  C1C7  F1C5         	movff	doReval@evNum,sendMessage5@data4
 15724   0094C4  C1CB  F1C6         	movff	doReval@evVal,sendMessage5@data5
 15725   0094C8  0EB5               	movlw	181
 15726   0094CA  ECE1  F05F         	call	_sendMessage5
 15727   0094CE  0012               	return	
 15728   0094D0                     l22630:
 15729                           
 15730                           ; BSR set to: 1
 15731                           ;../../VLCBlib_PIC/event_teach_large.c: 746:             sendMessage3(OPC_CMDERR, nn.byt
      +                          es.hi, nn.bytes.lo, (uint8_t)(-evVal));
 15732   0094D0  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15733   0094D4  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15734   0094D8  51CB               	movf	doReval@evVal& (0+255),w,b
 15735   0094DA  0800               	sublw	0
 15736   0094DC  0100               	movlb	0	; () banked
 15737   0094DE  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15738   0094E0  0E6F               	movlw	111
 15739   0094E2  EC3F  F060         	call	_sendMessage3
 15740   0094E6  0012               	return	
 15741   0094E8                     l22634:
 15742                           
 15743                           ;../../VLCBlib_PIC/event_teach_large.c: 750:     sendMessage3(OPC_CMDERR, nn.bytes.hi, n
      +                          n.bytes.lo, CMDERR_INVALID_EVENT);
 15744   0094E8  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15745   0094EC  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15746   0094F0  0E07               	movlw	7
 15747   0094F2  0100               	movlb	0	; () banked
 15748   0094F4  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15749   0094F6  0E6F               	movlw	111
 15750   0094F8  EC3F  F060         	call	_sendMessage3
 15751   0094FC  0012               	return		;funcret
 15752   0094FE                     __end_of_doReval:
 15753                           	callstack 0
 15754                           
 15755 ;; *************** function _doReqev *****************
 15756 ;; Defined at:
 15757 ;;		line 781 in file "../../VLCBlib_PIC/event_teach_large.c"
 15758 ;; Parameters:    Size  Location     Type
 15759 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15760 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15761 ;;  evNum           1   18[BANK1 ] unsigned char 
 15762 ;; Auto vars:     Size  Location     Type
 15763 ;;  evVal           2   19[BANK1 ] short 
 15764 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15765 ;; Return value:  Size  Location     Type
 15766 ;;                  1    wreg      void 
 15767 ;; Registers used:
 15768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15769 ;; Tracked objects:
 15770 ;;		On entry : 0/0
 15771 ;;		On exit  : 0/0
 15772 ;;		Unchanged: 0/0
 15773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15774 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15775 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15777 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15778 ;;Total ram usage:        8 bytes
 15779 ;; Hardware stack levels used: 1
 15780 ;; Hardware stack levels required when called: 17
 15781 ;; This function calls:
 15782 ;;		_findEvent
 15783 ;;		_findServiceIndex
 15784 ;;		_getEv
 15785 ;;		_numEv
 15786 ;;		_sendMessage3
 15787 ;;		_sendMessage5
 15788 ;;		_sendMessage6
 15789 ;;		_startTimedResponse
 15790 ;; This function is called by:
 15791 ;;		_teachProcessMessage
 15792 ;; This function uses a non-reentrant model
 15793 ;;
 15794                           
 15795                           	psect	text31
 15796   007ABE                     __ptext31:
 15797                           	callstack 0
 15798   007ABE                     _doReqev:
 15799                           	callstack 11
 15800                           
 15801                           ;../../VLCBlib_PIC/event_teach_large.c: 782:     int16_t evVal;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 784:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15802                           
 15803                           ;incstack = 0
 15804   007ABE  C1C8  F1BA         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15805   007AC2  C1C9  F1BB         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15806   007AC6  C1CA  F1BC         	movff	doReqev@eventNumber,findEvent@eventNumber
 15807   007ACA  C1CB  F1BD         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15808   007ACE  ECBB  F051         	call	_findEvent	;wreg free
 15809   007AD2  0101               	movlb	1	; () banked
 15810   007AD4  6FCF               	movwf	doReqev@tableIndex& (0+255),b
 15811                           
 15812                           ; BSR set to: 1
 15813                           ;../../VLCBlib_PIC/event_teach_large.c: 785:     if (tableIndex == 0xff) {
 15814   007AD6  29CF               	incf	doReqev@tableIndex& (0+255),w,b
 15815   007AD8  A4D8               	btfss	status,2,c
 15816   007ADA  D019               	goto	l22528
 15817                           
 15818                           ; BSR set to: 1
 15819                           ;../../VLCBlib_PIC/event_teach_large.c: 786:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INVALID_EVENT);
 15820   007ADC  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15821   007AE0  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15822   007AE4  0E07               	movlw	7
 15823   007AE6  0100               	movlb	0	; () banked
 15824   007AE8  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15825   007AEA  0E6F               	movlw	111
 15826   007AEC  EC3F  F060         	call	_sendMessage3
 15827                           
 15828                           ;../../VLCBlib_PIC/event_teach_large.c: 788:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15829   007AF0  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15830   007AF4  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15831   007AF8  0EB2               	movlw	178
 15832   007AFA  0101               	movlb	1	; () banked
 15833   007AFC  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15834   007AFE  0E04               	movlw	4
 15835   007B00  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15836   007B02  0E07               	movlw	7
 15837   007B04  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15838   007B06  0EAF               	movlw	175
 15839   007B08  ECE1  F05F         	call	_sendMessage5
 15840   007B0C  0012               	return	
 15841   007B0E                     l22528:
 15842                           
 15843                           ; BSR set to: 1
 15844                           ;../../VLCBlib_PIC/event_teach_large.c: 792:     if (evNum > 20) {
 15845   007B0E  0E14               	movlw	20
 15846   007B10  65CC               	cpfsgt	doReqev@evNum& (0+255),b
 15847   007B12  D019               	goto	l22534
 15848                           
 15849                           ; BSR set to: 1
 15850                           ;../../VLCBlib_PIC/event_teach_large.c: 793:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15851   007B14  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15852   007B18  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15853   007B1C  0E06               	movlw	6
 15854   007B1E  0100               	movlb	0	; () banked
 15855   007B20  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15856   007B22  0E6F               	movlw	111
 15857   007B24  EC3F  F060         	call	_sendMessage3
 15858                           
 15859                           ;../../VLCBlib_PIC/event_teach_large.c: 795:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15860   007B28  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15861   007B2C  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15862   007B30  0EB2               	movlw	178
 15863   007B32  0101               	movlb	1	; () banked
 15864   007B34  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15865   007B36  0E04               	movlw	4
 15866   007B38  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15867   007B3A  0E06               	movlw	6
 15868   007B3C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15869   007B3E  0EAF               	movlw	175
 15870   007B40  ECE1  F05F         	call	_sendMessage5
 15871   007B44  0012               	return	
 15872   007B46                     l22534:
 15873                           
 15874                           ; BSR set to: 1
 15875                           ;../../VLCBlib_PIC/event_teach_large.c: 799:     if (evNum == 0) {
 15876   007B46  51CC               	movf	doReqev@evNum& (0+255),w,b
 15877   007B48  A4D8               	btfss	status,2,c
 15878   007B4A  D020               	goto	l22544
 15879                           
 15880                           ; BSR set to: 1
 15881                           ;../../VLCBlib_PIC/event_teach_large.c: 801:         sendMessage6(OPC_EVANS, nodeNumber>
      +                          >8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15882   007B4C  51C9               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15883   007B4E  6FC2               	movwf	sendMessage6@data1& (0+255),b
 15884   007B50  C1C8  F1C3         	movff	doReqev@nodeNumber,sendMessage6@data2
 15885   007B54  51CB               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15886   007B56  6FC4               	movwf	sendMessage6@data3& (0+255),b
 15887   007B58  C1CA  F1C5         	movff	doReqev@eventNumber,sendMessage6@data4
 15888   007B5C  0E00               	movlw	0
 15889   007B5E  6FC6               	movwf	sendMessage6@data5& (0+255),b
 15890   007B60  51CF               	movf	doReqev@tableIndex& (0+255),w,b
 15891   007B62  EC54  F045         	call	_numEv
 15892   007B66  0101               	movlb	1	; () banked
 15893   007B68  6FC7               	movwf	sendMessage6@data6& (0+255),b
 15894   007B6A  0ED3               	movlw	211
 15895   007B6C  EC99  F05F         	call	_sendMessage6
 15896                           
 15897                           ;../../VLCBlib_PIC/event_teach_large.c: 804:         startTimedResponse(tableIndex, find
      +                          ServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15898   007B70  0E04               	movlw	4
 15899   007B72  ECBF  F056         	call	_findServiceIndex
 15900   007B76  0100               	movlb	0	; () banked
 15901   007B78  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15902   007B7A  0ED6               	movlw	low _reqevCallback
 15903   007B7C  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15904   007B7E  0E9E               	movlw	high _reqevCallback
 15905   007B80  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15906   007B82  0101               	movlb	1	; () banked
 15907   007B84  51CF               	movf	doReqev@tableIndex& (0+255),w,b
 15908   007B86  EC14  F05E         	call	_startTimedResponse
 15909   007B8A  0012               	return	
 15910   007B8C                     l22544:
 15911                           
 15912                           ; BSR set to: 1
 15913                           ;../../VLCBlib_PIC/event_teach_large.c: 811:         evVal = getEv(tableIndex, evNum-1);
 15914   007B8C  05CC               	decf	doReqev@evNum& (0+255),w,b
 15915   007B8E  0100               	movlb	0	; () banked
 15916   007B90  6F9D               	movwf	getEv@evNum& (0+255),b
 15917   007B92  0101               	movlb	1	; () banked
 15918   007B94  51CF               	movf	doReqev@tableIndex& (0+255),w,b
 15919   007B96  EC0A  F03C         	call	_getEv
 15920   007B9A  C09D  F1CD         	movff	?_getEv,doReqev@evVal
 15921   007B9E  C09E  F1CE         	movff	?_getEv+1,doReqev@evVal+1
 15922                           
 15923                           ;../../VLCBlib_PIC/event_teach_large.c: 813:     if (evVal < 0) {
 15924   007BA2  0101               	movlb	1	; () banked
 15925   007BA4  AFCE               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15926   007BA6  D01B               	goto	l22552
 15927                           
 15928                           ; BSR set to: 1
 15929                           ;../../VLCBlib_PIC/event_teach_large.c: 815:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, (uint8_t)(-evVal));
 15930   007BA8  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15931   007BAC  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15932   007BB0  51CD               	movf	doReqev@evVal& (0+255),w,b
 15933   007BB2  0800               	sublw	0
 15934   007BB4  0100               	movlb	0	; () banked
 15935   007BB6  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15936   007BB8  0E6F               	movlw	111
 15937   007BBA  EC3F  F060         	call	_sendMessage3
 15938                           
 15939                           ;../../VLCBlib_PIC/event_teach_large.c: 817:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15940   007BBE  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15941   007BC2  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15942   007BC6  0EB2               	movlw	178
 15943   007BC8  0101               	movlb	1	; () banked
 15944   007BCA  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15945   007BCC  0E04               	movlw	4
 15946   007BCE  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15947   007BD0  51CD               	movf	doReqev@evVal& (0+255),w,b
 15948   007BD2  0800               	sublw	0
 15949   007BD4  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15950   007BD6  0EAF               	movlw	175
 15951   007BD8  ECE1  F05F         	call	_sendMessage5
 15952   007BDC  0012               	return	
 15953   007BDE                     l22552:
 15954                           
 15955                           ; BSR set to: 1
 15956                           ;../../VLCBlib_PIC/event_teach_large.c: 822:     sendMessage6(OPC_EVANS, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 15957   007BDE  51C9               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15958   007BE0  6FC2               	movwf	sendMessage6@data1& (0+255),b
 15959   007BE2  C1C8  F1C3         	movff	doReqev@nodeNumber,sendMessage6@data2
 15960   007BE6  51CB               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15961   007BE8  6FC4               	movwf	sendMessage6@data3& (0+255),b
 15962   007BEA  C1CA  F1C5         	movff	doReqev@eventNumber,sendMessage6@data4
 15963   007BEE  C1CC  F1C6         	movff	doReqev@evNum,sendMessage6@data5
 15964   007BF2  C1CD  F1C7         	movff	doReqev@evVal,sendMessage6@data6
 15965   007BF6  0ED3               	movlw	211
 15966   007BF8  EC99  F05F         	call	_sendMessage6
 15967   007BFC  0012               	return		;funcret
 15968   007BFE                     __end_of_doReqev:
 15969                           	callstack 0
 15970                           
 15971 ;; *************** function _doNnevn *****************
 15972 ;; Defined at:
 15973 ;;		line 574 in file "../../VLCBlib_PIC/event_teach_large.c"
 15974 ;; Parameters:    Size  Location     Type
 15975 ;;		None
 15976 ;; Auto vars:     Size  Location     Type
 15977 ;;  f               1   13[BANK1 ] struct .
 15978 ;;  i               1   15[BANK1 ] unsigned char 
 15979 ;;  count           1   14[BANK1 ] unsigned char 
 15980 ;; Return value:  Size  Location     Type
 15981 ;;                  1    wreg      void 
 15982 ;; Registers used:
 15983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15984 ;; Tracked objects:
 15985 ;;		On entry : 0/0
 15986 ;;		On exit  : 0/0
 15987 ;;		Unchanged: 0/0
 15988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15990 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15991 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15992 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15993 ;;Total ram usage:        7 bytes
 15994 ;; Hardware stack levels used: 1
 15995 ;; Hardware stack levels required when called: 17
 15996 ;; This function calls:
 15997 ;;		_readNVM
 15998 ;;		_sendMessage3
 15999 ;; This function is called by:
 16000 ;;		_teachProcessMessage
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           	psect	text32
 16005   00B01C                     __ptext32:
 16006                           	callstack 0
 16007   00B01C                     _doNnevn:
 16008                           	callstack 11
 16009                           
 16010                           ;../../VLCBlib_PIC/event_teach_large.c: 576:     uint8_t count = 0;
 16011                           
 16012                           ;incstack = 0
 16013   00B01C  0E00               	movlw	0
 16014   00B01E  0101               	movlb	1	; () banked
 16015   00B020  6FC8               	movwf	doNnevn@count& (0+255),b
 16016                           
 16017                           ;../../VLCBlib_PIC/event_teach_large.c: 577:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 578:     for (i=0; i<255; i++) {
 16018   00B022  0E00               	movlw	0
 16019   00B024  6FC9               	movwf	doNnevn@i& (0+255),b
 16020   00B026                     l22570:
 16021                           
 16022                           ; BSR set to: 1
 16023                           ;../../VLCBlib_PIC/event_teach_large.c: 579:         EventTableFlags f;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 580:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*i+0);
 16024   00B026  51C9               	movf	doNnevn@i& (0+255),w,b
 16025   00B028  6FC3               	movwf	??_doNnevn& (0+255),b
 16026   00B02A  6BC4               	clrf	(??_doNnevn+1)& (0+255),b
 16027   00B02C  3BC3               	swapf	??_doNnevn& (0+255),f,b
 16028   00B02E  3BC4               	swapf	(??_doNnevn+1)& (0+255),f,b
 16029   00B030  0EF0               	movlw	240
 16030   00B032  17C4               	andwf	(??_doNnevn+1)& (0+255),f,b
 16031   00B034  51C3               	movf	??_doNnevn& (0+255),w,b
 16032   00B036  0B0F               	andlw	15
 16033   00B038  13C4               	iorwf	(??_doNnevn+1)& (0+255),f,b
 16034   00B03A  0EF0               	movlw	240
 16035   00B03C  17C3               	andwf	??_doNnevn& (0+255),f,b
 16036   00B03E  0E80               	movlw	128
 16037   00B040  25C3               	addwf	??_doNnevn& (0+255),w,b
 16038   00B042  6FC5               	movwf	(??_doNnevn+2)& (0+255),b
 16039   00B044  0EEF               	movlw	239
 16040   00B046  21C4               	addwfc	(??_doNnevn+1)& (0+255),w,b
 16041   00B048  6FC6               	movwf	(??_doNnevn+3)& (0+255),b
 16042   00B04A  C1C5  F091         	movff	??_doNnevn+2,readNVM@index
 16043   00B04E  C1C6  F092         	movff	??_doNnevn+3,readNVM@index+1
 16044   00B052  0100               	movlb	0	; () banked
 16045   00B054  6B93               	clrf	(readNVM@index+2)& (0+255),b
 16046   00B056  0E01               	movlw	1
 16047   00B058  ECD0  F059         	call	_readNVM
 16048   00B05C  0100               	movlb	0	; () banked
 16049   00B05E  5191               	movf	?_readNVM& (0+255),w,b
 16050   00B060  0101               	movlb	1	; () banked
 16051   00B062  6FC7               	movwf	doNnevn@f& (0+255),b
 16052                           
 16053                           ; BSR set to: 1
 16054                           ;../../VLCBlib_PIC/event_teach_large.c: 581:         if (f.freeEntry) {
 16055   00B064  BFC7               	btfsc	doNnevn@f& (0+255),7,b
 16056                           
 16057                           ; BSR set to: 1
 16058                           ;../../VLCBlib_PIC/event_teach_large.c: 582:             count++;
 16059   00B066  2BC8               	incf	doNnevn@count& (0+255),f,b
 16060                           
 16061                           ; BSR set to: 1
 16062                           ;../../VLCBlib_PIC/event_teach_large.c: 584:     }
 16063                           
 16064                           ;../../VLCBlib_PIC/event_teach_large.c: 583:         }
 16065   00B068  2BC9               	incf	doNnevn@i& (0+255),f,b
 16066                           
 16067                           ; BSR set to: 1
 16068   00B06A  29C9               	incf	doNnevn@i& (0+255),w,b
 16069   00B06C  A4D8               	btfss	status,2,c
 16070   00B06E  D7DB               	goto	l22570
 16071                           
 16072                           ; BSR set to: 1
 16073                           ;../../VLCBlib_PIC/event_teach_large.c: 585:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 16074   00B070  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16075   00B074  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16076   00B078  C1C8  F0A8         	movff	doNnevn@count,sendMessage3@data3
 16077   00B07C  0E70               	movlw	112
 16078   00B07E  EC3F  F060         	call	_sendMessage3
 16079   00B082  0012               	return		;funcret
 16080   00B084                     __end_of_doNnevn:
 16081                           	callstack 0
 16082                           
 16083 ;; *************** function _doNnclr *****************
 16084 ;; Defined at:
 16085 ;;		line 664 in file "../../VLCBlib_PIC/event_teach_large.c"
 16086 ;; Parameters:    Size  Location     Type
 16087 ;;		None
 16088 ;; Auto vars:     Size  Location     Type
 16089 ;;		None
 16090 ;; Return value:  Size  Location     Type
 16091 ;;                  1    wreg      void 
 16092 ;; Registers used:
 16093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16094 ;; Tracked objects:
 16095 ;;		On entry : 0/0
 16096 ;;		On exit  : 0/0
 16097 ;;		Unchanged: 0/0
 16098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16103 ;;Total ram usage:        0 bytes
 16104 ;; Hardware stack levels used: 1
 16105 ;; Hardware stack levels required when called: 19
 16106 ;; This function calls:
 16107 ;;		_clearAllEvents
 16108 ;;		_sendMessage2
 16109 ;;		_sendMessage5
 16110 ;; This function is called by:
 16111 ;;		_teachProcessMessage
 16112 ;; This function uses a non-reentrant model
 16113 ;;
 16114                           
 16115                           	psect	text33
 16116   00BF02                     __ptext33:
 16117                           	callstack 0
 16118   00BF02                     _doNnclr:
 16119                           	callstack 9
 16120                           
 16121                           ;../../VLCBlib_PIC/event_teach_large.c: 665:     clearAllEvents();
 16122                           
 16123                           ;incstack = 0
 16124   00BF02  EC93  F05B         	call	_clearAllEvents	;wreg free
 16125                           
 16126                           ;../../VLCBlib_PIC/event_teach_large.c: 666:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16127   00BF06  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 16128   00BF0A  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 16129   00BF0E  0E59               	movlw	89
 16130   00BF10  ECB1  F05F         	call	_sendMessage2
 16131                           
 16132                           ;../../VLCBlib_PIC/event_teach_large.c: 668:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16133   00BF14  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16134   00BF18  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16135   00BF1C  0E55               	movlw	85
 16136   00BF1E  0101               	movlb	1	; () banked
 16137   00BF20  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16138   00BF22  0E04               	movlw	4
 16139   00BF24  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16140   00BF26  0E00               	movlw	0
 16141   00BF28  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16142   00BF2A  0EAF               	movlw	175
 16143   00BF2C  ECE1  F05F         	call	_sendMessage5
 16144   00BF30  0012               	return		;funcret
 16145   00BF32                     __end_of_doNnclr:
 16146                           	callstack 0
 16147                           
 16148 ;; *************** function _doNerd *****************
 16149 ;; Defined at:
 16150 ;;		line 593 in file "../../VLCBlib_PIC/event_teach_large.c"
 16151 ;; Parameters:    Size  Location     Type
 16152 ;;		None
 16153 ;; Auto vars:     Size  Location     Type
 16154 ;;		None
 16155 ;; Return value:  Size  Location     Type
 16156 ;;                  1    wreg      void 
 16157 ;; Registers used:
 16158 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16159 ;; Tracked objects:
 16160 ;;		On entry : 0/0
 16161 ;;		On exit  : 0/0
 16162 ;;		Unchanged: 0/0
 16163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16168 ;;Total ram usage:        0 bytes
 16169 ;; Hardware stack levels used: 1
 16170 ;; Hardware stack levels required when called: 13
 16171 ;; This function calls:
 16172 ;;		_findServiceIndex
 16173 ;;		_startTimedResponse
 16174 ;; This function is called by:
 16175 ;;		_teachProcessMessage
 16176 ;; This function uses a non-reentrant model
 16177 ;;
 16178                           
 16179                           	psect	text34
 16180   00C4C4                     __ptext34:
 16181                           	callstack 0
 16182   00C4C4                     _doNerd:
 16183                           	callstack 15
 16184                           
 16185                           ;../../VLCBlib_PIC/event_teach_large.c: 594:     startTimedResponse(2, findServiceIndex(
      +                          SERVICE_ID_OLD_TEACH), nerdCallback);
 16186                           
 16187                           ;incstack = 0
 16188   00C4C4  0E04               	movlw	4
 16189   00C4C6  ECBF  F056         	call	_findServiceIndex
 16190   00C4CA  0100               	movlb	0	; () banked
 16191   00C4CC  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 16192   00C4CE  0EEC               	movlw	low _nerdCallback
 16193   00C4D0  6F92               	movwf	startTimedResponse@callback& (0+255),b
 16194   00C4D2  0EB0               	movlw	high _nerdCallback
 16195   00C4D4  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 16196   00C4D6  0E02               	movlw	2
 16197   00C4D8  EC14  F05E         	call	_startTimedResponse
 16198   00C4DC  0012               	return		;funcret
 16199   00C4DE                     __end_of_doNerd:
 16200                           	callstack 0
 16201                           
 16202 ;; *************** function _doNenrd *****************
 16203 ;; Defined at:
 16204 ;;		line 625 in file "../../VLCBlib_PIC/event_teach_large.c"
 16205 ;; Parameters:    Size  Location     Type
 16206 ;;  index           1    wreg     unsigned char 
 16207 ;; Auto vars:     Size  Location     Type
 16208 ;;  index           1   13[BANK1 ] unsigned char 
 16209 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 16210 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 16211 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 16212 ;; Return value:  Size  Location     Type
 16213 ;;                  1    wreg      void 
 16214 ;; Registers used:
 16215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16216 ;; Tracked objects:
 16217 ;;		On entry : 0/0
 16218 ;;		On exit  : 0/0
 16219 ;;		Unchanged: 0/0
 16220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16222 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16224 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16225 ;;Total ram usage:        6 bytes
 16226 ;; Hardware stack levels used: 1
 16227 ;; Hardware stack levels required when called: 17
 16228 ;; This function calls:
 16229 ;;		_evtIdxToTableIndex
 16230 ;;		_getEN
 16231 ;;		_getNN
 16232 ;;		_sendMessage3
 16233 ;;		_sendMessage5
 16234 ;;		_validStart
 16235 ;; This function is called by:
 16236 ;;		_teachProcessMessage
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           	psect	text35
 16241   00AED4                     __ptext35:
 16242                           	callstack 0
 16243   00AED4                     _doNenrd:
 16244                           	callstack 11
 16245                           
 16246                           ;incstack = 0
 16247                           ;doNenrd@index stored from wreg
 16248   00AED4  0101               	movlb	1	; () banked
 16249   00AED6  6FC7               	movwf	doNenrd@index& (0+255),b
 16250                           
 16251                           ;../../VLCBlib_PIC/event_teach_large.c: 626:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 627:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 629:     tableIndex = evtIdxToTableIndex(index);
 16252   00AED8  0101               	movlb	1	; () banked
 16253   00AEDA  51C7               	movf	doNenrd@index& (0+255),w,b
 16254   00AEDC  ECFF  F062         	call	_evtIdxToTableIndex
 16255   00AEE0  0101               	movlb	1	; () banked
 16256   00AEE2  6FCC               	movwf	doNenrd@tableIndex& (0+255),b
 16257                           
 16258                           ; BSR set to: 1
 16259                           ;../../VLCBlib_PIC/event_teach_large.c: 631:     if ( ! validStart(tableIndex)) {
 16260   00AEE4  51CC               	movf	doNenrd@tableIndex& (0+255),w,b
 16261   00AEE6  EC39  F05C         	call	_validStart
 16262   00AEEA  0900               	iorlw	0
 16263   00AEEC  A4D8               	btfss	status,2,c
 16264   00AEEE  D00B               	goto	l22602
 16265                           
 16266                           ;../../VLCBlib_PIC/event_teach_large.c: 632:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EN_IDX);
 16267   00AEF0  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16268   00AEF4  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16269   00AEF8  0E08               	movlw	8
 16270   00AEFA  0100               	movlb	0	; () banked
 16271   00AEFC  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16272   00AEFE  0E6F               	movlw	111
 16273   00AF00  EC3F  F060         	call	_sendMessage3
 16274   00AF04  0012               	return	
 16275   00AF06                     l22602:
 16276                           
 16277                           ;../../VLCBlib_PIC/event_teach_large.c: 638:     nodeNumber = getNN(tableIndex);
 16278   00AF06  0101               	movlb	1	; () banked
 16279   00AF08  51CC               	movf	doNenrd@tableIndex& (0+255),w,b
 16280   00AF0A  ECBF  F049         	call	_getNN
 16281   00AF0E  C097  F1C8         	movff	?_getNN,doNenrd@nodeNumber
 16282   00AF12  C098  F1C9         	movff	?_getNN+1,doNenrd@nodeNumber+1
 16283                           
 16284                           ;../../VLCBlib_PIC/event_teach_large.c: 639:     eventNumber = getEN(tableIndex);
 16285   00AF16  0101               	movlb	1	; () banked
 16286   00AF18  51CC               	movf	doNenrd@tableIndex& (0+255),w,b
 16287   00AF1A  EC9B  F055         	call	_getEN
 16288   00AF1E  C097  F1CA         	movff	?_getEN,doNenrd@eventNumber
 16289   00AF22  C098  F1CB         	movff	?_getEN+1,doNenrd@eventNumber+1
 16290                           
 16291                           ;../../VLCBlib_PIC/event_teach_large.c: 640:     sendMessage5(OPC_ENRSP, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 16292   00AF26  0101               	movlb	1	; () banked
 16293   00AF28  51C9               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 16294   00AF2A  6FC2               	movwf	sendMessage5@data1& (0+255),b
 16295   00AF2C  C1C8  F1C3         	movff	doNenrd@nodeNumber,sendMessage5@data2
 16296   00AF30  51CB               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 16297   00AF32  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16298   00AF34  C1CA  F1C5         	movff	doNenrd@eventNumber,sendMessage5@data4
 16299   00AF38  C1C7  F1C6         	movff	doNenrd@index,sendMessage5@data5
 16300   00AF3C  0EF2               	movlw	242
 16301   00AF3E  ECE1  F05F         	call	_sendMessage5
 16302   00AF42  0012               	return		;funcret
 16303   00AF44                     __end_of_doNenrd:
 16304                           	callstack 0
 16305                           
 16306 ;; *************** function _evtIdxToTableIndex *****************
 16307 ;; Defined at:
 16308 ;;		line 1263 in file "../../VLCBlib_PIC/event_teach_large.c"
 16309 ;; Parameters:    Size  Location     Type
 16310 ;;  evtIdx          1    wreg     unsigned char 
 16311 ;; Auto vars:     Size  Location     Type
 16312 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 16313 ;; Return value:  Size  Location     Type
 16314 ;;                  1    wreg      unsigned char 
 16315 ;; Registers used:
 16316 ;;		wreg, status,2, status,0
 16317 ;; Tracked objects:
 16318 ;;		On entry : 0/0
 16319 ;;		On exit  : 0/0
 16320 ;;		Unchanged: 0/0
 16321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16323 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16325 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16326 ;;Total ram usage:        1 bytes
 16327 ;; Hardware stack levels used: 1
 16328 ;; Hardware stack levels required when called: 12
 16329 ;; This function calls:
 16330 ;;		Nothing
 16331 ;; This function is called by:
 16332 ;;		_doNenrd
 16333 ;;		_doReval
 16334 ;; This function uses a non-reentrant model
 16335 ;;
 16336                           
 16337                           	psect	text36
 16338   00C5FE                     __ptext36:
 16339                           	callstack 0
 16340   00C5FE                     _evtIdxToTableIndex:
 16341                           	callstack 15
 16342                           
 16343                           ;incstack = 0
 16344                           ;evtIdxToTableIndex@evtIdx stored from wreg
 16345   00C5FE  0100               	movlb	0	; () banked
 16346   00C600  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 16347                           
 16348                           ;../../VLCBlib_PIC/event_teach_large.c: 1264:     return evtIdx - 1;
 16349   00C602  0100               	movlb	0	; () banked
 16350   00C604  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 16351                           
 16352                           ; BSR set to: 0
 16353   00C606  0012               	return		;funcret
 16354   00C608                     __end_of_evtIdxToTableIndex:
 16355                           	callstack 0
 16356                           
 16357 ;; *************** function _doEvuln *****************
 16358 ;; Defined at:
 16359 ;;		line 758 in file "../../VLCBlib_PIC/event_teach_large.c"
 16360 ;; Parameters:    Size  Location     Type
 16361 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 16362 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;  result          1   24[BANK1 ] unsigned char 
 16365 ;; Return value:  Size  Location     Type
 16366 ;;                  1    wreg      void 
 16367 ;; Registers used:
 16368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16369 ;; Tracked objects:
 16370 ;;		On entry : 0/0
 16371 ;;		On exit  : 0/0
 16372 ;;		Unchanged: 0/0
 16373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16374 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16375 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16377 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16378 ;;Total ram usage:        5 bytes
 16379 ;; Hardware stack levels used: 1
 16380 ;; Hardware stack levels required when called: 20
 16381 ;; This function calls:
 16382 ;;		_removeEvent
 16383 ;;		_sendMessage2
 16384 ;;		_sendMessage3
 16385 ;;		_sendMessage5
 16386 ;; This function is called by:
 16387 ;;		_teachProcessMessage
 16388 ;; This function uses a non-reentrant model
 16389 ;;
 16390                           
 16391                           	psect	text37
 16392   00AABC                     __ptext37:
 16393                           	callstack 0
 16394   00AABC                     _doEvuln:
 16395                           	callstack 8
 16396                           
 16397                           ;../../VLCBlib_PIC/event_teach_large.c: 759:     uint8_t result;;../../VLCBlib_PIC/event
      +                          _teach_large.c: 760:     result = removeEvent(nodeNumber, eventNumber);
 16398                           
 16399                           ; BSR set to: 0
 16400                           ;incstack = 0
 16401   00AABC  C1CE  F1C9         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16402   00AAC0  C1CF  F1CA         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16403   00AAC4  C1D0  F1CB         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16404   00AAC8  C1D1  F1CC         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16405   00AACC  EC99  F060         	call	_removeEvent	;wreg free
 16406   00AAD0  0101               	movlb	1	; () banked
 16407   00AAD2  6FD2               	movwf	doEvuln@result& (0+255),b
 16408                           
 16409                           ; BSR set to: 1
 16410                           ;../../VLCBlib_PIC/event_teach_large.c: 761:     if (result) {
 16411   00AAD4  51D2               	movf	doEvuln@result& (0+255),w,b
 16412   00AAD6  B4D8               	btfsc	status,2,c
 16413   00AAD8  D018               	goto	l22518
 16414                           
 16415                           ; BSR set to: 1
 16416                           ;../../VLCBlib_PIC/event_teach_large.c: 762:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, result);
 16417   00AADA  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16418   00AADE  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16419   00AAE2  C1D2  F0A8         	movff	doEvuln@result,sendMessage3@data3
 16420   00AAE6  0E6F               	movlw	111
 16421   00AAE8  EC3F  F060         	call	_sendMessage3
 16422                           
 16423                           ;../../VLCBlib_PIC/event_teach_large.c: 764:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16424   00AAEC  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16425   00AAF0  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16426   00AAF4  0E95               	movlw	149
 16427   00AAF6  0101               	movlb	1	; () banked
 16428   00AAF8  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16429   00AAFA  0E04               	movlw	4
 16430   00AAFC  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16431   00AAFE  C1D2  F1C6         	movff	doEvuln@result,sendMessage5@data5
 16432   00AB02  0EAF               	movlw	175
 16433   00AB04  ECE1  F05F         	call	_sendMessage5
 16434   00AB08  0012               	return	
 16435   00AB0A                     l22518:
 16436                           
 16437                           ; BSR set to: 1
 16438                           ;../../VLCBlib_PIC/event_teach_large.c: 769:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16439   00AB0A  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 16440   00AB0E  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 16441   00AB12  0E59               	movlw	89
 16442   00AB14  ECB1  F05F         	call	_sendMessage2
 16443                           
 16444                           ;../../VLCBlib_PIC/event_teach_large.c: 771:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16445   00AB18  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16446   00AB1C  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16447   00AB20  0E95               	movlw	149
 16448   00AB22  0101               	movlb	1	; () banked
 16449   00AB24  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16450   00AB26  0E04               	movlw	4
 16451   00AB28  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16452   00AB2A  0E00               	movlw	0
 16453   00AB2C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16454   00AB2E  0EAF               	movlw	175
 16455   00AB30  ECE1  F05F         	call	_sendMessage5
 16456   00AB34  0012               	return		;funcret
 16457   00AB36                     __end_of_doEvuln:
 16458                           	callstack 0
 16459                           
 16460 ;; *************** function _removeEvent *****************
 16461 ;; Defined at:
 16462 ;;		line 859 in file "../../VLCBlib_PIC/event_teach_large.c"
 16463 ;; Parameters:    Size  Location     Type
 16464 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16465 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16466 ;; Auto vars:     Size  Location     Type
 16467 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16468 ;; Return value:  Size  Location     Type
 16469 ;;                  1    wreg      unsigned char 
 16470 ;; Registers used:
 16471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16472 ;; Tracked objects:
 16473 ;;		On entry : 0/0
 16474 ;;		On exit  : 0/0
 16475 ;;		Unchanged: 0/0
 16476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16477 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16478 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16480 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16481 ;;Total ram usage:        5 bytes
 16482 ;; Hardware stack levels used: 1
 16483 ;; Hardware stack levels required when called: 19
 16484 ;; This function calls:
 16485 ;;		_findEvent
 16486 ;;		_removeTableEntry
 16487 ;; This function is called by:
 16488 ;;		_doEvuln
 16489 ;; This function uses a non-reentrant model
 16490 ;;
 16491                           
 16492                           	psect	text38
 16493   00C132                     __ptext38:
 16494                           	callstack 0
 16495   00C132                     _removeEvent:
 16496                           	callstack 8
 16497                           
 16498                           ;../../VLCBlib_PIC/event_teach_large.c: 861:     uint8_t tableIndex = findEvent(nodeNumb
      +                          er, eventNumber);
 16499                           
 16500                           ;incstack = 0
 16501   00C132  C1C9  F1BA         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16502   00C136  C1CA  F1BB         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16503   00C13A  C1CB  F1BC         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16504   00C13E  C1CC  F1BD         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16505   00C142  ECBB  F051         	call	_findEvent	;wreg free
 16506   00C146  0101               	movlb	1	; () banked
 16507   00C148  6FCD               	movwf	removeEvent@tableIndex& (0+255),b
 16508                           
 16509                           ; BSR set to: 1
 16510                           ;../../VLCBlib_PIC/event_teach_large.c: 862:     if (tableIndex == 0xff) return CMDERR_I
      +                          NVALID_EVENT;
 16511   00C14A  29CD               	incf	removeEvent@tableIndex& (0+255),w,b
 16512   00C14C  A4D8               	btfss	status,2,c
 16513   00C14E  D002               	goto	l21270
 16514                           
 16515                           ; BSR set to: 1
 16516   00C150  0E07               	movlw	7
 16517   00C152  0012               	return	
 16518   00C154                     l21270:
 16519                           
 16520                           ; BSR set to: 1
 16521                           ;../../VLCBlib_PIC/event_teach_large.c: 864:     return removeTableEntry(tableIndex);
 16522   00C154  51CD               	movf	removeEvent@tableIndex& (0+255),w,b
 16523   00C156  ECB5  F03C         	call	_removeTableEntry
 16524   00C15A  0012               	return		;funcret
 16525   00C15C                     __end_of_removeEvent:
 16526                           	callstack 0
 16527                           
 16528 ;; *************** function _doEvlrn *****************
 16529 ;; Defined at:
 16530 ;;		line 681 in file "../../VLCBlib_PIC/event_teach_large.c"
 16531 ;; Parameters:    Size  Location     Type
 16532 ;;  nodeNumber      2   52[BANK1 ] unsigned short 
 16533 ;;  eventNumber     2   54[BANK1 ] unsigned short 
 16534 ;;  evNum           1   56[BANK1 ] unsigned char 
 16535 ;;  evVal           1   57[BANK1 ] unsigned char 
 16536 ;; Auto vars:     Size  Location     Type
 16537 ;;  error           1   58[BANK1 ] unsigned char 
 16538 ;; Return value:  Size  Location     Type
 16539 ;;                  1    wreg      void 
 16540 ;; Registers used:
 16541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16542 ;; Tracked objects:
 16543 ;;		On entry : 0/0
 16544 ;;		On exit  : 0/0
 16545 ;;		Unchanged: 0/0
 16546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16547 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16548 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16550 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16551 ;;Total ram usage:        7 bytes
 16552 ;; Hardware stack levels used: 1
 16553 ;; Hardware stack levels required when called: 23
 16554 ;; This function calls:
 16555 ;;		_APP_addEvent
 16556 ;;		_sendMessage2
 16557 ;;		_sendMessage3
 16558 ;;		_sendMessage5
 16559 ;; This function is called by:
 16560 ;;		_teachProcessMessage
 16561 ;; This function uses a non-reentrant model
 16562 ;;
 16563                           
 16564                           	psect	text39
 16565   0091F4                     __ptext39:
 16566                           	callstack 0
 16567   0091F4                     _doEvlrn:
 16568                           	callstack 5
 16569                           
 16570                           ;../../VLCBlib_PIC/event_teach_large.c: 682:     uint8_t error;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 683:     evNum--;
 16571                           
 16572                           ;incstack = 0
 16573   0091F4  0101               	movlb	1	; () banked
 16574   0091F6  07F2               	decf	doEvlrn@evNum& (0+255),f,b
 16575                           
 16576                           ; BSR set to: 1
 16577                           ;../../VLCBlib_PIC/event_teach_large.c: 684:     if (evNum >= 20) {
 16578   0091F8  0E13               	movlw	19
 16579   0091FA  65F2               	cpfsgt	doEvlrn@evNum& (0+255),b
 16580   0091FC  D019               	goto	l22494
 16581                           
 16582                           ; BSR set to: 1
 16583                           ;../../VLCBlib_PIC/event_teach_large.c: 685:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 16584   0091FE  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16585   009202  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16586   009206  0E06               	movlw	6
 16587   009208  0100               	movlb	0	; () banked
 16588   00920A  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16589   00920C  0E6F               	movlw	111
 16590   00920E  EC3F  F060         	call	_sendMessage3
 16591                           
 16592                           ;../../VLCBlib_PIC/event_teach_large.c: 687:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16593   009212  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16594   009216  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16595   00921A  0ED2               	movlw	210
 16596   00921C  0101               	movlb	1	; () banked
 16597   00921E  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16598   009220  0E04               	movlw	4
 16599   009222  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16600   009224  0E06               	movlw	6
 16601   009226  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16602   009228  0EAF               	movlw	175
 16603   00922A  ECE1  F05F         	call	_sendMessage5
 16604   00922E  0012               	return	
 16605   009230                     l22494:
 16606                           
 16607                           ; BSR set to: 1
 16608                           ;../../VLCBlib_PIC/event_teach_large.c: 694:     error = APP_addEvent(nodeNumber, eventN
      +                          umber, evNum, evVal, FALSE);
 16609   009230  C1EE  F1E6         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16610   009234  C1EF  F1E7         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16611   009238  C1F0  F1E8         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16612   00923C  C1F1  F1E9         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16613   009240  C1F2  F1EA         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16614   009244  C1F3  F1EB         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16615   009248  0E00               	movlw	0
 16616   00924A  6FEC               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16617   00924C  ECA2  F057         	call	_APP_addEvent	;wreg free
 16618   009250  0101               	movlb	1	; () banked
 16619   009252  6FF4               	movwf	doEvlrn@error& (0+255),b
 16620                           
 16621                           ; BSR set to: 1
 16622                           ;../../VLCBlib_PIC/event_teach_large.c: 695:     if (error) {
 16623   009254  51F4               	movf	doEvlrn@error& (0+255),w,b
 16624   009256  B4D8               	btfsc	status,2,c
 16625   009258  D018               	goto	l22502
 16626                           
 16627                           ; BSR set to: 1
 16628                           ;../../VLCBlib_PIC/event_teach_large.c: 697:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, error);
 16629   00925A  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16630   00925E  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16631   009262  C1F4  F0A8         	movff	doEvlrn@error,sendMessage3@data3
 16632   009266  0E6F               	movlw	111
 16633   009268  EC3F  F060         	call	_sendMessage3
 16634                           
 16635                           ;../../VLCBlib_PIC/event_teach_large.c: 699:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16636   00926C  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16637   009270  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16638   009274  0ED2               	movlw	210
 16639   009276  0101               	movlb	1	; () banked
 16640   009278  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16641   00927A  0E04               	movlw	4
 16642   00927C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16643   00927E  C1F4  F1C6         	movff	doEvlrn@error,sendMessage5@data5
 16644   009282  0EAF               	movlw	175
 16645   009284  ECE1  F05F         	call	_sendMessage5
 16646   009288  0012               	return	
 16647   00928A                     l22502:
 16648                           
 16649                           ; BSR set to: 1
 16650                           ;../../VLCBlib_PIC/event_teach_large.c: 704:     teachDiagnostics[0x01].asUint++;
 16651   00928A  4BB0               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 16652   00928C  2BB1               	incf	(_teachDiagnostics+3)& (0+255),f,b
 16653                           
 16654                           ; BSR set to: 1
 16655                           ;../../VLCBlib_PIC/event_teach_large.c: 706:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16656   00928E  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 16657   009292  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 16658   009296  0E59               	movlw	89
 16659   009298  ECB1  F05F         	call	_sendMessage2
 16660                           
 16661                           ;../../VLCBlib_PIC/event_teach_large.c: 708:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16662   00929C  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16663   0092A0  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16664   0092A4  0ED2               	movlw	210
 16665   0092A6  0101               	movlb	1	; () banked
 16666   0092A8  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16667   0092AA  0E04               	movlw	4
 16668   0092AC  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16669   0092AE  0E00               	movlw	0
 16670   0092B0  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16671   0092B2  0EAF               	movlw	175
 16672   0092B4  ECE1  F05F         	call	_sendMessage5
 16673   0092B8  0012               	return		;funcret
 16674   0092BA                     __end_of_doEvlrn:
 16675                           	callstack 0
 16676                           
 16677 ;; *************** function _APP_addEvent *****************
 16678 ;; Defined at:
 16679 ;;		line 195 in file "../universalEvents.c"
 16680 ;; Parameters:    Size  Location     Type
 16681 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16682 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16683 ;;  evNum           1   48[BANK1 ] unsigned char 
 16684 ;;  evVal           1   49[BANK1 ] unsigned char 
 16685 ;;  forceOwnNN      1   50[BANK1 ] enum E12767
 16686 ;; Auto vars:     Size  Location     Type
 16687 ;;  tableIndex      1   51[BANK1 ] unsigned char 
 16688 ;; Return value:  Size  Location     Type
 16689 ;;                  1    wreg      unsigned char 
 16690 ;; Registers used:
 16691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16692 ;; Tracked objects:
 16693 ;;		On entry : 0/0
 16694 ;;		On exit  : 0/0
 16695 ;;		Unchanged: 0/0
 16696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16697 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16700 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16701 ;;Total ram usage:        8 bytes
 16702 ;; Hardware stack levels used: 1
 16703 ;; Hardware stack levels required when called: 22
 16704 ;; This function calls:
 16705 ;;		_addEvent
 16706 ;;		_checkRemoveTableEntry
 16707 ;;		_rebuildHashtable
 16708 ;;		_writeEv
 16709 ;; This function is called by:
 16710 ;;		_doEvlrn
 16711 ;; This function uses a non-reentrant model
 16712 ;;
 16713                           
 16714                           	psect	text40
 16715   00AF44                     __ptext40:
 16716                           	callstack 0
 16717   00AF44                     _APP_addEvent:
 16718                           	callstack 5
 16719                           
 16720                           ;../universalEvents.c: 197:     if ((evNum == 0) && (evVal != 0))
 16721                           
 16722                           ;incstack = 0
 16723   00AF44  0101               	movlb	1	; () banked
 16724   00AF46  51EA               	movf	APP_addEvent@evNum& (0+255),w,b
 16725   00AF48  A4D8               	btfss	status,2,c
 16726   00AF4A  D021               	goto	l653
 16727                           
 16728                           ; BSR set to: 1
 16729   00AF4C  51EB               	movf	APP_addEvent@evVal& (0+255),w,b
 16730   00AF4E  B4D8               	btfsc	status,2,c
 16731   00AF50  D01E               	goto	l653
 16732                           
 16733                           ; BSR set to: 1
 16734                           ;../universalEvents.c: 198:     {;../universalEvents.c: 200:         if ((evVal >= 1) &&
      +                           (evVal <= (7+16*4))) {
 16735   00AF52  51EB               	movf	APP_addEvent@evVal& (0+255),w,b
 16736   00AF54  B4D8               	btfsc	status,2,c
 16737   00AF56  D01B               	goto	l653
 16738                           
 16739                           ; BSR set to: 1
 16740   00AF58  0E48               	movlw	72
 16741   00AF5A  61EB               	cpfslt	APP_addEvent@evVal& (0+255),b
 16742   00AF5C  D018               	goto	l653
 16743                           
 16744                           ; BSR set to: 1
 16745                           ;../universalEvents.c: 201:             uint8_t tableIndex = happening2Event[evVal-1];
 16746   00AF5E  0EFF               	movlw	low (_happening2Event+65535)
 16747   00AF60  25EB               	addwf	APP_addEvent@evVal& (0+255),w,b
 16748   00AF62  6ED9               	movwf	fsr2l,c
 16749   00AF64  6ADA               	clrf	fsr2h,c
 16750   00AF66  0E02               	movlw	high (_happening2Event+65535)
 16751   00AF68  22DA               	addwfc	fsr2h,f,c
 16752   00AF6A  50DF               	movf	indf2,w,c
 16753   00AF6C  6FED               	movwf	APP_addEvent@tableIndex& (0+255),b
 16754                           
 16755                           ; BSR set to: 1
 16756                           ;../universalEvents.c: 202:             if (tableIndex != 0xff) {
 16757   00AF6E  29ED               	incf	APP_addEvent@tableIndex& (0+255),w,b
 16758   00AF70  B4D8               	btfsc	status,2,c
 16759   00AF72  D00D               	goto	l653
 16760                           
 16761                           ; BSR set to: 1
 16762                           ;../universalEvents.c: 205:                 writeEv(tableIndex, 0, 0);
 16763   00AF74  0E00               	movlw	0
 16764   00AF76  6FCB               	movwf	writeEv@evNum& (0+255),b
 16765   00AF78  0E00               	movlw	0
 16766   00AF7A  6FCC               	movwf	writeEv@evVal& (0+255),b
 16767   00AF7C  51ED               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16768   00AF7E  ECF7  F018         	call	_writeEv
 16769                           
 16770                           ;../universalEvents.c: 206:                 checkRemoveTableEntry(tableIndex);
 16771   00AF82  0101               	movlb	1	; () banked
 16772   00AF84  51ED               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16773   00AF86  EC8A  F05D         	call	_checkRemoveTableEntry
 16774                           
 16775                           ;../universalEvents.c: 208:                 rebuildHashtable();
 16776   00AF8A  EC93  F03E         	call	_rebuildHashtable	;wreg free
 16777   00AF8E                     l653:
 16778                           
 16779                           ;../universalEvents.c: 213:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16780   00AF8E  C1E6  F1D7         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16781   00AF92  C1E7  F1D8         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16782   00AF96  C1E8  F1D9         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16783   00AF9A  C1E9  F1DA         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16784   00AF9E  C1EA  F1DB         	movff	APP_addEvent@evNum,addEvent@evNum
 16785   00AFA2  C1EB  F1DC         	movff	APP_addEvent@evVal,addEvent@evVal
 16786   00AFA6  C1EC  F1DD         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16787   00AFAA  ECF5  F031         	call	_addEvent	;wreg free
 16788   00AFAE  0012               	return		;funcret
 16789   00AFB0                     __end_of_APP_addEvent:
 16790                           	callstack 0
 16791                           
 16792 ;; *************** function _pollTimedResponse *****************
 16793 ;; Defined at:
 16794 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16795 ;; Parameters:    Size  Location     Type
 16796 ;;		None
 16797 ;; Auto vars:     Size  Location     Type
 16798 ;;  result          1   43[BANK1 ] enum E12928
 16799 ;; Return value:  Size  Location     Type
 16800 ;;                  1    wreg      void 
 16801 ;; Registers used:
 16802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16803 ;; Tracked objects:
 16804 ;;		On entry : 0/0
 16805 ;;		On exit  : 0/0
 16806 ;;		Unchanged: 0/0
 16807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16809 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16810 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16811 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16812 ;;Total ram usage:        3 bytes
 16813 ;; Hardware stack levels used: 1
 16814 ;; Hardware stack levels required when called: 20
 16815 ;; This function calls:
 16816 ;;		NULL
 16817 ;;		_mnsTRallDiagnosticsCallback
 16818 ;;		_mnsTRrqnpnCallback
 16819 ;;		_mnsTRserviceDiscoveryCallback
 16820 ;;		_nerdCallback
 16821 ;;		_nvTRnvrdCallback
 16822 ;;		_reqevCallback
 16823 ;;		_sodTRCallback
 16824 ;; This function is called by:
 16825 ;;		_poll
 16826 ;; This function uses a non-reentrant model
 16827 ;;
 16828                           
 16829                           	psect	text41
 16830   00A9C4                     __ptext41:
 16831                           	callstack 0
 16832   00A9C4                     _pollTimedResponse:
 16833                           	callstack 9
 16834                           
 16835                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16836                           
 16837                           ;incstack = 0
 16838   00A9C4  0100               	movlb	0	; () banked
 16839   00A9C6  29C3               	incf	_timedResponseType& (0+255),w,b
 16840   00A9C8  B4D8               	btfsc	status,2,c
 16841   00A9CA  0012               	return	
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16845   00A9CC  503F               	movf	_timedResponseCallback^0,w,c
 16846   00A9CE  1040               	iorwf	(_timedResponseCallback+1)^0,w,c
 16847   00A9D0  A4D8               	btfss	status,2,c
 16848   00A9D2  D003               	goto	l24086
 16849   00A9D4                     u25620:
 16850                           
 16851                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16852   00A9D4  0100               	movlb	0	; () banked
 16853   00A9D6  69C3               	setf	_timedResponseType& (0+255),b
 16854                           
 16855                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16856   00A9D8  0012               	return	
 16857   00A9DA                     l24086:
 16858                           
 16859                           ; BSR set to: 0
 16860                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16861   00A9DA  D801               	call	u25638
 16862   00A9DC  D00E               	goto	u25639
 16863   00A9DE                     u25638:
 16864   00A9DE  0005               	push	
 16865   00A9E0  6EFA               	movwf	pclath,c
 16866   00A9E2  503F               	movf	_timedResponseCallback^0,w,c
 16867   00A9E4  6EFD               	movwf	tosl,c
 16868   00A9E6  5040               	movf	(_timedResponseCallback+1)^0,w,c
 16869   00A9E8  6EFE               	movwf	tosh,c
 16870   00A9EA  6AFF               	clrf	tosu,c
 16871   00A9EC  50FA               	movf	pclath,w,c
 16872   00A9EE  C0C4  F1D4         	movff	_timedResponseServiceIndex,reqevCallback@serviceIndex
 16873   00A9F2  C043  F1D5         	movff	_timedResponseStep,reqevCallback@step
 16874   00A9F6  51C3               	movf	_timedResponseType& (0+255),w,b
 16875   00A9F8  0012               	return		;indir
 16876   00A9FA                     u25639:
 16877   00A9FA  0101               	movlb	1	; () banked
 16878   00A9FC  6FE5               	movwf	pollTimedResponse@result& (0+255),b
 16879                           
 16880                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16881   00A9FE  D00E               	goto	l24102
 16882   00AA00                     l24088:
 16883                           
 16884                           ; BSR set to: 1
 16885                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16886   00AA00  5044               	movf	_timedResponseAllServicesFlag^0,w,c
 16887   00AA02  B4D8               	btfsc	status,2,c
 16888   00AA04  D7E7               	goto	u25620
 16889                           
 16890                           ; BSR set to: 1
 16891                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16892   00AA06  0100               	movlb	0	; () banked
 16893   00AA08  2BC4               	incf	_timedResponseServiceIndex& (0+255),f,b
 16894                           
 16895                           ; BSR set to: 0
 16896                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16897   00AA0A  0E08               	movlw	8
 16898   00AA0C  65C4               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16899   00AA0E  D001               	goto	l24096
 16900   00AA10  D7E1               	goto	u25620
 16901   00AA12                     l24096:
 16902                           
 16903                           ; BSR set to: 0
 16904                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16905   00AA12  0E00               	movlw	0
 16906   00AA14  6E43               	movwf	_timedResponseStep^0,c
 16907   00AA16  0012               	return	
 16908   00AA18                     l24098:
 16909                           
 16910                           ; BSR set to: 1
 16911                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16912   00AA18  2A43               	incf	_timedResponseStep^0,f,c
 16913                           
 16914                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16915   00AA1A  0012               	return	
 16916   00AA1C                     l24102:
 16917                           
 16918                           ; BSR set to: 1
 16919   00AA1C  51E5               	movf	pollTimedResponse@result& (0+255),w,b
 16920   00AA1E  6FE3               	movwf	??_pollTimedResponse& (0+255),b
 16921   00AA20  6BE4               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16922                           
 16923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16924                           ; Switch size 1, requested type "simple"
 16925                           ; Number of cases is 1, Range of values is 0 to 0
 16926                           ; switch strategies available:
 16927                           ; Name         Instructions Cycles
 16928                           ; simple_byte            4     3 (average)
 16929                           ;	Chosen strategy is simple_byte
 16930   00AA22  51E4               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16931   00AA24  0A00               	xorlw	0	; case 0
 16932   00AA26  A4D8               	btfss	status,2,c
 16933   00AA28  0012               	return	
 16934                           
 16935                           ; BSR set to: 1
 16936                           ; Switch size 1, requested type "simple"
 16937                           ; Number of cases is 3, Range of values is 0 to 2
 16938                           ; switch strategies available:
 16939                           ; Name         Instructions Cycles
 16940                           ; simple_byte           10     6 (average)
 16941                           ;	Chosen strategy is simple_byte
 16942   00AA2A  51E3               	movf	??_pollTimedResponse& (0+255),w,b
 16943   00AA2C  0A00               	xorlw	0	; case 0
 16944   00AA2E  B4D8               	btfsc	status,2,c
 16945   00AA30  D7E7               	goto	l24088
 16946   00AA32  0A01               	xorlw	1	; case 1
 16947   00AA34  B4D8               	btfsc	status,2,c
 16948   00AA36  0012               	return	
 16949   00AA38  0A03               	xorlw	3	; case 2
 16950   00AA3A  A4D8               	btfss	status,2,c
 16951   00AA3C  0012               	return	
 16952   00AA3E  D7EC               	goto	l24098
 16953   00AA40                     __end_of_pollTimedResponse:
 16954                           	callstack 0
 16955                           
 16956 ;; *************** function _reqevCallback *****************
 16957 ;; Defined at:
 16958 ;;		line 832 in file "../../VLCBlib_PIC/event_teach_large.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;  tableIndex      1    wreg     unsigned char 
 16961 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 16962 ;;  step            1   27[BANK1 ] unsigned char 
 16963 ;; Auto vars:     Size  Location     Type
 16964 ;;  tableIndex      1   40[BANK1 ] unsigned char 
 16965 ;;  eventNumber     2   38[BANK1 ] struct Word
 16966 ;;  nodeNumber      2   36[BANK1 ] struct Word
 16967 ;;  ev              2   34[BANK1 ] short 
 16968 ;;  nEv             1   33[BANK1 ] unsigned char 
 16969 ;; Return value:  Size  Location     Type
 16970 ;;                  1    wreg      enum E12935
 16971 ;; Registers used:
 16972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16973 ;; Tracked objects:
 16974 ;;		On entry : 0/0
 16975 ;;		On exit  : 0/0
 16976 ;;		Unchanged: 0/0
 16977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16978 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16979 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16980 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16981 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16982 ;;Total ram usage:       15 bytes
 16983 ;; Hardware stack levels used: 1
 16984 ;; Hardware stack levels required when called: 17
 16985 ;; This function calls:
 16986 ;;		_getEN
 16987 ;;		_getEv
 16988 ;;		_getNN
 16989 ;;		_numEv
 16990 ;;		_sendMessage6
 16991 ;; This function is called by:
 16992 ;;		_doReqev
 16993 ;;		_pollTimedResponse
 16994 ;; This function uses a non-reentrant model
 16995 ;;
 16996                           
 16997                           	psect	text42
 16998   009ED6                     __ptext42:
 16999                           	callstack 0
 17000   009ED6                     _reqevCallback:
 17001                           	callstack 11
 17002                           
 17003                           ;incstack = 0
 17004                           ;reqevCallback@tableIndex stored from wreg
 17005   009ED6  0101               	movlb	1	; () banked
 17006   009ED8  6FE2               	movwf	reqevCallback@tableIndex& (0+255),b
 17007                           
 17008                           ;../../VLCBlib_PIC/event_teach_large.c: 833:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 835:     uint8_t nEv = numEv(tableIndex);
 17009   009EDA  0101               	movlb	1	; () banked
 17010   009EDC  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17011   009EDE  EC54  F045         	call	_numEv
 17012   009EE2  0101               	movlb	1	; () banked
 17013   009EE4  6FDB               	movwf	reqevCallback@nEv& (0+255),b
 17014                           
 17015                           ; BSR set to: 1
 17016                           ;../../VLCBlib_PIC/event_teach_large.c: 836:     int16_t ev;;../../VLCBlib_PIC/event_tea
      +                          ch_large.c: 838:     if (step+1 > nEv) {
 17017   009EE6  51D5               	movf	reqevCallback@step& (0+255),w,b
 17018   009EE8  6FD6               	movwf	??_reqevCallback& (0+255),b
 17019   009EEA  6BD7               	clrf	(??_reqevCallback+1)& (0+255),b
 17020   009EEC  0E01               	movlw	1
 17021   009EEE  27D6               	addwf	??_reqevCallback& (0+255),f,b
 17022   009EF0  0E00               	movlw	0
 17023   009EF2  23D7               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 17024   009EF4  51DB               	movf	reqevCallback@nEv& (0+255),w,b
 17025   009EF6  6FD8               	movwf	(??_reqevCallback+2)& (0+255),b
 17026   009EF8  6BD9               	clrf	(??_reqevCallback+3)& (0+255),b
 17027   009EFA  51D6               	movf	??_reqevCallback& (0+255),w,b
 17028   009EFC  5DD8               	subwf	(??_reqevCallback+2)& (0+255),w,b
 17029   009EFE  51D9               	movf	(??_reqevCallback+3)& (0+255),w,b
 17030   009F00  0A80               	xorlw	128
 17031   009F02  6FDA               	movwf	(??_reqevCallback+4)& (0+255),b
 17032   009F04  51D7               	movf	(??_reqevCallback+1)& (0+255),w,b
 17033   009F06  0A80               	xorlw	128
 17034   009F08  59DA               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 17035   009F0A  B0D8               	btfsc	status,0,c
 17036   009F0C  D002               	goto	l22678
 17037                           
 17038                           ; BSR set to: 1
 17039                           ;../../VLCBlib_PIC/event_teach_large.c: 839:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17040   009F0E  0E00               	movlw	0
 17041   009F10  0012               	return	
 17042   009F12                     l22678:
 17043                           
 17044                           ; BSR set to: 1
 17045                           ;../../VLCBlib_PIC/event_teach_large.c: 842:     nodeNumber.word = getNN(tableIndex);
 17046   009F12  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17047   009F14  ECBF  F049         	call	_getNN
 17048   009F18  C097  F1DE         	movff	?_getNN,reqevCallback@nodeNumber
 17049   009F1C  C098  F1DF         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 17050                           
 17051                           ;../../VLCBlib_PIC/event_teach_large.c: 843:     eventNumber.word = getEN(tableIndex);
 17052   009F20  0101               	movlb	1	; () banked
 17053   009F22  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17054   009F24  EC9B  F055         	call	_getEN
 17055   009F28  C097  F1E0         	movff	?_getEN,reqevCallback@eventNumber
 17056   009F2C  C098  F1E1         	movff	?_getEN+1,reqevCallback@eventNumber+1
 17057                           
 17058                           ;../../VLCBlib_PIC/event_teach_large.c: 844:     ev = getEv(tableIndex, step);
 17059   009F30  C1D5  F09D         	movff	reqevCallback@step,getEv@evNum
 17060   009F34  0101               	movlb	1	; () banked
 17061   009F36  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17062   009F38  EC0A  F03C         	call	_getEv
 17063   009F3C  C09D  F1DC         	movff	?_getEv,reqevCallback@ev
 17064   009F40  C09E  F1DD         	movff	?_getEv+1,reqevCallback@ev+1
 17065                           
 17066                           ;../../VLCBlib_PIC/event_teach_large.c: 845:     if (ev >= 0) {
 17067   009F44  0101               	movlb	1	; () banked
 17068   009F46  BFDD               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 17069   009F48  D00F               	goto	l22684
 17070                           
 17071                           ; BSR set to: 1
 17072                           ;../../VLCBlib_PIC/event_teach_large.c: 846:         sendMessage6(OPC_EVANS, nodeNumber.
      +                          bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint
      +                          8_t)ev);
 17073   009F4A  C1DF  F1C2         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 17074   009F4E  C1DE  F1C3         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 17075   009F52  C1E1  F1C4         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 17076   009F56  C1E0  F1C5         	movff	reqevCallback@eventNumber,sendMessage6@data4
 17077   009F5A  29D5               	incf	reqevCallback@step& (0+255),w,b
 17078   009F5C  6FC6               	movwf	sendMessage6@data5& (0+255),b
 17079   009F5E  C1DC  F1C7         	movff	reqevCallback@ev,sendMessage6@data6
 17080   009F62  0ED3               	movlw	211
 17081   009F64  EC99  F05F         	call	_sendMessage6
 17082   009F68                     l22684:
 17083                           
 17084                           ;../../VLCBlib_PIC/event_teach_large.c: 848:     return TIMED_RESPONSE_RESULT_NEXT;
 17085   009F68  0E02               	movlw	2
 17086   009F6A  0012               	return		;funcret
 17087   009F6C                     __end_of_reqevCallback:
 17088                           	callstack 0
 17089                           
 17090 ;; *************** function _nerdCallback *****************
 17091 ;; Defined at:
 17092 ;;		line 604 in file "../../VLCBlib_PIC/event_teach_large.c"
 17093 ;; Parameters:    Size  Location     Type
 17094 ;;  type            1    wreg     unsigned char 
 17095 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17096 ;;  step            1   27[BANK1 ] unsigned char 
 17097 ;; Auto vars:     Size  Location     Type
 17098 ;;  type            1    0[COMRAM] unsigned char 
 17099 ;;  eventNumber     2   30[BANK1 ] struct Word
 17100 ;;  nodeNumber      2   28[BANK1 ] struct Word
 17101 ;; Return value:  Size  Location     Type
 17102 ;;                  1    wreg      enum E12935
 17103 ;; Registers used:
 17104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17105 ;; Tracked objects:
 17106 ;;		On entry : 0/0
 17107 ;;		On exit  : 0/0
 17108 ;;		Unchanged: 0/0
 17109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17110 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17111 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17113 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17114 ;;Total ram usage:        6 bytes
 17115 ;; Hardware stack levels used: 1
 17116 ;; Hardware stack levels required when called: 17
 17117 ;; This function calls:
 17118 ;;		_getEN
 17119 ;;		_getNN
 17120 ;;		_sendMessage7
 17121 ;;		_tableIndexToEvtIdx
 17122 ;;		_validStart
 17123 ;; This function is called by:
 17124 ;;		_doNerd
 17125 ;;		_pollTimedResponse
 17126 ;; This function uses a non-reentrant model
 17127 ;;
 17128                           
 17129                           	psect	text43
 17130   00B0EC                     __ptext43:
 17131                           	callstack 0
 17132   00B0EC                     _nerdCallback:
 17133                           	callstack 11
 17134                           
 17135                           ;../../VLCBlib_PIC/event_teach_large.c: 605:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 607:     if (step >= 255) {
 17136                           
 17137                           ;incstack = 0
 17138   00B0EC  0101               	movlb	1	; () banked
 17139   00B0EE  29D5               	incf	nerdCallback@step& (0+255),w,b
 17140   00B0F0  A4D8               	btfss	status,2,c
 17141   00B0F2  D002               	goto	l22660
 17142                           
 17143                           ; BSR set to: 1
 17144                           ;../../VLCBlib_PIC/event_teach_large.c: 608:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17145   00B0F4  0E00               	movlw	0
 17146   00B0F6  0012               	return	
 17147   00B0F8                     l22660:
 17148                           
 17149                           ; BSR set to: 1
 17150                           ;../../VLCBlib_PIC/event_teach_large.c: 611:     if (validStart(step)) {
 17151   00B0F8  51D5               	movf	nerdCallback@step& (0+255),w,b
 17152   00B0FA  EC39  F05C         	call	_validStart
 17153   00B0FE  0900               	iorlw	0
 17154   00B100  B4D8               	btfsc	status,2,c
 17155   00B102  D025               	goto	l22666
 17156                           
 17157                           ;../../VLCBlib_PIC/event_teach_large.c: 612:         nodeNumber.word = getNN(step);
 17158   00B104  0101               	movlb	1	; () banked
 17159   00B106  51D5               	movf	nerdCallback@step& (0+255),w,b
 17160   00B108  ECBF  F049         	call	_getNN
 17161   00B10C  C097  F1D6         	movff	?_getNN,nerdCallback@nodeNumber
 17162   00B110  C098  F1D7         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 17163                           
 17164                           ;../../VLCBlib_PIC/event_teach_large.c: 613:         eventNumber.word = getEN(step);
 17165   00B114  0101               	movlb	1	; () banked
 17166   00B116  51D5               	movf	nerdCallback@step& (0+255),w,b
 17167   00B118  EC9B  F055         	call	_getEN
 17168   00B11C  C097  F1D8         	movff	?_getEN,nerdCallback@eventNumber
 17169   00B120  C098  F1D9         	movff	?_getEN+1,nerdCallback@eventNumber+1
 17170                           
 17171                           ;../../VLCBlib_PIC/event_teach_large.c: 614:         sendMessage7(OPC_ENRSP, nn.bytes.hi
      +                          , nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumb
      +                          er.bytes.lo, tableIndexToEvtIdx(step));
 17172   00B124  C0BE  F1C2         	movff	_nn+1,sendMessage7@data1
 17173   00B128  C0BD  F1C3         	movff	_nn,sendMessage7@data2
 17174   00B12C  C1D7  F1C4         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 17175   00B130  C1D6  F1C5         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 17176   00B134  C1D9  F1C6         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 17177   00B138  C1D8  F1C7         	movff	nerdCallback@eventNumber,sendMessage7@data6
 17178   00B13C  0101               	movlb	1	; () banked
 17179   00B13E  51D5               	movf	nerdCallback@step& (0+255),w,b
 17180   00B140  EC04  F063         	call	_tableIndexToEvtIdx
 17181   00B144  0101               	movlb	1	; () banked
 17182   00B146  6FC8               	movwf	sendMessage7@data7& (0+255),b
 17183   00B148  0EF2               	movlw	242
 17184   00B14A  ECC9  F05F         	call	_sendMessage7
 17185   00B14E                     l22666:
 17186                           
 17187                           ;../../VLCBlib_PIC/event_teach_large.c: 616:     return TIMED_RESPONSE_RESULT_NEXT;
 17188   00B14E  0E02               	movlw	2
 17189   00B150  0012               	return		;funcret
 17190   00B152                     __end_of_nerdCallback:
 17191                           	callstack 0
 17192                           
 17193 ;; *************** function _nvTRnvrdCallback *****************
 17194 ;; Defined at:
 17195 ;;		line 371 in file "../../VLCBlib_PIC/nv.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;  type            1    wreg     unsigned char 
 17198 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17199 ;;  step            1   27[BANK1 ] unsigned char 
 17200 ;; Auto vars:     Size  Location     Type
 17201 ;;  type            1    0[COMRAM] unsigned char 
 17202 ;;  valueOrError    2   28[BANK1 ] short 
 17203 ;; Return value:  Size  Location     Type
 17204 ;;                  1    wreg      enum E12952
 17205 ;; Registers used:
 17206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17207 ;; Tracked objects:
 17208 ;;		On entry : 0/0
 17209 ;;		On exit  : 0/0
 17210 ;;		Unchanged: 0/0
 17211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17212 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17213 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17216 ;;Total ram usage:        4 bytes
 17217 ;; Hardware stack levels used: 1
 17218 ;; Hardware stack levels required when called: 17
 17219 ;; This function calls:
 17220 ;;		_getNV
 17221 ;;		_sendMessage4
 17222 ;; This function is called by:
 17223 ;;		_nvProcessMessage
 17224 ;;		_pollTimedResponse
 17225 ;; This function uses a non-reentrant model
 17226 ;;
 17227                           
 17228                           	psect	text44
 17229   00BBE8                     __ptext44:
 17230                           	callstack 0
 17231   00BBE8                     _nvTRnvrdCallback:
 17232                           	callstack 11
 17233                           
 17234                           ;../../VLCBlib_PIC/nv.c: 372:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 373:    
      +                           if (step > (15+7*16)) {
 17235                           
 17236                           ;incstack = 0
 17237   00BBE8  0E7F               	movlw	127
 17238   00BBEA  0101               	movlb	1	; () banked
 17239   00BBEC  65D5               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 17240   00BBEE  D002               	goto	l22112
 17241   00BBF0                     u23030:
 17242                           
 17243                           ; BSR set to: 1
 17244                           ;../../VLCBlib_PIC/nv.c: 374:         return TIMED_RESPONSE_RESULT_FINISHED;
 17245   00BBF0  0E00               	movlw	0
 17246   00BBF2  0012               	return	
 17247   00BBF4                     l22112:
 17248                           
 17249                           ; BSR set to: 1
 17250                           ;../../VLCBlib_PIC/nv.c: 376:     valueOrError = getNV(step+1);
 17251   00BBF4  29D5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17252   00BBF6  EC52  F05E         	call	_getNV
 17253   00BBFA  C08D  F1D6         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 17254   00BBFE  C08E  F1D7         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 17255                           
 17256                           ;../../VLCBlib_PIC/nv.c: 377:     if (valueOrError < 0) {
 17257   00BC02  0101               	movlb	1	; () banked
 17258   00BC04  BFD7               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 17259   00BC06  D7F4               	goto	u23030
 17260                           
 17261                           ; BSR set to: 1
 17262                           ;../../VLCBlib_PIC/nv.c: 380:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 17263   00BC08  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 17264   00BC0C  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 17265   00BC10  29D5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17266   00BC12  6FC4               	movwf	sendMessage4@data3& (0+255),b
 17267   00BC14  C1D6  F1C5         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 17268   00BC18  0E97               	movlw	151
 17269   00BC1A  ECF9  F05F         	call	_sendMessage4
 17270                           
 17271                           ;../../VLCBlib_PIC/nv.c: 382:     nvDiagnostics[0x01].asUint++;
 17272   00BC1E  0101               	movlb	1	; () banked
 17273   00BC20  4BA6               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 17274   00BC22  2BA7               	incf	(_nvDiagnostics+3)& (0+255),f,b
 17275                           
 17276                           ; BSR set to: 1
 17277                           ;../../VLCBlib_PIC/nv.c: 384:     return TIMED_RESPONSE_RESULT_NEXT;
 17278   00BC24  0E02               	movlw	2
 17279                           
 17280                           ; BSR set to: 1
 17281   00BC26  0012               	return		;funcret
 17282   00BC28                     __end_of_nvTRnvrdCallback:
 17283                           	callstack 0
 17284                           
 17285 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 17286 ;; Defined at:
 17287 ;;		line 896 in file "../../VLCBlib_PIC/mns.c"
 17288 ;; Parameters:    Size  Location     Type
 17289 ;;  type            1    wreg     unsigned char 
 17290 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17291 ;;  step            1   27[BANK1 ] unsigned char 
 17292 ;; Auto vars:     Size  Location     Type
 17293 ;;  type            1    0[COMRAM] unsigned char 
 17294 ;; Return value:  Size  Location     Type
 17295 ;;                  1    wreg      enum E12935
 17296 ;; Registers used:
 17297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17298 ;; Tracked objects:
 17299 ;;		On entry : 0/0
 17300 ;;		On exit  : 0/0
 17301 ;;		Unchanged: 0/0
 17302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17303 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17305 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17306 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17307 ;;Total ram usage:        6 bytes
 17308 ;; Hardware stack levels used: 1
 17309 ;; Hardware stack levels required when called: 17
 17310 ;; This function calls:
 17311 ;;		_sendMessage5
 17312 ;; This function is called by:
 17313 ;;		_mnsProcessMessage
 17314 ;;		_pollTimedResponse
 17315 ;; This function uses a non-reentrant model
 17316 ;;
 17317                           
 17318                           	psect	text45
 17319   00A406                     __ptext45:
 17320                           	callstack 0
 17321   00A406                     _mnsTRserviceDiscoveryCallback:
 17322                           	callstack 11
 17323                           
 17324                           ;../../VLCBlib_PIC/mns.c: 897:     if (step >= 9) {
 17325                           
 17326                           ; BSR set to: 1
 17327                           ;incstack = 0
 17328   00A406  0E08               	movlw	8
 17329   00A408  0101               	movlb	1	; () banked
 17330   00A40A  65D5               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 17331   00A40C  D002               	goto	l22030
 17332                           
 17333                           ; BSR set to: 1
 17334                           ;../../VLCBlib_PIC/mns.c: 898:         return TIMED_RESPONSE_RESULT_FINISHED;
 17335   00A40E  0E00               	movlw	0
 17336   00A410  0012               	return	
 17337   00A412                     l22030:
 17338                           
 17339                           ; BSR set to: 1
 17340                           ;../../VLCBlib_PIC/mns.c: 901:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 17341   00A412  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 17342   00A416  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 17343   00A41A  29D5               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17344   00A41C  6FC4               	movwf	sendMessage5@data3& (0+255),b
 17345   00A41E  51D5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17346   00A420  0D02               	mullw	2
 17347   00A422  0E69               	movlw	low _services
 17348   00A424  24F3               	addwf	243,w,c
 17349   00A426  6EF6               	movwf	tblptrl,c
 17350   00A428  0EEE               	movlw	high _services
 17351   00A42A  20F4               	addwfc	244,w,c
 17352   00A42C  6EF7               	movwf	tblptrh,c
 17353   00A42E                     	if	1	;There are 3 active tblptr bytes
 17354   00A42E  6AF8               	clrf	tblptru,c
 17355   00A430  0E00               	movlw	low (__mediumconst shr (0+16))
 17356   00A432  22F8               	addwfc	tblptru,f,c
 17357   00A434                     	endif
 17358   00A434  0009               	tblrd		*+
 17359   00A436  CFF5 F1D6          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 17360   00A43A  0009               	tblrd		*+
 17361   00A43C  CFF5 F1D7          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 17362   00A440  C1D6  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 17363   00A444  C1D7  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 17364   00A448                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17365   00A448  6AF8               	clrf	tblptru,c
 17366   00A44A                     	endif
 17367   00A44A                     	if	0	;tblptru may be non-zero
 17368   00A44A                     	endif
 17369   00A44A  0008               	tblrd		*
 17370   00A44C  CFF5 F1C5          	movff	tablat,sendMessage5@data4
 17371   00A450  51D5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17372   00A452  0D02               	mullw	2
 17373   00A454  0E69               	movlw	low _services
 17374   00A456  24F3               	addwf	243,w,c
 17375   00A458  6EF6               	movwf	tblptrl,c
 17376   00A45A  0EEE               	movlw	high _services
 17377   00A45C  20F4               	addwfc	244,w,c
 17378   00A45E  6EF7               	movwf	tblptrh,c
 17379   00A460                     	if	1	;There are 3 active tblptr bytes
 17380   00A460  6AF8               	clrf	tblptru,c
 17381   00A462  0E00               	movlw	low (__mediumconst shr (0+16))
 17382   00A464  22F8               	addwfc	tblptru,f,c
 17383   00A466                     	endif
 17384   00A466  0009               	tblrd		*+
 17385   00A468  CFF5 F1D8          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 17386   00A46C  0009               	tblrd		*+
 17387   00A46E  CFF5 F1D9          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 17388   00A472  0E01               	movlw	1
 17389   00A474  27D8               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 17390   00A476  0E00               	movlw	0
 17391   00A478  23D9               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 17392   00A47A  C1D8  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 17393   00A47E  C1D9  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 17394   00A482                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17395   00A482  6AF8               	clrf	tblptru,c
 17396   00A484                     	endif
 17397   00A484                     	if	0	;tblptru may be non-zero
 17398   00A484                     	endif
 17399   00A484  0008               	tblrd		*
 17400   00A486  CFF5 F1C6          	movff	tablat,sendMessage5@data5
 17401   00A48A  0EAC               	movlw	172
 17402   00A48C  ECE1  F05F         	call	_sendMessage5
 17403                           
 17404                           ;../../VLCBlib_PIC/mns.c: 903:     return TIMED_RESPONSE_RESULT_NEXT;
 17405   00A490  0E02               	movlw	2
 17406   00A492  0012               	return		;funcret
 17407   00A494                     __end_of_mnsTRserviceDiscoveryCallback:
 17408                           	callstack 0
 17409                           
 17410 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 17411 ;; Defined at:
 17412 ;;		line 915 in file "../../VLCBlib_PIC/mns.c"
 17413 ;; Parameters:    Size  Location     Type
 17414 ;;  type            1    wreg     unsigned char 
 17415 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17416 ;;  step            1   27[BANK1 ] unsigned char 
 17417 ;; Auto vars:     Size  Location     Type
 17418 ;;  type            1    0[COMRAM] unsigned char 
 17419 ;;  d               2   32[BANK1 ] PTR struct DiagnosticVal
 17420 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 17421 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 17422 ;; Return value:  Size  Location     Type
 17423 ;;                  1    wreg      enum E12935
 17424 ;; Registers used:
 17425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17426 ;; Tracked objects:
 17427 ;;		On entry : 0/0
 17428 ;;		On exit  : 0/0
 17429 ;;		Unchanged: 0/0
 17430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17431 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17432 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17433 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17434 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17435 ;;Total ram usage:        8 bytes
 17436 ;; Hardware stack levels used: 1
 17437 ;; Hardware stack levels required when called: 17
 17438 ;; This function calls:
 17439 ;;		NULL
 17440 ;;		_ackGetDiagnostic
 17441 ;;		_canGetDiagnostic
 17442 ;;		_consumer2QGetDiagnostic
 17443 ;;		_mnsGetDiagnostic
 17444 ;;		_nvGetDiagnostic
 17445 ;;		_producerGetDiagnostic
 17446 ;;		_sendMessage6
 17447 ;;		_teachGetDiagnostic
 17448 ;; This function is called by:
 17449 ;;		_mnsProcessMessage
 17450 ;;		_pollTimedResponse
 17451 ;; This function uses a non-reentrant model
 17452 ;;
 17453                           
 17454                           	psect	text46
 17455   008170                     __ptext46:
 17456                           	callstack 0
 17457   008170                     _mnsTRallDiagnosticsCallback:
 17458                           	callstack 11
 17459                           
 17460                           ;../../VLCBlib_PIC/mns.c: 916:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 17461                           
 17462                           ;incstack = 0
 17463   008170  0101               	movlb	1	; () banked
 17464   008172  51D4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17465   008174  0D02               	mullw	2
 17466   008176  0E69               	movlw	low _services
 17467   008178  24F3               	addwf	243,w,c
 17468   00817A  6EF6               	movwf	tblptrl,c
 17469   00817C  0EEE               	movlw	high _services
 17470   00817E  20F4               	addwfc	244,w,c
 17471   008180  6EF7               	movwf	tblptrh,c
 17472   008182                     	if	1	;There are 3 active tblptr bytes
 17473   008182  6AF8               	clrf	tblptru,c
 17474   008184  0E00               	movlw	low (__mediumconst shr (0+16))
 17475   008186  22F8               	addwfc	tblptru,f,c
 17476   008188                     	endif
 17477   008188  0009               	tblrd		*+
 17478   00818A  CFF5 F1D6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17479   00818E  0009               	tblrd		*+
 17480   008190  CFF5 F1D7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17481   008194  0E10               	movlw	16
 17482   008196  27D6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17483   008198  0E00               	movlw	0
 17484   00819A  23D7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17485   00819C  C1D6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17486   0081A0  C1D7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17487   0081A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17488   0081A4  6AF8               	clrf	tblptru,c
 17489   0081A6                     	endif
 17490   0081A6                     	if	0	;tblptru may be non-zero
 17491   0081A6                     	endif
 17492   0081A6  0009               	tblrd		*+
 17493   0081A8  50F5               	movf	tablat,w,c
 17494   0081AA  0009               	tblrd		*+
 17495   0081AC  10F5               	iorwf	tablat,w,c
 17496   0081AE  A4D8               	btfss	status,2,c
 17497   0081B0  D011               	goto	l22044
 17498                           
 17499                           ; BSR set to: 1
 17500                           ;../../VLCBlib_PIC/mns.c: 917:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 17501   0081B2  C0BE  F1C2         	movff	_nn+1,sendMessage6@data1
 17502   0081B6  C0BD  F1C3         	movff	_nn,sendMessage6@data2
 17503   0081BA  29D4               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17504   0081BC  6FC4               	movwf	sendMessage6@data3& (0+255),b
 17505   0081BE  0E00               	movlw	0
 17506   0081C0  6FC5               	movwf	sendMessage6@data4& (0+255),b
 17507   0081C2  0E00               	movlw	0
 17508   0081C4  6FC6               	movwf	sendMessage6@data5& (0+255),b
 17509   0081C6  0E00               	movlw	0
 17510   0081C8  6FC7               	movwf	sendMessage6@data6& (0+255),b
 17511   0081CA  0EC7               	movlw	199
 17512   0081CC  EC99  F05F         	call	_sendMessage6
 17513   0081D0                     l22040:
 17514                           
 17515                           ;../../VLCBlib_PIC/mns.c: 918:         return TIMED_RESPONSE_RESULT_FINISHED;
 17516   0081D0  0E00               	movlw	0
 17517   0081D2  0012               	return	
 17518   0081D4                     l22044:
 17519                           
 17520                           ; BSR set to: 1
 17521                           ;../../VLCBlib_PIC/mns.c: 920:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 17522   0081D4  51D4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17523   0081D6  0D02               	mullw	2
 17524   0081D8  0E69               	movlw	low _services
 17525   0081DA  24F3               	addwf	243,w,c
 17526   0081DC  6EF6               	movwf	tblptrl,c
 17527   0081DE  0EEE               	movlw	high _services
 17528   0081E0  20F4               	addwfc	244,w,c
 17529   0081E2  6EF7               	movwf	tblptrh,c
 17530   0081E4                     	if	1	;There are 3 active tblptr bytes
 17531   0081E4  6AF8               	clrf	tblptru,c
 17532   0081E6  0E00               	movlw	low (__mediumconst shr (0+16))
 17533   0081E8  22F8               	addwfc	tblptru,f,c
 17534   0081EA                     	endif
 17535   0081EA  0009               	tblrd		*+
 17536   0081EC  CFF5 F1D6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17537   0081F0  0009               	tblrd		*+
 17538   0081F2  CFF5 F1D7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17539   0081F6  0E10               	movlw	16
 17540   0081F8  27D6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17541   0081FA  0E00               	movlw	0
 17542   0081FC  23D7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17543   0081FE  C1D6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17544   008202  C1D7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17545   008206                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17546   008206  6AF8               	clrf	tblptru,c
 17547   008208                     	endif
 17548   008208                     	if	0	;tblptru may be non-zero
 17549   008208                     	endif
 17550   008208  0009               	tblrd		*+
 17551   00820A  CFF5 F1D8          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 17552   00820E  0009               	tblrd		*+
 17553   008210  CFF5 F1D9          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 17554   008214  D801               	call	u22988
 17555   008216  D00A               	goto	u22989
 17556   008218                     u22988:
 17557   008218  0005               	push	
 17558   00821A  6EFA               	movwf	pclath,c
 17559   00821C  51D8               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 17560   00821E  6EFD               	movwf	tosl,c
 17561   008220  51D9               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 17562   008222  6EFE               	movwf	tosh,c
 17563   008224  6AFF               	clrf	tosu,c
 17564   008226  50FA               	movf	pclath,w,c
 17565   008228  51D5               	movf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17566   00822A  0012               	return		;indir
 17567   00822C                     u22989:
 17568   00822C  C096  F1DA         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 17569   008230  C097  F1DB         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 17570                           
 17571                           ;../../VLCBlib_PIC/mns.c: 921:     if (d == ((void*)0)) {
 17572   008234  0101               	movlb	1	; () banked
 17573   008236  51DA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17574   008238  11DB               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17575   00823A  B4D8               	btfsc	status,2,c
 17576   00823C  D7C9               	goto	l22040
 17577                           
 17578                           ; BSR set to: 1
 17579                           ;../../VLCBlib_PIC/mns.c: 926:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 17580   00823E  C0BE  F1C2         	movff	_nn+1,sendMessage6@data1
 17581   008242  C0BD  F1C3         	movff	_nn,sendMessage6@data2
 17582   008246  29D4               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17583   008248  6FC4               	movwf	sendMessage6@data3& (0+255),b
 17584   00824A  C1D5  F1C5         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 17585   00824E  EE20 F001          	lfsr	2,1
 17586   008252  51DA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17587   008254  26D9               	addwf	fsr2l,f,c
 17588   008256  51DB               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17589   008258  22DA               	addwfc	fsr2h,f,c
 17590   00825A  50DF               	movf	indf2,w,c
 17591   00825C  6FC6               	movwf	sendMessage6@data5& (0+255),b
 17592   00825E  C1DA  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 17593   008262  C1DB  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 17594   008266  50DF               	movf	indf2,w,c
 17595   008268  6FC7               	movwf	sendMessage6@data6& (0+255),b
 17596   00826A  0EC7               	movlw	199
 17597   00826C  EC99  F05F         	call	_sendMessage6
 17598                           
 17599                           ;../../VLCBlib_PIC/mns.c: 927:     return TIMED_RESPONSE_RESULT_NEXT;
 17600   008270  0E02               	movlw	2
 17601   008272  0012               	return		;funcret
 17602   008274                     __end_of_mnsTRallDiagnosticsCallback:
 17603                           	callstack 0
 17604                           
 17605 ;; *************** function _mnsTRrqnpnCallback *****************
 17606 ;; Defined at:
 17607 ;;		line 939 in file "../../VLCBlib_PIC/mns.c"
 17608 ;; Parameters:    Size  Location     Type
 17609 ;;  type            1    wreg     unsigned char 
 17610 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17611 ;;  step            1   27[BANK1 ] unsigned char 
 17612 ;; Auto vars:     Size  Location     Type
 17613 ;;  type            1    0[COMRAM] unsigned char 
 17614 ;; Return value:  Size  Location     Type
 17615 ;;                  1    wreg      enum E12935
 17616 ;; Registers used:
 17617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17618 ;; Tracked objects:
 17619 ;;		On entry : 0/0
 17620 ;;		On exit  : 0/0
 17621 ;;		Unchanged: 0/0
 17622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17623 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17626 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17627 ;;Total ram usage:        2 bytes
 17628 ;; Hardware stack levels used: 1
 17629 ;; Hardware stack levels required when called: 17
 17630 ;; This function calls:
 17631 ;;		_getParameter
 17632 ;;		_sendMessage4
 17633 ;; This function is called by:
 17634 ;;		_mnsProcessMessage
 17635 ;;		_pollTimedResponse
 17636 ;; This function uses a non-reentrant model
 17637 ;;
 17638                           
 17639                           	psect	text47
 17640   00C106                     __ptext47:
 17641                           	callstack 0
 17642   00C106                     _mnsTRrqnpnCallback:
 17643                           	callstack 11
 17644                           
 17645                           ;../../VLCBlib_PIC/mns.c: 940:     if (step >= 20) {
 17646                           
 17647                           ;incstack = 0
 17648   00C106  0E13               	movlw	19
 17649   00C108  0101               	movlb	1	; () banked
 17650   00C10A  65D5               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 17651   00C10C  D002               	goto	l22064
 17652                           
 17653                           ; BSR set to: 1
 17654                           ;../../VLCBlib_PIC/mns.c: 941:         return TIMED_RESPONSE_RESULT_FINISHED;
 17655   00C10E  0E00               	movlw	0
 17656   00C110  0012               	return	
 17657   00C112                     l22064:
 17658                           
 17659                           ; BSR set to: 1
 17660                           ;../../VLCBlib_PIC/mns.c: 943:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17661   00C112  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 17662   00C116  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 17663   00C11A  29D5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17664   00C11C  6FC4               	movwf	sendMessage4@data3& (0+255),b
 17665   00C11E  29D5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17666   00C120  EC24  F043         	call	_getParameter
 17667   00C124  0101               	movlb	1	; () banked
 17668   00C126  6FC5               	movwf	sendMessage4@data4& (0+255),b
 17669   00C128  0E9B               	movlw	155
 17670   00C12A  ECF9  F05F         	call	_sendMessage4
 17671                           
 17672                           ;../../VLCBlib_PIC/mns.c: 944:     return TIMED_RESPONSE_RESULT_NEXT;
 17673   00C12E  0E02               	movlw	2
 17674   00C130  0012               	return		;funcret
 17675   00C132                     __end_of_mnsTRrqnpnCallback:
 17676                           	callstack 0
 17677                           
 17678 ;; *************** function _sodTRCallback *****************
 17679 ;; Defined at:
 17680 ;;		line 403 in file "../universalEvents.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;  type            1    wreg     unsigned char 
 17683 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17684 ;;  step            1   27[BANK1 ] unsigned char 
 17685 ;; Auto vars:     Size  Location     Type
 17686 ;;  type            1    0[COMRAM] unsigned char 
 17687 ;;  io              1   38[BANK1 ] unsigned char 
 17688 ;;  flags           1   37[BANK1 ] unsigned char 
 17689 ;;  event_invert    1   36[BANK1 ] enum E12767
 17690 ;;  value           1   35[BANK1 ] enum E12787
 17691 ;;  disable_off     1   34[BANK1 ] enum E12767
 17692 ;;  happeningInd    1   33[BANK1 ] unsigned char 
 17693 ;;  send_off_ok     1   30[BANK1 ] enum E12767
 17694 ;;  send_on_ok      1   29[BANK1 ] enum E12767
 17695 ;;  disable_SOD_    1   28[BANK1 ] enum E12767
 17696 ;; Return value:  Size  Location     Type
 17697 ;;                  1    wreg      enum E13022
 17698 ;; Registers used:
 17699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17700 ;; Tracked objects:
 17701 ;;		On entry : 0/0
 17702 ;;		On exit  : 0/0
 17703 ;;		Unchanged: 0/0
 17704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17705 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17706 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17708 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17709 ;;Total ram usage:       13 bytes
 17710 ;; Hardware stack levels used: 1
 17711 ;; Hardware stack levels required when called: 19
 17712 ;; This function calls:
 17713 ;;		_APP_GetEventState
 17714 ;;		___awdiv
 17715 ;;		_getNV
 17716 ;;		_sendInvertedProducedEvent
 17717 ;; This function is called by:
 17718 ;;		_doSOD
 17719 ;;		_pollTimedResponse
 17720 ;; This function uses a non-reentrant model
 17721 ;;
 17722                           
 17723                           	psect	text48
 17724   008378                     __ptext48:
 17725                           	callstack 0
 17726   008378                     _sodTRCallback:
 17727                           	callstack 9
 17728                           
 17729                           ;../universalEvents.c: 404:     uint8_t io;;../universalEvents.c: 405:     uint8_t happe
      +                          ningIndex;;../universalEvents.c: 406:     Boolean disable_off;;../universalEvents.c: 407
      +                          :  Boolean send_on_ok;;../universalEvents.c: 408:  Boolean send_off_ok;;../universalEven
      +                          ts.c: 409:  Boolean event_inverted;;../universalEvents.c: 410:     Boolean disable_SOD_r
      +                          esponse;;../universalEvents.c: 411:     uint8_t flags;;../universalEvents.c: 412:     Ev
      +                          entState value;;../universalEvents.c: 415:     io = step/4;
 17730                           
 17731                           ;incstack = 0
 17732   008378  C1D5  F097         	movff	sodTRCallback@step,___awdiv@dividend
 17733   00837C  0100               	movlb	0	; () banked
 17734   00837E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17735   008380  0E00               	movlw	0
 17736   008382  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17737   008384  0E04               	movlw	4
 17738   008386  6F99               	movwf	___awdiv@divisor& (0+255),b
 17739   008388  EC1C  F053         	call	___awdiv	;wreg free
 17740   00838C  0100               	movlb	0	; () banked
 17741   00838E  5197               	movf	?___awdiv& (0+255),w,b
 17742   008390  0101               	movlb	1	; () banked
 17743   008392  6FE0               	movwf	sodTRCallback@io& (0+255),b
 17744                           
 17745                           ; BSR set to: 1
 17746                           ;../universalEvents.c: 416:     if (io >= 16) {
 17747   008394  0E0F               	movlw	15
 17748   008396  65E0               	cpfsgt	sodTRCallback@io& (0+255),b
 17749   008398  D002               	goto	l21580
 17750                           
 17751                           ; BSR set to: 1
 17752                           ;../universalEvents.c: 417:         return TIMED_RESPONSE_RESULT_FINISHED;
 17753   00839A  0E00               	movlw	0
 17754   00839C  0012               	return	
 17755   00839E                     l21580:
 17756                           
 17757                           ; BSR set to: 1
 17758                           ;../universalEvents.c: 419:     happeningIndex = step%4;
 17759   00839E  51D5               	movf	sodTRCallback@step& (0+255),w,b
 17760   0083A0  0B03               	andlw	3
 17761   0083A2  6FDB               	movwf	sodTRCallback@happeningIndex& (0+255),b
 17762                           
 17763                           ; BSR set to: 1
 17764                           ;../universalEvents.c: 420:     flags = (uint8_t)getNV((16 + 7*(io) + 1));;
 17765   0083A4  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17766   0083A6  0D07               	mullw	7
 17767   0083A8  50F3               	movf	243,w,c
 17768   0083AA  0F11               	addlw	17
 17769   0083AC  EC52  F05E         	call	_getNV
 17770   0083B0  0100               	movlb	0	; () banked
 17771   0083B2  518D               	movf	?_getNV& (0+255),w,b
 17772   0083B4  0101               	movlb	1	; () banked
 17773   0083B6  6FDF               	movwf	sodTRCallback@flags& (0+255),b
 17774                           
 17775                           ; BSR set to: 1
 17776                           ;../universalEvents.c: 421:     disable_SOD_response = flags & 0x20;
 17777   0083B8  51DF               	movf	sodTRCallback@flags& (0+255),w,b
 17778   0083BA  0B20               	andlw	32
 17779   0083BC  6FD6               	movwf	sodTRCallback@disable_SOD_response& (0+255),b
 17780                           
 17781                           ; BSR set to: 1
 17782                           ;../universalEvents.c: 423:     event_inverted = flags & 0x40;
 17783   0083BE  51DF               	movf	sodTRCallback@flags& (0+255),w,b
 17784   0083C0  0B40               	andlw	64
 17785   0083C2  6FDE               	movwf	sodTRCallback@event_inverted& (0+255),b
 17786                           
 17787                           ; BSR set to: 1
 17788                           ;../universalEvents.c: 424:     disable_off = flags & 0x08;
 17789   0083C4  51DF               	movf	sodTRCallback@flags& (0+255),w,b
 17790   0083C6  0B08               	andlw	8
 17791   0083C8  6FDC               	movwf	sodTRCallback@disable_off& (0+255),b
 17792                           
 17793                           ; BSR set to: 1
 17794                           ;../universalEvents.c: 425:     send_on_ok = !( disable_off && event_inverted );
 17795   0083CA  0E01               	movlw	1
 17796   0083CC  6FD9               	movwf	_sodTRCallback$1424& (0+255),b
 17797                           
 17798                           ; BSR set to: 1
 17799   0083CE  51DC               	movf	sodTRCallback@disable_off& (0+255),w,b
 17800   0083D0  B4D8               	btfsc	status,2,c
 17801   0083D2  D005               	goto	l21598
 17802                           
 17803                           ; BSR set to: 1
 17804   0083D4  51DE               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17805   0083D6  B4D8               	btfsc	status,2,c
 17806   0083D8  D002               	goto	l21598
 17807                           
 17808                           ; BSR set to: 1
 17809   0083DA  0E00               	movlw	0
 17810   0083DC  6FD9               	movwf	_sodTRCallback$1424& (0+255),b
 17811   0083DE                     l21598:
 17812                           
 17813                           ; BSR set to: 1
 17814   0083DE  C1D9  F1D7         	movff	_sodTRCallback$1424,sodTRCallback@send_on_ok
 17815                           
 17816                           ;../universalEvents.c: 426:     send_off_ok = !( disable_off && !event_inverted);
 17817   0083E2  0E01               	movlw	1
 17818   0083E4  6FDA               	movwf	_sodTRCallback$1425& (0+255),b
 17819   0083E6  51DC               	movf	sodTRCallback@disable_off& (0+255),w,b
 17820   0083E8  B4D8               	btfsc	status,2,c
 17821   0083EA  D005               	goto	l21604
 17822                           
 17823                           ; BSR set to: 1
 17824   0083EC  51DE               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17825   0083EE  A4D8               	btfss	status,2,c
 17826   0083F0  D002               	goto	l21604
 17827                           
 17828                           ; BSR set to: 1
 17829   0083F2  0E00               	movlw	0
 17830   0083F4  6FDA               	movwf	_sodTRCallback$1425& (0+255),b
 17831   0083F6                     l21604:
 17832                           
 17833                           ; BSR set to: 1
 17834   0083F6  C1DA  F1D8         	movff	_sodTRCallback$1425,sodTRCallback@send_off_ok
 17835                           
 17836                           ; BSR set to: 1
 17837                           ;../universalEvents.c: 428:     value = APP_GetEventState((8 + 4*(io))+happeningIndex);
 17838   0083FA  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17839   0083FC  0D04               	mullw	4
 17840   0083FE  50F3               	movf	243,w,c
 17841   008400  25DB               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17842   008402  0F08               	addlw	8
 17843   008404  EC41  F01E         	call	_APP_GetEventState
 17844   008408  0101               	movlb	1	; () banked
 17845   00840A  6FDD               	movwf	sodTRCallback@value& (0+255),b
 17846                           
 17847                           ;../universalEvents.c: 430:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17848   00840C  D00C               	goto	l21618
 17849   00840E                     l21608:
 17850                           
 17851                           ; BSR set to: 0
 17852                           ;../universalEvents.c: 436:             if (disable_SOD_response) {
 17853   00840E  0101               	movlb	1	; () banked
 17854   008410  51D6               	movf	sodTRCallback@disable_SOD_response& (0+255),w,b
 17855   008412  B4D8               	btfsc	status,2,c
 17856   008414  D01C               	goto	l21620
 17857   008416                     u22160:
 17858                           
 17859                           ;../universalEvents.c: 437:                 return TIMED_RESPONSE_RESULT_NEXT;
 17860   008416  0E02               	movlw	2
 17861   008418  0012               	return	
 17862   00841A                     l21614:
 17863                           
 17864                           ; BSR set to: 0
 17865                           ;../universalEvents.c: 448:             send_on_ok = TRUE;
 17866   00841A  0E01               	movlw	1
 17867   00841C  0101               	movlb	1	; () banked
 17868   00841E  6FD7               	movwf	sodTRCallback@send_on_ok& (0+255),b
 17869                           
 17870                           ;../universalEvents.c: 449:             send_off_ok = TRUE;
 17871   008420  0E01               	movlw	1
 17872   008422  6FD8               	movwf	sodTRCallback@send_off_ok& (0+255),b
 17873                           
 17874                           ;../universalEvents.c: 450:             break;
 17875   008424  D014               	goto	l21620
 17876   008426                     l21618:
 17877                           
 17878                           ; BSR set to: 1
 17879   008426  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17880   008428  0D07               	mullw	7
 17881   00842A  50F3               	movf	243,w,c
 17882   00842C  0F10               	addlw	16
 17883   00842E  EC52  F05E         	call	_getNV
 17884   008432  0100               	movlb	0	; () banked
 17885   008434  518D               	movf	?_getNV& (0+255),w,b
 17886                           
 17887                           ; Switch size 1, requested type "simple"
 17888                           ; Number of cases is 4, Range of values is 0 to 4
 17889                           ; switch strategies available:
 17890                           ; Name         Instructions Cycles
 17891                           ; simple_byte           13     7 (average)
 17892                           ;	Chosen strategy is simple_byte
 17893   008436  0A00               	xorlw	0	; case 0
 17894   008438  B4D8               	btfsc	status,2,c
 17895   00843A  D7E9               	goto	l21608
 17896   00843C  0A02               	xorlw	2	; case 2
 17897   00843E  B4D8               	btfsc	status,2,c
 17898   008440  D7EC               	goto	l21614
 17899   008442  0A01               	xorlw	1	; case 3
 17900   008444  B4D8               	btfsc	status,2,c
 17901   008446  D7E9               	goto	l21614
 17902   008448  0A07               	xorlw	7	; case 4
 17903   00844A  B4D8               	btfsc	status,2,c
 17904   00844C  D7E6               	goto	l21614
 17905   00844E                     l21620:
 17906                           
 17907                           ;../universalEvents.c: 453:     if (value != EVENT_UNKNOWN) {
 17908   00844E  0101               	movlb	1	; () banked
 17909   008450  29DD               	incf	sodTRCallback@value& (0+255),w,b
 17910   008452  B4D8               	btfsc	status,2,c
 17911   008454  D7E0               	goto	u22160
 17912                           
 17913                           ; BSR set to: 1
 17914                           ;../universalEvents.c: 454:         sendInvertedProducedEvent((8 + 4*(io))+happeningInde
      +                          x, value, event_inverted, send_on_ok, send_off_ok);
 17915   008456  C1DD  F1CC         	movff	sodTRCallback@value,sendInvertedProducedEvent@state
 17916   00845A  C1DE  F1CD         	movff	sodTRCallback@event_inverted,sendInvertedProducedEvent@invert
 17917   00845E  C1D7  F1CE         	movff	sodTRCallback@send_on_ok,sendInvertedProducedEvent@can_send_on
 17918   008462  C1D8  F1CF         	movff	sodTRCallback@send_off_ok,sendInvertedProducedEvent@can_send_off
 17919   008466  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17920   008468  0D04               	mullw	4
 17921   00846A  50F3               	movf	243,w,c
 17922   00846C  25DB               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17923   00846E  0F08               	addlw	8
 17924   008470  ECF7  F05C         	call	_sendInvertedProducedEvent
 17925   008474  D7D0               	goto	u22160
 17926   008476                     __end_of_sodTRCallback:
 17927                           	callstack 0
 17928                           
 17929 ;; *************** function _APP_GetEventState *****************
 17930 ;; Defined at:
 17931 ;;		line 427 in file "../main.c"
 17932 ;; Parameters:    Size  Location     Type
 17933 ;;  h               1    wreg     unsigned char 
 17934 ;; Auto vars:     Size  Location     Type
 17935 ;;  h               1    2[BANK1 ] unsigned char 
 17936 ;;  happeningInd    1    3[BANK1 ] unsigned char 
 17937 ;;  disable_off     1    1[BANK1 ] enum E12716
 17938 ;;  flags           1    0[BANK1 ] unsigned char 
 17939 ;; Return value:  Size  Location     Type
 17940 ;;                  1    wreg      enum E12736
 17941 ;; Registers used:
 17942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17943 ;; Tracked objects:
 17944 ;;		On entry : 0/0
 17945 ;;		On exit  : 0/0
 17946 ;;		Unchanged: 0/0
 17947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17949 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17950 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17951 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17952 ;;Total ram usage:       11 bytes
 17953 ;; Hardware stack levels used: 1
 17954 ;; Hardware stack levels required when called: 14
 17955 ;; This function calls:
 17956 ;;		___awdiv
 17957 ;;		_getNV
 17958 ;;		_readNVM
 17959 ;; This function is called by:
 17960 ;;		_sodTRCallback
 17961 ;;		_producerProcessMessage
 17962 ;; This function uses a non-reentrant model
 17963 ;;
 17964                           
 17965                           	psect	text49
 17966   003C82                     __ptext49:
 17967                           	callstack 0
 17968   003C82                     _APP_GetEventState:
 17969                           	callstack 14
 17970                           
 17971                           ;incstack = 0
 17972                           ;APP_GetEventState@h stored from wreg
 17973   003C82  0101               	movlb	1	; () banked
 17974   003C84  6FBC               	movwf	APP_GetEventState@h& (0+255),b
 17975                           
 17976                           ;../main.c: 428:     uint8_t flags;;../main.c: 429:     uint8_t happeningIndex;;../main.
      +                          c: 430:     Boolean disable_off;;../main.c: 432:     io = (((h)-8)/4);
 17977   003C86  0EF8               	movlw	248
 17978   003C88  0101               	movlb	1	; () banked
 17979   003C8A  25BC               	addwf	APP_GetEventState@h& (0+255),w,b
 17980   003C8C  0100               	movlb	0	; () banked
 17981   003C8E  6F97               	movwf	___awdiv@dividend& (0+255),b
 17982   003C90  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17983   003C92  0EFF               	movlw	255
 17984   003C94  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 17985   003C96  0E00               	movlw	0
 17986   003C98  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17987   003C9A  0E04               	movlw	4
 17988   003C9C  6F99               	movwf	___awdiv@divisor& (0+255),b
 17989   003C9E  EC1C  F053         	call	___awdiv	;wreg free
 17990   003CA2  0100               	movlb	0	; () banked
 17991   003CA4  5197               	movf	?___awdiv& (0+255),w,b
 17992   003CA6  6FCF               	movwf	_io& (0+255),b
 17993                           
 17994                           ; BSR set to: 0
 17995                           ;../main.c: 433:     if (io >= 16) {
 17996   003CA8  0E0F               	movlw	15
 17997   003CAA  65CF               	cpfsgt	_io& (0+255),b
 17998   003CAC  D002               	goto	l20404
 17999   003CAE                     u20410:
 18000                           
 18001                           ;../main.c: 434:         return EVENT_UNKNOWN;
 18002   003CAE  0EFF               	movlw	255
 18003   003CB0  0012               	return	
 18004   003CB2                     l20404:
 18005                           
 18006                           ; BSR set to: 0
 18007                           ;../main.c: 436:     happeningIndex = (((h)-8)%4);
 18008   003CB2  0101               	movlb	1	; () banked
 18009   003CB4  51BC               	movf	APP_GetEventState@h& (0+255),w,b
 18010   003CB6  0FF8               	addlw	248
 18011   003CB8  0B03               	andlw	3
 18012   003CBA  6FBD               	movwf	APP_GetEventState@happeningIndex& (0+255),b
 18013                           
 18014                           ; BSR set to: 1
 18015                           ;../main.c: 437:     flags = (uint8_t)getNV((16 + 7*(io) + 1));
 18016   003CBC  0100               	movlb	0	; () banked
 18017   003CBE  51CF               	movf	_io& (0+255),w,b
 18018   003CC0  0D07               	mullw	7
 18019   003CC2  50F3               	movf	243,w,c
 18020   003CC4  0F11               	addlw	17
 18021   003CC6  EC52  F05E         	call	_getNV
 18022   003CCA  0100               	movlb	0	; () banked
 18023   003CCC  518D               	movf	?_getNV& (0+255),w,b
 18024   003CCE  0101               	movlb	1	; () banked
 18025   003CD0  6FBA               	movwf	APP_GetEventState@flags& (0+255),b
 18026                           
 18027                           ; BSR set to: 1
 18028                           ;../main.c: 438:     disable_off = flags & 0x08;
 18029   003CD2  51BA               	movf	APP_GetEventState@flags& (0+255),w,b
 18030   003CD4  0B08               	andlw	8
 18031   003CD6  6FBB               	movwf	APP_GetEventState@disable_off& (0+255),b
 18032                           
 18033                           ;../main.c: 440:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 18034   003CD8  D16B               	goto	l20482
 18035   003CDA                     l20410:
 18036                           
 18037                           ; BSR set to: 1
 18038                           ;../main.c: 445:                     return outputState[io]?EVENT_ON:EVENT_OFF;
 18039   003CDA  0EB4               	movlw	low _outputState
 18040   003CDC  0100               	movlb	0	; () banked
 18041   003CDE  25CF               	addwf	_io& (0+255),w,b
 18042   003CE0  6ED9               	movwf	fsr2l,c
 18043   003CE2  6ADA               	clrf	fsr2h,c
 18044   003CE4  0E02               	movlw	high _outputState
 18045   003CE6  22DA               	addwfc	fsr2h,f,c
 18046   003CE8  50DF               	movf	indf2,w,c
 18047   003CEA  B4D8               	btfsc	status,2,c
 18048   003CEC  D002               	goto	u20420
 18049   003CEE  0E01               	movlw	1
 18050   003CF0  0012               	return	
 18051   003CF2                     u20420:
 18052   003CF2  0E00               	movlw	0
 18053   003CF4  0012               	return	
 18054   003CF6                     l20414:
 18055                           
 18056                           ; BSR set to: 1
 18057                           ;../main.c: 448:                     if (disable_off) {
 18058   003CF6  51BB               	movf	APP_GetEventState@disable_off& (0+255),w,b
 18059   003CF8  B4D8               	btfsc	status,2,c
 18060   003CFA  D7D9               	goto	u20410
 18061                           
 18062                           ; BSR set to: 1
 18063                           ;../main.c: 449:                         return (outputState[io]==0)?EVENT_ON:EVENT_OFF;
 18064   003CFC  0EB4               	movlw	low _outputState
 18065   003CFE  0100               	movlb	0	; () banked
 18066   003D00  25CF               	addwf	_io& (0+255),w,b
 18067   003D02  6ED9               	movwf	fsr2l,c
 18068   003D04  6ADA               	clrf	fsr2h,c
 18069   003D06  0E02               	movlw	high _outputState
 18070   003D08  22DA               	addwfc	fsr2h,f,c
 18071   003D0A  50DF               	movf	indf2,w,c
 18072   003D0C  A4D8               	btfss	status,2,c
 18073   003D0E  D002               	goto	u20450
 18074   003D10  0E01               	movlw	1
 18075   003D12  0012               	return	
 18076   003D14                     u20450:
 18077   003D14  0E00               	movlw	0
 18078   003D16  0012               	return	
 18079   003D18                     l20422:
 18080                           
 18081                           ; BSR set to: 0
 18082   003D18  0101               	movlb	1	; () banked
 18083   003D1A  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18084                           
 18085                           ; Switch size 1, requested type "simple"
 18086                           ; Number of cases is 2, Range of values is 0 to 1
 18087                           ; switch strategies available:
 18088                           ; Name         Instructions Cycles
 18089                           ; simple_byte            7     4 (average)
 18090                           ;	Chosen strategy is simple_byte
 18091   003D1C  0A00               	xorlw	0	; case 0
 18092   003D1E  B4D8               	btfsc	status,2,c
 18093   003D20  D7DC               	goto	l20410
 18094   003D22  0A01               	xorlw	1	; case 1
 18095   003D24  B4D8               	btfsc	status,2,c
 18096   003D26  D7E7               	goto	l20414
 18097   003D28  D7C2               	goto	u20410
 18098   003D2A                     l20424:
 18099                           
 18100                           ; BSR set to: 1
 18101                           ;../main.c: 460:                     return (readNVM(EEPROM_NVM_TYPE, ((eeprom_address_t
      +                          )((0x3FF -8))-25)+io)!=2)?EVENT_ON:EVENT_OFF;
 18102   003D2A  0EDE               	movlw	222
 18103   003D2C  0100               	movlb	0	; () banked
 18104   003D2E  25CF               	addwf	_io& (0+255),w,b
 18105   003D30  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18106   003D32  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18107   003D34  0E03               	movlw	3
 18108   003D36  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18109   003D38  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18110   003D3C  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18111   003D40  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18112   003D42  0E00               	movlw	0
 18113   003D44  ECD0  F059         	call	_readNVM
 18114   003D48  0E02               	movlw	2
 18115   003D4A  0100               	movlb	0	; () banked
 18116   003D4C  1991               	xorwf	?_readNVM& (0+255),w,b
 18117   003D4E  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
 18118   003D50  B4D8               	btfsc	status,2,c
 18119   003D52  D002               	goto	u20470
 18120   003D54  0E01               	movlw	1
 18121   003D56  0012               	return	
 18122   003D58                     u20470:
 18123   003D58  0E00               	movlw	0
 18124   003D5A  0012               	return	
 18125   003D5C                     l20430:
 18126                           
 18127                           ; BSR set to: 0
 18128   003D5C  0101               	movlb	1	; () banked
 18129   003D5E  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18130                           
 18131                           ; Switch size 1, requested type "simple"
 18132                           ; Number of cases is 1, Range of values is 0 to 0
 18133                           ; switch strategies available:
 18134                           ; Name         Instructions Cycles
 18135                           ; simple_byte            4     3 (average)
 18136                           ;	Chosen strategy is simple_byte
 18137   003D60  0A00               	xorlw	0	; case 0
 18138   003D62  B4D8               	btfsc	status,2,c
 18139   003D64  D7E2               	goto	l20424
 18140   003D66  D7A3               	goto	u20410
 18141   003D68                     l20432:
 18142                           
 18143                           ; BSR set to: 1
 18144                           ;../main.c: 467:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 2)))?EVENT_ON:EVENT_OFF;
 18145   003D68  0100               	movlb	0	; () banked
 18146   003D6A  51CF               	movf	_io& (0+255),w,b
 18147   003D6C  0D07               	mullw	7
 18148   003D6E  50F3               	movf	243,w,c
 18149   003D70  0F12               	addlw	18
 18150   003D72  EC52  F05E         	call	_getNV
 18151   003D76  0100               	movlb	0	; () banked
 18152   003D78  51CF               	movf	_io& (0+255),w,b
 18153   003D7A  0FA9               	addlw	low _currentPos
 18154   003D7C  6ED9               	movwf	fsr2l,c
 18155   003D7E  6ADA               	clrf	fsr2h,c
 18156   003D80  50DE               	movf	postinc2,w,c
 18157   003D82  198D               	xorwf	?_getNV& (0+255),w,b
 18158   003D84  A4D8               	btfss	status,2,c
 18159   003D86  D002               	goto	u20490
 18160   003D88  0E01               	movlw	1
 18161   003D8A  0012               	return	
 18162   003D8C                     u20490:
 18163   003D8C  0E00               	movlw	0
 18164   003D8E  0012               	return	
 18165   003D90                     l20436:
 18166                           
 18167                           ; BSR set to: 1
 18168                           ;../main.c: 469:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 3)))?EVENT_ON:EVENT_OFF;
 18169   003D90  0100               	movlb	0	; () banked
 18170   003D92  51CF               	movf	_io& (0+255),w,b
 18171   003D94  0D07               	mullw	7
 18172   003D96  50F3               	movf	243,w,c
 18173   003D98  0F13               	addlw	19
 18174   003D9A  EC52  F05E         	call	_getNV
 18175   003D9E  0100               	movlb	0	; () banked
 18176   003DA0  51CF               	movf	_io& (0+255),w,b
 18177   003DA2  0FA9               	addlw	low _currentPos
 18178   003DA4  6ED9               	movwf	fsr2l,c
 18179   003DA6  6ADA               	clrf	fsr2h,c
 18180   003DA8  50DE               	movf	postinc2,w,c
 18181   003DAA  198D               	xorwf	?_getNV& (0+255),w,b
 18182   003DAC  A4D8               	btfss	status,2,c
 18183   003DAE  D002               	goto	u20510
 18184   003DB0  0E01               	movlw	1
 18185   003DB2  0012               	return	
 18186   003DB4                     u20510:
 18187   003DB4  0E00               	movlw	0
 18188   003DB6  0012               	return	
 18189   003DB8                     l20440:
 18190                           
 18191                           ; BSR set to: 1
 18192                           ;../main.c: 472:                     return (currentPos[io] >= ((uint8_t)getNV((16 + 7*(
      +                          io) + 3)))/2 +
 18193   003DB8  0100               	movlb	0	; () banked
 18194   003DBA  51CF               	movf	_io& (0+255),w,b
 18195   003DBC  0D07               	mullw	7
 18196   003DBE  50F3               	movf	243,w,c
 18197   003DC0  0F13               	addlw	19
 18198   003DC2  EC52  F05E         	call	_getNV
 18199   003DC6  0100               	movlb	0	; () banked
 18200   003DC8  518D               	movf	?_getNV& (0+255),w,b
 18201   003DCA  6F97               	movwf	___awdiv@dividend& (0+255),b
 18202   003DCC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18203   003DCE  0E00               	movlw	0
 18204   003DD0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18205   003DD2  0E02               	movlw	2
 18206   003DD4  6F99               	movwf	___awdiv@divisor& (0+255),b
 18207   003DD6  EC1C  F053         	call	___awdiv	;wreg free
 18208   003DDA  C097  F09F         	movff	?___awdiv,??_APP_GetEventState
 18209   003DDE  C098  F0A0         	movff	?___awdiv+1,??_APP_GetEventState+1
 18210   003DE2  0100               	movlb	0	; () banked
 18211   003DE4  51CF               	movf	_io& (0+255),w,b
 18212   003DE6  0D07               	mullw	7
 18213   003DE8  50F3               	movf	243,w,c
 18214   003DEA  0F12               	addlw	18
 18215   003DEC  EC52  F05E         	call	_getNV
 18216   003DF0  0100               	movlb	0	; () banked
 18217   003DF2  518D               	movf	?_getNV& (0+255),w,b
 18218   003DF4  6F97               	movwf	___awdiv@dividend& (0+255),b
 18219   003DF6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18220   003DF8  0E00               	movlw	0
 18221   003DFA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18222   003DFC  0E02               	movlw	2
 18223   003DFE  6F99               	movwf	___awdiv@divisor& (0+255),b
 18224   003E00  EC1C  F053         	call	___awdiv	;wreg free
 18225   003E04  0100               	movlb	0	; () banked
 18226   003E06  5197               	movf	?___awdiv& (0+255),w,b
 18227   003E08  259F               	addwf	??_APP_GetEventState& (0+255),w,b
 18228   003E0A  6FA1               	movwf	(??_APP_GetEventState+2)& (0+255),b
 18229   003E0C  5198               	movf	(?___awdiv+1)& (0+255),w,b
 18230   003E0E  21A0               	addwfc	(??_APP_GetEventState+1)& (0+255),w,b
 18231   003E10  6FA2               	movwf	(??_APP_GetEventState+3)& (0+255),b
 18232   003E12  51CF               	movf	_io& (0+255),w,b
 18233   003E14  0FA9               	addlw	low _currentPos
 18234   003E16  6ED9               	movwf	fsr2l,c
 18235   003E18  6ADA               	clrf	fsr2h,c
 18236   003E1A  50DF               	movf	indf2,w,c
 18237   003E1C  6FA3               	movwf	(??_APP_GetEventState+4)& (0+255),b
 18238   003E1E  6BA4               	clrf	(??_APP_GetEventState+5)& (0+255),b
 18239   003E20  51A1               	movf	(??_APP_GetEventState+2)& (0+255),w,b
 18240   003E22  5DA3               	subwf	(??_APP_GetEventState+4)& (0+255),w,b
 18241   003E24  51A4               	movf	(??_APP_GetEventState+5)& (0+255),w,b
 18242   003E26  0A80               	xorlw	128
 18243   003E28  6FA5               	movwf	(??_APP_GetEventState+6)& (0+255),b
 18244   003E2A  51A2               	movf	(??_APP_GetEventState+3)& (0+255),w,b
 18245   003E2C  0A80               	xorlw	128
 18246   003E2E  59A5               	subwfb	(??_APP_GetEventState+6)& (0+255),w,b
 18247   003E30  A0D8               	btfss	status,0,c
 18248   003E32  D002               	goto	u20530
 18249   003E34  0E01               	movlw	1
 18250   003E36  0012               	return	
 18251   003E38                     u20530:
 18252   003E38  0E00               	movlw	0
 18253   003E3A  0012               	return	
 18254   003E3C                     l20446:
 18255                           
 18256                           ; BSR set to: 0
 18257   003E3C  0101               	movlb	1	; () banked
 18258   003E3E  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18259                           
 18260                           ; Switch size 1, requested type "simple"
 18261                           ; Number of cases is 3, Range of values is 0 to 2
 18262                           ; switch strategies available:
 18263                           ; Name         Instructions Cycles
 18264                           ; simple_byte           10     6 (average)
 18265                           ;	Chosen strategy is simple_byte
 18266   003E40  0A00               	xorlw	0	; case 0
 18267   003E42  B4D8               	btfsc	status,2,c
 18268   003E44  D791               	goto	l20432
 18269   003E46  0A01               	xorlw	1	; case 1
 18270   003E48  B4D8               	btfsc	status,2,c
 18271   003E4A  D7B6               	goto	l20440
 18272   003E4C  0A03               	xorlw	3	; case 2
 18273   003E4E  B4D8               	btfsc	status,2,c
 18274   003E50  D79F               	goto	l20436
 18275   003E52  D72D               	goto	u20410
 18276   003E54                     l20448:
 18277                           
 18278                           ; BSR set to: 1
 18279                           ;../main.c: 480:                     return ((uint8_t)readNVM(EEPROM_NVM_TYPE, ((eeprom_
      +                          address_t)((0x3FF -8))-25)+io))?EVENT_ON:EVENT_OFF;
 18280   003E54  0EDE               	movlw	222
 18281   003E56  0100               	movlb	0	; () banked
 18282   003E58  25CF               	addwf	_io& (0+255),w,b
 18283   003E5A  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18284   003E5C  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18285   003E5E  0E03               	movlw	3
 18286   003E60  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18287   003E62  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18288   003E66  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18289   003E6A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18290   003E6C  0E00               	movlw	0
 18291   003E6E  ECD0  F059         	call	_readNVM
 18292   003E72  0100               	movlb	0	; () banked
 18293   003E74  6791               	tstfsz	?_readNVM& (0+255),b
 18294   003E76  0E01               	movlw	1
 18295   003E78  0012               	return	
 18296   003E7A                     l20454:
 18297                           
 18298                           ; BSR set to: 0
 18299   003E7A  0101               	movlb	1	; () banked
 18300   003E7C  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18301                           
 18302                           ; Switch size 1, requested type "simple"
 18303                           ; Number of cases is 1, Range of values is 0 to 0
 18304                           ; switch strategies available:
 18305                           ; Name         Instructions Cycles
 18306                           ; simple_byte            4     3 (average)
 18307                           ;	Chosen strategy is simple_byte
 18308   003E7E  0A00               	xorlw	0	; case 0
 18309   003E80  B4D8               	btfsc	status,2,c
 18310   003E82  D7E8               	goto	l20448
 18311   003E84  D714               	goto	u20410
 18312   003E86                     l20456:
 18313                           
 18314                           ; BSR set to: 1
 18315                           ;../main.c: 488:                     return (currentPos[io] == getNV((16 + 7*(io) + 3)))
      +                          ?EVENT_ON:EVENT_OFF;
 18316   003E86  0100               	movlb	0	; () banked
 18317   003E88  51CF               	movf	_io& (0+255),w,b
 18318   003E8A  0D07               	mullw	7
 18319   003E8C  50F3               	movf	243,w,c
 18320   003E8E  0F13               	addlw	19
 18321   003E90  EC52  F05E         	call	_getNV
 18322   003E94  0100               	movlb	0	; () banked
 18323   003E96  51CF               	movf	_io& (0+255),w,b
 18324   003E98  0FA9               	addlw	low _currentPos
 18325   003E9A  6ED9               	movwf	fsr2l,c
 18326   003E9C  6ADA               	clrf	fsr2h,c
 18327   003E9E  50DF               	movf	indf2,w,c
 18328   003EA0  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18329   003EA2  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18330   003EA4  518D               	movf	?_getNV& (0+255),w,b
 18331   003EA6  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18332   003EA8  E106               	bnz	u20570
 18333   003EAA  518E               	movf	(?_getNV+1)& (0+255),w,b
 18334   003EAC  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18335   003EAE  A4D8               	btfss	status,2,c
 18336   003EB0  D002               	goto	u20570
 18337   003EB2  0E01               	movlw	1
 18338   003EB4  0012               	return	
 18339   003EB6                     u20570:
 18340   003EB6  0E00               	movlw	0
 18341   003EB8  0012               	return	
 18342   003EBA                     l20460:
 18343                           
 18344                           ; BSR set to: 1
 18345                           ;../main.c: 490:                     return (currentPos[io] == getNV((16 + 7*(io) + 4)))
      +                          ?EVENT_ON:EVENT_OFF;
 18346   003EBA  0100               	movlb	0	; () banked
 18347   003EBC  51CF               	movf	_io& (0+255),w,b
 18348   003EBE  0D07               	mullw	7
 18349   003EC0  50F3               	movf	243,w,c
 18350   003EC2  0F14               	addlw	20
 18351   003EC4  EC52  F05E         	call	_getNV
 18352   003EC8  0100               	movlb	0	; () banked
 18353   003ECA  51CF               	movf	_io& (0+255),w,b
 18354   003ECC  0FA9               	addlw	low _currentPos
 18355   003ECE  6ED9               	movwf	fsr2l,c
 18356   003ED0  6ADA               	clrf	fsr2h,c
 18357   003ED2  50DF               	movf	indf2,w,c
 18358   003ED4  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18359   003ED6  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18360   003ED8  518D               	movf	?_getNV& (0+255),w,b
 18361   003EDA  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18362   003EDC  E106               	bnz	u20590
 18363   003EDE  518E               	movf	(?_getNV+1)& (0+255),w,b
 18364   003EE0  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18365   003EE2  A4D8               	btfss	status,2,c
 18366   003EE4  D002               	goto	u20590
 18367   003EE6  0E01               	movlw	1
 18368   003EE8  0012               	return	
 18369   003EEA                     u20590:
 18370   003EEA  0E00               	movlw	0
 18371   003EEC  0012               	return	
 18372   003EEE                     l20464:
 18373                           
 18374                           ; BSR set to: 1
 18375                           ;../main.c: 493:                     if (getNV((16 + 7*(io) + 2)) > 2) {
 18376   003EEE  0100               	movlb	0	; () banked
 18377   003EF0  51CF               	movf	_io& (0+255),w,b
 18378   003EF2  0D07               	mullw	7
 18379   003EF4  50F3               	movf	243,w,c
 18380   003EF6  0F12               	addlw	18
 18381   003EF8  EC52  F05E         	call	_getNV
 18382   003EFC  0100               	movlb	0	; () banked
 18383   003EFE  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18384   003F00  D6D6               	goto	u20410
 18385   003F02  518E               	movf	(?_getNV+1)& (0+255),w,b
 18386   003F04  E104               	bnz	u20610
 18387   003F06  0E03               	movlw	3
 18388   003F08  5D8D               	subwf	?_getNV& (0+255),w,b
 18389   003F0A  A0D8               	btfss	status,0,c
 18390   003F0C  D6D0               	goto	u20410
 18391   003F0E                     u20610:
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;../main.c: 494:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          5)))?EVENT_ON:EVENT_OFF;
 18395   003F0E  51CF               	movf	_io& (0+255),w,b
 18396   003F10  0D07               	mullw	7
 18397   003F12  50F3               	movf	243,w,c
 18398   003F14  0F15               	addlw	21
 18399   003F16  EC52  F05E         	call	_getNV
 18400   003F1A  0100               	movlb	0	; () banked
 18401   003F1C  51CF               	movf	_io& (0+255),w,b
 18402   003F1E  0FA9               	addlw	low _currentPos
 18403   003F20  6ED9               	movwf	fsr2l,c
 18404   003F22  6ADA               	clrf	fsr2h,c
 18405   003F24  50DF               	movf	indf2,w,c
 18406   003F26  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18407   003F28  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18408   003F2A  518D               	movf	?_getNV& (0+255),w,b
 18409   003F2C  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18410   003F2E  E106               	bnz	u20620
 18411   003F30  518E               	movf	(?_getNV+1)& (0+255),w,b
 18412   003F32  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18413   003F34  A4D8               	btfss	status,2,c
 18414   003F36  D002               	goto	u20620
 18415   003F38  0E01               	movlw	1
 18416   003F3A  0012               	return	
 18417   003F3C                     u20620:
 18418   003F3C  0E00               	movlw	0
 18419   003F3E  0012               	return	
 18420   003F40                     l20470:
 18421                           
 18422                           ; BSR set to: 1
 18423                           ;../main.c: 498:                     if (getNV((16 + 7*(io) + 2)) > 3) {
 18424   003F40  0100               	movlb	0	; () banked
 18425   003F42  51CF               	movf	_io& (0+255),w,b
 18426   003F44  0D07               	mullw	7
 18427   003F46  50F3               	movf	243,w,c
 18428   003F48  0F12               	addlw	18
 18429   003F4A  EC52  F05E         	call	_getNV
 18430   003F4E  0100               	movlb	0	; () banked
 18431   003F50  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18432   003F52  D6AD               	goto	u20410
 18433   003F54  518E               	movf	(?_getNV+1)& (0+255),w,b
 18434   003F56  E104               	bnz	u20640
 18435   003F58  0E04               	movlw	4
 18436   003F5A  5D8D               	subwf	?_getNV& (0+255),w,b
 18437   003F5C  A0D8               	btfss	status,0,c
 18438   003F5E  D6A7               	goto	u20410
 18439   003F60                     u20640:
 18440                           
 18441                           ; BSR set to: 0
 18442                           ;../main.c: 499:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          6)))?EVENT_ON:EVENT_OFF;
 18443   003F60  51CF               	movf	_io& (0+255),w,b
 18444   003F62  0D07               	mullw	7
 18445   003F64  50F3               	movf	243,w,c
 18446   003F66  0F16               	addlw	22
 18447   003F68  EC52  F05E         	call	_getNV
 18448   003F6C  0100               	movlb	0	; () banked
 18449   003F6E  51CF               	movf	_io& (0+255),w,b
 18450   003F70  0FA9               	addlw	low _currentPos
 18451   003F72  6ED9               	movwf	fsr2l,c
 18452   003F74  6ADA               	clrf	fsr2h,c
 18453   003F76  50DF               	movf	indf2,w,c
 18454   003F78  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18455   003F7A  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18456   003F7C  518D               	movf	?_getNV& (0+255),w,b
 18457   003F7E  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18458   003F80  E106               	bnz	u20650
 18459   003F82  518E               	movf	(?_getNV+1)& (0+255),w,b
 18460   003F84  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18461   003F86  A4D8               	btfss	status,2,c
 18462   003F88  D002               	goto	u20650
 18463   003F8A  0E01               	movlw	1
 18464   003F8C  0012               	return	
 18465   003F8E                     u20650:
 18466   003F8E  0E00               	movlw	0
 18467   003F90  0012               	return	
 18468   003F92                     l20478:
 18469                           
 18470                           ; BSR set to: 0
 18471   003F92  0101               	movlb	1	; () banked
 18472   003F94  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18473                           
 18474                           ; Switch size 1, requested type "simple"
 18475                           ; Number of cases is 4, Range of values is 0 to 3
 18476                           ; switch strategies available:
 18477                           ; Name         Instructions Cycles
 18478                           ; simple_byte           13     7 (average)
 18479                           ;	Chosen strategy is simple_byte
 18480   003F96  0A00               	xorlw	0	; case 0
 18481   003F98  B4D8               	btfsc	status,2,c
 18482   003F9A  D775               	goto	l20456
 18483   003F9C  0A01               	xorlw	1	; case 1
 18484   003F9E  B4D8               	btfsc	status,2,c
 18485   003FA0  D78C               	goto	l20460
 18486   003FA2  0A03               	xorlw	3	; case 2
 18487   003FA4  B4D8               	btfsc	status,2,c
 18488   003FA6  D7A3               	goto	l20464
 18489   003FA8  0A01               	xorlw	1	; case 3
 18490   003FAA  B4D8               	btfsc	status,2,c
 18491   003FAC  D7C9               	goto	l20470
 18492   003FAE  D67F               	goto	u20410
 18493   003FB0                     l20482:
 18494                           
 18495                           ; BSR set to: 1
 18496   003FB0  0100               	movlb	0	; () banked
 18497   003FB2  51CF               	movf	_io& (0+255),w,b
 18498   003FB4  0D07               	mullw	7
 18499   003FB6  50F3               	movf	243,w,c
 18500   003FB8  0F10               	addlw	16
 18501   003FBA  EC52  F05E         	call	_getNV
 18502   003FBE  0100               	movlb	0	; () banked
 18503   003FC0  518D               	movf	?_getNV& (0+255),w,b
 18504                           
 18505                           ; Switch size 1, requested type "simple"
 18506                           ; Number of cases is 5, Range of values is 0 to 4
 18507                           ; switch strategies available:
 18508                           ; Name         Instructions Cycles
 18509                           ; simple_byte           16     9 (average)
 18510                           ;	Chosen strategy is simple_byte
 18511   003FC2  0A00               	xorlw	0	; case 0
 18512   003FC4  B4D8               	btfsc	status,2,c
 18513   003FC6  D6A8               	goto	l20422
 18514   003FC8  0A01               	xorlw	1	; case 1
 18515   003FCA  B4D8               	btfsc	status,2,c
 18516   003FCC  D6C7               	goto	l20430
 18517   003FCE  0A03               	xorlw	3	; case 2
 18518   003FD0  B4D8               	btfsc	status,2,c
 18519   003FD2  D734               	goto	l20446
 18520   003FD4  0A01               	xorlw	1	; case 3
 18521   003FD6  B4D8               	btfsc	status,2,c
 18522   003FD8  D750               	goto	l20454
 18523   003FDA  0A07               	xorlw	7	; case 4
 18524   003FDC  B4D8               	btfsc	status,2,c
 18525   003FDE  D7D9               	goto	l20478
 18526   003FE0  D666               	goto	u20410
 18527   003FE2                     __end_of_APP_GetEventState:
 18528                           	callstack 0
 18529                           
 18530 ;; *************** function _numEv *****************
 18531 ;; Defined at:
 18532 ;;		line 1154 in file "../../VLCBlib_PIC/event_teach_large.c"
 18533 ;; Parameters:    Size  Location     Type
 18534 ;;  tableIndex      1    wreg     unsigned char 
 18535 ;; Auto vars:     Size  Location     Type
 18536 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 18537 ;;  f               1   66[BANK0 ] struct .
 18538 ;;  num             1   65[BANK0 ] unsigned char 
 18539 ;; Return value:  Size  Location     Type
 18540 ;;                  1    wreg      unsigned char 
 18541 ;; Registers used:
 18542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18543 ;; Tracked objects:
 18544 ;;		On entry : 0/0
 18545 ;;		On exit  : 0/0
 18546 ;;		Unchanged: 0/0
 18547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18549 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18550 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18551 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18552 ;;Total ram usage:        7 bytes
 18553 ;; Hardware stack levels used: 1
 18554 ;; Hardware stack levels required when called: 15
 18555 ;; This function calls:
 18556 ;;		_readNVM
 18557 ;;		_validStart
 18558 ;; This function is called by:
 18559 ;;		_doReval
 18560 ;;		_doReqev
 18561 ;;		_reqevCallback
 18562 ;; This function uses a non-reentrant model
 18563 ;;
 18564                           
 18565                           	psect	text50
 18566   008AA8                     __ptext50:
 18567                           	callstack 0
 18568   008AA8                     _numEv:
 18569                           	callstack 12
 18570                           
 18571                           ;incstack = 0
 18572                           ;numEv@tableIndex stored from wreg
 18573   008AA8  0100               	movlb	0	; () banked
 18574   008AAA  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18575                           
 18576                           ;../../VLCBlib_PIC/event_teach_large.c: 1155:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1156:     uint8_t num=0;
 18577   008AAC  0E00               	movlw	0
 18578   008AAE  0100               	movlb	0	; () banked
 18579   008AB0  6FA1               	movwf	numEv@num& (0+255),b
 18580                           
 18581                           ; BSR set to: 0
 18582                           ;../../VLCBlib_PIC/event_teach_large.c: 1157:     if ( ! validStart(tableIndex)) {
 18583   008AB2  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18584   008AB4  EC39  F05C         	call	_validStart
 18585   008AB8  0900               	iorlw	0
 18586   008ABA  A4D8               	btfss	status,2,c
 18587   008ABC  D002               	goto	l21240
 18588   008ABE                     u21740:
 18589                           
 18590                           ;../../VLCBlib_PIC/event_teach_large.c: 1159:         return 0;
 18591   008ABE  0E00               	movlw	0
 18592   008AC0  0012               	return	
 18593   008AC2                     l21240:
 18594                           
 18595                           ;../../VLCBlib_PIC/event_teach_large.c: 1161:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 18596   008AC2  0100               	movlb	0	; () banked
 18597   008AC4  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18598   008AC6  6F9D               	movwf	??_numEv& (0+255),b
 18599   008AC8  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18600   008ACA  3B9D               	swapf	??_numEv& (0+255),f,b
 18601   008ACC  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18602   008ACE  0EF0               	movlw	240
 18603   008AD0  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18604   008AD2  519D               	movf	??_numEv& (0+255),w,b
 18605   008AD4  0B0F               	andlw	15
 18606   008AD6  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18607   008AD8  0EF0               	movlw	240
 18608   008ADA  179D               	andwf	??_numEv& (0+255),f,b
 18609   008ADC  0E80               	movlw	128
 18610   008ADE  259D               	addwf	??_numEv& (0+255),w,b
 18611   008AE0  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18612   008AE2  0EEF               	movlw	239
 18613   008AE4  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18614   008AE6  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18615   008AE8  C09F  F091         	movff	??_numEv+2,readNVM@index
 18616   008AEC  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18617   008AF0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18618   008AF2  0E01               	movlw	1
 18619   008AF4  ECD0  F059         	call	_readNVM
 18620   008AF8  0100               	movlb	0	; () banked
 18621   008AFA  5191               	movf	?_readNVM& (0+255),w,b
 18622   008AFC  6FA2               	movwf	numEv@f& (0+255),b
 18623                           
 18624                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:     while (f.continued) {
 18625   008AFE  D039               	goto	l21254
 18626   008B00                     l21242:
 18627                           
 18628                           ; BSR set to: 0
 18629                           ;../../VLCBlib_PIC/event_teach_large.c: 1163:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 18630   008B00  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18631   008B02  0D10               	mullw	16
 18632   008B04  CFF3 F09D          	movff	prodl,??_numEv
 18633   008B08  CFF4 F09E          	movff	prodh,??_numEv+1
 18634   008B0C  0E81               	movlw	129
 18635   008B0E  259D               	addwf	??_numEv& (0+255),w,b
 18636   008B10  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18637   008B12  0EEF               	movlw	239
 18638   008B14  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18639   008B16  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18640   008B18  C09F  F091         	movff	??_numEv+2,readNVM@index
 18641   008B1C  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18642   008B20  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18643   008B22  0E01               	movlw	1
 18644   008B24  ECD0  F059         	call	_readNVM
 18645   008B28  0100               	movlb	0	; () banked
 18646   008B2A  5191               	movf	?_readNVM& (0+255),w,b
 18647   008B2C  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18648                           
 18649                           ; BSR set to: 0
 18650                           ;../../VLCBlib_PIC/event_teach_large.c: 1164:         if (tableIndex == 0xff) {
 18651   008B2E  29A3               	incf	numEv@tableIndex& (0+255),w,b
 18652   008B30  B4D8               	btfsc	status,2,c
 18653   008B32  D7C5               	goto	u21740
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;../../VLCBlib_PIC/event_teach_large.c: 1167:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 18657   008B34  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18658   008B36  6F9D               	movwf	??_numEv& (0+255),b
 18659   008B38  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18660   008B3A  3B9D               	swapf	??_numEv& (0+255),f,b
 18661   008B3C  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18662   008B3E  0EF0               	movlw	240
 18663   008B40  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18664   008B42  519D               	movf	??_numEv& (0+255),w,b
 18665   008B44  0B0F               	andlw	15
 18666   008B46  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18667   008B48  0EF0               	movlw	240
 18668   008B4A  179D               	andwf	??_numEv& (0+255),f,b
 18669   008B4C  0E80               	movlw	128
 18670   008B4E  259D               	addwf	??_numEv& (0+255),w,b
 18671   008B50  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18672   008B52  0EEF               	movlw	239
 18673   008B54  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18674   008B56  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18675   008B58  C09F  F091         	movff	??_numEv+2,readNVM@index
 18676   008B5C  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18677   008B60  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18678   008B62  0E01               	movlw	1
 18679   008B64  ECD0  F059         	call	_readNVM
 18680   008B68  0100               	movlb	0	; () banked
 18681   008B6A  5191               	movf	?_readNVM& (0+255),w,b
 18682   008B6C  6FA2               	movwf	numEv@f& (0+255),b
 18683                           
 18684                           ; BSR set to: 0
 18685                           ;../../VLCBlib_PIC/event_teach_large.c: 1168:         num += 10;
 18686   008B6E  0E0A               	movlw	10
 18687   008B70  27A1               	addwf	numEv@num& (0+255),f,b
 18688   008B72                     l21254:
 18689                           
 18690                           ; BSR set to: 0
 18691                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:     while (f.continued) {
 18692   008B72  B9A2               	btfsc	numEv@f& (0+255),4,b
 18693   008B74  D7C5               	goto	l21242
 18694                           
 18695                           ; BSR set to: 0
 18696                           ;../../VLCBlib_PIC/event_teach_large.c: 1170:     num += f.eVsUsed;
 18697   008B76  51A2               	movf	numEv@f& (0+255),w,b
 18698   008B78  0B0F               	andlw	15
 18699   008B7A  27A1               	addwf	numEv@num& (0+255),f,b
 18700                           
 18701                           ; BSR set to: 0
 18702                           ;../../VLCBlib_PIC/event_teach_large.c: 1171:     return num;
 18703   008B7C  51A1               	movf	numEv@num& (0+255),w,b
 18704   008B7E  0012               	return		;funcret
 18705   008B80                     __end_of_numEv:
 18706                           	callstack 0
 18707                           
 18708 ;; *************** function _tableIndexToEvtIdx *****************
 18709 ;; Defined at:
 18710 ;;		line 1273 in file "../../VLCBlib_PIC/event_teach_large.c"
 18711 ;; Parameters:    Size  Location     Type
 18712 ;;  tableIndex      1    wreg     unsigned char 
 18713 ;; Auto vars:     Size  Location     Type
 18714 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 18715 ;; Return value:  Size  Location     Type
 18716 ;;                  1    wreg      unsigned char 
 18717 ;; Registers used:
 18718 ;;		wreg, status,2, status,0
 18719 ;; Tracked objects:
 18720 ;;		On entry : 0/0
 18721 ;;		On exit  : 0/0
 18722 ;;		Unchanged: 0/0
 18723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18725 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18727 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18728 ;;Total ram usage:        1 bytes
 18729 ;; Hardware stack levels used: 1
 18730 ;; Hardware stack levels required when called: 12
 18731 ;; This function calls:
 18732 ;;		Nothing
 18733 ;; This function is called by:
 18734 ;;		_nerdCallback
 18735 ;; This function uses a non-reentrant model
 18736 ;;
 18737                           
 18738                           	psect	text51
 18739   00C608                     __ptext51:
 18740                           	callstack 0
 18741   00C608                     _tableIndexToEvtIdx:
 18742                           	callstack 15
 18743                           
 18744                           ;incstack = 0
 18745                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 18746   00C608  0100               	movlb	0	; () banked
 18747   00C60A  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 18748                           
 18749                           ;../../VLCBlib_PIC/event_teach_large.c: 1274:     return tableIndex + 1;
 18750   00C60C  0100               	movlb	0	; () banked
 18751   00C60E  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 18752                           
 18753                           ; BSR set to: 0
 18754   00C610  0012               	return		;funcret
 18755   00C612                     __end_of_tableIndexToEvtIdx:
 18756                           	callstack 0
 18757                           
 18758 ;; *************** function _setNV *****************
 18759 ;; Defined at:
 18760 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 18761 ;; Parameters:    Size  Location     Type
 18762 ;;  index           1    wreg     unsigned char 
 18763 ;;  value           1   58[BANK1 ] unsigned char 
 18764 ;; Auto vars:     Size  Location     Type
 18765 ;;  index           1   62[BANK1 ] unsigned char 
 18766 ;;  oldValue        1   61[BANK1 ] unsigned char 
 18767 ;; Return value:  Size  Location     Type
 18768 ;;                  1    wreg      unsigned char 
 18769 ;; Registers used:
 18770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18771 ;; Tracked objects:
 18772 ;;		On entry : 0/0
 18773 ;;		On exit  : 0/0
 18774 ;;		Unchanged: 0/0
 18775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18776 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18777 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18778 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18779 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18780 ;;Total ram usage:        5 bytes
 18781 ;; Hardware stack levels used: 1
 18782 ;; Hardware stack levels required when called: 26
 18783 ;; This function calls:
 18784 ;;		_APP_nvValidate
 18785 ;;		_APP_nvValueChanged
 18786 ;;		_writeNVM
 18787 ;; This function is called by:
 18788 ;;		_nvProcessMessage
 18789 ;; This function uses a non-reentrant model
 18790 ;;
 18791                           
 18792                           	psect	text52
 18793   00AA40                     __ptext52:
 18794                           	callstack 0
 18795   00AA40                     _setNV:
 18796                           	callstack 2
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;incstack = 0
 18800                           ;setNV@index stored from wreg
 18801   00AA40  0101               	movlb	1	; () banked
 18802   00AA42  6FF8               	movwf	setNV@index& (0+255),b
 18803                           
 18804                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > (15+7*16)) return CMDERR_INV_NV_IDX;
 18805   00AA44  0E7F               	movlw	127
 18806   00AA46  0101               	movlb	1	; () banked
 18807   00AA48  65F8               	cpfsgt	setNV@index& (0+255),b
 18808   00AA4A  D002               	goto	l22076
 18809                           
 18810                           ; BSR set to: 1
 18811   00AA4C  0E0A               	movlw	10
 18812   00AA4E  0012               	return	
 18813   00AA50                     l22076:
 18814                           
 18815                           ; BSR set to: 1
 18816                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 18817   00AA50  C1F4  F09F         	movff	setNV@value,APP_nvValidate@value
 18818   00AA54  51F8               	movf	setNV@index& (0+255),w,b
 18819   00AA56  EC86  F056         	call	_APP_nvValidate
 18820   00AA5A  0900               	iorlw	0
 18821   00AA5C  A4D8               	btfss	status,2,c
 18822   00AA5E  D002               	goto	l22082
 18823   00AA60  0E0C               	movlw	12
 18824   00AA62  0012               	return	
 18825   00AA64                     l22082:
 18826                           
 18827                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 18828   00AA64  0E00               	movlw	low _nvCache
 18829   00AA66  0101               	movlb	1	; () banked
 18830   00AA68  25F8               	addwf	setNV@index& (0+255),w,b
 18831   00AA6A  6ED9               	movwf	fsr2l,c
 18832   00AA6C  6ADA               	clrf	fsr2h,c
 18833   00AA6E  0E04               	movlw	high _nvCache
 18834   00AA70  22DA               	addwfc	fsr2h,f,c
 18835   00AA72  50DF               	movf	indf2,w,c
 18836   00AA74  6FF7               	movwf	setNV@oldValue& (0+255),b
 18837                           
 18838                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 18839   00AA76  0E00               	movlw	low _nvCache
 18840   00AA78  25F8               	addwf	setNV@index& (0+255),w,b
 18841   00AA7A  6ED9               	movwf	fsr2l,c
 18842   00AA7C  6ADA               	clrf	fsr2h,c
 18843   00AA7E  0E04               	movlw	high _nvCache
 18844   00AA80  22DA               	addwfc	fsr2h,f,c
 18845   00AA82  C1F4  FFDF         	movff	setNV@value,indf2
 18846                           
 18847                           ; BSR set to: 1
 18848                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 18849   00AA86  0E80               	movlw	128
 18850   00AA88  25F8               	addwf	setNV@index& (0+255),w,b
 18851   00AA8A  6FF5               	movwf	??_setNV& (0+255),b
 18852   00AA8C  6BF6               	clrf	(??_setNV+1)& (0+255),b
 18853   00AA8E  0EFF               	movlw	255
 18854   00AA90  23F6               	addwfc	(??_setNV+1)& (0+255),f,b
 18855   00AA92  C1F5  F0A4         	movff	??_setNV,writeNVM@index
 18856   00AA96  C1F6  F0A5         	movff	??_setNV+1,writeNVM@index+1
 18857   00AA9A  0100               	movlb	0	; () banked
 18858   00AA9C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 18859   00AA9E  C1F4  F0A7         	movff	setNV@value,writeNVM@value
 18860   00AAA2  0E01               	movlw	1
 18861   00AAA4  EC60  F05C         	call	_writeNVM
 18862                           
 18863                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 18864   00AAA8  C1F4  F1ED         	movff	setNV@value,APP_nvValueChanged@value
 18865   00AAAC  C1F7  F1EE         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 18866   00AAB0  0101               	movlb	1	; () banked
 18867   00AAB2  51F8               	movf	setNV@index& (0+255),w,b
 18868   00AAB4  ECB0  F016         	call	_APP_nvValueChanged
 18869                           
 18870                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 18871   00AAB8  0E00               	movlw	0
 18872   00AABA  0012               	return		;funcret
 18873   00AABC                     __end_of_setNV:
 18874                           	callstack 0
 18875                           
 18876 ;; *************** function _APP_nvValueChanged *****************
 18877 ;; Defined at:
 18878 ;;		line 104 in file "../universalNv.c"
 18879 ;; Parameters:    Size  Location     Type
 18880 ;;  index           1    wreg     unsigned char 
 18881 ;;  value           1   51[BANK1 ] unsigned char 
 18882 ;;  oldValue        1   52[BANK1 ] unsigned char 
 18883 ;; Auto vars:     Size  Location     Type
 18884 ;;  index           1   56[BANK1 ] unsigned char 
 18885 ;;  io              1   57[BANK1 ] unsigned char 
 18886 ;;  nv              1    0        unsigned char 
 18887 ;; Return value:  Size  Location     Type
 18888 ;;                  1    wreg      void 
 18889 ;; Registers used:
 18890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18891 ;; Tracked objects:
 18892 ;;		On entry : 0/0
 18893 ;;		On exit  : 0/0
 18894 ;;		Unchanged: 0/0
 18895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18896 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18897 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18898 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18899 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18900 ;;Total ram usage:        7 bytes
 18901 ;; Hardware stack levels used: 1
 18902 ;; Hardware stack levels required when called: 25
 18903 ;; This function calls:
 18904 ;;		___awdiv
 18905 ;;		___awmod
 18906 ;;		_getNV
 18907 ;;		_setBounceState
 18908 ;;		_setMultiState
 18909 ;;		_setServoPosition
 18910 ;;		_setServoState
 18911 ;;		_setTimedResponseDelay
 18912 ;;		_setType
 18913 ;;		_startBounceOutput
 18914 ;;		_startMultiOutput
 18915 ;;		_startServoOutput
 18916 ;; This function is called by:
 18917 ;;		_setNV
 18918 ;; This function uses a non-reentrant model
 18919 ;;
 18920                           
 18921                           	psect	text53
 18922   002D60                     __ptext53:
 18923                           	callstack 0
 18924   002D60                     _APP_nvValueChanged:
 18925                           	callstack 2
 18926                           
 18927                           ;incstack = 0
 18928                           ;APP_nvValueChanged@index stored from wreg
 18929   002D60  0101               	movlb	1	; () banked
 18930   002D62  6FF2               	movwf	APP_nvValueChanged@index& (0+255),b
 18931                           
 18932                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 18933   002D64  0EF0               	movlw	240
 18934   002D66  0101               	movlb	1	; () banked
 18935   002D68  25F2               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18936   002D6A  0100               	movlb	0	; () banked
 18937   002D6C  6F8D               	movwf	___awmod@dividend& (0+255),b
 18938   002D6E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18939   002D70  0EFF               	movlw	255
 18940   002D72  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18941   002D74  0E00               	movlw	0
 18942   002D76  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18943   002D78  0E07               	movlw	7
 18944   002D7A  6F8F               	movwf	___awmod@divisor& (0+255),b
 18945   002D7C  EC31  F057         	call	___awmod	;wreg free
 18946   002D80  0100               	movlb	0	; () banked
 18947   002D82  518D               	movf	?___awmod& (0+255),w,b
 18948   002D84  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 18949   002D86  A4D8               	btfss	status,2,c
 18950   002D88  D01B               	goto	l20672
 18951                           
 18952                           ; BSR set to: 0
 18953                           ;../universalNv.c: 110:         io = index-16;
 18954   002D8A  0101               	movlb	1	; () banked
 18955   002D8C  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 18956   002D8E  0FF0               	addlw	240
 18957   002D90  6FF3               	movwf	APP_nvValueChanged@io& (0+255),b
 18958                           
 18959                           ; BSR set to: 1
 18960                           ;../universalNv.c: 111:         io /= 7;
 18961   002D92  C1F3  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 18962   002D96  0100               	movlb	0	; () banked
 18963   002D98  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18964   002D9A  0E00               	movlw	0
 18965   002D9C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18966   002D9E  0E07               	movlw	7
 18967   002DA0  6F99               	movwf	___awdiv@divisor& (0+255),b
 18968   002DA2  EC1C  F053         	call	___awdiv	;wreg free
 18969   002DA6  0100               	movlb	0	; () banked
 18970   002DA8  5197               	movf	?___awdiv& (0+255),w,b
 18971   002DAA  0101               	movlb	1	; () banked
 18972   002DAC  6FF3               	movwf	APP_nvValueChanged@io& (0+255),b
 18973                           
 18974                           ; BSR set to: 1
 18975                           ;../universalNv.c: 112:         if (oldValue != value) {
 18976   002DAE  51ED               	movf	APP_nvValueChanged@value& (0+255),w,b
 18977   002DB0  19EE               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 18978   002DB2  B4D8               	btfsc	status,2,c
 18979   002DB4  D005               	goto	l20672
 18980                           
 18981                           ; BSR set to: 1
 18982                           ;../universalNv.c: 113:             setType(io, value);
 18983   002DB6  C1ED  F1EA         	movff	APP_nvValueChanged@value,setType@type
 18984   002DBA  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18985   002DBC  ECA0  F059         	call	_setType
 18986   002DC0                     l20672:
 18987                           
 18988                           ;../universalNv.c: 116:     if (index == 5) {
 18989   002DC0  0E05               	movlw	5
 18990   002DC2  0101               	movlb	1	; () banked
 18991   002DC4  19F2               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18992   002DC6  A4D8               	btfss	status,2,c
 18993   002DC8  D003               	goto	l20676
 18994                           
 18995                           ; BSR set to: 1
 18996                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 18997   002DCA  51ED               	movf	APP_nvValueChanged@value& (0+255),w,b
 18998   002DCC  EC09  F063         	call	_setTimedResponseDelay
 18999   002DD0                     l20676:
 19000                           
 19001                           ;../universalNv.c: 121:     if (index == 4) {
 19002   002DD0  0E04               	movlw	4
 19003   002DD2  0101               	movlb	1	; () banked
 19004   002DD4  19F2               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 19005   002DD6  B4D8               	btfsc	status,2,c
 19006                           
 19007                           ; BSR set to: 1
 19008                           ;../universalNv.c: 122:         WPUB = value;
 19009   002DD8  C1ED  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 19010                           
 19011                           ; BSR set to: 1
 19012                           ;../universalNv.c: 215:     if (index >= 16) {
 19013   002DDC  0E0F               	movlw	15
 19014   002DDE  65F2               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 19015   002DE0  0012               	return	
 19016                           
 19017                           ; BSR set to: 1
 19018                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 19019   002DE2  0EF0               	movlw	240
 19020   002DE4  25F2               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19021   002DE6  0100               	movlb	0	; () banked
 19022   002DE8  6F97               	movwf	___awdiv@dividend& (0+255),b
 19023   002DEA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19024   002DEC  0EFF               	movlw	255
 19025   002DEE  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19026   002DF0  0E00               	movlw	0
 19027   002DF2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19028   002DF4  0E07               	movlw	7
 19029   002DF6  6F99               	movwf	___awdiv@divisor& (0+255),b
 19030   002DF8  EC1C  F053         	call	___awdiv	;wreg free
 19031   002DFC  0100               	movlb	0	; () banked
 19032   002DFE  5197               	movf	?___awdiv& (0+255),w,b
 19033   002E00  0101               	movlb	1	; () banked
 19034   002E02  6FF3               	movwf	APP_nvValueChanged@io& (0+255),b
 19035   002E04  0EF0               	movlw	240
 19036   002E06  25F2               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19037   002E08  0100               	movlb	0	; () banked
 19038   002E0A  6F8D               	movwf	___awmod@dividend& (0+255),b
 19039   002E0C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19040   002E0E  0EFF               	movlw	255
 19041   002E10  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19042   002E12  0E00               	movlw	0
 19043   002E14  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19044   002E16  0E07               	movlw	7
 19045   002E18  6F8F               	movwf	___awmod@divisor& (0+255),b
 19046   002E1A  EC31  F057         	call	___awmod	;wreg free
 19047                           
 19048                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 19049   002E1E  D1CF               	goto	l20754
 19050   002E20                     l20684:
 19051                           
 19052                           ; BSR set to: 0
 19053                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 19054   002E20  0101               	movlb	1	; () banked
 19055   002E22  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19056   002E24  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19057   002E26  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19058   002E28  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19059   002E2A  0D07               	mullw	7
 19060   002E2C  0E12               	movlw	18
 19061   002E2E  26F3               	addwf	243,f,c
 19062   002E30  0E00               	movlw	0
 19063   002E32  22F4               	addwfc	244,f,c
 19064   002E34  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19065   002E36  18F3               	xorwf	243,w,c
 19066   002E38  E113               	bnz	l20690
 19067   002E3A  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19068   002E3C  18F4               	xorwf	244,w,c
 19069   002E3E  A4D8               	btfss	status,2,c
 19070   002E40  D00F               	goto	l20690
 19071                           
 19072                           ; BSR set to: 1
 19073                           ;../universalNv.c: 233:                     setServoState(io, 2);
 19074   002E42  0E02               	movlw	2
 19075   002E44  0100               	movlb	0	; () banked
 19076   002E46  6F91               	movwf	setServoState@action& (0+255),b
 19077   002E48  0101               	movlb	1	; () banked
 19078   002E4A  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19079   002E4C  EC7F  F04A         	call	_setServoState
 19080                           
 19081                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 19082   002E50  0E02               	movlw	2
 19083   002E52  0100               	movlb	0	; () banked
 19084   002E54  6F91               	movwf	startServoOutput@action& (0+255),b
 19085   002E56  0101               	movlb	1	; () banked
 19086   002E58  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19087   002E5A  EC5D  F049         	call	_startServoOutput
 19088                           
 19089                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 19090   002E5E  0012               	return	
 19091   002E60                     l20690:
 19092                           
 19093                           ; BSR set to: 1
 19094   002E60  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19095   002E62  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19096   002E64  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19097   002E66  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19098   002E68  0D07               	mullw	7
 19099   002E6A  0E13               	movlw	19
 19100   002E6C  26F3               	addwf	243,f,c
 19101   002E6E  0E00               	movlw	0
 19102   002E70  22F4               	addwfc	244,f,c
 19103   002E72  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19104   002E74  18F3               	xorwf	243,w,c
 19105   002E76  E113               	bnz	l20696
 19106   002E78  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19107   002E7A  18F4               	xorwf	244,w,c
 19108   002E7C  A4D8               	btfss	status,2,c
 19109   002E7E  D00F               	goto	l20696
 19110                           
 19111                           ; BSR set to: 1
 19112                           ;../universalNv.c: 236:                     setServoState(io, 1);
 19113   002E80  0E01               	movlw	1
 19114   002E82  0100               	movlb	0	; () banked
 19115   002E84  6F91               	movwf	setServoState@action& (0+255),b
 19116   002E86  0101               	movlb	1	; () banked
 19117   002E88  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19118   002E8A  EC7F  F04A         	call	_setServoState
 19119                           
 19120                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 19121   002E8E  0E01               	movlw	1
 19122   002E90  0100               	movlb	0	; () banked
 19123   002E92  6F91               	movwf	startServoOutput@action& (0+255),b
 19124   002E94  0101               	movlb	1	; () banked
 19125   002E96  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19126   002E98  EC5D  F049         	call	_startServoOutput
 19127                           
 19128                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 19129   002E9C  0012               	return	
 19130   002E9E                     l20696:
 19131                           
 19132                           ; BSR set to: 1
 19133   002E9E  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19134   002EA0  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19135   002EA2  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19136   002EA4  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19137   002EA6  0D07               	mullw	7
 19138   002EA8  0E11               	movlw	17
 19139   002EAA  26F3               	addwf	243,f,c
 19140   002EAC  0E00               	movlw	0
 19141   002EAE  22F4               	addwfc	244,f,c
 19142   002EB0  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19143   002EB2  18F3               	xorwf	243,w,c
 19144   002EB4  E103               	bnz	u21171
 19145   002EB6  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19146   002EB8  18F4               	xorwf	244,w,c
 19147   002EBA  A4D8               	btfss	status,2,c
 19148   002EBC                     u21171:
 19149   002EBC  0012               	return	
 19150                           
 19151                           ; BSR set to: 1
 19152                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 19153   002EBE  AFED               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19154   002EC0  0012               	return	
 19155                           
 19156                           ; BSR set to: 1
 19157   002EC2  BFEE               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19158   002EC4  0012               	return	
 19159                           
 19160                           ; BSR set to: 1
 19161                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 19162   002EC6  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19163   002EC8  0D07               	mullw	7
 19164   002ECA  50F3               	movf	243,w,c
 19165   002ECC  0F12               	addlw	18
 19166   002ECE  EC52  F05E         	call	_getNV
 19167   002ED2  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19168   002ED6  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19169   002EDA  0E00               	movlw	0
 19170   002EDC  0100               	movlb	0	; () banked
 19171   002EDE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19172   002EE0  0E02               	movlw	2
 19173   002EE2  6F99               	movwf	___awdiv@divisor& (0+255),b
 19174   002EE4  EC1C  F053         	call	___awdiv	;wreg free
 19175   002EE8  C097  F1EF         	movff	?___awdiv,??_APP_nvValueChanged
 19176   002EEC  C098  F1F0         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19177   002EF0  0101               	movlb	1	; () banked
 19178   002EF2  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19179   002EF4  0D07               	mullw	7
 19180   002EF6  50F3               	movf	243,w,c
 19181   002EF8  0F13               	addlw	19
 19182   002EFA  EC52  F05E         	call	_getNV
 19183   002EFE  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19184   002F02  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19185   002F06  0E00               	movlw	0
 19186   002F08  0100               	movlb	0	; () banked
 19187   002F0A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19188   002F0C  0E02               	movlw	2
 19189   002F0E  6F99               	movwf	___awdiv@divisor& (0+255),b
 19190   002F10  EC1C  F053         	call	___awdiv	;wreg free
 19191   002F14  0100               	movlb	0	; () banked
 19192   002F16  5197               	movf	?___awdiv& (0+255),w,b
 19193   002F18  0101               	movlb	1	; () banked
 19194   002F1A  25EF               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19195   002F1C  0100               	movlb	0	; () banked
 19196   002F1E  6F9F               	movwf	setServoPosition@pos& (0+255),b
 19197   002F20  0101               	movlb	1	; () banked
 19198   002F22  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19199   002F24  EC77  F061         	call	_setServoPosition
 19200                           
 19201                           ; BSR set to: 1
 19202                           
 19203                           ;../universalNv.c: 245:                 }
 19204   002F28  0012               	return	
 19205   002F2A                     l20704:
 19206                           
 19207                           ; BSR set to: 0
 19208                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 19209   002F2A  0101               	movlb	1	; () banked
 19210   002F2C  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19211   002F2E  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19212   002F30  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19213   002F32  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19214   002F34  0D07               	mullw	7
 19215   002F36  0E13               	movlw	19
 19216   002F38  26F3               	addwf	243,f,c
 19217   002F3A  0E00               	movlw	0
 19218   002F3C  22F4               	addwfc	244,f,c
 19219   002F3E  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19220   002F40  18F3               	xorwf	243,w,c
 19221   002F42  E113               	bnz	l20708
 19222   002F44  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19223   002F46  18F4               	xorwf	244,w,c
 19224   002F48  A4D8               	btfss	status,2,c
 19225   002F4A  D00F               	goto	l20708
 19226                           
 19227                           ; BSR set to: 1
 19228                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 19229   002F4C  0E02               	movlw	2
 19230   002F4E  0100               	movlb	0	; () banked
 19231   002F50  6F91               	movwf	setBounceState@action& (0+255),b
 19232   002F52  0101               	movlb	1	; () banked
 19233   002F54  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19234   002F56  ECDD  F04A         	call	_setBounceState
 19235                           
 19236                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 19237   002F5A  0E02               	movlw	2
 19238   002F5C  0100               	movlb	0	; () banked
 19239   002F5E  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19240   002F60  0101               	movlb	1	; () banked
 19241   002F62  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19242   002F64  ECA9  F058         	call	_startBounceOutput
 19243                           
 19244                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 19245   002F68  0012               	return	
 19246   002F6A                     l20708:
 19247                           
 19248                           ; BSR set to: 1
 19249   002F6A  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19250   002F6C  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19251   002F6E  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19252   002F70  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19253   002F72  0D07               	mullw	7
 19254   002F74  0E12               	movlw	18
 19255   002F76  26F3               	addwf	243,f,c
 19256   002F78  0E00               	movlw	0
 19257   002F7A  22F4               	addwfc	244,f,c
 19258   002F7C  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19259   002F7E  18F3               	xorwf	243,w,c
 19260   002F80  E113               	bnz	l20712
 19261   002F82  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19262   002F84  18F4               	xorwf	244,w,c
 19263   002F86  A4D8               	btfss	status,2,c
 19264   002F88  D00F               	goto	l20712
 19265                           
 19266                           ; BSR set to: 1
 19267                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 19268   002F8A  0E01               	movlw	1
 19269   002F8C  0100               	movlb	0	; () banked
 19270   002F8E  6F91               	movwf	setBounceState@action& (0+255),b
 19271   002F90  0101               	movlb	1	; () banked
 19272   002F92  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19273   002F94  ECDD  F04A         	call	_setBounceState
 19274                           
 19275                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 19276   002F98  0E01               	movlw	1
 19277   002F9A  0100               	movlb	0	; () banked
 19278   002F9C  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19279   002F9E  0101               	movlb	1	; () banked
 19280   002FA0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19281   002FA2  ECA9  F058         	call	_startBounceOutput
 19282                           
 19283                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 19284   002FA6  0012               	return	
 19285   002FA8                     l20712:
 19286                           
 19287                           ; BSR set to: 1
 19288   002FA8  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19289   002FAA  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19290   002FAC  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19291   002FAE  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19292   002FB0  0D07               	mullw	7
 19293   002FB2  0E11               	movlw	17
 19294   002FB4  26F3               	addwf	243,f,c
 19295   002FB6  0E00               	movlw	0
 19296   002FB8  22F4               	addwfc	244,f,c
 19297   002FBA  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19298   002FBC  18F3               	xorwf	243,w,c
 19299   002FBE  E103               	bnz	u21221
 19300   002FC0  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19301   002FC2  18F4               	xorwf	244,w,c
 19302   002FC4  A4D8               	btfss	status,2,c
 19303   002FC6                     u21221:
 19304   002FC6  0012               	return	
 19305                           
 19306                           ; BSR set to: 1
 19307                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 19308   002FC8  AFED               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19309   002FCA  0012               	return	
 19310                           
 19311                           ; BSR set to: 1
 19312   002FCC  BFEE               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19313   002FCE  0012               	return	
 19314                           
 19315                           ; BSR set to: 1
 19316                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 19317   002FD0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19318   002FD2  0D07               	mullw	7
 19319   002FD4  50F3               	movf	243,w,c
 19320   002FD6  0F12               	addlw	18
 19321   002FD8  EC52  F05E         	call	_getNV
 19322   002FDC  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19323   002FE0  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19324   002FE4  0E00               	movlw	0
 19325   002FE6  0100               	movlb	0	; () banked
 19326   002FE8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19327   002FEA  0E02               	movlw	2
 19328   002FEC  6F99               	movwf	___awdiv@divisor& (0+255),b
 19329   002FEE  EC1C  F053         	call	___awdiv	;wreg free
 19330   002FF2  C097  F1EF         	movff	?___awdiv,??_APP_nvValueChanged
 19331   002FF6  C098  F1F0         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19332   002FFA  0101               	movlb	1	; () banked
 19333   002FFC  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19334   002FFE  0D07               	mullw	7
 19335   003000  50F3               	movf	243,w,c
 19336   003002  0F13               	addlw	19
 19337   003004  EC52  F05E         	call	_getNV
 19338   003008  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19339   00300C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19340   003010  0E00               	movlw	0
 19341   003012  0100               	movlb	0	; () banked
 19342   003014  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19343   003016  0E02               	movlw	2
 19344   003018  6F99               	movwf	___awdiv@divisor& (0+255),b
 19345   00301A  EC1C  F053         	call	___awdiv	;wreg free
 19346   00301E  0100               	movlb	0	; () banked
 19347   003020  5197               	movf	?___awdiv& (0+255),w,b
 19348   003022  0101               	movlb	1	; () banked
 19349   003024  25EF               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19350   003026  6FF1               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19351   003028  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19352   00302A  0FA9               	addlw	low _currentPos
 19353   00302C  6ED9               	movwf	fsr2l,c
 19354   00302E  6ADA               	clrf	fsr2h,c
 19355   003030  C1F1  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19356   003034  0012               	return	
 19357   003036                     l20720:
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 19361   003036  0101               	movlb	1	; () banked
 19362   003038  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19363   00303A  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19364   00303C  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19365   00303E  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19366   003040  0D07               	mullw	7
 19367   003042  0E13               	movlw	19
 19368   003044  26F3               	addwf	243,f,c
 19369   003046  0E00               	movlw	0
 19370   003048  22F4               	addwfc	244,f,c
 19371   00304A  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19372   00304C  18F3               	xorwf	243,w,c
 19373   00304E  E113               	bnz	l20726
 19374   003050  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19375   003052  18F4               	xorwf	244,w,c
 19376   003054  A4D8               	btfss	status,2,c
 19377   003056  D00F               	goto	l20726
 19378                           
 19379                           ; BSR set to: 1
 19380                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 19381   003058  0E00               	movlw	0
 19382   00305A  0100               	movlb	0	; () banked
 19383   00305C  6F91               	movwf	setMultiState@action& (0+255),b
 19384   00305E  0101               	movlb	1	; () banked
 19385   003060  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19386   003062  EC08  F044         	call	_setMultiState
 19387                           
 19388                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 19389   003066  0E00               	movlw	0
 19390   003068  0100               	movlb	0	; () banked
 19391   00306A  6F91               	movwf	startMultiOutput@action& (0+255),b
 19392   00306C  0101               	movlb	1	; () banked
 19393   00306E  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19394   003070  ECEB  F04D         	call	_startMultiOutput
 19395                           
 19396                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 19397   003074  0012               	return	
 19398   003076                     l20726:
 19399                           
 19400                           ; BSR set to: 1
 19401   003076  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19402   003078  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19403   00307A  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19404   00307C  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19405   00307E  0D07               	mullw	7
 19406   003080  0E14               	movlw	20
 19407   003082  26F3               	addwf	243,f,c
 19408   003084  0E00               	movlw	0
 19409   003086  22F4               	addwfc	244,f,c
 19410   003088  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19411   00308A  18F3               	xorwf	243,w,c
 19412   00308C  E113               	bnz	l20732
 19413   00308E  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19414   003090  18F4               	xorwf	244,w,c
 19415   003092  A4D8               	btfss	status,2,c
 19416   003094  D00F               	goto	l20732
 19417                           
 19418                           ; BSR set to: 1
 19419                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 19420   003096  0E01               	movlw	1
 19421   003098  0100               	movlb	0	; () banked
 19422   00309A  6F91               	movwf	setMultiState@action& (0+255),b
 19423   00309C  0101               	movlb	1	; () banked
 19424   00309E  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19425   0030A0  EC08  F044         	call	_setMultiState
 19426                           
 19427                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 19428   0030A4  0E01               	movlw	1
 19429   0030A6  0100               	movlb	0	; () banked
 19430   0030A8  6F91               	movwf	startMultiOutput@action& (0+255),b
 19431   0030AA  0101               	movlb	1	; () banked
 19432   0030AC  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19433   0030AE  ECEB  F04D         	call	_startMultiOutput
 19434                           
 19435                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 19436   0030B2  0012               	return	
 19437   0030B4                     l20732:
 19438                           
 19439                           ; BSR set to: 1
 19440   0030B4  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19441   0030B6  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19442   0030B8  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19443   0030BA  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19444   0030BC  0D07               	mullw	7
 19445   0030BE  0E15               	movlw	21
 19446   0030C0  26F3               	addwf	243,f,c
 19447   0030C2  0E00               	movlw	0
 19448   0030C4  22F4               	addwfc	244,f,c
 19449   0030C6  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19450   0030C8  18F3               	xorwf	243,w,c
 19451   0030CA  E113               	bnz	l20738
 19452   0030CC  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19453   0030CE  18F4               	xorwf	244,w,c
 19454   0030D0  A4D8               	btfss	status,2,c
 19455   0030D2  D00F               	goto	l20738
 19456                           
 19457                           ; BSR set to: 1
 19458                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 19459   0030D4  0E02               	movlw	2
 19460   0030D6  0100               	movlb	0	; () banked
 19461   0030D8  6F91               	movwf	setMultiState@action& (0+255),b
 19462   0030DA  0101               	movlb	1	; () banked
 19463   0030DC  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19464   0030DE  EC08  F044         	call	_setMultiState
 19465                           
 19466                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 19467   0030E2  0E02               	movlw	2
 19468   0030E4  0100               	movlb	0	; () banked
 19469   0030E6  6F91               	movwf	startMultiOutput@action& (0+255),b
 19470   0030E8  0101               	movlb	1	; () banked
 19471   0030EA  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19472   0030EC  ECEB  F04D         	call	_startMultiOutput
 19473                           
 19474                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 19475   0030F0  0012               	return	
 19476   0030F2                     l20738:
 19477                           
 19478                           ; BSR set to: 1
 19479   0030F2  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19480   0030F4  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19481   0030F6  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19482   0030F8  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19483   0030FA  0D07               	mullw	7
 19484   0030FC  0E16               	movlw	22
 19485   0030FE  26F3               	addwf	243,f,c
 19486   003100  0E00               	movlw	0
 19487   003102  22F4               	addwfc	244,f,c
 19488   003104  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19489   003106  18F3               	xorwf	243,w,c
 19490   003108  E113               	bnz	l20744
 19491   00310A  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19492   00310C  18F4               	xorwf	244,w,c
 19493   00310E  A4D8               	btfss	status,2,c
 19494   003110  D00F               	goto	l20744
 19495                           
 19496                           ; BSR set to: 1
 19497                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 19498   003112  0E03               	movlw	3
 19499   003114  0100               	movlb	0	; () banked
 19500   003116  6F91               	movwf	setMultiState@action& (0+255),b
 19501   003118  0101               	movlb	1	; () banked
 19502   00311A  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19503   00311C  EC08  F044         	call	_setMultiState
 19504                           
 19505                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 19506   003120  0E03               	movlw	3
 19507   003122  0100               	movlb	0	; () banked
 19508   003124  6F91               	movwf	startMultiOutput@action& (0+255),b
 19509   003126  0101               	movlb	1	; () banked
 19510   003128  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19511   00312A  ECEB  F04D         	call	_startMultiOutput
 19512                           
 19513                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 19514   00312E  0012               	return	
 19515   003130                     l20744:
 19516                           
 19517                           ; BSR set to: 1
 19518   003130  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19519   003132  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19520   003134  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19521   003136  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19522   003138  0D07               	mullw	7
 19523   00313A  0E11               	movlw	17
 19524   00313C  26F3               	addwf	243,f,c
 19525   00313E  0E00               	movlw	0
 19526   003140  22F4               	addwfc	244,f,c
 19527   003142  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19528   003144  18F3               	xorwf	243,w,c
 19529   003146  E152               	bnz	l813
 19530   003148  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19531   00314A  18F4               	xorwf	244,w,c
 19532   00314C  A4D8               	btfss	status,2,c
 19533   00314E  0012               	return	
 19534                           
 19535                           ; BSR set to: 1
 19536                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 19537   003150  AFED               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19538   003152  0012               	return	
 19539                           
 19540                           ; BSR set to: 1
 19541   003154  BFEE               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19542   003156  0012               	return	
 19543                           
 19544                           ; BSR set to: 1
 19545                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 19546   003158  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19547   00315A  0D07               	mullw	7
 19548   00315C  50F3               	movf	243,w,c
 19549   00315E  0F12               	addlw	18
 19550   003160  EC52  F05E         	call	_getNV
 19551   003164  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19552   003168  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19553   00316C  0E00               	movlw	0
 19554   00316E  0100               	movlb	0	; () banked
 19555   003170  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19556   003172  0E02               	movlw	2
 19557   003174  6F99               	movwf	___awdiv@divisor& (0+255),b
 19558   003176  EC1C  F053         	call	___awdiv	;wreg free
 19559   00317A  C097  F1EF         	movff	?___awdiv,??_APP_nvValueChanged
 19560   00317E  C098  F1F0         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19561   003182  0101               	movlb	1	; () banked
 19562   003184  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19563   003186  0D07               	mullw	7
 19564   003188  50F3               	movf	243,w,c
 19565   00318A  0F13               	addlw	19
 19566   00318C  EC52  F05E         	call	_getNV
 19567   003190  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19568   003194  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19569   003198  0E00               	movlw	0
 19570   00319A  0100               	movlb	0	; () banked
 19571   00319C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19572   00319E  0E02               	movlw	2
 19573   0031A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 19574   0031A2  EC1C  F053         	call	___awdiv	;wreg free
 19575   0031A6  0100               	movlb	0	; () banked
 19576   0031A8  5197               	movf	?___awdiv& (0+255),w,b
 19577   0031AA  0101               	movlb	1	; () banked
 19578   0031AC  25EF               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19579   0031AE  6FF1               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19580   0031B0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19581   0031B2  0FA9               	addlw	low _currentPos
 19582   0031B4  6ED9               	movwf	fsr2l,c
 19583   0031B6  6ADA               	clrf	fsr2h,c
 19584   0031B8  C1F1  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19585   0031BC  0012               	return	
 19586   0031BE                     l20754:
 19587   0031BE  0101               	movlb	1	; () banked
 19588   0031C0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19589   0031C2  0D07               	mullw	7
 19590   0031C4  50F3               	movf	243,w,c
 19591   0031C6  0F10               	addlw	16
 19592   0031C8  EC52  F05E         	call	_getNV
 19593                           
 19594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19595                           ; Switch size 1, requested type "simple"
 19596                           ; Number of cases is 1, Range of values is 0 to 0
 19597                           ; switch strategies available:
 19598                           ; Name         Instructions Cycles
 19599                           ; simple_byte            4     3 (average)
 19600                           ;	Chosen strategy is simple_byte
 19601   0031CC  0100               	movlb	0	; () banked
 19602   0031CE  518E               	movf	(?_getNV+1)& (0+255),w,b
 19603   0031D0  0A00               	xorlw	0	; case 0
 19604   0031D2  A4D8               	btfss	status,2,c
 19605   0031D4  0012               	return	
 19606                           
 19607                           ; BSR set to: 0
 19608                           ; Switch size 1, requested type "simple"
 19609                           ; Number of cases is 3, Range of values is 2 to 4
 19610                           ; switch strategies available:
 19611                           ; Name         Instructions Cycles
 19612                           ; simple_byte           10     6 (average)
 19613                           ;	Chosen strategy is simple_byte
 19614   0031D6  518D               	movf	?_getNV& (0+255),w,b
 19615   0031D8  0A02               	xorlw	2	; case 2
 19616   0031DA  B4D8               	btfsc	status,2,c
 19617   0031DC  D621               	goto	l20684
 19618   0031DE  0A01               	xorlw	1	; case 3
 19619   0031E0  B4D8               	btfsc	status,2,c
 19620   0031E2  D6A3               	goto	l20704
 19621   0031E4  0A07               	xorlw	7	; case 4
 19622   0031E6  A4D8               	btfss	status,2,c
 19623   0031E8  0012               	return	
 19624   0031EA  D725               	goto	l20720
 19625   0031EC                     l813:
 19626   0031EC  0012               	return		;funcret
 19627   0031EE                     __end_of_APP_nvValueChanged:
 19628                           	callstack 0
 19629                           
 19630 ;; *************** function _setTimedResponseDelay *****************
 19631 ;; Defined at:
 19632 ;;		line 901 in file "../../VLCBlib_PIC/vlcb.c"
 19633 ;; Parameters:    Size  Location     Type
 19634 ;;  delay           1    wreg     unsigned char 
 19635 ;; Auto vars:     Size  Location     Type
 19636 ;;  delay           1   45[BANK0 ] unsigned char 
 19637 ;; Return value:  Size  Location     Type
 19638 ;;                  1    wreg      void 
 19639 ;; Registers used:
 19640 ;;		wreg
 19641 ;; Tracked objects:
 19642 ;;		On entry : 0/0
 19643 ;;		On exit  : 0/0
 19644 ;;		Unchanged: 0/0
 19645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19649 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19650 ;;Total ram usage:        1 bytes
 19651 ;; Hardware stack levels used: 1
 19652 ;; Hardware stack levels required when called: 12
 19653 ;; This function calls:
 19654 ;;		Nothing
 19655 ;; This function is called by:
 19656 ;;		_setup
 19657 ;;		_APP_nvValueChanged
 19658 ;; This function uses a non-reentrant model
 19659 ;;
 19660                           
 19661                           	psect	text54
 19662   00C612                     __ptext54:
 19663                           	callstack 0
 19664   00C612                     _setTimedResponseDelay:
 19665                           	callstack 17
 19666                           
 19667                           ;incstack = 0
 19668                           ;setTimedResponseDelay@delay stored from wreg
 19669   00C612  0100               	movlb	0	; () banked
 19670   00C614  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 19671                           
 19672                           ;../../VLCBlib_PIC/vlcb.c: 902:     timedResponseDelay = delay;
 19673   00C616  C08D  F164         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 19674   00C61A  0012               	return		;funcret
 19675   00C61C                     __end_of_setTimedResponseDelay:
 19676                           	callstack 0
 19677                           
 19678 ;; *************** function _setServoPosition *****************
 19679 ;; Defined at:
 19680 ;;		line 683 in file "../servo.c"
 19681 ;; Parameters:    Size  Location     Type
 19682 ;;  io              1    wreg     unsigned char 
 19683 ;;  pos             1   63[BANK0 ] unsigned char 
 19684 ;; Auto vars:     Size  Location     Type
 19685 ;;  io              1   64[BANK0 ] unsigned char 
 19686 ;; Return value:  Size  Location     Type
 19687 ;;                  1    wreg      void 
 19688 ;; Registers used:
 19689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19690 ;; Tracked objects:
 19691 ;;		On entry : 0/0
 19692 ;;		On exit  : 0/0
 19693 ;;		Unchanged: 0/0
 19694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19695 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19699 ;;Total ram usage:        2 bytes
 19700 ;; Hardware stack levels used: 1
 19701 ;; Hardware stack levels required when called: 12
 19702 ;; This function calls:
 19703 ;;		Nothing
 19704 ;; This function is called by:
 19705 ;;		_APP_nvValueChanged
 19706 ;;		_setOutputPosition
 19707 ;; This function uses a non-reentrant model
 19708 ;;
 19709                           
 19710                           	psect	text55
 19711   00C2EE                     __ptext55:
 19712                           	callstack 0
 19713   00C2EE                     _setServoPosition:
 19714                           	callstack 15
 19715                           
 19716                           ;incstack = 0
 19717                           ;setServoPosition@io stored from wreg
 19718   00C2EE  0100               	movlb	0	; () banked
 19719   00C2F0  6FA0               	movwf	setServoPosition@io& (0+255),b
 19720                           
 19721                           ;../servo.c: 684:     targetPos[io] = pos;
 19722   00C2F2  0E20               	movlw	low _targetPos
 19723   00C2F4  0100               	movlb	0	; () banked
 19724   00C2F6  25A0               	addwf	setServoPosition@io& (0+255),w,b
 19725   00C2F8  6ED9               	movwf	fsr2l,c
 19726   00C2FA  6ADA               	clrf	fsr2h,c
 19727   00C2FC  0E01               	movlw	high _targetPos
 19728   00C2FE  22DA               	addwfc	fsr2h,f,c
 19729   00C300  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19730                           
 19731                           ;../servo.c: 685:     currentPos[io] = pos;
 19732   00C304  51A0               	movf	setServoPosition@io& (0+255),w,b
 19733   00C306  0FA9               	addlw	low _currentPos
 19734   00C308  6ED9               	movwf	fsr2l,c
 19735   00C30A  6ADA               	clrf	fsr2h,c
 19736   00C30C  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19737                           
 19738                           ; BSR set to: 0
 19739   00C310  0012               	return		;funcret
 19740   00C312                     __end_of_setServoPosition:
 19741                           	callstack 0
 19742                           
 19743 ;; *************** function _APP_nvValidate *****************
 19744 ;; Defined at:
 19745 ;;		line 299 in file "../universalNv.c"
 19746 ;; Parameters:    Size  Location     Type
 19747 ;;  index           1    wreg     unsigned char 
 19748 ;;  value           1   63[BANK0 ] unsigned char 
 19749 ;; Auto vars:     Size  Location     Type
 19750 ;;  index           1   64[BANK0 ] unsigned char 
 19751 ;;  io              1    0        unsigned char 
 19752 ;; Return value:  Size  Location     Type
 19753 ;;                  1    wreg      enum E12929
 19754 ;; Registers used:
 19755 ;;		wreg, status,2, status,0, cstack
 19756 ;; Tracked objects:
 19757 ;;		On entry : 0/0
 19758 ;;		On exit  : 0/0
 19759 ;;		Unchanged: 0/0
 19760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19761 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19762 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19765 ;;Total ram usage:        2 bytes
 19766 ;; Hardware stack levels used: 1
 19767 ;; Hardware stack levels required when called: 13
 19768 ;; This function calls:
 19769 ;;		___awdiv
 19770 ;;		___awmod
 19771 ;; This function is called by:
 19772 ;;		_setNV
 19773 ;; This function uses a non-reentrant model
 19774 ;;
 19775                           
 19776                           	psect	text56
 19777   00AD0C                     __ptext56:
 19778                           	callstack 0
 19779   00AD0C                     _APP_nvValidate:
 19780                           	callstack 14
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;incstack = 0
 19784                           ;APP_nvValidate@index stored from wreg
 19785   00AD0C  0100               	movlb	0	; () banked
 19786   00AD0E  6FA0               	movwf	APP_nvValidate@index& (0+255),b
 19787                           
 19788                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 19789   00AD10  0E0F               	movlw	15
 19790   00AD12  0100               	movlb	0	; () banked
 19791   00AD14  65A0               	cpfsgt	APP_nvValidate@index& (0+255),b
 19792   00AD16  D031               	goto	l819
 19793                           
 19794                           ; BSR set to: 0
 19795   00AD18  0EF0               	movlw	240
 19796   00AD1A  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19797   00AD1C  6F8D               	movwf	___awmod@dividend& (0+255),b
 19798   00AD1E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19799   00AD20  0EFF               	movlw	255
 19800   00AD22  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19801   00AD24  0E00               	movlw	0
 19802   00AD26  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19803   00AD28  0E07               	movlw	7
 19804   00AD2A  6F8F               	movwf	___awmod@divisor& (0+255),b
 19805   00AD2C  EC31  F057         	call	___awmod	;wreg free
 19806   00AD30  0100               	movlb	0	; () banked
 19807   00AD32  518D               	movf	?___awmod& (0+255),w,b
 19808   00AD34  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19809   00AD36  A4D8               	btfss	status,2,c
 19810   00AD38  D020               	goto	l819
 19811                           
 19812                           ; BSR set to: 0
 19813   00AD3A  0EF0               	movlw	240
 19814   00AD3C  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19815   00AD3E  6F97               	movwf	___awdiv@dividend& (0+255),b
 19816   00AD40  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19817   00AD42  0EFF               	movlw	255
 19818   00AD44  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19819   00AD46  0E00               	movlw	0
 19820   00AD48  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19821   00AD4A  0E07               	movlw	7
 19822   00AD4C  6F99               	movwf	___awdiv@divisor& (0+255),b
 19823   00AD4E  EC1C  F053         	call	___awdiv	;wreg free
 19824                           
 19825                           ;../universalNv.c: 308:         switch (value) {
 19826   00AD52  D002               	goto	l20774
 19827   00AD54                     l20768:
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;../universalNv.c: 331:                 return INVALID;
 19831   00AD54  0E00               	movlw	0
 19832   00AD56  0012               	return	
 19833   00AD58                     l20774:
 19834   00AD58  0100               	movlb	0	; () banked
 19835   00AD5A  519F               	movf	APP_nvValidate@value& (0+255),w,b
 19836                           
 19837                           ; Switch size 1, requested type "simple"
 19838                           ; Number of cases is 5, Range of values is 0 to 4
 19839                           ; switch strategies available:
 19840                           ; Name         Instructions Cycles
 19841                           ; simple_byte           16     9 (average)
 19842                           ;	Chosen strategy is simple_byte
 19843   00AD5C  0A00               	xorlw	0	; case 0
 19844   00AD5E  B4D8               	btfsc	status,2,c
 19845   00AD60  D00C               	goto	l819
 19846   00AD62  0A01               	xorlw	1	; case 1
 19847   00AD64  B4D8               	btfsc	status,2,c
 19848   00AD66  D009               	goto	l819
 19849   00AD68  0A03               	xorlw	3	; case 2
 19850   00AD6A  B4D8               	btfsc	status,2,c
 19851   00AD6C  D006               	goto	l819
 19852   00AD6E  0A01               	xorlw	1	; case 3
 19853   00AD70  B4D8               	btfsc	status,2,c
 19854   00AD72  D003               	goto	l819
 19855   00AD74  0A07               	xorlw	7	; case 4
 19856   00AD76  A4D8               	btfss	status,2,c
 19857   00AD78  D7ED               	goto	l20768
 19858   00AD7A                     l819:
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;../universalNv.c: 334:     return VALID;
 19862                           
 19863                           ; BSR set to: 0
 19864   00AD7A  0E01               	movlw	1
 19865                           
 19866                           ; BSR set to: 0
 19867   00AD7C  0012               	return		;funcret
 19868   00AD7E                     __end_of_APP_nvValidate:
 19869                           	callstack 0
 19870                           
 19871 ;; *************** function _producerEsdData *****************
 19872 ;; Defined at:
 19873 ;;		line 194 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19874 ;; Parameters:    Size  Location     Type
 19875 ;;  index           1    wreg     unsigned char 
 19876 ;; Auto vars:     Size  Location     Type
 19877 ;;  index           1   45[BANK0 ] unsigned char 
 19878 ;; Return value:  Size  Location     Type
 19879 ;;                  1    wreg      unsigned char 
 19880 ;; Registers used:
 19881 ;;		wreg, status,2, status,0
 19882 ;; Tracked objects:
 19883 ;;		On entry : 0/0
 19884 ;;		On exit  : 0/0
 19885 ;;		Unchanged: 0/0
 19886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19890 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19891 ;;Total ram usage:        1 bytes
 19892 ;; Hardware stack levels used: 1
 19893 ;; Hardware stack levels required when called: 12
 19894 ;; This function calls:
 19895 ;;		Nothing
 19896 ;; This function is called by:
 19897 ;;		_mnsProcessMessage
 19898 ;; This function uses a non-reentrant model
 19899 ;;
 19900                           
 19901                           	psect	text57
 19902   00C3E8                     __ptext57:
 19903                           	callstack 0
 19904   00C3E8                     _producerEsdData:
 19905                           	callstack 16
 19906                           
 19907                           ; BSR set to: 0
 19908                           ;incstack = 0
 19909                           ;producerEsdData@index stored from wreg
 19910   00C3E8  0100               	movlb	0	; () banked
 19911   00C3EA  6F8D               	movwf	producerEsdData@index& (0+255),b
 19912                           
 19913                           ;../../VLCBlib_PIC/event_producer_happening.c: 195:     switch (index){
 19914   00C3EC  D004               	goto	l22704
 19915   00C3EE                     l22690:
 19916                           
 19917                           ; BSR set to: 0
 19918                           ;../../VLCBlib_PIC/event_producer_happening.c: 197:             return PRODUCER_EV_HAPPE
      +                          NING;
 19919   00C3EE  0E01               	movlw	1
 19920   00C3F0  0012               	return	
 19921   00C3F2                     l22698:
 19922                           
 19923                           ; BSR set to: 0
 19924                           ;../../VLCBlib_PIC/event_producer_happening.c: 201:             return 0;
 19925   00C3F2  0E00               	movlw	0
 19926   00C3F4  0012               	return	
 19927   00C3F6                     l22704:
 19928   00C3F6  0100               	movlb	0	; () banked
 19929   00C3F8  518D               	movf	producerEsdData@index& (0+255),w,b
 19930                           
 19931                           ; Switch size 1, requested type "simple"
 19932                           ; Number of cases is 2, Range of values is 0 to 1
 19933                           ; switch strategies available:
 19934                           ; Name         Instructions Cycles
 19935                           ; simple_byte            7     4 (average)
 19936                           ;	Chosen strategy is simple_byte
 19937   00C3FA  0A00               	xorlw	0	; case 0
 19938   00C3FC  B4D8               	btfsc	status,2,c
 19939   00C3FE  D7F7               	goto	l22690
 19940   00C400  0A01               	xorlw	1	; case 1
 19941   00C402  B4D8               	btfsc	status,2,c
 19942   00C404  D7F4               	goto	l22690
 19943   00C406  D7F5               	goto	l22698
 19944   00C408                     __end_of_producerEsdData:
 19945                           	callstack 0
 19946                           
 19947 ;; *************** function _canEsdData *****************
 19948 ;; Defined at:
 19949 ;;		line 422 in file "../../VLCBlib_PIC/can18_ecan.c"
 19950 ;; Parameters:    Size  Location     Type
 19951 ;;  id              1    wreg     unsigned char 
 19952 ;; Auto vars:     Size  Location     Type
 19953 ;;  id              1   45[BANK0 ] unsigned char 
 19954 ;; Return value:  Size  Location     Type
 19955 ;;                  1    wreg      unsigned char 
 19956 ;; Registers used:
 19957 ;;		wreg, status,2, status,0
 19958 ;; Tracked objects:
 19959 ;;		On entry : 0/0
 19960 ;;		On exit  : 0/0
 19961 ;;		Unchanged: 0/0
 19962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19966 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19967 ;;Total ram usage:        1 bytes
 19968 ;; Hardware stack levels used: 1
 19969 ;; Hardware stack levels required when called: 12
 19970 ;; This function calls:
 19971 ;;		Nothing
 19972 ;; This function is called by:
 19973 ;;		_mnsProcessMessage
 19974 ;; This function uses a non-reentrant model
 19975 ;;
 19976                           
 19977                           	psect	text58
 19978   00C4DE                     __ptext58:
 19979                           	callstack 0
 19980   00C4DE                     _canEsdData:
 19981                           	callstack 16
 19982                           
 19983                           ; BSR set to: 0
 19984                           ;incstack = 0
 19985                           ;canEsdData@id stored from wreg
 19986   00C4DE  0100               	movlb	0	; () banked
 19987   00C4E0  6F8D               	movwf	canEsdData@id& (0+255),b
 19988                           
 19989                           ;../../VLCBlib_PIC/can18_ecan.c: 423:     switch(id) {
 19990   00C4E2  D004               	goto	l22350
 19991   00C4E4                     l22340:
 19992                           
 19993                           ; BSR set to: 0
 19994                           ;../../VLCBlib_PIC/can18_ecan.c: 425:             return CAN_HW_PIC_ECAN;
 19995   00C4E4  0E01               	movlw	1
 19996   00C4E6  0012               	return	
 19997   00C4E8                     l22344:
 19998                           
 19999                           ; BSR set to: 0
 20000                           ;../../VLCBlib_PIC/can18_ecan.c: 427:             return 0;
 20001   00C4E8  0E00               	movlw	0
 20002   00C4EA  0012               	return	
 20003   00C4EC                     l22350:
 20004   00C4EC  0100               	movlb	0	; () banked
 20005   00C4EE  518D               	movf	canEsdData@id& (0+255),w,b
 20006                           
 20007                           ; Switch size 1, requested type "simple"
 20008                           ; Number of cases is 1, Range of values is 1 to 1
 20009                           ; switch strategies available:
 20010                           ; Name         Instructions Cycles
 20011                           ; simple_byte            4     3 (average)
 20012                           ;	Chosen strategy is simple_byte
 20013   00C4F0  0A01               	xorlw	1	; case 1
 20014   00C4F2  B4D8               	btfsc	status,2,c
 20015   00C4F4  D7F7               	goto	l22340
 20016   00C4F6  D7F8               	goto	l22344
 20017   00C4F8                     __end_of_canEsdData:
 20018                           	callstack 0
 20019                           
 20020 ;; *************** function _nvGetESDdata *****************
 20021 ;; Defined at:
 20022 ;;		line 355 in file "../../VLCBlib_PIC/nv.c"
 20023 ;; Parameters:    Size  Location     Type
 20024 ;;  id              1    wreg     unsigned char 
 20025 ;; Auto vars:     Size  Location     Type
 20026 ;;  id              1   45[BANK0 ] unsigned char 
 20027 ;; Return value:  Size  Location     Type
 20028 ;;                  1    wreg      unsigned char 
 20029 ;; Registers used:
 20030 ;;		wreg, status,2, status,0
 20031 ;; Tracked objects:
 20032 ;;		On entry : 0/0
 20033 ;;		On exit  : 0/0
 20034 ;;		Unchanged: 0/0
 20035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20039 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20040 ;;Total ram usage:        1 bytes
 20041 ;; Hardware stack levels used: 1
 20042 ;; Hardware stack levels required when called: 12
 20043 ;; This function calls:
 20044 ;;		Nothing
 20045 ;; This function is called by:
 20046 ;;		_mnsProcessMessage
 20047 ;; This function uses a non-reentrant model
 20048 ;;
 20049                           
 20050                           	psect	text59
 20051   00C4F8                     __ptext59:
 20052                           	callstack 0
 20053   00C4F8                     _nvGetESDdata:
 20054                           	callstack 16
 20055                           
 20056                           ; BSR set to: 0
 20057                           ;incstack = 0
 20058                           ;nvGetESDdata@id stored from wreg
 20059   00C4F8  0100               	movlb	0	; () banked
 20060   00C4FA  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 20061                           
 20062                           ;../../VLCBlib_PIC/nv.c: 356:     switch (id) {
 20063   00C4FC  D004               	goto	l22104
 20064   00C4FE                     l22094:
 20065                           
 20066                           ; BSR set to: 0
 20067   00C4FE  0E7F               	movlw	127
 20068   00C500  0012               	return	
 20069   00C502                     l22098:
 20070                           
 20071                           ; BSR set to: 0
 20072   00C502  0E00               	movlw	0
 20073   00C504  0012               	return	
 20074   00C506                     l22104:
 20075   00C506  0100               	movlb	0	; () banked
 20076   00C508  518D               	movf	nvGetESDdata@id& (0+255),w,b
 20077                           
 20078                           ; Switch size 1, requested type "simple"
 20079                           ; Number of cases is 1, Range of values is 1 to 1
 20080                           ; switch strategies available:
 20081                           ; Name         Instructions Cycles
 20082                           ; simple_byte            4     3 (average)
 20083                           ;	Chosen strategy is simple_byte
 20084   00C50A  0A01               	xorlw	1	; case 1
 20085   00C50C  B4D8               	btfsc	status,2,c
 20086   00C50E  D7F7               	goto	l22094
 20087   00C510  D7F8               	goto	l22098
 20088   00C512                     __end_of_nvGetESDdata:
 20089                           	callstack 0
 20090                           
 20091 ;; *************** function _bootEsdData *****************
 20092 ;; Defined at:
 20093 ;;		line 257 in file "../../VLCBlib_PIC/boot.c"
 20094 ;; Parameters:    Size  Location     Type
 20095 ;;  id              1    wreg     unsigned char 
 20096 ;; Auto vars:     Size  Location     Type
 20097 ;;  id              1   45[BANK0 ] unsigned char 
 20098 ;; Return value:  Size  Location     Type
 20099 ;;                  1    wreg      unsigned char 
 20100 ;; Registers used:
 20101 ;;		wreg, status,2, status,0
 20102 ;; Tracked objects:
 20103 ;;		On entry : 0/0
 20104 ;;		On exit  : 0/0
 20105 ;;		Unchanged: 0/0
 20106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20110 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20111 ;;Total ram usage:        1 bytes
 20112 ;; Hardware stack levels used: 1
 20113 ;; Hardware stack levels required when called: 12
 20114 ;; This function calls:
 20115 ;;		Nothing
 20116 ;; This function is called by:
 20117 ;;		_mnsProcessMessage
 20118 ;; This function uses a non-reentrant model
 20119 ;;
 20120                           
 20121                           	psect	text60
 20122   00C312                     __ptext60:
 20123                           	callstack 0
 20124   00C312                     _bootEsdData:
 20125                           	callstack 16
 20126                           
 20127                           ; BSR set to: 0
 20128                           ;incstack = 0
 20129                           ;bootEsdData@id stored from wreg
 20130   00C312  0100               	movlb	0	; () banked
 20131   00C314  6F8D               	movwf	bootEsdData@id& (0+255),b
 20132                           
 20133                           ;../../VLCBlib_PIC/boot.c: 258:     switch (id) {
 20134   00C316  D006               	goto	l21964
 20135   00C318                     l1272:
 20136                           
 20137                           ; BSR set to: 0
 20138                           ;../../VLCBlib_PIC/boot.c: 261:             return bootloaderType;
 20139   00C318  51C8               	movf	_bootloaderType& (0+255),w,b
 20140   00C31A  0012               	return	
 20141   00C31C                     l1274:
 20142                           
 20143                           ; BSR set to: 0
 20144                           ;../../VLCBlib_PIC/boot.c: 264:             return bootloaderVersion;
 20145   00C31C  5048               	movf	_bootloaderVersion^0,w,c
 20146   00C31E  0012               	return	
 20147   00C320                     l21958:
 20148                           
 20149                           ; BSR set to: 0
 20150                           ;../../VLCBlib_PIC/boot.c: 266:             return 0;
 20151   00C320  0E00               	movlw	0
 20152   00C322  0012               	return	
 20153   00C324                     l21964:
 20154   00C324  0100               	movlb	0	; () banked
 20155   00C326  518D               	movf	bootEsdData@id& (0+255),w,b
 20156                           
 20157                           ; Switch size 1, requested type "simple"
 20158                           ; Number of cases is 2, Range of values is 1 to 2
 20159                           ; switch strategies available:
 20160                           ; Name         Instructions Cycles
 20161                           ; simple_byte            7     4 (average)
 20162                           ;	Chosen strategy is simple_byte
 20163   00C328  0A01               	xorlw	1	; case 1
 20164   00C32A  B4D8               	btfsc	status,2,c
 20165   00C32C  D7F5               	goto	l1272
 20166   00C32E  0A03               	xorlw	3	; case 2
 20167   00C330  B4D8               	btfsc	status,2,c
 20168   00C332  D7F4               	goto	l1274
 20169   00C334  D7F5               	goto	l21958
 20170   00C336                     __end_of_bootEsdData:
 20171                           	callstack 0
 20172                           
 20173 ;; *************** function _consumer2QEsdData *****************
 20174 ;; Defined at:
 20175 ;;		line 364 in file "../event_consumerDualActionQueue.c"
 20176 ;; Parameters:    Size  Location     Type
 20177 ;;  index           1    wreg     unsigned char 
 20178 ;; Auto vars:     Size  Location     Type
 20179 ;;  index           1   45[BANK0 ] unsigned char 
 20180 ;; Return value:  Size  Location     Type
 20181 ;;                  1    wreg      unsigned char 
 20182 ;; Registers used:
 20183 ;;		wreg, status,2, status,0
 20184 ;; Tracked objects:
 20185 ;;		On entry : 0/0
 20186 ;;		On exit  : 0/0
 20187 ;;		Unchanged: 0/0
 20188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20192 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20193 ;;Total ram usage:        1 bytes
 20194 ;; Hardware stack levels used: 1
 20195 ;; Hardware stack levels required when called: 12
 20196 ;; This function calls:
 20197 ;;		Nothing
 20198 ;; This function is called by:
 20199 ;;		_mnsProcessMessage
 20200 ;; This function uses a non-reentrant model
 20201 ;;
 20202                           
 20203                           	psect	text61
 20204   00C408                     __ptext61:
 20205                           	callstack 0
 20206   00C408                     _consumer2QEsdData:
 20207                           	callstack 16
 20208                           
 20209                           ; BSR set to: 0
 20210                           ;incstack = 0
 20211                           ;consumer2QEsdData@index stored from wreg
 20212   00C408  0100               	movlb	0	; () banked
 20213   00C40A  6F8D               	movwf	consumer2QEsdData@index& (0+255),b
 20214                           
 20215                           ;../event_consumerDualActionQueue.c: 365:     switch (index){
 20216   00C40C  D004               	goto	l21410
 20217   00C40E                     l21396:
 20218                           
 20219                           ; BSR set to: 0
 20220                           ;../event_consumerDualActionQueue.c: 367:             return CONSUMER_EV_ACTIONS;
 20221   00C40E  0E01               	movlw	1
 20222   00C410  0012               	return	
 20223   00C412                     l21404:
 20224                           
 20225                           ; BSR set to: 0
 20226                           ;../event_consumerDualActionQueue.c: 371:             return 0;
 20227   00C412  0E00               	movlw	0
 20228   00C414  0012               	return	
 20229   00C416                     l21410:
 20230   00C416  0100               	movlb	0	; () banked
 20231   00C418  518D               	movf	consumer2QEsdData@index& (0+255),w,b
 20232                           
 20233                           ; Switch size 1, requested type "simple"
 20234                           ; Number of cases is 2, Range of values is 0 to 1
 20235                           ; switch strategies available:
 20236                           ; Name         Instructions Cycles
 20237                           ; simple_byte            7     4 (average)
 20238                           ;	Chosen strategy is simple_byte
 20239   00C41A  0A00               	xorlw	0	; case 0
 20240   00C41C  B4D8               	btfsc	status,2,c
 20241   00C41E  D7F7               	goto	l21396
 20242   00C420  0A01               	xorlw	1	; case 1
 20243   00C422  B4D8               	btfsc	status,2,c
 20244   00C424  D7F4               	goto	l21396
 20245   00C426  D7F5               	goto	l21404
 20246   00C428                     __end_of_consumer2QEsdData:
 20247                           	callstack 0
 20248                           
 20249 ;; *************** function _teachGetESDdata *****************
 20250 ;; Defined at:
 20251 ;;		line 528 in file "../../VLCBlib_PIC/event_teach_large.c"
 20252 ;; Parameters:    Size  Location     Type
 20253 ;;  id              1    wreg     unsigned char 
 20254 ;; Auto vars:     Size  Location     Type
 20255 ;;  id              1   45[BANK0 ] unsigned char 
 20256 ;; Return value:  Size  Location     Type
 20257 ;;                  1    wreg      unsigned char 
 20258 ;; Registers used:
 20259 ;;		wreg, status,2, status,0
 20260 ;; Tracked objects:
 20261 ;;		On entry : 0/0
 20262 ;;		On exit  : 0/0
 20263 ;;		Unchanged: 0/0
 20264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20268 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20269 ;;Total ram usage:        1 bytes
 20270 ;; Hardware stack levels used: 1
 20271 ;; Hardware stack levels required when called: 12
 20272 ;; This function calls:
 20273 ;;		Nothing
 20274 ;; This function is called by:
 20275 ;;		_mnsProcessMessage
 20276 ;; This function uses a non-reentrant model
 20277 ;;
 20278                           
 20279                           	psect	text62
 20280   00C336                     __ptext62:
 20281                           	callstack 0
 20282   00C336                     _teachGetESDdata:
 20283                           	callstack 16
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;incstack = 0
 20287                           ;teachGetESDdata@id stored from wreg
 20288   00C336  0100               	movlb	0	; () banked
 20289   00C338  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 20290                           
 20291                           ;../../VLCBlib_PIC/event_teach_large.c: 529:     switch (id) {
 20292   00C33A  D006               	goto	l22652
 20293   00C33C                     l22638:
 20294                           
 20295                           ; BSR set to: 0
 20296   00C33C  0EFF               	movlw	255
 20297   00C33E  0012               	return	
 20298   00C340                     l22642:
 20299                           
 20300                           ; BSR set to: 0
 20301   00C340  0E14               	movlw	20
 20302   00C342  0012               	return	
 20303   00C344                     l22646:
 20304                           
 20305                           ; BSR set to: 0
 20306   00C344  0E00               	movlw	0
 20307   00C346  0012               	return	
 20308   00C348                     l22652:
 20309   00C348  0100               	movlb	0	; () banked
 20310   00C34A  518D               	movf	teachGetESDdata@id& (0+255),w,b
 20311                           
 20312                           ; Switch size 1, requested type "simple"
 20313                           ; Number of cases is 2, Range of values is 1 to 2
 20314                           ; switch strategies available:
 20315                           ; Name         Instructions Cycles
 20316                           ; simple_byte            7     4 (average)
 20317                           ;	Chosen strategy is simple_byte
 20318   00C34C  0A01               	xorlw	1	; case 1
 20319   00C34E  B4D8               	btfsc	status,2,c
 20320   00C350  D7F5               	goto	l22638
 20321   00C352  0A03               	xorlw	3	; case 2
 20322   00C354  B4D8               	btfsc	status,2,c
 20323   00C356  D7F4               	goto	l22642
 20324   00C358  D7F5               	goto	l22646
 20325   00C35A                     __end_of_teachGetESDdata:
 20326                           	callstack 0
 20327                           
 20328 ;; *************** function _producerGetDiagnostic *****************
 20329 ;; Defined at:
 20330 ;;		line 180 in file "../../VLCBlib_PIC/event_producer_happening.c"
 20331 ;; Parameters:    Size  Location     Type
 20332 ;;  index           1    wreg     unsigned char 
 20333 ;; Auto vars:     Size  Location     Type
 20334 ;;  index           1   56[BANK0 ] unsigned char 
 20335 ;; Return value:  Size  Location     Type
 20336 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20337 ;; Registers used:
 20338 ;;		wreg, status,2, status,0, prodl, prodh
 20339 ;; Tracked objects:
 20340 ;;		On entry : 0/0
 20341 ;;		On exit  : 0/0
 20342 ;;		Unchanged: 0/0
 20343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20347 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20348 ;;Total ram usage:        3 bytes
 20349 ;; Hardware stack levels used: 1
 20350 ;; Hardware stack levels required when called: 12
 20351 ;; This function calls:
 20352 ;;		Nothing
 20353 ;; This function is called by:
 20354 ;;		_mnsTRallDiagnosticsCallback
 20355 ;;		_mnsProcessMessage
 20356 ;; This function uses a non-reentrant model
 20357 ;;
 20358                           
 20359                           	psect	text63
 20360   00C186                     __ptext63:
 20361                           	callstack 0
 20362   00C186                     _producerGetDiagnostic:
 20363                           	callstack 15
 20364                           
 20365                           ; BSR set to: 0
 20366                           ;incstack = 0
 20367                           ;producerGetDiagnostic@index stored from wreg
 20368   00C186  0100               	movlb	0	; () banked
 20369   00C188  6F98               	movwf	producerGetDiagnostic@index& (0+255),b
 20370                           
 20371                           ;../../VLCBlib_PIC/event_producer_happening.c: 181:     if (index > 1) {
 20372   00C18A  0E01               	movlw	1
 20373   00C18C  0100               	movlb	0	; () banked
 20374   00C18E  6598               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 20375   00C190  D005               	goto	l21280
 20376                           
 20377                           ; BSR set to: 0
 20378                           ;../../VLCBlib_PIC/event_producer_happening.c: 182:         return ((void*)0);
 20379   00C192  0E00               	movlw	0
 20380   00C194  6F96               	movwf	?_producerGetDiagnostic& (0+255),b
 20381   00C196  0E00               	movlw	0
 20382   00C198  6F97               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20383   00C19A  0012               	return	
 20384   00C19C                     l21280:
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;../../VLCBlib_PIC/event_producer_happening.c: 184:     return &(producerDiagnostics[ind
      +                          ex]);
 20388   00C19C  5198               	movf	producerGetDiagnostic@index& (0+255),w,b
 20389   00C19E  0D02               	mullw	2
 20390   00C1A0  0EAA               	movlw	low _producerDiagnostics
 20391   00C1A2  24F3               	addwf	243,w,c
 20392   00C1A4  6F96               	movwf	?_producerGetDiagnostic& (0+255),b
 20393   00C1A6  0E01               	movlw	high _producerDiagnostics
 20394   00C1A8  20F4               	addwfc	prodh,w,c
 20395   00C1AA  6F97               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20396                           
 20397                           ; BSR set to: 0
 20398   00C1AC  0012               	return		;funcret
 20399   00C1AE                     __end_of_producerGetDiagnostic:
 20400                           	callstack 0
 20401                           
 20402 ;; *************** function _canGetDiagnostic *****************
 20403 ;; Defined at:
 20404 ;;		line 438 in file "../../VLCBlib_PIC/can18_ecan.c"
 20405 ;; Parameters:    Size  Location     Type
 20406 ;;  index           1    wreg     unsigned char 
 20407 ;; Auto vars:     Size  Location     Type
 20408 ;;  index           1   57[BANK0 ] unsigned char 
 20409 ;; Return value:  Size  Location     Type
 20410 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20411 ;; Registers used:
 20412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20413 ;; Tracked objects:
 20414 ;;		On entry : 0/0
 20415 ;;		On exit  : 0/0
 20416 ;;		Unchanged: 0/0
 20417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20421 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20422 ;;Total ram usage:        4 bytes
 20423 ;; Hardware stack levels used: 1
 20424 ;; Hardware stack levels required when called: 14
 20425 ;; This function calls:
 20426 ;;		_getNumRxBuffersInUse
 20427 ;;		_getNumTxBuffersInUse
 20428 ;; This function is called by:
 20429 ;;		_mnsTRallDiagnosticsCallback
 20430 ;;		_mnsProcessMessage
 20431 ;; This function uses a non-reentrant model
 20432 ;;
 20433                           
 20434                           	psect	text64
 20435   00AFB0                     __ptext64:
 20436                           	callstack 0
 20437   00AFB0                     _canGetDiagnostic:
 20438                           	callstack 13
 20439                           
 20440                           ; BSR set to: 0
 20441                           ;incstack = 0
 20442                           ;canGetDiagnostic@index stored from wreg
 20443   00AFB0  0100               	movlb	0	; () banked
 20444   00AFB2  6F99               	movwf	canGetDiagnostic@index& (0+255),b
 20445                           
 20446                           ;../../VLCBlib_PIC/can18_ecan.c: 439:     if (index > 18) {
 20447   00AFB4  0E12               	movlw	18
 20448   00AFB6  0100               	movlb	0	; () banked
 20449   00AFB8  6599               	cpfsgt	canGetDiagnostic@index& (0+255),b
 20450   00AFBA  D01C               	goto	l21186
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;../../VLCBlib_PIC/can18_ecan.c: 440:         return ((void*)0);
 20454   00AFBC  0E00               	movlw	0
 20455   00AFBE  6F96               	movwf	?_canGetDiagnostic& (0+255),b
 20456   00AFC0  0E00               	movlw	0
 20457   00AFC2  6F97               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20458   00AFC4  0012               	return	
 20459   00AFC6                     l2485:
 20460                           
 20461                           ; BSR set to: 0
 20462                           ;../../VLCBlib_PIC/can18_ecan.c: 444:             canDiagnostics[0x03].asUint = COMSTAT;
 20463   00AFC6  CF71 F16D          	movff	3953,_canDiagnostics+6	;volatile
 20464   00AFCA  0101               	movlb	1	; () banked
 20465   00AFCC  6B6E               	clrf	(_canDiagnostics+7)& (0+255),b
 20466                           
 20467                           ;../../VLCBlib_PIC/can18_ecan.c: 445:             break;
 20468   00AFCE  D01C               	goto	l21188
 20469   00AFD0                     l21180:
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;../../VLCBlib_PIC/can18_ecan.c: 447:             canDiagnostics[0x04].asUint = getNumTx
      +                          BuffersInUse();
 20473   00AFD0  ECE7  F062         	call	_getNumTxBuffersInUse	;wreg free
 20474   00AFD4  0100               	movlb	0	; () banked
 20475   00AFD6  6F98               	movwf	??_canGetDiagnostic& (0+255),b
 20476   00AFD8  5198               	movf	??_canGetDiagnostic& (0+255),w,b
 20477   00AFDA  0101               	movlb	1	; () banked
 20478   00AFDC  6F6F               	movwf	(_canDiagnostics+8)& (0+255),b
 20479   00AFDE  6B70               	clrf	(_canDiagnostics+9)& (0+255),b
 20480                           
 20481                           ;../../VLCBlib_PIC/can18_ecan.c: 448:             break;
 20482   00AFE0  D013               	goto	l21188
 20483   00AFE2                     l21182:
 20484                           
 20485                           ; BSR set to: 0
 20486                           ;../../VLCBlib_PIC/can18_ecan.c: 450:             canDiagnostics[0x07].asUint = getNumRx
      +                          BuffersInUse();
 20487   00AFE2  EC8F  F05E         	call	_getNumRxBuffersInUse	;wreg free
 20488   00AFE6  0100               	movlb	0	; () banked
 20489   00AFE8  6F98               	movwf	??_canGetDiagnostic& (0+255),b
 20490   00AFEA  5198               	movf	??_canGetDiagnostic& (0+255),w,b
 20491   00AFEC  0101               	movlb	1	; () banked
 20492   00AFEE  6F75               	movwf	(_canDiagnostics+14)& (0+255),b
 20493   00AFF0  6B76               	clrf	(_canDiagnostics+15)& (0+255),b
 20494                           
 20495                           ;../../VLCBlib_PIC/can18_ecan.c: 451:             break;
 20496   00AFF2  D00A               	goto	l21188
 20497   00AFF4                     l21186:
 20498                           
 20499                           ; BSR set to: 0
 20500   00AFF4  5199               	movf	canGetDiagnostic@index& (0+255),w,b
 20501                           
 20502                           ; Switch size 1, requested type "simple"
 20503                           ; Number of cases is 3, Range of values is 3 to 7
 20504                           ; switch strategies available:
 20505                           ; Name         Instructions Cycles
 20506                           ; simple_byte           10     6 (average)
 20507                           ;	Chosen strategy is simple_byte
 20508   00AFF6  0A03               	xorlw	3	; case 3
 20509   00AFF8  B4D8               	btfsc	status,2,c
 20510   00AFFA  D7E5               	goto	l2485
 20511   00AFFC  0A07               	xorlw	7	; case 4
 20512   00AFFE  B4D8               	btfsc	status,2,c
 20513   00B000  D7E7               	goto	l21180
 20514   00B002  0A03               	xorlw	3	; case 7
 20515   00B004  B4D8               	btfsc	status,2,c
 20516   00B006  D7ED               	goto	l21182
 20517   00B008                     l21188:
 20518                           
 20519                           ;../../VLCBlib_PIC/can18_ecan.c: 453:     return &(canDiagnostics[index]);
 20520   00B008  0100               	movlb	0	; () banked
 20521   00B00A  5199               	movf	canGetDiagnostic@index& (0+255),w,b
 20522   00B00C  0D02               	mullw	2
 20523   00B00E  0E67               	movlw	low _canDiagnostics
 20524   00B010  24F3               	addwf	243,w,c
 20525   00B012  6F96               	movwf	?_canGetDiagnostic& (0+255),b
 20526   00B014  0E01               	movlw	high _canDiagnostics
 20527   00B016  20F4               	addwfc	prodh,w,c
 20528   00B018  6F97               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20529                           
 20530                           ; BSR set to: 0
 20531   00B01A  0012               	return		;funcret
 20532   00B01C                     __end_of_canGetDiagnostic:
 20533                           	callstack 0
 20534                           
 20535 ;; *************** function _nvGetDiagnostic *****************
 20536 ;; Defined at:
 20537 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 20538 ;; Parameters:    Size  Location     Type
 20539 ;;  index           1    wreg     unsigned char 
 20540 ;; Auto vars:     Size  Location     Type
 20541 ;;  index           1   56[BANK0 ] unsigned char 
 20542 ;; Return value:  Size  Location     Type
 20543 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20544 ;; Registers used:
 20545 ;;		wreg, status,2, status,0, prodl, prodh
 20546 ;; Tracked objects:
 20547 ;;		On entry : 0/0
 20548 ;;		On exit  : 0/0
 20549 ;;		Unchanged: 0/0
 20550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20554 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20555 ;;Total ram usage:        3 bytes
 20556 ;; Hardware stack levels used: 1
 20557 ;; Hardware stack levels required when called: 12
 20558 ;; This function calls:
 20559 ;;		Nothing
 20560 ;; This function is called by:
 20561 ;;		_mnsTRallDiagnosticsCallback
 20562 ;;		_mnsProcessMessage
 20563 ;; This function uses a non-reentrant model
 20564 ;;
 20565                           
 20566                           	psect	text65
 20567   00C1AE                     __ptext65:
 20568                           	callstack 0
 20569   00C1AE                     _nvGetDiagnostic:
 20570                           	callstack 15
 20571                           
 20572                           ; BSR set to: 0
 20573                           ;incstack = 0
 20574                           ;nvGetDiagnostic@index stored from wreg
 20575   00C1AE  0100               	movlb	0	; () banked
 20576   00C1B0  6F98               	movwf	nvGetDiagnostic@index& (0+255),b
 20577                           
 20578                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 20579   00C1B2  0E02               	movlw	2
 20580   00C1B4  0100               	movlb	0	; () banked
 20581   00C1B6  6598               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 20582   00C1B8  D005               	goto	l21094
 20583                           
 20584                           ; BSR set to: 0
 20585                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 20586   00C1BA  0E00               	movlw	0
 20587   00C1BC  6F96               	movwf	?_nvGetDiagnostic& (0+255),b
 20588   00C1BE  0E00               	movlw	0
 20589   00C1C0  6F97               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20590   00C1C2  0012               	return	
 20591   00C1C4                     l21094:
 20592                           
 20593                           ; BSR set to: 0
 20594                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 20595   00C1C4  5198               	movf	nvGetDiagnostic@index& (0+255),w,b
 20596   00C1C6  0D02               	mullw	2
 20597   00C1C8  0EA4               	movlw	low _nvDiagnostics
 20598   00C1CA  24F3               	addwf	243,w,c
 20599   00C1CC  6F96               	movwf	?_nvGetDiagnostic& (0+255),b
 20600   00C1CE  0E01               	movlw	high _nvDiagnostics
 20601   00C1D0  20F4               	addwfc	prodh,w,c
 20602   00C1D2  6F97               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20603                           
 20604                           ; BSR set to: 0
 20605   00C1D4  0012               	return		;funcret
 20606   00C1D6                     __end_of_nvGetDiagnostic:
 20607                           	callstack 0
 20608                           
 20609 ;; *************** function _mnsGetDiagnostic *****************
 20610 ;; Defined at:
 20611 ;;		line 802 in file "../../VLCBlib_PIC/mns.c"
 20612 ;; Parameters:    Size  Location     Type
 20613 ;;  index           1    wreg     unsigned char 
 20614 ;; Auto vars:     Size  Location     Type
 20615 ;;  index           1   56[BANK0 ] unsigned char 
 20616 ;; Return value:  Size  Location     Type
 20617 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20618 ;; Registers used:
 20619 ;;		wreg, status,2, status,0, prodl, prodh
 20620 ;; Tracked objects:
 20621 ;;		On entry : 0/0
 20622 ;;		On exit  : 0/0
 20623 ;;		Unchanged: 0/0
 20624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20625 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20626 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20628 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20629 ;;Total ram usage:        3 bytes
 20630 ;; Hardware stack levels used: 1
 20631 ;; Hardware stack levels required when called: 12
 20632 ;; This function calls:
 20633 ;;		Nothing
 20634 ;; This function is called by:
 20635 ;;		_mnsTRallDiagnosticsCallback
 20636 ;;		_mnsProcessMessage
 20637 ;; This function uses a non-reentrant model
 20638 ;;
 20639                           
 20640                           	psect	text66
 20641   00C1D6                     __ptext66:
 20642                           	callstack 0
 20643   00C1D6                     _mnsGetDiagnostic:
 20644                           	callstack 15
 20645                           
 20646                           ; BSR set to: 0
 20647                           ;incstack = 0
 20648                           ;mnsGetDiagnostic@index stored from wreg
 20649   00C1D6  0100               	movlb	0	; () banked
 20650   00C1D8  6F98               	movwf	mnsGetDiagnostic@index& (0+255),b
 20651                           
 20652                           ;../../VLCBlib_PIC/mns.c: 803:     if (index > 6) {
 20653   00C1DA  0E06               	movlw	6
 20654   00C1DC  0100               	movlb	0	; () banked
 20655   00C1DE  6598               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 20656   00C1E0  D005               	goto	l21032
 20657                           
 20658                           ; BSR set to: 0
 20659                           ;../../VLCBlib_PIC/mns.c: 804:         return ((void*)0);
 20660   00C1E2  0E00               	movlw	0
 20661   00C1E4  6F96               	movwf	?_mnsGetDiagnostic& (0+255),b
 20662   00C1E6  0E00               	movlw	0
 20663   00C1E8  6F97               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20664   00C1EA  0012               	return	
 20665   00C1EC                     l21032:
 20666                           
 20667                           ; BSR set to: 0
 20668                           ;../../VLCBlib_PIC/mns.c: 806:     return &(mnsDiagnostics[index]);
 20669   00C1EC  5198               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20670   00C1EE  0D02               	mullw	2
 20671   00C1F0  0E8D               	movlw	low _mnsDiagnostics
 20672   00C1F2  24F3               	addwf	243,w,c
 20673   00C1F4  6F96               	movwf	?_mnsGetDiagnostic& (0+255),b
 20674   00C1F6  0E01               	movlw	high _mnsDiagnostics
 20675   00C1F8  20F4               	addwfc	prodh,w,c
 20676   00C1FA  6F97               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20677                           
 20678                           ; BSR set to: 0
 20679   00C1FC  0012               	return		;funcret
 20680   00C1FE                     __end_of_mnsGetDiagnostic:
 20681                           	callstack 0
 20682                           
 20683 ;; *************** function _ackGetDiagnostic *****************
 20684 ;; Defined at:
 20685 ;;		line 194 in file "../../VLCBlib_PIC/event_acknowledge.c"
 20686 ;; Parameters:    Size  Location     Type
 20687 ;;  index           1    wreg     unsigned char 
 20688 ;; Auto vars:     Size  Location     Type
 20689 ;;  index           1   56[BANK0 ] unsigned char 
 20690 ;; Return value:  Size  Location     Type
 20691 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20692 ;; Registers used:
 20693 ;;		wreg, status,2, status,0, prodl, prodh
 20694 ;; Tracked objects:
 20695 ;;		On entry : 0/0
 20696 ;;		On exit  : 0/0
 20697 ;;		Unchanged: 0/0
 20698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20703 ;;Total ram usage:        3 bytes
 20704 ;; Hardware stack levels used: 1
 20705 ;; Hardware stack levels required when called: 12
 20706 ;; This function calls:
 20707 ;;		Nothing
 20708 ;; This function is called by:
 20709 ;;		_mnsTRallDiagnosticsCallback
 20710 ;;		_mnsProcessMessage
 20711 ;; This function uses a non-reentrant model
 20712 ;;
 20713                           
 20714                           	psect	text67
 20715   00C1FE                     __ptext67:
 20716                           	callstack 0
 20717   00C1FE                     _ackGetDiagnostic:
 20718                           	callstack 15
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;incstack = 0
 20722                           ;ackGetDiagnostic@index stored from wreg
 20723   00C1FE  0100               	movlb	0	; () banked
 20724   00C200  6F98               	movwf	ackGetDiagnostic@index& (0+255),b
 20725                           
 20726                           ;../../VLCBlib_PIC/event_acknowledge.c: 195:     if (index > 1) {
 20727   00C202  0E01               	movlw	1
 20728   00C204  0100               	movlb	0	; () banked
 20729   00C206  6598               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 20730   00C208  D005               	goto	l20912
 20731                           
 20732                           ; BSR set to: 0
 20733                           ;../../VLCBlib_PIC/event_acknowledge.c: 196:         return ((void*)0);
 20734   00C20A  0E00               	movlw	0
 20735   00C20C  6F96               	movwf	?_ackGetDiagnostic& (0+255),b
 20736   00C20E  0E00               	movlw	0
 20737   00C210  6F97               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20738   00C212  0012               	return	
 20739   00C214                     l20912:
 20740                           
 20741                           ; BSR set to: 0
 20742                           ;../../VLCBlib_PIC/event_acknowledge.c: 198:     return &(ackDiagnostics[index]);
 20743   00C214  5198               	movf	ackGetDiagnostic@index& (0+255),w,b
 20744   00C216  0D02               	mullw	2
 20745   00C218  0EB2               	movlw	low _ackDiagnostics
 20746   00C21A  24F3               	addwf	243,w,c
 20747   00C21C  6F96               	movwf	?_ackGetDiagnostic& (0+255),b
 20748   00C21E  0E01               	movlw	high _ackDiagnostics
 20749   00C220  20F4               	addwfc	prodh,w,c
 20750   00C222  6F97               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20751                           
 20752                           ; BSR set to: 0
 20753   00C224  0012               	return		;funcret
 20754   00C226                     __end_of_ackGetDiagnostic:
 20755                           	callstack 0
 20756                           
 20757 ;; *************** function _consumer2QGetDiagnostic *****************
 20758 ;; Defined at:
 20759 ;;		line 350 in file "../event_consumerDualActionQueue.c"
 20760 ;; Parameters:    Size  Location     Type
 20761 ;;  index           1    wreg     unsigned char 
 20762 ;; Auto vars:     Size  Location     Type
 20763 ;;  index           1   56[BANK0 ] unsigned char 
 20764 ;; Return value:  Size  Location     Type
 20765 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20766 ;; Registers used:
 20767 ;;		wreg, status,2, status,0, prodl, prodh
 20768 ;; Tracked objects:
 20769 ;;		On entry : 0/0
 20770 ;;		On exit  : 0/0
 20771 ;;		Unchanged: 0/0
 20772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20773 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20776 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20777 ;;Total ram usage:        3 bytes
 20778 ;; Hardware stack levels used: 1
 20779 ;; Hardware stack levels required when called: 12
 20780 ;; This function calls:
 20781 ;;		Nothing
 20782 ;; This function is called by:
 20783 ;;		_mnsTRallDiagnosticsCallback
 20784 ;;		_mnsProcessMessage
 20785 ;; This function uses a non-reentrant model
 20786 ;;
 20787                           
 20788                           	psect	text68
 20789   00C226                     __ptext68:
 20790                           	callstack 0
 20791   00C226                     _consumer2QGetDiagnostic:
 20792                           	callstack 15
 20793                           
 20794                           ; BSR set to: 0
 20795                           ;incstack = 0
 20796                           ;consumer2QGetDiagnostic@index stored from wreg
 20797   00C226  0100               	movlb	0	; () banked
 20798   00C228  6F98               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 20799                           
 20800                           ;../event_consumerDualActionQueue.c: 351:     if (index > 1) {
 20801   00C22A  0E01               	movlw	1
 20802   00C22C  0100               	movlb	0	; () banked
 20803   00C22E  6598               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 20804   00C230  D005               	goto	l20558
 20805                           
 20806                           ; BSR set to: 0
 20807                           ;../event_consumerDualActionQueue.c: 352:         return ((void*)0);
 20808   00C232  0E00               	movlw	0
 20809   00C234  6F96               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20810   00C236  0E00               	movlw	0
 20811   00C238  6F97               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20812   00C23A  0012               	return	
 20813   00C23C                     l20558:
 20814                           
 20815                           ; BSR set to: 0
 20816                           ;../event_consumerDualActionQueue.c: 354:     return &(consumer2QDiagnostics[index]);
 20817   00C23C  5198               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20818   00C23E  0D02               	mullw	2
 20819   00C240  0EB6               	movlw	low _consumer2QDiagnostics
 20820   00C242  24F3               	addwf	243,w,c
 20821   00C244  6F96               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20822   00C246  0E01               	movlw	high _consumer2QDiagnostics
 20823   00C248  20F4               	addwfc	prodh,w,c
 20824   00C24A  6F97               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20825                           
 20826                           ; BSR set to: 0
 20827   00C24C  0012               	return		;funcret
 20828   00C24E                     __end_of_consumer2QGetDiagnostic:
 20829                           	callstack 0
 20830                           
 20831 ;; *************** function _teachGetDiagnostic *****************
 20832 ;; Defined at:
 20833 ;;		line 543 in file "../../VLCBlib_PIC/event_teach_large.c"
 20834 ;; Parameters:    Size  Location     Type
 20835 ;;  index           1    wreg     unsigned char 
 20836 ;; Auto vars:     Size  Location     Type
 20837 ;;  index           1   56[BANK0 ] unsigned char 
 20838 ;; Return value:  Size  Location     Type
 20839 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20840 ;; Registers used:
 20841 ;;		wreg, status,2, status,0, prodl, prodh
 20842 ;; Tracked objects:
 20843 ;;		On entry : 0/0
 20844 ;;		On exit  : 0/0
 20845 ;;		Unchanged: 0/0
 20846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20847 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20850 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20851 ;;Total ram usage:        3 bytes
 20852 ;; Hardware stack levels used: 1
 20853 ;; Hardware stack levels required when called: 12
 20854 ;; This function calls:
 20855 ;;		Nothing
 20856 ;; This function is called by:
 20857 ;;		_mnsTRallDiagnosticsCallback
 20858 ;;		_mnsProcessMessage
 20859 ;; This function uses a non-reentrant model
 20860 ;;
 20861                           
 20862                           	psect	text69
 20863   00C24E                     __ptext69:
 20864                           	callstack 0
 20865   00C24E                     _teachGetDiagnostic:
 20866                           	callstack 15
 20867                           
 20868                           ; BSR set to: 0
 20869                           ;incstack = 0
 20870                           ;teachGetDiagnostic@index stored from wreg
 20871   00C24E  0100               	movlb	0	; () banked
 20872   00C250  6F98               	movwf	teachGetDiagnostic@index& (0+255),b
 20873                           
 20874                           ;../../VLCBlib_PIC/event_teach_large.c: 544:     if (index > 1) {
 20875   00C252  0E01               	movlw	1
 20876   00C254  0100               	movlb	0	; () banked
 20877   00C256  6598               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 20878   00C258  D005               	goto	l21220
 20879                           
 20880                           ; BSR set to: 0
 20881                           ;../../VLCBlib_PIC/event_teach_large.c: 545:         return ((void*)0);
 20882   00C25A  0E00               	movlw	0
 20883   00C25C  6F96               	movwf	?_teachGetDiagnostic& (0+255),b
 20884   00C25E  0E00               	movlw	0
 20885   00C260  6F97               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20886   00C262  0012               	return	
 20887   00C264                     l21220:
 20888                           
 20889                           ; BSR set to: 0
 20890                           ;../../VLCBlib_PIC/event_teach_large.c: 547:     return &(teachDiagnostics[index]);
 20891   00C264  5198               	movf	teachGetDiagnostic@index& (0+255),w,b
 20892   00C266  0D02               	mullw	2
 20893   00C268  0EAE               	movlw	low _teachDiagnostics
 20894   00C26A  24F3               	addwf	243,w,c
 20895   00C26C  6F96               	movwf	?_teachGetDiagnostic& (0+255),b
 20896   00C26E  0E01               	movlw	high _teachDiagnostics
 20897   00C270  20F4               	addwfc	prodh,w,c
 20898   00C272  6F97               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20899                           
 20900                           ; BSR set to: 0
 20901   00C274  0012               	return		;funcret
 20902   00C276                     __end_of_teachGetDiagnostic:
 20903                           	callstack 0
 20904                           
 20905 ;; *************** function _sendMessage6 *****************
 20906 ;; Defined at:
 20907 ;;		line 1195 in file "../../VLCBlib_PIC/vlcb.c"
 20908 ;; Parameters:    Size  Location     Type
 20909 ;;  opc             1    wreg     enum E12392
 20910 ;;  data1           1    8[BANK1 ] unsigned char 
 20911 ;;  data2           1    9[BANK1 ] unsigned char 
 20912 ;;  data3           1   10[BANK1 ] unsigned char 
 20913 ;;  data4           1   11[BANK1 ] unsigned char 
 20914 ;;  data5           1   12[BANK1 ] unsigned char 
 20915 ;;  data6           1   13[BANK1 ] unsigned char 
 20916 ;; Auto vars:     Size  Location     Type
 20917 ;;  opc             1   70[BANK0 ] enum E12392
 20918 ;; Return value:  Size  Location     Type
 20919 ;;                  1    wreg      void 
 20920 ;; Registers used:
 20921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20922 ;; Tracked objects:
 20923 ;;		On entry : 0/0
 20924 ;;		On exit  : 0/0
 20925 ;;		Unchanged: 0/0
 20926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20927 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20930 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20931 ;;Total ram usage:        7 bytes
 20932 ;; Hardware stack levels used: 1
 20933 ;; Hardware stack levels required when called: 16
 20934 ;; This function calls:
 20935 ;;		_sendMessage
 20936 ;; This function is called by:
 20937 ;;		_mnsProcessMessage
 20938 ;;		_mnsTRallDiagnosticsCallback
 20939 ;;		_doReqev
 20940 ;;		_reqevCallback
 20941 ;; This function uses a non-reentrant model
 20942 ;;
 20943                           
 20944                           	psect	text70
 20945   00BF32                     __ptext70:
 20946                           	callstack 0
 20947   00BF32                     _sendMessage6:
 20948                           	callstack 11
 20949                           
 20950                           ; BSR set to: 0
 20951                           ;incstack = 0
 20952                           ;sendMessage6@opc stored from wreg
 20953   00BF32  0100               	movlb	0	; () banked
 20954   00BF34  6FA6               	movwf	sendMessage6@opc& (0+255),b
 20955                           
 20956                           ;../../VLCBlib_PIC/vlcb.c: 1196:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 20957   00BF36  0E07               	movlw	7
 20958   00BF38  0101               	movlb	1	; () banked
 20959   00BF3A  6FBA               	movwf	sendMessage@len& (0+255),b
 20960   00BF3C  C1C2  F1BB         	movff	sendMessage6@data1,sendMessage@data1
 20961   00BF40  C1C3  F1BC         	movff	sendMessage6@data2,sendMessage@data2
 20962   00BF44  C1C4  F1BD         	movff	sendMessage6@data3,sendMessage@data3
 20963   00BF48  C1C5  F1BE         	movff	sendMessage6@data4,sendMessage@data4
 20964   00BF4C  C1C6  F1BF         	movff	sendMessage6@data5,sendMessage@data5
 20965   00BF50  C1C7  F1C0         	movff	sendMessage6@data6,sendMessage@data6
 20966   00BF54  0E00               	movlw	0
 20967   00BF56  6FC1               	movwf	sendMessage@data7& (0+255),b
 20968   00BF58  0100               	movlb	0	; () banked
 20969   00BF5A  51A6               	movf	sendMessage6@opc& (0+255),w,b
 20970   00BF5C  ECA3  F054         	call	_sendMessage
 20971   00BF60  0012               	return		;funcret
 20972   00BF62                     __end_of_sendMessage6:
 20973                           	callstack 0
 20974                           
 20975 ;; *************** function _sendMessage3 *****************
 20976 ;; Defined at:
 20977 ;;		line 1156 in file "../../VLCBlib_PIC/vlcb.c"
 20978 ;; Parameters:    Size  Location     Type
 20979 ;;  opc             1    wreg     enum E12392
 20980 ;;  data1           1   70[BANK0 ] unsigned char 
 20981 ;;  data2           1   71[BANK0 ] unsigned char 
 20982 ;;  data3           1   72[BANK0 ] unsigned char 
 20983 ;; Auto vars:     Size  Location     Type
 20984 ;;  opc             1    8[BANK1 ] enum E12392
 20985 ;; Return value:  Size  Location     Type
 20986 ;;                  1    wreg      void 
 20987 ;; Registers used:
 20988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20989 ;; Tracked objects:
 20990 ;;		On entry : 0/0
 20991 ;;		On exit  : 0/0
 20992 ;;		Unchanged: 0/0
 20993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20994 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20995 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20997 ;;      Totals:         0       3       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20998 ;;Total ram usage:        4 bytes
 20999 ;; Hardware stack levels used: 1
 21000 ;; Hardware stack levels required when called: 16
 21001 ;; This function calls:
 21002 ;;		_sendMessage
 21003 ;; This function is called by:
 21004 ;;		_mnsProcessMessage
 21005 ;;		_nvProcessMessage
 21006 ;;		_teachProcessMessage
 21007 ;;		_doNnevn
 21008 ;;		_doNenrd
 21009 ;;		_doRqevn
 21010 ;;		_doEvlrn
 21011 ;;		_doReval
 21012 ;;		_doEvuln
 21013 ;;		_doReqev
 21014 ;;		_producerProcessMessage
 21015 ;; This function uses a non-reentrant model
 21016 ;;
 21017                           
 21018                           	psect	text71
 21019   00C07E                     __ptext71:
 21020                           	callstack 0
 21021   00C07E                     _sendMessage3:
 21022                           	callstack 12
 21023                           
 21024                           ;incstack = 0
 21025                           ;sendMessage3@opc stored from wreg
 21026   00C07E  0101               	movlb	1	; () banked
 21027   00C080  6FC2               	movwf	sendMessage3@opc& (0+255),b
 21028                           
 21029                           ;../../VLCBlib_PIC/vlcb.c: 1157:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 21030   00C082  0E04               	movlw	4
 21031   00C084  0101               	movlb	1	; () banked
 21032   00C086  6FBA               	movwf	sendMessage@len& (0+255),b
 21033   00C088  C0A6  F1BB         	movff	sendMessage3@data1,sendMessage@data1
 21034   00C08C  C0A7  F1BC         	movff	sendMessage3@data2,sendMessage@data2
 21035   00C090  C0A8  F1BD         	movff	sendMessage3@data3,sendMessage@data3
 21036   00C094  0E00               	movlw	0
 21037   00C096  6FBE               	movwf	sendMessage@data4& (0+255),b
 21038   00C098  0E00               	movlw	0
 21039   00C09A  6FBF               	movwf	sendMessage@data5& (0+255),b
 21040   00C09C  0E00               	movlw	0
 21041   00C09E  6FC0               	movwf	sendMessage@data6& (0+255),b
 21042   00C0A0  0E00               	movlw	0
 21043   00C0A2  6FC1               	movwf	sendMessage@data7& (0+255),b
 21044   00C0A4  51C2               	movf	sendMessage3@opc& (0+255),w,b
 21045   00C0A6  ECA3  F054         	call	_sendMessage
 21046   00C0AA  0012               	return		;funcret
 21047   00C0AC                     __end_of_sendMessage3:
 21048                           	callstack 0
 21049                           
 21050 ;; *************** function _getParameter *****************
 21051 ;; Defined at:
 21052 ;;		line 833 in file "../../VLCBlib_PIC/mns.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;  idx             1    wreg     unsigned char 
 21055 ;; Auto vars:     Size  Location     Type
 21056 ;;  idx             1   50[BANK0 ] unsigned char 
 21057 ;;  i               1    0        unsigned char 
 21058 ;; Return value:  Size  Location     Type
 21059 ;;                  1    wreg      unsigned char 
 21060 ;; Registers used:
 21061 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21062 ;; Tracked objects:
 21063 ;;		On entry : 0/0
 21064 ;;		On exit  : 0/0
 21065 ;;		Unchanged: 0/0
 21066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21070 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21071 ;;Total ram usage:        1 bytes
 21072 ;; Hardware stack levels used: 1
 21073 ;; Hardware stack levels required when called: 14
 21074 ;; This function calls:
 21075 ;;		_getParameterFlags
 21076 ;;		_have
 21077 ;; This function is called by:
 21078 ;;		_mnsProcessMessage
 21079 ;;		_mnsTRrqnpnCallback
 21080 ;; This function uses a non-reentrant model
 21081 ;;
 21082                           
 21083                           	psect	text72
 21084   008648                     __ptext72:
 21085                           	callstack 0
 21086   008648                     _getParameter:
 21087                           	callstack 13
 21088                           
 21089                           ;incstack = 0
 21090                           ;getParameter@idx stored from wreg
 21091   008648  0100               	movlb	0	; () banked
 21092   00864A  6F92               	movwf	getParameter@idx& (0+255),b
 21093                           
 21094                           ;../../VLCBlib_PIC/mns.c: 834:     uint8_t i;;../../VLCBlib_PIC/mns.c: 835:     switch(i
      +                          dx) {
 21095   00864C  D033               	goto	l21022
 21096   00864E                     l20934:
 21097                           
 21098                           ; BSR set to: 0
 21099                           ;../../VLCBlib_PIC/mns.c: 837:         return 20;
 21100   00864E  0E14               	movlw	20
 21101   008650  0012               	return	
 21102   008652                     l20938:
 21103                           
 21104                           ; BSR set to: 0
 21105                           ;../../VLCBlib_PIC/mns.c: 839:         return MANU_MERG;
 21106   008652  0EA5               	movlw	165
 21107   008654  0012               	return	
 21108   008656                     l20942:
 21109                           
 21110                           ; BSR set to: 0
 21111                           ;../../VLCBlib_PIC/mns.c: 841:         return 'a';
 21112   008656  0E61               	movlw	97
 21113   008658  0012               	return	
 21114   00865A                     l20946:
 21115                           
 21116                           ; BSR set to: 0
 21117                           ;../../VLCBlib_PIC/mns.c: 843:         return MTYP_CANMIO;
 21118   00865A  0E20               	movlw	32
 21119   00865C  0012               	return	
 21120   00865E                     l20950:
 21121                           
 21122                           ; BSR set to: 0
 21123                           ;../../VLCBlib_PIC/mns.c: 845:         return 255;
 21124   00865E  0EFF               	movlw	255
 21125   008660  0012               	return	
 21126   008662                     l20958:
 21127                           
 21128                           ; BSR set to: 0
 21129                           ;../../VLCBlib_PIC/mns.c: 849:         return (15+7*16);
 21130   008662  0E7F               	movlw	127
 21131   008664  0012               	return	
 21132   008666                     l20962:
 21133                           
 21134                           ; BSR set to: 0
 21135                           ;../../VLCBlib_PIC/mns.c: 851:         return 4;
 21136   008666  0E04               	movlw	4
 21137   008668  0012               	return	
 21138   00866A                     l20966:
 21139                           
 21140                           ; BSR set to: 0
 21141                           ;../../VLCBlib_PIC/mns.c: 853:         return getParameterFlags();
 21142   00866A  ECB8  F05A         	call	_getParameterFlags	;wreg free
 21143   00866E  0012               	return	
 21144   008670                     l20970:
 21145                           
 21146                           ; BSR set to: 0
 21147                           ;../../VLCBlib_PIC/mns.c: 855:         return P18F26K80;
 21148   008670  0E0F               	movlw	15
 21149   008672  0012               	return	
 21150   008674                     l20974:
 21151                           
 21152                           ; BSR set to: 0
 21153                           ;../../VLCBlib_PIC/mns.c: 857:         if (have(SERVICE_ID_CAN)) {
 21154   008674  0E03               	movlw	3
 21155   008676  ECF8  F056         	call	_have
 21156   00867A  0900               	iorlw	0
 21157   00867C  B4D8               	btfsc	status,2,c
 21158   00867E  D002               	goto	l20980
 21159   008680                     u21570:
 21160                           
 21161                           ;../../VLCBlib_PIC/mns.c: 858:             return PB_CAN;
 21162   008680  0E01               	movlw	1
 21163   008682  0012               	return	
 21164   008684                     l20980:
 21165                           
 21166                           ;../../VLCBlib_PIC/mns.c: 860:         return 0;
 21167   008684  0E00               	movlw	0
 21168   008686  0012               	return	
 21169   008688                     l20988:
 21170                           
 21171                           ; BSR set to: 0
 21172                           ;../../VLCBlib_PIC/mns.c: 864:         return 0x08;
 21173   008688  0E08               	movlw	8
 21174   00868A  0012               	return	
 21175   00868C                     l21000:
 21176                           
 21177                           ; BSR set to: 0
 21178                           ;../../VLCBlib_PIC/mns.c: 876:         return *(const uint8_t*)0x3FFFFE;
 21179   00868C  0EFE               	movlw	254
 21180   00868E  6EF6               	movwf	tblptrl,c
 21181   008690                     	if	1	;There is more than 1 active tblptr byte
 21182   008690  0EFF               	movlw	255
 21183   008692  6EF7               	movwf	tblptrh,c
 21184   008694                     	endif
 21185   008694                     	if	1	;There are 3 active tblptr bytes
 21186   008694  0E3F               	movlw	63
 21187   008696  6EF8               	movwf	tblptru,c
 21188   008698                     	endif
 21189   008698  0008               	tblrd		*
 21190   00869A  50F5               	movf	tablat,w,c
 21191   00869C  0012               	return	
 21192   00869E                     l21004:
 21193                           
 21194                           ; BSR set to: 0
 21195                           ;../../VLCBlib_PIC/mns.c: 878:         return *(const uint8_t*)0x3FFFFF;
 21196   00869E  0EFF               	movlw	255
 21197   0086A0  6EF6               	movwf	tblptrl,c
 21198   0086A2                     	if	1	;There is more than 1 active tblptr byte
 21199   0086A2  0EFF               	movlw	255
 21200   0086A4  6EF7               	movwf	tblptrh,c
 21201   0086A6                     	endif
 21202   0086A6                     	if	1	;There are 3 active tblptr bytes
 21203   0086A6  0E3F               	movlw	63
 21204   0086A8  6EF8               	movwf	tblptru,c
 21205   0086AA                     	endif
 21206   0086AA  0008               	tblrd		*
 21207   0086AC  50F5               	movf	tablat,w,c
 21208   0086AE  0012               	return	
 21209   0086B0                     l21012:
 21210                           
 21211                           ; BSR set to: 0
 21212                           ;../../VLCBlib_PIC/mns.c: 882:         return 6;
 21213   0086B0  0E06               	movlw	6
 21214   0086B2  0012               	return	
 21215   0086B4                     l21022:
 21216   0086B4  0100               	movlb	0	; () banked
 21217   0086B6  5192               	movf	getParameter@idx& (0+255),w,b
 21218                           
 21219                           ; Switch size 1, requested type "simple"
 21220                           ; Number of cases is 19, Range of values is 0 to 20
 21221                           ; switch strategies available:
 21222                           ; Name         Instructions Cycles
 21223                           ; simple_byte           58    30 (average)
 21224                           ;	Chosen strategy is simple_byte
 21225   0086B8  0A00               	xorlw	0	; case 0
 21226   0086BA  B4D8               	btfsc	status,2,c
 21227   0086BC  D7C8               	goto	l20934
 21228   0086BE  0A01               	xorlw	1	; case 1
 21229   0086C0  B4D8               	btfsc	status,2,c
 21230   0086C2  D7C7               	goto	l20938
 21231   0086C4  0A03               	xorlw	3	; case 2
 21232   0086C6  B4D8               	btfsc	status,2,c
 21233   0086C8  D7C6               	goto	l20942
 21234   0086CA  0A01               	xorlw	1	; case 3
 21235   0086CC  B4D8               	btfsc	status,2,c
 21236   0086CE  D7C5               	goto	l20946
 21237   0086D0  0A07               	xorlw	7	; case 4
 21238   0086D2  B4D8               	btfsc	status,2,c
 21239   0086D4  D7C4               	goto	l20950
 21240   0086D6  0A01               	xorlw	1	; case 5
 21241   0086D8  B4D8               	btfsc	status,2,c
 21242   0086DA  D7B9               	goto	l20934
 21243   0086DC  0A03               	xorlw	3	; case 6
 21244   0086DE  B4D8               	btfsc	status,2,c
 21245   0086E0  D7C0               	goto	l20958
 21246   0086E2  0A01               	xorlw	1	; case 7
 21247   0086E4  B4D8               	btfsc	status,2,c
 21248   0086E6  D7BF               	goto	l20962
 21249   0086E8  0A0F               	xorlw	15	; case 8
 21250   0086EA  B4D8               	btfsc	status,2,c
 21251   0086EC  D7BE               	goto	l20966
 21252   0086EE  0A01               	xorlw	1	; case 9
 21253   0086F0  B4D8               	btfsc	status,2,c
 21254   0086F2  D7BE               	goto	l20970
 21255   0086F4  0A03               	xorlw	3	; case 10
 21256   0086F6  B4D8               	btfsc	status,2,c
 21257   0086F8  D7BD               	goto	l20974
 21258   0086FA  0A01               	xorlw	1	; case 11
 21259   0086FC  B4D8               	btfsc	status,2,c
 21260   0086FE  D7C2               	goto	l20980
 21261   008700  0A07               	xorlw	7	; case 12
 21262   008702  B4D8               	btfsc	status,2,c
 21263   008704  D7C1               	goto	l20988
 21264   008706  0A01               	xorlw	1	; case 13
 21265   008708  B4D8               	btfsc	status,2,c
 21266   00870A  D7BC               	goto	l20980
 21267   00870C  0A03               	xorlw	3	; case 14
 21268   00870E  B4D8               	btfsc	status,2,c
 21269   008710  D7B9               	goto	l20980
 21270   008712  0A1F               	xorlw	31	; case 17
 21271   008714  B4D8               	btfsc	status,2,c
 21272   008716  D7BA               	goto	l21000
 21273   008718  0A03               	xorlw	3	; case 18
 21274   00871A  B4D8               	btfsc	status,2,c
 21275   00871C  D7C0               	goto	l21004
 21276   00871E  0A01               	xorlw	1	; case 19
 21277   008720  B4D8               	btfsc	status,2,c
 21278   008722  D7AE               	goto	u21570
 21279   008724  0A07               	xorlw	7	; case 20
 21280   008726  B4D8               	btfsc	status,2,c
 21281   008728  D7C3               	goto	l21012
 21282   00872A  D7AC               	goto	l20980
 21283   00872C                     __end_of_getParameter:
 21284                           	callstack 0
 21285                           
 21286 ;; *************** function _getParameterFlags *****************
 21287 ;; Defined at:
 21288 ;;		line 602 in file "../../VLCBlib_PIC/mns.c"
 21289 ;; Parameters:    Size  Location     Type
 21290 ;;		None
 21291 ;; Auto vars:     Size  Location     Type
 21292 ;;  flags           1   49[BANK0 ] unsigned char 
 21293 ;; Return value:  Size  Location     Type
 21294 ;;                  1    wreg      unsigned char 
 21295 ;; Registers used:
 21296 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21297 ;; Tracked objects:
 21298 ;;		On entry : 0/0
 21299 ;;		On exit  : 0/0
 21300 ;;		Unchanged: 0/0
 21301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21303 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21305 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21306 ;;Total ram usage:        1 bytes
 21307 ;; Hardware stack levels used: 1
 21308 ;; Hardware stack levels required when called: 13
 21309 ;; This function calls:
 21310 ;;		_have
 21311 ;; This function is called by:
 21312 ;;		_mnsProcessMessage
 21313 ;;		_getParameter
 21314 ;; This function uses a non-reentrant model
 21315 ;;
 21316                           
 21317                           	psect	text73
 21318   00B570                     __ptext73:
 21319                           	callstack 0
 21320   00B570                     _getParameterFlags:
 21321                           	callstack 13
 21322                           
 21323                           ;../../VLCBlib_PIC/mns.c: 603:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 604:     flag
      +                          s = 0;
 21324                           
 21325                           ;incstack = 0
 21326   00B570  0E00               	movlw	0
 21327   00B572  0100               	movlb	0	; () banked
 21328   00B574  6F91               	movwf	getParameterFlags@flags& (0+255),b
 21329                           
 21330                           ; BSR set to: 0
 21331                           ;../../VLCBlib_PIC/mns.c: 605:     if (have(SERVICE_ID_CONSUMER)) {
 21332   00B576  0E06               	movlw	6
 21333   00B578  ECF8  F056         	call	_have
 21334   00B57C  0900               	iorlw	0
 21335   00B57E  B4D8               	btfsc	status,2,c
 21336   00B580  D002               	goto	l20198
 21337                           
 21338                           ;../../VLCBlib_PIC/mns.c: 606:         flags |= 1;
 21339   00B582  0100               	movlb	0	; () banked
 21340   00B584  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 21341   00B586                     l20198:
 21342                           
 21343                           ;../../VLCBlib_PIC/mns.c: 608:     if (have(SERVICE_ID_PRODUCER)) {
 21344   00B586  0E05               	movlw	5
 21345   00B588  ECF8  F056         	call	_have
 21346   00B58C  0900               	iorlw	0
 21347   00B58E  B4D8               	btfsc	status,2,c
 21348   00B590  D002               	goto	l20202
 21349                           
 21350                           ;../../VLCBlib_PIC/mns.c: 609:         flags |= 2;
 21351   00B592  0100               	movlb	0	; () banked
 21352   00B594  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 21353   00B596                     l20202:
 21354                           
 21355                           ;../../VLCBlib_PIC/mns.c: 611:     if (flags == (2 | 1)) flags |= 16;
 21356   00B596  0E03               	movlw	3
 21357   00B598  0100               	movlb	0	; () banked
 21358   00B59A  1991               	xorwf	getParameterFlags@flags& (0+255),w,b
 21359   00B59C  B4D8               	btfsc	status,2,c
 21360                           
 21361                           ; BSR set to: 0
 21362   00B59E  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 21363                           
 21364                           ; BSR set to: 0
 21365                           ;../../VLCBlib_PIC/mns.c: 612:     if (have(SERVICE_ID_BOOT)) {
 21366   00B5A0  0E0A               	movlw	10
 21367   00B5A2  ECF8  F056         	call	_have
 21368   00B5A6  0900               	iorlw	0
 21369   00B5A8  B4D8               	btfsc	status,2,c
 21370   00B5AA  D002               	goto	l20210
 21371                           
 21372                           ;../../VLCBlib_PIC/mns.c: 613:         flags |= 8;
 21373   00B5AC  0100               	movlb	0	; () banked
 21374   00B5AE  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 21375   00B5B0                     l20210:
 21376                           
 21377                           ;../../VLCBlib_PIC/mns.c: 615:     if (mode_flags & 1) {
 21378   00B5B0  0101               	movlb	1	; () banked
 21379   00B5B2  A166               	btfss	_mode_flags& (0+255),0,b
 21380   00B5B4  D002               	goto	l20214
 21381                           
 21382                           ; BSR set to: 1
 21383                           ;../../VLCBlib_PIC/mns.c: 616:         flags |= 32;
 21384   00B5B6  0100               	movlb	0	; () banked
 21385   00B5B8  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 21386   00B5BA                     l20214:
 21387                           
 21388                           ;../../VLCBlib_PIC/mns.c: 618:     if (mode_state == MODE_NORMAL) {
 21389   00B5BA  0100               	movlb	0	; () banked
 21390   00B5BC  05C5               	decf	_mode_state& (0+255),w,b
 21391   00B5BE  B4D8               	btfsc	status,2,c
 21392                           
 21393                           ; BSR set to: 0
 21394                           ;../../VLCBlib_PIC/mns.c: 619:         flags |= 4;
 21395   00B5C0  8591               	bsf	getParameterFlags@flags& (0+255),2,b
 21396                           
 21397                           ; BSR set to: 0
 21398                           ;../../VLCBlib_PIC/mns.c: 622:     flags |= 64;
 21399                           
 21400                           ;../../VLCBlib_PIC/mns.c: 620:     }
 21401   00B5C2  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 21402                           
 21403                           ; BSR set to: 0
 21404                           ;../../VLCBlib_PIC/mns.c: 624:     return flags;
 21405   00B5C4  5191               	movf	getParameterFlags@flags& (0+255),w,b
 21406                           
 21407                           ; BSR set to: 0
 21408   00B5C6  0012               	return		;funcret
 21409   00B5C8                     __end_of_getParameterFlags:
 21410                           	callstack 0
 21411                           
 21412 ;; *************** function _mnsPoll *****************
 21413 ;; Defined at:
 21414 ;;		line 643 in file "../../VLCBlib_PIC/mns.c"
 21415 ;; Parameters:    Size  Location     Type
 21416 ;;		None
 21417 ;; Auto vars:     Size  Location     Type
 21418 ;;		None
 21419 ;; Return value:  Size  Location     Type
 21420 ;;                  1    wreg      void 
 21421 ;; Registers used:
 21422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21423 ;; Tracked objects:
 21424 ;;		On entry : 0/0
 21425 ;;		On exit  : 0/0
 21426 ;;		Unchanged: 0/0
 21427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21430 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21431 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21432 ;;Total ram usage:        4 bytes
 21433 ;; Hardware stack levels used: 1
 21434 ;; Hardware stack levels required when called: 18
 21435 ;; This function calls:
 21436 ;;		_sendMessage2
 21437 ;;		_sendMessage5
 21438 ;;		_setLEDsByMode
 21439 ;;		_tickGet
 21440 ;;		_writeNVM
 21441 ;; This function is called by:
 21442 ;;		_poll
 21443 ;; This function uses a non-reentrant model
 21444 ;;
 21445                           
 21446                           	psect	text74
 21447   00433C                     __ptext74:
 21448                           	callstack 0
 21449   00433C                     _mnsPoll:
 21450                           	callstack 11
 21451                           
 21452                           ;../../VLCBlib_PIC/mns.c: 646:     if (mode_state == MODE_NORMAL) {
 21453                           
 21454                           ; BSR set to: 0
 21455                           ;incstack = 0
 21456   00433C  0100               	movlb	0	; () banked
 21457   00433E  05C5               	decf	_mode_state& (0+255),w,b
 21458   004340  A4D8               	btfss	status,2,c
 21459   004342  D03F               	goto	l23790
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;../../VLCBlib_PIC/mns.c: 647:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 21463   004344  ECE4  F05A         	call	_tickGet	;wreg free
 21464   004348  0101               	movlb	1	; () banked
 21465   00434A  5150               	movf	_heartbeatTimer& (0+255),w,b
 21466   00434C  0100               	movlb	0	; () banked
 21467   00434E  5D8D               	subwf	?_tickGet& (0+255),w,b
 21468   004350  0101               	movlb	1	; () banked
 21469   004352  6FC7               	movwf	??_mnsPoll& (0+255),b
 21470   004354  5151               	movf	(_heartbeatTimer+1)& (0+255),w,b
 21471   004356  0100               	movlb	0	; () banked
 21472   004358  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21473   00435A  0101               	movlb	1	; () banked
 21474   00435C  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21475   00435E  5152               	movf	(_heartbeatTimer+2)& (0+255),w,b
 21476   004360  0100               	movlb	0	; () banked
 21477   004362  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21478   004364  0101               	movlb	1	; () banked
 21479   004366  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21480   004368  5153               	movf	(_heartbeatTimer+3)& (0+255),w,b
 21481   00436A  0100               	movlb	0	; () banked
 21482   00436C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21483   00436E  0101               	movlb	1	; () banked
 21484   004370  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21485   004372  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21486   004374  E108               	bnz	u25260
 21487   004376  0EB5               	movlw	181
 21488   004378  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21489   00437A  0EC4               	movlw	196
 21490   00437C  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21491   00437E  0E04               	movlw	4
 21492   004380  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21493   004382  A0D8               	btfss	status,0,c
 21494   004384  D01E               	goto	l23790
 21495   004386                     u25260:
 21496                           
 21497                           ; BSR set to: 1
 21498                           ;../../VLCBlib_PIC/mns.c: 648:             if (mode_flags & 4) {
 21499   004386  A566               	btfss	_mode_flags& (0+255),2,b
 21500   004388  D00E               	goto	l23784
 21501                           
 21502                           ; BSR set to: 1
 21503                           ;../../VLCBlib_PIC/mns.c: 649:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 21504   00438A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 21505   00438E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 21506   004392  C045  F1C4         	movff	_heartbeatSequence,sendMessage5@data3
 21507   004396  C18F  F1C5         	movff	_mnsDiagnostics+2,sendMessage5@data4
 21508   00439A  0E00               	movlw	0
 21509   00439C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 21510   00439E  0EAB               	movlw	171
 21511   0043A0  ECE1  F05F         	call	_sendMessage5
 21512   0043A4  2A45               	incf	_heartbeatSequence^0,f,c
 21513   0043A6                     l23784:
 21514                           
 21515                           ;../../VLCBlib_PIC/mns.c: 651:             heartbeatTimer.val = tickGet();
 21516   0043A6  ECE4  F05A         	call	_tickGet	;wreg free
 21517   0043AA  C08D  F150         	movff	?_tickGet,_heartbeatTimer
 21518   0043AE  C08E  F151         	movff	?_tickGet+1,_heartbeatTimer+1
 21519   0043B2  C08F  F152         	movff	?_tickGet+2,_heartbeatTimer+2
 21520   0043B6  C090  F153         	movff	?_tickGet+3,_heartbeatTimer+3
 21521                           
 21522                           ;../../VLCBlib_PIC/mns.c: 652:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 21523   0043BA  0101               	movlb	1	; () banked
 21524   0043BC  518F               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 21525   0043BE  A4D8               	btfss	status,2,c
 21526                           
 21527                           ; BSR set to: 1
 21528                           ;../../VLCBlib_PIC/mns.c: 653:                 mnsDiagnostics[0x01].asBytes.lo--;
 21529   0043C0  078F               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 21530   0043C2                     l23790:
 21531                           
 21532                           ;../../VLCBlib_PIC/mns.c: 660:     if (mode_flags != last_mode_flags) {
 21533   0043C2  5046               	movf	_last_mode_flags^0,w,c
 21534   0043C4  0101               	movlb	1	; () banked
 21535   0043C6  1966               	xorwf	_mode_flags& (0+255),w,b
 21536   0043C8  B4D8               	btfsc	status,2,c
 21537   0043CA  D00E               	goto	l23796
 21538                           
 21539                           ; BSR set to: 1
 21540                           ;../../VLCBlib_PIC/mns.c: 661:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 21541   0043CC  0EF9               	movlw	249
 21542   0043CE  0100               	movlb	0	; () banked
 21543   0043D0  6FA4               	movwf	writeNVM@index& (0+255),b
 21544   0043D2  0E03               	movlw	3
 21545   0043D4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21546   0043D6  0E00               	movlw	0
 21547   0043D8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21548   0043DA  C166  F0A7         	movff	_mode_flags,writeNVM@value
 21549   0043DE  0E00               	movlw	0
 21550   0043E0  EC60  F05C         	call	_writeNVM
 21551                           
 21552                           ;../../VLCBlib_PIC/mns.c: 662:         last_mode_flags = mode_flags;
 21553   0043E4  C166  F046         	movff	_mode_flags,_last_mode_flags
 21554   0043E8                     l23796:
 21555                           
 21556                           ;../../VLCBlib_PIC/mns.c: 664:     if (mode_state != last_mode_state) {
 21557   0043E8  5047               	movf	_last_mode_state^0,w,c
 21558   0043EA  0100               	movlb	0	; () banked
 21559   0043EC  19C5               	xorwf	_mode_state& (0+255),w,b
 21560   0043EE  B4D8               	btfsc	status,2,c
 21561   0043F0  D013               	goto	l23806
 21562                           
 21563                           ; BSR set to: 0
 21564                           ;../../VLCBlib_PIC/mns.c: 666:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 21565   0043F2  29C5               	incf	_mode_state& (0+255),w,b
 21566   0043F4  B4D8               	btfsc	status,2,c
 21567   0043F6  D003               	goto	u25320
 21568                           
 21569                           ; BSR set to: 0
 21570   0043F8  05C5               	decf	_mode_state& (0+255),w,b
 21571   0043FA  A4D8               	btfss	status,2,c
 21572   0043FC  D00B               	goto	l23804
 21573   0043FE                     u25320:
 21574                           
 21575                           ; BSR set to: 0
 21576                           ;../../VLCBlib_PIC/mns.c: 667:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 21577   0043FE  0EFB               	movlw	251
 21578   004400  6FA4               	movwf	writeNVM@index& (0+255),b
 21579   004402  0E03               	movlw	3
 21580   004404  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21581   004406  0E00               	movlw	0
 21582   004408  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21583   00440A  C0C5  F0A7         	movff	_mode_state,writeNVM@value
 21584   00440E  0E00               	movlw	0
 21585   004410  EC60  F05C         	call	_writeNVM
 21586   004414                     l23804:
 21587                           
 21588                           ;../../VLCBlib_PIC/mns.c: 669:         last_mode_state = mode_state;
 21589   004414  C0C5  F047         	movff	_mode_state,_last_mode_state
 21590   004418                     l23806:
 21591                           
 21592                           ;../../VLCBlib_PIC/mns.c: 673:     if ((tickGet() - uptimeTimer.val) > 62500) {
 21593   004418  ECE4  F05A         	call	_tickGet	;wreg free
 21594   00441C  0101               	movlb	1	; () banked
 21595   00441E  514C               	movf	_uptimeTimer& (0+255),w,b
 21596   004420  0100               	movlb	0	; () banked
 21597   004422  5D8D               	subwf	?_tickGet& (0+255),w,b
 21598   004424  0101               	movlb	1	; () banked
 21599   004426  6FC7               	movwf	??_mnsPoll& (0+255),b
 21600   004428  514D               	movf	(_uptimeTimer+1)& (0+255),w,b
 21601   00442A  0100               	movlb	0	; () banked
 21602   00442C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21603   00442E  0101               	movlb	1	; () banked
 21604   004430  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21605   004432  514E               	movf	(_uptimeTimer+2)& (0+255),w,b
 21606   004434  0100               	movlb	0	; () banked
 21607   004436  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21608   004438  0101               	movlb	1	; () banked
 21609   00443A  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21610   00443C  514F               	movf	(_uptimeTimer+3)& (0+255),w,b
 21611   00443E  0100               	movlb	0	; () banked
 21612   004440  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21613   004442  0101               	movlb	1	; () banked
 21614   004444  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21615   004446  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21616   004448  11C9               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21617   00444A  E106               	bnz	u25330
 21618   00444C  0E25               	movlw	37
 21619   00444E  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21620   004450  0EF4               	movlw	244
 21621   004452  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21622   004454  A0D8               	btfss	status,0,c
 21623   004456  D10E               	goto	l23880
 21624   004458                     u25330:
 21625                           
 21626                           ; BSR set to: 1
 21627                           ;../../VLCBlib_PIC/mns.c: 674:         uptimeTimer.val = tickGet();
 21628   004458  ECE4  F05A         	call	_tickGet	;wreg free
 21629   00445C  C08D  F14C         	movff	?_tickGet,_uptimeTimer
 21630   004460  C08E  F14D         	movff	?_tickGet+1,_uptimeTimer+1
 21631   004464  C08F  F14E         	movff	?_tickGet+2,_uptimeTimer+2
 21632   004468  C090  F14F         	movff	?_tickGet+3,_uptimeTimer+3
 21633                           
 21634                           ;../../VLCBlib_PIC/mns.c: 675:         mnsDiagnostics[0x03].asUint++;
 21635   00446C  0101               	movlb	1	; () banked
 21636   00446E  4B93               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 21637   004470  2B94               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 21638                           
 21639                           ; BSR set to: 1
 21640                           ;../../VLCBlib_PIC/mns.c: 676:         if (mnsDiagnostics[0x03].asUint == 0) {
 21641   004472  5193               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 21642   004474  1194               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 21643   004476  A4D8               	btfss	status,2,c
 21644   004478  D0FD               	goto	l23880
 21645                           
 21646                           ; BSR set to: 1
 21647                           ;../../VLCBlib_PIC/mns.c: 677:             mnsDiagnostics[0x02].asUint++;
 21648   00447A  4B91               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 21649   00447C  2B92               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 21650   00447E  D0FA               	goto	l23880
 21651   004480                     l1539:
 21652                           
 21653                           ; BSR set to: 0
 21654                           ;../../VLCBlib_PIC/mns.c: 686:             if ((!(PORTAbits.RA2)) == 0) {
 21655   004480  A480               	btfss	128,2,c	;volatile
 21656   004482  D00B               	goto	l23818
 21657   004484                     u25350:
 21658                           
 21659                           ;../../VLCBlib_PIC/mns.c: 688:                 pbTimer.val = tickGet();
 21660   004484  ECE4  F05A         	call	_tickGet	;wreg free
 21661   004488  C08D  F033         	movff	?_tickGet,_pbTimer
 21662   00448C  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21663   004490  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21664   004494  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21665                           
 21666                           ;../../VLCBlib_PIC/mns.c: 689:             } else {
 21667   004498  0012               	return	
 21668   00449A                     l23818:
 21669                           
 21670                           ; BSR set to: 0
 21671                           ;../../VLCBlib_PIC/mns.c: 691:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21672   00449A  ECE4  F05A         	call	_tickGet	;wreg free
 21673   00449E  5033               	movf	_pbTimer^0,w,c
 21674   0044A0  0100               	movlb	0	; () banked
 21675   0044A2  5D8D               	subwf	?_tickGet& (0+255),w,b
 21676   0044A4  0101               	movlb	1	; () banked
 21677   0044A6  6FC7               	movwf	??_mnsPoll& (0+255),b
 21678   0044A8  5034               	movf	(_pbTimer+1)^0,w,c
 21679   0044AA  0100               	movlb	0	; () banked
 21680   0044AC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21681   0044AE  0101               	movlb	1	; () banked
 21682   0044B0  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21683   0044B2  5035               	movf	(_pbTimer+2)^0,w,c
 21684   0044B4  0100               	movlb	0	; () banked
 21685   0044B6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21686   0044B8  0101               	movlb	1	; () banked
 21687   0044BA  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21688   0044BC  5036               	movf	(_pbTimer+3)^0,w,c
 21689   0044BE  0100               	movlb	0	; () banked
 21690   0044C0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21691   0044C2  0101               	movlb	1	; () banked
 21692   0044C4  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21693   0044C6  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21694   0044C8  E108               	bnz	u25360
 21695   0044CA  0E91               	movlw	145
 21696   0044CC  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21697   0044CE  0ED0               	movlw	208
 21698   0044D0  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21699   0044D2  0E03               	movlw	3
 21700   0044D4  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21701   0044D6  A0D8               	btfss	status,0,c
 21702   0044D8  0012               	return	
 21703   0044DA                     u25360:
 21704                           
 21705                           ; BSR set to: 1
 21706                           ;../../VLCBlib_PIC/mns.c: 693:                     mode_state = 0xFD;
 21707   0044DA  0EFD               	movlw	253
 21708   0044DC  0100               	movlb	0	; () banked
 21709   0044DE  6FC5               	movwf	_mode_state& (0+255),b
 21710                           
 21711                           ; BSR set to: 0
 21712                           ;../../VLCBlib_PIC/mns.c: 694:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 21713   0044E0  0101               	movlb	1	; () banked
 21714   0044E2  6965               	setf	_setupModePreviousMode& (0+255),b
 21715                           
 21716                           ; BSR set to: 1
 21717                           ;../../VLCBlib_PIC/mns.c: 695:                     setLEDsByMode();
 21718   0044E4  EC50  F05F         	call	_setLEDsByMode	;wreg free
 21719   0044E8  0012               	return	
 21720   0044EA                     l1544:
 21721                           
 21722                           ; BSR set to: 0
 21723                           ;../../VLCBlib_PIC/mns.c: 700:             if ((!(PORTAbits.RA2)) == 0) {
 21724   0044EA  A480               	btfss	128,2,c	;volatile
 21725   0044EC  D7CB               	goto	u25350
 21726                           
 21727                           ; BSR set to: 0
 21728                           ;../../VLCBlib_PIC/mns.c: 704:                 mode_state = MODE_SETUP;
 21729   0044EE  0E00               	movlw	0
 21730   0044F0  6FC5               	movwf	_mode_state& (0+255),b
 21731                           
 21732                           ; BSR set to: 0
 21733                           ;../../VLCBlib_PIC/mns.c: 705:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 21734   0044F2  0101               	movlb	1	; () banked
 21735   0044F4  6965               	setf	_setupModePreviousMode& (0+255),b
 21736                           
 21737                           ; BSR set to: 1
 21738                           ;../../VLCBlib_PIC/mns.c: 706:                 pbTimer.val = tickGet();
 21739   0044F6  ECE4  F05A         	call	_tickGet	;wreg free
 21740   0044FA  C08D  F033         	movff	?_tickGet,_pbTimer
 21741   0044FE  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21742   004502  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21743   004506  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21744                           
 21745                           ;../../VLCBlib_PIC/mns.c: 708:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 21746   00450A  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 21747   00450E  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 21748   004512  0E50               	movlw	80
 21749   004514  ECB1  F05F         	call	_sendMessage2
 21750   004518                     l23834:
 21751                           
 21752                           ;../../VLCBlib_PIC/mns.c: 709:                 setLEDsByMode();
 21753   004518  EC50  F05F         	call	_setLEDsByMode	;wreg free
 21754   00451C  D7B3               	goto	u25350
 21755   00451E                     l1546:
 21756                           
 21757                           ; BSR set to: 0
 21758                           ;../../VLCBlib_PIC/mns.c: 727:             if ((!(PORTAbits.RA2)) == 0) {
 21759   00451E  A480               	btfss	128,2,c	;volatile
 21760   004520  0012               	return	
 21761                           
 21762                           ; BSR set to: 0
 21763                           ;../../VLCBlib_PIC/mns.c: 730:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21764   004522  ECE4  F05A         	call	_tickGet	;wreg free
 21765   004526  5033               	movf	_pbTimer^0,w,c
 21766   004528  0100               	movlb	0	; () banked
 21767   00452A  5D8D               	subwf	?_tickGet& (0+255),w,b
 21768   00452C  0101               	movlb	1	; () banked
 21769   00452E  6FC7               	movwf	??_mnsPoll& (0+255),b
 21770   004530  5034               	movf	(_pbTimer+1)^0,w,c
 21771   004532  0100               	movlb	0	; () banked
 21772   004534  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21773   004536  0101               	movlb	1	; () banked
 21774   004538  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21775   00453A  5035               	movf	(_pbTimer+2)^0,w,c
 21776   00453C  0100               	movlb	0	; () banked
 21777   00453E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21778   004540  0101               	movlb	1	; () banked
 21779   004542  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21780   004544  5036               	movf	(_pbTimer+3)^0,w,c
 21781   004546  0100               	movlb	0	; () banked
 21782   004548  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21783   00454A  0101               	movlb	1	; () banked
 21784   00454C  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21785   00454E  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21786   004550  E108               	bnz	u25390
 21787   004552  0E91               	movlw	145
 21788   004554  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21789   004556  0ED0               	movlw	208
 21790   004558  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21791   00455A  0E03               	movlw	3
 21792   00455C  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21793   00455E  A0D8               	btfss	status,0,c
 21794   004560  D015               	goto	l23852
 21795   004562                     u25390:
 21796                           
 21797                           ; BSR set to: 1
 21798                           ;../../VLCBlib_PIC/mns.c: 733:                     mode_state = setupModePreviousMode;
 21799   004562  C165  F0C5         	movff	_setupModePreviousMode,_mode_state
 21800                           
 21801                           ; BSR set to: 1
 21802                           ;../../VLCBlib_PIC/mns.c: 734:                     if (mode_state == MODE_NORMAL) {
 21803   004566  0100               	movlb	0	; () banked
 21804   004568  05C5               	decf	_mode_state& (0+255),w,b
 21805   00456A  A4D8               	btfss	status,2,c
 21806   00456C  D7D5               	goto	l23834
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;../../VLCBlib_PIC/mns.c: 735:                         nn.word = previousNN.word;
 21810   00456E  C160  F0BD         	movff	_previousNN,_nn
 21811   004572  C161  F0BE         	movff	_previousNN+1,_nn+1
 21812                           
 21813                           ; BSR set to: 0
 21814                           ;../../VLCBlib_PIC/mns.c: 736:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 21815   004576  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 21816   00457A  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 21817   00457E  0E52               	movlw	82
 21818   004580  ECB1  F05F         	call	_sendMessage2
 21819                           
 21820                           ;../../VLCBlib_PIC/mns.c: 738:                         mnsDiagnostics[0x05].asUint++;
 21821   004584  0101               	movlb	1	; () banked
 21822   004586  4B97               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 21823   004588  2B98               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 21824   00458A  D7C6               	goto	l23834
 21825   00458C                     l23852:
 21826                           
 21827                           ; BSR set to: 1
 21828   00458C  ECE4  F05A         	call	_tickGet	;wreg free
 21829   004590  5033               	movf	_pbTimer^0,w,c
 21830   004592  0100               	movlb	0	; () banked
 21831   004594  5D8D               	subwf	?_tickGet& (0+255),w,b
 21832   004596  0101               	movlb	1	; () banked
 21833   004598  6FC7               	movwf	??_mnsPoll& (0+255),b
 21834   00459A  5034               	movf	(_pbTimer+1)^0,w,c
 21835   00459C  0100               	movlb	0	; () banked
 21836   00459E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21837   0045A0  0101               	movlb	1	; () banked
 21838   0045A2  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21839   0045A4  5035               	movf	(_pbTimer+2)^0,w,c
 21840   0045A6  0100               	movlb	0	; () banked
 21841   0045A8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21842   0045AA  0101               	movlb	1	; () banked
 21843   0045AC  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21844   0045AE  5036               	movf	(_pbTimer+3)^0,w,c
 21845   0045B0  0100               	movlb	0	; () banked
 21846   0045B2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21847   0045B4  0101               	movlb	1	; () banked
 21848   0045B6  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21849   0045B8  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21850   0045BA  11C9               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21851   0045BC  E106               	bnz	u25410
 21852   0045BE  0E25               	movlw	37
 21853   0045C0  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21854   0045C2  0EF4               	movlw	244
 21855   0045C4  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21856   0045C6  A0D8               	btfss	status,0,c
 21857   0045C8  D75D               	goto	u25350
 21858   0045CA                     u25410:
 21859                           
 21860                           ; BSR set to: 1
 21861                           ;../../VLCBlib_PIC/mns.c: 744:                     if (nn.word != 0) {
 21862   0045CA  0100               	movlb	0	; () banked
 21863   0045CC  51BD               	movf	_nn& (0+255),w,b
 21864   0045CE  11BE               	iorwf	(_nn+1)& (0+255),w,b
 21865   0045D0  B4D8               	btfsc	status,2,c
 21866   0045D2  D007               	goto	l23858
 21867                           
 21868                           ; BSR set to: 0
 21869                           ;../../VLCBlib_PIC/mns.c: 745:                         sendMessage2(OPC_NNREL, nn.bytes.
      +                          hi, nn.bytes.lo);
 21870   0045D4  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 21871   0045D8  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 21872   0045DC  0E51               	movlw	81
 21873   0045DE  ECB1  F05F         	call	_sendMessage2
 21874   0045E2                     l23858:
 21875                           
 21876                           ;../../VLCBlib_PIC/mns.c: 747:                     nn.word = 0;
 21877   0045E2  0E00               	movlw	0
 21878   0045E4  0100               	movlb	0	; () banked
 21879   0045E6  6FBE               	movwf	(_nn+1)& (0+255),b
 21880   0045E8  0E00               	movlw	0
 21881   0045EA  6FBD               	movwf	_nn& (0+255),b
 21882                           
 21883                           ; BSR set to: 0
 21884                           ;../../VLCBlib_PIC/mns.c: 748:                     mode_state = MODE_UNINITIALISED;
 21885   0045EC  69C5               	setf	_mode_state& (0+255),b
 21886   0045EE  D794               	goto	l23834
 21887   0045F0                     l1553:
 21888                           
 21889                           ; BSR set to: 0
 21890                           ;../../VLCBlib_PIC/mns.c: 756:             if ((!(PORTAbits.RA2)) == 0) {
 21891   0045F0  A480               	btfss	128,2,c	;volatile
 21892   0045F2  0012               	return	
 21893                           
 21894                           ; BSR set to: 0
 21895                           ;../../VLCBlib_PIC/mns.c: 758:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21896   0045F4  ECE4  F05A         	call	_tickGet	;wreg free
 21897   0045F8  5033               	movf	_pbTimer^0,w,c
 21898   0045FA  0100               	movlb	0	; () banked
 21899   0045FC  5D8D               	subwf	?_tickGet& (0+255),w,b
 21900   0045FE  0101               	movlb	1	; () banked
 21901   004600  6FC7               	movwf	??_mnsPoll& (0+255),b
 21902   004602  5034               	movf	(_pbTimer+1)^0,w,c
 21903   004604  0100               	movlb	0	; () banked
 21904   004606  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21905   004608  0101               	movlb	1	; () banked
 21906   00460A  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21907   00460C  5035               	movf	(_pbTimer+2)^0,w,c
 21908   00460E  0100               	movlb	0	; () banked
 21909   004610  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21910   004612  0101               	movlb	1	; () banked
 21911   004614  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21912   004616  5036               	movf	(_pbTimer+3)^0,w,c
 21913   004618  0100               	movlb	0	; () banked
 21914   00461A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21915   00461C  0101               	movlb	1	; () banked
 21916   00461E  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21917   004620  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21918   004622  E108               	bnz	u25440
 21919   004624  0E91               	movlw	145
 21920   004626  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21921   004628  0ED0               	movlw	208
 21922   00462A  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21923   00462C  0E03               	movlw	3
 21924   00462E  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21925   004630  A0D8               	btfss	status,0,c
 21926   004632  D728               	goto	u25350
 21927   004634                     u25440:
 21928                           
 21929                           ; BSR set to: 1
 21930                           ;../../VLCBlib_PIC/mns.c: 761:                     previousNN.word = nn.word;
 21931   004634  C0BD  F160         	movff	_nn,_previousNN
 21932   004638  C0BE  F161         	movff	_nn+1,_previousNN+1
 21933                           
 21934                           ; BSR set to: 1
 21935                           ;../../VLCBlib_PIC/mns.c: 762:                     nn.bytes.lo = nn.bytes.hi = 0;
 21936   00463C  0E00               	movlw	0
 21937   00463E  0100               	movlb	0	; () banked
 21938   004640  6FBE               	movwf	(_nn+1)& (0+255),b
 21939   004642  C0BE  F0BD         	movff	_nn+1,_nn
 21940                           
 21941                           ;../../VLCBlib_PIC/mns.c: 764:                     mode_state = MODE_SETUP;
 21942   004646  0E00               	movlw	0
 21943   004648  6FC5               	movwf	_mode_state& (0+255),b
 21944                           
 21945                           ;../../VLCBlib_PIC/mns.c: 765:                     setupModePreviousMode = MODE_NORMAL;
 21946   00464A  0E01               	movlw	1
 21947   00464C  0101               	movlb	1	; () banked
 21948   00464E  6F65               	movwf	_setupModePreviousMode& (0+255),b
 21949                           
 21950                           ; BSR set to: 1
 21951                           ;../../VLCBlib_PIC/mns.c: 766:                     pbTimer.val = tickGet();
 21952   004650  ECE4  F05A         	call	_tickGet	;wreg free
 21953   004654  C08D  F033         	movff	?_tickGet,_pbTimer
 21954   004658  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21955   00465C  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21956   004660  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21957                           
 21958                           ;../../VLCBlib_PIC/mns.c: 768:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 21959   004664  C161  F0A6         	movff	_previousNN+1,sendMessage2@data1
 21960   004668  C160  F0A7         	movff	_previousNN,sendMessage2@data2
 21961   00466C  0E50               	movlw	80
 21962   00466E  ECB1  F05F         	call	_sendMessage2
 21963   004672  D752               	goto	l23834
 21964   004674                     l23880:
 21965                           
 21966                           ; BSR set to: 1
 21967   004674  0100               	movlb	0	; () banked
 21968   004676  51C5               	movf	_mode_state& (0+255),w,b
 21969                           
 21970                           ; Switch size 1, requested type "simple"
 21971                           ; Number of cases is 3, Range of values is 0 to 255
 21972                           ; switch strategies available:
 21973                           ; Name         Instructions Cycles
 21974                           ; simple_byte           10     6 (average)
 21975                           ;	Chosen strategy is simple_byte
 21976   004678  0A00               	xorlw	0	; case 0
 21977   00467A  B4D8               	btfsc	status,2,c
 21978   00467C  D750               	goto	l1546
 21979   00467E  0AFD               	xorlw	253	; case 253
 21980   004680  B4D8               	btfsc	status,2,c
 21981   004682  D733               	goto	l1544
 21982   004684  0A02               	xorlw	2	; case 255
 21983   004686  B4D8               	btfsc	status,2,c
 21984   004688  D6FB               	goto	l1539
 21985   00468A  D7B2               	goto	l1553
 21986   00468C                     __end_of_mnsPoll:
 21987                           	callstack 0
 21988                           
 21989 ;; *************** function _setLEDsByMode *****************
 21990 ;; Defined at:
 21991 ;;		line 813 in file "../../VLCBlib_PIC/mns.c"
 21992 ;; Parameters:    Size  Location     Type
 21993 ;;		None
 21994 ;; Auto vars:     Size  Location     Type
 21995 ;;		None
 21996 ;; Return value:  Size  Location     Type
 21997 ;;                  1    wreg      void 
 21998 ;; Registers used:
 21999 ;;		wreg, status,2, status,0, cstack
 22000 ;; Tracked objects:
 22001 ;;		On entry : 0/0
 22002 ;;		On exit  : 0/0
 22003 ;;		Unchanged: 0/0
 22004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22009 ;;Total ram usage:        0 bytes
 22010 ;; Hardware stack levels used: 1
 22011 ;; Hardware stack levels required when called: 13
 22012 ;; This function calls:
 22013 ;;		_showStatus
 22014 ;; This function is called by:
 22015 ;;		_mnsPowerUp
 22016 ;;		_mnsProcessMessage
 22017 ;;		_mnsPoll
 22018 ;; This function uses a non-reentrant model
 22019 ;;
 22020                           
 22021                           	psect	text75
 22022   00BEA0                     __ptext75:
 22023                           	callstack 0
 22024   00BEA0                     _setLEDsByMode:
 22025                           	callstack 15
 22026                           
 22027                           ;../../VLCBlib_PIC/mns.c: 814:        switch (mode_state) {
 22028                           
 22029                           ;incstack = 0
 22030   00BEA0  D00C               	goto	l22002
 22031   00BEA2                     l21994:
 22032                           
 22033                           ; BSR set to: 0
 22034                           ;../../VLCBlib_PIC/mns.c: 816:             showStatus(STATUS_UNINITIALISED);
 22035   00BEA2  0E01               	movlw	1
 22036   00BEA4  EC96  F043         	call	_showStatus
 22037                           
 22038                           ;../../VLCBlib_PIC/mns.c: 817:             break;
 22039   00BEA8  0012               	return	
 22040   00BEAA                     l21996:
 22041                           
 22042                           ; BSR set to: 0
 22043                           ;../../VLCBlib_PIC/mns.c: 820:             showStatus(STATUS_SETUP);
 22044   00BEAA  0E02               	movlw	2
 22045   00BEAC  EC96  F043         	call	_showStatus
 22046                           
 22047                           ;../../VLCBlib_PIC/mns.c: 821:             break;
 22048   00BEB0  0012               	return	
 22049   00BEB2                     l21998:
 22050                           
 22051                           ; BSR set to: 0
 22052                           ;../../VLCBlib_PIC/mns.c: 823:             showStatus(STATUS_NORMAL);
 22053   00BEB2  0E03               	movlw	3
 22054   00BEB4  EC96  F043         	call	_showStatus
 22055                           
 22056                           ;../../VLCBlib_PIC/mns.c: 824:             break;
 22057   00BEB8  0012               	return	
 22058   00BEBA                     l22002:
 22059   00BEBA  0100               	movlb	0	; () banked
 22060   00BEBC  51C5               	movf	_mode_state& (0+255),w,b
 22061                           
 22062                           ; Switch size 1, requested type "simple"
 22063                           ; Number of cases is 3, Range of values is 0 to 255
 22064                           ; switch strategies available:
 22065                           ; Name         Instructions Cycles
 22066                           ; simple_byte           10     6 (average)
 22067                           ;	Chosen strategy is simple_byte
 22068   00BEBE  0A00               	xorlw	0	; case 0
 22069   00BEC0  B4D8               	btfsc	status,2,c
 22070   00BEC2  D7F3               	goto	l21996
 22071   00BEC4  0AFD               	xorlw	253	; case 253
 22072   00BEC6  B4D8               	btfsc	status,2,c
 22073   00BEC8  D7F0               	goto	l21996
 22074   00BECA  0A02               	xorlw	2	; case 255
 22075   00BECC  B4D8               	btfsc	status,2,c
 22076   00BECE  D7E9               	goto	l21994
 22077   00BED0  D7F0               	goto	l21998
 22078   00BED2                     __end_of_setLEDsByMode:
 22079                           	callstack 0
 22080                           
 22081 ;; *************** function _sendMessage2 *****************
 22082 ;; Defined at:
 22083 ;;		line 1145 in file "../../VLCBlib_PIC/vlcb.c"
 22084 ;; Parameters:    Size  Location     Type
 22085 ;;  opc             1    wreg     enum E12392
 22086 ;;  data1           1   70[BANK0 ] unsigned char 
 22087 ;;  data2           1   71[BANK0 ] unsigned char 
 22088 ;; Auto vars:     Size  Location     Type
 22089 ;;  opc             1   72[BANK0 ] enum E12392
 22090 ;; Return value:  Size  Location     Type
 22091 ;;                  1    wreg      void 
 22092 ;; Registers used:
 22093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22094 ;; Tracked objects:
 22095 ;;		On entry : 0/0
 22096 ;;		On exit  : 0/0
 22097 ;;		Unchanged: 0/0
 22098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22099 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22102 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22103 ;;Total ram usage:        3 bytes
 22104 ;; Hardware stack levels used: 1
 22105 ;; Hardware stack levels required when called: 16
 22106 ;; This function calls:
 22107 ;;		_sendMessage
 22108 ;; This function is called by:
 22109 ;;		_mnsProcessMessage
 22110 ;;		_mnsPoll
 22111 ;;		_nvProcessMessage
 22112 ;;		_doNnclr
 22113 ;;		_doEvlrn
 22114 ;;		_doEvuln
 22115 ;; This function uses a non-reentrant model
 22116 ;;
 22117                           
 22118                           	psect	text76
 22119   00BF62                     __ptext76:
 22120                           	callstack 0
 22121   00BF62                     _sendMessage2:
 22122                           	callstack 11
 22123                           
 22124                           ;incstack = 0
 22125                           ;sendMessage2@opc stored from wreg
 22126   00BF62  0100               	movlb	0	; () banked
 22127   00BF64  6FA8               	movwf	sendMessage2@opc& (0+255),b
 22128                           
 22129                           ;../../VLCBlib_PIC/vlcb.c: 1146:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 22130   00BF66  0E03               	movlw	3
 22131   00BF68  0101               	movlb	1	; () banked
 22132   00BF6A  6FBA               	movwf	sendMessage@len& (0+255),b
 22133   00BF6C  C0A6  F1BB         	movff	sendMessage2@data1,sendMessage@data1
 22134   00BF70  C0A7  F1BC         	movff	sendMessage2@data2,sendMessage@data2
 22135   00BF74  0E00               	movlw	0
 22136   00BF76  6FBD               	movwf	sendMessage@data3& (0+255),b
 22137   00BF78  0E00               	movlw	0
 22138   00BF7A  6FBE               	movwf	sendMessage@data4& (0+255),b
 22139   00BF7C  0E00               	movlw	0
 22140   00BF7E  6FBF               	movwf	sendMessage@data5& (0+255),b
 22141   00BF80  0E00               	movlw	0
 22142   00BF82  6FC0               	movwf	sendMessage@data6& (0+255),b
 22143   00BF84  0E00               	movlw	0
 22144   00BF86  6FC1               	movwf	sendMessage@data7& (0+255),b
 22145   00BF88  0100               	movlb	0	; () banked
 22146   00BF8A  51A8               	movf	sendMessage2@opc& (0+255),w,b
 22147   00BF8C  ECA3  F054         	call	_sendMessage
 22148   00BF90  0012               	return		;funcret
 22149   00BF92                     __end_of_sendMessage2:
 22150                           	callstack 0
 22151                           
 22152 ;; *************** function _setNormalActions *****************
 22153 ;; Defined at:
 22154 ;;		line 519 in file "../event_consumerDualActionQueue.c"
 22155 ;; Parameters:    Size  Location     Type
 22156 ;;		None
 22157 ;; Auto vars:     Size  Location     Type
 22158 ;;		None
 22159 ;; Return value:  Size  Location     Type
 22160 ;;                  1    wreg      void 
 22161 ;; Registers used:
 22162 ;;		wreg, status,2
 22163 ;; Tracked objects:
 22164 ;;		On entry : 0/0
 22165 ;;		On exit  : 0/0
 22166 ;;		Unchanged: 0/0
 22167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22172 ;;Total ram usage:        0 bytes
 22173 ;; Hardware stack levels used: 1
 22174 ;; Hardware stack levels required when called: 12
 22175 ;; This function calls:
 22176 ;;		Nothing
 22177 ;; This function is called by:
 22178 ;;		_consumer2QProcessMessage
 22179 ;; This function uses a non-reentrant model
 22180 ;;
 22181                           
 22182                           	psect	text77
 22183   00C632                     __ptext77:
 22184                           	callstack 0
 22185   00C632                     _setNormalActions:
 22186                           	callstack 16
 22187                           
 22188                           ;../event_consumerDualActionQueue.c: 520:     expedited = FALSE;
 22189                           
 22190                           ;incstack = 0
 22191   00C632  0E00               	movlw	0
 22192   00C634  6E49               	movwf	_expedited^0,c
 22193   00C636  0012               	return		;funcret
 22194   00C638                     __end_of_setNormalActions:
 22195                           	callstack 0
 22196                           
 22197 ;; *************** function _setExpeditedActions *****************
 22198 ;; Defined at:
 22199 ;;		line 512 in file "../event_consumerDualActionQueue.c"
 22200 ;; Parameters:    Size  Location     Type
 22201 ;;		None
 22202 ;; Auto vars:     Size  Location     Type
 22203 ;;		None
 22204 ;; Return value:  Size  Location     Type
 22205 ;;                  1    wreg      void 
 22206 ;; Registers used:
 22207 ;;		wreg, status,2
 22208 ;; Tracked objects:
 22209 ;;		On entry : 0/0
 22210 ;;		On exit  : 0/0
 22211 ;;		Unchanged: 0/0
 22212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22217 ;;Total ram usage:        0 bytes
 22218 ;; Hardware stack levels used: 1
 22219 ;; Hardware stack levels required when called: 12
 22220 ;; This function calls:
 22221 ;;		Nothing
 22222 ;; This function is called by:
 22223 ;;		_consumer2QProcessMessage
 22224 ;; This function uses a non-reentrant model
 22225 ;;
 22226                           
 22227                           	psect	text78
 22228   00C638                     __ptext78:
 22229                           	callstack 0
 22230   00C638                     _setExpeditedActions:
 22231                           	callstack 16
 22232                           
 22233                           ;../event_consumerDualActionQueue.c: 513:     expedited = TRUE;
 22234                           
 22235                           ;incstack = 0
 22236   00C638  0E01               	movlw	1
 22237   00C63A  6E49               	movwf	_expedited^0,c
 22238   00C63C  0012               	return		;funcret
 22239   00C63E                     __end_of_setExpeditedActions:
 22240                           	callstack 0
 22241                           
 22242 ;; *************** function _pushTwoAction *****************
 22243 ;; Defined at:
 22244 ;;		line 393 in file "../event_consumerDualActionQueue.c"
 22245 ;; Parameters:    Size  Location     Type
 22246 ;;  a               1    wreg     unsigned char 
 22247 ;; Auto vars:     Size  Location     Type
 22248 ;;  a               1   45[BANK0 ] unsigned char 
 22249 ;; Return value:  Size  Location     Type
 22250 ;;                  1    wreg      enum E12766
 22251 ;; Registers used:
 22252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22253 ;; Tracked objects:
 22254 ;;		On entry : 0/0
 22255 ;;		On exit  : 0/0
 22256 ;;		Unchanged: 0/0
 22257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22261 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22262 ;;Total ram usage:        1 bytes
 22263 ;; Hardware stack levels used: 1
 22264 ;; Hardware stack levels required when called: 12
 22265 ;; This function calls:
 22266 ;;		Nothing
 22267 ;; This function is called by:
 22268 ;;		_consumer2QProcessMessage
 22269 ;; This function uses a non-reentrant model
 22270 ;;
 22271                           
 22272                           	psect	text79
 22273   00B400                     __ptext79:
 22274                           	callstack 0
 22275   00B400                     _pushTwoAction:
 22276                           	callstack 16
 22277                           
 22278                           ;incstack = 0
 22279                           ;pushTwoAction@a stored from wreg
 22280   00B400  0100               	movlb	0	; () banked
 22281   00B402  6F8D               	movwf	pushTwoAction@a& (0+255),b
 22282                           
 22283                           ;../event_consumerDualActionQueue.c: 394:     if (expedited) {
 22284   00B404  5049               	movf	_expedited^0,w,c
 22285   00B406  B4D8               	btfsc	status,2,c
 22286   00B408  D015               	goto	l21376
 22287                           
 22288                           ;../event_consumerDualActionQueue.c: 395:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 22289   00B40A  0100               	movlb	0	; () banked
 22290   00B40C  29CA               	incf	_expeditedWriteIndex& (0+255),w,b
 22291   00B40E  0B07               	andlw	7
 22292   00B410  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 22293   00B412  B4D8               	btfsc	status,2,c
 22294   00B414  0012               	return	
 22295                           
 22296                           ; BSR set to: 0
 22297                           ;../event_consumerDualActionQueue.c: 397:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 22298   00B416  0EC4               	movlw	low _expeditedQueueBuf
 22299   00B418  25CA               	addwf	_expeditedWriteIndex& (0+255),w,b
 22300   00B41A  6ED9               	movwf	fsr2l,c
 22301   00B41C  6ADA               	clrf	fsr2h,c
 22302   00B41E  0E02               	movlw	high _expeditedQueueBuf
 22303   00B420  22DA               	addwfc	fsr2h,f,c
 22304   00B422  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22305                           
 22306                           ; BSR set to: 0
 22307   00B426  2BCA               	incf	_expeditedWriteIndex& (0+255),f,b
 22308                           
 22309                           ; BSR set to: 0
 22310                           ;../event_consumerDualActionQueue.c: 398:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 22311   00B428  0E07               	movlw	7
 22312   00B42A  65CA               	cpfsgt	_expeditedWriteIndex& (0+255),b
 22313   00B42C  0012               	return	
 22314                           
 22315                           ; BSR set to: 0
 22316   00B42E  0E00               	movlw	0
 22317   00B430  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
 22318   00B432  0012               	return	
 22319   00B434                     l21376:
 22320                           
 22321                           ;../event_consumerDualActionQueue.c: 401:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 22322   00B434  0100               	movlb	0	; () banked
 22323   00B436  29CC               	incf	_normalWriteIndex& (0+255),w,b
 22324   00B438  0B3F               	andlw	63
 22325   00B43A  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 22326   00B43C  B4D8               	btfsc	status,2,c
 22327   00B43E  0012               	return	
 22328                           
 22329                           ; BSR set to: 0
 22330                           ;../event_consumerDualActionQueue.c: 403:     normalQueueBuf[normalWriteIndex++] = a;
 22331   00B440  0E80               	movlw	low _normalQueueBuf
 22332   00B442  25CC               	addwf	_normalWriteIndex& (0+255),w,b
 22333   00B444  6ED9               	movwf	fsr2l,c
 22334   00B446  6ADA               	clrf	fsr2h,c
 22335   00B448  0E04               	movlw	high _normalQueueBuf
 22336   00B44A  22DA               	addwfc	fsr2h,f,c
 22337   00B44C  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22338                           
 22339                           ; BSR set to: 0
 22340   00B450  2BCC               	incf	_normalWriteIndex& (0+255),f,b
 22341                           
 22342                           ; BSR set to: 0
 22343                           ;../event_consumerDualActionQueue.c: 404:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 22344   00B452  0E3F               	movlw	63
 22345   00B454  65CC               	cpfsgt	_normalWriteIndex& (0+255),b
 22346   00B456  0012               	return	
 22347                           
 22348                           ; BSR set to: 0
 22349   00B458  0E00               	movlw	0
 22350   00B45A  6FCC               	movwf	_normalWriteIndex& (0+255),b
 22351                           
 22352                           ; BSR set to: 0
 22353   00B45C  0012               	return		;funcret
 22354   00B45E                     __end_of_pushTwoAction:
 22355                           	callstack 0
 22356                           
 22357 ;; *************** function _canReceiveMessage *****************
 22358 ;; Defined at:
 22359 ;;		line 589 in file "../../VLCBlib_PIC/can18_ecan.c"
 22360 ;; Parameters:    Size  Location     Type
 22361 ;;  m               2   10[BANK1 ] PTR struct Message
 22362 ;;		 -> poll@m(9), 
 22363 ;; Auto vars:     Size  Location     Type
 22364 ;;  p               2   17[BANK1 ] PTR unsigned char 
 22365 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22366 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22367 ;;		 -> NULL(0), 
 22368 ;;  mp              2   14[BANK1 ] PTR struct Message
 22369 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22370 ;;  no              1   16[BANK1 ] unsigned char 
 22371 ;;  messageAvail    1   13[BANK1 ] enum E13077
 22372 ;;  incomingCanI    1    0        unsigned char 
 22373 ;; Return value:  Size  Location     Type
 22374 ;;                  1    wreg      enum E13077
 22375 ;; Registers used:
 22376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22377 ;; Tracked objects:
 22378 ;;		On entry : 0/0
 22379 ;;		On exit  : 0/0
 22380 ;;		Unchanged: 0/0
 22381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22382 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22383 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22384 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22385 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22386 ;;Total ram usage:        9 bytes
 22387 ;; Hardware stack levels used: 1
 22388 ;; Hardware stack levels required when called: 20
 22389 ;; This function calls:
 22390 ;;		_getBufferPointer
 22391 ;;		_getNumRxBuffersInUse
 22392 ;;		_handleSelfEnumeration
 22393 ;;		_memcpy
 22394 ;;		_pop
 22395 ;;		_processEnumeration
 22396 ;; This function is called by:
 22397 ;;		_poll
 22398 ;; This function uses a non-reentrant model
 22399 ;;
 22400                           
 22401                           	psect	text80
 22402   0067DC                     __ptext80:
 22403                           	callstack 0
 22404   0067DC                     _canReceiveMessage:
 22405                           	callstack 9
 22406                           
 22407                           ;../../VLCBlib_PIC/can18_ecan.c: 590:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          591:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 592:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 593:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 595:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 598:     PIE5bits.
      +                          FIFOWMIE = 0;
 22408                           
 22409                           ; BSR set to: 0
 22410                           ;incstack = 0
 22411   0067DC  9076               	bcf	118,0,c	;volatile
 22412                           
 22413                           ;../../VLCBlib_PIC/can18_ecan.c: 599:     processEnumeration();
 22414   0067DE  EC5D  F03B         	call	_processEnumeration	;wreg free
 22415                           
 22416                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     no = getNumRxBuffersInUse();
 22417   0067E2  EC8F  F05E         	call	_getNumRxBuffersInUse	;wreg free
 22418   0067E6  0101               	movlb	1	; () banked
 22419   0067E8  6FCA               	movwf	canReceiveMessage@no& (0+255),b
 22420                           
 22421                           ; BSR set to: 1
 22422                           ;../../VLCBlib_PIC/can18_ecan.c: 604:     if (canDiagnostics[0x12].asUint < no) {
 22423   0067EA  51CA               	movf	canReceiveMessage@no& (0+255),w,b
 22424   0067EC  5D8B               	subwf	(_canDiagnostics+36)& (0+255),w,b
 22425   0067EE  0E00               	movlw	0
 22426   0067F0  598C               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 22427   0067F2  B0D8               	btfsc	status,0,c
 22428   0067F4  D003               	goto	l24282
 22429                           
 22430                           ; BSR set to: 1
 22431                           ;../../VLCBlib_PIC/can18_ecan.c: 605:         canDiagnostics[0x12].asUint = no;
 22432   0067F6  C1CA  F18B         	movff	canReceiveMessage@no,_canDiagnostics+36
 22433   0067FA  6B8C               	clrf	(_canDiagnostics+37)& (0+255),b
 22434   0067FC                     l24282:
 22435                           
 22436                           ; BSR set to: 1
 22437                           ;../../VLCBlib_PIC/can18_ecan.c: 608:     mp = pop(&rxQueue);
 22438   0067FC  0E4F               	movlw	low _rxQueue
 22439   0067FE  0100               	movlb	0	; () banked
 22440   006800  6F8D               	movwf	pop@q& (0+255),b
 22441   006802  EC39  F04E         	call	_pop	;wreg free
 22442   006806  C08D  F1C8         	movff	?_pop,canReceiveMessage@mp
 22443   00680A  C08E  F1C9         	movff	?_pop+1,canReceiveMessage@mp+1
 22444                           
 22445                           ;../../VLCBlib_PIC/can18_ecan.c: 609:     if (mp != ((void*)0)) {
 22446   00680E  0101               	movlb	1	; () banked
 22447   006810  51C8               	movf	canReceiveMessage@mp& (0+255),w,b
 22448   006812  11C9               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 22449   006814  B4D8               	btfsc	status,2,c
 22450   006816  D012               	goto	l2514
 22451                           
 22452                           ; BSR set to: 1
 22453                           ;../../VLCBlib_PIC/can18_ecan.c: 610:         memcpy(m, mp, sizeof(Message));
 22454   006818  C1C4  F08D         	movff	canReceiveMessage@m,memcpy@d1
 22455   00681C  C1C5  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 22456   006820  C1C8  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 22457   006824  C1C9  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 22458   006828  0E00               	movlw	0
 22459   00682A  0100               	movlb	0	; () banked
 22460   00682C  6F92               	movwf	(memcpy@n+1)& (0+255),b
 22461   00682E  0E09               	movlw	9
 22462   006830  6F91               	movwf	memcpy@n& (0+255),b
 22463   006832  ECD1  F05D         	call	_memcpy	;wreg free
 22464                           
 22465                           ;../../VLCBlib_PIC/can18_ecan.c: 611:         PIE5bits.FIFOWMIE = 1;
 22466   006836  8076               	bsf	118,0,c	;volatile
 22467                           
 22468                           ;../../VLCBlib_PIC/can18_ecan.c: 612:         return RECEIVED;
 22469   006838  0E01               	movlw	1
 22470   00683A  0012               	return	
 22471   00683C                     l2514:
 22472                           
 22473                           ; BSR set to: 1
 22474                           ;../../VLCBlib_PIC/can18_ecan.c: 614:         if (COMSTATbits.NOT_FIFOEMPTY) {
 22475   00683C  AE71               	btfss	113,7,c	;volatile
 22476   00683E  D00D               	goto	u25840
 22477                           
 22478                           ; BSR set to: 1
 22479                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             p = getBufferPointer(CANCON & 0x07);
 22480   006840  506F               	movf	111,w,c	;volatile
 22481   006842  0B07               	andlw	7
 22482   006844  ECB6  F04F         	call	_getBufferPointer
 22483   006848  C08D  F1CB         	movff	?_getBufferPointer,canReceiveMessage@p
 22484   00684C  C08E  F1CC         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 22485                           
 22486                           ;../../VLCBlib_PIC/can18_ecan.c: 616:             if (p == ((void*)0)) {
 22487   006850  0101               	movlb	1	; () banked
 22488   006852  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22489   006854  11CC               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 22490   006856  A4D8               	btfss	status,2,c
 22491   006858  D003               	goto	l2518
 22492   00685A                     u25840:
 22493                           
 22494                           ; BSR set to: 1
 22495                           ;../../VLCBlib_PIC/can18_ecan.c: 618:                 PIE5bits.FIFOWMIE = 1;
 22496   00685A  8076               	bsf	118,0,c	;volatile
 22497   00685C                     l24302:
 22498                           
 22499                           ; BSR set to: 1
 22500                           ;../../VLCBlib_PIC/can18_ecan.c: 619:                 return NOT_RECEIVED;
 22501   00685C  0E00               	movlw	0
 22502   00685E  0012               	return	
 22503   006860                     l2518:
 22504                           
 22505                           ; BSR set to: 1
 22506                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             PIR5bits.RXBnIF = 0;
 22507   006860  9277               	bcf	119,1,c	;volatile
 22508                           
 22509                           ; BSR set to: 1
 22510                           ;../../VLCBlib_PIC/can18_ecan.c: 623:             if (p[2] & 0x08) return NOT_RECEIVED;
 22511   006862  EE20 F002          	lfsr	2,2
 22512   006866  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22513   006868  26D9               	addwf	fsr2l,f,c
 22514   00686A  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22515   00686C  22DA               	addwfc	fsr2h,f,c
 22516   00686E  B6DF               	btfsc	indf2,3,c
 22517   006870  D7F5               	goto	l24302
 22518                           
 22519                           ; BSR set to: 1
 22520                           ;../../VLCBlib_PIC/can18_ecan.c: 625:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 22521   006872  C1CB  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 22522   006876  C1CC  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 22523   00687A  EC35  F040         	call	_handleSelfEnumeration	;wreg free
 22524   00687E  06E8               	decf	wreg,f,c
 22525   006880  A4D8               	btfss	status,2,c
 22526   006882  D08F               	goto	l24340
 22527                           
 22528                           ;../../VLCBlib_PIC/can18_ecan.c: 628:                 canDiagnostics[0x09].asUint++;
 22529   006884  0101               	movlb	1	; () banked
 22530   006886  4B79               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 22531   006888  2B7A               	incf	(_canDiagnostics+19)& (0+255),f,b
 22532                           
 22533                           ; BSR set to: 1
 22534                           ;../../VLCBlib_PIC/can18_ecan.c: 633:                     m->opc = p[6];
 22535   00688A  EE20 F006          	lfsr	2,6
 22536   00688E  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22537   006890  26D9               	addwf	fsr2l,f,c
 22538   006892  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22539   006894  22DA               	addwfc	fsr2h,f,c
 22540   006896  EE10 F001          	lfsr	1,1
 22541   00689A  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22542   00689C  26E1               	addwf	fsr1l,f,c
 22543   00689E  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22544   0068A0  22E2               	addwfc	fsr1h,f,c
 22545   0068A2  CFDF FFE7          	movff	indf2,indf1
 22546                           
 22547                           ; BSR set to: 1
 22548                           ;../../VLCBlib_PIC/can18_ecan.c: 634:                     m->len = p[5] & 0xF;
 22549   0068A6  EE20 F005          	lfsr	2,5
 22550   0068AA  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22551   0068AC  26D9               	addwf	fsr2l,f,c
 22552   0068AE  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22553   0068B0  22DA               	addwfc	fsr2h,f,c
 22554   0068B2  50DF               	movf	indf2,w,c
 22555   0068B4  0B0F               	andlw	15
 22556   0068B6  C1C4  FFD9         	movff	canReceiveMessage@m,fsr2l
 22557   0068BA  C1C5  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22558   0068BE  6EDF               	movwf	indf2,c
 22559                           
 22560                           ; BSR set to: 1
 22561                           ;../../VLCBlib_PIC/can18_ecan.c: 635:                     if (m->len > 8) {
 22562   0068C0  C1C4  FFD9         	movff	canReceiveMessage@m,fsr2l
 22563   0068C4  C1C5  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22564   0068C8  0E08               	movlw	8
 22565   0068CA  64DF               	cpfsgt	indf2,c
 22566   0068CC  D006               	goto	l24324
 22567                           
 22568                           ; BSR set to: 1
 22569                           ;../../VLCBlib_PIC/can18_ecan.c: 636:                         m->len = 8;
 22570   0068CE  C1C4  FFD9         	movff	canReceiveMessage@m,fsr2l
 22571   0068D2  C1C5  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22572   0068D6  0E08               	movlw	8
 22573   0068D8  6EDF               	movwf	indf2,c
 22574   0068DA                     l24324:
 22575                           
 22576                           ; BSR set to: 1
 22577                           ;../../VLCBlib_PIC/can18_ecan.c: 638:                     m->bytes[0] = p[7];
 22578   0068DA  EE20 F007          	lfsr	2,7
 22579   0068DE  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22580   0068E0  26D9               	addwf	fsr2l,f,c
 22581   0068E2  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22582   0068E4  22DA               	addwfc	fsr2h,f,c
 22583   0068E6  EE10 F002          	lfsr	1,2
 22584   0068EA  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22585   0068EC  26E1               	addwf	fsr1l,f,c
 22586   0068EE  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22587   0068F0  22E2               	addwfc	fsr1h,f,c
 22588   0068F2  CFDF FFE7          	movff	indf2,indf1
 22589                           
 22590                           ; BSR set to: 1
 22591                           ;../../VLCBlib_PIC/can18_ecan.c: 639:                     m->bytes[1] = p[8];
 22592   0068F6  EE20 F008          	lfsr	2,8
 22593   0068FA  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22594   0068FC  26D9               	addwf	fsr2l,f,c
 22595   0068FE  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22596   006900  22DA               	addwfc	fsr2h,f,c
 22597   006902  EE10 F003          	lfsr	1,3
 22598   006906  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22599   006908  26E1               	addwf	fsr1l,f,c
 22600   00690A  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22601   00690C  22E2               	addwfc	fsr1h,f,c
 22602   00690E  CFDF FFE7          	movff	indf2,indf1
 22603                           
 22604                           ; BSR set to: 1
 22605                           ;../../VLCBlib_PIC/can18_ecan.c: 640:                     m->bytes[2] = p[9];
 22606   006912  EE20 F009          	lfsr	2,9
 22607   006916  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22608   006918  26D9               	addwf	fsr2l,f,c
 22609   00691A  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22610   00691C  22DA               	addwfc	fsr2h,f,c
 22611   00691E  EE10 F004          	lfsr	1,4
 22612   006922  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22613   006924  26E1               	addwf	fsr1l,f,c
 22614   006926  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22615   006928  22E2               	addwfc	fsr1h,f,c
 22616   00692A  CFDF FFE7          	movff	indf2,indf1
 22617                           
 22618                           ; BSR set to: 1
 22619                           ;../../VLCBlib_PIC/can18_ecan.c: 641:                     m->bytes[3] = p[10];
 22620   00692E  EE20 F00A          	lfsr	2,10
 22621   006932  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22622   006934  26D9               	addwf	fsr2l,f,c
 22623   006936  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22624   006938  22DA               	addwfc	fsr2h,f,c
 22625   00693A  EE10 F005          	lfsr	1,5
 22626   00693E  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22627   006940  26E1               	addwf	fsr1l,f,c
 22628   006942  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22629   006944  22E2               	addwfc	fsr1h,f,c
 22630   006946  CFDF FFE7          	movff	indf2,indf1
 22631                           
 22632                           ; BSR set to: 1
 22633                           ;../../VLCBlib_PIC/can18_ecan.c: 642:                     m->bytes[4] = p[11];
 22634   00694A  EE20 F00B          	lfsr	2,11
 22635   00694E  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22636   006950  26D9               	addwf	fsr2l,f,c
 22637   006952  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22638   006954  22DA               	addwfc	fsr2h,f,c
 22639   006956  EE10 F006          	lfsr	1,6
 22640   00695A  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22641   00695C  26E1               	addwf	fsr1l,f,c
 22642   00695E  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22643   006960  22E2               	addwfc	fsr1h,f,c
 22644   006962  CFDF FFE7          	movff	indf2,indf1
 22645                           
 22646                           ; BSR set to: 1
 22647                           ;../../VLCBlib_PIC/can18_ecan.c: 643:                     m->bytes[5] = p[12];
 22648   006966  EE20 F00C          	lfsr	2,12
 22649   00696A  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22650   00696C  26D9               	addwf	fsr2l,f,c
 22651   00696E  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22652   006970  22DA               	addwfc	fsr2h,f,c
 22653   006972  EE10 F007          	lfsr	1,7
 22654   006976  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22655   006978  26E1               	addwf	fsr1l,f,c
 22656   00697A  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22657   00697C  22E2               	addwfc	fsr1h,f,c
 22658   00697E  CFDF FFE7          	movff	indf2,indf1
 22659                           
 22660                           ; BSR set to: 1
 22661                           ;../../VLCBlib_PIC/can18_ecan.c: 644:                     m->bytes[6] = p[13];
 22662   006982  EE20 F00D          	lfsr	2,13
 22663   006986  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22664   006988  26D9               	addwf	fsr2l,f,c
 22665   00698A  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22666   00698C  22DA               	addwfc	fsr2h,f,c
 22667   00698E  EE10 F008          	lfsr	1,8
 22668   006992  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22669   006994  26E1               	addwf	fsr1l,f,c
 22670   006996  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22671   006998  22E2               	addwfc	fsr1h,f,c
 22672   00699A  CFDF FFE7          	movff	indf2,indf1
 22673                           
 22674                           ; BSR set to: 1
 22675                           ;../../VLCBlib_PIC/can18_ecan.c: 645:                     messageAvailable = RECEIVED;
 22676   00699E  0E01               	movlw	1
 22677   0069A0  6FC7               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 22678   0069A2                     l24340:
 22679                           
 22680                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             if (PIR5bits.IRXIF) {
 22681   0069A2  AE77               	btfss	119,7,c	;volatile
 22682   0069A4  D004               	goto	l24346
 22683                           
 22684                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 canDiagnostics[0x01].asUint++;
 22685   0069A6  0101               	movlb	1	; () banked
 22686   0069A8  4B69               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 22687   0069AA  2B6A               	incf	(_canDiagnostics+3)& (0+255),f,b
 22688                           
 22689                           ; BSR set to: 1
 22690                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                 PIR5bits.IRXIF = 0;
 22691   0069AC  9E77               	bcf	119,7,c	;volatile
 22692   0069AE                     l24346:
 22693                           
 22694                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             p[0] &= 0x7f;
 22695   0069AE  C1CB  FFD9         	movff	canReceiveMessage@p,fsr2l
 22696   0069B2  C1CC  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 22697   0069B6  0E7F               	movlw	127
 22698   0069B8  16DF               	andwf	indf2,f,c
 22699                           
 22700                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             PIE5bits.FIFOWMIE = 1;
 22701   0069BA  8076               	bsf	118,0,c	;volatile
 22702                           
 22703                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             return messageAvailable;
 22704   0069BC  0101               	movlb	1	; () banked
 22705   0069BE  51C7               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 22706   0069C0  0012               	return	
 22707   0069C2                     __end_of_canReceiveMessage:
 22708                           	callstack 0
 22709                           
 22710 ;; *************** function _processEnumeration *****************
 22711 ;; Defined at:
 22712 ;;		line 903 in file "../../VLCBlib_PIC/can18_ecan.c"
 22713 ;; Parameters:    Size  Location     Type
 22714 ;;		None
 22715 ;; Auto vars:     Size  Location     Type
 22716 ;;  i               1    9[BANK1 ] unsigned char 
 22717 ;;  newCanId        1    8[BANK1 ] unsigned char 
 22718 ;;  enumResult      1    7[BANK1 ] unsigned char 
 22719 ;; Return value:  Size  Location     Type
 22720 ;;                  1    wreg      void 
 22721 ;; Registers used:
 22722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22723 ;; Tracked objects:
 22724 ;;		On entry : 0/0
 22725 ;;		On exit  : 0/0
 22726 ;;		Unchanged: 0/0
 22727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22729 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22730 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22731 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22732 ;;Total ram usage:        7 bytes
 22733 ;; Hardware stack levels used: 1
 22734 ;; Hardware stack levels required when called: 19
 22735 ;; This function calls:
 22736 ;;		_setNewCanId
 22737 ;;		_tickGet
 22738 ;;		_updateModuleErrorStatus
 22739 ;; This function is called by:
 22740 ;;		_canReceiveMessage
 22741 ;; This function uses a non-reentrant model
 22742 ;;
 22743                           
 22744                           	psect	text81
 22745   0076BA                     __ptext81:
 22746                           	callstack 0
 22747   0076BA                     _processEnumeration:
 22748                           	callstack 9
 22749                           
 22750                           ;../../VLCBlib_PIC/can18_ecan.c: 904:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 906:     switch (enumerationState) {
 22751                           
 22752                           ;incstack = 0
 22753   0076BA  D09B               	goto	l22416
 22754   0076BC                     l22354:
 22755                           
 22756                           ; BSR set to: 1
 22757                           ;../../VLCBlib_PIC/can18_ecan.c: 908:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 22758   0076BC  ECE4  F05A         	call	_tickGet	;wreg free
 22759   0076C0  502B               	movf	_enumerationStartTime^0,w,c
 22760   0076C2  0100               	movlb	0	; () banked
 22761   0076C4  5D8D               	subwf	?_tickGet& (0+255),w,b
 22762   0076C6  0101               	movlb	1	; () banked
 22763   0076C8  6FBD               	movwf	??_processEnumeration& (0+255),b
 22764   0076CA  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22765   0076CC  0100               	movlb	0	; () banked
 22766   0076CE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22767   0076D0  0101               	movlb	1	; () banked
 22768   0076D2  6FBE               	movwf	(??_processEnumeration+1)& (0+255),b
 22769   0076D4  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22770   0076D6  0100               	movlb	0	; () banked
 22771   0076D8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22772   0076DA  0101               	movlb	1	; () banked
 22773   0076DC  6FBF               	movwf	(??_processEnumeration+2)& (0+255),b
 22774   0076DE  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22775   0076E0  0100               	movlb	0	; () banked
 22776   0076E2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22777   0076E4  0101               	movlb	1	; () banked
 22778   0076E6  6FC0               	movwf	(??_processEnumeration+3)& (0+255),b
 22779   0076E8  51C0               	movf	(??_processEnumeration+3)& (0+255),w,b
 22780   0076EA  11BF               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22781   0076EC  E106               	bnz	u23350
 22782   0076EE  0ED5               	movlw	213
 22783   0076F0  5DBD               	subwf	??_processEnumeration& (0+255),w,b
 22784   0076F2  0E30               	movlw	48
 22785   0076F4  59BE               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22786   0076F6  A0D8               	btfss	status,0,c
 22787   0076F8  0012               	return	
 22788   0076FA                     u23350:
 22789                           
 22790                           ; BSR set to: 1
 22791                           ;../../VLCBlib_PIC/can18_ecan.c: 910:                 for (i=1; i< (0x7F/8)+1; i++) {
 22792   0076FA  0E01               	movlw	1
 22793   0076FC  6FC3               	movwf	processEnumeration@i& (0+255),b
 22794   0076FE                     l22362:
 22795                           
 22796                           ; BSR set to: 1
 22797                           ;../../VLCBlib_PIC/can18_ecan.c: 911:                     enumerationResults[i] = 0;
 22798   0076FE  0E34               	movlw	low _enumerationResults
 22799   007700  25C3               	addwf	processEnumeration@i& (0+255),w,b
 22800   007702  6ED9               	movwf	fsr2l,c
 22801   007704  6ADA               	clrf	fsr2h,c
 22802   007706  0E02               	movlw	high _enumerationResults
 22803   007708  22DA               	addwfc	fsr2h,f,c
 22804   00770A  6ADF               	clrf	indf2,c
 22805                           
 22806                           ; BSR set to: 1
 22807                           ;../../VLCBlib_PIC/can18_ecan.c: 912:                 }
 22808   00770C  2BC3               	incf	processEnumeration@i& (0+255),f,b
 22809                           
 22810                           ; BSR set to: 1
 22811   00770E  0E0F               	movlw	15
 22812   007710  65C3               	cpfsgt	processEnumeration@i& (0+255),b
 22813   007712  D7F5               	goto	l22362
 22814                           
 22815                           ; BSR set to: 1
 22816                           ;../../VLCBlib_PIC/can18_ecan.c: 913:                 enumerationResults[0] = 1;
 22817   007714  0E01               	movlw	1
 22818   007716  0102               	movlb	2	; () banked
 22819   007718  6F34               	movwf	_enumerationResults& (0+255),b
 22820                           
 22821                           ;../../VLCBlib_PIC/can18_ecan.c: 915:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 22822   00771A  0E02               	movlw	2
 22823   00771C  0100               	movlb	0	; () banked
 22824   00771E  6FBF               	movwf	_enumerationState& (0+255),b
 22825                           
 22826                           ; BSR set to: 0
 22827                           ;../../VLCBlib_PIC/can18_ecan.c: 916:                 enumerationStartTime.val = tickGet
      +                          ();
 22828   007720  ECE4  F05A         	call	_tickGet	;wreg free
 22829   007724  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22830   007728  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22831   00772C  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22832   007730  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22833                           
 22834                           ;../../VLCBlib_PIC/can18_ecan.c: 918:                 canDiagnostics[0x0D].asUint++;
 22835   007734  0101               	movlb	1	; () banked
 22836   007736  4B81               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 22837   007738  2B82               	incf	(_canDiagnostics+27)& (0+255),f,b
 22838                           
 22839                           ; BSR set to: 1
 22840                           ;../../VLCBlib_PIC/can18_ecan.c: 920:                 TXB1CONbits.TXREQ = 1;
 22841   00773A  010F               	movlb	15	; () banked
 22842   00773C  8710               	bsf	16,3,b	;volatile
 22843   00773E  0012               	return	
 22844   007740                     l22376:
 22845                           
 22846                           ; BSR set to: 1
 22847                           ;../../VLCBlib_PIC/can18_ecan.c: 924:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 22848   007740  ECE4  F05A         	call	_tickGet	;wreg free
 22849   007744  502B               	movf	_enumerationStartTime^0,w,c
 22850   007746  0100               	movlb	0	; () banked
 22851   007748  5D8D               	subwf	?_tickGet& (0+255),w,b
 22852   00774A  0101               	movlb	1	; () banked
 22853   00774C  6FBD               	movwf	??_processEnumeration& (0+255),b
 22854   00774E  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22855   007750  0100               	movlb	0	; () banked
 22856   007752  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22857   007754  0101               	movlb	1	; () banked
 22858   007756  6FBE               	movwf	(??_processEnumeration+1)& (0+255),b
 22859   007758  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22860   00775A  0100               	movlb	0	; () banked
 22861   00775C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22862   00775E  0101               	movlb	1	; () banked
 22863   007760  6FBF               	movwf	(??_processEnumeration+2)& (0+255),b
 22864   007762  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22865   007764  0100               	movlb	0	; () banked
 22866   007766  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22867   007768  0101               	movlb	1	; () banked
 22868   00776A  6FC0               	movwf	(??_processEnumeration+3)& (0+255),b
 22869   00776C  51C0               	movf	(??_processEnumeration+3)& (0+255),w,b
 22870   00776E  11BF               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22871   007770  E106               	bnz	u23370
 22872   007772  0E6B               	movlw	107
 22873   007774  5DBD               	subwf	??_processEnumeration& (0+255),w,b
 22874   007776  0E18               	movlw	24
 22875   007778  59BE               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22876   00777A  A0D8               	btfss	status,0,c
 22877   00777C  0012               	return	
 22878   00777E                     u23370:
 22879                           
 22880                           ; BSR set to: 1
 22881                           ;../../VLCBlib_PIC/can18_ecan.c: 928:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 22882   00777E  0E00               	movlw	0
 22883   007780  6FC3               	movwf	processEnumeration@i& (0+255),b
 22884   007782  D001               	goto	l22382
 22885   007784                     l22380:
 22886                           
 22887                           ; BSR set to: 1
 22888                           ;../../VLCBlib_PIC/can18_ecan.c: 930:                 }
 22889   007784  2BC3               	incf	processEnumeration@i& (0+255),f,b
 22890   007786                     l22382:
 22891                           
 22892                           ; BSR set to: 1
 22893   007786  0E34               	movlw	low _enumerationResults
 22894   007788  25C3               	addwf	processEnumeration@i& (0+255),w,b
 22895   00778A  6ED9               	movwf	fsr2l,c
 22896   00778C  6ADA               	clrf	fsr2h,c
 22897   00778E  0E02               	movlw	high _enumerationResults
 22898   007790  22DA               	addwfc	fsr2h,f,c
 22899   007792  28DE               	incf	postinc2,w,c
 22900   007794  A4D8               	btfss	status,2,c
 22901   007796  D003               	goto	u23390
 22902                           
 22903                           ; BSR set to: 1
 22904   007798  0E0F               	movlw	15
 22905   00779A  65C3               	cpfsgt	processEnumeration@i& (0+255),b
 22906   00779C  D7F3               	goto	l22380
 22907   00779E                     u23390:
 22908                           
 22909                           ; BSR set to: 1
 22910                           ;../../VLCBlib_PIC/can18_ecan.c: 931:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 22911   00779E  0E34               	movlw	low _enumerationResults
 22912   0077A0  25C3               	addwf	processEnumeration@i& (0+255),w,b
 22913   0077A2  6ED9               	movwf	fsr2l,c
 22914   0077A4  6ADA               	clrf	fsr2h,c
 22915   0077A6  0E02               	movlw	high _enumerationResults
 22916   0077A8  22DA               	addwfc	fsr2h,f,c
 22917   0077AA  50DF               	movf	indf2,w,c
 22918   0077AC  6FC1               	movwf	processEnumeration@enumResult& (0+255),b
 22919   0077AE  29C1               	incf	processEnumeration@enumResult& (0+255),w,b
 22920   0077B0  B4D8               	btfsc	status,2,c
 22921   0077B2  D017               	goto	l22404
 22922                           
 22923                           ; BSR set to: 1
 22924                           ;../../VLCBlib_PIC/can18_ecan.c: 932:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 22925   0077B4  51C3               	movf	processEnumeration@i& (0+255),w,b
 22926   0077B6  0D08               	mullw	8
 22927   0077B8  CFF3 F1C2          	movff	prodl,processEnumeration@newCanId
 22928   0077BC  D003               	goto	l22394
 22929   0077BE                     l22390:
 22930                           
 22931                           ; BSR set to: 1
 22932                           ;../../VLCBlib_PIC/can18_ecan.c: 933:                         enumResult >>= 1;
 22933   0077BE  90D8               	bcf	status,0,c
 22934   0077C0  33C1               	rrcf	processEnumeration@enumResult& (0+255),f,b
 22935                           
 22936                           ; BSR set to: 1
 22937                           ;../../VLCBlib_PIC/can18_ecan.c: 934:                     }
 22938   0077C2  2BC2               	incf	processEnumeration@newCanId& (0+255),f,b
 22939   0077C4                     l22394:
 22940                           
 22941                           ; BSR set to: 1
 22942   0077C4  B1C1               	btfsc	processEnumeration@enumResult& (0+255),0,b
 22943   0077C6  D7FB               	goto	l22390
 22944                           
 22945                           ; BSR set to: 1
 22946                           ;../../VLCBlib_PIC/can18_ecan.c: 935:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 22947   0077C8  51C2               	movf	processEnumeration@newCanId& (0+255),w,b
 22948   0077CA  B4D8               	btfsc	status,2,c
 22949   0077CC  D00A               	goto	l22404
 22950                           
 22951                           ; BSR set to: 1
 22952   0077CE  0E64               	movlw	100
 22953   0077D0  61C2               	cpfslt	processEnumeration@newCanId& (0+255),b
 22954   0077D2  D007               	goto	l22404
 22955                           
 22956                           ; BSR set to: 1
 22957                           ;../../VLCBlib_PIC/can18_ecan.c: 936:                         canId = newCanId;
 22958   0077D4  C1C2  F0C1         	movff	processEnumeration@newCanId,_canId
 22959                           
 22960                           ; BSR set to: 1
 22961                           ;../../VLCBlib_PIC/can18_ecan.c: 937:                         setNewCanId(canId);
 22962   0077D8  0100               	movlb	0	; () banked
 22963   0077DA  51C1               	movf	_canId& (0+255),w,b
 22964   0077DC  ECDC  F058         	call	_setNewCanId
 22965                           
 22966                           ;../../VLCBlib_PIC/can18_ecan.c: 938:                     } else {
 22967   0077E0  D004               	goto	l22412
 22968   0077E2                     l22404:
 22969                           
 22970                           ; BSR set to: 1
 22971                           ;../../VLCBlib_PIC/can18_ecan.c: 940:                         canDiagnostics[0x10].asUin
      +                          t++;
 22972   0077E2  4B87               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 22973   0077E4  2B88               	incf	(_canDiagnostics+33)& (0+255),f,b
 22974                           
 22975                           ; BSR set to: 1
 22976                           ;../../VLCBlib_PIC/can18_ecan.c: 941:                         updateModuleErrorStatus();
 22977   0077E6  ECED  F062         	call	_updateModuleErrorStatus	;wreg free
 22978   0077EA                     l22412:
 22979                           
 22980                           ;../../VLCBlib_PIC/can18_ecan.c: 953:                 enumerationState = NO_ENUMERATION;
 22981   0077EA  0E00               	movlw	0
 22982   0077EC  0100               	movlb	0	; () banked
 22983   0077EE  6FBF               	movwf	_enumerationState& (0+255),b
 22984   0077F0  0012               	return	
 22985   0077F2                     l22416:
 22986   0077F2  0100               	movlb	0	; () banked
 22987   0077F4  51BF               	movf	_enumerationState& (0+255),w,b
 22988   0077F6  0101               	movlb	1	; () banked
 22989   0077F8  6FBD               	movwf	??_processEnumeration& (0+255),b
 22990   0077FA  6BBE               	clrf	(??_processEnumeration+1)& (0+255),b
 22991                           
 22992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22993                           ; Switch size 1, requested type "simple"
 22994                           ; Number of cases is 1, Range of values is 0 to 0
 22995                           ; switch strategies available:
 22996                           ; Name         Instructions Cycles
 22997                           ; simple_byte            4     3 (average)
 22998                           ;	Chosen strategy is simple_byte
 22999   0077FC  51BE               	movf	(??_processEnumeration+1)& (0+255),w,b
 23000   0077FE  0A00               	xorlw	0	; case 0
 23001   007800  A4D8               	btfss	status,2,c
 23002   007802  0012               	return	
 23003                           
 23004                           ; BSR set to: 1
 23005                           ; Switch size 1, requested type "simple"
 23006                           ; Number of cases is 2, Range of values is 1 to 2
 23007                           ; switch strategies available:
 23008                           ; Name         Instructions Cycles
 23009                           ; simple_byte            7     4 (average)
 23010                           ;	Chosen strategy is simple_byte
 23011   007804  51BD               	movf	??_processEnumeration& (0+255),w,b
 23012   007806  0A01               	xorlw	1	; case 1
 23013   007808  B4D8               	btfsc	status,2,c
 23014   00780A  D758               	goto	l22354
 23015   00780C  0A03               	xorlw	3	; case 2
 23016   00780E  A4D8               	btfss	status,2,c
 23017   007810  0012               	return	
 23018   007812  D796               	goto	l22376
 23019   007814                     __end_of_processEnumeration:
 23020                           	callstack 0
 23021                           
 23022 ;; *************** function _setNewCanId *****************
 23023 ;; Defined at:
 23024 ;;		line 966 in file "../../VLCBlib_PIC/can18_ecan.c"
 23025 ;; Parameters:    Size  Location     Type
 23026 ;;  newCanId        1    wreg     unsigned char 
 23027 ;; Auto vars:     Size  Location     Type
 23028 ;;  newCanId        1    2[BANK1 ] unsigned char 
 23029 ;; Return value:  Size  Location     Type
 23030 ;;                  1    wreg      enum E13097
 23031 ;; Registers used:
 23032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23033 ;; Tracked objects:
 23034 ;;		On entry : 0/0
 23035 ;;		On exit  : 0/0
 23036 ;;		Unchanged: 0/0
 23037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23039 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23041 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23042 ;;Total ram usage:        1 bytes
 23043 ;; Hardware stack levels used: 1
 23044 ;; Hardware stack levels required when called: 18
 23045 ;; This function calls:
 23046 ;;		_writeNVM
 23047 ;; This function is called by:
 23048 ;;		_processEnumeration
 23049 ;; This function uses a non-reentrant model
 23050 ;;
 23051                           
 23052                           	psect	text82
 23053   00B1B8                     __ptext82:
 23054                           	callstack 0
 23055   00B1B8                     _setNewCanId:
 23056                           	callstack 9
 23057                           
 23058                           ;incstack = 0
 23059                           ;setNewCanId@newCanId stored from wreg
 23060   00B1B8  0101               	movlb	1	; () banked
 23061   00B1BA  6FBC               	movwf	setNewCanId@newCanId& (0+255),b
 23062                           
 23063                           ;../../VLCBlib_PIC/can18_ecan.c: 967:     if ((newCanId >= 1) && (newCanId <= 99)) {
 23064   00B1BC  0101               	movlb	1	; () banked
 23065   00B1BE  51BC               	movf	setNewCanId@newCanId& (0+255),w,b
 23066   00B1C0  B4D8               	btfsc	status,2,c
 23067   00B1C2  0012               	return	
 23068                           
 23069                           ; BSR set to: 1
 23070   00B1C4  0E64               	movlw	100
 23071   00B1C6  61BC               	cpfslt	setNewCanId@newCanId& (0+255),b
 23072   00B1C8  0012               	return	
 23073                           
 23074                           ; BSR set to: 1
 23075                           ;../../VLCBlib_PIC/can18_ecan.c: 968:         canId = newCanId;
 23076   00B1CA  C1BC  F0C1         	movff	setNewCanId@newCanId,_canId
 23077                           
 23078                           ; BSR set to: 1
 23079                           ;../../VLCBlib_PIC/can18_ecan.c: 971:         TXB1SIDH &= 0b11110000;
 23080   00B1CE  0EF0               	movlw	240
 23081   00B1D0  010F               	movlb	15	; () banked
 23082   00B1D2  1711               	andwf	17,f,b	;volatile
 23083                           
 23084                           ;../../VLCBlib_PIC/can18_ecan.c: 972:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 23085   00B1D4  0101               	movlb	1	; () banked
 23086   00B1D6  39BC               	swapf	setNewCanId@newCanId& (0+255),w,b
 23087   00B1D8  46E8               	rlncf	wreg,f,c
 23088   00B1DA  0B1F               	andlw	31
 23089   00B1DC  0B0F               	andlw	15
 23090   00B1DE  010F               	movlb	15	; () banked
 23091   00B1E0  1311               	iorwf	17,f,b	;volatile
 23092                           
 23093                           ; BSR set to: 15
 23094                           ;../../VLCBlib_PIC/can18_ecan.c: 973:         TXB1SIDL = TXB0SIDL;
 23095   00B1E2  CF22 FF12          	movff	3874,3858	;volatile
 23096                           
 23097                           ;../../VLCBlib_PIC/can18_ecan.c: 975:         TXB2SIDH &= 0b11110000;
 23098   00B1E6  0EF0               	movlw	240
 23099   00B1E8  1701               	andwf	1,f,b	;volatile
 23100                           
 23101                           ;../../VLCBlib_PIC/can18_ecan.c: 976:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 23102   00B1EA  0101               	movlb	1	; () banked
 23103   00B1EC  39BC               	swapf	setNewCanId@newCanId& (0+255),w,b
 23104   00B1EE  46E8               	rlncf	wreg,f,c
 23105   00B1F0  0B1F               	andlw	31
 23106   00B1F2  0B0F               	andlw	15
 23107   00B1F4  010F               	movlb	15	; () banked
 23108   00B1F6  1301               	iorwf	1,f,b	;volatile
 23109                           
 23110                           ; BSR set to: 15
 23111                           ;../../VLCBlib_PIC/can18_ecan.c: 977:         TXB2SIDL = TXB0SIDL;
 23112   00B1F8  CF22 FF02          	movff	3874,3842	;volatile
 23113                           
 23114                           ; BSR set to: 15
 23115                           ;../../VLCBlib_PIC/can18_ecan.c: 979:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 23116   00B1FC  0EFE               	movlw	254
 23117   00B1FE  0100               	movlb	0	; () banked
 23118   00B200  6FA4               	movwf	writeNVM@index& (0+255),b
 23119   00B202  0E03               	movlw	3
 23120   00B204  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 23121   00B206  0E00               	movlw	0
 23122   00B208  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 23123   00B20A  C1BC  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 23124   00B20E  0E00               	movlw	0
 23125   00B210  EC60  F05C         	call	_writeNVM
 23126                           
 23127                           ;../../VLCBlib_PIC/can18_ecan.c: 981:         canDiagnostics[0x0F].asUint++;
 23128   00B214  0101               	movlb	1	; () banked
 23129   00B216  4B85               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 23130   00B218  2B86               	incf	(_canDiagnostics+31)& (0+255),f,b
 23131                           
 23132                           ; BSR set to: 1
 23133   00B21A  0012               	return		;funcret
 23134   00B21C                     __end_of_setNewCanId:
 23135                           	callstack 0
 23136                           
 23137 ;; *************** function _pop *****************
 23138 ;; Defined at:
 23139 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 23140 ;; Parameters:    Size  Location     Type
 23141 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 23142 ;;		 -> txQueue(5), rxQueue(5), 
 23143 ;; Auto vars:     Size  Location     Type
 23144 ;;  ret             2   52[BANK0 ] PTR struct Message
 23145 ;;		 -> txBuffers(72), rxBuffers(288), 
 23146 ;; Return value:  Size  Location     Type
 23147 ;;                  2   45[BANK0 ] PTR struct Message
 23148 ;; Registers used:
 23149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23150 ;; Tracked objects:
 23151 ;;		On entry : 0/0
 23152 ;;		On exit  : 0/0
 23153 ;;		Unchanged: 0/0
 23154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23157 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23158 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23159 ;;Total ram usage:        9 bytes
 23160 ;; Hardware stack levels used: 1
 23161 ;; Hardware stack levels required when called: 12
 23162 ;; This function calls:
 23163 ;;		Nothing
 23164 ;; This function is called by:
 23165 ;;		_canReceiveMessage
 23166 ;; This function uses a non-reentrant model
 23167 ;;
 23168                           
 23169                           	psect	text83
 23170   009C72                     __ptext83:
 23171                           	callstack 0
 23172   009C72                     _pop:
 23173                           	callstack 16
 23174                           
 23175                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 23176                           
 23177                           ; BSR set to: 1
 23178                           ;incstack = 0
 23179   009C72  0100               	movlb	0	; () banked
 23180   009C74  518D               	movf	pop@q& (0+255),w,b
 23181   009C76  6ED9               	movwf	fsr2l,c
 23182   009C78  6ADA               	clrf	fsr2h,c
 23183   009C7A  0E02               	movlw	2
 23184   009C7C  26D9               	addwf	fsr2l,f,c
 23185   009C7E  518D               	movf	pop@q& (0+255),w,b
 23186   009C80  6EE1               	movwf	fsr1l,c
 23187   009C82  6AE2               	clrf	fsr1h,c
 23188   009C84  0E03               	movlw	3
 23189   009C86  26E1               	addwf	fsr1l,f,c
 23190   009C88  50DE               	movf	postinc2,w,c
 23191   009C8A  18E6               	xorwf	postinc1,w,c
 23192   009C8C  A4D8               	btfss	status,2,c
 23193   009C8E  D005               	goto	l22244
 23194                           
 23195                           ; BSR set to: 0
 23196                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 23197   009C90  0E00               	movlw	0
 23198   009C92  6F8D               	movwf	?_pop& (0+255),b
 23199   009C94  0E00               	movlw	0
 23200   009C96  6F8E               	movwf	(?_pop+1)& (0+255),b
 23201   009C98  0012               	return	
 23202   009C9A                     l22244:
 23203                           
 23204                           ; BSR set to: 0
 23205                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 23206   009C9A  518D               	movf	pop@q& (0+255),w,b
 23207   009C9C  6ED9               	movwf	fsr2l,c
 23208   009C9E  6ADA               	clrf	fsr2h,c
 23209   009CA0  0E02               	movlw	2
 23210   009CA2  26D9               	addwf	fsr2l,f,c
 23211   009CA4  50DF               	movf	indf2,w,c
 23212   009CA6  6F8F               	movwf	??_pop& (0+255),b
 23213   009CA8  518F               	movf	??_pop& (0+255),w,b
 23214   009CAA  0D09               	mullw	9
 23215   009CAC  CFF3 F090          	movff	prodl,??_pop+1
 23216   009CB0  CFF4 F091          	movff	prodh,??_pop+2
 23217   009CB4  518D               	movf	pop@q& (0+255),w,b
 23218   009CB6  6ED9               	movwf	fsr2l,c
 23219   009CB8  6ADA               	clrf	fsr2h,c
 23220   009CBA  CFDE F092          	movff	postinc2,??_pop+3
 23221   009CBE  CFDD F093          	movff	postdec2,??_pop+4
 23222   009CC2  5190               	movf	(??_pop+1)& (0+255),w,b
 23223   009CC4  2592               	addwf	(??_pop+3)& (0+255),w,b
 23224   009CC6  6F94               	movwf	pop@ret& (0+255),b
 23225   009CC8  5191               	movf	(??_pop+2)& (0+255),w,b
 23226   009CCA  2193               	addwfc	(??_pop+4)& (0+255),w,b
 23227   009CCC  6F95               	movwf	(pop@ret+1)& (0+255),b
 23228                           
 23229                           ; BSR set to: 0
 23230   009CCE  518D               	movf	pop@q& (0+255),w,b
 23231   009CD0  6ED9               	movwf	fsr2l,c
 23232   009CD2  6ADA               	clrf	fsr2h,c
 23233   009CD4  0E02               	movlw	2
 23234   009CD6  26D9               	addwf	fsr2l,f,c
 23235   009CD8  2ADF               	incf	indf2,f,c
 23236                           
 23237                           ; BSR set to: 0
 23238                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 23239   009CDA  518D               	movf	pop@q& (0+255),w,b
 23240   009CDC  6ED9               	movwf	fsr2l,c
 23241   009CDE  6ADA               	clrf	fsr2h,c
 23242   009CE0  0E04               	movlw	4
 23243   009CE2  26D9               	addwf	fsr2l,f,c
 23244   009CE4  518D               	movf	pop@q& (0+255),w,b
 23245   009CE6  6EE1               	movwf	fsr1l,c
 23246   009CE8  6AE2               	clrf	fsr1h,c
 23247   009CEA  0E02               	movlw	2
 23248   009CEC  26E1               	addwf	fsr1l,f,c
 23249   009CEE  50DE               	movf	postinc2,w,c
 23250   009CF0  5CE6               	subwf	postinc1,w,c
 23251   009CF2  A0D8               	btfss	status,0,c
 23252   009CF4  D006               	goto	l22252
 23253                           
 23254                           ; BSR set to: 0
 23255   009CF6  518D               	movf	pop@q& (0+255),w,b
 23256   009CF8  6ED9               	movwf	fsr2l,c
 23257   009CFA  6ADA               	clrf	fsr2h,c
 23258   009CFC  0E02               	movlw	2
 23259   009CFE  26D9               	addwf	fsr2l,f,c
 23260   009D00  6ADF               	clrf	indf2,c
 23261   009D02                     l22252:
 23262                           
 23263                           ; BSR set to: 0
 23264                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 23265   009D02  C094  F08D         	movff	pop@ret,?_pop
 23266   009D06  C095  F08E         	movff	pop@ret+1,?_pop+1
 23267                           
 23268                           ; BSR set to: 0
 23269   009D0A  0012               	return		;funcret
 23270   009D0C                     __end_of_pop:
 23271                           	callstack 0
 23272                           
 23273 ;; *************** function _memcpy *****************
 23274 ;; Defined at:
 23275 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 23276 ;; Parameters:    Size  Location     Type
 23277 ;;  d1              2   45[BANK0 ] PTR void 
 23278 ;;		 -> poll@m(9), 
 23279 ;;  s1              2   47[BANK0 ] PTR const void 
 23280 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23281 ;;  n               2   49[BANK0 ] unsigned int 
 23282 ;; Auto vars:     Size  Location     Type
 23283 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 23284 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23285 ;;  d               2   52[BANK0 ] PTR unsigned char 
 23286 ;;		 -> poll@m(9), 
 23287 ;;  tmp             1   51[BANK0 ] unsigned char 
 23288 ;; Return value:  Size  Location     Type
 23289 ;;                  2   45[BANK0 ] PTR void 
 23290 ;; Registers used:
 23291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23292 ;; Tracked objects:
 23293 ;;		On entry : 0/0
 23294 ;;		On exit  : 0/0
 23295 ;;		Unchanged: 0/0
 23296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23297 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23298 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23300 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23301 ;;Total ram usage:       11 bytes
 23302 ;; Hardware stack levels used: 1
 23303 ;; Hardware stack levels required when called: 12
 23304 ;; This function calls:
 23305 ;;		Nothing
 23306 ;; This function is called by:
 23307 ;;		_canReceiveMessage
 23308 ;; This function uses a non-reentrant model
 23309 ;;
 23310                           
 23311                           	psect	text84
 23312   00BBA2                     __ptext84:
 23313                           	callstack 0
 23314   00BBA2                     _memcpy:
 23315                           	callstack 16
 23316                           
 23317                           ; BSR set to: 0
 23318                           ;incstack = 0
 23319   00BBA2  C08F  F096         	movff	memcpy@s1,memcpy@s
 23320   00BBA6  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 23321   00BBAA  C08D  F094         	movff	memcpy@d1,memcpy@d
 23322   00BBAE  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 23323   00BBB2  D010               	goto	l22432
 23324   00BBB4                     l22424:
 23325                           
 23326                           ; BSR set to: 0
 23327   00BBB4  C096  FFD9         	movff	memcpy@s,fsr2l
 23328   00BBB8  C097  FFDA         	movff	memcpy@s+1,fsr2h
 23329   00BBBC  50DF               	movf	indf2,w,c
 23330   00BBBE  6F93               	movwf	memcpy@tmp& (0+255),b
 23331                           
 23332                           ; BSR set to: 0
 23333   00BBC0  4B96               	infsnz	memcpy@s& (0+255),f,b
 23334   00BBC2  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 23335                           
 23336                           ; BSR set to: 0
 23337   00BBC4  C094  FFD9         	movff	memcpy@d,fsr2l
 23338   00BBC8  C095  FFDA         	movff	memcpy@d+1,fsr2h
 23339   00BBCC  C093  FFDF         	movff	memcpy@tmp,indf2
 23340                           
 23341                           ; BSR set to: 0
 23342   00BBD0  4B94               	infsnz	memcpy@d& (0+255),f,b
 23343   00BBD2  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 23344   00BBD4                     l22432:
 23345   00BBD4  0100               	movlb	0	; () banked
 23346   00BBD6  0791               	decf	memcpy@n& (0+255),f,b
 23347   00BBD8  A0D8               	btfss	status,0,c
 23348   00BBDA  0792               	decf	(memcpy@n+1)& (0+255),f,b
 23349   00BBDC  2991               	incf	memcpy@n& (0+255),w,b
 23350   00BBDE  E1EA               	bnz	l22424
 23351   00BBE0  2992               	incf	(memcpy@n+1)& (0+255),w,b
 23352   00BBE2  B4D8               	btfsc	status,2,c
 23353   00BBE4  0012               	return	
 23354   00BBE6  D7E6               	goto	l22424
 23355   00BBE8                     __end_of_memcpy:
 23356                           	callstack 0
 23357                           
 23358 ;; *************** function _handleSelfEnumeration *****************
 23359 ;; Defined at:
 23360 ;;		line 816 in file "../../VLCBlib_PIC/can18_ecan.c"
 23361 ;; Parameters:    Size  Location     Type
 23362 ;;  p               2   55[BANK0 ] PTR unsigned char 
 23363 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23364 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23365 ;;		 -> NULL(0), 
 23366 ;; Auto vars:     Size  Location     Type
 23367 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 23368 ;; Return value:  Size  Location     Type
 23369 ;;                  1    wreg      enum E13077
 23370 ;; Registers used:
 23371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23372 ;; Tracked objects:
 23373 ;;		On entry : 0/0
 23374 ;;		On exit  : 0/0
 23375 ;;		Unchanged: 0/0
 23376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23379 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23380 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23381 ;;Total ram usage:        7 bytes
 23382 ;; Hardware stack levels used: 1
 23383 ;; Hardware stack levels required when called: 13
 23384 ;; This function calls:
 23385 ;;		_tickGet
 23386 ;; This function is called by:
 23387 ;;		_canReceiveMessage
 23388 ;; This function uses a non-reentrant model
 23389 ;;
 23390                           
 23391                           	psect	text85
 23392   00806A                     __ptext85:
 23393                           	callstack 0
 23394   00806A                     _handleSelfEnumeration:
 23395                           	callstack 15
 23396                           
 23397                           ;../../VLCBlib_PIC/can18_ecan.c: 817:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 821:     if (p[5] & 0x40 ) {
 23398                           
 23399                           ; BSR set to: 0
 23400                           ;incstack = 0
 23401   00806A  0100               	movlb	0	; () banked
 23402   00806C  EE20 F005          	lfsr	2,5
 23403   008070  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23404   008072  26D9               	addwf	fsr2l,f,c
 23405   008074  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23406   008076  22DA               	addwfc	fsr2h,f,c
 23407   008078  ACDF               	btfss	indf2,6,c
 23408   00807A  D00E               	goto	l22444
 23409                           
 23410                           ; BSR set to: 0
 23411                           ;../../VLCBlib_PIC/can18_ecan.c: 823:         TXB2CONbits.TXREQ = 1;
 23412   00807C  010F               	movlb	15	; () banked
 23413   00807E  8700               	bsf	0,3,b	;volatile
 23414                           
 23415                           ; BSR set to: 15
 23416                           ;../../VLCBlib_PIC/can18_ecan.c: 824:         enumerationStartTime.val = tickGet();
 23417   008080  ECE4  F05A         	call	_tickGet	;wreg free
 23418   008084  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 23419   008088  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 23420   00808C  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 23421   008090  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 23422                           
 23423                           ;../../VLCBlib_PIC/can18_ecan.c: 825:         return NOT_RECEIVED;
 23424   008094  0E00               	movlw	0
 23425   008096  0012               	return	
 23426   008098                     l22444:
 23427                           
 23428                           ; BSR set to: 0
 23429                           ;../../VLCBlib_PIC/can18_ecan.c: 827:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 23430   008098  EE20 F002          	lfsr	2,2
 23431   00809C  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23432   00809E  26D9               	addwf	fsr2l,f,c
 23433   0080A0  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23434   0080A2  22DA               	addwfc	fsr2h,f,c
 23435   0080A4  50DF               	movf	indf2,w,c
 23436   0080A6  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23437   0080A8  0E05               	movlw	5
 23438   0080AA  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23439   0080AC                     u23465:
 23440   0080AC  90D8               	bcf	status,0,c
 23441   0080AE  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 23442   0080B0  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 23443   0080B2  D7FC               	goto	u23465
 23444   0080B4  EE20 F001          	lfsr	2,1
 23445   0080B8  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23446   0080BA  26D9               	addwf	fsr2l,f,c
 23447   0080BC  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23448   0080BE  22DA               	addwfc	fsr2h,f,c
 23449   0080C0  50DF               	movf	indf2,w,c
 23450   0080C2  0D08               	mullw	8
 23451   0080C4  50F3               	movf	243,w,c
 23452   0080C6  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 23453   0080C8  0B7F               	andlw	127
 23454   0080CA  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 23455                           
 23456                           ; BSR set to: 0
 23457                           ;../../VLCBlib_PIC/can18_ecan.c: 829:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 23458   0080CC  0E02               	movlw	2
 23459   0080CE  19BF               	xorwf	_enumerationState& (0+255),w,b
 23460   0080D0  B4D8               	btfsc	status,2,c
 23461   0080D2  D00C               	goto	u23480
 23462                           
 23463                           ; BSR set to: 0
 23464   0080D4  EE20 F005          	lfsr	2,5
 23465   0080D8  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23466   0080DA  26D9               	addwf	fsr2l,f,c
 23467   0080DC  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23468   0080DE  22DA               	addwfc	fsr2h,f,c
 23469   0080E0  50DF               	movf	indf2,w,c
 23470   0080E2  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23471   0080E4  0E0F               	movlw	15
 23472   0080E6  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23473   0080E8  A4D8               	btfss	status,2,c
 23474   0080EA  D01B               	goto	l22452
 23475   0080EC                     u23480:
 23476                           
 23477                           ; BSR set to: 0
 23478                           ;../../VLCBlib_PIC/can18_ecan.c: 830:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 23479   0080EC  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 23480   0080F0  0E07               	movlw	7
 23481   0080F2  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23482   0080F4  0E01               	movlw	1
 23483   0080F6  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23484   0080F8  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 23485   0080FA  D002               	goto	u23494
 23486   0080FC                     u23495:
 23487   0080FC  90D8               	bcf	status,0,c
 23488   0080FE  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 23489   008100                     u23494:
 23490   008100  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 23491   008102  D7FC               	goto	u23495
 23492   008104  0100               	movlb	0	; () banked
 23493   008106  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23494   008108  46E8               	rlncf	wreg,f,c
 23495   00810A  0B1F               	andlw	31
 23496   00810C  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 23497   00810E  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 23498   008110  0E34               	movlw	low _enumerationResults
 23499   008112  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 23500   008114  6ED9               	movwf	fsr2l,c
 23501   008116  0E02               	movlw	high _enumerationResults
 23502   008118  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 23503   00811A  6EDA               	movwf	fsr2h,c
 23504   00811C  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 23505   00811E  12DF               	iorwf	indf2,f,c
 23506                           
 23507                           ;../../VLCBlib_PIC/can18_ecan.c: 831:     } else {
 23508   008120  D016               	goto	l22462
 23509   008122                     l22452:
 23510                           
 23511                           ; BSR set to: 0
 23512                           ;../../VLCBlib_PIC/can18_ecan.c: 832:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 23513   008122  51BF               	movf	_enumerationState& (0+255),w,b
 23514   008124  A4D8               	btfss	status,2,c
 23515   008126  D013               	goto	l22462
 23516                           
 23517                           ; BSR set to: 0
 23518   008128  51C1               	movf	_canId& (0+255),w,b
 23519   00812A  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23520   00812C  A4D8               	btfss	status,2,c
 23521   00812E  D00F               	goto	l22462
 23522                           
 23523                           ; BSR set to: 0
 23524                           ;../../VLCBlib_PIC/can18_ecan.c: 835:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 23525   008130  0E01               	movlw	1
 23526   008132  6FBF               	movwf	_enumerationState& (0+255),b
 23527                           
 23528                           ; BSR set to: 0
 23529                           ;../../VLCBlib_PIC/can18_ecan.c: 836:             canDiagnostics[0x0E].asUint++;
 23530   008134  0101               	movlb	1	; () banked
 23531   008136  4B83               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 23532   008138  2B84               	incf	(_canDiagnostics+29)& (0+255),f,b
 23533                           
 23534                           ; BSR set to: 1
 23535                           ;../../VLCBlib_PIC/can18_ecan.c: 837:             enumerationStartTime.val = tickGet();
 23536   00813A  ECE4  F05A         	call	_tickGet	;wreg free
 23537   00813E  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 23538   008142  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 23539   008146  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 23540   00814A  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 23541   00814E                     l22462:
 23542                           
 23543                           ;../../VLCBlib_PIC/can18_ecan.c: 841:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 23544   00814E  0100               	movlb	0	; () banked
 23545   008150  EE20 F005          	lfsr	2,5
 23546   008154  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23547   008156  26D9               	addwf	fsr2l,f,c
 23548   008158  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23549   00815A  22DA               	addwfc	fsr2h,f,c
 23550   00815C  50DF               	movf	indf2,w,c
 23551   00815E  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23552   008160  0E0F               	movlw	15
 23553   008162  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23554   008164  B4D8               	btfsc	status,2,c
 23555   008166  D002               	goto	u23520
 23556   008168  0E01               	movlw	1
 23557   00816A  0012               	return	
 23558   00816C                     u23520:
 23559   00816C  0E00               	movlw	0
 23560   00816E  0012               	return		;funcret
 23561   008170                     __end_of_handleSelfEnumeration:
 23562                           	callstack 0
 23563                           
 23564 ;; *************** function _getNumRxBuffersInUse *****************
 23565 ;; Defined at:
 23566 ;;		line 470 in file "../../VLCBlib_PIC/can18_ecan.c"
 23567 ;; Parameters:    Size  Location     Type
 23568 ;;		None
 23569 ;; Auto vars:     Size  Location     Type
 23570 ;;  ptr             2   50[BANK0 ] PTR unsigned char 
 23571 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23572 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23573 ;;		 -> NULL(0), 
 23574 ;;  i               1   53[BANK0 ] unsigned char 
 23575 ;;  no              1   52[BANK0 ] unsigned char 
 23576 ;; Return value:  Size  Location     Type
 23577 ;;                  1    wreg      unsigned char 
 23578 ;; Registers used:
 23579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23580 ;; Tracked objects:
 23581 ;;		On entry : 0/0
 23582 ;;		On exit  : 0/0
 23583 ;;		Unchanged: 0/0
 23584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23586 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23588 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23589 ;;Total ram usage:        4 bytes
 23590 ;; Hardware stack levels used: 1
 23591 ;; Hardware stack levels required when called: 13
 23592 ;; This function calls:
 23593 ;;		_getBufferPointer
 23594 ;;		_quantity
 23595 ;; This function is called by:
 23596 ;;		_canGetDiagnostic
 23597 ;;		_canReceiveMessage
 23598 ;; This function uses a non-reentrant model
 23599 ;;
 23600                           
 23601                           	psect	text86
 23602   00BD1E                     __ptext86:
 23603                           	callstack 0
 23604   00BD1E                     _getNumRxBuffersInUse:
 23605                           	callstack 13
 23606                           
 23607                           ;../../VLCBlib_PIC/can18_ecan.c: 471:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 47
      +                          2:     uint8_t i;;../../VLCBlib_PIC/can18_ecan.c: 473:     uint8_t * ptr;;../../VLCBlib_
      +                          PIC/can18_ecan.c: 475:     no = quantity(&rxQueue);
 23608                           
 23609                           ;incstack = 0
 23610   00BD1E  0E4F               	movlw	low _rxQueue
 23611   00BD20  0100               	movlb	0	; () banked
 23612   00BD22  6F8D               	movwf	quantity@q& (0+255),b
 23613   00BD24  EC02  F05F         	call	_quantity	;wreg free
 23614   00BD28  0100               	movlb	0	; () banked
 23615   00BD2A  6F94               	movwf	getNumRxBuffersInUse@no& (0+255),b
 23616                           
 23617                           ; BSR set to: 0
 23618                           ;../../VLCBlib_PIC/can18_ecan.c: 476:     for (i=0; i<8; i++) {
 23619   00BD2C  0E00               	movlw	0
 23620   00BD2E  6F95               	movwf	getNumRxBuffersInUse@i& (0+255),b
 23621   00BD30                     l20230:
 23622                           
 23623                           ; BSR set to: 0
 23624                           ;../../VLCBlib_PIC/can18_ecan.c: 477:         ptr = getBufferPointer(i);
 23625   00BD30  5195               	movf	getNumRxBuffersInUse@i& (0+255),w,b
 23626   00BD32  ECB6  F04F         	call	_getBufferPointer
 23627   00BD36  C08D  F092         	movff	?_getBufferPointer,getNumRxBuffersInUse@ptr
 23628   00BD3A  C08E  F093         	movff	?_getBufferPointer+1,getNumRxBuffersInUse@ptr+1
 23629                           
 23630                           ;../../VLCBlib_PIC/can18_ecan.c: 478:         if (ptr[0] & 0x80) {
 23631   00BD3E  C092  FFD9         	movff	getNumRxBuffersInUse@ptr,fsr2l
 23632   00BD42  C093  FFDA         	movff	getNumRxBuffersInUse@ptr+1,fsr2h
 23633   00BD46  0100               	movlb	0	; () banked
 23634   00BD48  BEDF               	btfsc	indf2,7,c
 23635                           
 23636                           ; BSR set to: 0
 23637                           ;../../VLCBlib_PIC/can18_ecan.c: 479:             no++;
 23638   00BD4A  2B94               	incf	getNumRxBuffersInUse@no& (0+255),f,b
 23639                           
 23640                           ; BSR set to: 0
 23641                           ;../../VLCBlib_PIC/can18_ecan.c: 481:     }
 23642                           
 23643                           ;../../VLCBlib_PIC/can18_ecan.c: 480:         }
 23644   00BD4C  2B95               	incf	getNumRxBuffersInUse@i& (0+255),f,b
 23645                           
 23646                           ; BSR set to: 0
 23647   00BD4E  0E07               	movlw	7
 23648   00BD50  6595               	cpfsgt	getNumRxBuffersInUse@i& (0+255),b
 23649   00BD52  D7EE               	goto	l20230
 23650                           
 23651                           ; BSR set to: 0
 23652                           ;../../VLCBlib_PIC/can18_ecan.c: 482:     return no;
 23653   00BD54  5194               	movf	getNumRxBuffersInUse@no& (0+255),w,b
 23654                           
 23655                           ; BSR set to: 0
 23656   00BD56  0012               	return		;funcret
 23657   00BD58                     __end_of_getNumRxBuffersInUse:
 23658                           	callstack 0
 23659                           
 23660 ;; *************** function _getBufferPointer *****************
 23661 ;; Defined at:
 23662 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 23663 ;; Parameters:    Size  Location     Type
 23664 ;;  b               1    wreg     unsigned char 
 23665 ;; Auto vars:     Size  Location     Type
 23666 ;;  b               1   47[BANK0 ] unsigned char 
 23667 ;; Return value:  Size  Location     Type
 23668 ;;                  2   45[BANK0 ] PTR unsigned char 
 23669 ;; Registers used:
 23670 ;;		wreg, status,2, status,0
 23671 ;; Tracked objects:
 23672 ;;		On entry : 0/0
 23673 ;;		On exit  : 0/0
 23674 ;;		Unchanged: 0/0
 23675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23679 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23680 ;;Total ram usage:        3 bytes
 23681 ;; Hardware stack levels used: 1
 23682 ;; Hardware stack levels required when called: 12
 23683 ;; This function calls:
 23684 ;;		Nothing
 23685 ;; This function is called by:
 23686 ;;		_getNumRxBuffersInUse
 23687 ;;		_canReceiveMessage
 23688 ;; This function uses a non-reentrant model
 23689 ;;
 23690                           
 23691                           	psect	text87
 23692   009F6C                     __ptext87:
 23693                           	callstack 0
 23694   009F6C                     _getBufferPointer:
 23695                           	callstack 13
 23696                           
 23697                           ; BSR set to: 0
 23698                           ;incstack = 0
 23699                           ;getBufferPointer@b stored from wreg
 23700   009F6C  0100               	movlb	0	; () banked
 23701   009F6E  6F8F               	movwf	getBufferPointer@b& (0+255),b
 23702                           
 23703                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 23704   009F70  D02D               	goto	l19882
 23705   009F72                     l19844:
 23706                           
 23707                           ; BSR set to: 0
 23708                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 23709   009F72  0E60               	movlw	96
 23710   009F74  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23711   009F76  0E0F               	movlw	15
 23712   009F78  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23713   009F7A  0012               	return	
 23714   009F7C                     l19848:
 23715                           
 23716                           ; BSR set to: 0
 23717                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 23718   009F7C  0E30               	movlw	48
 23719   009F7E  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23720   009F80  0E0F               	movlw	15
 23721   009F82  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23722   009F84  0012               	return	
 23723   009F86                     l19852:
 23724                           
 23725                           ; BSR set to: 0
 23726                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 23727   009F86  0E80               	movlw	128
 23728   009F88  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23729   009F8A  0E0E               	movlw	14
 23730   009F8C  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23731   009F8E  0012               	return	
 23732   009F90                     l19856:
 23733                           
 23734                           ; BSR set to: 0
 23735                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 23736   009F90  0E90               	movlw	144
 23737   009F92  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23738   009F94  0E0E               	movlw	14
 23739   009F96  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23740   009F98  0012               	return	
 23741   009F9A                     l19860:
 23742                           
 23743                           ; BSR set to: 0
 23744                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 23745   009F9A  0EA0               	movlw	160
 23746   009F9C  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23747   009F9E  0E0E               	movlw	14
 23748   009FA0  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23749   009FA2  0012               	return	
 23750   009FA4                     l19864:
 23751                           
 23752                           ; BSR set to: 0
 23753                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 23754   009FA4  0EB0               	movlw	176
 23755   009FA6  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23756   009FA8  0E0E               	movlw	14
 23757   009FAA  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23758   009FAC  0012               	return	
 23759   009FAE                     l19868:
 23760                           
 23761                           ; BSR set to: 0
 23762                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 23763   009FAE  0EC0               	movlw	192
 23764   009FB0  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23765   009FB2  0E0E               	movlw	14
 23766   009FB4  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23767   009FB6  0012               	return	
 23768   009FB8                     l19872:
 23769                           
 23770                           ; BSR set to: 0
 23771                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 23772   009FB8  0ED0               	movlw	208
 23773   009FBA  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23774   009FBC  0E0E               	movlw	14
 23775   009FBE  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23776   009FC0  0012               	return	
 23777   009FC2                     l19876:
 23778                           
 23779                           ; BSR set to: 0
 23780                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 23781   009FC2  0E00               	movlw	0
 23782   009FC4  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23783   009FC6  0E00               	movlw	0
 23784   009FC8  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23785   009FCA  0012               	return	
 23786   009FCC                     l19882:
 23787   009FCC  0100               	movlb	0	; () banked
 23788   009FCE  518F               	movf	getBufferPointer@b& (0+255),w,b
 23789                           
 23790                           ; Switch size 1, requested type "simple"
 23791                           ; Number of cases is 8, Range of values is 0 to 7
 23792                           ; switch strategies available:
 23793                           ; Name         Instructions Cycles
 23794                           ; simple_byte           25    13 (average)
 23795                           ;	Chosen strategy is simple_byte
 23796   009FD0  0A00               	xorlw	0	; case 0
 23797   009FD2  B4D8               	btfsc	status,2,c
 23798   009FD4  D7CE               	goto	l19844
 23799   009FD6  0A01               	xorlw	1	; case 1
 23800   009FD8  B4D8               	btfsc	status,2,c
 23801   009FDA  D7D0               	goto	l19848
 23802   009FDC  0A03               	xorlw	3	; case 2
 23803   009FDE  B4D8               	btfsc	status,2,c
 23804   009FE0  D7D2               	goto	l19852
 23805   009FE2  0A01               	xorlw	1	; case 3
 23806   009FE4  B4D8               	btfsc	status,2,c
 23807   009FE6  D7D4               	goto	l19856
 23808   009FE8  0A07               	xorlw	7	; case 4
 23809   009FEA  B4D8               	btfsc	status,2,c
 23810   009FEC  D7D6               	goto	l19860
 23811   009FEE  0A01               	xorlw	1	; case 5
 23812   009FF0  B4D8               	btfsc	status,2,c
 23813   009FF2  D7D8               	goto	l19864
 23814   009FF4  0A03               	xorlw	3	; case 6
 23815   009FF6  B4D8               	btfsc	status,2,c
 23816   009FF8  D7DA               	goto	l19868
 23817   009FFA  0A01               	xorlw	1	; case 7
 23818   009FFC  B4D8               	btfsc	status,2,c
 23819   009FFE  D7DC               	goto	l19872
 23820   00A000  D7E0               	goto	l19876
 23821   00A002                     __end_of_getBufferPointer:
 23822                           	callstack 0
 23823                           
 23824 ;; *************** function _sendMessage7 *****************
 23825 ;; Defined at:
 23826 ;;		line 1210 in file "../../VLCBlib_PIC/vlcb.c"
 23827 ;; Parameters:    Size  Location     Type
 23828 ;;  opc             1    wreg     enum E12392
 23829 ;;  data1           1    8[BANK1 ] unsigned char 
 23830 ;;  data2           1    9[BANK1 ] unsigned char 
 23831 ;;  data3           1   10[BANK1 ] unsigned char 
 23832 ;;  data4           1   11[BANK1 ] unsigned char 
 23833 ;;  data5           1   12[BANK1 ] unsigned char 
 23834 ;;  data6           1   13[BANK1 ] unsigned char 
 23835 ;;  data7           1   14[BANK1 ] unsigned char 
 23836 ;; Auto vars:     Size  Location     Type
 23837 ;;  opc             1   70[BANK0 ] enum E12392
 23838 ;; Return value:  Size  Location     Type
 23839 ;;                  1    wreg      void 
 23840 ;; Registers used:
 23841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23842 ;; Tracked objects:
 23843 ;;		On entry : 0/0
 23844 ;;		On exit  : 0/0
 23845 ;;		Unchanged: 0/0
 23846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23847 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23850 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23851 ;;Total ram usage:        8 bytes
 23852 ;; Hardware stack levels used: 1
 23853 ;; Hardware stack levels required when called: 16
 23854 ;; This function calls:
 23855 ;;		_sendMessage
 23856 ;; This function is called by:
 23857 ;;		_ackEventProcessMessage
 23858 ;;		_mnsProcessMessage
 23859 ;;		_nerdCallback
 23860 ;; This function uses a non-reentrant model
 23861 ;;
 23862                           
 23863                           	psect	text88
 23864   00BF92                     __ptext88:
 23865                           	callstack 0
 23866   00BF92                     _sendMessage7:
 23867                           	callstack 11
 23868                           
 23869                           ; BSR set to: 0
 23870                           ;incstack = 0
 23871                           ;sendMessage7@opc stored from wreg
 23872   00BF92  0100               	movlb	0	; () banked
 23873   00BF94  6FA6               	movwf	sendMessage7@opc& (0+255),b
 23874                           
 23875                           ;../../VLCBlib_PIC/vlcb.c: 1211:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 23876   00BF96  0E08               	movlw	8
 23877   00BF98  0101               	movlb	1	; () banked
 23878   00BF9A  6FBA               	movwf	sendMessage@len& (0+255),b
 23879   00BF9C  C1C2  F1BB         	movff	sendMessage7@data1,sendMessage@data1
 23880   00BFA0  C1C3  F1BC         	movff	sendMessage7@data2,sendMessage@data2
 23881   00BFA4  C1C4  F1BD         	movff	sendMessage7@data3,sendMessage@data3
 23882   00BFA8  C1C5  F1BE         	movff	sendMessage7@data4,sendMessage@data4
 23883   00BFAC  C1C6  F1BF         	movff	sendMessage7@data5,sendMessage@data5
 23884   00BFB0  C1C7  F1C0         	movff	sendMessage7@data6,sendMessage@data6
 23885   00BFB4  C1C8  F1C1         	movff	sendMessage7@data7,sendMessage@data7
 23886   00BFB8  0100               	movlb	0	; () banked
 23887   00BFBA  51A6               	movf	sendMessage7@opc& (0+255),w,b
 23888   00BFBC  ECA3  F054         	call	_sendMessage
 23889   00BFC0  0012               	return		;funcret
 23890   00BFC2                     __end_of_sendMessage7:
 23891                           	callstack 0
 23892                           
 23893 ;; *************** function _isConsumedEvent *****************
 23894 ;; Defined at:
 23895 ;;		line 382 in file "../event_consumerDualActionQueue.c"
 23896 ;; Parameters:    Size  Location     Type
 23897 ;;  eventIndex      1    wreg     unsigned char 
 23898 ;; Auto vars:     Size  Location     Type
 23899 ;;  eventIndex      1   70[BANK0 ] unsigned char 
 23900 ;;  ev              1   71[BANK0 ] unsigned char 
 23901 ;; Return value:  Size  Location     Type
 23902 ;;                  1    wreg      unsigned char 
 23903 ;; Registers used:
 23904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23905 ;; Tracked objects:
 23906 ;;		On entry : 0/0
 23907 ;;		On exit  : 0/0
 23908 ;;		Unchanged: 0/0
 23909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23911 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23913 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23914 ;;Total ram usage:        2 bytes
 23915 ;; Hardware stack levels used: 1
 23916 ;; Hardware stack levels required when called: 16
 23917 ;; This function calls:
 23918 ;;		_getEv
 23919 ;; This function is called by:
 23920 ;;		_ackEventProcessMessage
 23921 ;; This function uses a non-reentrant model
 23922 ;;
 23923                           
 23924                           	psect	text89
 23925   00C35A                     __ptext89:
 23926                           	callstack 0
 23927   00C35A                     _isConsumedEvent:
 23928                           	callstack 12
 23929                           
 23930                           ;incstack = 0
 23931                           ;isConsumedEvent@eventIndex stored from wreg
 23932   00C35A  0100               	movlb	0	; () banked
 23933   00C35C  6FA6               	movwf	isConsumedEvent@eventIndex& (0+255),b
 23934                           
 23935                           ;../event_consumerDualActionQueue.c: 383:     uint8_t ev;;../event_consumerDualActionQue
      +                          ue.c: 384:     ev = (uint8_t)getEv(eventIndex, 1);
 23936   00C35E  0E01               	movlw	1
 23937   00C360  0100               	movlb	0	; () banked
 23938   00C362  6F9D               	movwf	getEv@evNum& (0+255),b
 23939   00C364  51A6               	movf	isConsumedEvent@eventIndex& (0+255),w,b
 23940   00C366  EC0A  F03C         	call	_getEv
 23941   00C36A  0100               	movlb	0	; () banked
 23942   00C36C  519D               	movf	?_getEv& (0+255),w,b
 23943   00C36E  6FA7               	movwf	isConsumedEvent@ev& (0+255),b
 23944                           
 23945                           ; BSR set to: 0
 23946                           ;../event_consumerDualActionQueue.c: 385:     return (ev != 0);
 23947   00C370  51A7               	movf	isConsumedEvent@ev& (0+255),w,b
 23948   00C372  B4D8               	btfsc	status,2,c
 23949   00C374  D002               	goto	u21900
 23950   00C376  0E01               	movlw	1
 23951   00C378  0012               	return	
 23952   00C37A                     u21900:
 23953   00C37A  0E00               	movlw	0
 23954                           
 23955                           ; BSR set to: 0
 23956   00C37C  0012               	return		;funcret
 23957   00C37E                     __end_of_isConsumedEvent:
 23958                           	callstack 0
 23959                           
 23960 ;; *************** function _findService *****************
 23961 ;; Defined at:
 23962 ;;		line 808 in file "../../VLCBlib_PIC/vlcb.c"
 23963 ;; Parameters:    Size  Location     Type
 23964 ;;  id              1    wreg     unsigned char 
 23965 ;; Auto vars:     Size  Location     Type
 23966 ;;  id              1   49[BANK0 ] unsigned char 
 23967 ;;  i               1   50[BANK0 ] unsigned char 
 23968 ;; Return value:  Size  Location     Type
 23969 ;;                  2   45[BANK0 ] PTR const struct Service
 23970 ;; Registers used:
 23971 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23972 ;; Tracked objects:
 23973 ;;		On entry : 0/0
 23974 ;;		On exit  : 0/0
 23975 ;;		Unchanged: 0/0
 23976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23978 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23979 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23980 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23981 ;;Total ram usage:        6 bytes
 23982 ;; Hardware stack levels used: 1
 23983 ;; Hardware stack levels required when called: 12
 23984 ;; This function calls:
 23985 ;;		Nothing
 23986 ;; This function is called by:
 23987 ;;		_ackEventProcessMessage
 23988 ;; This function uses a non-reentrant model
 23989 ;;
 23990                           
 23991                           	psect	text90
 23992   009DA6                     __ptext90:
 23993                           	callstack 0
 23994   009DA6                     _findService:
 23995                           	callstack 16
 23996                           
 23997                           ; BSR set to: 0
 23998                           ;incstack = 0
 23999                           ;findService@id stored from wreg
 24000   009DA6  0100               	movlb	0	; () banked
 24001   009DA8  6F91               	movwf	findService@id& (0+255),b
 24002                           
 24003                           ;../../VLCBlib_PIC/vlcb.c: 809:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 810:     for (i
      +                          =0; i<9; i++) {
 24004   009DAA  0E00               	movlw	0
 24005   009DAC  0100               	movlb	0	; () banked
 24006   009DAE  6F92               	movwf	findService@i& (0+255),b
 24007   009DB0                     l21976:
 24008                           
 24009                           ; BSR set to: 0
 24010                           ;../../VLCBlib_PIC/vlcb.c: 811:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 24011   009DB0  5192               	movf	findService@i& (0+255),w,b
 24012   009DB2  0D02               	mullw	2
 24013   009DB4  0E69               	movlw	low _services
 24014   009DB6  24F3               	addwf	243,w,c
 24015   009DB8  6EF6               	movwf	tblptrl,c
 24016   009DBA  0EEE               	movlw	high _services
 24017   009DBC  20F4               	addwfc	244,w,c
 24018   009DBE  6EF7               	movwf	tblptrh,c
 24019   009DC0                     	if	1	;There are 3 active tblptr bytes
 24020   009DC0  6AF8               	clrf	tblptru,c
 24021   009DC2  0E00               	movlw	low (__mediumconst shr (0+16))
 24022   009DC4  22F8               	addwfc	tblptru,f,c
 24023   009DC6                     	endif
 24024   009DC6  0009               	tblrd		*+
 24025   009DC8  50F5               	movf	tablat,w,c
 24026   009DCA  0009               	tblrd		*+
 24027   009DCC  10F5               	iorwf	tablat,w,c
 24028   009DCE  B4D8               	btfsc	status,2,c
 24029   009DD0  D02D               	goto	l21984
 24030                           
 24031                           ; BSR set to: 0
 24032   009DD2  5192               	movf	findService@i& (0+255),w,b
 24033   009DD4  0D02               	mullw	2
 24034   009DD6  0E69               	movlw	low _services
 24035   009DD8  24F3               	addwf	243,w,c
 24036   009DDA  6EF6               	movwf	tblptrl,c
 24037   009DDC  0EEE               	movlw	high _services
 24038   009DDE  20F4               	addwfc	244,w,c
 24039   009DE0  6EF7               	movwf	tblptrh,c
 24040   009DE2                     	if	1	;There are 3 active tblptr bytes
 24041   009DE2  6AF8               	clrf	tblptru,c
 24042   009DE4  0E00               	movlw	low (__mediumconst shr (0+16))
 24043   009DE6  22F8               	addwfc	tblptru,f,c
 24044   009DE8                     	endif
 24045   009DE8  0009               	tblrd		*+
 24046   009DEA  CFF5 F08F          	movff	tablat,??_findService
 24047   009DEE  0009               	tblrd		*+
 24048   009DF0  CFF5 F090          	movff	tablat,??_findService+1
 24049   009DF4  C08F  FFF6         	movff	??_findService,tblptrl
 24050   009DF8  C090  FFF7         	movff	??_findService+1,tblptrh
 24051   009DFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24052   009DFC  6AF8               	clrf	tblptru,c
 24053   009DFE                     	endif
 24054   009DFE                     	if	0	;tblptru may be non-zero
 24055   009DFE                     	endif
 24056   009DFE  0008               	tblrd		*
 24057   009E00  50F5               	movf	tablat,w,c
 24058   009E02  1991               	xorwf	findService@id& (0+255),w,b
 24059   009E04  A4D8               	btfss	status,2,c
 24060   009E06  D012               	goto	l21984
 24061                           
 24062                           ; BSR set to: 0
 24063                           ;../../VLCBlib_PIC/vlcb.c: 812:             return services[i];
 24064   009E08  5192               	movf	findService@i& (0+255),w,b
 24065   009E0A  0D02               	mullw	2
 24066   009E0C  0E69               	movlw	low _services
 24067   009E0E  24F3               	addwf	243,w,c
 24068   009E10  6EF6               	movwf	tblptrl,c
 24069   009E12  0EEE               	movlw	high _services
 24070   009E14  20F4               	addwfc	244,w,c
 24071   009E16  6EF7               	movwf	tblptrh,c
 24072   009E18                     	if	1	;There are 3 active tblptr bytes
 24073   009E18  6AF8               	clrf	tblptru,c
 24074   009E1A  0E00               	movlw	low (__mediumconst shr (0+16))
 24075   009E1C  22F8               	addwfc	tblptru,f,c
 24076   009E1E                     	endif
 24077   009E1E  0009               	tblrd		*+
 24078   009E20  CFF5 F08D          	movff	tablat,?_findService
 24079   009E24  000A               	tblrd		*-
 24080   009E26  CFF5 F08E          	movff	tablat,?_findService+1
 24081   009E2A  0012               	return	
 24082   009E2C                     l21984:
 24083                           
 24084                           ; BSR set to: 0
 24085                           ;../../VLCBlib_PIC/vlcb.c: 814:     }
 24086   009E2C  2B92               	incf	findService@i& (0+255),f,b
 24087                           
 24088                           ; BSR set to: 0
 24089   009E2E  0E08               	movlw	8
 24090   009E30  6592               	cpfsgt	findService@i& (0+255),b
 24091   009E32  D7BE               	goto	l21976
 24092                           
 24093                           ; BSR set to: 0
 24094                           ;../../VLCBlib_PIC/vlcb.c: 815:     return ((void*)0);
 24095   009E34  0E00               	movlw	0
 24096   009E36  6F8D               	movwf	?_findService& (0+255),b
 24097   009E38  0E00               	movlw	0
 24098   009E3A  6F8E               	movwf	(?_findService+1)& (0+255),b
 24099                           
 24100                           ; BSR set to: 0
 24101   009E3C  0012               	return		;funcret
 24102   009E3E                     __end_of_findService:
 24103                           	callstack 0
 24104                           
 24105 ;; *************** function _ackEventCheckLen *****************
 24106 ;; Defined at:
 24107 ;;		line 184 in file "../../VLCBlib_PIC/event_acknowledge.c"
 24108 ;; Parameters:    Size  Location     Type
 24109 ;;  m               2   17[BANK1 ] PTR struct Message
 24110 ;;		 -> poll@m(9), 
 24111 ;;  needed          1   19[BANK1 ] unsigned char 
 24112 ;; Auto vars:     Size  Location     Type
 24113 ;;		None
 24114 ;; Return value:  Size  Location     Type
 24115 ;;                  1    wreg      enum E12799
 24116 ;; Registers used:
 24117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24118 ;; Tracked objects:
 24119 ;;		On entry : 0/0
 24120 ;;		On exit  : 0/0
 24121 ;;		Unchanged: 0/0
 24122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24123 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24126 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24127 ;;Total ram usage:        3 bytes
 24128 ;; Hardware stack levels used: 1
 24129 ;; Hardware stack levels required when called: 18
 24130 ;; This function calls:
 24131 ;;		_checkLen
 24132 ;; This function is called by:
 24133 ;;		_ackEventProcessMessage
 24134 ;; This function uses a non-reentrant model
 24135 ;;
 24136                           
 24137                           	psect	text91
 24138   00C52C                     __ptext91:
 24139                           	callstack 0
 24140   00C52C                     _ackEventCheckLen:
 24141                           	callstack 10
 24142                           
 24143                           ;../../VLCBlib_PIC/event_acknowledge.c: 185:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 24144                           
 24145                           ; BSR set to: 0
 24146                           ;incstack = 0
 24147   00C52C  C1CB  F1C7         	movff	ackEventCheckLen@m,checkLen@m
 24148   00C530  C1CC  F1C8         	movff	ackEventCheckLen@m+1,checkLen@m+1
 24149   00C534  C1CD  F1C9         	movff	ackEventCheckLen@needed,checkLen@needed
 24150   00C538  0E09               	movlw	9
 24151   00C53A  0101               	movlb	1	; () banked
 24152   00C53C  6FCA               	movwf	checkLen@service& (0+255),b
 24153   00C53E  EC25  F054         	call	_checkLen	;wreg free
 24154   00C542  0012               	return		;funcret
 24155   00C544                     __end_of_ackEventCheckLen:
 24156                           	callstack 0
 24157                           
 24158 ;; *************** function _checkLen *****************
 24159 ;; Defined at:
 24160 ;;		line 1096 in file "../../VLCBlib_PIC/vlcb.c"
 24161 ;; Parameters:    Size  Location     Type
 24162 ;;  m               2   13[BANK1 ] PTR struct Message
 24163 ;;		 -> poll@m(9), 
 24164 ;;  needed          1   15[BANK1 ] unsigned char 
 24165 ;;  service         1   16[BANK1 ] unsigned char 
 24166 ;; Auto vars:     Size  Location     Type
 24167 ;;		None
 24168 ;; Return value:  Size  Location     Type
 24169 ;;                  1    wreg      enum E12799
 24170 ;; Registers used:
 24171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24172 ;; Tracked objects:
 24173 ;;		On entry : 0/0
 24174 ;;		On exit  : 0/0
 24175 ;;		Unchanged: 0/0
 24176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24177 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24179 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24180 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24181 ;;Total ram usage:        5 bytes
 24182 ;; Hardware stack levels used: 1
 24183 ;; Hardware stack levels required when called: 17
 24184 ;; This function calls:
 24185 ;;		_sendMessage5
 24186 ;; This function is called by:
 24187 ;;		_ackEventCheckLen
 24188 ;;		_teachCheckLen
 24189 ;; This function uses a non-reentrant model
 24190 ;;
 24191                           
 24192                           	psect	text92
 24193   00A84A                     __ptext92:
 24194                           	callstack 0
 24195   00A84A                     _checkLen:
 24196                           	callstack 10
 24197                           
 24198                           ;../../VLCBlib_PIC/vlcb.c: 1097:     if (m->len < needed) {
 24199                           
 24200                           ;incstack = 0
 24201   00A84A  C1C7  FFD9         	movff	checkLen@m,fsr2l
 24202   00A84E  C1C8  FFDA         	movff	checkLen@m+1,fsr2h
 24203   00A852  0101               	movlb	1	; () banked
 24204   00A854  51C9               	movf	checkLen@needed& (0+255),w,b
 24205   00A856  5CDE               	subwf	postinc2,w,c
 24206   00A858  B0D8               	btfsc	status,0,c
 24207   00A85A  D034               	goto	l20902
 24208                           
 24209                           ; BSR set to: 1
 24210                           ;../../VLCBlib_PIC/vlcb.c: 1099:         if (m->len > 2) {
 24211   00A85C  C1C7  FFD9         	movff	checkLen@m,fsr2l
 24212   00A860  C1C8  FFDA         	movff	checkLen@m+1,fsr2h
 24213   00A864  0E02               	movlw	2
 24214   00A866  64DF               	cpfsgt	indf2,c
 24215   00A868  D02B               	goto	l20898
 24216                           
 24217                           ; BSR set to: 1
 24218                           ;../../VLCBlib_PIC/vlcb.c: 1100:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 24219   00A86A  EE20 F002          	lfsr	2,2
 24220   00A86E  51C7               	movf	checkLen@m& (0+255),w,b
 24221   00A870  26D9               	addwf	fsr2l,f,c
 24222   00A872  51C8               	movf	(checkLen@m+1)& (0+255),w,b
 24223   00A874  22DA               	addwfc	fsr2h,f,c
 24224   00A876  50DE               	movf	postinc2,w,c
 24225   00A878  0100               	movlb	0	; () banked
 24226   00A87A  19BE               	xorwf	(_nn+1)& (0+255),w,b
 24227   00A87C  A4D8               	btfss	status,2,c
 24228   00A87E  D020               	goto	l20898
 24229                           
 24230                           ; BSR set to: 0
 24231   00A880  0101               	movlb	1	; () banked
 24232   00A882  EE20 F003          	lfsr	2,3
 24233   00A886  51C7               	movf	checkLen@m& (0+255),w,b
 24234   00A888  26D9               	addwf	fsr2l,f,c
 24235   00A88A  51C8               	movf	(checkLen@m+1)& (0+255),w,b
 24236   00A88C  22DA               	addwfc	fsr2h,f,c
 24237   00A88E  0100               	movlb	0	; () banked
 24238   00A890  51BD               	movf	_nn& (0+255),w,b
 24239   00A892  18DE               	xorwf	postinc2,w,c
 24240   00A894  A4D8               	btfss	status,2,c
 24241   00A896  D014               	goto	l20898
 24242                           
 24243                           ; BSR set to: 0
 24244                           ;../../VLCBlib_PIC/vlcb.c: 1101:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 24245   00A898  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 24246   00A89C  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 24247   00A8A0  0101               	movlb	1	; () banked
 24248   00A8A2  EE20 F001          	lfsr	2,1
 24249   00A8A6  51C7               	movf	checkLen@m& (0+255),w,b
 24250   00A8A8  26D9               	addwf	fsr2l,f,c
 24251   00A8AA  51C8               	movf	(checkLen@m+1)& (0+255),w,b
 24252   00A8AC  22DA               	addwfc	fsr2h,f,c
 24253   00A8AE  50DF               	movf	indf2,w,c
 24254   00A8B0  6FC4               	movwf	sendMessage5@data3& (0+255),b
 24255   00A8B2  C1CA  F1C5         	movff	checkLen@service,sendMessage5@data4
 24256   00A8B6  0E01               	movlw	1
 24257   00A8B8  6FC6               	movwf	sendMessage5@data5& (0+255),b
 24258   00A8BA  0EAF               	movlw	175
 24259   00A8BC  ECE1  F05F         	call	_sendMessage5
 24260   00A8C0                     l20898:
 24261                           
 24262                           ;../../VLCBlib_PIC/vlcb.c: 1105:         return PROCESSED;
 24263   00A8C0  0E01               	movlw	1
 24264   00A8C2  0012               	return	
 24265   00A8C4                     l20902:
 24266                           
 24267                           ; BSR set to: 1
 24268                           ;../../VLCBlib_PIC/vlcb.c: 1107:     return NOT_PROCESSED;
 24269   00A8C4  0E00               	movlw	0
 24270   00A8C6  0012               	return		;funcret
 24271   00A8C8                     __end_of_checkLen:
 24272                           	callstack 0
 24273                           
 24274 ;; *************** function _sendMessage5 *****************
 24275 ;; Defined at:
 24276 ;;		line 1181 in file "../../VLCBlib_PIC/vlcb.c"
 24277 ;; Parameters:    Size  Location     Type
 24278 ;;  opc             1    wreg     enum E12392
 24279 ;;  data1           1    8[BANK1 ] unsigned char 
 24280 ;;  data2           1    9[BANK1 ] unsigned char 
 24281 ;;  data3           1   10[BANK1 ] unsigned char 
 24282 ;;  data4           1   11[BANK1 ] unsigned char 
 24283 ;;  data5           1   12[BANK1 ] unsigned char 
 24284 ;; Auto vars:     Size  Location     Type
 24285 ;;  opc             1   70[BANK0 ] enum E12392
 24286 ;; Return value:  Size  Location     Type
 24287 ;;                  1    wreg      void 
 24288 ;; Registers used:
 24289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24290 ;; Tracked objects:
 24291 ;;		On entry : 0/0
 24292 ;;		On exit  : 0/0
 24293 ;;		Unchanged: 0/0
 24294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24295 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24296 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24298 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24299 ;;Total ram usage:        6 bytes
 24300 ;; Hardware stack levels used: 1
 24301 ;; Hardware stack levels required when called: 16
 24302 ;; This function calls:
 24303 ;;		_sendMessage
 24304 ;; This function is called by:
 24305 ;;		_mnsProcessMessage
 24306 ;;		_mnsPoll
 24307 ;;		_mnsTRserviceDiscoveryCallback
 24308 ;;		_nvProcessMessage
 24309 ;;		_checkLen
 24310 ;;		_canProcessMessage
 24311 ;;		_teachProcessMessage
 24312 ;;		_teachCheckLen
 24313 ;;		_doNenrd
 24314 ;;		_doNnclr
 24315 ;;		_doEvlrn
 24316 ;;		_doReval
 24317 ;;		_doEvuln
 24318 ;;		_doReqev
 24319 ;; This function uses a non-reentrant model
 24320 ;;
 24321                           
 24322                           	psect	text93
 24323   00BFC2                     __ptext93:
 24324                           	callstack 0
 24325   00BFC2                     _sendMessage5:
 24326                           	callstack 11
 24327                           
 24328                           ;incstack = 0
 24329                           ;sendMessage5@opc stored from wreg
 24330   00BFC2  0100               	movlb	0	; () banked
 24331   00BFC4  6FA6               	movwf	sendMessage5@opc& (0+255),b
 24332                           
 24333                           ;../../VLCBlib_PIC/vlcb.c: 1182:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 24334   00BFC6  0E06               	movlw	6
 24335   00BFC8  0101               	movlb	1	; () banked
 24336   00BFCA  6FBA               	movwf	sendMessage@len& (0+255),b
 24337   00BFCC  C1C2  F1BB         	movff	sendMessage5@data1,sendMessage@data1
 24338   00BFD0  C1C3  F1BC         	movff	sendMessage5@data2,sendMessage@data2
 24339   00BFD4  C1C4  F1BD         	movff	sendMessage5@data3,sendMessage@data3
 24340   00BFD8  C1C5  F1BE         	movff	sendMessage5@data4,sendMessage@data4
 24341   00BFDC  C1C6  F1BF         	movff	sendMessage5@data5,sendMessage@data5
 24342   00BFE0  0E00               	movlw	0
 24343   00BFE2  6FC0               	movwf	sendMessage@data6& (0+255),b
 24344   00BFE4  0E00               	movlw	0
 24345   00BFE6  6FC1               	movwf	sendMessage@data7& (0+255),b
 24346   00BFE8  0100               	movlb	0	; () banked
 24347   00BFEA  51A6               	movf	sendMessage5@opc& (0+255),w,b
 24348   00BFEC  ECA3  F054         	call	_sendMessage
 24349   00BFF0  0012               	return		;funcret
 24350   00BFF2                     __end_of_sendMessage5:
 24351                           	callstack 0
 24352                           
 24353 ;; *************** function _APP_preProcessMessage *****************
 24354 ;; Defined at:
 24355 ;;		line 413 in file "../main.c"
 24356 ;; Parameters:    Size  Location     Type
 24357 ;;  m               2   45[BANK0 ] PTR struct Message
 24358 ;;		 -> poll@m(9), 
 24359 ;; Auto vars:     Size  Location     Type
 24360 ;;		None
 24361 ;; Return value:  Size  Location     Type
 24362 ;;                  1    wreg      enum E12749
 24363 ;; Registers used:
 24364 ;;		wreg
 24365 ;; Tracked objects:
 24366 ;;		On entry : 0/0
 24367 ;;		On exit  : 0/0
 24368 ;;		Unchanged: 0/0
 24369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24373 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24374 ;;Total ram usage:        2 bytes
 24375 ;; Hardware stack levels used: 1
 24376 ;; Hardware stack levels required when called: 12
 24377 ;; This function calls:
 24378 ;;		Nothing
 24379 ;; This function is called by:
 24380 ;;		_poll
 24381 ;; This function uses a non-reentrant model
 24382 ;;
 24383                           
 24384                           	psect	text94
 24385   00C64A                     __ptext94:
 24386                           	callstack 0
 24387   00C64A                     _APP_preProcessMessage:
 24388                           	callstack 17
 24389                           
 24390                           ;../main.c: 414:     return NOT_PROCESSED;
 24391                           
 24392                           ;incstack = 0
 24393   00C64A  0E00               	movlw	0
 24394   00C64C  0012               	return		;funcret
 24395   00C64E                     __end_of_APP_preProcessMessage:
 24396                           	callstack 0
 24397                           
 24398 ;; *************** function _APP_postProcessMessage *****************
 24399 ;; Defined at:
 24400 ;;		line 420 in file "../main.c"
 24401 ;; Parameters:    Size  Location     Type
 24402 ;;  m               2   45[BANK0 ] PTR struct Message
 24403 ;;		 -> poll@m(9), 
 24404 ;; Auto vars:     Size  Location     Type
 24405 ;;		None
 24406 ;; Return value:  Size  Location     Type
 24407 ;;                  1    wreg      enum E12749
 24408 ;; Registers used:
 24409 ;;		wreg
 24410 ;; Tracked objects:
 24411 ;;		On entry : 0/0
 24412 ;;		On exit  : 0/0
 24413 ;;		Unchanged: 0/0
 24414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24419 ;;Total ram usage:        2 bytes
 24420 ;; Hardware stack levels used: 1
 24421 ;; Hardware stack levels required when called: 12
 24422 ;; This function calls:
 24423 ;;		Nothing
 24424 ;; This function is called by:
 24425 ;;		_poll
 24426 ;; This function uses a non-reentrant model
 24427 ;;
 24428                           
 24429                           	psect	text95
 24430   00C64E                     __ptext95:
 24431                           	callstack 0
 24432   00C64E                     _APP_postProcessMessage:
 24433                           	callstack 17
 24434                           
 24435                           ;../main.c: 421:     return NOT_PROCESSED;
 24436                           
 24437                           ;incstack = 0
 24438   00C64E  0E00               	movlw	0
 24439   00C650  0012               	return		;funcret
 24440   00C652                     __end_of_APP_postProcessMessage:
 24441                           	callstack 0
 24442                           
 24443 ;; *************** function _loop *****************
 24444 ;; Defined at:
 24445 ;;		line 353 in file "../main.c"
 24446 ;; Parameters:    Size  Location     Type
 24447 ;;		None
 24448 ;; Auto vars:     Size  Location     Type
 24449 ;;		None
 24450 ;; Return value:  Size  Location     Type
 24451 ;;                  1    wreg      void 
 24452 ;; Registers used:
 24453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24454 ;; Tracked objects:
 24455 ;;		On entry : 0/0
 24456 ;;		On exit  : 0/0
 24457 ;;		Unchanged: 0/0
 24458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24461 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24462 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24463 ;;Total ram usage:        8 bytes
 24464 ;; Hardware stack levels used: 1
 24465 ;; Hardware stack levels required when called: 22
 24466 ;; This function calls:
 24467 ;;		___lmul
 24468 ;;		_getNV
 24469 ;;		_inputScan
 24470 ;;		_processActions
 24471 ;;		_processOutputs
 24472 ;;		_sendProducedEvent
 24473 ;;		_startServos
 24474 ;;		_tickGet
 24475 ;; This function is called by:
 24476 ;;		_main
 24477 ;; This function uses a non-reentrant model
 24478 ;;
 24479                           
 24480                           	psect	text96
 24481   006B94                     __ptext96:
 24482                           	callstack 0
 24483   006B94                     _loop:
 24484                           	callstack 8
 24485                           
 24486                           ;../main.c: 355:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 24487                           
 24488                           ;incstack = 0
 24489   006B94  0100               	movlb	0	; () banked
 24490   006B96  51D0               	movf	_started& (0+255),w,b
 24491   006B98  A4D8               	btfss	status,2,c
 24492   006B9A  D053               	goto	l24786
 24493                           
 24494                           ; BSR set to: 0
 24495   006B9C  ECE4  F05A         	call	_tickGet	;wreg free
 24496   006BA0  503B               	movf	_startTime^0,w,c
 24497   006BA2  0100               	movlb	0	; () banked
 24498   006BA4  5D8D               	subwf	?_tickGet& (0+255),w,b
 24499   006BA6  0101               	movlb	1	; () banked
 24500   006BA8  6FE8               	movwf	??_loop& (0+255),b
 24501   006BAA  503C               	movf	(_startTime+1)^0,w,c
 24502   006BAC  0100               	movlb	0	; () banked
 24503   006BAE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24504   006BB0  0101               	movlb	1	; () banked
 24505   006BB2  6FE9               	movwf	(??_loop+1)& (0+255),b
 24506   006BB4  503D               	movf	(_startTime+2)^0,w,c
 24507   006BB6  0100               	movlb	0	; () banked
 24508   006BB8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24509   006BBA  0101               	movlb	1	; () banked
 24510   006BBC  6FEA               	movwf	(??_loop+2)& (0+255),b
 24511   006BBE  503E               	movf	(_startTime+3)^0,w,c
 24512   006BC0  0100               	movlb	0	; () banked
 24513   006BC2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24514   006BC4  0101               	movlb	1	; () banked
 24515   006BC6  6FEB               	movwf	(??_loop+3)& (0+255),b
 24516   006BC8  0E01               	movlw	1
 24517   006BCA  EC52  F05E         	call	_getNV
 24518   006BCE  0100               	movlb	0	; () banked
 24519   006BD0  C08D  F091         	movff	?_getNV,___lmul@multiplier
 24520   006BD4  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 24521   006BD8  0E00               	movlw	0
 24522   006BDA  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 24523   006BDC  0EFF               	movlw	-1
 24524   006BDE  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 24525   006BE0  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 24526   006BE2  0E6A               	movlw	106
 24527   006BE4  6F95               	movwf	___lmul@multiplicand& (0+255),b
 24528   006BE6  0E18               	movlw	24
 24529   006BE8  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24530   006BEA  0E00               	movlw	0
 24531   006BEC  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24532   006BEE  0E00               	movlw	0
 24533   006BF0  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24534   006BF2  EC10  F05B         	call	___lmul	;wreg free
 24535   006BF6  0E48               	movlw	72
 24536   006BF8  0100               	movlb	0	; () banked
 24537   006BFA  2591               	addwf	?___lmul& (0+255),w,b
 24538   006BFC  0101               	movlb	1	; () banked
 24539   006BFE  6FEC               	movwf	(??_loop+4)& (0+255),b
 24540   006C00  0EE8               	movlw	232
 24541   006C02  0100               	movlb	0	; () banked
 24542   006C04  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 24543   006C06  0101               	movlb	1	; () banked
 24544   006C08  6FED               	movwf	(??_loop+5)& (0+255),b
 24545   006C0A  0E01               	movlw	1
 24546   006C0C  0100               	movlb	0	; () banked
 24547   006C0E  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 24548   006C10  0101               	movlb	1	; () banked
 24549   006C12  6FEE               	movwf	(??_loop+6)& (0+255),b
 24550   006C14  0E00               	movlw	0
 24551   006C16  0100               	movlb	0	; () banked
 24552   006C18  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 24553   006C1A  0101               	movlb	1	; () banked
 24554   006C1C  6FEF               	movwf	(??_loop+7)& (0+255),b
 24555   006C1E  51E8               	movf	??_loop& (0+255),w,b
 24556   006C20  5DEC               	subwf	(??_loop+4)& (0+255),w,b
 24557   006C22  51E9               	movf	(??_loop+1)& (0+255),w,b
 24558   006C24  59ED               	subwfb	(??_loop+5)& (0+255),w,b
 24559   006C26  51EA               	movf	(??_loop+2)& (0+255),w,b
 24560   006C28  59EE               	subwfb	(??_loop+6)& (0+255),w,b
 24561   006C2A  51EB               	movf	(??_loop+3)& (0+255),w,b
 24562   006C2C  59EF               	subwfb	(??_loop+7)& (0+255),w,b
 24563   006C2E  B0D8               	btfsc	status,0,c
 24564   006C30  D008               	goto	l24786
 24565                           
 24566                           ; BSR set to: 1
 24567                           ;../main.c: 356:         started = TRUE;
 24568   006C32  0E01               	movlw	1
 24569   006C34  0100               	movlb	0	; () banked
 24570   006C36  6FD0               	movwf	_started& (0+255),b
 24571                           
 24572                           ; BSR set to: 0
 24573                           ;../main.c: 357:         sendProducedEvent(1, EVENT_ON);
 24574   006C38  0E01               	movlw	1
 24575   006C3A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 24576   006C3C  0E01               	movlw	1
 24577   006C3E  EC3B  F04B         	call	_sendProducedEvent
 24578   006C42                     l24786:
 24579                           
 24580                           ;../main.c: 361:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 24581   006C42  ECE4  F05A         	call	_tickGet	;wreg free
 24582   006C46  0101               	movlb	1	; () banked
 24583   006C48  515C               	movf	_lastServoStartTime& (0+255),w,b
 24584   006C4A  0100               	movlb	0	; () banked
 24585   006C4C  5D8D               	subwf	?_tickGet& (0+255),w,b
 24586   006C4E  0101               	movlb	1	; () banked
 24587   006C50  6FE8               	movwf	??_loop& (0+255),b
 24588   006C52  515D               	movf	(_lastServoStartTime+1)& (0+255),w,b
 24589   006C54  0100               	movlb	0	; () banked
 24590   006C56  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24591   006C58  0101               	movlb	1	; () banked
 24592   006C5A  6FE9               	movwf	(??_loop+1)& (0+255),b
 24593   006C5C  515E               	movf	(_lastServoStartTime+2)& (0+255),w,b
 24594   006C5E  0100               	movlb	0	; () banked
 24595   006C60  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24596   006C62  0101               	movlb	1	; () banked
 24597   006C64  6FEA               	movwf	(??_loop+2)& (0+255),b
 24598   006C66  515F               	movf	(_lastServoStartTime+3)& (0+255),w,b
 24599   006C68  0100               	movlb	0	; () banked
 24600   006C6A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24601   006C6C  0101               	movlb	1	; () banked
 24602   006C6E  6FEB               	movwf	(??_loop+3)& (0+255),b
 24603   006C70  51EB               	movf	(??_loop+3)& (0+255),w,b
 24604   006C72  11EA               	iorwf	(??_loop+2)& (0+255),w,b
 24605   006C74  11E9               	iorwf	(??_loop+1)& (0+255),w,b
 24606   006C76  E104               	bnz	u26400
 24607   006C78  0E9C               	movlw	156
 24608   006C7A  5DE8               	subwf	??_loop& (0+255),w,b
 24609   006C7C  A0D8               	btfss	status,0,c
 24610   006C7E  D00C               	goto	l24792
 24611   006C80                     u26400:
 24612                           
 24613                           ; BSR set to: 1
 24614                           ;../main.c: 362:         startServos();
 24615   006C80  EC49  F04D         	call	_startServos	;wreg free
 24616                           
 24617                           ;../main.c: 363:         lastServoStartTime.val = tickGet();
 24618   006C84  ECE4  F05A         	call	_tickGet	;wreg free
 24619   006C88  C08D  F15C         	movff	?_tickGet,_lastServoStartTime
 24620   006C8C  C08E  F15D         	movff	?_tickGet+1,_lastServoStartTime+1
 24621   006C90  C08F  F15E         	movff	?_tickGet+2,_lastServoStartTime+2
 24622   006C94  C090  F15F         	movff	?_tickGet+3,_lastServoStartTime+3
 24623   006C98                     l24792:
 24624                           
 24625                           ;../main.c: 366:     if (started) {
 24626   006C98  0100               	movlb	0	; () banked
 24627   006C9A  51D0               	movf	_started& (0+255),w,b
 24628   006C9C  B4D8               	btfsc	status,2,c
 24629   006C9E  0012               	return	
 24630                           
 24631                           ; BSR set to: 0
 24632                           ;../main.c: 367:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 24633   006CA0  ECE4  F05A         	call	_tickGet	;wreg free
 24634   006CA4  0101               	movlb	1	; () banked
 24635   006CA6  5158               	movf	_lastInputScanTime& (0+255),w,b
 24636   006CA8  0100               	movlb	0	; () banked
 24637   006CAA  5D8D               	subwf	?_tickGet& (0+255),w,b
 24638   006CAC  0101               	movlb	1	; () banked
 24639   006CAE  6FE8               	movwf	??_loop& (0+255),b
 24640   006CB0  5159               	movf	(_lastInputScanTime+1)& (0+255),w,b
 24641   006CB2  0100               	movlb	0	; () banked
 24642   006CB4  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24643   006CB6  0101               	movlb	1	; () banked
 24644   006CB8  6FE9               	movwf	(??_loop+1)& (0+255),b
 24645   006CBA  515A               	movf	(_lastInputScanTime+2)& (0+255),w,b
 24646   006CBC  0100               	movlb	0	; () banked
 24647   006CBE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24648   006CC0  0101               	movlb	1	; () banked
 24649   006CC2  6FEA               	movwf	(??_loop+2)& (0+255),b
 24650   006CC4  515B               	movf	(_lastInputScanTime+3)& (0+255),w,b
 24651   006CC6  0100               	movlb	0	; () banked
 24652   006CC8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24653   006CCA  0101               	movlb	1	; () banked
 24654   006CCC  6FEB               	movwf	(??_loop+3)& (0+255),b
 24655   006CCE  51EB               	movf	(??_loop+3)& (0+255),w,b
 24656   006CD0  11EA               	iorwf	(??_loop+2)& (0+255),w,b
 24657   006CD2  E106               	bnz	u26420
 24658   006CD4  0E37               	movlw	55
 24659   006CD6  5DE8               	subwf	??_loop& (0+255),w,b
 24660   006CD8  0E01               	movlw	1
 24661   006CDA  59E9               	subwfb	(??_loop+1)& (0+255),w,b
 24662   006CDC  A0D8               	btfss	status,0,c
 24663   006CDE  D00C               	goto	l24800
 24664   006CE0                     u26420:
 24665                           
 24666                           ; BSR set to: 1
 24667                           ;../main.c: 368:             inputScan();
 24668   006CE0  ECC3  F027         	call	_inputScan	;wreg free
 24669                           
 24670                           ;../main.c: 369:             lastInputScanTime.val = tickGet();
 24671   006CE4  ECE4  F05A         	call	_tickGet	;wreg free
 24672   006CE8  C08D  F158         	movff	?_tickGet,_lastInputScanTime
 24673   006CEC  C08E  F159         	movff	?_tickGet+1,_lastInputScanTime+1
 24674   006CF0  C08F  F15A         	movff	?_tickGet+2,_lastInputScanTime+2
 24675   006CF4  C090  F15B         	movff	?_tickGet+3,_lastInputScanTime+3
 24676   006CF8                     l24800:
 24677                           
 24678                           ;../main.c: 371:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 24679   006CF8  ECE4  F05A         	call	_tickGet	;wreg free
 24680   006CFC  0101               	movlb	1	; () banked
 24681   006CFE  5154               	movf	_lastActionPollTime& (0+255),w,b
 24682   006D00  0100               	movlb	0	; () banked
 24683   006D02  5D8D               	subwf	?_tickGet& (0+255),w,b
 24684   006D04  0101               	movlb	1	; () banked
 24685   006D06  6FE8               	movwf	??_loop& (0+255),b
 24686   006D08  5155               	movf	(_lastActionPollTime+1)& (0+255),w,b
 24687   006D0A  0100               	movlb	0	; () banked
 24688   006D0C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24689   006D0E  0101               	movlb	1	; () banked
 24690   006D10  6FE9               	movwf	(??_loop+1)& (0+255),b
 24691   006D12  5156               	movf	(_lastActionPollTime+2)& (0+255),w,b
 24692   006D14  0100               	movlb	0	; () banked
 24693   006D16  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24694   006D18  0101               	movlb	1	; () banked
 24695   006D1A  6FEA               	movwf	(??_loop+2)& (0+255),b
 24696   006D1C  5157               	movf	(_lastActionPollTime+3)& (0+255),w,b
 24697   006D1E  0100               	movlb	0	; () banked
 24698   006D20  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24699   006D22  0101               	movlb	1	; () banked
 24700   006D24  6FEB               	movwf	(??_loop+3)& (0+255),b
 24701   006D26  51EB               	movf	(??_loop+3)& (0+255),w,b
 24702   006D28  11EA               	iorwf	(??_loop+2)& (0+255),w,b
 24703   006D2A  E106               	bnz	u26430
 24704   006D2C  0E39               	movlw	57
 24705   006D2E  5DE8               	subwf	??_loop& (0+255),w,b
 24706   006D30  0E18               	movlw	24
 24707   006D32  59E9               	subwfb	(??_loop+1)& (0+255),w,b
 24708   006D34  A0D8               	btfss	status,0,c
 24709   006D36  0012               	return	
 24710   006D38                     u26430:
 24711                           
 24712                           ; BSR set to: 1
 24713                           ;../main.c: 372:             processActions();
 24714   006D38  ECD9  F030         	call	_processActions	;wreg free
 24715                           
 24716                           ;../main.c: 373:             processOutputs();
 24717   006D3C  ECE1  F034         	call	_processOutputs	;wreg free
 24718                           
 24719                           ;../main.c: 374:             lastActionPollTime.val = tickGet();
 24720   006D40  ECE4  F05A         	call	_tickGet	;wreg free
 24721   006D44  C08D  F154         	movff	?_tickGet,_lastActionPollTime
 24722   006D48  C08E  F155         	movff	?_tickGet+1,_lastActionPollTime+1
 24723   006D4C  C08F  F156         	movff	?_tickGet+2,_lastActionPollTime+2
 24724   006D50  C090  F157         	movff	?_tickGet+3,_lastActionPollTime+3
 24725   006D54  0012               	return		;funcret
 24726   006D56                     __end_of_loop:
 24727                           	callstack 0
 24728                           
 24729 ;; *************** function _startServos *****************
 24730 ;; Defined at:
 24731 ;;		line 182 in file "../servo.c"
 24732 ;; Parameters:    Size  Location     Type
 24733 ;;		None
 24734 ;; Auto vars:     Size  Location     Type
 24735 ;;  type            1   30[BANK1 ] unsigned char 
 24736 ;; Return value:  Size  Location     Type
 24737 ;;                  1    wreg      void 
 24738 ;; Registers used:
 24739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24740 ;; Tracked objects:
 24741 ;;		On entry : 0/0
 24742 ;;		On exit  : 0/0
 24743 ;;		Unchanged: 0/0
 24744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24746 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24748 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24749 ;;Total ram usage:        1 bytes
 24750 ;; Hardware stack levels used: 1
 24751 ;; Hardware stack levels required when called: 19
 24752 ;; This function calls:
 24753 ;;		_getNV
 24754 ;;		_pollServos
 24755 ;;		_setupTimer1
 24756 ;;		_setupTimer3
 24757 ;; This function is called by:
 24758 ;;		_loop
 24759 ;; This function uses a non-reentrant model
 24760 ;;
 24761                           
 24762                           	psect	text97
 24763   009A92                     __ptext97:
 24764                           	callstack 0
 24765   009A92                     _startServos:
 24766                           	callstack 10
 24767                           
 24768                           ;../servo.c: 183:     uint8_t type;;../servo.c: 186:     servoInBlock++;
 24769                           
 24770                           ;incstack = 0
 24771   009A92  0100               	movlb	0	; () banked
 24772   009A94  2BC9               	incf	_servoInBlock& (0+255),f,b
 24773                           
 24774                           ; BSR set to: 0
 24775                           ;../servo.c: 187:     if (servoInBlock >= 8) {
 24776   009A96  0E07               	movlw	7
 24777   009A98  65C9               	cpfsgt	_servoInBlock& (0+255),b
 24778   009A9A  D004               	goto	l22788
 24779                           
 24780                           ; BSR set to: 0
 24781                           ;../servo.c: 188:         servoInBlock = 0;
 24782   009A9C  0E00               	movlw	0
 24783   009A9E  6FC9               	movwf	_servoInBlock& (0+255),b
 24784                           
 24785                           ; BSR set to: 0
 24786                           ;../servo.c: 189:         pollServos();
 24787   009AA0  EC28  F004         	call	_pollServos	;wreg free
 24788   009AA4                     l22788:
 24789                           
 24790                           ;../servo.c: 191:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 24791   009AA4  0100               	movlb	0	; () banked
 24792   009AA6  51C9               	movf	_servoInBlock& (0+255),w,b
 24793   009AA8  0D07               	mullw	7
 24794   009AAA  50F3               	movf	243,w,c
 24795   009AAC  0F10               	addlw	16
 24796   009AAE  EC52  F05E         	call	_getNV
 24797   009AB2  0100               	movlb	0	; () banked
 24798   009AB4  518D               	movf	?_getNV& (0+255),w,b
 24799   009AB6  0101               	movlb	1	; () banked
 24800   009AB8  6FD8               	movwf	startServos@type& (0+255),b
 24801                           
 24802                           ; BSR set to: 1
 24803                           ;../servo.c: 192:     if ((type == 2) || (type == 3) || (type == 4)) {
 24804   009ABA  0E02               	movlw	2
 24805   009ABC  19D8               	xorwf	startServos@type& (0+255),w,b
 24806   009ABE  B4D8               	btfsc	status,2,c
 24807   009AC0  D008               	goto	u23890
 24808                           
 24809                           ; BSR set to: 1
 24810   009AC2  0E03               	movlw	3
 24811   009AC4  19D8               	xorwf	startServos@type& (0+255),w,b
 24812   009AC6  B4D8               	btfsc	status,2,c
 24813   009AC8  D004               	goto	u23890
 24814                           
 24815                           ; BSR set to: 1
 24816   009ACA  0E04               	movlw	4
 24817   009ACC  19D8               	xorwf	startServos@type& (0+255),w,b
 24818   009ACE  A4D8               	btfss	status,2,c
 24819   009AD0  D00D               	goto	l22800
 24820   009AD2                     u23890:
 24821                           
 24822                           ; BSR set to: 1
 24823                           ;../servo.c: 193:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 24824   009AD2  0E10               	movlw	low _servoState
 24825   009AD4  0100               	movlb	0	; () banked
 24826   009AD6  25C9               	addwf	_servoInBlock& (0+255),w,b
 24827   009AD8  6ED9               	movwf	fsr2l,c
 24828   009ADA  6ADA               	clrf	fsr2h,c
 24829   009ADC  0E01               	movlw	high _servoState
 24830   009ADE  22DA               	addwfc	fsr2h,f,c
 24831   009AE0  50DF               	movf	indf2,w,c
 24832   009AE2  B4D8               	btfsc	status,2,c
 24833   009AE4  D003               	goto	l22800
 24834                           
 24835                           ; BSR set to: 0
 24836   009AE6  51C9               	movf	_servoInBlock& (0+255),w,b
 24837   009AE8  EC29  F051         	call	_setupTimer1
 24838   009AEC                     l22800:
 24839                           
 24840                           ;../servo.c: 195:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 24841   009AEC  0100               	movlb	0	; () banked
 24842   009AEE  51C9               	movf	_servoInBlock& (0+255),w,b
 24843   009AF0  0D07               	mullw	7
 24844   009AF2  50F3               	movf	243,w,c
 24845   009AF4  0F48               	addlw	72
 24846   009AF6  EC52  F05E         	call	_getNV
 24847   009AFA  0100               	movlb	0	; () banked
 24848   009AFC  518D               	movf	?_getNV& (0+255),w,b
 24849   009AFE  0101               	movlb	1	; () banked
 24850   009B00  6FD8               	movwf	startServos@type& (0+255),b
 24851                           
 24852                           ; BSR set to: 1
 24853                           ;../servo.c: 196:     if ((type == 2) || (type == 3) || (type == 4)) {
 24854   009B02  0E02               	movlw	2
 24855   009B04  19D8               	xorwf	startServos@type& (0+255),w,b
 24856   009B06  B4D8               	btfsc	status,2,c
 24857   009B08  D008               	goto	u23930
 24858                           
 24859                           ; BSR set to: 1
 24860   009B0A  0E03               	movlw	3
 24861   009B0C  19D8               	xorwf	startServos@type& (0+255),w,b
 24862   009B0E  B4D8               	btfsc	status,2,c
 24863   009B10  D004               	goto	u23930
 24864                           
 24865                           ; BSR set to: 1
 24866   009B12  0E04               	movlw	4
 24867   009B14  19D8               	xorwf	startServos@type& (0+255),w,b
 24868   009B16  A4D8               	btfss	status,2,c
 24869   009B18  0012               	return	
 24870   009B1A                     u23930:
 24871                           
 24872                           ; BSR set to: 1
 24873                           ;../servo.c: 197:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 24874   009B1A  0E18               	movlw	low (_servoState+8)
 24875   009B1C  0100               	movlb	0	; () banked
 24876   009B1E  25C9               	addwf	_servoInBlock& (0+255),w,b
 24877   009B20  6ED9               	movwf	fsr2l,c
 24878   009B22  6ADA               	clrf	fsr2h,c
 24879   009B24  0E01               	movlw	high (_servoState+8)
 24880   009B26  22DA               	addwfc	fsr2h,f,c
 24881   009B28  50DF               	movf	indf2,w,c
 24882   009B2A  B4D8               	btfsc	status,2,c
 24883   009B2C  0012               	return	
 24884                           
 24885                           ; BSR set to: 0
 24886   009B2E  51C9               	movf	_servoInBlock& (0+255),w,b
 24887   009B30  0F08               	addlw	8
 24888   009B32  ECE0  F050         	call	_setupTimer3
 24889   009B36  0012               	return		;funcret
 24890   009B38                     __end_of_startServos:
 24891                           	callstack 0
 24892                           
 24893 ;; *************** function _setupTimer3 *****************
 24894 ;; Defined at:
 24895 ;;		line 217 in file "../servo.c"
 24896 ;; Parameters:    Size  Location     Type
 24897 ;;  io              1    wreg     unsigned char 
 24898 ;; Auto vars:     Size  Location     Type
 24899 ;;  io              1   60[BANK0 ] unsigned char 
 24900 ;;  ticks           2   58[BANK0 ] unsigned short 
 24901 ;; Return value:  Size  Location     Type
 24902 ;;                  1    wreg      void 
 24903 ;; Registers used:
 24904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24905 ;; Tracked objects:
 24906 ;;		On entry : 0/0
 24907 ;;		On exit  : 0/0
 24908 ;;		Unchanged: 0/0
 24909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24911 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24912 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24913 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24914 ;;Total ram usage:        8 bytes
 24915 ;; Hardware stack levels used: 1
 24916 ;; Hardware stack levels required when called: 13
 24917 ;; This function calls:
 24918 ;;		_getNV
 24919 ;;		_setOutputPin
 24920 ;; This function is called by:
 24921 ;;		_startServos
 24922 ;; This function uses a non-reentrant model
 24923 ;;
 24924                           
 24925                           	psect	text98
 24926   00A1C0                     __ptext98:
 24927                           	callstack 0
 24928   00A1C0                     _setupTimer3:
 24929                           	callstack 15
 24930                           
 24931                           ;incstack = 0
 24932                           ;setupTimer3@io stored from wreg
 24933   00A1C0  0100               	movlb	0	; () banked
 24934   00A1C2  6F9C               	movwf	setupTimer3@io& (0+255),b
 24935                           
 24936                           ;../servo.c: 218:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24937   00A1C4  0100               	movlb	0	; () banked
 24938   00A1C6  519C               	movf	setupTimer3@io& (0+255),w,b
 24939   00A1C8  0D07               	mullw	7
 24940   00A1CA  50F3               	movf	243,w,c
 24941   00A1CC  0F11               	addlw	17
 24942   00A1CE  EC52  F05E         	call	_getNV
 24943   00A1D2  0100               	movlb	0	; () banked
 24944   00A1D4  BF8D               	btfsc	?_getNV& (0+255),7,b
 24945   00A1D6  D011               	goto	l21944
 24946                           
 24947                           ; BSR set to: 0
 24948   00A1D8  519C               	movf	setupTimer3@io& (0+255),w,b
 24949   00A1DA  0FA9               	addlw	low _currentPos
 24950   00A1DC  6ED9               	movwf	fsr2l,c
 24951   00A1DE  6ADA               	clrf	fsr2h,c
 24952   00A1E0  50DF               	movf	indf2,w,c
 24953   00A1E2  6F95               	movwf	??_setupTimer3& (0+255),b
 24954   00A1E4  5195               	movf	??_setupTimer3& (0+255),w,b
 24955   00A1E6  0D13               	mullw	19
 24956   00A1E8  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24957   00A1EC  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24958   00A1F0  0E10               	movlw	16
 24959   00A1F2  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24960   00A1F4  6F98               	movwf	_setupTimer3$1935& (0+255),b
 24961   00A1F6  0E0E               	movlw	14
 24962   00A1F8  D010               	goto	L4
 24963   00A1FA                     l21944:
 24964                           
 24965                           ; BSR set to: 0
 24966   00A1FA  519C               	movf	setupTimer3@io& (0+255),w,b
 24967   00A1FC  0FA9               	addlw	low _currentPos
 24968   00A1FE  6ED9               	movwf	fsr2l,c
 24969   00A200  6ADA               	clrf	fsr2h,c
 24970   00A202  50DF               	movf	indf2,w,c
 24971   00A204  6F95               	movwf	??_setupTimer3& (0+255),b
 24972   00A206  5195               	movf	??_setupTimer3& (0+255),w,b
 24973   00A208  0D24               	mullw	36
 24974   00A20A  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24975   00A20E  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24976   00A212  0E78               	movlw	120
 24977   00A214  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24978   00A216  6F98               	movwf	_setupTimer3$1935& (0+255),b
 24979   00A218  0E05               	movlw	5
 24980   00A21A                     L4:
 24981   00A21A  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 24982   00A21C  6F99               	movwf	(_setupTimer3$1935+1)& (0+255),b
 24983                           
 24984                           ; BSR set to: 0
 24985   00A21E  1D98               	comf	_setupTimer3$1935& (0+255),w,b
 24986   00A220  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 24987   00A222  1D99               	comf	(_setupTimer3$1935+1)& (0+255),w,b
 24988   00A224  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 24989                           
 24990                           ; BSR set to: 0
 24991                           ;../servo.c: 221:     TMR3H = ticks >> 8;
 24992   00A226  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 24993   00A228  6EB3               	movwf	179,c	;volatile
 24994                           
 24995                           ; BSR set to: 0
 24996                           ;../servo.c: 222:     TMR3L = ticks & 0xFF;
 24997   00A22A  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 24998                           
 24999                           ; BSR set to: 0
 25000                           ;../servo.c: 225:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25001   00A22E  519C               	movf	setupTimer3@io& (0+255),w,b
 25002   00A230  0D07               	mullw	7
 25003   00A232  50F3               	movf	243,w,c
 25004   00A234  0F11               	addlw	17
 25005   00A236  EC52  F05E         	call	_getNV
 25006   00A23A  0100               	movlb	0	; () banked
 25007   00A23C  BB8D               	btfsc	?_getNV& (0+255),5,b
 25008   00A23E  D002               	goto	u22870
 25009   00A240  0E01               	movlw	1
 25010   00A242  D001               	goto	u22880
 25011   00A244                     u22870:
 25012   00A244  0E00               	movlw	0
 25013   00A246                     u22880:
 25014   00A246  6F91               	movwf	setOutputPin@state& (0+255),b
 25015   00A248  519C               	movf	setupTimer3@io& (0+255),w,b
 25016   00A24A  ECAB  F036         	call	_setOutputPin
 25017                           
 25018                           ;../servo.c: 226:     T3CONbits.TMR3ON = 1;
 25019   00A24E  80B1               	bsf	177,0,c	;volatile
 25020   00A250  0012               	return		;funcret
 25021   00A252                     __end_of_setupTimer3:
 25022                           	callstack 0
 25023                           
 25024 ;; *************** function _setupTimer1 *****************
 25025 ;; Defined at:
 25026 ;;		line 206 in file "../servo.c"
 25027 ;; Parameters:    Size  Location     Type
 25028 ;;  io              1    wreg     unsigned char 
 25029 ;; Auto vars:     Size  Location     Type
 25030 ;;  io              1   60[BANK0 ] unsigned char 
 25031 ;;  ticks           2   58[BANK0 ] unsigned short 
 25032 ;; Return value:  Size  Location     Type
 25033 ;;                  1    wreg      void 
 25034 ;; Registers used:
 25035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25036 ;; Tracked objects:
 25037 ;;		On entry : 0/0
 25038 ;;		On exit  : 0/0
 25039 ;;		Unchanged: 0/0
 25040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25042 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25043 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25044 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25045 ;;Total ram usage:        8 bytes
 25046 ;; Hardware stack levels used: 1
 25047 ;; Hardware stack levels required when called: 13
 25048 ;; This function calls:
 25049 ;;		_getNV
 25050 ;;		_setOutputPin
 25051 ;; This function is called by:
 25052 ;;		_startServos
 25053 ;; This function uses a non-reentrant model
 25054 ;;
 25055                           
 25056                           	psect	text99
 25057   00A252                     __ptext99:
 25058                           	callstack 0
 25059   00A252                     _setupTimer1:
 25060                           	callstack 15
 25061                           
 25062                           ;incstack = 0
 25063                           ;setupTimer1@io stored from wreg
 25064   00A252  0100               	movlb	0	; () banked
 25065   00A254  6F9C               	movwf	setupTimer1@io& (0+255),b
 25066                           
 25067                           ;../servo.c: 207:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 25068   00A256  0100               	movlb	0	; () banked
 25069   00A258  519C               	movf	setupTimer1@io& (0+255),w,b
 25070   00A25A  0D07               	mullw	7
 25071   00A25C  50F3               	movf	243,w,c
 25072   00A25E  0F11               	addlw	17
 25073   00A260  EC52  F05E         	call	_getNV
 25074   00A264  0100               	movlb	0	; () banked
 25075   00A266  BF8D               	btfsc	?_getNV& (0+255),7,b
 25076   00A268  D011               	goto	l21928
 25077                           
 25078                           ; BSR set to: 0
 25079   00A26A  519C               	movf	setupTimer1@io& (0+255),w,b
 25080   00A26C  0FA9               	addlw	low _currentPos
 25081   00A26E  6ED9               	movwf	fsr2l,c
 25082   00A270  6ADA               	clrf	fsr2h,c
 25083   00A272  50DF               	movf	indf2,w,c
 25084   00A274  6F95               	movwf	??_setupTimer1& (0+255),b
 25085   00A276  5195               	movf	??_setupTimer1& (0+255),w,b
 25086   00A278  0D13               	mullw	19
 25087   00A27A  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25088   00A27E  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25089   00A282  0E10               	movlw	16
 25090   00A284  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25091   00A286  6F98               	movwf	_setupTimer1$1931& (0+255),b
 25092   00A288  0E0E               	movlw	14
 25093   00A28A  D010               	goto	L5
 25094   00A28C                     l21928:
 25095                           
 25096                           ; BSR set to: 0
 25097   00A28C  519C               	movf	setupTimer1@io& (0+255),w,b
 25098   00A28E  0FA9               	addlw	low _currentPos
 25099   00A290  6ED9               	movwf	fsr2l,c
 25100   00A292  6ADA               	clrf	fsr2h,c
 25101   00A294  50DF               	movf	indf2,w,c
 25102   00A296  6F95               	movwf	??_setupTimer1& (0+255),b
 25103   00A298  5195               	movf	??_setupTimer1& (0+255),w,b
 25104   00A29A  0D24               	mullw	36
 25105   00A29C  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25106   00A2A0  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25107   00A2A4  0E78               	movlw	120
 25108   00A2A6  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25109   00A2A8  6F98               	movwf	_setupTimer1$1931& (0+255),b
 25110   00A2AA  0E05               	movlw	5
 25111   00A2AC                     L5:
 25112   00A2AC  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 25113   00A2AE  6F99               	movwf	(_setupTimer1$1931+1)& (0+255),b
 25114                           
 25115                           ; BSR set to: 0
 25116   00A2B0  1D98               	comf	_setupTimer1$1931& (0+255),w,b
 25117   00A2B2  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 25118   00A2B4  1D99               	comf	(_setupTimer1$1931+1)& (0+255),w,b
 25119   00A2B6  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 25120                           
 25121                           ; BSR set to: 0
 25122                           ;../servo.c: 210:     TMR1H = ticks >> 8;
 25123   00A2B8  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 25124   00A2BA  6ECF               	movwf	207,c	;volatile
 25125                           
 25126                           ; BSR set to: 0
 25127                           ;../servo.c: 211:     TMR1L = ticks & 0xFF;
 25128   00A2BC  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 25129                           
 25130                           ; BSR set to: 0
 25131                           ;../servo.c: 214:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25132   00A2C0  519C               	movf	setupTimer1@io& (0+255),w,b
 25133   00A2C2  0D07               	mullw	7
 25134   00A2C4  50F3               	movf	243,w,c
 25135   00A2C6  0F11               	addlw	17
 25136   00A2C8  EC52  F05E         	call	_getNV
 25137   00A2CC  0100               	movlb	0	; () banked
 25138   00A2CE  BB8D               	btfsc	?_getNV& (0+255),5,b
 25139   00A2D0  D002               	goto	u22840
 25140   00A2D2  0E01               	movlw	1
 25141   00A2D4  D001               	goto	u22850
 25142   00A2D6                     u22840:
 25143   00A2D6  0E00               	movlw	0
 25144   00A2D8                     u22850:
 25145   00A2D8  6F91               	movwf	setOutputPin@state& (0+255),b
 25146   00A2DA  519C               	movf	setupTimer1@io& (0+255),w,b
 25147   00A2DC  ECAB  F036         	call	_setOutputPin
 25148                           
 25149                           ;../servo.c: 215:     T1CONbits.TMR1ON = 1;
 25150   00A2E0  80CD               	bsf	205,0,c	;volatile
 25151   00A2E2  0012               	return		;funcret
 25152   00A2E4                     __end_of_setupTimer1:
 25153                           	callstack 0
 25154                           
 25155 ;; *************** function _pollServos *****************
 25156 ;; Defined at:
 25157 ;;		line 284 in file "../servo.c"
 25158 ;; Parameters:    Size  Location     Type
 25159 ;;		None
 25160 ;; Auto vars:     Size  Location     Type
 25161 ;;  io              1   29[BANK1 ] unsigned char 
 25162 ;;  midway          1   28[BANK1 ] unsigned char 
 25163 ;;  beforeMidway    1   27[BANK1 ] enum E12716
 25164 ;;  target          1   26[BANK1 ] unsigned char 
 25165 ;; Return value:  Size  Location     Type
 25166 ;;                  1    wreg      void 
 25167 ;; Registers used:
 25168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25169 ;; Tracked objects:
 25170 ;;		On entry : 0/0
 25171 ;;		On exit  : 0/0
 25172 ;;		Unchanged: 0/0
 25173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25175 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25176 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25177 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25178 ;;Total ram usage:       12 bytes
 25179 ;; Hardware stack levels used: 1
 25180 ;; Hardware stack levels required when called: 18
 25181 ;; This function calls:
 25182 ;;		___awdiv
 25183 ;;		_bounceDown
 25184 ;;		_bounceUp
 25185 ;;		_getNV
 25186 ;;		_initBounce
 25187 ;;		_sendProducedEvent
 25188 ;;		_tickGet
 25189 ;;		_writeNVM
 25190 ;; This function is called by:
 25191 ;;		_startServos
 25192 ;; This function uses a non-reentrant model
 25193 ;;
 25194                           
 25195                           	psect	text100
 25196   000850                     __ptext100:
 25197                           	callstack 0
 25198   000850                     _pollServos:
 25199                           	callstack 10
 25200                           
 25201                           ;../servo.c: 285:     uint8_t midway;;../servo.c: 286:     Boolean beforeMidway;;../serv
      +                          o.c: 287:     uint8_t io;;../servo.c: 288:     uint8_t target;;../servo.c: 290:     for 
      +                          (io=0; io<16; io++) {
 25202                           
 25203                           ;incstack = 0
 25204   000850  0E00               	movlw	0
 25205   000852  0101               	movlb	1	; () banked
 25206   000854  6FD7               	movwf	pollServos@io& (0+255),b
 25207   000856  EFF0  F00A         	goto	l21878
 25208   00085A                     l21650:
 25209                           
 25210                           ; BSR set to: 0
 25211                           ;../servo.c: 293:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 25212   00085A  0101               	movlb	1	; () banked
 25213   00085C  51D7               	movf	pollServos@io& (0+255),w,b
 25214   00085E  0D07               	mullw	7
 25215   000860  50F3               	movf	243,w,c
 25216   000862  0F12               	addlw	18
 25217   000864  EC52  F05E         	call	_getNV
 25218   000868  0100               	movlb	0	; () banked
 25219   00086A  518D               	movf	?_getNV& (0+255),w,b
 25220   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 25221   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25222   000870  0E00               	movlw	0
 25223   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25224   000874  0E02               	movlw	2
 25225   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 25226   000878  EC1C  F053         	call	___awdiv	;wreg free
 25227   00087C  C097  F1CC         	movff	?___awdiv,??_pollServos
 25228   000880  C098  F1CD         	movff	?___awdiv+1,??_pollServos+1
 25229   000884  0101               	movlb	1	; () banked
 25230   000886  51D7               	movf	pollServos@io& (0+255),w,b
 25231   000888  0D07               	mullw	7
 25232   00088A  50F3               	movf	243,w,c
 25233   00088C  0F13               	addlw	19
 25234   00088E  EC52  F05E         	call	_getNV
 25235   000892  0100               	movlb	0	; () banked
 25236   000894  518D               	movf	?_getNV& (0+255),w,b
 25237   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 25238   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25239   00089A  0E00               	movlw	0
 25240   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25241   00089E  0E02               	movlw	2
 25242   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 25243   0008A2  EC1C  F053         	call	___awdiv	;wreg free
 25244   0008A6  0100               	movlb	0	; () banked
 25245   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 25246   0008AA  0101               	movlb	1	; () banked
 25247   0008AC  25CC               	addwf	??_pollServos& (0+255),w,b
 25248   0008AE  6FD6               	movwf	pollServos@midway& (0+255),b
 25249                           
 25250                           ; BSR set to: 1
 25251                           ;../servo.c: 295:                 beforeMidway=FALSE;
 25252   0008B0  0E00               	movlw	0
 25253   0008B2  6FD5               	movwf	pollServos@beforeMidway& (0+255),b
 25254                           
 25255                           ;../servo.c: 296:                 switch (servoState[io]) {
 25256   0008B4  D239               	goto	l21738
 25257   0008B6                     l21654:
 25258                           
 25259                           ; BSR set to: 1
 25260                           ;../servo.c: 298:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 25261   0008B6  51D7               	movf	pollServos@io& (0+255),w,b
 25262   0008B8  0D07               	mullw	7
 25263   0008BA  50F3               	movf	243,w,c
 25264   0008BC  0F12               	addlw	18
 25265   0008BE  EC52  F05E         	call	_getNV
 25266   0008C2  0101               	movlb	1	; () banked
 25267   0008C4  51D7               	movf	pollServos@io& (0+255),w,b
 25268   0008C6  0FA9               	addlw	low _currentPos
 25269   0008C8  6ED9               	movwf	fsr2l,c
 25270   0008CA  6ADA               	clrf	fsr2h,c
 25271   0008CC  50DF               	movf	indf2,w,c
 25272   0008CE  6FCC               	movwf	??_pollServos& (0+255),b
 25273   0008D0  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25274   0008D2  0100               	movlb	0	; () banked
 25275   0008D4  518D               	movf	?_getNV& (0+255),w,b
 25276   0008D6  0101               	movlb	1	; () banked
 25277   0008D8  19CC               	xorwf	??_pollServos& (0+255),w,b
 25278   0008DA  E118               	bnz	l21658
 25279   0008DC  0100               	movlb	0	; () banked
 25280   0008DE  518E               	movf	(?_getNV+1)& (0+255),w,b
 25281   0008E0  0101               	movlb	1	; () banked
 25282   0008E2  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 25283   0008E4  A4D8               	btfss	status,2,c
 25284   0008E6  D012               	goto	l21658
 25285                           
 25286                           ; BSR set to: 1
 25287                           ;../servo.c: 299:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25288   0008E8  51D7               	movf	pollServos@io& (0+255),w,b
 25289   0008EA  0D07               	mullw	7
 25290   0008EC  50F3               	movf	243,w,c
 25291   0008EE  0F11               	addlw	17
 25292   0008F0  EC52  F05E         	call	_getNV
 25293   0008F4  0100               	movlb	0	; () banked
 25294   0008F6  518D               	movf	?_getNV& (0+255),w,b
 25295   0008F8  0B40               	andlw	64
 25296   0008FA  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25297   0008FC  0101               	movlb	1	; () banked
 25298   0008FE  51D7               	movf	pollServos@io& (0+255),w,b
 25299   000900  0D04               	mullw	4
 25300   000902  50F3               	movf	243,w,c
 25301   000904  0F08               	addlw	8
 25302   000906  EC3B  F04B         	call	_sendProducedEvent
 25303                           
 25304                           ;../servo.c: 300:                         } else {
 25305   00090A  D011               	goto	l21660
 25306   00090C                     l21658:
 25307                           
 25308                           ; BSR set to: 1
 25309                           ;../servo.c: 301:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25310   00090C  51D7               	movf	pollServos@io& (0+255),w,b
 25311   00090E  0D07               	mullw	7
 25312   000910  50F3               	movf	243,w,c
 25313   000912  0F11               	addlw	17
 25314   000914  EC52  F05E         	call	_getNV
 25315   000918  0100               	movlb	0	; () banked
 25316   00091A  518D               	movf	?_getNV& (0+255),w,b
 25317   00091C  0B40               	andlw	64
 25318   00091E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25319   000920  0101               	movlb	1	; () banked
 25320   000922  51D7               	movf	pollServos@io& (0+255),w,b
 25321   000924  0D04               	mullw	4
 25322   000926  50F3               	movf	243,w,c
 25323   000928  0F0A               	addlw	10
 25324   00092A  EC3B  F04B         	call	_sendProducedEvent
 25325   00092E                     l21660:
 25326                           
 25327                           ;../servo.c: 303:                         servoState[io] = SS_MOVING;
 25328   00092E  0E10               	movlw	low _servoState
 25329   000930  0101               	movlb	1	; () banked
 25330   000932  25D7               	addwf	pollServos@io& (0+255),w,b
 25331   000934  6ED9               	movwf	fsr2l,c
 25332   000936  6ADA               	clrf	fsr2h,c
 25333   000938  0E01               	movlw	high _servoState
 25334   00093A  22DA               	addwfc	fsr2h,f,c
 25335   00093C  0E02               	movlw	2
 25336   00093E  6EDF               	movwf	indf2,c
 25337   000940                     l21662:
 25338                           
 25339                           ; BSR set to: 1
 25340                           ;../servo.c: 306:                         if (targetPos[io] > currentPos[io]) {
 25341   000940  0E20               	movlw	low _targetPos
 25342   000942  25D7               	addwf	pollServos@io& (0+255),w,b
 25343   000944  6ED9               	movwf	fsr2l,c
 25344   000946  6ADA               	clrf	fsr2h,c
 25345   000948  0E01               	movlw	high _targetPos
 25346   00094A  22DA               	addwfc	fsr2h,f,c
 25347   00094C  51D7               	movf	pollServos@io& (0+255),w,b
 25348   00094E  0FA9               	addlw	low _currentPos
 25349   000950  6EE1               	movwf	fsr1l,c
 25350   000952  6AE2               	clrf	fsr1h,c
 25351   000954  50DE               	movf	postinc2,w,c
 25352   000956  5CE6               	subwf	postinc1,w,c
 25353   000958  B0D8               	btfsc	status,0,c
 25354   00095A  D0AA               	goto	l21692
 25355                           
 25356                           ; BSR set to: 1
 25357                           ;../servo.c: 307:                             if (currentPos[io] < midway) {
 25358   00095C  51D7               	movf	pollServos@io& (0+255),w,b
 25359   00095E  0FA9               	addlw	low _currentPos
 25360   000960  6ED9               	movwf	fsr2l,c
 25361   000962  6ADA               	clrf	fsr2h,c
 25362   000964  51D6               	movf	pollServos@midway& (0+255),w,b
 25363   000966  5CDE               	subwf	postinc2,w,c
 25364   000968  B0D8               	btfsc	status,0,c
 25365   00096A  D002               	goto	l21668
 25366                           
 25367                           ; BSR set to: 1
 25368                           ;../servo.c: 308:                                 beforeMidway = TRUE;
 25369   00096C  0E01               	movlw	1
 25370   00096E  6FD5               	movwf	pollServos@beforeMidway& (0+255),b
 25371   000970                     l21668:
 25372                           
 25373                           ; BSR set to: 1
 25374                           ;../servo.c: 311:                             if (stepsPerPollSpeed[io]) {
 25375   000970  0E00               	movlw	low _stepsPerPollSpeed
 25376   000972  25D7               	addwf	pollServos@io& (0+255),w,b
 25377   000974  6ED9               	movwf	fsr2l,c
 25378   000976  6ADA               	clrf	fsr2h,c
 25379   000978  0E01               	movlw	high _stepsPerPollSpeed
 25380   00097A  22DA               	addwfc	fsr2h,f,c
 25381   00097C  50DF               	movf	indf2,w,c
 25382   00097E  B4D8               	btfsc	status,2,c
 25383   000980  D03A               	goto	l21676
 25384                           
 25385                           ; BSR set to: 1
 25386                           ;../servo.c: 312:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 25387   000982  51D7               	movf	pollServos@io& (0+255),w,b
 25388   000984  0FA9               	addlw	low _currentPos
 25389   000986  6ED9               	movwf	fsr2l,c
 25390   000988  6ADA               	clrf	fsr2h,c
 25391   00098A  50DF               	movf	indf2,w,c
 25392   00098C  6FCC               	movwf	??_pollServos& (0+255),b
 25393   00098E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25394   000990  51D7               	movf	pollServos@io& (0+255),w,b
 25395   000992  0FA9               	addlw	low _currentPos
 25396   000994  6ED9               	movwf	fsr2l,c
 25397   000996  6ADA               	clrf	fsr2h,c
 25398   000998  50DF               	movf	indf2,w,c
 25399   00099A  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 25400   00099C  6BCF               	clrf	(??_pollServos+3)& (0+255),b
 25401   00099E  0E00               	movlw	low _stepsPerPollSpeed
 25402   0009A0  25D7               	addwf	pollServos@io& (0+255),w,b
 25403   0009A2  6ED9               	movwf	fsr2l,c
 25404   0009A4  6ADA               	clrf	fsr2h,c
 25405   0009A6  0E01               	movlw	high _stepsPerPollSpeed
 25406   0009A8  22DA               	addwfc	fsr2h,f,c
 25407   0009AA  50DF               	movf	indf2,w,c
 25408   0009AC  6FD0               	movwf	(??_pollServos+4)& (0+255),b
 25409   0009AE  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 25410   0009B0  27CE               	addwf	(??_pollServos+2)& (0+255),f,b
 25411   0009B2  0E00               	movlw	0
 25412   0009B4  23CF               	addwfc	(??_pollServos+3)& (0+255),f,b
 25413   0009B6  51CC               	movf	??_pollServos& (0+255),w,b
 25414   0009B8  5DCE               	subwf	(??_pollServos+2)& (0+255),w,b
 25415   0009BA  51CF               	movf	(??_pollServos+3)& (0+255),w,b
 25416   0009BC  0A80               	xorlw	128
 25417   0009BE  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 25418   0009C0  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 25419   0009C2  0A80               	xorlw	128
 25420   0009C4  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 25421   0009C6  B0D8               	btfsc	status,0,c
 25422   0009C8  D007               	goto	l21674
 25423                           
 25424                           ; BSR set to: 1
 25425                           ;../servo.c: 314:                                     currentPos[io] =255;
 25426   0009CA  51D7               	movf	pollServos@io& (0+255),w,b
 25427   0009CC  0FA9               	addlw	low _currentPos
 25428   0009CE  6ED9               	movwf	fsr2l,c
 25429   0009D0  6ADA               	clrf	fsr2h,c
 25430   0009D2  0EFF               	movlw	255
 25431   0009D4  6EDF               	movwf	indf2,c
 25432                           
 25433                           ;../servo.c: 315:                                 } else {
 25434   0009D6  D032               	goto	l21682
 25435   0009D8                     l21674:
 25436                           
 25437                           ; BSR set to: 1
 25438                           ;../servo.c: 316:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25439   0009D8  0E00               	movlw	low _stepsPerPollSpeed
 25440   0009DA  25D7               	addwf	pollServos@io& (0+255),w,b
 25441   0009DC  6ED9               	movwf	fsr2l,c
 25442   0009DE  6ADA               	clrf	fsr2h,c
 25443   0009E0  0E01               	movlw	high _stepsPerPollSpeed
 25444   0009E2  22DA               	addwfc	fsr2h,f,c
 25445   0009E4  50DF               	movf	indf2,w,c
 25446   0009E6  6FCC               	movwf	??_pollServos& (0+255),b
 25447   0009E8  51D7               	movf	pollServos@io& (0+255),w,b
 25448   0009EA  0FA9               	addlw	low _currentPos
 25449   0009EC  6ED9               	movwf	fsr2l,c
 25450   0009EE  6ADA               	clrf	fsr2h,c
 25451   0009F0  51CC               	movf	??_pollServos& (0+255),w,b
 25452   0009F2  26DF               	addwf	indf2,f,c
 25453   0009F4  D023               	goto	l21682
 25454   0009F6                     l21676:
 25455                           
 25456                           ; BSR set to: 1
 25457                           ;../servo.c: 319:                                 pollCount[io]--;
 25458   0009F6  0E64               	movlw	low _pollCount
 25459   0009F8  25D7               	addwf	pollServos@io& (0+255),w,b
 25460   0009FA  6ED9               	movwf	fsr2l,c
 25461   0009FC  6ADA               	clrf	fsr2h,c
 25462   0009FE  0E02               	movlw	high _pollCount
 25463   000A00  22DA               	addwfc	fsr2h,f,c
 25464   000A02  06DF               	decf	indf2,f,c
 25465                           
 25466                           ;../servo.c: 320:                                 if (pollCount[io] == 0) {
 25467   000A04  0E64               	movlw	low _pollCount
 25468   000A06  25D7               	addwf	pollServos@io& (0+255),w,b
 25469   000A08  6ED9               	movwf	fsr2l,c
 25470   000A0A  6ADA               	clrf	fsr2h,c
 25471   000A0C  0E02               	movlw	high _pollCount
 25472   000A0E  22DA               	addwfc	fsr2h,f,c
 25473   000A10  50DF               	movf	indf2,w,c
 25474   000A12  A4D8               	btfss	status,2,c
 25475   000A14  D013               	goto	l21682
 25476                           
 25477                           ; BSR set to: 1
 25478                           ;../servo.c: 321:                                     currentPos[io]++;
 25479   000A16  51D7               	movf	pollServos@io& (0+255),w,b
 25480   000A18  0FA9               	addlw	low _currentPos
 25481   000A1A  6ED9               	movwf	fsr2l,c
 25482   000A1C  6ADA               	clrf	fsr2h,c
 25483   000A1E  2ADF               	incf	indf2,f,c
 25484                           
 25485                           ; BSR set to: 1
 25486                           ;../servo.c: 322:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25487   000A20  0E74               	movlw	low _pollsPerStepSpeed
 25488   000A22  25D7               	addwf	pollServos@io& (0+255),w,b
 25489   000A24  6ED9               	movwf	fsr2l,c
 25490   000A26  6ADA               	clrf	fsr2h,c
 25491   000A28  0E02               	movlw	high _pollsPerStepSpeed
 25492   000A2A  22DA               	addwfc	fsr2h,f,c
 25493   000A2C  0E64               	movlw	low _pollCount
 25494   000A2E  25D7               	addwf	pollServos@io& (0+255),w,b
 25495   000A30  6EE1               	movwf	fsr1l,c
 25496   000A32  6AE2               	clrf	fsr1h,c
 25497   000A34  0E02               	movlw	high _pollCount
 25498   000A36  22E2               	addwfc	fsr1h,f,c
 25499   000A38  CFDF FFE7          	movff	indf2,indf1
 25500   000A3C                     l21682:
 25501                           
 25502                           ; BSR set to: 1
 25503                           ;../servo.c: 326:                             if (currentPos[io] > targetPos[io]) {
 25504   000A3C  51D7               	movf	pollServos@io& (0+255),w,b
 25505   000A3E  0FA9               	addlw	low _currentPos
 25506   000A40  6ED9               	movwf	fsr2l,c
 25507   000A42  6ADA               	clrf	fsr2h,c
 25508   000A44  0E20               	movlw	low _targetPos
 25509   000A46  25D7               	addwf	pollServos@io& (0+255),w,b
 25510   000A48  6EE1               	movwf	fsr1l,c
 25511   000A4A  6AE2               	clrf	fsr1h,c
 25512   000A4C  0E01               	movlw	high _targetPos
 25513   000A4E  22E2               	addwfc	fsr1h,f,c
 25514   000A50  50DE               	movf	postinc2,w,c
 25515   000A52  5CE6               	subwf	postinc1,w,c
 25516   000A54  B0D8               	btfsc	status,0,c
 25517   000A56  D00C               	goto	l21686
 25518                           
 25519                           ; BSR set to: 1
 25520                           ;../servo.c: 327:                                 currentPos[io] = targetPos[io];
 25521   000A58  0E20               	movlw	low _targetPos
 25522   000A5A  25D7               	addwf	pollServos@io& (0+255),w,b
 25523   000A5C  6ED9               	movwf	fsr2l,c
 25524   000A5E  6ADA               	clrf	fsr2h,c
 25525   000A60  0E01               	movlw	high _targetPos
 25526   000A62  22DA               	addwfc	fsr2h,f,c
 25527   000A64  51D7               	movf	pollServos@io& (0+255),w,b
 25528   000A66  0FA9               	addlw	low _currentPos
 25529   000A68  6EE1               	movwf	fsr1l,c
 25530   000A6A  6AE2               	clrf	fsr1h,c
 25531   000A6C  CFDF FFE7          	movff	indf2,indf1
 25532   000A70                     l21686:
 25533                           
 25534                           ; BSR set to: 1
 25535                           ;../servo.c: 329:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 25536   000A70  51D7               	movf	pollServos@io& (0+255),w,b
 25537   000A72  0FA9               	addlw	low _currentPos
 25538   000A74  6ED9               	movwf	fsr2l,c
 25539   000A76  6ADA               	clrf	fsr2h,c
 25540   000A78  51D6               	movf	pollServos@midway& (0+255),w,b
 25541   000A7A  5CDE               	subwf	postinc2,w,c
 25542   000A7C  A0D8               	btfss	status,0,c
 25543   000A7E  D0CB               	goto	l21722
 25544                           
 25545                           ; BSR set to: 1
 25546   000A80  51D5               	movf	pollServos@beforeMidway& (0+255),w,b
 25547   000A82  B4D8               	btfsc	status,2,c
 25548   000A84  D0C8               	goto	l21722
 25549                           
 25550                           ; BSR set to: 1
 25551                           ;../servo.c: 333:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25552   000A86  51D7               	movf	pollServos@io& (0+255),w,b
 25553   000A88  0D07               	mullw	7
 25554   000A8A  50F3               	movf	243,w,c
 25555   000A8C  0F11               	addlw	17
 25556   000A8E  EC52  F05E         	call	_getNV
 25557   000A92  0100               	movlb	0	; () banked
 25558   000A94  BD8D               	btfsc	?_getNV& (0+255),6,b
 25559   000A96  D002               	goto	u22290
 25560   000A98  0E01               	movlw	1
 25561   000A9A  D001               	goto	u22300
 25562   000A9C                     u22290:
 25563   000A9C  0E00               	movlw	0
 25564   000A9E                     u22300:
 25565   000A9E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25566   000AA0  0101               	movlb	1	; () banked
 25567   000AA2  51D7               	movf	pollServos@io& (0+255),w,b
 25568   000AA4  0D04               	mullw	4
 25569   000AA6  50F3               	movf	243,w,c
 25570   000AA8  0F09               	addlw	9
 25571   000AAA  EC3B  F04B         	call	_sendProducedEvent
 25572   000AAE  D0B3               	goto	l21722
 25573   000AB0                     l21692:
 25574                           
 25575                           ; BSR set to: 1
 25576   000AB0  51D7               	movf	pollServos@io& (0+255),w,b
 25577   000AB2  0FA9               	addlw	low _currentPos
 25578   000AB4  6ED9               	movwf	fsr2l,c
 25579   000AB6  6ADA               	clrf	fsr2h,c
 25580   000AB8  0E20               	movlw	low _targetPos
 25581   000ABA  25D7               	addwf	pollServos@io& (0+255),w,b
 25582   000ABC  6EE1               	movwf	fsr1l,c
 25583   000ABE  6AE2               	clrf	fsr1h,c
 25584   000AC0  0E01               	movlw	high _targetPos
 25585   000AC2  22E2               	addwfc	fsr1h,f,c
 25586   000AC4  50DE               	movf	postinc2,w,c
 25587   000AC6  5CE6               	subwf	postinc1,w,c
 25588   000AC8  B0D8               	btfsc	status,0,c
 25589   000ACA  D0A5               	goto	l21722
 25590                           
 25591                           ; BSR set to: 1
 25592                           ;../servo.c: 336:                             if (currentPos[io] > midway) {
 25593   000ACC  51D7               	movf	pollServos@io& (0+255),w,b
 25594   000ACE  0FA9               	addlw	low _currentPos
 25595   000AD0  6ED9               	movwf	fsr2l,c
 25596   000AD2  6ADA               	clrf	fsr2h,c
 25597   000AD4  50DE               	movf	postinc2,w,c
 25598   000AD6  5DD6               	subwf	pollServos@midway& (0+255),w,b
 25599   000AD8  B0D8               	btfsc	status,0,c
 25600   000ADA  D002               	goto	l21698
 25601                           
 25602                           ; BSR set to: 1
 25603                           ;../servo.c: 337:                                 beforeMidway = TRUE;
 25604   000ADC  0E01               	movlw	1
 25605   000ADE  6FD5               	movwf	pollServos@beforeMidway& (0+255),b
 25606   000AE0                     l21698:
 25607                           
 25608                           ; BSR set to: 1
 25609                           ;../servo.c: 340:                             if (stepsPerPollSpeed[io]) {
 25610   000AE0  0E00               	movlw	low _stepsPerPollSpeed
 25611   000AE2  25D7               	addwf	pollServos@io& (0+255),w,b
 25612   000AE4  6ED9               	movwf	fsr2l,c
 25613   000AE6  6ADA               	clrf	fsr2h,c
 25614   000AE8  0E01               	movlw	high _stepsPerPollSpeed
 25615   000AEA  22DA               	addwfc	fsr2h,f,c
 25616   000AEC  50DF               	movf	indf2,w,c
 25617   000AEE  B4D8               	btfsc	status,2,c
 25618   000AF0  D039               	goto	l21706
 25619                           
 25620                           ; BSR set to: 1
 25621                           ;../servo.c: 341:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 25622   000AF2  51D7               	movf	pollServos@io& (0+255),w,b
 25623   000AF4  0FA9               	addlw	low _currentPos
 25624   000AF6  6ED9               	movwf	fsr2l,c
 25625   000AF8  6ADA               	clrf	fsr2h,c
 25626   000AFA  50DF               	movf	indf2,w,c
 25627   000AFC  6FCC               	movwf	??_pollServos& (0+255),b
 25628   000AFE  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25629   000B00  0E00               	movlw	low _stepsPerPollSpeed
 25630   000B02  25D7               	addwf	pollServos@io& (0+255),w,b
 25631   000B04  6ED9               	movwf	fsr2l,c
 25632   000B06  6ADA               	clrf	fsr2h,c
 25633   000B08  0E01               	movlw	high _stepsPerPollSpeed
 25634   000B0A  22DA               	addwfc	fsr2h,f,c
 25635   000B0C  50DF               	movf	indf2,w,c
 25636   000B0E  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 25637   000B10  51CE               	movf	(??_pollServos+2)& (0+255),w,b
 25638   000B12  5FCC               	subwf	??_pollServos& (0+255),f,b
 25639   000B14  0E00               	movlw	0
 25640   000B16  5BCD               	subwfb	(??_pollServos+1)& (0+255),f,b
 25641   000B18  51D7               	movf	pollServos@io& (0+255),w,b
 25642   000B1A  0FA9               	addlw	low _currentPos
 25643   000B1C  6ED9               	movwf	fsr2l,c
 25644   000B1E  6ADA               	clrf	fsr2h,c
 25645   000B20  50DF               	movf	indf2,w,c
 25646   000B22  6FCF               	movwf	(??_pollServos+3)& (0+255),b
 25647   000B24  6BD0               	clrf	(??_pollServos+4)& (0+255),b
 25648   000B26  51CC               	movf	??_pollServos& (0+255),w,b
 25649   000B28  5DCF               	subwf	(??_pollServos+3)& (0+255),w,b
 25650   000B2A  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 25651   000B2C  0A80               	xorlw	128
 25652   000B2E  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 25653   000B30  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 25654   000B32  0A80               	xorlw	128
 25655   000B34  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 25656   000B36  B0D8               	btfsc	status,0,c
 25657   000B38  D006               	goto	l21704
 25658                           
 25659                           ; BSR set to: 1
 25660                           ;../servo.c: 343:                                     currentPos[io] = 0;
 25661   000B3A  51D7               	movf	pollServos@io& (0+255),w,b
 25662   000B3C  0FA9               	addlw	low _currentPos
 25663   000B3E  6ED9               	movwf	fsr2l,c
 25664   000B40  6ADA               	clrf	fsr2h,c
 25665   000B42  6ADF               	clrf	indf2,c
 25666                           
 25667                           ;../servo.c: 344:                                 } else {
 25668   000B44  D032               	goto	l21712
 25669   000B46                     l21704:
 25670                           
 25671                           ; BSR set to: 1
 25672                           ;../servo.c: 345:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25673   000B46  0E00               	movlw	low _stepsPerPollSpeed
 25674   000B48  25D7               	addwf	pollServos@io& (0+255),w,b
 25675   000B4A  6ED9               	movwf	fsr2l,c
 25676   000B4C  6ADA               	clrf	fsr2h,c
 25677   000B4E  0E01               	movlw	high _stepsPerPollSpeed
 25678   000B50  22DA               	addwfc	fsr2h,f,c
 25679   000B52  50DF               	movf	indf2,w,c
 25680   000B54  6FCC               	movwf	??_pollServos& (0+255),b
 25681   000B56  51D7               	movf	pollServos@io& (0+255),w,b
 25682   000B58  0FA9               	addlw	low _currentPos
 25683   000B5A  6ED9               	movwf	fsr2l,c
 25684   000B5C  6ADA               	clrf	fsr2h,c
 25685   000B5E  51CC               	movf	??_pollServos& (0+255),w,b
 25686   000B60  5EDF               	subwf	indf2,f,c
 25687   000B62  D023               	goto	l21712
 25688   000B64                     l21706:
 25689                           
 25690                           ; BSR set to: 1
 25691                           ;../servo.c: 348:                                 pollCount[io]--;
 25692   000B64  0E64               	movlw	low _pollCount
 25693   000B66  25D7               	addwf	pollServos@io& (0+255),w,b
 25694   000B68  6ED9               	movwf	fsr2l,c
 25695   000B6A  6ADA               	clrf	fsr2h,c
 25696   000B6C  0E02               	movlw	high _pollCount
 25697   000B6E  22DA               	addwfc	fsr2h,f,c
 25698   000B70  06DF               	decf	indf2,f,c
 25699                           
 25700                           ;../servo.c: 349:                                 if (pollCount[io] == 0) {
 25701   000B72  0E64               	movlw	low _pollCount
 25702   000B74  25D7               	addwf	pollServos@io& (0+255),w,b
 25703   000B76  6ED9               	movwf	fsr2l,c
 25704   000B78  6ADA               	clrf	fsr2h,c
 25705   000B7A  0E02               	movlw	high _pollCount
 25706   000B7C  22DA               	addwfc	fsr2h,f,c
 25707   000B7E  50DF               	movf	indf2,w,c
 25708   000B80  A4D8               	btfss	status,2,c
 25709   000B82  D013               	goto	l21712
 25710                           
 25711                           ; BSR set to: 1
 25712                           ;../servo.c: 350:                                     currentPos[io]--;
 25713   000B84  51D7               	movf	pollServos@io& (0+255),w,b
 25714   000B86  0FA9               	addlw	low _currentPos
 25715   000B88  6ED9               	movwf	fsr2l,c
 25716   000B8A  6ADA               	clrf	fsr2h,c
 25717   000B8C  06DF               	decf	indf2,f,c
 25718                           
 25719                           ; BSR set to: 1
 25720                           ;../servo.c: 351:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25721   000B8E  0E74               	movlw	low _pollsPerStepSpeed
 25722   000B90  25D7               	addwf	pollServos@io& (0+255),w,b
 25723   000B92  6ED9               	movwf	fsr2l,c
 25724   000B94  6ADA               	clrf	fsr2h,c
 25725   000B96  0E02               	movlw	high _pollsPerStepSpeed
 25726   000B98  22DA               	addwfc	fsr2h,f,c
 25727   000B9A  0E64               	movlw	low _pollCount
 25728   000B9C  25D7               	addwf	pollServos@io& (0+255),w,b
 25729   000B9E  6EE1               	movwf	fsr1l,c
 25730   000BA0  6AE2               	clrf	fsr1h,c
 25731   000BA2  0E02               	movlw	high _pollCount
 25732   000BA4  22E2               	addwfc	fsr1h,f,c
 25733   000BA6  CFDF FFE7          	movff	indf2,indf1
 25734   000BAA                     l21712:
 25735                           
 25736                           ; BSR set to: 1
 25737                           ;../servo.c: 355:                             if (currentPos[io] < targetPos[io]) {
 25738   000BAA  0E20               	movlw	low _targetPos
 25739   000BAC  25D7               	addwf	pollServos@io& (0+255),w,b
 25740   000BAE  6ED9               	movwf	fsr2l,c
 25741   000BB0  6ADA               	clrf	fsr2h,c
 25742   000BB2  0E01               	movlw	high _targetPos
 25743   000BB4  22DA               	addwfc	fsr2h,f,c
 25744   000BB6  51D7               	movf	pollServos@io& (0+255),w,b
 25745   000BB8  0FA9               	addlw	low _currentPos
 25746   000BBA  6EE1               	movwf	fsr1l,c
 25747   000BBC  6AE2               	clrf	fsr1h,c
 25748   000BBE  50DE               	movf	postinc2,w,c
 25749   000BC0  5CE6               	subwf	postinc1,w,c
 25750   000BC2  B0D8               	btfsc	status,0,c
 25751   000BC4  D00C               	goto	l21716
 25752                           
 25753                           ; BSR set to: 1
 25754                           ;../servo.c: 356:                                 currentPos[io] = targetPos[io];
 25755   000BC6  0E20               	movlw	low _targetPos
 25756   000BC8  25D7               	addwf	pollServos@io& (0+255),w,b
 25757   000BCA  6ED9               	movwf	fsr2l,c
 25758   000BCC  6ADA               	clrf	fsr2h,c
 25759   000BCE  0E01               	movlw	high _targetPos
 25760   000BD0  22DA               	addwfc	fsr2h,f,c
 25761   000BD2  51D7               	movf	pollServos@io& (0+255),w,b
 25762   000BD4  0FA9               	addlw	low _currentPos
 25763   000BD6  6EE1               	movwf	fsr1l,c
 25764   000BD8  6AE2               	clrf	fsr1h,c
 25765   000BDA  CFDF FFE7          	movff	indf2,indf1
 25766   000BDE                     l21716:
 25767                           
 25768                           ; BSR set to: 1
 25769                           ;../servo.c: 358:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 25770   000BDE  51D7               	movf	pollServos@io& (0+255),w,b
 25771   000BE0  0FA9               	addlw	low _currentPos
 25772   000BE2  6ED9               	movwf	fsr2l,c
 25773   000BE4  6ADA               	clrf	fsr2h,c
 25774   000BE6  50DE               	movf	postinc2,w,c
 25775   000BE8  5DD6               	subwf	pollServos@midway& (0+255),w,b
 25776   000BEA  A0D8               	btfss	status,0,c
 25777   000BEC  D014               	goto	l21722
 25778                           
 25779                           ; BSR set to: 1
 25780   000BEE  51D5               	movf	pollServos@beforeMidway& (0+255),w,b
 25781   000BF0  B4D8               	btfsc	status,2,c
 25782   000BF2  D011               	goto	l21722
 25783                           
 25784                           ; BSR set to: 1
 25785                           ;../servo.c: 360:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 25786   000BF4  51D7               	movf	pollServos@io& (0+255),w,b
 25787   000BF6  0D07               	mullw	7
 25788   000BF8  50F3               	movf	243,w,c
 25789   000BFA  0F11               	addlw	17
 25790   000BFC  EC52  F05E         	call	_getNV
 25791   000C00  0100               	movlb	0	; () banked
 25792   000C02  518D               	movf	?_getNV& (0+255),w,b
 25793   000C04  0B40               	andlw	64
 25794   000C06  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25795   000C08  0101               	movlb	1	; () banked
 25796   000C0A  51D7               	movf	pollServos@io& (0+255),w,b
 25797   000C0C  0D04               	mullw	4
 25798   000C0E  50F3               	movf	243,w,c
 25799   000C10  0F09               	addlw	9
 25800   000C12  EC3B  F04B         	call	_sendProducedEvent
 25801   000C16                     l21722:
 25802                           
 25803                           ;../servo.c: 363:                         if (targetPos[io] == currentPos[io]) {
 25804   000C16  0101               	movlb	1	; () banked
 25805   000C18  51D7               	movf	pollServos@io& (0+255),w,b
 25806   000C1A  0FA9               	addlw	low _currentPos
 25807   000C1C  6ED9               	movwf	fsr2l,c
 25808   000C1E  6ADA               	clrf	fsr2h,c
 25809   000C20  0E20               	movlw	low _targetPos
 25810   000C22  25D7               	addwf	pollServos@io& (0+255),w,b
 25811   000C24  6EE1               	movwf	fsr1l,c
 25812   000C26  6AE2               	clrf	fsr1h,c
 25813   000C28  0E01               	movlw	high _targetPos
 25814   000C2A  22E2               	addwfc	fsr1h,f,c
 25815   000C2C  50DE               	movf	postinc2,w,c
 25816   000C2E  18E6               	xorwf	postinc1,w,c
 25817   000C30  A4D8               	btfss	status,2,c
 25818   000C32  EF49  F00B         	goto	l21888
 25819                           
 25820                           ; BSR set to: 1
 25821                           ;../servo.c: 364:                             servoState[io] = SS_STOPPED;
 25822   000C36  0E10               	movlw	low _servoState
 25823   000C38  25D7               	addwf	pollServos@io& (0+255),w,b
 25824   000C3A  6ED9               	movwf	fsr2l,c
 25825   000C3C  6ADA               	clrf	fsr2h,c
 25826   000C3E  0E01               	movlw	high _servoState
 25827   000C40  22DA               	addwfc	fsr2h,f,c
 25828   000C42  0E01               	movlw	1
 25829   000C44  6EDF               	movwf	indf2,c
 25830                           
 25831                           ; BSR set to: 1
 25832                           ;../servo.c: 365:                             ticksWhenStopped[io].val = tickGet();
 25833   000C46  ECE4  F05A         	call	_tickGet	;wreg free
 25834   000C4A  0101               	movlb	1	; () banked
 25835   000C4C  51D7               	movf	pollServos@io& (0+255),w,b
 25836   000C4E  0D04               	mullw	4
 25837   000C50  0E88               	movlw	low _ticksWhenStopped
 25838   000C52  24F3               	addwf	243,w,c
 25839   000C54  6ED9               	movwf	fsr2l,c
 25840   000C56  0E03               	movlw	high _ticksWhenStopped
 25841   000C58  20F4               	addwfc	prodh,w,c
 25842   000C5A  6EDA               	movwf	fsr2h,c
 25843   000C5C  0100               	movlb	0	; () banked
 25844   000C5E  C08D  FFDE         	movff	?_tickGet,postinc2
 25845   000C62  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25846   000C66  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25847   000C6A  C090  FFDE         	movff	?_tickGet+3,postinc2
 25848                           
 25849                           ; BSR set to: 0
 25850                           ;../servo.c: 367:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 25851   000C6E  0101               	movlb	1	; () banked
 25852   000C70  51D7               	movf	pollServos@io& (0+255),w,b
 25853   000C72  0D07               	mullw	7
 25854   000C74  50F3               	movf	243,w,c
 25855   000C76  0F12               	addlw	18
 25856   000C78  EC52  F05E         	call	_getNV
 25857   000C7C  0101               	movlb	1	; () banked
 25858   000C7E  51D7               	movf	pollServos@io& (0+255),w,b
 25859   000C80  0FA9               	addlw	low _currentPos
 25860   000C82  6ED9               	movwf	fsr2l,c
 25861   000C84  6ADA               	clrf	fsr2h,c
 25862   000C86  50DF               	movf	indf2,w,c
 25863   000C88  6FCC               	movwf	??_pollServos& (0+255),b
 25864   000C8A  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25865   000C8C  0100               	movlb	0	; () banked
 25866   000C8E  518D               	movf	?_getNV& (0+255),w,b
 25867   000C90  0101               	movlb	1	; () banked
 25868   000C92  19CC               	xorwf	??_pollServos& (0+255),w,b
 25869   000C94  E11B               	bnz	l21732
 25870   000C96  0100               	movlb	0	; () banked
 25871   000C98  518E               	movf	(?_getNV+1)& (0+255),w,b
 25872   000C9A  0101               	movlb	1	; () banked
 25873   000C9C  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 25874   000C9E  A4D8               	btfss	status,2,c
 25875   000CA0  D015               	goto	l21732
 25876                           
 25877                           ; BSR set to: 1
 25878                           ;../servo.c: 368:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25879   000CA2  51D7               	movf	pollServos@io& (0+255),w,b
 25880   000CA4  0D07               	mullw	7
 25881   000CA6  50F3               	movf	243,w,c
 25882   000CA8  0F11               	addlw	17
 25883   000CAA  EC52  F05E         	call	_getNV
 25884   000CAE  0100               	movlb	0	; () banked
 25885   000CB0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25886   000CB2  D002               	goto	u22410
 25887   000CB4  0E01               	movlw	1
 25888   000CB6  D001               	goto	u22420
 25889   000CB8                     u22410:
 25890   000CB8  0E00               	movlw	0
 25891   000CBA                     u22420:
 25892   000CBA  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25893   000CBC  0101               	movlb	1	; () banked
 25894   000CBE  51D7               	movf	pollServos@io& (0+255),w,b
 25895   000CC0  0D04               	mullw	4
 25896   000CC2  50F3               	movf	243,w,c
 25897   000CC4  0F08               	addlw	8
 25898   000CC6  EC3B  F04B         	call	_sendProducedEvent
 25899                           
 25900                           ;../servo.c: 369:                             } else {
 25901   000CCA  D014               	goto	l21734
 25902   000CCC                     l21732:
 25903                           
 25904                           ; BSR set to: 1
 25905                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25906   000CCC  51D7               	movf	pollServos@io& (0+255),w,b
 25907   000CCE  0D07               	mullw	7
 25908   000CD0  50F3               	movf	243,w,c
 25909   000CD2  0F11               	addlw	17
 25910   000CD4  EC52  F05E         	call	_getNV
 25911   000CD8  0100               	movlb	0	; () banked
 25912   000CDA  BD8D               	btfsc	?_getNV& (0+255),6,b
 25913   000CDC  D002               	goto	u22430
 25914   000CDE  0E01               	movlw	1
 25915   000CE0  D001               	goto	u22440
 25916   000CE2                     u22430:
 25917   000CE2  0E00               	movlw	0
 25918   000CE4                     u22440:
 25919   000CE4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25920   000CE6  0101               	movlb	1	; () banked
 25921   000CE8  51D7               	movf	pollServos@io& (0+255),w,b
 25922   000CEA  0D04               	mullw	4
 25923   000CEC  50F3               	movf	243,w,c
 25924   000CEE  0F0A               	addlw	10
 25925   000CF0  EC3B  F04B         	call	_sendProducedEvent
 25926   000CF4                     l21734:
 25927                           
 25928                           ;../servo.c: 372:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25929   000CF4  0EDE               	movlw	222
 25930   000CF6  0101               	movlb	1	; () banked
 25931   000CF8  25D7               	addwf	pollServos@io& (0+255),w,b
 25932   000CFA  6FCC               	movwf	??_pollServos& (0+255),b
 25933   000CFC  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25934   000CFE  0E03               	movlw	3
 25935   000D00  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 25936   000D02  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 25937   000D06  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25938   000D0A  0100               	movlb	0	; () banked
 25939   000D0C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25940   000D0E  0101               	movlb	1	; () banked
 25941   000D10  51D7               	movf	pollServos@io& (0+255),w,b
 25942   000D12  0FA9               	addlw	low _currentPos
 25943   000D14  6ED9               	movwf	fsr2l,c
 25944   000D16  6ADA               	clrf	fsr2h,c
 25945   000D18  50DF               	movf	indf2,w,c
 25946   000D1A  0100               	movlb	0	; () banked
 25947   000D1C  6FA7               	movwf	writeNVM@value& (0+255),b
 25948   000D1E  0E00               	movlw	0
 25949   000D20  EC60  F05C         	call	_writeNVM
 25950   000D24  EF49  F00B         	goto	l21888
 25951   000D28                     l21738:
 25952                           
 25953                           ; BSR set to: 1
 25954   000D28  0E10               	movlw	low _servoState
 25955   000D2A  25D7               	addwf	pollServos@io& (0+255),w,b
 25956   000D2C  6ED9               	movwf	fsr2l,c
 25957   000D2E  6ADA               	clrf	fsr2h,c
 25958   000D30  0E01               	movlw	high _servoState
 25959   000D32  22DA               	addwfc	fsr2h,f,c
 25960   000D34  50DF               	movf	indf2,w,c
 25961   000D36  6FCC               	movwf	??_pollServos& (0+255),b
 25962   000D38  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25963                           
 25964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25965                           ; Switch size 1, requested type "simple"
 25966                           ; Number of cases is 1, Range of values is 0 to 0
 25967                           ; switch strategies available:
 25968                           ; Name         Instructions Cycles
 25969                           ; simple_byte            4     3 (average)
 25970                           ;	Chosen strategy is simple_byte
 25971   000D3A  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 25972   000D3C  0A00               	xorlw	0	; case 0
 25973   000D3E  A4D8               	btfss	status,2,c
 25974   000D40  EF49  F00B         	goto	l21888
 25975                           
 25976                           ; BSR set to: 1
 25977                           ; Switch size 1, requested type "simple"
 25978                           ; Number of cases is 4, Range of values is 0 to 3
 25979                           ; switch strategies available:
 25980                           ; Name         Instructions Cycles
 25981                           ; simple_byte           13     7 (average)
 25982                           ;	Chosen strategy is simple_byte
 25983   000D44  51CC               	movf	??_pollServos& (0+255),w,b
 25984   000D46  0A00               	xorlw	0	; case 0
 25985   000D48  B4D8               	btfsc	status,2,c
 25986   000D4A  EF49  F00B         	goto	l21888
 25987   000D4E  0A01               	xorlw	1	; case 1
 25988   000D50  B4D8               	btfsc	status,2,c
 25989   000D52  EF49  F00B         	goto	l21888
 25990   000D56  0A03               	xorlw	3	; case 2
 25991   000D58  B4D8               	btfsc	status,2,c
 25992   000D5A  D5F2               	goto	l21662
 25993   000D5C  0A01               	xorlw	1	; case 3
 25994   000D5E  B4D8               	btfsc	status,2,c
 25995   000D60  D5AA               	goto	l21654
 25996   000D62  EF49  F00B         	goto	l21888
 25997   000D66                     l21740:
 25998                           
 25999                           ; BSR set to: 1
 26000                           ;../servo.c: 383:                         initBounce(io);
 26001   000D66  51D7               	movf	pollServos@io& (0+255),w,b
 26002   000D68  ECAE  F060         	call	_initBounce
 26003                           
 26004                           ;../servo.c: 384:                         servoState[io] = SS_MOVING;
 26005   000D6C  0E10               	movlw	low _servoState
 26006   000D6E  0101               	movlb	1	; () banked
 26007   000D70  25D7               	addwf	pollServos@io& (0+255),w,b
 26008   000D72  6ED9               	movwf	fsr2l,c
 26009   000D74  6ADA               	clrf	fsr2h,c
 26010   000D76  0E01               	movlw	high _servoState
 26011   000D78  22DA               	addwfc	fsr2h,f,c
 26012   000D7A  0E02               	movlw	2
 26013   000D7C  6EDF               	movwf	indf2,c
 26014                           
 26015                           ; BSR set to: 1
 26016                           ;../servo.c: 385:                         loopCount[io] = 0;
 26017   000D7E  0E54               	movlw	low _loopCount
 26018   000D80  25D7               	addwf	pollServos@io& (0+255),w,b
 26019   000D82  6ED9               	movwf	fsr2l,c
 26020   000D84  6ADA               	clrf	fsr2h,c
 26021   000D86  0E02               	movlw	high _loopCount
 26022   000D88  22DA               	addwfc	fsr2h,f,c
 26023   000D8A  6ADF               	clrf	indf2,c
 26024   000D8C                     l21746:
 26025                           
 26026                           ; BSR set to: 1
 26027                           ;../servo.c: 389:                         loopCount[io]++;
 26028   000D8C  0E54               	movlw	low _loopCount
 26029   000D8E  25D7               	addwf	pollServos@io& (0+255),w,b
 26030   000D90  6ED9               	movwf	fsr2l,c
 26031   000D92  6ADA               	clrf	fsr2h,c
 26032   000D94  0E02               	movlw	high _loopCount
 26033   000D96  22DA               	addwfc	fsr2h,f,c
 26034   000D98  2ADF               	incf	indf2,f,c
 26035                           
 26036                           ; BSR set to: 1
 26037                           ;../servo.c: 390:                         if (loopCount[io] >= 255) {
 26038   000D9A  0E54               	movlw	low _loopCount
 26039   000D9C  25D7               	addwf	pollServos@io& (0+255),w,b
 26040   000D9E  6ED9               	movwf	fsr2l,c
 26041   000DA0  6ADA               	clrf	fsr2h,c
 26042   000DA2  0E02               	movlw	high _loopCount
 26043   000DA4  22DA               	addwfc	fsr2h,f,c
 26044   000DA6  28DE               	incf	postinc2,w,c
 26045   000DA8  A4D8               	btfss	status,2,c
 26046   000DAA  D057               	goto	l21760
 26047                           
 26048                           ; BSR set to: 1
 26049                           ;../servo.c: 391:                             servoState[io] = SS_STOPPED;
 26050   000DAC  0E10               	movlw	low _servoState
 26051   000DAE  25D7               	addwf	pollServos@io& (0+255),w,b
 26052   000DB0  6ED9               	movwf	fsr2l,c
 26053   000DB2  6ADA               	clrf	fsr2h,c
 26054   000DB4  0E01               	movlw	high _servoState
 26055   000DB6  22DA               	addwfc	fsr2h,f,c
 26056   000DB8  0E01               	movlw	1
 26057   000DBA  6EDF               	movwf	indf2,c
 26058                           
 26059                           ; BSR set to: 1
 26060                           ;../servo.c: 392:                             ticksWhenStopped[io].val = tickGet();
 26061   000DBC  ECE4  F05A         	call	_tickGet	;wreg free
 26062   000DC0  0101               	movlb	1	; () banked
 26063   000DC2  51D7               	movf	pollServos@io& (0+255),w,b
 26064   000DC4  0D04               	mullw	4
 26065   000DC6  0E88               	movlw	low _ticksWhenStopped
 26066   000DC8  24F3               	addwf	243,w,c
 26067   000DCA  6ED9               	movwf	fsr2l,c
 26068   000DCC  0E03               	movlw	high _ticksWhenStopped
 26069   000DCE  20F4               	addwfc	prodh,w,c
 26070   000DD0  6EDA               	movwf	fsr2h,c
 26071   000DD2  0100               	movlb	0	; () banked
 26072   000DD4  C08D  FFDE         	movff	?_tickGet,postinc2
 26073   000DD8  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26074   000DDC  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26075   000DE0  C090  FFDE         	movff	?_tickGet+3,postinc2
 26076                           
 26077                           ; BSR set to: 0
 26078                           ;../servo.c: 393:                             currentPos[io] = targetPos[io];
 26079   000DE4  0E20               	movlw	low _targetPos
 26080   000DE6  0101               	movlb	1	; () banked
 26081   000DE8  25D7               	addwf	pollServos@io& (0+255),w,b
 26082   000DEA  6ED9               	movwf	fsr2l,c
 26083   000DEC  6ADA               	clrf	fsr2h,c
 26084   000DEE  0E01               	movlw	high _targetPos
 26085   000DF0  22DA               	addwfc	fsr2h,f,c
 26086   000DF2  51D7               	movf	pollServos@io& (0+255),w,b
 26087   000DF4  0FA9               	addlw	low _currentPos
 26088   000DF6  6EE1               	movwf	fsr1l,c
 26089   000DF8  6AE2               	clrf	fsr1h,c
 26090   000DFA  CFDF FFE7          	movff	indf2,indf1
 26091                           
 26092                           ; BSR set to: 1
 26093                           ;../servo.c: 394:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 26094   000DFE  51D7               	movf	pollServos@io& (0+255),w,b
 26095   000E00  0D07               	mullw	7
 26096   000E02  50F3               	movf	243,w,c
 26097   000E04  0F11               	addlw	17
 26098   000E06  EC52  F05E         	call	_getNV
 26099   000E0A  0100               	movlb	0	; () banked
 26100   000E0C  BD8D               	btfsc	?_getNV& (0+255),6,b
 26101   000E0E  D002               	goto	u22460
 26102   000E10  0E01               	movlw	1
 26103   000E12  D001               	goto	u22470
 26104   000E14                     u22460:
 26105   000E14  0E00               	movlw	0
 26106   000E16                     u22470:
 26107   000E16  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26108   000E18  0101               	movlb	1	; () banked
 26109   000E1A  51D7               	movf	pollServos@io& (0+255),w,b
 26110   000E1C  0D04               	mullw	4
 26111   000E1E  50F3               	movf	243,w,c
 26112   000E20  0F08               	addlw	8
 26113   000E22  EC3B  F04B         	call	_sendProducedEvent
 26114                           
 26115                           ;../servo.c: 395:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26116   000E26  0EDE               	movlw	222
 26117   000E28  0101               	movlb	1	; () banked
 26118   000E2A  25D7               	addwf	pollServos@io& (0+255),w,b
 26119   000E2C  6FCC               	movwf	??_pollServos& (0+255),b
 26120   000E2E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26121   000E30  0E03               	movlw	3
 26122   000E32  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 26123   000E34  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 26124   000E38  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26125   000E3C  0100               	movlb	0	; () banked
 26126   000E3E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26127   000E40  0101               	movlb	1	; () banked
 26128   000E42  51D7               	movf	pollServos@io& (0+255),w,b
 26129   000E44  0FA9               	addlw	low _currentPos
 26130   000E46  6ED9               	movwf	fsr2l,c
 26131   000E48  6ADA               	clrf	fsr2h,c
 26132   000E4A  50DF               	movf	indf2,w,c
 26133   000E4C  0100               	movlb	0	; () banked
 26134   000E4E  6FA7               	movwf	writeNVM@value& (0+255),b
 26135   000E50  0E00               	movlw	0
 26136   000E52  EC60  F05C         	call	_writeNVM
 26137                           
 26138                           ;../servo.c: 396:                             break;
 26139   000E56  EF49  F00B         	goto	l21888
 26140   000E5A                     l21760:
 26141                           
 26142                           ; BSR set to: 1
 26143                           ;../servo.c: 399:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 26144   000E5A  51D7               	movf	pollServos@io& (0+255),w,b
 26145   000E5C  0D07               	mullw	7
 26146   000E5E  50F3               	movf	243,w,c
 26147   000E60  0F12               	addlw	18
 26148   000E62  EC52  F05E         	call	_getNV
 26149   000E66  0100               	movlb	0	; () banked
 26150   000E68  518D               	movf	?_getNV& (0+255),w,b
 26151   000E6A  0101               	movlb	1	; () banked
 26152   000E6C  6FD4               	movwf	pollServos@target& (0+255),b
 26153                           
 26154                           ; BSR set to: 1
 26155                           ;../servo.c: 403:                         if (targetPos[io] == target) {
 26156   000E6E  0E20               	movlw	low _targetPos
 26157   000E70  25D7               	addwf	pollServos@io& (0+255),w,b
 26158   000E72  6ED9               	movwf	fsr2l,c
 26159   000E74  6ADA               	clrf	fsr2h,c
 26160   000E76  0E01               	movlw	high _targetPos
 26161   000E78  22DA               	addwfc	fsr2h,f,c
 26162   000E7A  51D4               	movf	pollServos@target& (0+255),w,b
 26163   000E7C  18DE               	xorwf	postinc2,w,c
 26164   000E7E  A4D8               	btfss	status,2,c
 26165   000E80  D05E               	goto	l21776
 26166                           
 26167                           ; BSR set to: 1
 26168                           ;../servo.c: 404:                             if (bounceUp(io)) {
 26169   000E82  51D7               	movf	pollServos@io& (0+255),w,b
 26170   000E84  EC2C  F02D         	call	_bounceUp
 26171   000E88  0900               	iorlw	0
 26172   000E8A  B4D8               	btfsc	status,2,c
 26173   000E8C  EF49  F00B         	goto	l21888
 26174                           
 26175                           ;../servo.c: 405:                                 servoState[io] = SS_STOPPED;
 26176   000E90  0E10               	movlw	low _servoState
 26177   000E92  0101               	movlb	1	; () banked
 26178   000E94  25D7               	addwf	pollServos@io& (0+255),w,b
 26179   000E96  6ED9               	movwf	fsr2l,c
 26180   000E98  6ADA               	clrf	fsr2h,c
 26181   000E9A  0E01               	movlw	high _servoState
 26182   000E9C  22DA               	addwfc	fsr2h,f,c
 26183   000E9E  0E01               	movlw	1
 26184   000EA0  6EDF               	movwf	indf2,c
 26185                           
 26186                           ; BSR set to: 1
 26187                           ;../servo.c: 406:                                 ticksWhenStopped[io].val = tickGet();
 26188   000EA2  ECE4  F05A         	call	_tickGet	;wreg free
 26189   000EA6  0101               	movlb	1	; () banked
 26190   000EA8  51D7               	movf	pollServos@io& (0+255),w,b
 26191   000EAA  0D04               	mullw	4
 26192   000EAC  0E88               	movlw	low _ticksWhenStopped
 26193   000EAE  24F3               	addwf	243,w,c
 26194   000EB0  6ED9               	movwf	fsr2l,c
 26195   000EB2  0E03               	movlw	high _ticksWhenStopped
 26196   000EB4  20F4               	addwfc	prodh,w,c
 26197   000EB6  6EDA               	movwf	fsr2h,c
 26198   000EB8  0100               	movlb	0	; () banked
 26199   000EBA  C08D  FFDE         	movff	?_tickGet,postinc2
 26200   000EBE  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26201   000EC2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26202   000EC6  C090  FFDE         	movff	?_tickGet+3,postinc2
 26203                           
 26204                           ; BSR set to: 0
 26205                           ;../servo.c: 407:                                 currentPos[io] = targetPos[io];
 26206   000ECA  0E20               	movlw	low _targetPos
 26207   000ECC  0101               	movlb	1	; () banked
 26208   000ECE  25D7               	addwf	pollServos@io& (0+255),w,b
 26209   000ED0  6ED9               	movwf	fsr2l,c
 26210   000ED2  6ADA               	clrf	fsr2h,c
 26211   000ED4  0E01               	movlw	high _targetPos
 26212   000ED6  22DA               	addwfc	fsr2h,f,c
 26213   000ED8  51D7               	movf	pollServos@io& (0+255),w,b
 26214   000EDA  0FA9               	addlw	low _currentPos
 26215   000EDC  6EE1               	movwf	fsr1l,c
 26216   000EDE  6AE2               	clrf	fsr1h,c
 26217   000EE0  CFDF FFE7          	movff	indf2,indf1
 26218                           
 26219                           ; BSR set to: 1
 26220                           ;../servo.c: 408:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26221   000EE4  51D7               	movf	pollServos@io& (0+255),w,b
 26222   000EE6  0D07               	mullw	7
 26223   000EE8  50F3               	movf	243,w,c
 26224   000EEA  0F11               	addlw	17
 26225   000EEC  EC52  F05E         	call	_getNV
 26226   000EF0  0100               	movlb	0	; () banked
 26227   000EF2  BD8D               	btfsc	?_getNV& (0+255),6,b
 26228   000EF4  D002               	goto	u22500
 26229   000EF6  0E01               	movlw	1
 26230   000EF8  D001               	goto	u22510
 26231   000EFA                     u22500:
 26232   000EFA  0E00               	movlw	0
 26233   000EFC                     u22510:
 26234   000EFC  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26235   000EFE  0101               	movlb	1	; () banked
 26236   000F00  51D7               	movf	pollServos@io& (0+255),w,b
 26237   000F02  0D04               	mullw	4
 26238   000F04  50F3               	movf	243,w,c
 26239   000F06  0F08               	addlw	8
 26240   000F08  EC3B  F04B         	call	_sendProducedEvent
 26241                           
 26242                           ;../servo.c: 409:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26243   000F0C  0EDE               	movlw	222
 26244   000F0E  0101               	movlb	1	; () banked
 26245   000F10  25D7               	addwf	pollServos@io& (0+255),w,b
 26246   000F12  6FCC               	movwf	??_pollServos& (0+255),b
 26247   000F14  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26248   000F16  0E03               	movlw	3
 26249   000F18  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 26250   000F1A  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 26251   000F1E  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26252   000F22  0100               	movlb	0	; () banked
 26253   000F24  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26254   000F26  0101               	movlb	1	; () banked
 26255   000F28  51D7               	movf	pollServos@io& (0+255),w,b
 26256   000F2A  0FA9               	addlw	low _currentPos
 26257   000F2C  6ED9               	movwf	fsr2l,c
 26258   000F2E  6ADA               	clrf	fsr2h,c
 26259   000F30  50DF               	movf	indf2,w,c
 26260   000F32  0100               	movlb	0	; () banked
 26261   000F34  6FA7               	movwf	writeNVM@value& (0+255),b
 26262   000F36  0E00               	movlw	0
 26263   000F38  EC60  F05C         	call	_writeNVM
 26264   000F3C  D3AA               	goto	l21888
 26265   000F3E                     l21776:
 26266                           
 26267                           ; BSR set to: 1
 26268                           ;../servo.c: 412:                             if (bounceDown(io)) {
 26269   000F3E  51D7               	movf	pollServos@io& (0+255),w,b
 26270   000F40  EC56  F014         	call	_bounceDown
 26271   000F44  0900               	iorlw	0
 26272   000F46  B4D8               	btfsc	status,2,c
 26273   000F48  D3A4               	goto	l21888
 26274                           
 26275                           ;../servo.c: 413:                                 servoState[io] = SS_STOPPED;
 26276   000F4A  0E10               	movlw	low _servoState
 26277   000F4C  0101               	movlb	1	; () banked
 26278   000F4E  25D7               	addwf	pollServos@io& (0+255),w,b
 26279   000F50  6ED9               	movwf	fsr2l,c
 26280   000F52  6ADA               	clrf	fsr2h,c
 26281   000F54  0E01               	movlw	high _servoState
 26282   000F56  22DA               	addwfc	fsr2h,f,c
 26283   000F58  0E01               	movlw	1
 26284   000F5A  6EDF               	movwf	indf2,c
 26285                           
 26286                           ; BSR set to: 1
 26287                           ;../servo.c: 414:                                 ticksWhenStopped[io].val = tickGet();
 26288   000F5C  ECE4  F05A         	call	_tickGet	;wreg free
 26289   000F60  0101               	movlb	1	; () banked
 26290   000F62  51D7               	movf	pollServos@io& (0+255),w,b
 26291   000F64  0D04               	mullw	4
 26292   000F66  0E88               	movlw	low _ticksWhenStopped
 26293   000F68  24F3               	addwf	243,w,c
 26294   000F6A  6ED9               	movwf	fsr2l,c
 26295   000F6C  0E03               	movlw	high _ticksWhenStopped
 26296   000F6E  20F4               	addwfc	prodh,w,c
 26297   000F70  6EDA               	movwf	fsr2h,c
 26298   000F72  0100               	movlb	0	; () banked
 26299   000F74  C08D  FFDE         	movff	?_tickGet,postinc2
 26300   000F78  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26301   000F7C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26302   000F80  C090  FFDE         	movff	?_tickGet+3,postinc2
 26303                           
 26304                           ; BSR set to: 0
 26305                           ;../servo.c: 415:                                 currentPos[io] = targetPos[io];
 26306   000F84  0E20               	movlw	low _targetPos
 26307   000F86  0101               	movlb	1	; () banked
 26308   000F88  25D7               	addwf	pollServos@io& (0+255),w,b
 26309   000F8A  6ED9               	movwf	fsr2l,c
 26310   000F8C  6ADA               	clrf	fsr2h,c
 26311   000F8E  0E01               	movlw	high _targetPos
 26312   000F90  22DA               	addwfc	fsr2h,f,c
 26313   000F92  51D7               	movf	pollServos@io& (0+255),w,b
 26314   000F94  0FA9               	addlw	low _currentPos
 26315   000F96  6EE1               	movwf	fsr1l,c
 26316   000F98  6AE2               	clrf	fsr1h,c
 26317   000F9A  CFDF FFE7          	movff	indf2,indf1
 26318                           
 26319                           ; BSR set to: 1
 26320                           ;../servo.c: 416:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 26321   000F9E  51D7               	movf	pollServos@io& (0+255),w,b
 26322   000FA0  0D07               	mullw	7
 26323   000FA2  50F3               	movf	243,w,c
 26324   000FA4  0F11               	addlw	17
 26325   000FA6  EC52  F05E         	call	_getNV
 26326   000FAA  0100               	movlb	0	; () banked
 26327   000FAC  518D               	movf	?_getNV& (0+255),w,b
 26328   000FAE  0B40               	andlw	64
 26329   000FB0  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26330   000FB2  0101               	movlb	1	; () banked
 26331   000FB4  51D7               	movf	pollServos@io& (0+255),w,b
 26332   000FB6  0D04               	mullw	4
 26333   000FB8  50F3               	movf	243,w,c
 26334   000FBA  0F08               	addlw	8
 26335   000FBC  EC3B  F04B         	call	_sendProducedEvent
 26336                           
 26337                           ;../servo.c: 417:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26338   000FC0  0EDE               	movlw	222
 26339   000FC2  0101               	movlb	1	; () banked
 26340   000FC4  25D7               	addwf	pollServos@io& (0+255),w,b
 26341   000FC6  6FCC               	movwf	??_pollServos& (0+255),b
 26342   000FC8  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26343   000FCA  0E03               	movlw	3
 26344   000FCC  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 26345   000FCE  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 26346   000FD2  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26347   000FD6  0100               	movlb	0	; () banked
 26348   000FD8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26349   000FDA  0101               	movlb	1	; () banked
 26350   000FDC  51D7               	movf	pollServos@io& (0+255),w,b
 26351   000FDE  0FA9               	addlw	low _currentPos
 26352   000FE0  6ED9               	movwf	fsr2l,c
 26353   000FE2  6ADA               	clrf	fsr2h,c
 26354   000FE4  50DF               	movf	indf2,w,c
 26355   000FE6  0100               	movlb	0	; () banked
 26356   000FE8  6FA7               	movwf	writeNVM@value& (0+255),b
 26357   000FEA  0E00               	movlw	0
 26358   000FEC  EC60  F05C         	call	_writeNVM
 26359   000FF0  D350               	goto	l21888
 26360   000FF2                     l21790:
 26361                           
 26362                           ; BSR set to: 0
 26363   000FF2  0E10               	movlw	low _servoState
 26364   000FF4  0101               	movlb	1	; () banked
 26365   000FF6  25D7               	addwf	pollServos@io& (0+255),w,b
 26366   000FF8  6ED9               	movwf	fsr2l,c
 26367   000FFA  6ADA               	clrf	fsr2h,c
 26368   000FFC  0E01               	movlw	high _servoState
 26369   000FFE  22DA               	addwfc	fsr2h,f,c
 26370   001000  50DF               	movf	indf2,w,c
 26371   001002  6FCC               	movwf	??_pollServos& (0+255),b
 26372   001004  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26373                           
 26374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26375                           ; Switch size 1, requested type "simple"
 26376                           ; Number of cases is 1, Range of values is 0 to 0
 26377                           ; switch strategies available:
 26378                           ; Name         Instructions Cycles
 26379                           ; simple_byte            4     3 (average)
 26380                           ;	Chosen strategy is simple_byte
 26381   001006  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26382   001008  0A00               	xorlw	0	; case 0
 26383   00100A  A4D8               	btfss	status,2,c
 26384   00100C  D342               	goto	l21888
 26385                           
 26386                           ; BSR set to: 1
 26387                           ; Switch size 1, requested type "simple"
 26388                           ; Number of cases is 4, Range of values is 0 to 3
 26389                           ; switch strategies available:
 26390                           ; Name         Instructions Cycles
 26391                           ; simple_byte           13     7 (average)
 26392                           ;	Chosen strategy is simple_byte
 26393   00100E  51CC               	movf	??_pollServos& (0+255),w,b
 26394   001010  0A00               	xorlw	0	; case 0
 26395   001012  B4D8               	btfsc	status,2,c
 26396   001014  D33E               	goto	l21888
 26397   001016  0A01               	xorlw	1	; case 1
 26398   001018  B4D8               	btfsc	status,2,c
 26399   00101A  D33B               	goto	l21888
 26400   00101C  0A03               	xorlw	3	; case 2
 26401   00101E  B4D8               	btfsc	status,2,c
 26402   001020  D6B5               	goto	l21746
 26403   001022  0A01               	xorlw	1	; case 3
 26404   001024  B4D8               	btfsc	status,2,c
 26405   001026  D69F               	goto	l21740
 26406   001028  D334               	goto	l21888
 26407   00102A                     l21792:
 26408                           
 26409                           ; BSR set to: 1
 26410                           ;../servo.c: 429:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 26411   00102A  51D7               	movf	pollServos@io& (0+255),w,b
 26412   00102C  0D07               	mullw	7
 26413   00102E  50F3               	movf	243,w,c
 26414   001030  0F13               	addlw	19
 26415   001032  EC52  F05E         	call	_getNV
 26416   001036  0101               	movlb	1	; () banked
 26417   001038  51D7               	movf	pollServos@io& (0+255),w,b
 26418   00103A  0FA9               	addlw	low _currentPos
 26419   00103C  6ED9               	movwf	fsr2l,c
 26420   00103E  6ADA               	clrf	fsr2h,c
 26421   001040  50DF               	movf	indf2,w,c
 26422   001042  6FCC               	movwf	??_pollServos& (0+255),b
 26423   001044  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26424   001046  0100               	movlb	0	; () banked
 26425   001048  518D               	movf	?_getNV& (0+255),w,b
 26426   00104A  0101               	movlb	1	; () banked
 26427   00104C  19CC               	xorwf	??_pollServos& (0+255),w,b
 26428   00104E  E117               	bnz	l21796
 26429   001050  0100               	movlb	0	; () banked
 26430   001052  518E               	movf	(?_getNV+1)& (0+255),w,b
 26431   001054  0101               	movlb	1	; () banked
 26432   001056  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26433   001058  A4D8               	btfss	status,2,c
 26434   00105A  D011               	goto	l21796
 26435                           
 26436                           ; BSR set to: 1
 26437                           ;../servo.c: 430:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26438   00105C  51D7               	movf	pollServos@io& (0+255),w,b
 26439   00105E  0D07               	mullw	7
 26440   001060  50F3               	movf	243,w,c
 26441   001062  0F11               	addlw	17
 26442   001064  EC52  F05E         	call	_getNV
 26443   001068  0100               	movlb	0	; () banked
 26444   00106A  518D               	movf	?_getNV& (0+255),w,b
 26445   00106C  0B40               	andlw	64
 26446   00106E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26447   001070  0101               	movlb	1	; () banked
 26448   001072  51D7               	movf	pollServos@io& (0+255),w,b
 26449   001074  0D04               	mullw	4
 26450   001076  50F3               	movf	243,w,c
 26451   001078  0F08               	addlw	8
 26452   00107A  EC3B  F04B         	call	_sendProducedEvent
 26453   00107E                     l21796:
 26454                           
 26455                           ;../servo.c: 432:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 26456   00107E  0101               	movlb	1	; () banked
 26457   001080  51D7               	movf	pollServos@io& (0+255),w,b
 26458   001082  0D07               	mullw	7
 26459   001084  50F3               	movf	243,w,c
 26460   001086  0F14               	addlw	20
 26461   001088  EC52  F05E         	call	_getNV
 26462   00108C  0101               	movlb	1	; () banked
 26463   00108E  51D7               	movf	pollServos@io& (0+255),w,b
 26464   001090  0FA9               	addlw	low _currentPos
 26465   001092  6ED9               	movwf	fsr2l,c
 26466   001094  6ADA               	clrf	fsr2h,c
 26467   001096  50DF               	movf	indf2,w,c
 26468   001098  6FCC               	movwf	??_pollServos& (0+255),b
 26469   00109A  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26470   00109C  0100               	movlb	0	; () banked
 26471   00109E  518D               	movf	?_getNV& (0+255),w,b
 26472   0010A0  0101               	movlb	1	; () banked
 26473   0010A2  19CC               	xorwf	??_pollServos& (0+255),w,b
 26474   0010A4  E117               	bnz	l21800
 26475   0010A6  0100               	movlb	0	; () banked
 26476   0010A8  518E               	movf	(?_getNV+1)& (0+255),w,b
 26477   0010AA  0101               	movlb	1	; () banked
 26478   0010AC  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26479   0010AE  A4D8               	btfss	status,2,c
 26480   0010B0  D011               	goto	l21800
 26481                           
 26482                           ; BSR set to: 1
 26483                           ;../servo.c: 433:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26484   0010B2  51D7               	movf	pollServos@io& (0+255),w,b
 26485   0010B4  0D07               	mullw	7
 26486   0010B6  50F3               	movf	243,w,c
 26487   0010B8  0F11               	addlw	17
 26488   0010BA  EC52  F05E         	call	_getNV
 26489   0010BE  0100               	movlb	0	; () banked
 26490   0010C0  518D               	movf	?_getNV& (0+255),w,b
 26491   0010C2  0B40               	andlw	64
 26492   0010C4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26493   0010C6  0101               	movlb	1	; () banked
 26494   0010C8  51D7               	movf	pollServos@io& (0+255),w,b
 26495   0010CA  0D04               	mullw	4
 26496   0010CC  50F3               	movf	243,w,c
 26497   0010CE  0F09               	addlw	9
 26498   0010D0  EC3B  F04B         	call	_sendProducedEvent
 26499   0010D4                     l21800:
 26500                           
 26501                           ;../servo.c: 435:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 26502   0010D4  0101               	movlb	1	; () banked
 26503   0010D6  51D7               	movf	pollServos@io& (0+255),w,b
 26504   0010D8  0D07               	mullw	7
 26505   0010DA  50F3               	movf	243,w,c
 26506   0010DC  0F15               	addlw	21
 26507   0010DE  EC52  F05E         	call	_getNV
 26508   0010E2  0101               	movlb	1	; () banked
 26509   0010E4  51D7               	movf	pollServos@io& (0+255),w,b
 26510   0010E6  0FA9               	addlw	low _currentPos
 26511   0010E8  6ED9               	movwf	fsr2l,c
 26512   0010EA  6ADA               	clrf	fsr2h,c
 26513   0010EC  50DF               	movf	indf2,w,c
 26514   0010EE  6FCC               	movwf	??_pollServos& (0+255),b
 26515   0010F0  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26516   0010F2  0100               	movlb	0	; () banked
 26517   0010F4  518D               	movf	?_getNV& (0+255),w,b
 26518   0010F6  0101               	movlb	1	; () banked
 26519   0010F8  19CC               	xorwf	??_pollServos& (0+255),w,b
 26520   0010FA  E117               	bnz	l21804
 26521   0010FC  0100               	movlb	0	; () banked
 26522   0010FE  518E               	movf	(?_getNV+1)& (0+255),w,b
 26523   001100  0101               	movlb	1	; () banked
 26524   001102  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26525   001104  A4D8               	btfss	status,2,c
 26526   001106  D011               	goto	l21804
 26527                           
 26528                           ; BSR set to: 1
 26529                           ;../servo.c: 436:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26530   001108  51D7               	movf	pollServos@io& (0+255),w,b
 26531   00110A  0D07               	mullw	7
 26532   00110C  50F3               	movf	243,w,c
 26533   00110E  0F11               	addlw	17
 26534   001110  EC52  F05E         	call	_getNV
 26535   001114  0100               	movlb	0	; () banked
 26536   001116  518D               	movf	?_getNV& (0+255),w,b
 26537   001118  0B40               	andlw	64
 26538   00111A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26539   00111C  0101               	movlb	1	; () banked
 26540   00111E  51D7               	movf	pollServos@io& (0+255),w,b
 26541   001120  0D04               	mullw	4
 26542   001122  50F3               	movf	243,w,c
 26543   001124  0F0A               	addlw	10
 26544   001126  EC3B  F04B         	call	_sendProducedEvent
 26545   00112A                     l21804:
 26546                           
 26547                           ;../servo.c: 438:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 26548   00112A  0101               	movlb	1	; () banked
 26549   00112C  51D7               	movf	pollServos@io& (0+255),w,b
 26550   00112E  0D07               	mullw	7
 26551   001130  50F3               	movf	243,w,c
 26552   001132  0F16               	addlw	22
 26553   001134  EC52  F05E         	call	_getNV
 26554   001138  0101               	movlb	1	; () banked
 26555   00113A  51D7               	movf	pollServos@io& (0+255),w,b
 26556   00113C  0FA9               	addlw	low _currentPos
 26557   00113E  6ED9               	movwf	fsr2l,c
 26558   001140  6ADA               	clrf	fsr2h,c
 26559   001142  50DF               	movf	indf2,w,c
 26560   001144  6FCC               	movwf	??_pollServos& (0+255),b
 26561   001146  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26562   001148  0100               	movlb	0	; () banked
 26563   00114A  518D               	movf	?_getNV& (0+255),w,b
 26564   00114C  0101               	movlb	1	; () banked
 26565   00114E  19CC               	xorwf	??_pollServos& (0+255),w,b
 26566   001150  E117               	bnz	l21808
 26567   001152  0100               	movlb	0	; () banked
 26568   001154  518E               	movf	(?_getNV+1)& (0+255),w,b
 26569   001156  0101               	movlb	1	; () banked
 26570   001158  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26571   00115A  A4D8               	btfss	status,2,c
 26572   00115C  D011               	goto	l21808
 26573                           
 26574                           ; BSR set to: 1
 26575                           ;../servo.c: 439:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26576   00115E  51D7               	movf	pollServos@io& (0+255),w,b
 26577   001160  0D07               	mullw	7
 26578   001162  50F3               	movf	243,w,c
 26579   001164  0F11               	addlw	17
 26580   001166  EC52  F05E         	call	_getNV
 26581   00116A  0100               	movlb	0	; () banked
 26582   00116C  518D               	movf	?_getNV& (0+255),w,b
 26583   00116E  0B40               	andlw	64
 26584   001170  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26585   001172  0101               	movlb	1	; () banked
 26586   001174  51D7               	movf	pollServos@io& (0+255),w,b
 26587   001176  0D04               	mullw	4
 26588   001178  50F3               	movf	243,w,c
 26589   00117A  0F0B               	addlw	11
 26590   00117C  EC3B  F04B         	call	_sendProducedEvent
 26591   001180                     l21808:
 26592                           
 26593                           ;../servo.c: 441:                         servoState[io] = SS_MOVING;
 26594   001180  0E10               	movlw	low _servoState
 26595   001182  0101               	movlb	1	; () banked
 26596   001184  25D7               	addwf	pollServos@io& (0+255),w,b
 26597   001186  6ED9               	movwf	fsr2l,c
 26598   001188  6ADA               	clrf	fsr2h,c
 26599   00118A  0E01               	movlw	high _servoState
 26600   00118C  22DA               	addwfc	fsr2h,f,c
 26601   00118E  0E02               	movlw	2
 26602   001190  6EDF               	movwf	indf2,c
 26603   001192                     l21810:
 26604                           
 26605                           ; BSR set to: 1
 26606                           ;../servo.c: 444:                         if (targetPos[io] > currentPos[io]) {
 26607   001192  0E20               	movlw	low _targetPos
 26608   001194  25D7               	addwf	pollServos@io& (0+255),w,b
 26609   001196  6ED9               	movwf	fsr2l,c
 26610   001198  6ADA               	clrf	fsr2h,c
 26611   00119A  0E01               	movlw	high _targetPos
 26612   00119C  22DA               	addwfc	fsr2h,f,c
 26613   00119E  51D7               	movf	pollServos@io& (0+255),w,b
 26614   0011A0  0FA9               	addlw	low _currentPos
 26615   0011A2  6EE1               	movwf	fsr1l,c
 26616   0011A4  6AE2               	clrf	fsr1h,c
 26617   0011A6  50DE               	movf	postinc2,w,c
 26618   0011A8  5CE6               	subwf	postinc1,w,c
 26619   0011AA  B0D8               	btfsc	status,0,c
 26620   0011AC  D081               	goto	l21830
 26621                           
 26622                           ; BSR set to: 1
 26623                           ;../servo.c: 445:                             if (stepsPerPollSpeed[io]) {
 26624   0011AE  0E00               	movlw	low _stepsPerPollSpeed
 26625   0011B0  25D7               	addwf	pollServos@io& (0+255),w,b
 26626   0011B2  6ED9               	movwf	fsr2l,c
 26627   0011B4  6ADA               	clrf	fsr2h,c
 26628   0011B6  0E01               	movlw	high _stepsPerPollSpeed
 26629   0011B8  22DA               	addwfc	fsr2h,f,c
 26630   0011BA  50DF               	movf	indf2,w,c
 26631   0011BC  B4D8               	btfsc	status,2,c
 26632   0011BE  D03A               	goto	l21820
 26633                           
 26634                           ; BSR set to: 1
 26635                           ;../servo.c: 446:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 26636   0011C0  51D7               	movf	pollServos@io& (0+255),w,b
 26637   0011C2  0FA9               	addlw	low _currentPos
 26638   0011C4  6ED9               	movwf	fsr2l,c
 26639   0011C6  6ADA               	clrf	fsr2h,c
 26640   0011C8  50DF               	movf	indf2,w,c
 26641   0011CA  6FCC               	movwf	??_pollServos& (0+255),b
 26642   0011CC  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26643   0011CE  51D7               	movf	pollServos@io& (0+255),w,b
 26644   0011D0  0FA9               	addlw	low _currentPos
 26645   0011D2  6ED9               	movwf	fsr2l,c
 26646   0011D4  6ADA               	clrf	fsr2h,c
 26647   0011D6  50DF               	movf	indf2,w,c
 26648   0011D8  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 26649   0011DA  6BCF               	clrf	(??_pollServos+3)& (0+255),b
 26650   0011DC  0E00               	movlw	low _stepsPerPollSpeed
 26651   0011DE  25D7               	addwf	pollServos@io& (0+255),w,b
 26652   0011E0  6ED9               	movwf	fsr2l,c
 26653   0011E2  6ADA               	clrf	fsr2h,c
 26654   0011E4  0E01               	movlw	high _stepsPerPollSpeed
 26655   0011E6  22DA               	addwfc	fsr2h,f,c
 26656   0011E8  50DF               	movf	indf2,w,c
 26657   0011EA  6FD0               	movwf	(??_pollServos+4)& (0+255),b
 26658   0011EC  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 26659   0011EE  27CE               	addwf	(??_pollServos+2)& (0+255),f,b
 26660   0011F0  0E00               	movlw	0
 26661   0011F2  23CF               	addwfc	(??_pollServos+3)& (0+255),f,b
 26662   0011F4  51CC               	movf	??_pollServos& (0+255),w,b
 26663   0011F6  5DCE               	subwf	(??_pollServos+2)& (0+255),w,b
 26664   0011F8  51CF               	movf	(??_pollServos+3)& (0+255),w,b
 26665   0011FA  0A80               	xorlw	128
 26666   0011FC  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 26667   0011FE  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26668   001200  0A80               	xorlw	128
 26669   001202  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 26670   001204  B0D8               	btfsc	status,0,c
 26671   001206  D007               	goto	l21818
 26672                           
 26673                           ; BSR set to: 1
 26674                           ;../servo.c: 448:                                     currentPos[io] =255;
 26675   001208  51D7               	movf	pollServos@io& (0+255),w,b
 26676   00120A  0FA9               	addlw	low _currentPos
 26677   00120C  6ED9               	movwf	fsr2l,c
 26678   00120E  6ADA               	clrf	fsr2h,c
 26679   001210  0EFF               	movlw	255
 26680   001212  6EDF               	movwf	indf2,c
 26681                           
 26682                           ;../servo.c: 449:                                 } else {
 26683   001214  D032               	goto	l21826
 26684   001216                     l21818:
 26685                           
 26686                           ; BSR set to: 1
 26687                           ;../servo.c: 450:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 26688   001216  0E00               	movlw	low _stepsPerPollSpeed
 26689   001218  25D7               	addwf	pollServos@io& (0+255),w,b
 26690   00121A  6ED9               	movwf	fsr2l,c
 26691   00121C  6ADA               	clrf	fsr2h,c
 26692   00121E  0E01               	movlw	high _stepsPerPollSpeed
 26693   001220  22DA               	addwfc	fsr2h,f,c
 26694   001222  50DF               	movf	indf2,w,c
 26695   001224  6FCC               	movwf	??_pollServos& (0+255),b
 26696   001226  51D7               	movf	pollServos@io& (0+255),w,b
 26697   001228  0FA9               	addlw	low _currentPos
 26698   00122A  6ED9               	movwf	fsr2l,c
 26699   00122C  6ADA               	clrf	fsr2h,c
 26700   00122E  51CC               	movf	??_pollServos& (0+255),w,b
 26701   001230  26DF               	addwf	indf2,f,c
 26702   001232  D023               	goto	l21826
 26703   001234                     l21820:
 26704                           
 26705                           ; BSR set to: 1
 26706                           ;../servo.c: 453:                                 pollCount[io]--;
 26707   001234  0E64               	movlw	low _pollCount
 26708   001236  25D7               	addwf	pollServos@io& (0+255),w,b
 26709   001238  6ED9               	movwf	fsr2l,c
 26710   00123A  6ADA               	clrf	fsr2h,c
 26711   00123C  0E02               	movlw	high _pollCount
 26712   00123E  22DA               	addwfc	fsr2h,f,c
 26713   001240  06DF               	decf	indf2,f,c
 26714                           
 26715                           ;../servo.c: 454:                                 if (pollCount[io] == 0) {
 26716   001242  0E64               	movlw	low _pollCount
 26717   001244  25D7               	addwf	pollServos@io& (0+255),w,b
 26718   001246  6ED9               	movwf	fsr2l,c
 26719   001248  6ADA               	clrf	fsr2h,c
 26720   00124A  0E02               	movlw	high _pollCount
 26721   00124C  22DA               	addwfc	fsr2h,f,c
 26722   00124E  50DF               	movf	indf2,w,c
 26723   001250  A4D8               	btfss	status,2,c
 26724   001252  D013               	goto	l21826
 26725                           
 26726                           ; BSR set to: 1
 26727                           ;../servo.c: 455:                                     currentPos[io]++;
 26728   001254  51D7               	movf	pollServos@io& (0+255),w,b
 26729   001256  0FA9               	addlw	low _currentPos
 26730   001258  6ED9               	movwf	fsr2l,c
 26731   00125A  6ADA               	clrf	fsr2h,c
 26732   00125C  2ADF               	incf	indf2,f,c
 26733                           
 26734                           ; BSR set to: 1
 26735                           ;../servo.c: 456:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26736   00125E  0E74               	movlw	low _pollsPerStepSpeed
 26737   001260  25D7               	addwf	pollServos@io& (0+255),w,b
 26738   001262  6ED9               	movwf	fsr2l,c
 26739   001264  6ADA               	clrf	fsr2h,c
 26740   001266  0E02               	movlw	high _pollsPerStepSpeed
 26741   001268  22DA               	addwfc	fsr2h,f,c
 26742   00126A  0E64               	movlw	low _pollCount
 26743   00126C  25D7               	addwf	pollServos@io& (0+255),w,b
 26744   00126E  6EE1               	movwf	fsr1l,c
 26745   001270  6AE2               	clrf	fsr1h,c
 26746   001272  0E02               	movlw	high _pollCount
 26747   001274  22E2               	addwfc	fsr1h,f,c
 26748   001276  CFDF FFE7          	movff	indf2,indf1
 26749   00127A                     l21826:
 26750                           
 26751                           ; BSR set to: 1
 26752                           ;../servo.c: 459:                             if (currentPos[io] > targetPos[io]) {
 26753   00127A  51D7               	movf	pollServos@io& (0+255),w,b
 26754   00127C  0FA9               	addlw	low _currentPos
 26755   00127E  6ED9               	movwf	fsr2l,c
 26756   001280  6ADA               	clrf	fsr2h,c
 26757   001282  0E20               	movlw	low _targetPos
 26758   001284  25D7               	addwf	pollServos@io& (0+255),w,b
 26759   001286  6EE1               	movwf	fsr1l,c
 26760   001288  6AE2               	clrf	fsr1h,c
 26761   00128A  0E01               	movlw	high _targetPos
 26762   00128C  22E2               	addwfc	fsr1h,f,c
 26763   00128E  50DE               	movf	postinc2,w,c
 26764   001290  5CE6               	subwf	postinc1,w,c
 26765   001292  B0D8               	btfsc	status,0,c
 26766   001294  D08E               	goto	l1096
 26767   001296                     u22610:
 26768                           
 26769                           ; BSR set to: 1
 26770                           ;../servo.c: 460:                                 currentPos[io] = targetPos[io];
 26771   001296  0E20               	movlw	low _targetPos
 26772   001298  25D7               	addwf	pollServos@io& (0+255),w,b
 26773   00129A  6ED9               	movwf	fsr2l,c
 26774   00129C  6ADA               	clrf	fsr2h,c
 26775   00129E  0E01               	movlw	high _targetPos
 26776   0012A0  22DA               	addwfc	fsr2h,f,c
 26777   0012A2  51D7               	movf	pollServos@io& (0+255),w,b
 26778   0012A4  0FA9               	addlw	low _currentPos
 26779   0012A6  6EE1               	movwf	fsr1l,c
 26780   0012A8  6AE2               	clrf	fsr1h,c
 26781   0012AA  CFDF FFE7          	movff	indf2,indf1
 26782   0012AE  D081               	goto	l1096
 26783   0012B0                     l21830:
 26784                           
 26785                           ; BSR set to: 1
 26786   0012B0  51D7               	movf	pollServos@io& (0+255),w,b
 26787   0012B2  0FA9               	addlw	low _currentPos
 26788   0012B4  6ED9               	movwf	fsr2l,c
 26789   0012B6  6ADA               	clrf	fsr2h,c
 26790   0012B8  0E20               	movlw	low _targetPos
 26791   0012BA  25D7               	addwf	pollServos@io& (0+255),w,b
 26792   0012BC  6EE1               	movwf	fsr1l,c
 26793   0012BE  6AE2               	clrf	fsr1h,c
 26794   0012C0  0E01               	movlw	high _targetPos
 26795   0012C2  22E2               	addwfc	fsr1h,f,c
 26796   0012C4  50DE               	movf	postinc2,w,c
 26797   0012C6  5CE6               	subwf	postinc1,w,c
 26798   0012C8  B0D8               	btfsc	status,0,c
 26799   0012CA  D073               	goto	l1096
 26800                           
 26801                           ; BSR set to: 1
 26802                           ;../servo.c: 464:                             if (stepsPerPollSpeed[io]) {
 26803   0012CC  0E00               	movlw	low _stepsPerPollSpeed
 26804   0012CE  25D7               	addwf	pollServos@io& (0+255),w,b
 26805   0012D0  6ED9               	movwf	fsr2l,c
 26806   0012D2  6ADA               	clrf	fsr2h,c
 26807   0012D4  0E01               	movlw	high _stepsPerPollSpeed
 26808   0012D6  22DA               	addwfc	fsr2h,f,c
 26809   0012D8  50DF               	movf	indf2,w,c
 26810   0012DA  B4D8               	btfsc	status,2,c
 26811   0012DC  D039               	goto	l21840
 26812                           
 26813                           ; BSR set to: 1
 26814                           ;../servo.c: 465:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 26815   0012DE  51D7               	movf	pollServos@io& (0+255),w,b
 26816   0012E0  0FA9               	addlw	low _currentPos
 26817   0012E2  6ED9               	movwf	fsr2l,c
 26818   0012E4  6ADA               	clrf	fsr2h,c
 26819   0012E6  50DF               	movf	indf2,w,c
 26820   0012E8  6FCC               	movwf	??_pollServos& (0+255),b
 26821   0012EA  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26822   0012EC  0E00               	movlw	low _stepsPerPollSpeed
 26823   0012EE  25D7               	addwf	pollServos@io& (0+255),w,b
 26824   0012F0  6ED9               	movwf	fsr2l,c
 26825   0012F2  6ADA               	clrf	fsr2h,c
 26826   0012F4  0E01               	movlw	high _stepsPerPollSpeed
 26827   0012F6  22DA               	addwfc	fsr2h,f,c
 26828   0012F8  50DF               	movf	indf2,w,c
 26829   0012FA  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 26830   0012FC  51CE               	movf	(??_pollServos+2)& (0+255),w,b
 26831   0012FE  5FCC               	subwf	??_pollServos& (0+255),f,b
 26832   001300  0E00               	movlw	0
 26833   001302  5BCD               	subwfb	(??_pollServos+1)& (0+255),f,b
 26834   001304  51D7               	movf	pollServos@io& (0+255),w,b
 26835   001306  0FA9               	addlw	low _currentPos
 26836   001308  6ED9               	movwf	fsr2l,c
 26837   00130A  6ADA               	clrf	fsr2h,c
 26838   00130C  50DF               	movf	indf2,w,c
 26839   00130E  6FCF               	movwf	(??_pollServos+3)& (0+255),b
 26840   001310  6BD0               	clrf	(??_pollServos+4)& (0+255),b
 26841   001312  51CC               	movf	??_pollServos& (0+255),w,b
 26842   001314  5DCF               	subwf	(??_pollServos+3)& (0+255),w,b
 26843   001316  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 26844   001318  0A80               	xorlw	128
 26845   00131A  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 26846   00131C  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26847   00131E  0A80               	xorlw	128
 26848   001320  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 26849   001322  B0D8               	btfsc	status,0,c
 26850   001324  D006               	goto	l21838
 26851                           
 26852                           ; BSR set to: 1
 26853                           ;../servo.c: 467:                                     currentPos[io] = 0;
 26854   001326  51D7               	movf	pollServos@io& (0+255),w,b
 26855   001328  0FA9               	addlw	low _currentPos
 26856   00132A  6ED9               	movwf	fsr2l,c
 26857   00132C  6ADA               	clrf	fsr2h,c
 26858   00132E  6ADF               	clrf	indf2,c
 26859                           
 26860                           ;../servo.c: 468:                                 } else {
 26861   001330  D032               	goto	l21846
 26862   001332                     l21838:
 26863                           
 26864                           ; BSR set to: 1
 26865                           ;../servo.c: 469:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 26866   001332  0E00               	movlw	low _stepsPerPollSpeed
 26867   001334  25D7               	addwf	pollServos@io& (0+255),w,b
 26868   001336  6ED9               	movwf	fsr2l,c
 26869   001338  6ADA               	clrf	fsr2h,c
 26870   00133A  0E01               	movlw	high _stepsPerPollSpeed
 26871   00133C  22DA               	addwfc	fsr2h,f,c
 26872   00133E  50DF               	movf	indf2,w,c
 26873   001340  6FCC               	movwf	??_pollServos& (0+255),b
 26874   001342  51D7               	movf	pollServos@io& (0+255),w,b
 26875   001344  0FA9               	addlw	low _currentPos
 26876   001346  6ED9               	movwf	fsr2l,c
 26877   001348  6ADA               	clrf	fsr2h,c
 26878   00134A  51CC               	movf	??_pollServos& (0+255),w,b
 26879   00134C  5EDF               	subwf	indf2,f,c
 26880   00134E  D023               	goto	l21846
 26881   001350                     l21840:
 26882                           
 26883                           ; BSR set to: 1
 26884                           ;../servo.c: 472:                                 pollCount[io]--;
 26885   001350  0E64               	movlw	low _pollCount
 26886   001352  25D7               	addwf	pollServos@io& (0+255),w,b
 26887   001354  6ED9               	movwf	fsr2l,c
 26888   001356  6ADA               	clrf	fsr2h,c
 26889   001358  0E02               	movlw	high _pollCount
 26890   00135A  22DA               	addwfc	fsr2h,f,c
 26891   00135C  06DF               	decf	indf2,f,c
 26892                           
 26893                           ;../servo.c: 473:                                 if (pollCount[io] == 0) {
 26894   00135E  0E64               	movlw	low _pollCount
 26895   001360  25D7               	addwf	pollServos@io& (0+255),w,b
 26896   001362  6ED9               	movwf	fsr2l,c
 26897   001364  6ADA               	clrf	fsr2h,c
 26898   001366  0E02               	movlw	high _pollCount
 26899   001368  22DA               	addwfc	fsr2h,f,c
 26900   00136A  50DF               	movf	indf2,w,c
 26901   00136C  A4D8               	btfss	status,2,c
 26902   00136E  D013               	goto	l21846
 26903                           
 26904                           ; BSR set to: 1
 26905                           ;../servo.c: 474:                                     currentPos[io]--;
 26906   001370  51D7               	movf	pollServos@io& (0+255),w,b
 26907   001372  0FA9               	addlw	low _currentPos
 26908   001374  6ED9               	movwf	fsr2l,c
 26909   001376  6ADA               	clrf	fsr2h,c
 26910   001378  06DF               	decf	indf2,f,c
 26911                           
 26912                           ; BSR set to: 1
 26913                           ;../servo.c: 475:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26914   00137A  0E74               	movlw	low _pollsPerStepSpeed
 26915   00137C  25D7               	addwf	pollServos@io& (0+255),w,b
 26916   00137E  6ED9               	movwf	fsr2l,c
 26917   001380  6ADA               	clrf	fsr2h,c
 26918   001382  0E02               	movlw	high _pollsPerStepSpeed
 26919   001384  22DA               	addwfc	fsr2h,f,c
 26920   001386  0E64               	movlw	low _pollCount
 26921   001388  25D7               	addwf	pollServos@io& (0+255),w,b
 26922   00138A  6EE1               	movwf	fsr1l,c
 26923   00138C  6AE2               	clrf	fsr1h,c
 26924   00138E  0E02               	movlw	high _pollCount
 26925   001390  22E2               	addwfc	fsr1h,f,c
 26926   001392  CFDF FFE7          	movff	indf2,indf1
 26927   001396                     l21846:
 26928                           
 26929                           ; BSR set to: 1
 26930                           ;../servo.c: 478:                             if (currentPos[io] < targetPos[io]) {
 26931   001396  0E20               	movlw	low _targetPos
 26932   001398  25D7               	addwf	pollServos@io& (0+255),w,b
 26933   00139A  6ED9               	movwf	fsr2l,c
 26934   00139C  6ADA               	clrf	fsr2h,c
 26935   00139E  0E01               	movlw	high _targetPos
 26936   0013A0  22DA               	addwfc	fsr2h,f,c
 26937   0013A2  51D7               	movf	pollServos@io& (0+255),w,b
 26938   0013A4  0FA9               	addlw	low _currentPos
 26939   0013A6  6EE1               	movwf	fsr1l,c
 26940   0013A8  6AE2               	clrf	fsr1h,c
 26941   0013AA  50DE               	movf	postinc2,w,c
 26942   0013AC  5CE6               	subwf	postinc1,w,c
 26943   0013AE  A0D8               	btfss	status,0,c
 26944   0013B0  D772               	goto	u22610
 26945   0013B2                     l1096:
 26946                           
 26947                           ; BSR set to: 1
 26948                           ;../servo.c: 482:                         if (targetPos[io] == currentPos[io]) {
 26949   0013B2  51D7               	movf	pollServos@io& (0+255),w,b
 26950   0013B4  0FA9               	addlw	low _currentPos
 26951   0013B6  6ED9               	movwf	fsr2l,c
 26952   0013B8  6ADA               	clrf	fsr2h,c
 26953   0013BA  0E20               	movlw	low _targetPos
 26954   0013BC  25D7               	addwf	pollServos@io& (0+255),w,b
 26955   0013BE  6EE1               	movwf	fsr1l,c
 26956   0013C0  6AE2               	clrf	fsr1h,c
 26957   0013C2  0E01               	movlw	high _targetPos
 26958   0013C4  22E2               	addwfc	fsr1h,f,c
 26959   0013C6  50DE               	movf	postinc2,w,c
 26960   0013C8  18E6               	xorwf	postinc1,w,c
 26961   0013CA  A4D8               	btfss	status,2,c
 26962   0013CC  D162               	goto	l21888
 26963                           
 26964                           ; BSR set to: 1
 26965                           ;../servo.c: 483:                             servoState[io] = SS_STOPPED;
 26966   0013CE  0E10               	movlw	low _servoState
 26967   0013D0  25D7               	addwf	pollServos@io& (0+255),w,b
 26968   0013D2  6ED9               	movwf	fsr2l,c
 26969   0013D4  6ADA               	clrf	fsr2h,c
 26970   0013D6  0E01               	movlw	high _servoState
 26971   0013D8  22DA               	addwfc	fsr2h,f,c
 26972   0013DA  0E01               	movlw	1
 26973   0013DC  6EDF               	movwf	indf2,c
 26974                           
 26975                           ; BSR set to: 1
 26976                           ;../servo.c: 484:                             ticksWhenStopped[io].val = tickGet();
 26977   0013DE  ECE4  F05A         	call	_tickGet	;wreg free
 26978   0013E2  0101               	movlb	1	; () banked
 26979   0013E4  51D7               	movf	pollServos@io& (0+255),w,b
 26980   0013E6  0D04               	mullw	4
 26981   0013E8  0E88               	movlw	low _ticksWhenStopped
 26982   0013EA  24F3               	addwf	243,w,c
 26983   0013EC  6ED9               	movwf	fsr2l,c
 26984   0013EE  0E03               	movlw	high _ticksWhenStopped
 26985   0013F0  20F4               	addwfc	prodh,w,c
 26986   0013F2  6EDA               	movwf	fsr2h,c
 26987   0013F4  0100               	movlb	0	; () banked
 26988   0013F6  C08D  FFDE         	movff	?_tickGet,postinc2
 26989   0013FA  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26990   0013FE  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26991   001402  C090  FFDE         	movff	?_tickGet+3,postinc2
 26992                           
 26993                           ; BSR set to: 0
 26994                           ;../servo.c: 486:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 26995   001406  0101               	movlb	1	; () banked
 26996   001408  51D7               	movf	pollServos@io& (0+255),w,b
 26997   00140A  0D07               	mullw	7
 26998   00140C  50F3               	movf	243,w,c
 26999   00140E  0F13               	addlw	19
 27000   001410  EC52  F05E         	call	_getNV
 27001   001414  0101               	movlb	1	; () banked
 27002   001416  51D7               	movf	pollServos@io& (0+255),w,b
 27003   001418  0FA9               	addlw	low _currentPos
 27004   00141A  6ED9               	movwf	fsr2l,c
 27005   00141C  6ADA               	clrf	fsr2h,c
 27006   00141E  50DF               	movf	indf2,w,c
 27007   001420  6FCC               	movwf	??_pollServos& (0+255),b
 27008   001422  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27009   001424  0100               	movlb	0	; () banked
 27010   001426  518D               	movf	?_getNV& (0+255),w,b
 27011   001428  0101               	movlb	1	; () banked
 27012   00142A  19CC               	xorwf	??_pollServos& (0+255),w,b
 27013   00142C  E11A               	bnz	l21858
 27014   00142E  0100               	movlb	0	; () banked
 27015   001430  518E               	movf	(?_getNV+1)& (0+255),w,b
 27016   001432  0101               	movlb	1	; () banked
 27017   001434  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 27018   001436  A4D8               	btfss	status,2,c
 27019   001438  D014               	goto	l21858
 27020                           
 27021                           ; BSR set to: 1
 27022                           ;../servo.c: 487:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27023   00143A  51D7               	movf	pollServos@io& (0+255),w,b
 27024   00143C  0D07               	mullw	7
 27025   00143E  50F3               	movf	243,w,c
 27026   001440  0F11               	addlw	17
 27027   001442  EC52  F05E         	call	_getNV
 27028   001446  0100               	movlb	0	; () banked
 27029   001448  BD8D               	btfsc	?_getNV& (0+255),6,b
 27030   00144A  D002               	goto	u22690
 27031   00144C  0E01               	movlw	1
 27032   00144E  D001               	goto	u22700
 27033   001450                     u22690:
 27034   001450  0E00               	movlw	0
 27035   001452                     u22700:
 27036   001452  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27037   001454  0101               	movlb	1	; () banked
 27038   001456  51D7               	movf	pollServos@io& (0+255),w,b
 27039   001458  0D04               	mullw	4
 27040   00145A  50F3               	movf	243,w,c
 27041   00145C  0F08               	addlw	8
 27042   00145E  EC3B  F04B         	call	_sendProducedEvent
 27043   001462                     l21858:
 27044                           
 27045                           ;../servo.c: 489:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 27046   001462  0101               	movlb	1	; () banked
 27047   001464  51D7               	movf	pollServos@io& (0+255),w,b
 27048   001466  0D07               	mullw	7
 27049   001468  50F3               	movf	243,w,c
 27050   00146A  0F14               	addlw	20
 27051   00146C  EC52  F05E         	call	_getNV
 27052   001470  0101               	movlb	1	; () banked
 27053   001472  51D7               	movf	pollServos@io& (0+255),w,b
 27054   001474  0FA9               	addlw	low _currentPos
 27055   001476  6ED9               	movwf	fsr2l,c
 27056   001478  6ADA               	clrf	fsr2h,c
 27057   00147A  50DF               	movf	indf2,w,c
 27058   00147C  6FCC               	movwf	??_pollServos& (0+255),b
 27059   00147E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27060   001480  0100               	movlb	0	; () banked
 27061   001482  518D               	movf	?_getNV& (0+255),w,b
 27062   001484  0101               	movlb	1	; () banked
 27063   001486  19CC               	xorwf	??_pollServos& (0+255),w,b
 27064   001488  E11A               	bnz	l21862
 27065   00148A  0100               	movlb	0	; () banked
 27066   00148C  518E               	movf	(?_getNV+1)& (0+255),w,b
 27067   00148E  0101               	movlb	1	; () banked
 27068   001490  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 27069   001492  A4D8               	btfss	status,2,c
 27070   001494  D014               	goto	l21862
 27071                           
 27072                           ; BSR set to: 1
 27073                           ;../servo.c: 490:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27074   001496  51D7               	movf	pollServos@io& (0+255),w,b
 27075   001498  0D07               	mullw	7
 27076   00149A  50F3               	movf	243,w,c
 27077   00149C  0F11               	addlw	17
 27078   00149E  EC52  F05E         	call	_getNV
 27079   0014A2  0100               	movlb	0	; () banked
 27080   0014A4  BD8D               	btfsc	?_getNV& (0+255),6,b
 27081   0014A6  D002               	goto	u22720
 27082   0014A8  0E01               	movlw	1
 27083   0014AA  D001               	goto	u22730
 27084   0014AC                     u22720:
 27085   0014AC  0E00               	movlw	0
 27086   0014AE                     u22730:
 27087   0014AE  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27088   0014B0  0101               	movlb	1	; () banked
 27089   0014B2  51D7               	movf	pollServos@io& (0+255),w,b
 27090   0014B4  0D04               	mullw	4
 27091   0014B6  50F3               	movf	243,w,c
 27092   0014B8  0F09               	addlw	9
 27093   0014BA  EC3B  F04B         	call	_sendProducedEvent
 27094   0014BE                     l21862:
 27095                           
 27096                           ;../servo.c: 492:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 27097   0014BE  0101               	movlb	1	; () banked
 27098   0014C0  51D7               	movf	pollServos@io& (0+255),w,b
 27099   0014C2  0D07               	mullw	7
 27100   0014C4  50F3               	movf	243,w,c
 27101   0014C6  0F15               	addlw	21
 27102   0014C8  EC52  F05E         	call	_getNV
 27103   0014CC  0101               	movlb	1	; () banked
 27104   0014CE  51D7               	movf	pollServos@io& (0+255),w,b
 27105   0014D0  0FA9               	addlw	low _currentPos
 27106   0014D2  6ED9               	movwf	fsr2l,c
 27107   0014D4  6ADA               	clrf	fsr2h,c
 27108   0014D6  50DF               	movf	indf2,w,c
 27109   0014D8  6FCC               	movwf	??_pollServos& (0+255),b
 27110   0014DA  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27111   0014DC  0100               	movlb	0	; () banked
 27112   0014DE  518D               	movf	?_getNV& (0+255),w,b
 27113   0014E0  0101               	movlb	1	; () banked
 27114   0014E2  19CC               	xorwf	??_pollServos& (0+255),w,b
 27115   0014E4  E11A               	bnz	l21866
 27116   0014E6  0100               	movlb	0	; () banked
 27117   0014E8  518E               	movf	(?_getNV+1)& (0+255),w,b
 27118   0014EA  0101               	movlb	1	; () banked
 27119   0014EC  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 27120   0014EE  A4D8               	btfss	status,2,c
 27121   0014F0  D014               	goto	l21866
 27122                           
 27123                           ; BSR set to: 1
 27124                           ;../servo.c: 493:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27125   0014F2  51D7               	movf	pollServos@io& (0+255),w,b
 27126   0014F4  0D07               	mullw	7
 27127   0014F6  50F3               	movf	243,w,c
 27128   0014F8  0F11               	addlw	17
 27129   0014FA  EC52  F05E         	call	_getNV
 27130   0014FE  0100               	movlb	0	; () banked
 27131   001500  BD8D               	btfsc	?_getNV& (0+255),6,b
 27132   001502  D002               	goto	u22750
 27133   001504  0E01               	movlw	1
 27134   001506  D001               	goto	u22760
 27135   001508                     u22750:
 27136   001508  0E00               	movlw	0
 27137   00150A                     u22760:
 27138   00150A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27139   00150C  0101               	movlb	1	; () banked
 27140   00150E  51D7               	movf	pollServos@io& (0+255),w,b
 27141   001510  0D04               	mullw	4
 27142   001512  50F3               	movf	243,w,c
 27143   001514  0F0A               	addlw	10
 27144   001516  EC3B  F04B         	call	_sendProducedEvent
 27145   00151A                     l21866:
 27146                           
 27147                           ;../servo.c: 495:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 27148   00151A  0101               	movlb	1	; () banked
 27149   00151C  51D7               	movf	pollServos@io& (0+255),w,b
 27150   00151E  0D07               	mullw	7
 27151   001520  50F3               	movf	243,w,c
 27152   001522  0F16               	addlw	22
 27153   001524  EC52  F05E         	call	_getNV
 27154   001528  0101               	movlb	1	; () banked
 27155   00152A  51D7               	movf	pollServos@io& (0+255),w,b
 27156   00152C  0FA9               	addlw	low _currentPos
 27157   00152E  6ED9               	movwf	fsr2l,c
 27158   001530  6ADA               	clrf	fsr2h,c
 27159   001532  50DF               	movf	indf2,w,c
 27160   001534  6FCC               	movwf	??_pollServos& (0+255),b
 27161   001536  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27162   001538  0100               	movlb	0	; () banked
 27163   00153A  518D               	movf	?_getNV& (0+255),w,b
 27164   00153C  0101               	movlb	1	; () banked
 27165   00153E  19CC               	xorwf	??_pollServos& (0+255),w,b
 27166   001540  E11A               	bnz	l21870
 27167   001542  0100               	movlb	0	; () banked
 27168   001544  518E               	movf	(?_getNV+1)& (0+255),w,b
 27169   001546  0101               	movlb	1	; () banked
 27170   001548  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 27171   00154A  A4D8               	btfss	status,2,c
 27172   00154C  D014               	goto	l21870
 27173                           
 27174                           ; BSR set to: 1
 27175                           ;../servo.c: 496:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27176   00154E  51D7               	movf	pollServos@io& (0+255),w,b
 27177   001550  0D07               	mullw	7
 27178   001552  50F3               	movf	243,w,c
 27179   001554  0F11               	addlw	17
 27180   001556  EC52  F05E         	call	_getNV
 27181   00155A  0100               	movlb	0	; () banked
 27182   00155C  BD8D               	btfsc	?_getNV& (0+255),6,b
 27183   00155E  D002               	goto	u22780
 27184   001560  0E01               	movlw	1
 27185   001562  D001               	goto	u22790
 27186   001564                     u22780:
 27187   001564  0E00               	movlw	0
 27188   001566                     u22790:
 27189   001566  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27190   001568  0101               	movlb	1	; () banked
 27191   00156A  51D7               	movf	pollServos@io& (0+255),w,b
 27192   00156C  0D04               	mullw	4
 27193   00156E  50F3               	movf	243,w,c
 27194   001570  0F0B               	addlw	11
 27195   001572  EC3B  F04B         	call	_sendProducedEvent
 27196   001576                     l21870:
 27197                           
 27198                           ;../servo.c: 498:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 27199   001576  0EDE               	movlw	222
 27200   001578  0101               	movlb	1	; () banked
 27201   00157A  25D7               	addwf	pollServos@io& (0+255),w,b
 27202   00157C  6FCC               	movwf	??_pollServos& (0+255),b
 27203   00157E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27204   001580  0E03               	movlw	3
 27205   001582  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 27206   001584  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 27207   001588  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 27208   00158C  0100               	movlb	0	; () banked
 27209   00158E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 27210   001590  0101               	movlb	1	; () banked
 27211   001592  51D7               	movf	pollServos@io& (0+255),w,b
 27212   001594  0FA9               	addlw	low _currentPos
 27213   001596  6ED9               	movwf	fsr2l,c
 27214   001598  6ADA               	clrf	fsr2h,c
 27215   00159A  50DF               	movf	indf2,w,c
 27216   00159C  0100               	movlb	0	; () banked
 27217   00159E  6FA7               	movwf	writeNVM@value& (0+255),b
 27218   0015A0  0E00               	movlw	0
 27219   0015A2  EC60  F05C         	call	_writeNVM
 27220   0015A6  D075               	goto	l21888
 27221   0015A8                     l21874:
 27222                           
 27223                           ; BSR set to: 0
 27224   0015A8  0E10               	movlw	low _servoState
 27225   0015AA  0101               	movlb	1	; () banked
 27226   0015AC  25D7               	addwf	pollServos@io& (0+255),w,b
 27227   0015AE  6ED9               	movwf	fsr2l,c
 27228   0015B0  6ADA               	clrf	fsr2h,c
 27229   0015B2  0E01               	movlw	high _servoState
 27230   0015B4  22DA               	addwfc	fsr2h,f,c
 27231   0015B6  50DF               	movf	indf2,w,c
 27232   0015B8  6FCC               	movwf	??_pollServos& (0+255),b
 27233   0015BA  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27234                           
 27235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27236                           ; Switch size 1, requested type "simple"
 27237                           ; Number of cases is 1, Range of values is 0 to 0
 27238                           ; switch strategies available:
 27239                           ; Name         Instructions Cycles
 27240                           ; simple_byte            4     3 (average)
 27241                           ;	Chosen strategy is simple_byte
 27242   0015BC  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 27243   0015BE  0A00               	xorlw	0	; case 0
 27244   0015C0  A4D8               	btfss	status,2,c
 27245   0015C2  D067               	goto	l21888
 27246                           
 27247                           ; BSR set to: 1
 27248                           ; Switch size 1, requested type "simple"
 27249                           ; Number of cases is 4, Range of values is 0 to 3
 27250                           ; switch strategies available:
 27251                           ; Name         Instructions Cycles
 27252                           ; simple_byte           13     7 (average)
 27253                           ;	Chosen strategy is simple_byte
 27254   0015C4  51CC               	movf	??_pollServos& (0+255),w,b
 27255   0015C6  0A00               	xorlw	0	; case 0
 27256   0015C8  B4D8               	btfsc	status,2,c
 27257   0015CA  D063               	goto	l21888
 27258   0015CC  0A01               	xorlw	1	; case 1
 27259   0015CE  B4D8               	btfsc	status,2,c
 27260   0015D0  D060               	goto	l21888
 27261   0015D2  0A03               	xorlw	3	; case 2
 27262   0015D4  B4D8               	btfsc	status,2,c
 27263   0015D6  D5DD               	goto	l21810
 27264   0015D8  0A01               	xorlw	1	; case 3
 27265   0015DA  B4D8               	btfsc	status,2,c
 27266   0015DC  D526               	goto	l21792
 27267   0015DE  D059               	goto	l21888
 27268   0015E0                     l21878:
 27269                           
 27270                           ; BSR set to: 1
 27271   0015E0  51D7               	movf	pollServos@io& (0+255),w,b
 27272   0015E2  0D07               	mullw	7
 27273   0015E4  50F3               	movf	243,w,c
 27274   0015E6  0F10               	addlw	16
 27275   0015E8  EC52  F05E         	call	_getNV
 27276                           
 27277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27278                           ; Switch size 1, requested type "simple"
 27279                           ; Number of cases is 1, Range of values is 0 to 0
 27280                           ; switch strategies available:
 27281                           ; Name         Instructions Cycles
 27282                           ; simple_byte            4     3 (average)
 27283                           ;	Chosen strategy is simple_byte
 27284   0015EC  0100               	movlb	0	; () banked
 27285   0015EE  518E               	movf	(?_getNV+1)& (0+255),w,b
 27286   0015F0  0A00               	xorlw	0	; case 0
 27287   0015F2  A4D8               	btfss	status,2,c
 27288   0015F4  D04E               	goto	l21888
 27289                           
 27290                           ; BSR set to: 0
 27291                           ; Switch size 1, requested type "simple"
 27292                           ; Number of cases is 3, Range of values is 2 to 4
 27293                           ; switch strategies available:
 27294                           ; Name         Instructions Cycles
 27295                           ; simple_byte           10     6 (average)
 27296                           ;	Chosen strategy is simple_byte
 27297   0015F6  518D               	movf	?_getNV& (0+255),w,b
 27298   0015F8  0A02               	xorlw	2	; case 2
 27299   0015FA  B4D8               	btfsc	status,2,c
 27300   0015FC  EF2D  F004         	goto	l21650
 27301   001600  0A01               	xorlw	1	; case 3
 27302   001602  B4D8               	btfsc	status,2,c
 27303   001604  D4F6               	goto	l21790
 27304   001606  0A07               	xorlw	7	; case 4
 27305   001608  B4D8               	btfsc	status,2,c
 27306   00160A  D7CE               	goto	l21874
 27307                           
 27308                           ; BSR set to: 1
 27309                           ;../servo.c: 507:         switch (servoState[io]) {
 27310   00160C  D042               	goto	l21888
 27311   00160E                     l21880:
 27312                           
 27313                           ; BSR set to: 1
 27314                           ;../servo.c: 514:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 27315   00160E  51D7               	movf	pollServos@io& (0+255),w,b
 27316   001610  0D07               	mullw	7
 27317   001612  50F3               	movf	243,w,c
 27318   001614  0F11               	addlw	17
 27319   001616  EC52  F05E         	call	_getNV
 27320   00161A  0100               	movlb	0	; () banked
 27321   00161C  A38D               	btfss	?_getNV& (0+255),1,b
 27322   00161E  D051               	goto	l21890
 27323                           
 27324                           ; BSR set to: 0
 27325                           ;../servo.c: 515:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 27326   001620  0101               	movlb	1	; () banked
 27327   001622  51D7               	movf	pollServos@io& (0+255),w,b
 27328   001624  0D04               	mullw	4
 27329   001626  0E88               	movlw	low _ticksWhenStopped
 27330   001628  24F3               	addwf	243,w,c
 27331   00162A  6ED9               	movwf	fsr2l,c
 27332   00162C  0E03               	movlw	high _ticksWhenStopped
 27333   00162E  20F4               	addwfc	prodh,w,c
 27334   001630  6EDA               	movwf	fsr2h,c
 27335   001632  CFDE F1CC          	movff	postinc2,??_pollServos
 27336   001636  CFDE F1CD          	movff	postinc2,??_pollServos+1
 27337   00163A  CFDE F1CE          	movff	postinc2,??_pollServos+2
 27338   00163E  CFDE F1CF          	movff	postinc2,??_pollServos+3
 27339   001642  ECE4  F05A         	call	_tickGet	;wreg free
 27340   001646  0101               	movlb	1	; () banked
 27341   001648  51CC               	movf	??_pollServos& (0+255),w,b
 27342   00164A  0100               	movlb	0	; () banked
 27343   00164C  5D8D               	subwf	?_tickGet& (0+255),w,b
 27344   00164E  0101               	movlb	1	; () banked
 27345   001650  6FD0               	movwf	(??_pollServos+4)& (0+255),b
 27346   001652  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 27347   001654  0100               	movlb	0	; () banked
 27348   001656  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 27349   001658  0101               	movlb	1	; () banked
 27350   00165A  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 27351   00165C  51CE               	movf	(??_pollServos+2)& (0+255),w,b
 27352   00165E  0100               	movlb	0	; () banked
 27353   001660  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 27354   001662  0101               	movlb	1	; () banked
 27355   001664  6FD2               	movwf	(??_pollServos+6)& (0+255),b
 27356   001666  51CF               	movf	(??_pollServos+3)& (0+255),w,b
 27357   001668  0100               	movlb	0	; () banked
 27358   00166A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 27359   00166C  0101               	movlb	1	; () banked
 27360   00166E  6FD3               	movwf	(??_pollServos+7)& (0+255),b
 27361   001670  51D3               	movf	(??_pollServos+7)& (0+255),w,b
 27362   001672  11D2               	iorwf	(??_pollServos+6)& (0+255),w,b
 27363   001674  E106               	bnz	u22810
 27364   001676  0E25               	movlw	37
 27365   001678  5DD0               	subwf	(??_pollServos+4)& (0+255),w,b
 27366   00167A  0EF4               	movlw	244
 27367   00167C  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 27368   00167E  A0D8               	btfss	status,0,c
 27369   001680  D020               	goto	l21890
 27370   001682                     u22810:
 27371                           
 27372                           ; BSR set to: 1
 27373                           ;../servo.c: 516:                         servoState[io] = SS_OFF;
 27374   001682  0E10               	movlw	low _servoState
 27375   001684  25D7               	addwf	pollServos@io& (0+255),w,b
 27376   001686  6ED9               	movwf	fsr2l,c
 27377   001688  6ADA               	clrf	fsr2h,c
 27378   00168A  0E01               	movlw	high _servoState
 27379   00168C  22DA               	addwfc	fsr2h,f,c
 27380   00168E  6ADF               	clrf	indf2,c
 27381   001690  D018               	goto	l21890
 27382   001692                     l21888:
 27383   001692  0E10               	movlw	low _servoState
 27384   001694  0101               	movlb	1	; () banked
 27385   001696  25D7               	addwf	pollServos@io& (0+255),w,b
 27386   001698  6ED9               	movwf	fsr2l,c
 27387   00169A  6ADA               	clrf	fsr2h,c
 27388   00169C  0E01               	movlw	high _servoState
 27389   00169E  22DA               	addwfc	fsr2h,f,c
 27390   0016A0  50DF               	movf	indf2,w,c
 27391   0016A2  6FCC               	movwf	??_pollServos& (0+255),b
 27392   0016A4  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27393                           
 27394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27395                           ; Switch size 1, requested type "simple"
 27396                           ; Number of cases is 1, Range of values is 0 to 0
 27397                           ; switch strategies available:
 27398                           ; Name         Instructions Cycles
 27399                           ; simple_byte            4     3 (average)
 27400                           ;	Chosen strategy is simple_byte
 27401   0016A6  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 27402   0016A8  0A00               	xorlw	0	; case 0
 27403   0016AA  A4D8               	btfss	status,2,c
 27404   0016AC  D00A               	goto	l21890
 27405                           
 27406                           ; BSR set to: 1
 27407                           ; Switch size 1, requested type "simple"
 27408                           ; Number of cases is 4, Range of values is 0 to 3
 27409                           ; switch strategies available:
 27410                           ; Name         Instructions Cycles
 27411                           ; simple_byte           13     7 (average)
 27412                           ;	Chosen strategy is simple_byte
 27413   0016AE  51CC               	movf	??_pollServos& (0+255),w,b
 27414   0016B0  0A00               	xorlw	0	; case 0
 27415   0016B2  B4D8               	btfsc	status,2,c
 27416   0016B4  D006               	goto	l21890
 27417   0016B6  0A01               	xorlw	1	; case 1
 27418   0016B8  B4D8               	btfsc	status,2,c
 27419   0016BA  D7A9               	goto	l21880
 27420   0016BC  0A03               	xorlw	3	; case 2
 27421   0016BE  A4D8               	btfss	status,2,c
 27422   0016C0  0A01               	xorlw	1	; case 3
 27423   0016C2                     l21890:
 27424                           
 27425                           ;../servo.c: 526:     }
 27426   0016C2  0101               	movlb	1	; () banked
 27427   0016C4  2BD7               	incf	pollServos@io& (0+255),f,b
 27428                           
 27429                           ; BSR set to: 1
 27430   0016C6  0E0F               	movlw	15
 27431   0016C8  65D7               	cpfsgt	pollServos@io& (0+255),b
 27432   0016CA  D78A               	goto	l21878
 27433   0016CC  0012               	return	
 27434   0016CE                     __end_of_pollServos:
 27435                           	callstack 0
 27436                           
 27437 ;; *************** function _initBounce *****************
 27438 ;; Defined at:
 27439 ;;		line 89 in file "../bounce.c"
 27440 ;; Parameters:    Size  Location     Type
 27441 ;;  io              1    wreg     unsigned char 
 27442 ;; Auto vars:     Size  Location     Type
 27443 ;;  io              1   45[BANK0 ] unsigned char 
 27444 ;; Return value:  Size  Location     Type
 27445 ;;                  1    wreg      void 
 27446 ;; Registers used:
 27447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27448 ;; Tracked objects:
 27449 ;;		On entry : 0/0
 27450 ;;		On exit  : 0/0
 27451 ;;		Unchanged: 0/0
 27452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27454 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27456 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27457 ;;Total ram usage:        1 bytes
 27458 ;; Hardware stack levels used: 1
 27459 ;; Hardware stack levels required when called: 12
 27460 ;; This function calls:
 27461 ;;		Nothing
 27462 ;; This function is called by:
 27463 ;;		_pollServos
 27464 ;; This function uses a non-reentrant model
 27465 ;;
 27466                           
 27467                           	psect	text101
 27468   00C15C                     __ptext101:
 27469                           	callstack 0
 27470   00C15C                     _initBounce:
 27471                           	callstack 15
 27472                           
 27473                           ; BSR set to: 1
 27474                           ;incstack = 0
 27475                           ;initBounce@io stored from wreg
 27476   00C15C  0100               	movlb	0	; () banked
 27477   00C15E  6F8D               	movwf	initBounce@io& (0+255),b
 27478                           
 27479                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 27480   00C160  0E44               	movlw	low _bounceState
 27481   00C162  0100               	movlb	0	; () banked
 27482   00C164  258D               	addwf	initBounce@io& (0+255),w,b
 27483   00C166  6ED9               	movwf	fsr2l,c
 27484   00C168  6ADA               	clrf	fsr2h,c
 27485   00C16A  0E02               	movlw	high _bounceState
 27486   00C16C  22DA               	addwfc	fsr2h,f,c
 27487   00C16E  6ADF               	clrf	indf2,c
 27488                           
 27489                           ; BSR set to: 0
 27490                           ;../bounce.c: 91:     speed[io] = 0;
 27491   00C170  518D               	movf	initBounce@io& (0+255),w,b
 27492   00C172  0D02               	mullw	2
 27493   00C174  0E00               	movlw	low _speed
 27494   00C176  24F3               	addwf	243,w,c
 27495   00C178  6ED9               	movwf	fsr2l,c
 27496   00C17A  0E02               	movlw	high _speed
 27497   00C17C  20F4               	addwfc	prodh,w,c
 27498   00C17E  6EDA               	movwf	fsr2h,c
 27499   00C180  6ADE               	clrf	postinc2,c
 27500   00C182  6ADD               	clrf	postdec2,c
 27501                           
 27502                           ; BSR set to: 0
 27503   00C184  0012               	return		;funcret
 27504   00C186                     __end_of_initBounce:
 27505                           	callstack 0
 27506                           
 27507 ;; *************** function _bounceUp *****************
 27508 ;; Defined at:
 27509 ;;		line 161 in file "../bounce.c"
 27510 ;; Parameters:    Size  Location     Type
 27511 ;;  io              1    wreg     unsigned char 
 27512 ;; Auto vars:     Size  Location     Type
 27513 ;;  io              1   71[BANK0 ] unsigned char 
 27514 ;;  midway          1   70[BANK0 ] unsigned char 
 27515 ;;  reversed        1   69[BANK0 ] enum E12716
 27516 ;; Return value:  Size  Location     Type
 27517 ;;                  1    wreg      enum E12716
 27518 ;; Registers used:
 27519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27520 ;; Tracked objects:
 27521 ;;		On entry : 0/0
 27522 ;;		On exit  : 0/0
 27523 ;;		Unchanged: 0/0
 27524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27526 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27527 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27528 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27529 ;;Total ram usage:        9 bytes
 27530 ;; Hardware stack levels used: 1
 27531 ;; Hardware stack levels required when called: 13
 27532 ;; This function calls:
 27533 ;;		___awdiv
 27534 ;;		_getNV
 27535 ;; This function is called by:
 27536 ;;		_pollServos
 27537 ;; This function uses a non-reentrant model
 27538 ;;
 27539                           
 27540                           	psect	text102
 27541   005A58                     __ptext102:
 27542                           	callstack 0
 27543   005A58                     _bounceUp:
 27544                           	callstack 14
 27545                           
 27546                           ; BSR set to: 0
 27547                           ;incstack = 0
 27548                           ;bounceUp@io stored from wreg
 27549   005A58  0100               	movlb	0	; () banked
 27550   005A5A  6FA7               	movwf	bounceUp@io& (0+255),b
 27551                           
 27552                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 27553   005A5C  0100               	movlb	0	; () banked
 27554   005A5E  51A7               	movf	bounceUp@io& (0+255),w,b
 27555   005A60  0D07               	mullw	7
 27556   005A62  50F3               	movf	243,w,c
 27557   005A64  0F12               	addlw	18
 27558   005A66  EC52  F05E         	call	_getNV
 27559   005A6A  C08D  F09F         	movff	?_getNV,??_bounceUp
 27560   005A6E  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 27561   005A72  0100               	movlb	0	; () banked
 27562   005A74  51A7               	movf	bounceUp@io& (0+255),w,b
 27563   005A76  0D07               	mullw	7
 27564   005A78  50F3               	movf	243,w,c
 27565   005A7A  0F13               	addlw	19
 27566   005A7C  EC52  F05E         	call	_getNV
 27567   005A80  0100               	movlb	0	; () banked
 27568   005A82  518D               	movf	?_getNV& (0+255),w,b
 27569   005A84  5D9F               	subwf	??_bounceUp& (0+255),w,b
 27570   005A86  B0D8               	btfsc	status,0,c
 27571   005A88  D002               	goto	u21340
 27572   005A8A  0E01               	movlw	1
 27573   005A8C  D001               	goto	u21350
 27574   005A8E                     u21340:
 27575   005A8E  0E00               	movlw	0
 27576   005A90                     u21350:
 27577   005A90  6FA5               	movwf	bounceUp@reversed& (0+255),b
 27578                           
 27579                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 27580   005A92  D10A               	goto	l20836
 27581   005A94                     l20786:
 27582                           
 27583                           ; BSR set to: 0
 27584                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 27585   005A94  51A7               	movf	bounceUp@io& (0+255),w,b
 27586   005A96  0D07               	mullw	7
 27587   005A98  50F3               	movf	243,w,c
 27588   005A9A  0F12               	addlw	18
 27589   005A9C  EC52  F05E         	call	_getNV
 27590   005AA0  0100               	movlb	0	; () banked
 27591   005AA2  518D               	movf	?_getNV& (0+255),w,b
 27592   005AA4  6F97               	movwf	___awdiv@dividend& (0+255),b
 27593   005AA6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27594   005AA8  0E00               	movlw	0
 27595   005AAA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27596   005AAC  0E02               	movlw	2
 27597   005AAE  6F99               	movwf	___awdiv@divisor& (0+255),b
 27598   005AB0  EC1C  F053         	call	___awdiv	;wreg free
 27599   005AB4  C097  F09F         	movff	?___awdiv,??_bounceUp
 27600   005AB8  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 27601   005ABC  0100               	movlb	0	; () banked
 27602   005ABE  51A7               	movf	bounceUp@io& (0+255),w,b
 27603   005AC0  0D07               	mullw	7
 27604   005AC2  50F3               	movf	243,w,c
 27605   005AC4  0F13               	addlw	19
 27606   005AC6  EC52  F05E         	call	_getNV
 27607   005ACA  0100               	movlb	0	; () banked
 27608   005ACC  518D               	movf	?_getNV& (0+255),w,b
 27609   005ACE  6F97               	movwf	___awdiv@dividend& (0+255),b
 27610   005AD0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27611   005AD2  0E00               	movlw	0
 27612   005AD4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27613   005AD6  0E02               	movlw	2
 27614   005AD8  6F99               	movwf	___awdiv@divisor& (0+255),b
 27615   005ADA  EC1C  F053         	call	___awdiv	;wreg free
 27616   005ADE  0100               	movlb	0	; () banked
 27617   005AE0  5197               	movf	?___awdiv& (0+255),w,b
 27618   005AE2  259F               	addwf	??_bounceUp& (0+255),w,b
 27619   005AE4  6FA6               	movwf	bounceUp@midway& (0+255),b
 27620                           
 27621                           ; BSR set to: 0
 27622                           ;../bounce.c: 169:         if (reversed) {
 27623   005AE6  51A5               	movf	bounceUp@reversed& (0+255),w,b
 27624   005AE8  B4D8               	btfsc	status,2,c
 27625   005AEA  D024               	goto	l20798
 27626                           
 27627                           ; BSR set to: 0
 27628                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 27629   005AEC  51A7               	movf	bounceUp@io& (0+255),w,b
 27630   005AEE  0D07               	mullw	7
 27631   005AF0  50F3               	movf	243,w,c
 27632   005AF2  0F15               	addlw	21
 27633   005AF4  EC52  F05E         	call	_getNV
 27634   005AF8  0100               	movlb	0	; () banked
 27635   005AFA  51A7               	movf	bounceUp@io& (0+255),w,b
 27636   005AFC  0FA9               	addlw	low _currentPos
 27637   005AFE  6ED9               	movwf	fsr2l,c
 27638   005B00  6ADA               	clrf	fsr2h,c
 27639   005B02  518D               	movf	?_getNV& (0+255),w,b
 27640   005B04  5EDF               	subwf	indf2,f,c
 27641                           
 27642                           ; BSR set to: 0
 27643                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 27644   005B06  51A7               	movf	bounceUp@io& (0+255),w,b
 27645   005B08  0FA9               	addlw	low _currentPos
 27646   005B0A  6ED9               	movwf	fsr2l,c
 27647   005B0C  6ADA               	clrf	fsr2h,c
 27648   005B0E  50DE               	movf	postinc2,w,c
 27649   005B10  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 27650   005B12  A0D8               	btfss	status,0,c
 27651   005B14  D0E1               	goto	l20838
 27652                           
 27653                           ; BSR set to: 0
 27654                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 27655   005B16  0E44               	movlw	low _bounceState
 27656   005B18  25A7               	addwf	bounceUp@io& (0+255),w,b
 27657   005B1A  6ED9               	movwf	fsr2l,c
 27658   005B1C  6ADA               	clrf	fsr2h,c
 27659   005B1E  0E02               	movlw	high _bounceState
 27660   005B20  22DA               	addwfc	fsr2h,f,c
 27661   005B22  0E01               	movlw	1
 27662   005B24  6EDF               	movwf	indf2,c
 27663                           
 27664                           ; BSR set to: 0
 27665                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 27666   005B26  51A7               	movf	bounceUp@io& (0+255),w,b
 27667   005B28  0D07               	mullw	7
 27668   005B2A  50F3               	movf	243,w,c
 27669   005B2C  0F16               	addlw	22
 27670   005B2E  EC52  F05E         	call	_getNV
 27671   005B32  D023               	goto	L6
 27672   005B34                     l20798:
 27673                           
 27674                           ; BSR set to: 0
 27675                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 27676   005B34  51A7               	movf	bounceUp@io& (0+255),w,b
 27677   005B36  0D07               	mullw	7
 27678   005B38  50F3               	movf	243,w,c
 27679   005B3A  0F15               	addlw	21
 27680   005B3C  EC52  F05E         	call	_getNV
 27681   005B40  0100               	movlb	0	; () banked
 27682   005B42  51A7               	movf	bounceUp@io& (0+255),w,b
 27683   005B44  0FA9               	addlw	low _currentPos
 27684   005B46  6ED9               	movwf	fsr2l,c
 27685   005B48  6ADA               	clrf	fsr2h,c
 27686   005B4A  518D               	movf	?_getNV& (0+255),w,b
 27687   005B4C  26DF               	addwf	indf2,f,c
 27688                           
 27689                           ; BSR set to: 0
 27690                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 27691   005B4E  51A7               	movf	bounceUp@io& (0+255),w,b
 27692   005B50  0FA9               	addlw	low _currentPos
 27693   005B52  6ED9               	movwf	fsr2l,c
 27694   005B54  6ADA               	clrf	fsr2h,c
 27695   005B56  51A6               	movf	bounceUp@midway& (0+255),w,b
 27696   005B58  5CDE               	subwf	postinc2,w,c
 27697   005B5A  A0D8               	btfss	status,0,c
 27698   005B5C  D0BD               	goto	l20838
 27699                           
 27700                           ; BSR set to: 0
 27701                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 27702   005B5E  0E44               	movlw	low _bounceState
 27703   005B60  25A7               	addwf	bounceUp@io& (0+255),w,b
 27704   005B62  6ED9               	movwf	fsr2l,c
 27705   005B64  6ADA               	clrf	fsr2h,c
 27706   005B66  0E02               	movlw	high _bounceState
 27707   005B68  22DA               	addwfc	fsr2h,f,c
 27708   005B6A  0E01               	movlw	1
 27709   005B6C  6EDF               	movwf	indf2,c
 27710                           
 27711                           ; BSR set to: 0
 27712                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 27713   005B6E  51A7               	movf	bounceUp@io& (0+255),w,b
 27714   005B70  0D07               	mullw	7
 27715   005B72  50F3               	movf	243,w,c
 27716   005B74  0F16               	addlw	22
 27717   005B76  EC52  F05E         	call	_getNV
 27718   005B7A                     L6:
 27719   005B7A  0100               	movlb	0	; () banked
 27720   005B7C  518D               	movf	?_getNV& (0+255),w,b
 27721   005B7E  6F9F               	movwf	??_bounceUp& (0+255),b
 27722   005B80  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27723   005B82  51A7               	movf	bounceUp@io& (0+255),w,b
 27724   005B84  0D02               	mullw	2
 27725   005B86  0E00               	movlw	low _speed
 27726   005B88  24F3               	addwf	243,w,c
 27727   005B8A  6ED9               	movwf	fsr2l,c
 27728   005B8C  0E02               	movlw	high _speed
 27729   005B8E  20F4               	addwfc	prodh,w,c
 27730   005B90  6EDA               	movwf	fsr2h,c
 27731   005B92  C09F  FFDE         	movff	??_bounceUp,postinc2
 27732   005B96  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 27733   005B9A  D09E               	goto	l20838
 27734   005B9C                     l20806:
 27735                           
 27736                           ; BSR set to: 0
 27737                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 27738   005B9C  51A7               	movf	bounceUp@io& (0+255),w,b
 27739   005B9E  0D02               	mullw	2
 27740   005BA0  0E00               	movlw	low _speed
 27741   005BA2  24F3               	addwf	243,w,c
 27742   005BA4  6ED9               	movwf	fsr2l,c
 27743   005BA6  0E02               	movlw	high _speed
 27744   005BA8  20F4               	addwfc	prodh,w,c
 27745   005BAA  6EDA               	movwf	fsr2h,c
 27746   005BAC  50DE               	movf	postinc2,w,c
 27747   005BAE  10DE               	iorwf	postinc2,w,c
 27748   005BB0  A4D8               	btfss	status,2,c
 27749   005BB2  D008               	goto	l20810
 27750                           
 27751                           ; BSR set to: 0
 27752   005BB4  0E44               	movlw	low _bounceState
 27753   005BB6  25A7               	addwf	bounceUp@io& (0+255),w,b
 27754   005BB8  6ED9               	movwf	fsr2l,c
 27755   005BBA  6ADA               	clrf	fsr2h,c
 27756   005BBC  0E02               	movlw	high _bounceState
 27757   005BBE  22DA               	addwfc	fsr2h,f,c
 27758   005BC0  0E02               	movlw	2
 27759   005BC2  6EDF               	movwf	indf2,c
 27760   005BC4                     l20810:
 27761                           
 27762                           ; BSR set to: 0
 27763                           ;../bounce.c: 186:         speed[io]--;
 27764   005BC4  51A7               	movf	bounceUp@io& (0+255),w,b
 27765   005BC6  0D02               	mullw	2
 27766   005BC8  0E00               	movlw	low _speed
 27767   005BCA  24F3               	addwf	243,w,c
 27768   005BCC  6ED9               	movwf	fsr2l,c
 27769   005BCE  0E02               	movlw	high _speed
 27770   005BD0  20F4               	addwfc	prodh,w,c
 27771   005BD2  6EDA               	movwf	fsr2h,c
 27772   005BD4  06DE               	decf	postinc2,f,c
 27773   005BD6  0E00               	movlw	0
 27774   005BD8  5ADD               	subwfb	postdec2,f,c
 27775                           
 27776                           ;../bounce.c: 187:         break;
 27777   005BDA  D07E               	goto	l20838
 27778   005BDC                     l20812:
 27779                           
 27780                           ; BSR set to: 0
 27781                           ;../bounce.c: 190:         if (reversed) {
 27782   005BDC  51A5               	movf	bounceUp@reversed& (0+255),w,b
 27783   005BDE  B4D8               	btfsc	status,2,c
 27784   005BE0  D036               	goto	l20824
 27785                           
 27786                           ; BSR set to: 0
 27787                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 27788   005BE2  51A7               	movf	bounceUp@io& (0+255),w,b
 27789   005BE4  0D07               	mullw	7
 27790   005BE6  50F3               	movf	243,w,c
 27791   005BE8  0F15               	addlw	21
 27792   005BEA  EC52  F05E         	call	_getNV
 27793   005BEE  0100               	movlb	0	; () banked
 27794   005BF0  51A7               	movf	bounceUp@io& (0+255),w,b
 27795   005BF2  0FA9               	addlw	low _currentPos
 27796   005BF4  6ED9               	movwf	fsr2l,c
 27797   005BF6  6ADA               	clrf	fsr2h,c
 27798   005BF8  518D               	movf	?_getNV& (0+255),w,b
 27799   005BFA  5EDF               	subwf	indf2,f,c
 27800                           
 27801                           ; BSR set to: 0
 27802                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 27803   005BFC  51A7               	movf	bounceUp@io& (0+255),w,b
 27804   005BFE  0FA9               	addlw	low _currentPos
 27805   005C00  6ED9               	movwf	fsr2l,c
 27806   005C02  6ADA               	clrf	fsr2h,c
 27807   005C04  50DF               	movf	indf2,w,c
 27808   005C06  6F9F               	movwf	??_bounceUp& (0+255),b
 27809   005C08  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27810   005C0A  0E20               	movlw	low _targetPos
 27811   005C0C  25A7               	addwf	bounceUp@io& (0+255),w,b
 27812   005C0E  6ED9               	movwf	fsr2l,c
 27813   005C10  6ADA               	clrf	fsr2h,c
 27814   005C12  0E01               	movlw	high _targetPos
 27815   005C14  22DA               	addwfc	fsr2h,f,c
 27816   005C16  50DF               	movf	indf2,w,c
 27817   005C18  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 27818   005C1A  0EFD               	movlw	253
 27819   005C1C  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 27820   005C1E  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27821   005C20  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27822   005C22  0EFF               	movlw	255
 27823   005C24  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 27824   005C26  519F               	movf	??_bounceUp& (0+255),w,b
 27825   005C28  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27826   005C2A  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27827   005C2C  0A80               	xorlw	128
 27828   005C2E  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27829   005C30  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27830   005C32  0A80               	xorlw	128
 27831   005C34  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27832   005C36  A0D8               	btfss	status,0,c
 27833   005C38  D04F               	goto	l20838
 27834   005C3A                     u21410:
 27835                           
 27836                           ; BSR set to: 0
 27837                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 27838   005C3A  0E44               	movlw	low _bounceState
 27839   005C3C  25A7               	addwf	bounceUp@io& (0+255),w,b
 27840   005C3E  6ED9               	movwf	fsr2l,c
 27841   005C40  6ADA               	clrf	fsr2h,c
 27842   005C42  0E02               	movlw	high _bounceState
 27843   005C44  22DA               	addwfc	fsr2h,f,c
 27844   005C46  0E03               	movlw	3
 27845   005C48  6EDF               	movwf	indf2,c
 27846                           
 27847                           ; BSR set to: 0
 27848                           ;../bounce.c: 194:                 return TRUE;
 27849   005C4A  0E01               	movlw	1
 27850   005C4C  0012               	return	
 27851   005C4E                     l20824:
 27852                           
 27853                           ; BSR set to: 0
 27854                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 27855   005C4E  51A7               	movf	bounceUp@io& (0+255),w,b
 27856   005C50  0D07               	mullw	7
 27857   005C52  50F3               	movf	243,w,c
 27858   005C54  0F15               	addlw	21
 27859   005C56  EC52  F05E         	call	_getNV
 27860   005C5A  0100               	movlb	0	; () banked
 27861   005C5C  51A7               	movf	bounceUp@io& (0+255),w,b
 27862   005C5E  0FA9               	addlw	low _currentPos
 27863   005C60  6ED9               	movwf	fsr2l,c
 27864   005C62  6ADA               	clrf	fsr2h,c
 27865   005C64  518D               	movf	?_getNV& (0+255),w,b
 27866   005C66  26DF               	addwf	indf2,f,c
 27867                           
 27868                           ; BSR set to: 0
 27869                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 27870   005C68  0E20               	movlw	low _targetPos
 27871   005C6A  25A7               	addwf	bounceUp@io& (0+255),w,b
 27872   005C6C  6ED9               	movwf	fsr2l,c
 27873   005C6E  6ADA               	clrf	fsr2h,c
 27874   005C70  0E01               	movlw	high _targetPos
 27875   005C72  22DA               	addwfc	fsr2h,f,c
 27876   005C74  50DF               	movf	indf2,w,c
 27877   005C76  6F9F               	movwf	??_bounceUp& (0+255),b
 27878   005C78  0EFD               	movlw	253
 27879   005C7A  259F               	addwf	??_bounceUp& (0+255),w,b
 27880   005C7C  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 27881   005C7E  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 27882   005C80  0EFF               	movlw	255
 27883   005C82  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 27884   005C84  51A7               	movf	bounceUp@io& (0+255),w,b
 27885   005C86  0FA9               	addlw	low _currentPos
 27886   005C88  6ED9               	movwf	fsr2l,c
 27887   005C8A  6ADA               	clrf	fsr2h,c
 27888   005C8C  50DF               	movf	indf2,w,c
 27889   005C8E  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27890   005C90  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27891   005C92  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27892   005C94  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27893   005C96  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27894   005C98  0A80               	xorlw	128
 27895   005C9A  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27896   005C9C  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 27897   005C9E  0A80               	xorlw	128
 27898   005CA0  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27899   005CA2  B0D8               	btfsc	status,0,c
 27900   005CA4  D7CA               	goto	u21410
 27901   005CA6  D018               	goto	l20838
 27902   005CA8                     l20836:
 27903                           
 27904                           ; BSR set to: 0
 27905   005CA8  0E44               	movlw	low _bounceState
 27906   005CAA  25A7               	addwf	bounceUp@io& (0+255),w,b
 27907   005CAC  6ED9               	movwf	fsr2l,c
 27908   005CAE  6ADA               	clrf	fsr2h,c
 27909   005CB0  0E02               	movlw	high _bounceState
 27910   005CB2  22DA               	addwfc	fsr2h,f,c
 27911   005CB4  50DF               	movf	indf2,w,c
 27912   005CB6  6F9F               	movwf	??_bounceUp& (0+255),b
 27913   005CB8  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27914                           
 27915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27916                           ; Switch size 1, requested type "simple"
 27917                           ; Number of cases is 1, Range of values is 0 to 0
 27918                           ; switch strategies available:
 27919                           ; Name         Instructions Cycles
 27920                           ; simple_byte            4     3 (average)
 27921                           ;	Chosen strategy is simple_byte
 27922   005CBA  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27923   005CBC  0A00               	xorlw	0	; case 0
 27924   005CBE  A4D8               	btfss	status,2,c
 27925   005CC0  D00B               	goto	l20838
 27926                           
 27927                           ; BSR set to: 0
 27928                           ; Switch size 1, requested type "simple"
 27929                           ; Number of cases is 4, Range of values is 0 to 3
 27930                           ; switch strategies available:
 27931                           ; Name         Instructions Cycles
 27932                           ; simple_byte           13     7 (average)
 27933                           ;	Chosen strategy is simple_byte
 27934   005CC2  519F               	movf	??_bounceUp& (0+255),w,b
 27935   005CC4  0A00               	xorlw	0	; case 0
 27936   005CC6  B4D8               	btfsc	status,2,c
 27937   005CC8  D6E5               	goto	l20786
 27938   005CCA  0A01               	xorlw	1	; case 1
 27939   005CCC  B4D8               	btfsc	status,2,c
 27940   005CCE  D766               	goto	l20806
 27941   005CD0  0A03               	xorlw	3	; case 2
 27942   005CD2  B4D8               	btfsc	status,2,c
 27943   005CD4  D783               	goto	l20812
 27944   005CD6  0A01               	xorlw	1	; case 3
 27945   005CD8                     l20838:
 27946                           
 27947                           ; BSR set to: 0
 27948                           ;../bounce.c: 207:     return FALSE;
 27949   005CD8  0E00               	movlw	0
 27950                           
 27951                           ; BSR set to: 0
 27952   005CDA  0012               	return		;funcret
 27953   005CDC                     __end_of_bounceUp:
 27954                           	callstack 0
 27955                           
 27956 ;; *************** function _bounceDown *****************
 27957 ;; Defined at:
 27958 ;;		line 103 in file "../bounce.c"
 27959 ;; Parameters:    Size  Location     Type
 27960 ;;  io              1    wreg     unsigned char 
 27961 ;; Auto vars:     Size  Location     Type
 27962 ;;  io              1    3[BANK1 ] unsigned char 
 27963 ;;  tmp             2    1[BANK1 ] int 
 27964 ;;  reversed        1    0[BANK1 ] enum E12716
 27965 ;; Return value:  Size  Location     Type
 27966 ;;                  1    wreg      enum E12716
 27967 ;; Registers used:
 27968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27969 ;; Tracked objects:
 27970 ;;		On entry : 0/0
 27971 ;;		On exit  : 0/0
 27972 ;;		Unchanged: 0/0
 27973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27975 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27976 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27977 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27978 ;;Total ram usage:       11 bytes
 27979 ;; Hardware stack levels used: 1
 27980 ;; Hardware stack levels required when called: 13
 27981 ;; This function calls:
 27982 ;;		___awdiv
 27983 ;;		___wmul
 27984 ;;		_getNV
 27985 ;; This function is called by:
 27986 ;;		_pollServos
 27987 ;; This function uses a non-reentrant model
 27988 ;;
 27989                           
 27990                           	psect	text103
 27991   0028AC                     __ptext103:
 27992                           	callstack 0
 27993   0028AC                     _bounceDown:
 27994                           	callstack 14
 27995                           
 27996                           ; BSR set to: 0
 27997                           ;incstack = 0
 27998                           ;bounceDown@io stored from wreg
 27999   0028AC  0101               	movlb	1	; () banked
 28000   0028AE  6FBD               	movwf	bounceDown@io& (0+255),b
 28001                           
 28002                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 28003   0028B0  0101               	movlb	1	; () banked
 28004   0028B2  51BD               	movf	bounceDown@io& (0+255),w,b
 28005   0028B4  0FA9               	addlw	low _currentPos
 28006   0028B6  6ED9               	movwf	fsr2l,c
 28007   0028B8  6ADA               	clrf	fsr2h,c
 28008   0028BA  50DF               	movf	indf2,w,c
 28009   0028BC  0100               	movlb	0	; () banked
 28010   0028BE  6F9F               	movwf	??_bounceDown& (0+255),b
 28011   0028C0  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28012   0028C2  0E20               	movlw	low _targetPos
 28013   0028C4  0101               	movlb	1	; () banked
 28014   0028C6  25BD               	addwf	bounceDown@io& (0+255),w,b
 28015   0028C8  6ED9               	movwf	fsr2l,c
 28016   0028CA  6ADA               	clrf	fsr2h,c
 28017   0028CC  0E01               	movlw	high _targetPos
 28018   0028CE  22DA               	addwfc	fsr2h,f,c
 28019   0028D0  50DF               	movf	indf2,w,c
 28020   0028D2  0100               	movlb	0	; () banked
 28021   0028D4  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28022   0028D6  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 28023   0028D8  0E03               	movlw	3
 28024   0028DA  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 28025   0028DC  0E00               	movlw	0
 28026   0028DE  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 28027   0028E0  519F               	movf	??_bounceDown& (0+255),w,b
 28028   0028E2  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28029   0028E4  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28030   0028E6  0A80               	xorlw	128
 28031   0028E8  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28032   0028EA  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28033   0028EC  0A80               	xorlw	128
 28034   0028EE  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 28035   0028F0  A0D8               	btfss	status,0,c
 28036   0028F2  D047               	goto	u21460
 28037                           
 28038                           ; BSR set to: 0
 28039   0028F4  0E20               	movlw	low _targetPos
 28040   0028F6  0101               	movlb	1	; () banked
 28041   0028F8  25BD               	addwf	bounceDown@io& (0+255),w,b
 28042   0028FA  6ED9               	movwf	fsr2l,c
 28043   0028FC  6ADA               	clrf	fsr2h,c
 28044   0028FE  0E01               	movlw	high _targetPos
 28045   002900  22DA               	addwfc	fsr2h,f,c
 28046   002902  50DF               	movf	indf2,w,c
 28047   002904  0100               	movlb	0	; () banked
 28048   002906  6F9F               	movwf	??_bounceDown& (0+255),b
 28049   002908  0EFD               	movlw	253
 28050   00290A  259F               	addwf	??_bounceDown& (0+255),w,b
 28051   00290C  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 28052   00290E  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 28053   002910  0EFF               	movlw	255
 28054   002912  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 28055   002914  0101               	movlb	1	; () banked
 28056   002916  51BD               	movf	bounceDown@io& (0+255),w,b
 28057   002918  0FA9               	addlw	low _currentPos
 28058   00291A  6ED9               	movwf	fsr2l,c
 28059   00291C  6ADA               	clrf	fsr2h,c
 28060   00291E  50DF               	movf	indf2,w,c
 28061   002920  0100               	movlb	0	; () banked
 28062   002922  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28063   002924  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 28064   002926  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28065   002928  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 28066   00292A  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28067   00292C  0A80               	xorlw	128
 28068   00292E  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 28069   002930  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28070   002932  0A80               	xorlw	128
 28071   002934  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 28072   002936  A0D8               	btfss	status,0,c
 28073   002938  D024               	goto	u21460
 28074                           
 28075                           ; BSR set to: 0
 28076   00293A  0101               	movlb	1	; () banked
 28077   00293C  51BD               	movf	bounceDown@io& (0+255),w,b
 28078   00293E  0D02               	mullw	2
 28079   002940  0E00               	movlw	low _speed
 28080   002942  24F3               	addwf	243,w,c
 28081   002944  6ED9               	movwf	fsr2l,c
 28082   002946  0E02               	movlw	high _speed
 28083   002948  20F4               	addwfc	prodh,w,c
 28084   00294A  6EDA               	movwf	fsr2h,c
 28085   00294C  0E01               	movlw	1
 28086   00294E  BEDB               	btfsc	plusw2,7,c
 28087   002950  D007               	goto	u21450
 28088   002952  0E01               	movlw	1
 28089   002954  50DB               	movf	plusw2,w,c
 28090   002956  E115               	bnz	l20854
 28091   002958  0E04               	movlw	4
 28092   00295A  5CDE               	subwf	postinc2,w,c
 28093   00295C  B0D8               	btfsc	status,0,c
 28094   00295E  D011               	goto	u21460
 28095   002960                     u21450:
 28096                           
 28097                           ; BSR set to: 1
 28098   002960  51BD               	movf	bounceDown@io& (0+255),w,b
 28099   002962  0D02               	mullw	2
 28100   002964  0E00               	movlw	low _speed
 28101   002966  24F3               	addwf	243,w,c
 28102   002968  6ED9               	movwf	fsr2l,c
 28103   00296A  0E02               	movlw	high _speed
 28104   00296C  20F4               	addwfc	prodh,w,c
 28105   00296E  6EDA               	movwf	fsr2h,c
 28106   002970  0E01               	movlw	1
 28107   002972  AEDB               	btfss	plusw2,7,c
 28108   002974  D1F3               	goto	l20882
 28109   002976  0EFD               	movlw	253
 28110   002978  5CDE               	subwf	postinc2,w,c
 28111   00297A  0EFF               	movlw	255
 28112   00297C  58DE               	subwfb	postinc2,w,c
 28113   00297E  B0D8               	btfsc	status,0,c
 28114   002980  D1ED               	goto	l20882
 28115   002982                     u21460:
 28116   002982                     l20854:
 28117                           
 28118                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 28119   002982  0101               	movlb	1	; () banked
 28120   002984  51BD               	movf	bounceDown@io& (0+255),w,b
 28121   002986  0D07               	mullw	7
 28122   002988  50F3               	movf	243,w,c
 28123   00298A  0F12               	addlw	18
 28124   00298C  EC52  F05E         	call	_getNV
 28125   002990  C08D  F09F         	movff	?_getNV,??_bounceDown
 28126   002994  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 28127   002998  0101               	movlb	1	; () banked
 28128   00299A  51BD               	movf	bounceDown@io& (0+255),w,b
 28129   00299C  0D07               	mullw	7
 28130   00299E  50F3               	movf	243,w,c
 28131   0029A0  0F13               	addlw	19
 28132   0029A2  EC52  F05E         	call	_getNV
 28133   0029A6  0100               	movlb	0	; () banked
 28134   0029A8  518D               	movf	?_getNV& (0+255),w,b
 28135   0029AA  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28136   0029AC  B0D8               	btfsc	status,0,c
 28137   0029AE  D002               	goto	u21470
 28138   0029B0  0E01               	movlw	1
 28139   0029B2  D001               	goto	u21480
 28140   0029B4                     u21470:
 28141   0029B4  0E00               	movlw	0
 28142   0029B6                     u21480:
 28143   0029B6  0101               	movlb	1	; () banked
 28144   0029B8  6FBA               	movwf	bounceDown@reversed& (0+255),b
 28145                           
 28146                           ; BSR set to: 1
 28147                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 28148   0029BA  51BA               	movf	bounceDown@reversed& (0+255),w,b
 28149   0029BC  A4D8               	btfss	status,2,c
 28150   0029BE  D0E8               	goto	l20868
 28151                           
 28152                           ; BSR set to: 1
 28153                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 28154   0029C0  51BD               	movf	bounceDown@io& (0+255),w,b
 28155   0029C2  0D02               	mullw	2
 28156   0029C4  0E00               	movlw	low _speed
 28157   0029C6  24F3               	addwf	243,w,c
 28158   0029C8  6ED9               	movwf	fsr2l,c
 28159   0029CA  0E02               	movlw	high _speed
 28160   0029CC  20F4               	addwfc	prodh,w,c
 28161   0029CE  6EDA               	movwf	fsr2h,c
 28162   0029D0  CFDE F097          	movff	postinc2,___awdiv@dividend
 28163   0029D4  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28164   0029D8  0E00               	movlw	0
 28165   0029DA  0100               	movlb	0	; () banked
 28166   0029DC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28167   0029DE  0E1E               	movlw	30
 28168   0029E0  6F99               	movwf	___awdiv@divisor& (0+255),b
 28169   0029E2  EC1C  F053         	call	___awdiv	;wreg free
 28170   0029E6  C097  F09F         	movff	?___awdiv,??_bounceDown
 28171   0029EA  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 28172   0029EE  0101               	movlb	1	; () banked
 28173   0029F0  51BD               	movf	bounceDown@io& (0+255),w,b
 28174   0029F2  0D07               	mullw	7
 28175   0029F4  50F3               	movf	243,w,c
 28176   0029F6  0F13               	addlw	19
 28177   0029F8  EC52  F05E         	call	_getNV
 28178   0029FC  0100               	movlb	0	; () banked
 28179   0029FE  518D               	movf	?_getNV& (0+255),w,b
 28180   002A00  259F               	addwf	??_bounceDown& (0+255),w,b
 28181   002A02  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28182   002A04  0E00               	movlw	0
 28183   002A06  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28184   002A08  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28185   002A0A  0101               	movlb	1	; () banked
 28186   002A0C  51BD               	movf	bounceDown@io& (0+255),w,b
 28187   002A0E  0FA9               	addlw	low _currentPos
 28188   002A10  6ED9               	movwf	fsr2l,c
 28189   002A12  6ADA               	clrf	fsr2h,c
 28190   002A14  50DF               	movf	indf2,w,c
 28191   002A16  0100               	movlb	0	; () banked
 28192   002A18  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28193   002A1A  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28194   002A1C  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28195   002A1E  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28196   002A20  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28197   002A22  0A80               	xorlw	128
 28198   002A24  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28199   002A26  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28200   002A28  0A80               	xorlw	128
 28201   002A2A  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28202   002A2C  B0D8               	btfsc	status,0,c
 28203   002A2E  D084               	goto	l20864
 28204                           
 28205                           ; BSR set to: 0
 28206                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28207   002A30  0101               	movlb	1	; () banked
 28208   002A32  51BD               	movf	bounceDown@io& (0+255),w,b
 28209   002A34  0D07               	mullw	7
 28210   002A36  50F3               	movf	243,w,c
 28211   002A38  0F14               	addlw	20
 28212   002A3A  EC52  F05E         	call	_getNV
 28213   002A3E  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28214   002A42  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28215   002A46  0101               	movlb	1	; () banked
 28216   002A48  51BD               	movf	bounceDown@io& (0+255),w,b
 28217   002A4A  0D02               	mullw	2
 28218   002A4C  0E00               	movlw	low _speed
 28219   002A4E  24F3               	addwf	243,w,c
 28220   002A50  6ED9               	movwf	fsr2l,c
 28221   002A52  0E02               	movlw	high _speed
 28222   002A54  20F4               	addwfc	prodh,w,c
 28223   002A56  6EDA               	movwf	fsr2h,c
 28224   002A58  CFDE F09F          	movff	postinc2,??_bounceDown
 28225   002A5C  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28226   002A60  0100               	movlb	0	; () banked
 28227   002A62  1F9F               	comf	??_bounceDown& (0+255),f,b
 28228   002A64  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28229   002A66  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28230   002A68  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28231   002A6A  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28232   002A6E  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28233   002A72  EC4F  F061         	call	___wmul	;wreg free
 28234   002A76  C091  F097         	movff	?___wmul,___awdiv@dividend
 28235   002A7A  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28236   002A7E  0E00               	movlw	0
 28237   002A80  0100               	movlb	0	; () banked
 28238   002A82  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28239   002A84  0E64               	movlw	100
 28240   002A86  6F99               	movwf	___awdiv@divisor& (0+255),b
 28241   002A88  EC1C  F053         	call	___awdiv	;wreg free
 28242   002A8C  0101               	movlb	1	; () banked
 28243   002A8E  51BD               	movf	bounceDown@io& (0+255),w,b
 28244   002A90  0D02               	mullw	2
 28245   002A92  0E00               	movlw	low _speed
 28246   002A94  24F3               	addwf	243,w,c
 28247   002A96  6ED9               	movwf	fsr2l,c
 28248   002A98  0E02               	movlw	high _speed
 28249   002A9A  20F4               	addwfc	prodh,w,c
 28250   002A9C  6EDA               	movwf	fsr2h,c
 28251   002A9E  0100               	movlb	0	; () banked
 28252   002AA0  C097  FFDE         	movff	?___awdiv,postinc2
 28253   002AA4  C098  FFDD         	movff	?___awdiv+1,postdec2
 28254                           
 28255                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 28256   002AA8  0101               	movlb	1	; () banked
 28257   002AAA  51BD               	movf	bounceDown@io& (0+255),w,b
 28258   002AAC  0D07               	mullw	7
 28259   002AAE  50F3               	movf	243,w,c
 28260   002AB0  0F13               	addlw	19
 28261   002AB2  EC52  F05E         	call	_getNV
 28262   002AB6  0100               	movlb	0	; () banked
 28263   002AB8  518D               	movf	?_getNV& (0+255),w,b
 28264   002ABA  6F9F               	movwf	??_bounceDown& (0+255),b
 28265   002ABC  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28266   002ABE  0101               	movlb	1	; () banked
 28267   002AC0  51BD               	movf	bounceDown@io& (0+255),w,b
 28268   002AC2  0D07               	mullw	7
 28269   002AC4  50F3               	movf	243,w,c
 28270   002AC6  0F13               	addlw	19
 28271   002AC8  EC52  F05E         	call	_getNV
 28272   002ACC  0100               	movlb	0	; () banked
 28273   002ACE  518D               	movf	?_getNV& (0+255),w,b
 28274   002AD0  279F               	addwf	??_bounceDown& (0+255),f,b
 28275   002AD2  0E00               	movlw	0
 28276   002AD4  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28277   002AD6  0101               	movlb	1	; () banked
 28278   002AD8  51BD               	movf	bounceDown@io& (0+255),w,b
 28279   002ADA  0FA9               	addlw	low _currentPos
 28280   002ADC  6ED9               	movwf	fsr2l,c
 28281   002ADE  6ADA               	clrf	fsr2h,c
 28282   002AE0  50DF               	movf	indf2,w,c
 28283   002AE2  0100               	movlb	0	; () banked
 28284   002AE4  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28285   002AE6  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28286   002AE8  5F9F               	subwf	??_bounceDown& (0+255),f,b
 28287   002AEA  0E00               	movlw	0
 28288   002AEC  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 28289   002AEE  0101               	movlb	1	; () banked
 28290   002AF0  51BD               	movf	bounceDown@io& (0+255),w,b
 28291   002AF2  0D02               	mullw	2
 28292   002AF4  0E00               	movlw	low _speed
 28293   002AF6  24F3               	addwf	243,w,c
 28294   002AF8  6ED9               	movwf	fsr2l,c
 28295   002AFA  0E02               	movlw	high _speed
 28296   002AFC  20F4               	addwfc	prodh,w,c
 28297   002AFE  6EDA               	movwf	fsr2h,c
 28298   002B00  CFDE F097          	movff	postinc2,___awdiv@dividend
 28299   002B04  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28300   002B08  0E00               	movlw	0
 28301   002B0A  0100               	movlb	0	; () banked
 28302   002B0C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28303   002B0E  0E1E               	movlw	30
 28304   002B10  6F99               	movwf	___awdiv@divisor& (0+255),b
 28305   002B12  EC1C  F053         	call	___awdiv	;wreg free
 28306   002B16  0100               	movlb	0	; () banked
 28307   002B18  5197               	movf	?___awdiv& (0+255),w,b
 28308   002B1A  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28309   002B1C  0101               	movlb	1	; () banked
 28310   002B1E  6FBB               	movwf	bounceDown@tmp& (0+255),b
 28311   002B20  0100               	movlb	0	; () banked
 28312   002B22  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28313   002B24  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 28314   002B26  0101               	movlb	1	; () banked
 28315   002B28  6FBC               	movwf	(bounceDown@tmp+1)& (0+255),b
 28316                           
 28317                           ; BSR set to: 1
 28318                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 28319   002B2A  51BD               	movf	bounceDown@io& (0+255),w,b
 28320   002B2C  0FA9               	addlw	low _currentPos
 28321   002B2E  6ED9               	movwf	fsr2l,c
 28322   002B30  6ADA               	clrf	fsr2h,c
 28323   002B32  C1BB  FFDF         	movff	bounceDown@tmp,indf2
 28324                           
 28325                           ;../bounce.c: 121:             } else {
 28326   002B36  D110               	goto	l20878
 28327   002B38                     l20864:
 28328                           
 28329                           ; BSR set to: 0
 28330                           ;../bounce.c: 124:                 speed[io] += 3;
 28331   002B38  0101               	movlb	1	; () banked
 28332   002B3A  51BD               	movf	bounceDown@io& (0+255),w,b
 28333   002B3C  0D02               	mullw	2
 28334   002B3E  0E00               	movlw	low _speed
 28335   002B40  24F3               	addwf	243,w,c
 28336   002B42  6ED9               	movwf	fsr2l,c
 28337   002B44  0E02               	movlw	high _speed
 28338   002B46  20F4               	addwfc	prodh,w,c
 28339   002B48  6EDA               	movwf	fsr2h,c
 28340   002B4A  0E03               	movlw	3
 28341   002B4C  26DE               	addwf	postinc2,f,c
 28342   002B4E  0E00               	movlw	0
 28343   002B50  22DD               	addwfc	postdec2,f,c
 28344                           
 28345                           ; BSR set to: 1
 28346                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 28347   002B52  51BD               	movf	bounceDown@io& (0+255),w,b
 28348   002B54  0D02               	mullw	2
 28349   002B56  0E00               	movlw	low _speed
 28350   002B58  24F3               	addwf	243,w,c
 28351   002B5A  6ED9               	movwf	fsr2l,c
 28352   002B5C  0E02               	movlw	high _speed
 28353   002B5E  20F4               	addwfc	prodh,w,c
 28354   002B60  6EDA               	movwf	fsr2h,c
 28355   002B62  CFDE F097          	movff	postinc2,___awdiv@dividend
 28356   002B66  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28357   002B6A  0E00               	movlw	0
 28358   002B6C  0100               	movlb	0	; () banked
 28359   002B6E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28360   002B70  0E1E               	movlw	30
 28361   002B72  6F99               	movwf	___awdiv@divisor& (0+255),b
 28362   002B74  EC1C  F053         	call	___awdiv	;wreg free
 28363   002B78  0E01               	movlw	1
 28364   002B7A  0100               	movlb	0	; () banked
 28365   002B7C  2797               	addwf	?___awdiv& (0+255),f,b
 28366   002B7E  0101               	movlb	1	; () banked
 28367   002B80  51BD               	movf	bounceDown@io& (0+255),w,b
 28368   002B82  0FA9               	addlw	low _currentPos
 28369   002B84  6ED9               	movwf	fsr2l,c
 28370   002B86  6ADA               	clrf	fsr2h,c
 28371   002B88  0100               	movlb	0	; () banked
 28372   002B8A  5197               	movf	?___awdiv& (0+255),w,b
 28373   002B8C  5EDF               	subwf	indf2,f,c
 28374   002B8E  D0E4               	goto	l20878
 28375   002B90                     l20868:
 28376                           
 28377                           ; BSR set to: 1
 28378                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 28379   002B90  51BD               	movf	bounceDown@io& (0+255),w,b
 28380   002B92  0FA9               	addlw	low _currentPos
 28381   002B94  6ED9               	movwf	fsr2l,c
 28382   002B96  6ADA               	clrf	fsr2h,c
 28383   002B98  50DF               	movf	indf2,w,c
 28384   002B9A  0100               	movlb	0	; () banked
 28385   002B9C  6F9F               	movwf	??_bounceDown& (0+255),b
 28386   002B9E  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28387   002BA0  0101               	movlb	1	; () banked
 28388   002BA2  51BD               	movf	bounceDown@io& (0+255),w,b
 28389   002BA4  0D07               	mullw	7
 28390   002BA6  50F3               	movf	243,w,c
 28391   002BA8  0F13               	addlw	19
 28392   002BAA  EC52  F05E         	call	_getNV
 28393   002BAE  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 28394   002BB2  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 28395   002BB6  0101               	movlb	1	; () banked
 28396   002BB8  51BD               	movf	bounceDown@io& (0+255),w,b
 28397   002BBA  0D02               	mullw	2
 28398   002BBC  0E00               	movlw	low _speed
 28399   002BBE  24F3               	addwf	243,w,c
 28400   002BC0  6ED9               	movwf	fsr2l,c
 28401   002BC2  0E02               	movlw	high _speed
 28402   002BC4  20F4               	addwfc	prodh,w,c
 28403   002BC6  6EDA               	movwf	fsr2h,c
 28404   002BC8  CFDE F097          	movff	postinc2,___awdiv@dividend
 28405   002BCC  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28406   002BD0  0E00               	movlw	0
 28407   002BD2  0100               	movlb	0	; () banked
 28408   002BD4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28409   002BD6  0E1E               	movlw	30
 28410   002BD8  6F99               	movwf	___awdiv@divisor& (0+255),b
 28411   002BDA  EC1C  F053         	call	___awdiv	;wreg free
 28412   002BDE  0100               	movlb	0	; () banked
 28413   002BE0  5197               	movf	?___awdiv& (0+255),w,b
 28414   002BE2  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28415   002BE4  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28416   002BE6  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28417   002BE8  A0D8               	btfss	status,0,c
 28418   002BEA  2998               	incf	(?___awdiv+1)& (0+255),w,b
 28419   002BEC  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28420   002BEE  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 28421   002BF0  519F               	movf	??_bounceDown& (0+255),w,b
 28422   002BF2  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28423   002BF4  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28424   002BF6  0A80               	xorlw	128
 28425   002BF8  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28426   002BFA  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28427   002BFC  0A80               	xorlw	128
 28428   002BFE  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28429   002C00  B0D8               	btfsc	status,0,c
 28430   002C02  D07F               	goto	l20874
 28431                           
 28432                           ; BSR set to: 0
 28433                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28434   002C04  0101               	movlb	1	; () banked
 28435   002C06  51BD               	movf	bounceDown@io& (0+255),w,b
 28436   002C08  0D07               	mullw	7
 28437   002C0A  50F3               	movf	243,w,c
 28438   002C0C  0F14               	addlw	20
 28439   002C0E  EC52  F05E         	call	_getNV
 28440   002C12  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28441   002C16  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28442   002C1A  0101               	movlb	1	; () banked
 28443   002C1C  51BD               	movf	bounceDown@io& (0+255),w,b
 28444   002C1E  0D02               	mullw	2
 28445   002C20  0E00               	movlw	low _speed
 28446   002C22  24F3               	addwf	243,w,c
 28447   002C24  6ED9               	movwf	fsr2l,c
 28448   002C26  0E02               	movlw	high _speed
 28449   002C28  20F4               	addwfc	prodh,w,c
 28450   002C2A  6EDA               	movwf	fsr2h,c
 28451   002C2C  CFDE F09F          	movff	postinc2,??_bounceDown
 28452   002C30  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28453   002C34  0100               	movlb	0	; () banked
 28454   002C36  1F9F               	comf	??_bounceDown& (0+255),f,b
 28455   002C38  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28456   002C3A  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28457   002C3C  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28458   002C3E  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28459   002C42  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28460   002C46  EC4F  F061         	call	___wmul	;wreg free
 28461   002C4A  C091  F097         	movff	?___wmul,___awdiv@dividend
 28462   002C4E  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28463   002C52  0E00               	movlw	0
 28464   002C54  0100               	movlb	0	; () banked
 28465   002C56  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28466   002C58  0E64               	movlw	100
 28467   002C5A  6F99               	movwf	___awdiv@divisor& (0+255),b
 28468   002C5C  EC1C  F053         	call	___awdiv	;wreg free
 28469   002C60  0101               	movlb	1	; () banked
 28470   002C62  51BD               	movf	bounceDown@io& (0+255),w,b
 28471   002C64  0D02               	mullw	2
 28472   002C66  0E00               	movlw	low _speed
 28473   002C68  24F3               	addwf	243,w,c
 28474   002C6A  6ED9               	movwf	fsr2l,c
 28475   002C6C  0E02               	movlw	high _speed
 28476   002C6E  20F4               	addwfc	prodh,w,c
 28477   002C70  6EDA               	movwf	fsr2h,c
 28478   002C72  0100               	movlb	0	; () banked
 28479   002C74  C097  FFDE         	movff	?___awdiv,postinc2
 28480   002C78  C098  FFDD         	movff	?___awdiv+1,postdec2
 28481                           
 28482                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 28483   002C7C  0101               	movlb	1	; () banked
 28484   002C7E  51BD               	movf	bounceDown@io& (0+255),w,b
 28485   002C80  0D07               	mullw	7
 28486   002C82  50F3               	movf	243,w,c
 28487   002C84  0F13               	addlw	19
 28488   002C86  EC52  F05E         	call	_getNV
 28489   002C8A  0100               	movlb	0	; () banked
 28490   002C8C  518D               	movf	?_getNV& (0+255),w,b
 28491   002C8E  6F9F               	movwf	??_bounceDown& (0+255),b
 28492   002C90  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28493   002C92  0101               	movlb	1	; () banked
 28494   002C94  51BD               	movf	bounceDown@io& (0+255),w,b
 28495   002C96  0D07               	mullw	7
 28496   002C98  50F3               	movf	243,w,c
 28497   002C9A  0F13               	addlw	19
 28498   002C9C  EC52  F05E         	call	_getNV
 28499   002CA0  0100               	movlb	0	; () banked
 28500   002CA2  518D               	movf	?_getNV& (0+255),w,b
 28501   002CA4  279F               	addwf	??_bounceDown& (0+255),f,b
 28502   002CA6  0E00               	movlw	0
 28503   002CA8  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28504   002CAA  0101               	movlb	1	; () banked
 28505   002CAC  51BD               	movf	bounceDown@io& (0+255),w,b
 28506   002CAE  0D02               	mullw	2
 28507   002CB0  0E00               	movlw	low _speed
 28508   002CB2  24F3               	addwf	243,w,c
 28509   002CB4  6ED9               	movwf	fsr2l,c
 28510   002CB6  0E02               	movlw	high _speed
 28511   002CB8  20F4               	addwfc	prodh,w,c
 28512   002CBA  6EDA               	movwf	fsr2h,c
 28513   002CBC  CFDE F097          	movff	postinc2,___awdiv@dividend
 28514   002CC0  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28515   002CC4  0E00               	movlw	0
 28516   002CC6  0100               	movlb	0	; () banked
 28517   002CC8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28518   002CCA  0E1E               	movlw	30
 28519   002CCC  6F99               	movwf	___awdiv@divisor& (0+255),b
 28520   002CCE  EC1C  F053         	call	___awdiv	;wreg free
 28521   002CD2  0100               	movlb	0	; () banked
 28522   002CD4  5197               	movf	?___awdiv& (0+255),w,b
 28523   002CD6  259F               	addwf	??_bounceDown& (0+255),w,b
 28524   002CD8  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28525   002CDA  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28526   002CDC  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28527   002CDE  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28528   002CE0  0101               	movlb	1	; () banked
 28529   002CE2  51BD               	movf	bounceDown@io& (0+255),w,b
 28530   002CE4  0FA9               	addlw	low _currentPos
 28531   002CE6  6ED9               	movwf	fsr2l,c
 28532   002CE8  6ADA               	clrf	fsr2h,c
 28533   002CEA  50DF               	movf	indf2,w,c
 28534   002CEC  0100               	movlb	0	; () banked
 28535   002CEE  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28536   002CF0  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28537   002CF2  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28538   002CF4  0101               	movlb	1	; () banked
 28539   002CF6  6FBB               	movwf	bounceDown@tmp& (0+255),b
 28540   002CF8  0100               	movlb	0	; () banked
 28541   002CFA  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28542   002CFC  A0D8               	btfss	status,0,c
 28543   002CFE  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 28544   002D00  D712               	goto	L7
 28545   002D02                     l20874:
 28546                           
 28547                           ; BSR set to: 0
 28548                           ;../bounce.c: 142:                 speed[io] += 3;
 28549   002D02  0101               	movlb	1	; () banked
 28550   002D04  51BD               	movf	bounceDown@io& (0+255),w,b
 28551   002D06  0D02               	mullw	2
 28552   002D08  0E00               	movlw	low _speed
 28553   002D0A  24F3               	addwf	243,w,c
 28554   002D0C  6ED9               	movwf	fsr2l,c
 28555   002D0E  0E02               	movlw	high _speed
 28556   002D10  20F4               	addwfc	prodh,w,c
 28557   002D12  6EDA               	movwf	fsr2h,c
 28558   002D14  0E03               	movlw	3
 28559   002D16  26DE               	addwf	postinc2,f,c
 28560   002D18  0E00               	movlw	0
 28561   002D1A  22DD               	addwfc	postdec2,f,c
 28562                           
 28563                           ; BSR set to: 1
 28564                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 28565   002D1C  51BD               	movf	bounceDown@io& (0+255),w,b
 28566   002D1E  0D02               	mullw	2
 28567   002D20  0E00               	movlw	low _speed
 28568   002D22  24F3               	addwf	243,w,c
 28569   002D24  6ED9               	movwf	fsr2l,c
 28570   002D26  0E02               	movlw	high _speed
 28571   002D28  20F4               	addwfc	prodh,w,c
 28572   002D2A  6EDA               	movwf	fsr2h,c
 28573   002D2C  CFDE F097          	movff	postinc2,___awdiv@dividend
 28574   002D30  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28575   002D34  0E00               	movlw	0
 28576   002D36  0100               	movlb	0	; () banked
 28577   002D38  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28578   002D3A  0E1E               	movlw	30
 28579   002D3C  6F99               	movwf	___awdiv@divisor& (0+255),b
 28580   002D3E  EC1C  F053         	call	___awdiv	;wreg free
 28581   002D42  0E01               	movlw	1
 28582   002D44  0100               	movlb	0	; () banked
 28583   002D46  2797               	addwf	?___awdiv& (0+255),f,b
 28584   002D48  0101               	movlb	1	; () banked
 28585   002D4A  51BD               	movf	bounceDown@io& (0+255),w,b
 28586   002D4C  0FA9               	addlw	low _currentPos
 28587   002D4E  6ED9               	movwf	fsr2l,c
 28588   002D50  6ADA               	clrf	fsr2h,c
 28589   002D52  0100               	movlb	0	; () banked
 28590   002D54  5197               	movf	?___awdiv& (0+255),w,b
 28591   002D56  26DF               	addwf	indf2,f,c
 28592   002D58                     l20878:
 28593                           
 28594                           ;../bounce.c: 147:         return FALSE;
 28595   002D58  0E00               	movlw	0
 28596   002D5A  0012               	return	
 28597   002D5C                     l20882:
 28598                           
 28599                           ; BSR set to: 1
 28600                           ;../bounce.c: 149:     return TRUE;
 28601   002D5C  0E01               	movlw	1
 28602   002D5E  0012               	return		;funcret
 28603   002D60                     __end_of_bounceDown:
 28604                           	callstack 0
 28605                           
 28606 ;; *************** function _processOutputs *****************
 28607 ;; Defined at:
 28608 ;;		line 178 in file "../digitalOut.c"
 28609 ;; Parameters:    Size  Location     Type
 28610 ;;		None
 28611 ;; Auto vars:     Size  Location     Type
 28612 ;;  io              1   19[BANK1 ] unsigned char 
 28613 ;; Return value:  Size  Location     Type
 28614 ;;                  1    wreg      void 
 28615 ;; Registers used:
 28616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28617 ;; Tracked objects:
 28618 ;;		On entry : 0/0
 28619 ;;		On exit  : 0/0
 28620 ;;		Unchanged: 0/0
 28621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28623 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28624 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28625 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28626 ;;Total ram usage:        2 bytes
 28627 ;; Hardware stack levels used: 1
 28628 ;; Hardware stack levels required when called: 18
 28629 ;; This function calls:
 28630 ;;		_getNV
 28631 ;;		_sendProducedEvent
 28632 ;;		_setOutputPin
 28633 ;; This function is called by:
 28634 ;;		_loop
 28635 ;; This function uses a non-reentrant model
 28636 ;;
 28637                           
 28638                           	psect	text104
 28639   0069C2                     __ptext104:
 28640                           	callstack 0
 28641   0069C2                     _processOutputs:
 28642                           	callstack 11
 28643                           
 28644                           ;../digitalOut.c: 179:     uint8_t io;;../digitalOut.c: 180:     for (io=0; io<16; io++)
      +                           {
 28645                           
 28646                           ;incstack = 0
 28647   0069C2  0E00               	movlw	0
 28648   0069C4  0101               	movlb	1	; () banked
 28649   0069C6  6FCD               	movwf	processOutputs@io& (0+255),b
 28650   0069C8                     l22990:
 28651                           
 28652                           ; BSR set to: 1
 28653                           ;../digitalOut.c: 181:         if (getNV((16 + 7*(io) + 0)) == 1) {
 28654   0069C8  51CD               	movf	processOutputs@io& (0+255),w,b
 28655   0069CA  0D07               	mullw	7
 28656   0069CC  50F3               	movf	243,w,c
 28657   0069CE  0F10               	addlw	16
 28658   0069D0  EC52  F05E         	call	_getNV
 28659   0069D4  0100               	movlb	0	; () banked
 28660   0069D6  058D               	decf	?_getNV& (0+255),w,b
 28661   0069D8  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28662   0069DA  A4D8               	btfss	status,2,c
 28663   0069DC  D0D5               	goto	l281
 28664                           
 28665                           ; BSR set to: 0
 28666                           ;../digitalOut.c: 183:             if (flashDelays[io] == 1) {
 28667   0069DE  0E30               	movlw	low _flashDelays
 28668   0069E0  0101               	movlb	1	; () banked
 28669   0069E2  25CD               	addwf	processOutputs@io& (0+255),w,b
 28670   0069E4  6ED9               	movwf	fsr2l,c
 28671   0069E6  6ADA               	clrf	fsr2h,c
 28672   0069E8  0E01               	movlw	high _flashDelays
 28673   0069EA  22DA               	addwfc	fsr2h,f,c
 28674   0069EC  04DE               	decf	postinc2,w,c
 28675   0069EE  A4D8               	btfss	status,2,c
 28676   0069F0  D02F               	goto	l23000
 28677                           
 28678                           ; BSR set to: 1
 28679                           ;../digitalOut.c: 184:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 28680   0069F2  51CD               	movf	processOutputs@io& (0+255),w,b
 28681   0069F4  0D07               	mullw	7
 28682   0069F6  50F3               	movf	243,w,c
 28683   0069F8  0F11               	addlw	17
 28684   0069FA  EC52  F05E         	call	_getNV
 28685   0069FE  0100               	movlb	0	; () banked
 28686   006A00  518D               	movf	?_getNV& (0+255),w,b
 28687   006A02  0B20               	andlw	32
 28688   006A04  6F91               	movwf	setOutputPin@state& (0+255),b
 28689   006A06  0101               	movlb	1	; () banked
 28690   006A08  51CD               	movf	processOutputs@io& (0+255),w,b
 28691   006A0A  ECAB  F036         	call	_setOutputPin
 28692                           
 28693                           ;../digitalOut.c: 185:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 28694   006A0E  0101               	movlb	1	; () banked
 28695   006A10  51CD               	movf	processOutputs@io& (0+255),w,b
 28696   006A12  0D07               	mullw	7
 28697   006A14  50F3               	movf	243,w,c
 28698   006A16  0F13               	addlw	19
 28699   006A18  EC52  F05E         	call	_getNV
 28700   006A1C  0E30               	movlw	low _flashDelays
 28701   006A1E  0101               	movlb	1	; () banked
 28702   006A20  25CD               	addwf	processOutputs@io& (0+255),w,b
 28703   006A22  6ED9               	movwf	fsr2l,c
 28704   006A24  6ADA               	clrf	fsr2h,c
 28705   006A26  0E01               	movlw	high _flashDelays
 28706   006A28  22DA               	addwfc	fsr2h,f,c
 28707   006A2A  0100               	movlb	0	; () banked
 28708   006A2C  C08D  FFDF         	movff	?_getNV,indf2
 28709                           
 28710                           ; BSR set to: 0
 28711                           ;../digitalOut.c: 186:                 flashDelays[io] = - flashDelays[io];
 28712   006A30  0E30               	movlw	low _flashDelays
 28713   006A32  0101               	movlb	1	; () banked
 28714   006A34  25CD               	addwf	processOutputs@io& (0+255),w,b
 28715   006A36  6ED9               	movwf	fsr2l,c
 28716   006A38  6ADA               	clrf	fsr2h,c
 28717   006A3A  0E01               	movlw	high _flashDelays
 28718   006A3C  22DA               	addwfc	fsr2h,f,c
 28719   006A3E  0E30               	movlw	low _flashDelays
 28720   006A40  25CD               	addwf	processOutputs@io& (0+255),w,b
 28721   006A42  6EE1               	movwf	fsr1l,c
 28722   006A44  6AE2               	clrf	fsr1h,c
 28723   006A46  0E01               	movlw	high _flashDelays
 28724   006A48  22E2               	addwfc	fsr1h,f,c
 28725   006A4A  50E7               	movf	indf1,w,c
 28726   006A4C  0800               	sublw	0
 28727   006A4E  6EDF               	movwf	indf2,c
 28728   006A50                     l23000:
 28729                           
 28730                           ; BSR set to: 1
 28731                           ;../digitalOut.c: 188:             if (flashDelays[io] == -1) {
 28732   006A50  0E30               	movlw	low _flashDelays
 28733   006A52  25CD               	addwf	processOutputs@io& (0+255),w,b
 28734   006A54  6ED9               	movwf	fsr2l,c
 28735   006A56  6ADA               	clrf	fsr2h,c
 28736   006A58  0E01               	movlw	high _flashDelays
 28737   006A5A  22DA               	addwfc	fsr2h,f,c
 28738   006A5C  28DE               	incf	postinc2,w,c
 28739   006A5E  A4D8               	btfss	status,2,c
 28740   006A60  D022               	goto	l23006
 28741                           
 28742                           ; BSR set to: 1
 28743                           ;../digitalOut.c: 189:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 28744   006A62  51CD               	movf	processOutputs@io& (0+255),w,b
 28745   006A64  0D07               	mullw	7
 28746   006A66  50F3               	movf	243,w,c
 28747   006A68  0F11               	addlw	17
 28748   006A6A  EC52  F05E         	call	_getNV
 28749   006A6E  0100               	movlb	0	; () banked
 28750   006A70  BB8D               	btfsc	?_getNV& (0+255),5,b
 28751   006A72  D002               	goto	u24350
 28752   006A74  0E01               	movlw	1
 28753   006A76  D001               	goto	u24360
 28754   006A78                     u24350:
 28755   006A78  0E00               	movlw	0
 28756   006A7A                     u24360:
 28757   006A7A  6F91               	movwf	setOutputPin@state& (0+255),b
 28758   006A7C  0101               	movlb	1	; () banked
 28759   006A7E  51CD               	movf	processOutputs@io& (0+255),w,b
 28760   006A80  ECAB  F036         	call	_setOutputPin
 28761                           
 28762                           ;../digitalOut.c: 190:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 28763   006A84  0101               	movlb	1	; () banked
 28764   006A86  51CD               	movf	processOutputs@io& (0+255),w,b
 28765   006A88  0D07               	mullw	7
 28766   006A8A  50F3               	movf	243,w,c
 28767   006A8C  0F13               	addlw	19
 28768   006A8E  EC52  F05E         	call	_getNV
 28769   006A92  0E30               	movlw	low _flashDelays
 28770   006A94  0101               	movlb	1	; () banked
 28771   006A96  25CD               	addwf	processOutputs@io& (0+255),w,b
 28772   006A98  6ED9               	movwf	fsr2l,c
 28773   006A9A  6ADA               	clrf	fsr2h,c
 28774   006A9C  0E01               	movlw	high _flashDelays
 28775   006A9E  22DA               	addwfc	fsr2h,f,c
 28776   006AA0  0100               	movlb	0	; () banked
 28777   006AA2  C08D  FFDF         	movff	?_getNV,indf2
 28778   006AA6                     l23006:
 28779                           
 28780                           ;../digitalOut.c: 192:             if (flashDelays[io] > 1) {
 28781   006AA6  0E30               	movlw	low _flashDelays
 28782   006AA8  0101               	movlb	1	; () banked
 28783   006AAA  25CD               	addwf	processOutputs@io& (0+255),w,b
 28784   006AAC  6ED9               	movwf	fsr2l,c
 28785   006AAE  6ADA               	clrf	fsr2h,c
 28786   006AB0  0E01               	movlw	high _flashDelays
 28787   006AB2  22DA               	addwfc	fsr2h,f,c
 28788   006AB4  50DF               	movf	indf2,w,c
 28789   006AB6  0A80               	xorlw	128
 28790   006AB8  0F7E               	addlw	-130
 28791   006ABA  A0D8               	btfss	status,0,c
 28792   006ABC  D008               	goto	l23010
 28793                           
 28794                           ; BSR set to: 1
 28795                           ;../digitalOut.c: 193:                 flashDelays[io]--;
 28796   006ABE  0E30               	movlw	low _flashDelays
 28797   006AC0  25CD               	addwf	processOutputs@io& (0+255),w,b
 28798   006AC2  6ED9               	movwf	fsr2l,c
 28799   006AC4  6ADA               	clrf	fsr2h,c
 28800   006AC6  0E01               	movlw	high _flashDelays
 28801   006AC8  22DA               	addwfc	fsr2h,f,c
 28802   006ACA  06DF               	decf	indf2,f,c
 28803                           
 28804                           ;../digitalOut.c: 194:             } else if (flashDelays[io] < -1) {
 28805   006ACC  D012               	goto	l279
 28806   006ACE                     l23010:
 28807                           
 28808                           ; BSR set to: 1
 28809   006ACE  0E30               	movlw	low _flashDelays
 28810   006AD0  25CD               	addwf	processOutputs@io& (0+255),w,b
 28811   006AD2  6ED9               	movwf	fsr2l,c
 28812   006AD4  6ADA               	clrf	fsr2h,c
 28813   006AD6  0E01               	movlw	high _flashDelays
 28814   006AD8  22DA               	addwfc	fsr2h,f,c
 28815   006ADA  50DF               	movf	indf2,w,c
 28816   006ADC  0A80               	xorlw	128
 28817   006ADE  0F81               	addlw	129
 28818   006AE0  B0D8               	btfsc	status,0,c
 28819   006AE2  D007               	goto	l279
 28820                           
 28821                           ; BSR set to: 1
 28822                           ;../digitalOut.c: 195:                 flashDelays[io]++;
 28823   006AE4  0E30               	movlw	low _flashDelays
 28824   006AE6  25CD               	addwf	processOutputs@io& (0+255),w,b
 28825   006AE8  6ED9               	movwf	fsr2l,c
 28826   006AEA  6ADA               	clrf	fsr2h,c
 28827   006AEC  0E01               	movlw	high _flashDelays
 28828   006AEE  22DA               	addwfc	fsr2h,f,c
 28829   006AF0  2ADF               	incf	indf2,f,c
 28830   006AF2                     l279:
 28831                           
 28832                           ; BSR set to: 1
 28833                           ;../digitalOut.c: 198:             if (pulseDelays[io] != 0) {
 28834   006AF2  0EA4               	movlw	low _pulseDelays
 28835   006AF4  25CD               	addwf	processOutputs@io& (0+255),w,b
 28836   006AF6  6ED9               	movwf	fsr2l,c
 28837   006AF8  6ADA               	clrf	fsr2h,c
 28838   006AFA  0E02               	movlw	high _pulseDelays
 28839   006AFC  22DA               	addwfc	fsr2h,f,c
 28840   006AFE  50DF               	movf	indf2,w,c
 28841   006B00  B4D8               	btfsc	status,2,c
 28842   006B02  D042               	goto	l281
 28843                           
 28844                           ; BSR set to: 1
 28845                           ;../digitalOut.c: 199:                 pulseDelays[io]--;
 28846   006B04  0EA4               	movlw	low _pulseDelays
 28847   006B06  25CD               	addwf	processOutputs@io& (0+255),w,b
 28848   006B08  6ED9               	movwf	fsr2l,c
 28849   006B0A  6ADA               	clrf	fsr2h,c
 28850   006B0C  0E02               	movlw	high _pulseDelays
 28851   006B0E  22DA               	addwfc	fsr2h,f,c
 28852   006B10  06DF               	decf	indf2,f,c
 28853                           
 28854                           ;../digitalOut.c: 202:                 if (pulseDelays[io] == 1) {
 28855   006B12  0EA4               	movlw	low _pulseDelays
 28856   006B14  25CD               	addwf	processOutputs@io& (0+255),w,b
 28857   006B16  6ED9               	movwf	fsr2l,c
 28858   006B18  6ADA               	clrf	fsr2h,c
 28859   006B1A  0E02               	movlw	high _pulseDelays
 28860   006B1C  22DA               	addwfc	fsr2h,f,c
 28861   006B1E  04DE               	decf	postinc2,w,c
 28862   006B20  A4D8               	btfss	status,2,c
 28863   006B22  D032               	goto	l281
 28864                           
 28865                           ; BSR set to: 1
 28866                           ;../digitalOut.c: 204:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 28867   006B24  51CD               	movf	processOutputs@io& (0+255),w,b
 28868   006B26  0D07               	mullw	7
 28869   006B28  50F3               	movf	243,w,c
 28870   006B2A  0F11               	addlw	17
 28871   006B2C  EC52  F05E         	call	_getNV
 28872   006B30  0100               	movlb	0	; () banked
 28873   006B32  AB8D               	btfss	?_getNV& (0+255),5,b
 28874   006B34  D007               	goto	l23020
 28875                           
 28876                           ; BSR set to: 0
 28877                           ;../digitalOut.c: 205:                         setOutputPin(io, TRUE);
 28878   006B36  0E01               	movlw	1
 28879   006B38  6F91               	movwf	setOutputPin@state& (0+255),b
 28880   006B3A  0101               	movlb	1	; () banked
 28881   006B3C  51CD               	movf	processOutputs@io& (0+255),w,b
 28882   006B3E  ECAB  F036         	call	_setOutputPin
 28883                           
 28884                           ;../digitalOut.c: 206:                     } else {
 28885   006B42  D006               	goto	l23022
 28886   006B44                     l23020:
 28887                           
 28888                           ; BSR set to: 0
 28889                           ;../digitalOut.c: 207:                         setOutputPin(io, FALSE);
 28890   006B44  0E00               	movlw	0
 28891   006B46  6F91               	movwf	setOutputPin@state& (0+255),b
 28892   006B48  0101               	movlb	1	; () banked
 28893   006B4A  51CD               	movf	processOutputs@io& (0+255),w,b
 28894   006B4C  ECAB  F036         	call	_setOutputPin
 28895   006B50                     l23022:
 28896                           
 28897                           ;../digitalOut.c: 210:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 28898   006B50  0101               	movlb	1	; () banked
 28899   006B52  51CD               	movf	processOutputs@io& (0+255),w,b
 28900   006B54  0D07               	mullw	7
 28901   006B56  50F3               	movf	243,w,c
 28902   006B58  0F11               	addlw	17
 28903   006B5A  EC52  F05E         	call	_getNV
 28904   006B5E  0100               	movlb	0	; () banked
 28905   006B60  B78D               	btfsc	?_getNV& (0+255),3,b
 28906   006B62  D012               	goto	l281
 28907                           
 28908                           ; BSR set to: 0
 28909                           ;../digitalOut.c: 212:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 28910   006B64  0101               	movlb	1	; () banked
 28911   006B66  51CD               	movf	processOutputs@io& (0+255),w,b
 28912   006B68  0D07               	mullw	7
 28913   006B6A  50F3               	movf	243,w,c
 28914   006B6C  0F11               	addlw	17
 28915   006B6E  EC52  F05E         	call	_getNV
 28916   006B72  0100               	movlb	0	; () banked
 28917   006B74  518D               	movf	?_getNV& (0+255),w,b
 28918   006B76  0B40               	andlw	64
 28919   006B78  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 28920   006B7A  0101               	movlb	1	; () banked
 28921   006B7C  51CD               	movf	processOutputs@io& (0+255),w,b
 28922   006B7E  0D04               	mullw	4
 28923   006B80  50F3               	movf	243,w,c
 28924   006B82  0F08               	addlw	8
 28925   006B84  EC3B  F04B         	call	_sendProducedEvent
 28926   006B88                     l281:
 28927                           
 28928                           ;../digitalOut.c: 217:     }
 28929                           
 28930                           ; BSR set to: 0
 28931   006B88  0101               	movlb	1	; () banked
 28932   006B8A  2BCD               	incf	processOutputs@io& (0+255),f,b
 28933                           
 28934                           ; BSR set to: 1
 28935   006B8C  0E0F               	movlw	15
 28936   006B8E  65CD               	cpfsgt	processOutputs@io& (0+255),b
 28937   006B90  D71B               	goto	l22990
 28938   006B92  0012               	return	
 28939   006B94                     __end_of_processOutputs:
 28940                           	callstack 0
 28941                           
 28942 ;; *************** function _processActions *****************
 28943 ;; Defined at:
 28944 ;;		line 233 in file "../universalEvents.c"
 28945 ;; Parameters:    Size  Location     Type
 28946 ;;		None
 28947 ;; Auto vars:     Size  Location     Type
 28948 ;;  nextAction      1   43[BANK1 ] unsigned char 
 28949 ;;  nextIo          1   40[BANK1 ] unsigned char 
 28950 ;;  nextType        1   39[BANK1 ] unsigned char 
 28951 ;;  action          1   45[BANK1 ] unsigned char 
 28952 ;;  io              1   44[BANK1 ] unsigned char 
 28953 ;;  ioAction        1   42[BANK1 ] unsigned char 
 28954 ;;  type            1   41[BANK1 ] unsigned char 
 28955 ;;  peekItem        1   38[BANK1 ] unsigned char 
 28956 ;;  simultaneous    1   37[BANK1 ] unsigned char 
 28957 ;; Return value:  Size  Location     Type
 28958 ;;                  1    wreg      void 
 28959 ;; Registers used:
 28960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28961 ;; Tracked objects:
 28962 ;;		On entry : 0/0
 28963 ;;		On exit  : 0/0
 28964 ;;		Unchanged: 0/0
 28965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28967 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28969 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28970 ;;Total ram usage:        9 bytes
 28971 ;; Hardware stack levels used: 1
 28972 ;; Hardware stack levels required when called: 21
 28973 ;; This function calls:
 28974 ;;		___awdiv
 28975 ;;		___awmod
 28976 ;;		_completed
 28977 ;;		_deleteTwoActionQueue
 28978 ;;		_doSOD
 28979 ;;		_doWait
 28980 ;;		_doneTwoAction
 28981 ;;		_finaliseOutput
 28982 ;;		_getNV
 28983 ;;		_getTwoAction
 28984 ;;		_needsStarting
 28985 ;;		_peekTwoActionQueue
 28986 ;;		_setOutputState
 28987 ;;		_startOutput
 28988 ;; This function is called by:
 28989 ;;		_loop
 28990 ;; This function uses a non-reentrant model
 28991 ;;
 28992                           
 28993                           	psect	text105
 28994   0061B2                     __ptext105:
 28995                           	callstack 0
 28996   0061B2                     _processActions:
 28997                           	callstack 8
 28998                           
 28999                           ;../universalEvents.c: 242:         action = getTwoAction();
 29000                           
 29001                           ; BSR set to: 1
 29002                           ;incstack = 0
 29003                           ;../universalEvents.c: 234:     uint8_t io;;../universalEvents.c: 235:     uint8_t type;
      +                          ;../universalEvents.c: 236:     uint8_t action;;../universalEvents.c: 237:     uint8_t i
      +                          oAction;;../universalEvents.c: 238:     uint8_t simultaneous;;../universalEvents.c: 239:
      +                               uint8_t peekItem;;../universalEvents.c: 241:     while (1) {
 29004   0061B2  EC0E  F063         	call	_getTwoAction	;wreg free
 29005   0061B6  0101               	movlb	1	; () banked
 29006   0061B8  6FE7               	movwf	processActions@action& (0+255),b
 29007                           
 29008                           ; BSR set to: 1
 29009                           ;../universalEvents.c: 244:         if (action == 0) {
 29010   0061BA  51E7               	movf	processActions@action& (0+255),w,b
 29011   0061BC  A4D8               	btfss	status,2,c
 29012   0061BE  D003               	goto	l22892
 29013   0061C0                     u24170:
 29014                           
 29015                           ;../universalEvents.c: 245:             doneTwoAction();
 29016   0061C0  EC1F  F063         	call	_doneTwoAction	;wreg free
 29017   0061C4  0012               	return	
 29018   0061C6                     l22892:
 29019                           
 29020                           ; BSR set to: 1
 29021                           ;../universalEvents.c: 249:         if (action == 1) {
 29022   0061C6  05E7               	decf	processActions@action& (0+255),w,b
 29023   0061C8  A4D8               	btfss	status,2,c
 29024   0061CA  D003               	goto	l22900
 29025                           
 29026                           ; BSR set to: 1
 29027                           ;../universalEvents.c: 251:             doSOD();
 29028   0061CC  EC89  F062         	call	_doSOD	;wreg free
 29029   0061D0  D7F7               	goto	u24170
 29030   0061D2                     l22900:
 29031                           
 29032                           ; BSR set to: 1
 29033                           ;../universalEvents.c: 255:         if (action == 2) {
 29034   0061D2  0E02               	movlw	2
 29035   0061D4  19E7               	xorwf	processActions@action& (0+255),w,b
 29036   0061D6  A4D8               	btfss	status,2,c
 29037   0061D8  D008               	goto	l22906
 29038                           
 29039                           ; BSR set to: 1
 29040                           ;../universalEvents.c: 256:             doWait(5);
 29041   0061DA  0E00               	movlw	0
 29042   0061DC  0100               	movlb	0	; () banked
 29043   0061DE  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29044   0061E0  0E05               	movlw	5
 29045   0061E2  6F9D               	movwf	doWait@duration& (0+255),b
 29046   0061E4  EC91  F052         	call	_doWait	;wreg free
 29047   0061E8  0012               	return	
 29048   0061EA                     l22906:
 29049                           
 29050                           ; BSR set to: 1
 29051                           ;../universalEvents.c: 259:         if (action == 3) {
 29052   0061EA  0E03               	movlw	3
 29053   0061EC  19E7               	xorwf	processActions@action& (0+255),w,b
 29054   0061EE  A4D8               	btfss	status,2,c
 29055   0061F0  D008               	goto	l22912
 29056                           
 29057                           ; BSR set to: 1
 29058                           ;../universalEvents.c: 260:             doWait(10);
 29059   0061F2  0E00               	movlw	0
 29060   0061F4  0100               	movlb	0	; () banked
 29061   0061F6  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29062   0061F8  0E0A               	movlw	10
 29063   0061FA  6F9D               	movwf	doWait@duration& (0+255),b
 29064   0061FC  EC91  F052         	call	_doWait	;wreg free
 29065   006200  0012               	return	
 29066   006202                     l22912:
 29067                           
 29068                           ; BSR set to: 1
 29069                           ;../universalEvents.c: 263:         if (action == 4) {
 29070   006202  0E04               	movlw	4
 29071   006204  19E7               	xorwf	processActions@action& (0+255),w,b
 29072   006206  A4D8               	btfss	status,2,c
 29073   006208  D008               	goto	l22918
 29074                           
 29075                           ; BSR set to: 1
 29076                           ;../universalEvents.c: 264:             doWait(20);
 29077   00620A  0E00               	movlw	0
 29078   00620C  0100               	movlb	0	; () banked
 29079   00620E  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29080   006210  0E14               	movlw	20
 29081   006212  6F9D               	movwf	doWait@duration& (0+255),b
 29082   006214  EC91  F052         	call	_doWait	;wreg free
 29083   006218  0012               	return	
 29084   00621A                     l22918:
 29085                           
 29086                           ; BSR set to: 1
 29087                           ;../universalEvents.c: 267:         if (action == 5) {
 29088   00621A  0E05               	movlw	5
 29089   00621C  19E7               	xorwf	processActions@action& (0+255),w,b
 29090   00621E  A4D8               	btfss	status,2,c
 29091   006220  D008               	goto	l22924
 29092                           
 29093                           ; BSR set to: 1
 29094                           ;../universalEvents.c: 268:             doWait(50);
 29095   006222  0E00               	movlw	0
 29096   006224  0100               	movlb	0	; () banked
 29097   006226  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29098   006228  0E32               	movlw	50
 29099   00622A  6F9D               	movwf	doWait@duration& (0+255),b
 29100   00622C  EC91  F052         	call	_doWait	;wreg free
 29101   006230  0012               	return	
 29102   006232                     l22924:
 29103                           
 29104                           ; BSR set to: 1
 29105                           ;../universalEvents.c: 271:         simultaneous = action & 0x80;
 29106   006232  51E7               	movf	processActions@action& (0+255),w,b
 29107   006234  0B80               	andlw	128
 29108   006236  6FDF               	movwf	processActions@simultaneous& (0+255),b
 29109                           
 29110                           ;../universalEvents.c: 272:         ioAction = action&0x7F;
 29111   006238  51E7               	movf	processActions@action& (0+255),w,b
 29112   00623A  0B7F               	andlw	127
 29113   00623C  6FE4               	movwf	processActions@ioAction& (0+255),b
 29114                           
 29115                           ;../universalEvents.c: 273:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 29116   00623E  0E07               	movlw	7
 29117   006240  65E4               	cpfsgt	processActions@ioAction& (0+255),b
 29118   006242  D0D0               	goto	l22982
 29119                           
 29120                           ; BSR set to: 1
 29121   006244  0E58               	movlw	88
 29122   006246  61E4               	cpfslt	processActions@ioAction& (0+255),b
 29123   006248  D0CD               	goto	l22982
 29124                           
 29125                           ; BSR set to: 1
 29126                           ;../universalEvents.c: 276:             io = (((ioAction)-8)/5);
 29127   00624A  0EF8               	movlw	248
 29128   00624C  25E4               	addwf	processActions@ioAction& (0+255),w,b
 29129   00624E  0100               	movlb	0	; () banked
 29130   006250  6F97               	movwf	___awdiv@dividend& (0+255),b
 29131   006252  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29132   006254  0EFF               	movlw	255
 29133   006256  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29134   006258  0E00               	movlw	0
 29135   00625A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29136   00625C  0E05               	movlw	5
 29137   00625E  6F99               	movwf	___awdiv@divisor& (0+255),b
 29138   006260  EC1C  F053         	call	___awdiv	;wreg free
 29139   006264  0100               	movlb	0	; () banked
 29140   006266  5197               	movf	?___awdiv& (0+255),w,b
 29141   006268  0101               	movlb	1	; () banked
 29142   00626A  6FE6               	movwf	processActions@io& (0+255),b
 29143                           
 29144                           ;../universalEvents.c: 277:             ioAction = (((ioAction)-8)%5);
 29145   00626C  0EF8               	movlw	248
 29146   00626E  25E4               	addwf	processActions@ioAction& (0+255),w,b
 29147   006270  0100               	movlb	0	; () banked
 29148   006272  6F8D               	movwf	___awmod@dividend& (0+255),b
 29149   006274  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29150   006276  0EFF               	movlw	255
 29151   006278  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29152   00627A  0E00               	movlw	0
 29153   00627C  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29154   00627E  0E05               	movlw	5
 29155   006280  6F8F               	movwf	___awmod@divisor& (0+255),b
 29156   006282  EC31  F057         	call	___awmod	;wreg free
 29157   006286  0100               	movlb	0	; () banked
 29158   006288  518D               	movf	?___awmod& (0+255),w,b
 29159   00628A  0101               	movlb	1	; () banked
 29160   00628C  6FE4               	movwf	processActions@ioAction& (0+255),b
 29161                           
 29162                           ; BSR set to: 1
 29163                           ;../universalEvents.c: 278:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 29164   00628E  51E6               	movf	processActions@io& (0+255),w,b
 29165   006290  0D07               	mullw	7
 29166   006292  50F3               	movf	243,w,c
 29167   006294  0F10               	addlw	16
 29168   006296  EC52  F05E         	call	_getNV
 29169   00629A  0100               	movlb	0	; () banked
 29170   00629C  518D               	movf	?_getNV& (0+255),w,b
 29171   00629E  0101               	movlb	1	; () banked
 29172   0062A0  6FE3               	movwf	processActions@type& (0+255),b
 29173                           
 29174                           ; BSR set to: 1
 29175                           ;../universalEvents.c: 280:             setOutputState(io, ioAction, type);
 29176   0062A2  C1E4  F093         	movff	processActions@ioAction,setOutputState@act
 29177   0062A6  C1E3  F094         	movff	processActions@type,setOutputState@type
 29178   0062AA  51E6               	movf	processActions@io& (0+255),w,b
 29179   0062AC  EC68  F05B         	call	_setOutputState
 29180                           
 29181                           ;../universalEvents.c: 281:             if (needsStarting(io, ioAction, type)) {
 29182   0062B0  C1E4  F08D         	movff	processActions@ioAction,needsStarting@act
 29183   0062B4  C1E3  F08E         	movff	processActions@type,needsStarting@type
 29184   0062B8  0101               	movlb	1	; () banked
 29185   0062BA  51E6               	movf	processActions@io& (0+255),w,b
 29186   0062BC  ECE4  F053         	call	_needsStarting
 29187   0062C0  0900               	iorlw	0
 29188   0062C2  B4D8               	btfsc	status,2,c
 29189   0062C4  D008               	goto	l22938
 29190                           
 29191                           ;../universalEvents.c: 282:                 startOutput(io, ioAction, type);
 29192   0062C6  C1E4  F1DC         	movff	processActions@ioAction,startOutput@act
 29193   0062CA  C1E3  F1DD         	movff	processActions@type,startOutput@type
 29194   0062CE  0101               	movlb	1	; () banked
 29195   0062D0  51E6               	movf	processActions@io& (0+255),w,b
 29196   0062D2  EC5E  F05A         	call	_startOutput
 29197   0062D6                     l22938:
 29198                           
 29199                           ;../universalEvents.c: 285:             peekItem = 1;
 29200   0062D6  0E01               	movlw	1
 29201   0062D8  0101               	movlb	1	; () banked
 29202   0062DA  6FE0               	movwf	processActions@peekItem& (0+255),b
 29203                           
 29204                           ;../universalEvents.c: 286:             while (simultaneous) {
 29205   0062DC  D06D               	goto	l22974
 29206   0062DE                     l22940:
 29207                           
 29208                           ; BSR set to: 1
 29209                           ;../universalEvents.c: 287:                 uint8_t nextAction;;../universalEvents.c: 28
      +                          8:                 uint8_t nextIo;;../universalEvents.c: 289:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 291:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 29210   0062DE  51E0               	movf	processActions@peekItem& (0+255),w,b
 29211   0062E0  ECD7  F052         	call	_peekTwoActionQueue
 29212   0062E4  0101               	movlb	1	; () banked
 29213   0062E6  6FE5               	movwf	processActions@nextAction& (0+255),b
 29214                           
 29215                           ; BSR set to: 1
 29216                           ;../universalEvents.c: 293:                 if (nextAction == 0) break;
 29217   0062E8  51E5               	movf	processActions@nextAction& (0+255),w,b
 29218   0062EA  B4D8               	btfsc	status,2,c
 29219   0062EC  D068               	goto	u24300
 29220                           
 29221                           ; BSR set to: 1
 29222                           ;../universalEvents.c: 294:                 simultaneous = nextAction & 0x80;
 29223   0062EE  51E5               	movf	processActions@nextAction& (0+255),w,b
 29224   0062F0  0B80               	andlw	128
 29225   0062F2  6FDF               	movwf	processActions@simultaneous& (0+255),b
 29226                           
 29227                           ; BSR set to: 1
 29228                           ;../universalEvents.c: 295:                 nextAction &= 0x7F;
 29229   0062F4  9FE5               	bcf	processActions@nextAction& (0+255),7,b
 29230                           
 29231                           ; BSR set to: 1
 29232                           ;../universalEvents.c: 296:                 nextIo = (((nextAction)-8)/5);
 29233   0062F6  0EF8               	movlw	248
 29234   0062F8  25E5               	addwf	processActions@nextAction& (0+255),w,b
 29235   0062FA  0100               	movlb	0	; () banked
 29236   0062FC  6F97               	movwf	___awdiv@dividend& (0+255),b
 29237   0062FE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29238   006300  0EFF               	movlw	255
 29239   006302  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29240   006304  0E00               	movlw	0
 29241   006306  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29242   006308  0E05               	movlw	5
 29243   00630A  6F99               	movwf	___awdiv@divisor& (0+255),b
 29244   00630C  EC1C  F053         	call	___awdiv	;wreg free
 29245   006310  0100               	movlb	0	; () banked
 29246   006312  5197               	movf	?___awdiv& (0+255),w,b
 29247   006314  0101               	movlb	1	; () banked
 29248   006316  6FE2               	movwf	processActions@nextIo& (0+255),b
 29249                           
 29250                           ; BSR set to: 1
 29251                           ;../universalEvents.c: 297:                 if (nextIo == io) {
 29252   006318  51E6               	movf	processActions@io& (0+255),w,b
 29253   00631A  19E2               	xorwf	processActions@nextIo& (0+255),w,b
 29254   00631C  B4D8               	btfsc	status,2,c
 29255   00631E  D04F               	goto	u24300
 29256                           
 29257                           ; BSR set to: 1
 29258                           ;../universalEvents.c: 303:                 nextAction = (((nextAction)-8)%5);
 29259   006320  0EF8               	movlw	248
 29260   006322  25E5               	addwf	processActions@nextAction& (0+255),w,b
 29261   006324  0100               	movlb	0	; () banked
 29262   006326  6F8D               	movwf	___awmod@dividend& (0+255),b
 29263   006328  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29264   00632A  0EFF               	movlw	255
 29265   00632C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29266   00632E  0E00               	movlw	0
 29267   006330  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29268   006332  0E05               	movlw	5
 29269   006334  6F8F               	movwf	___awmod@divisor& (0+255),b
 29270   006336  EC31  F057         	call	___awmod	;wreg free
 29271   00633A  0100               	movlb	0	; () banked
 29272   00633C  518D               	movf	?___awmod& (0+255),w,b
 29273   00633E  0101               	movlb	1	; () banked
 29274   006340  6FE5               	movwf	processActions@nextAction& (0+255),b
 29275                           
 29276                           ; BSR set to: 1
 29277                           ;../universalEvents.c: 304:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 29278   006342  51E6               	movf	processActions@io& (0+255),w,b
 29279   006344  0D07               	mullw	7
 29280   006346  50F3               	movf	243,w,c
 29281   006348  0F10               	addlw	16
 29282   00634A  EC52  F05E         	call	_getNV
 29283   00634E  0100               	movlb	0	; () banked
 29284   006350  518D               	movf	?_getNV& (0+255),w,b
 29285   006352  0101               	movlb	1	; () banked
 29286   006354  6FE1               	movwf	processActions@nextType& (0+255),b
 29287                           
 29288                           ; BSR set to: 1
 29289                           ;../universalEvents.c: 305:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 29290   006356  C1E5  F093         	movff	processActions@nextAction,setOutputState@act
 29291   00635A  C1E1  F094         	movff	processActions@nextType,setOutputState@type
 29292   00635E  51E2               	movf	processActions@nextIo& (0+255),w,b
 29293   006360  EC68  F05B         	call	_setOutputState
 29294                           
 29295                           ;../universalEvents.c: 306:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 29296   006364  C1E5  F08D         	movff	processActions@nextAction,needsStarting@act
 29297   006368  C1E1  F08E         	movff	processActions@nextType,needsStarting@type
 29298   00636C  0101               	movlb	1	; () banked
 29299   00636E  51E2               	movf	processActions@nextIo& (0+255),w,b
 29300   006370  ECE4  F053         	call	_needsStarting
 29301   006374  0900               	iorlw	0
 29302   006376  B4D8               	btfsc	status,2,c
 29303   006378  D008               	goto	l22966
 29304                           
 29305                           ;../universalEvents.c: 307:                     startOutput(nextIo, nextAction, nextType
      +                          );
 29306   00637A  C1E5  F1DC         	movff	processActions@nextAction,startOutput@act
 29307   00637E  C1E1  F1DD         	movff	processActions@nextType,startOutput@type
 29308   006382  0101               	movlb	1	; () banked
 29309   006384  51E2               	movf	processActions@nextIo& (0+255),w,b
 29310   006386  EC5E  F05A         	call	_startOutput
 29311   00638A                     l22966:
 29312                           
 29313                           ;../universalEvents.c: 309:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 29314   00638A  C1E5  F08D         	movff	processActions@nextAction,completed@action
 29315   00638E  C1E1  F08E         	movff	processActions@nextType,completed@type
 29316   006392  0101               	movlb	1	; () banked
 29317   006394  51E2               	movf	processActions@nextIo& (0+255),w,b
 29318   006396  EC96  F050         	call	_completed
 29319   00639A  0900               	iorlw	0
 29320   00639C  B4D8               	btfsc	status,2,c
 29321   00639E  D00A               	goto	l22972
 29322                           
 29323                           ;../universalEvents.c: 310:                     deleteTwoActionQueue(peekItem);
 29324   0063A0  0101               	movlb	1	; () banked
 29325   0063A2  51E0               	movf	processActions@peekItem& (0+255),w,b
 29326   0063A4  EC64  F054         	call	_deleteTwoActionQueue
 29327                           
 29328                           ;../universalEvents.c: 311:                     finaliseOutput(io, type);
 29329   0063A8  C1E3  F08D         	movff	processActions@type,finaliseOutput@type
 29330   0063AC  0101               	movlb	1	; () banked
 29331   0063AE  51E6               	movf	processActions@io& (0+255),w,b
 29332   0063B0  EC12  F063         	call	_finaliseOutput
 29333   0063B4                     l22972:
 29334                           
 29335                           ;../universalEvents.c: 313:                 peekItem++;
 29336   0063B4  0101               	movlb	1	; () banked
 29337   0063B6  2BE0               	incf	processActions@peekItem& (0+255),f,b
 29338   0063B8                     l22974:
 29339                           
 29340                           ; BSR set to: 1
 29341                           ;../universalEvents.c: 286:             while (simultaneous) {
 29342   0063B8  51DF               	movf	processActions@simultaneous& (0+255),w,b
 29343   0063BA  A4D8               	btfss	status,2,c
 29344   0063BC  D790               	goto	l22940
 29345   0063BE                     u24300:
 29346                           
 29347                           ; BSR set to: 1
 29348                           ;../universalEvents.c: 316:             if (completed(io, action, type)) {
 29349   0063BE  C1E7  F08D         	movff	processActions@action,completed@action
 29350   0063C2  C1E3  F08E         	movff	processActions@type,completed@type
 29351   0063C6  51E6               	movf	processActions@io& (0+255),w,b
 29352   0063C8  EC96  F050         	call	_completed
 29353   0063CC  0900               	iorlw	0
 29354   0063CE  B4D8               	btfsc	status,2,c
 29355   0063D0  0012               	return	
 29356                           
 29357                           ;../universalEvents.c: 317:                 doneTwoAction();
 29358   0063D2  EC1F  F063         	call	_doneTwoAction	;wreg free
 29359                           
 29360                           ;../universalEvents.c: 318:                 finaliseOutput(io, type);
 29361   0063D6  C1E3  F08D         	movff	processActions@type,finaliseOutput@type
 29362   0063DA  0101               	movlb	1	; () banked
 29363   0063DC  51E6               	movf	processActions@io& (0+255),w,b
 29364   0063DE  EC12  F063         	call	_finaliseOutput
 29365                           
 29366                           ;../universalEvents.c: 319:             } else {
 29367   0063E2  D6E7               	goto	__ptext105
 29368   0063E4                     l22982:
 29369                           
 29370                           ; BSR set to: 1
 29371                           ;../universalEvents.c: 327:             doneTwoAction();
 29372   0063E4  EC1F  F063         	call	_doneTwoAction	;wreg free
 29373   0063E8  D6E4               	goto	__ptext105
 29374   0063EA                     __end_of_processActions:
 29375                           	callstack 0
 29376                           
 29377 ;; *************** function _startOutput *****************
 29378 ;; Defined at:
 29379 ;;		line 72 in file "../outputs.c"
 29380 ;; Parameters:    Size  Location     Type
 29381 ;;  io              1    wreg     unsigned char 
 29382 ;;  act             1   34[BANK1 ] unsigned char 
 29383 ;;  type            1   35[BANK1 ] unsigned char 
 29384 ;; Auto vars:     Size  Location     Type
 29385 ;;  io              1   36[BANK1 ] unsigned char 
 29386 ;; Return value:  Size  Location     Type
 29387 ;;                  1    wreg      void 
 29388 ;; Registers used:
 29389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29390 ;; Tracked objects:
 29391 ;;		On entry : 0/0
 29392 ;;		On exit  : 0/0
 29393 ;;		Unchanged: 0/0
 29394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29395 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29396 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29398 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29399 ;;Total ram usage:        3 bytes
 29400 ;; Hardware stack levels used: 1
 29401 ;; Hardware stack levels required when called: 20
 29402 ;; This function calls:
 29403 ;;		_startBounceOutput
 29404 ;;		_startDigitalOutput
 29405 ;;		_startMultiOutput
 29406 ;;		_startServoOutput
 29407 ;; This function is called by:
 29408 ;;		_processActions
 29409 ;; This function uses a non-reentrant model
 29410 ;;
 29411                           
 29412                           	psect	text106
 29413   00B4BC                     __ptext106:
 29414                           	callstack 0
 29415   00B4BC                     _startOutput:
 29416                           	callstack 8
 29417                           
 29418                           ;incstack = 0
 29419                           ;startOutput@io stored from wreg
 29420   00B4BC  0101               	movlb	1	; () banked
 29421   00B4BE  6FDE               	movwf	startOutput@io& (0+255),b
 29422                           
 29423                           ;../outputs.c: 73:     switch(type) {
 29424   00B4C0  D018               	goto	l21534
 29425   00B4C2                     l21516:
 29426                           
 29427                           ; BSR set to: 1
 29428                           ;../outputs.c: 78:             startDigitalOutput(io, act);
 29429   00B4C2  C1DC  F1D4         	movff	startOutput@act,startDigitalOutput@state
 29430   00B4C6  51DE               	movf	startOutput@io& (0+255),w,b
 29431   00B4C8  EC88  F02A         	call	_startDigitalOutput
 29432   00B4CC  0012               	return	
 29433   00B4CE                     l21520:
 29434                           
 29435                           ; BSR set to: 1
 29436                           ;../outputs.c: 82:             startBounceOutput(io, act);
 29437   00B4CE  C1DC  F08D         	movff	startOutput@act,startBounceOutput@action
 29438   00B4D2  51DE               	movf	startOutput@io& (0+255),w,b
 29439   00B4D4  ECA9  F058         	call	_startBounceOutput
 29440   00B4D8  0012               	return	
 29441   00B4DA                     l21524:
 29442                           
 29443                           ; BSR set to: 1
 29444                           ;../outputs.c: 87:             startServoOutput(io, act);
 29445   00B4DA  C1DC  F091         	movff	startOutput@act,startServoOutput@action
 29446   00B4DE  51DE               	movf	startOutput@io& (0+255),w,b
 29447   00B4E0  EC5D  F049         	call	_startServoOutput
 29448   00B4E4  0012               	return	
 29449   00B4E6                     l21528:
 29450                           
 29451                           ; BSR set to: 1
 29452                           ;../outputs.c: 92:             startMultiOutput(io, act);
 29453   00B4E6  C1DC  F091         	movff	startOutput@act,startMultiOutput@action
 29454   00B4EA  51DE               	movf	startOutput@io& (0+255),w,b
 29455   00B4EC  ECEB  F04D         	call	_startMultiOutput
 29456   00B4F0  0012               	return	
 29457   00B4F2                     l21534:
 29458   00B4F2  0101               	movlb	1	; () banked
 29459   00B4F4  51DD               	movf	startOutput@type& (0+255),w,b
 29460                           
 29461                           ; Switch size 1, requested type "simple"
 29462                           ; Number of cases is 5, Range of values is 0 to 4
 29463                           ; switch strategies available:
 29464                           ; Name         Instructions Cycles
 29465                           ; simple_byte           16     9 (average)
 29466                           ;	Chosen strategy is simple_byte
 29467   00B4F6  0A00               	xorlw	0	; case 0
 29468   00B4F8  B4D8               	btfsc	status,2,c
 29469   00B4FA  0012               	return	
 29470   00B4FC  0A01               	xorlw	1	; case 1
 29471   00B4FE  B4D8               	btfsc	status,2,c
 29472   00B500  D7E0               	goto	l21516
 29473   00B502  0A03               	xorlw	3	; case 2
 29474   00B504  B4D8               	btfsc	status,2,c
 29475   00B506  D7E9               	goto	l21524
 29476   00B508  0A01               	xorlw	1	; case 3
 29477   00B50A  B4D8               	btfsc	status,2,c
 29478   00B50C  D7E0               	goto	l21520
 29479   00B50E  0A07               	xorlw	7	; case 4
 29480   00B510  A4D8               	btfss	status,2,c
 29481   00B512  0012               	return	
 29482   00B514  D7E8               	goto	l21528
 29483   00B516                     __end_of_startOutput:
 29484                           	callstack 0
 29485                           
 29486 ;; *************** function _startServoOutput *****************
 29487 ;; Defined at:
 29488 ;;		line 538 in file "../servo.c"
 29489 ;; Parameters:    Size  Location     Type
 29490 ;;  io              1    wreg     unsigned char 
 29491 ;;  action          1   49[BANK0 ] unsigned char 
 29492 ;; Auto vars:     Size  Location     Type
 29493 ;;  io              1   51[BANK0 ] unsigned char 
 29494 ;; Return value:  Size  Location     Type
 29495 ;;                  1    wreg      void 
 29496 ;; Registers used:
 29497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29498 ;; Tracked objects:
 29499 ;;		On entry : 0/0
 29500 ;;		On exit  : 0/0
 29501 ;;		Unchanged: 0/0
 29502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29503 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29506 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29507 ;;Total ram usage:        3 bytes
 29508 ;; Hardware stack levels used: 1
 29509 ;; Hardware stack levels required when called: 13
 29510 ;; This function calls:
 29511 ;;		_getNV
 29512 ;; This function is called by:
 29513 ;;		_APP_nvValueChanged
 29514 ;;		_startOutput
 29515 ;; This function uses a non-reentrant model
 29516 ;;
 29517                           
 29518                           	psect	text107
 29519   0092BA                     __ptext107:
 29520                           	callstack 0
 29521   0092BA                     _startServoOutput:
 29522                           	callstack 13
 29523                           
 29524                           ;incstack = 0
 29525                           ;startServoOutput@io stored from wreg
 29526   0092BA  0100               	movlb	0	; () banked
 29527   0092BC  6F93               	movwf	startServoOutput@io& (0+255),b
 29528                           
 29529                           ;../servo.c: 539:     switch (action) {
 29530   0092BE  D017               	goto	l20112
 29531   0092C0                     l20106:
 29532                           
 29533                           ; BSR set to: 0
 29534                           ;../servo.c: 541:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29535   0092C0  5193               	movf	startServoOutput@io& (0+255),w,b
 29536   0092C2  0D07               	mullw	7
 29537   0092C4  50F3               	movf	243,w,c
 29538   0092C6  0F15               	addlw	21
 29539   0092C8  EC52  F05E         	call	_getNV
 29540   0092CC  D006               	goto	L8
 29541   0092CE                     l20108:
 29542                           
 29543                           ; BSR set to: 0
 29544                           ;../servo.c: 544:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 29545   0092CE  5193               	movf	startServoOutput@io& (0+255),w,b
 29546   0092D0  0D07               	mullw	7
 29547   0092D2  50F3               	movf	243,w,c
 29548   0092D4  0F14               	addlw	20
 29549   0092D6  EC52  F05E         	call	_getNV
 29550   0092DA                     L8:
 29551   0092DA  0E00               	movlw	low _stepsPerPollSpeed
 29552   0092DC  0100               	movlb	0	; () banked
 29553   0092DE  2593               	addwf	startServoOutput@io& (0+255),w,b
 29554   0092E0  6ED9               	movwf	fsr2l,c
 29555   0092E2  6ADA               	clrf	fsr2h,c
 29556   0092E4  0E01               	movlw	high _stepsPerPollSpeed
 29557   0092E6  22DA               	addwfc	fsr2h,f,c
 29558   0092E8  C08D  FFDF         	movff	?_getNV,indf2
 29559                           
 29560                           ;../servo.c: 545:             break;
 29561   0092EC  D008               	goto	l20114
 29562   0092EE                     l20112:
 29563   0092EE  0100               	movlb	0	; () banked
 29564   0092F0  5191               	movf	startServoOutput@action& (0+255),w,b
 29565                           
 29566                           ; Switch size 1, requested type "simple"
 29567                           ; Number of cases is 2, Range of values is 1 to 2
 29568                           ; switch strategies available:
 29569                           ; Name         Instructions Cycles
 29570                           ; simple_byte            7     4 (average)
 29571                           ;	Chosen strategy is simple_byte
 29572   0092F2  0A01               	xorlw	1	; case 1
 29573   0092F4  B4D8               	btfsc	status,2,c
 29574   0092F6  D7EB               	goto	l20108
 29575   0092F8  0A03               	xorlw	3	; case 2
 29576   0092FA  B4D8               	btfsc	status,2,c
 29577   0092FC  D7E1               	goto	l20106
 29578   0092FE                     l20114:
 29579                           
 29580                           ; BSR set to: 0
 29581                           ;../servo.c: 547:     if (stepsPerPollSpeed[io] > 234) {
 29582   0092FE  0E00               	movlw	low _stepsPerPollSpeed
 29583   009300  2593               	addwf	startServoOutput@io& (0+255),w,b
 29584   009302  6ED9               	movwf	fsr2l,c
 29585   009304  6ADA               	clrf	fsr2h,c
 29586   009306  0E01               	movlw	high _stepsPerPollSpeed
 29587   009308  22DA               	addwfc	fsr2h,f,c
 29588   00930A  0EEA               	movlw	234
 29589   00930C  64DF               	cpfsgt	indf2,c
 29590   00930E  D00E               	goto	l20118
 29591                           
 29592                           ; BSR set to: 0
 29593                           ;../servo.c: 548:         stepsPerPollSpeed[io] -= 234;
 29594   009310  0E00               	movlw	low _stepsPerPollSpeed
 29595   009312  2593               	addwf	startServoOutput@io& (0+255),w,b
 29596   009314  6ED9               	movwf	fsr2l,c
 29597   009316  6ADA               	clrf	fsr2h,c
 29598   009318  0E01               	movlw	high _stepsPerPollSpeed
 29599   00931A  22DA               	addwfc	fsr2h,f,c
 29600   00931C  0EEA               	movlw	234
 29601   00931E  5EDF               	subwf	indf2,f,c
 29602                           
 29603                           ;../servo.c: 549:         pollsPerStepSpeed[io] = 0;
 29604   009320  0E74               	movlw	low _pollsPerStepSpeed
 29605   009322  2593               	addwf	startServoOutput@io& (0+255),w,b
 29606   009324  6ED9               	movwf	fsr2l,c
 29607   009326  6ADA               	clrf	fsr2h,c
 29608   009328  0E02               	movlw	high _pollsPerStepSpeed
 29609   00932A  D01E               	goto	L9
 29610   00932C                     l20118:
 29611                           
 29612                           ; BSR set to: 0
 29613                           ;../servo.c: 551:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 29614   00932C  0E74               	movlw	low _pollsPerStepSpeed
 29615   00932E  2593               	addwf	startServoOutput@io& (0+255),w,b
 29616   009330  6ED9               	movwf	fsr2l,c
 29617   009332  6ADA               	clrf	fsr2h,c
 29618   009334  0E02               	movlw	high _pollsPerStepSpeed
 29619   009336  22DA               	addwfc	fsr2h,f,c
 29620   009338  0E00               	movlw	low _stepsPerPollSpeed
 29621   00933A  2593               	addwf	startServoOutput@io& (0+255),w,b
 29622   00933C  6EE1               	movwf	fsr1l,c
 29623   00933E  6AE2               	clrf	fsr1h,c
 29624   009340  0E01               	movlw	high _stepsPerPollSpeed
 29625   009342  22E2               	addwfc	fsr1h,f,c
 29626   009344  50E7               	movf	indf1,w,c
 29627   009346  6F92               	movwf	??_startServoOutput& (0+255),b
 29628   009348  5192               	movf	??_startServoOutput& (0+255),w,b
 29629   00934A  08EB               	sublw	235
 29630   00934C  6EDF               	movwf	indf2,c
 29631                           
 29632                           ; BSR set to: 0
 29633                           ;../servo.c: 552:         pollCount[io] = 1;
 29634   00934E  0E64               	movlw	low _pollCount
 29635   009350  2593               	addwf	startServoOutput@io& (0+255),w,b
 29636   009352  6ED9               	movwf	fsr2l,c
 29637   009354  6ADA               	clrf	fsr2h,c
 29638   009356  0E02               	movlw	high _pollCount
 29639   009358  22DA               	addwfc	fsr2h,f,c
 29640   00935A  0E01               	movlw	1
 29641   00935C  6EDF               	movwf	indf2,c
 29642                           
 29643                           ; BSR set to: 0
 29644                           ;../servo.c: 553:         stepsPerPollSpeed[io] = 0;
 29645   00935E  0E00               	movlw	low _stepsPerPollSpeed
 29646   009360  2593               	addwf	startServoOutput@io& (0+255),w,b
 29647   009362  6ED9               	movwf	fsr2l,c
 29648   009364  6ADA               	clrf	fsr2h,c
 29649   009366  0E01               	movlw	high _stepsPerPollSpeed
 29650   009368                     L9:
 29651   009368  22DA               	addwfc	fsr2h,f,c
 29652   00936A  6ADF               	clrf	indf2,c
 29653                           
 29654                           ; BSR set to: 0
 29655                           ;../servo.c: 555:     servoState[io] = SS_STARTING;
 29656   00936C  0E10               	movlw	low _servoState
 29657   00936E  2593               	addwf	startServoOutput@io& (0+255),w,b
 29658   009370  6ED9               	movwf	fsr2l,c
 29659   009372  6ADA               	clrf	fsr2h,c
 29660   009374  0E01               	movlw	high _servoState
 29661   009376  22DA               	addwfc	fsr2h,f,c
 29662   009378  0E03               	movlw	3
 29663   00937A  6EDF               	movwf	indf2,c
 29664                           
 29665                           ; BSR set to: 0
 29666   00937C  0012               	return		;funcret
 29667   00937E                     __end_of_startServoOutput:
 29668                           	callstack 0
 29669                           
 29670 ;; *************** function _startMultiOutput *****************
 29671 ;; Defined at:
 29672 ;;		line 584 in file "../servo.c"
 29673 ;; Parameters:    Size  Location     Type
 29674 ;;  io              1    wreg     unsigned char 
 29675 ;;  action          1   49[BANK0 ] unsigned char 
 29676 ;; Auto vars:     Size  Location     Type
 29677 ;;  io              1   51[BANK0 ] unsigned char 
 29678 ;; Return value:  Size  Location     Type
 29679 ;;                  1    wreg      void 
 29680 ;; Registers used:
 29681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29682 ;; Tracked objects:
 29683 ;;		On entry : 0/0
 29684 ;;		On exit  : 0/0
 29685 ;;		Unchanged: 0/0
 29686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29687 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29690 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29691 ;;Total ram usage:        3 bytes
 29692 ;; Hardware stack levels used: 1
 29693 ;; Hardware stack levels required when called: 13
 29694 ;; This function calls:
 29695 ;;		_getNV
 29696 ;; This function is called by:
 29697 ;;		_APP_nvValueChanged
 29698 ;;		_startOutput
 29699 ;; This function uses a non-reentrant model
 29700 ;;
 29701                           
 29702                           	psect	text108
 29703   009BD6                     __ptext108:
 29704                           	callstack 0
 29705   009BD6                     _startMultiOutput:
 29706                           	callstack 13
 29707                           
 29708                           ; BSR set to: 0
 29709                           ;incstack = 0
 29710                           ;startMultiOutput@io stored from wreg
 29711   009BD6  0100               	movlb	0	; () banked
 29712   009BD8  6F93               	movwf	startMultiOutput@io& (0+255),b
 29713                           
 29714                           ;../servo.c: 586:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 29715   009BDA  0E03               	movlw	3
 29716   009BDC  EC52  F05E         	call	_getNV
 29717   009BE0  0E00               	movlw	low _stepsPerPollSpeed
 29718   009BE2  0100               	movlb	0	; () banked
 29719   009BE4  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29720   009BE6  6ED9               	movwf	fsr2l,c
 29721   009BE8  6ADA               	clrf	fsr2h,c
 29722   009BEA  0E01               	movlw	high _stepsPerPollSpeed
 29723   009BEC  22DA               	addwfc	fsr2h,f,c
 29724   009BEE  C08D  FFDF         	movff	?_getNV,indf2
 29725                           
 29726                           ; BSR set to: 0
 29727                           ;../servo.c: 587:     if (stepsPerPollSpeed[io] > 234) {
 29728   009BF2  0E00               	movlw	low _stepsPerPollSpeed
 29729   009BF4  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29730   009BF6  6ED9               	movwf	fsr2l,c
 29731   009BF8  6ADA               	clrf	fsr2h,c
 29732   009BFA  0E01               	movlw	high _stepsPerPollSpeed
 29733   009BFC  22DA               	addwfc	fsr2h,f,c
 29734   009BFE  0EEA               	movlw	234
 29735   009C00  64DF               	cpfsgt	indf2,c
 29736   009C02  D00E               	goto	l20182
 29737                           
 29738                           ; BSR set to: 0
 29739                           ;../servo.c: 588:         stepsPerPollSpeed[io] -= 234;
 29740   009C04  0E00               	movlw	low _stepsPerPollSpeed
 29741   009C06  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29742   009C08  6ED9               	movwf	fsr2l,c
 29743   009C0A  6ADA               	clrf	fsr2h,c
 29744   009C0C  0E01               	movlw	high _stepsPerPollSpeed
 29745   009C0E  22DA               	addwfc	fsr2h,f,c
 29746   009C10  0EEA               	movlw	234
 29747   009C12  5EDF               	subwf	indf2,f,c
 29748                           
 29749                           ;../servo.c: 589:         pollsPerStepSpeed[io] = 0;
 29750   009C14  0E74               	movlw	low _pollsPerStepSpeed
 29751   009C16  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29752   009C18  6ED9               	movwf	fsr2l,c
 29753   009C1A  6ADA               	clrf	fsr2h,c
 29754   009C1C  0E02               	movlw	high _pollsPerStepSpeed
 29755   009C1E  D01E               	goto	L10
 29756   009C20                     l20182:
 29757                           
 29758                           ; BSR set to: 0
 29759                           ;../servo.c: 591:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 29760   009C20  0E74               	movlw	low _pollsPerStepSpeed
 29761   009C22  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29762   009C24  6ED9               	movwf	fsr2l,c
 29763   009C26  6ADA               	clrf	fsr2h,c
 29764   009C28  0E02               	movlw	high _pollsPerStepSpeed
 29765   009C2A  22DA               	addwfc	fsr2h,f,c
 29766   009C2C  0E00               	movlw	low _stepsPerPollSpeed
 29767   009C2E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29768   009C30  6EE1               	movwf	fsr1l,c
 29769   009C32  6AE2               	clrf	fsr1h,c
 29770   009C34  0E01               	movlw	high _stepsPerPollSpeed
 29771   009C36  22E2               	addwfc	fsr1h,f,c
 29772   009C38  50E7               	movf	indf1,w,c
 29773   009C3A  6F92               	movwf	??_startMultiOutput& (0+255),b
 29774   009C3C  5192               	movf	??_startMultiOutput& (0+255),w,b
 29775   009C3E  08EB               	sublw	235
 29776   009C40  6EDF               	movwf	indf2,c
 29777                           
 29778                           ; BSR set to: 0
 29779                           ;../servo.c: 592:         pollCount[io] = 1;
 29780   009C42  0E64               	movlw	low _pollCount
 29781   009C44  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29782   009C46  6ED9               	movwf	fsr2l,c
 29783   009C48  6ADA               	clrf	fsr2h,c
 29784   009C4A  0E02               	movlw	high _pollCount
 29785   009C4C  22DA               	addwfc	fsr2h,f,c
 29786   009C4E  0E01               	movlw	1
 29787   009C50  6EDF               	movwf	indf2,c
 29788                           
 29789                           ; BSR set to: 0
 29790                           ;../servo.c: 593:         stepsPerPollSpeed[io] = 0;
 29791   009C52  0E00               	movlw	low _stepsPerPollSpeed
 29792   009C54  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29793   009C56  6ED9               	movwf	fsr2l,c
 29794   009C58  6ADA               	clrf	fsr2h,c
 29795   009C5A  0E01               	movlw	high _stepsPerPollSpeed
 29796   009C5C                     L10:
 29797   009C5C  22DA               	addwfc	fsr2h,f,c
 29798   009C5E  6ADF               	clrf	indf2,c
 29799                           
 29800                           ; BSR set to: 0
 29801                           ;../servo.c: 595:     servoState[io] = SS_STARTING;
 29802   009C60  0E10               	movlw	low _servoState
 29803   009C62  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29804   009C64  6ED9               	movwf	fsr2l,c
 29805   009C66  6ADA               	clrf	fsr2h,c
 29806   009C68  0E01               	movlw	high _servoState
 29807   009C6A  22DA               	addwfc	fsr2h,f,c
 29808   009C6C  0E03               	movlw	3
 29809   009C6E  6EDF               	movwf	indf2,c
 29810                           
 29811                           ; BSR set to: 0
 29812   009C70  0012               	return		;funcret
 29813   009C72                     __end_of_startMultiOutput:
 29814                           	callstack 0
 29815                           
 29816 ;; *************** function _startDigitalOutput *****************
 29817 ;; Defined at:
 29818 ;;		line 107 in file "../digitalOut.c"
 29819 ;; Parameters:    Size  Location     Type
 29820 ;;  io              1    wreg     unsigned char 
 29821 ;;  state           1   26[BANK1 ] unsigned char 
 29822 ;; Auto vars:     Size  Location     Type
 29823 ;;  io              1   33[BANK1 ] unsigned char 
 29824 ;;  actionState     1   32[BANK1 ] enum E12766
 29825 ;;  pinState        1   31[BANK1 ] enum E12766
 29826 ;; Return value:  Size  Location     Type
 29827 ;;                  1    wreg      void 
 29828 ;; Registers used:
 29829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29830 ;; Tracked objects:
 29831 ;;		On entry : 0/0
 29832 ;;		On exit  : 0/0
 29833 ;;		Unchanged: 0/0
 29834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29835 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29836 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29837 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29838 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29839 ;;Total ram usage:        8 bytes
 29840 ;; Hardware stack levels used: 1
 29841 ;; Hardware stack levels required when called: 19
 29842 ;; This function calls:
 29843 ;;		_getNV
 29844 ;;		_sendInvertedProducedEvent
 29845 ;;		_setOutputPin
 29846 ;;		_writeNVM
 29847 ;; This function is called by:
 29848 ;;		_startOutput
 29849 ;; This function uses a non-reentrant model
 29850 ;;
 29851                           
 29852                           	psect	text109
 29853   005510                     __ptext109:
 29854                           	callstack 0
 29855   005510                     _startDigitalOutput:
 29856                           	callstack 8
 29857                           
 29858                           ; BSR set to: 0
 29859                           ;incstack = 0
 29860                           ;startDigitalOutput@io stored from wreg
 29861   005510  0101               	movlb	1	; () banked
 29862   005512  6FDB               	movwf	startDigitalOutput@io& (0+255),b
 29863                           
 29864                           ;../digitalOut.c: 108:     Boolean pinState;;../digitalOut.c: 109:     Boolean actionSta
      +                          te;;../digitalOut.c: 116:     if (state == 3) {
 29865   005514  0E03               	movlw	3
 29866   005516  0101               	movlb	1	; () banked
 29867   005518  19D4               	xorwf	startDigitalOutput@state& (0+255),w,b
 29868   00551A  A4D8               	btfss	status,2,c
 29869   00551C  D058               	goto	l20502
 29870                           
 29871                           ; BSR set to: 1
 29872                           ;../digitalOut.c: 117:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 29873   00551E  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29874   005520  0D07               	mullw	7
 29875   005522  50F3               	movf	243,w,c
 29876   005524  0F13               	addlw	19
 29877   005526  EC52  F05E         	call	_getNV
 29878   00552A  0E30               	movlw	low _flashDelays
 29879   00552C  0101               	movlb	1	; () banked
 29880   00552E  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29881   005530  6ED9               	movwf	fsr2l,c
 29882   005532  6ADA               	clrf	fsr2h,c
 29883   005534  0E01               	movlw	high _flashDelays
 29884   005536  22DA               	addwfc	fsr2h,f,c
 29885   005538  0100               	movlb	0	; () banked
 29886   00553A  C08D  FFDF         	movff	?_getNV,indf2
 29887                           
 29888                           ; BSR set to: 0
 29889                           ;../digitalOut.c: 118:         pulseDelays[io] = 1;
 29890   00553E  0EA4               	movlw	low _pulseDelays
 29891   005540  0101               	movlb	1	; () banked
 29892   005542  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29893   005544  6ED9               	movwf	fsr2l,c
 29894   005546  6ADA               	clrf	fsr2h,c
 29895   005548  0E02               	movlw	high _pulseDelays
 29896   00554A  22DA               	addwfc	fsr2h,f,c
 29897   00554C  0E01               	movlw	1
 29898   00554E  6EDF               	movwf	indf2,c
 29899                           
 29900                           ; BSR set to: 1
 29901                           ;../digitalOut.c: 119:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 29902   005550  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29903   005552  0D07               	mullw	7
 29904   005554  50F3               	movf	243,w,c
 29905   005556  0F11               	addlw	17
 29906   005558  0B20               	andlw	32
 29907   00555A  EC52  F05E         	call	_getNV
 29908   00555E  0100               	movlb	0	; () banked
 29909   005560  518D               	movf	?_getNV& (0+255),w,b
 29910   005562  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29911   005564  A4D8               	btfss	status,2,c
 29912   005566  D002               	goto	u20680
 29913   005568  0E01               	movlw	1
 29914   00556A  D001               	goto	u20690
 29915   00556C                     u20680:
 29916   00556C  0E00               	movlw	0
 29917   00556E                     u20690:
 29918   00556E  6F91               	movwf	setOutputPin@state& (0+255),b
 29919   005570  0101               	movlb	1	; () banked
 29920   005572  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29921   005574  ECAB  F036         	call	_setOutputPin
 29922                           
 29923                           ;../digitalOut.c: 120:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 29924   005578  0EDE               	movlw	222
 29925   00557A  0101               	movlb	1	; () banked
 29926   00557C  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29927   00557E  6FD5               	movwf	??_startDigitalOutput& (0+255),b
 29928   005580  6BD6               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29929   005582  0E03               	movlw	3
 29930   005584  23D6               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29931   005586  C1D5  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29932   00558A  C1D6  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29933   00558E  0100               	movlb	0	; () banked
 29934   005590  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29935   005592  C1D4  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 29936   005596  0E00               	movlw	0
 29937   005598  EC60  F05C         	call	_writeNVM
 29938                           
 29939                           ;../digitalOut.c: 121:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 29940   00559C  0E01               	movlw	1
 29941   00559E  0101               	movlb	1	; () banked
 29942   0055A0  6FCC               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29943   0055A2  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29944   0055A4  0D07               	mullw	7
 29945   0055A6  50F3               	movf	243,w,c
 29946   0055A8  0F11               	addlw	17
 29947   0055AA  EC52  F05E         	call	_getNV
 29948   0055AE  0100               	movlb	0	; () banked
 29949   0055B0  518D               	movf	?_getNV& (0+255),w,b
 29950   0055B2  0B40               	andlw	64
 29951   0055B4  0101               	movlb	1	; () banked
 29952   0055B6  6FCD               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29953   0055B8  0E01               	movlw	1
 29954   0055BA  6FCE               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29955   0055BC  0E01               	movlw	1
 29956   0055BE  6FCF               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29957   0055C0  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29958   0055C2  0D04               	mullw	4
 29959   0055C4  50F3               	movf	243,w,c
 29960   0055C6  0F08               	addlw	8
 29961   0055C8  ECF7  F05C         	call	_sendInvertedProducedEvent
 29962   0055CC  0012               	return	
 29963   0055CE                     l20502:
 29964                           
 29965                           ; BSR set to: 1
 29966                           ;../digitalOut.c: 125:     flashDelays[io] = 0;
 29967   0055CE  0E30               	movlw	low _flashDelays
 29968   0055D0  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29969   0055D2  6ED9               	movwf	fsr2l,c
 29970   0055D4  6ADA               	clrf	fsr2h,c
 29971   0055D6  0E01               	movlw	high _flashDelays
 29972   0055D8  22DA               	addwfc	fsr2h,f,c
 29973   0055DA  6ADF               	clrf	indf2,c
 29974                           
 29975                           ; BSR set to: 1
 29976                           ;../digitalOut.c: 127:     actionState = (state == 1);
 29977   0055DC  05D4               	decf	startDigitalOutput@state& (0+255),w,b
 29978   0055DE  A4D8               	btfss	status,2,c
 29979   0055E0  D002               	goto	u20700
 29980   0055E2  0E01               	movlw	1
 29981   0055E4  D001               	goto	u20710
 29982   0055E6                     u20700:
 29983   0055E6  0E00               	movlw	0
 29984   0055E8                     u20710:
 29985   0055E8  6FDA               	movwf	startDigitalOutput@actionState& (0+255),b
 29986                           
 29987                           ; BSR set to: 1
 29988                           ;../digitalOut.c: 130:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29989   0055EA  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29990   0055EC  0D07               	mullw	7
 29991   0055EE  50F3               	movf	243,w,c
 29992   0055F0  0F11               	addlw	17
 29993   0055F2  EC52  F05E         	call	_getNV
 29994   0055F6  0100               	movlb	0	; () banked
 29995   0055F8  A18D               	btfss	?_getNV& (0+255),0,b
 29996   0055FA  D008               	goto	l259
 29997                           
 29998                           ; BSR set to: 0
 29999                           ;../digitalOut.c: 131:         actionState = !actionState;
 30000   0055FC  0101               	movlb	1	; () banked
 30001   0055FE  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30002   005600  A4D8               	btfss	status,2,c
 30003   005602  D002               	goto	u20730
 30004   005604  0E01               	movlw	1
 30005   005606  D001               	goto	u20740
 30006   005608                     u20730:
 30007   005608  0E00               	movlw	0
 30008   00560A                     u20740:
 30009   00560A  6FDA               	movwf	startDigitalOutput@actionState& (0+255),b
 30010   00560C                     l259:
 30011                           
 30012                           ;../digitalOut.c: 135:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 30013   00560C  0101               	movlb	1	; () banked
 30014   00560E  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30015   005610  A4D8               	btfss	status,2,c
 30016   005612  D015               	goto	l20516
 30017                           
 30018                           ; BSR set to: 1
 30019   005614  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30020   005616  0D07               	mullw	7
 30021   005618  50F3               	movf	243,w,c
 30022   00561A  0F12               	addlw	18
 30023   00561C  EC52  F05E         	call	_getNV
 30024   005620  0100               	movlb	0	; () banked
 30025   005622  518D               	movf	?_getNV& (0+255),w,b
 30026   005624  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30027   005626  B4D8               	btfsc	status,2,c
 30028   005628  D00A               	goto	l20516
 30029                           
 30030                           ; BSR set to: 0
 30031                           ;../digitalOut.c: 136:         pulseDelays[io] = 1;
 30032   00562A  0EA4               	movlw	low _pulseDelays
 30033   00562C  0101               	movlb	1	; () banked
 30034   00562E  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30035   005630  6ED9               	movwf	fsr2l,c
 30036   005632  6ADA               	clrf	fsr2h,c
 30037   005634  0E02               	movlw	high _pulseDelays
 30038   005636  22DA               	addwfc	fsr2h,f,c
 30039   005638  0E01               	movlw	1
 30040   00563A  6EDF               	movwf	indf2,c
 30041   00563C  0012               	return	
 30042   00563E                     l20516:
 30043                           
 30044                           ;../digitalOut.c: 142:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 30045   00563E  0101               	movlb	1	; () banked
 30046   005640  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30047   005642  B4D8               	btfsc	status,2,c
 30048   005644  D038               	goto	l20526
 30049                           
 30050                           ; BSR set to: 1
 30051   005646  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30052   005648  0D07               	mullw	7
 30053   00564A  50F3               	movf	243,w,c
 30054   00564C  0F12               	addlw	18
 30055   00564E  EC52  F05E         	call	_getNV
 30056   005652  0100               	movlb	0	; () banked
 30057   005654  518D               	movf	?_getNV& (0+255),w,b
 30058   005656  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30059   005658  B4D8               	btfsc	status,2,c
 30060   00565A  D02D               	goto	l20526
 30061                           
 30062                           ; BSR set to: 0
 30063   00565C  0EA4               	movlw	low _pulseDelays
 30064   00565E  0101               	movlb	1	; () banked
 30065   005660  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30066   005662  6ED9               	movwf	fsr2l,c
 30067   005664  6ADA               	clrf	fsr2h,c
 30068   005666  0E02               	movlw	high _pulseDelays
 30069   005668  22DA               	addwfc	fsr2h,f,c
 30070   00566A  50DF               	movf	indf2,w,c
 30071   00566C  A4D8               	btfss	status,2,c
 30072   00566E  D023               	goto	l20526
 30073                           
 30074                           ; BSR set to: 1
 30075                           ;../digitalOut.c: 143:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30076   005670  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30077   005672  0D07               	mullw	7
 30078   005674  50F3               	movf	243,w,c
 30079   005676  0F12               	addlw	18
 30080   005678  EC52  F05E         	call	_getNV
 30081   00567C  0EA4               	movlw	low _pulseDelays
 30082   00567E  0101               	movlb	1	; () banked
 30083   005680  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30084   005682  6ED9               	movwf	fsr2l,c
 30085   005684  6ADA               	clrf	fsr2h,c
 30086   005686  0E02               	movlw	high _pulseDelays
 30087   005688  22DA               	addwfc	fsr2h,f,c
 30088   00568A  0100               	movlb	0	; () banked
 30089   00568C  C08D  FFDF         	movff	?_getNV,indf2
 30090                           
 30091                           ; BSR set to: 0
 30092                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 30093   005690  0EDE               	movlw	222
 30094   005692  0101               	movlb	1	; () banked
 30095   005694  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30096   005696  6FD5               	movwf	??_startDigitalOutput& (0+255),b
 30097   005698  6BD6               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30098   00569A  0E03               	movlw	3
 30099   00569C  23D6               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30100   00569E  C1D5  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30101   0056A2  C1D6  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30102   0056A6  0100               	movlb	0	; () banked
 30103   0056A8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30104   0056AA  0E02               	movlw	2
 30105   0056AC  6FA7               	movwf	writeNVM@value& (0+255),b
 30106   0056AE  0E00               	movlw	0
 30107   0056B0  EC60  F05C         	call	_writeNVM
 30108                           
 30109                           ;../digitalOut.c: 147:     } else {
 30110   0056B4  D025               	goto	l20536
 30111   0056B6                     l20526:
 30112                           
 30113                           ;../digitalOut.c: 148:         pulseDelays[io] = 1;
 30114   0056B6  0EA4               	movlw	low _pulseDelays
 30115   0056B8  0101               	movlb	1	; () banked
 30116   0056BA  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30117   0056BC  6ED9               	movwf	fsr2l,c
 30118   0056BE  6ADA               	clrf	fsr2h,c
 30119   0056C0  0E02               	movlw	high _pulseDelays
 30120   0056C2  22DA               	addwfc	fsr2h,f,c
 30121   0056C4  0E01               	movlw	1
 30122   0056C6  6EDF               	movwf	indf2,c
 30123                           
 30124                           ; BSR set to: 1
 30125                           ;../digitalOut.c: 149:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 30126   0056C8  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30127   0056CA  A4D8               	btfss	status,2,c
 30128   0056CC  D004               	goto	l20532
 30129                           
 30130                           ; BSR set to: 1
 30131   0056CE  0E00               	movlw	0
 30132   0056D0  6FD8               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30133   0056D2  0E02               	movlw	2
 30134   0056D4  D003               	goto	L11
 30135   0056D6                     l20532:
 30136                           
 30137                           ; BSR set to: 1
 30138   0056D6  0E00               	movlw	0
 30139   0056D8  6FD8               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30140   0056DA  0E01               	movlw	1
 30141   0056DC                     L11:
 30142   0056DC  6FD7               	movwf	_startDigitalOutput$808& (0+255),b
 30143                           
 30144                           ; BSR set to: 1
 30145   0056DE  0EDE               	movlw	222
 30146   0056E0  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30147   0056E2  6FD5               	movwf	??_startDigitalOutput& (0+255),b
 30148   0056E4  6BD6               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30149   0056E6  0E03               	movlw	3
 30150   0056E8  23D6               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30151   0056EA  C1D5  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30152   0056EE  C1D6  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30153   0056F2  0100               	movlb	0	; () banked
 30154   0056F4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30155   0056F6  C1D7  F0A7         	movff	_startDigitalOutput$808,writeNVM@value
 30156   0056FA  0E00               	movlw	0
 30157   0056FC  EC60  F05C         	call	_writeNVM
 30158   005700                     l20536:
 30159                           
 30160                           ;../digitalOut.c: 152:     pinState = actionState;
 30161   005700  C1DA  F1D9         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 30162                           
 30163                           ;../digitalOut.c: 153:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 30164   005704  0101               	movlb	1	; () banked
 30165   005706  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30166   005708  0D07               	mullw	7
 30167   00570A  50F3               	movf	243,w,c
 30168   00570C  0F11               	addlw	17
 30169   00570E  EC52  F05E         	call	_getNV
 30170   005712  0100               	movlb	0	; () banked
 30171   005714  AB8D               	btfss	?_getNV& (0+255),5,b
 30172   005716  D008               	goto	l20542
 30173                           
 30174                           ; BSR set to: 0
 30175                           ;../digitalOut.c: 154:         pinState = !pinState;
 30176   005718  0101               	movlb	1	; () banked
 30177   00571A  51D9               	movf	startDigitalOutput@pinState& (0+255),w,b
 30178   00571C  A4D8               	btfss	status,2,c
 30179   00571E  D002               	goto	u20820
 30180   005720  0E01               	movlw	1
 30181   005722  D001               	goto	u20830
 30182   005724                     u20820:
 30183   005724  0E00               	movlw	0
 30184   005726                     u20830:
 30185   005726  6FD9               	movwf	startDigitalOutput@pinState& (0+255),b
 30186   005728                     l20542:
 30187                           
 30188                           ;../digitalOut.c: 156:     setOutputPin(io, pinState);
 30189   005728  C1D9  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 30190   00572C  0101               	movlb	1	; () banked
 30191   00572E  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30192   005730  ECAB  F036         	call	_setOutputPin
 30193                           
 30194                           ;../digitalOut.c: 161:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 30195   005734  0101               	movlb	1	; () banked
 30196   005736  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30197   005738  0D07               	mullw	7
 30198   00573A  50F3               	movf	243,w,c
 30199   00573C  0F11               	addlw	17
 30200   00573E  EC52  F05E         	call	_getNV
 30201   005742  0100               	movlb	0	; () banked
 30202   005744  A78D               	btfss	?_getNV& (0+255),3,b
 30203   005746  D021               	goto	l20550
 30204                           
 30205                           ; BSR set to: 0
 30206                           ;../digitalOut.c: 162:         if (actionState) {
 30207   005748  0101               	movlb	1	; () banked
 30208   00574A  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30209   00574C  B4D8               	btfsc	status,2,c
 30210   00574E  0012               	return	
 30211                           
 30212                           ; BSR set to: 1
 30213                           ;../digitalOut.c: 165:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 30214   005750  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30215   005752  B4D8               	btfsc	status,2,c
 30216   005754  D002               	goto	u20860
 30217   005756  0E01               	movlw	1
 30218   005758  D001               	goto	u20870
 30219   00575A                     u20860:
 30220   00575A  0E00               	movlw	0
 30221   00575C                     u20870:
 30222   00575C  6FCC               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30223   00575E  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30224   005760  0D07               	mullw	7
 30225   005762  50F3               	movf	243,w,c
 30226   005764  0F11               	addlw	17
 30227   005766  EC52  F05E         	call	_getNV
 30228   00576A  0100               	movlb	0	; () banked
 30229   00576C  518D               	movf	?_getNV& (0+255),w,b
 30230   00576E  0B40               	andlw	64
 30231   005770  0101               	movlb	1	; () banked
 30232   005772  6FCD               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30233   005774  0E01               	movlw	1
 30234   005776  6FCE               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30235   005778  0E01               	movlw	1
 30236   00577A  6FCF               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30237   00577C  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30238   00577E  0D04               	mullw	4
 30239   005780  50F3               	movf	243,w,c
 30240   005782  0F08               	addlw	8
 30241   005784  ECF7  F05C         	call	_sendInvertedProducedEvent
 30242   005788  0012               	return	
 30243   00578A                     l20550:
 30244                           
 30245                           ; BSR set to: 0
 30246                           ;../digitalOut.c: 170:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 30247   00578A  0101               	movlb	1	; () banked
 30248   00578C  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30249   00578E  B4D8               	btfsc	status,2,c
 30250   005790  D002               	goto	u20880
 30251   005792  0E01               	movlw	1
 30252   005794  D001               	goto	u20890
 30253   005796                     u20880:
 30254   005796  0E00               	movlw	0
 30255   005798                     u20890:
 30256   005798  6FCC               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30257   00579A  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30258   00579C  0D07               	mullw	7
 30259   00579E  50F3               	movf	243,w,c
 30260   0057A0  0F11               	addlw	17
 30261   0057A2  EC52  F05E         	call	_getNV
 30262   0057A6  0100               	movlb	0	; () banked
 30263   0057A8  518D               	movf	?_getNV& (0+255),w,b
 30264   0057AA  0B40               	andlw	64
 30265   0057AC  0101               	movlb	1	; () banked
 30266   0057AE  6FCD               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30267   0057B0  0E01               	movlw	1
 30268   0057B2  6FCE               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30269   0057B4  0E01               	movlw	1
 30270   0057B6  6FCF               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30271   0057B8  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30272   0057BA  0D04               	mullw	4
 30273   0057BC  50F3               	movf	243,w,c
 30274   0057BE  0F08               	addlw	8
 30275   0057C0  ECF7  F05C         	call	_sendInvertedProducedEvent
 30276   0057C4  0012               	return		;funcret
 30277   0057C6                     __end_of_startDigitalOutput:
 30278                           	callstack 0
 30279                           
 30280 ;; *************** function _sendInvertedProducedEvent *****************
 30281 ;; Defined at:
 30282 ;;		line 362 in file "../universalEvents.c"
 30283 ;; Parameters:    Size  Location     Type
 30284 ;;  happening       1    wreg     unsigned char 
 30285 ;;  state           1   18[BANK1 ] enum E12787
 30286 ;;  invert          1   19[BANK1 ] enum E12767
 30287 ;;  can_send_on     1   20[BANK1 ] enum E12767
 30288 ;;  can_send_off    1   21[BANK1 ] enum E12767
 30289 ;; Auto vars:     Size  Location     Type
 30290 ;;  happening       1   22[BANK1 ] unsigned char 
 30291 ;;  state_to_sen    1   25[BANK1 ] enum E12787
 30292 ;; Return value:  Size  Location     Type
 30293 ;;                  1    wreg      enum E12766
 30294 ;; Registers used:
 30295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30296 ;; Tracked objects:
 30297 ;;		On entry : 0/0
 30298 ;;		On exit  : 0/0
 30299 ;;		Unchanged: 0/0
 30300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30301 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30302 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30304 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30305 ;;Total ram usage:        8 bytes
 30306 ;; Hardware stack levels used: 1
 30307 ;; Hardware stack levels required when called: 18
 30308 ;; This function calls:
 30309 ;;		_sendProducedEvent
 30310 ;; This function is called by:
 30311 ;;		_startDigitalOutput
 30312 ;;		_sodTRCallback
 30313 ;; This function uses a non-reentrant model
 30314 ;;
 30315                           
 30316                           	psect	text110
 30317   00B9EE                     __ptext110:
 30318                           	callstack 0
 30319   00B9EE                     _sendInvertedProducedEvent:
 30320                           	callstack 9
 30321                           
 30322                           ;incstack = 0
 30323                           ;sendInvertedProducedEvent@happening stored from wreg
 30324   00B9EE  0101               	movlb	1	; () banked
 30325   00B9F0  6FD0               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 30326                           
 30327                           ;../universalEvents.c: 363:  EventState state_to_send = invert?!state:state;
 30328   00B9F2  0101               	movlb	1	; () banked
 30329   00B9F4  51CD               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 30330   00B9F6  A4D8               	btfss	status,2,c
 30331   00B9F8  D003               	goto	l19994
 30332                           
 30333                           ; BSR set to: 1
 30334   00B9FA  C1CC  F1D1         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1404
 30335   00B9FE  D007               	goto	L12
 30336   00BA00                     l19994:
 30337                           
 30338                           ; BSR set to: 1
 30339   00BA00  51CC               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 30340   00BA02  A4D8               	btfss	status,2,c
 30341   00BA04  D002               	goto	u19990
 30342   00BA06  0E01               	movlw	1
 30343   00BA08  D001               	goto	u20000
 30344   00BA0A                     u19990:
 30345   00BA0A  0E00               	movlw	0
 30346   00BA0C                     u20000:
 30347   00BA0C  6FD1               	movwf	_sendInvertedProducedEvent$1404& (0+255),b
 30348   00BA0E                     L12:
 30349   00BA0E  6BD2               	clrf	(_sendInvertedProducedEvent$1404+1)& (0+255),b
 30350                           
 30351                           ; BSR set to: 1
 30352   00BA10  C1D1  F1D3         	movff	_sendInvertedProducedEvent$1404,sendInvertedProducedEvent@state_to_send
 30353                           
 30354                           ;../universalEvents.c: 364:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 30355   00BA14  51D3               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30356   00BA16  B4D8               	btfsc	status,2,c
 30357   00BA18  D003               	goto	u20020
 30358                           
 30359                           ; BSR set to: 1
 30360   00BA1A  51CE               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 30361   00BA1C  A4D8               	btfss	status,2,c
 30362   00BA1E  D006               	goto	u20040
 30363   00BA20                     u20020:
 30364                           
 30365                           ; BSR set to: 1
 30366   00BA20  51D3               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30367   00BA22  A4D8               	btfss	status,2,c
 30368   00BA24  0012               	return	
 30369                           
 30370                           ; BSR set to: 1
 30371   00BA26  51CF               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 30372   00BA28  B4D8               	btfsc	status,2,c
 30373   00BA2A  0012               	return	
 30374   00BA2C                     u20040:
 30375                           
 30376                           ; BSR set to: 1
 30377                           ;../universalEvents.c: 365:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 30378   00BA2C  C1D3  F0A7         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 30379   00BA30  51D0               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 30380   00BA32  EC3B  F04B         	call	_sendProducedEvent
 30381   00BA36  0012               	return		;funcret
 30382   00BA38                     __end_of_sendInvertedProducedEvent:
 30383                           	callstack 0
 30384                           
 30385 ;; *************** function _startBounceOutput *****************
 30386 ;; Defined at:
 30387 ;;		line 566 in file "../servo.c"
 30388 ;; Parameters:    Size  Location     Type
 30389 ;;  io              1    wreg     unsigned char 
 30390 ;;  action          1   45[BANK0 ] unsigned char 
 30391 ;; Auto vars:     Size  Location     Type
 30392 ;;  io              1   46[BANK0 ] unsigned char 
 30393 ;; Return value:  Size  Location     Type
 30394 ;;                  1    wreg      void 
 30395 ;; Registers used:
 30396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30397 ;; Tracked objects:
 30398 ;;		On entry : 0/0
 30399 ;;		On exit  : 0/0
 30400 ;;		Unchanged: 0/0
 30401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30402 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30405 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30406 ;;Total ram usage:        2 bytes
 30407 ;; Hardware stack levels used: 1
 30408 ;; Hardware stack levels required when called: 12
 30409 ;; This function calls:
 30410 ;;		Nothing
 30411 ;; This function is called by:
 30412 ;;		_APP_nvValueChanged
 30413 ;;		_startOutput
 30414 ;; This function uses a non-reentrant model
 30415 ;;
 30416                           
 30417                           	psect	text111
 30418   00B152                     __ptext111:
 30419                           	callstack 0
 30420   00B152                     _startBounceOutput:
 30421                           	callstack 14
 30422                           
 30423                           ;incstack = 0
 30424                           ;startBounceOutput@io stored from wreg
 30425   00B152  0100               	movlb	0	; () banked
 30426   00B154  6F8E               	movwf	startBounceOutput@io& (0+255),b
 30427                           
 30428                           ;../servo.c: 567:     switch (action) {
 30429   00B156  D018               	goto	l20154
 30430   00B158                     l20148:
 30431                           
 30432                           ; BSR set to: 0
 30433                           ;../servo.c: 569:             speed[io] = 0;
 30434   00B158  518E               	movf	startBounceOutput@io& (0+255),w,b
 30435   00B15A  0D02               	mullw	2
 30436   00B15C  0E00               	movlw	low _speed
 30437   00B15E  24F3               	addwf	243,w,c
 30438   00B160  6ED9               	movwf	fsr2l,c
 30439   00B162  0E02               	movlw	high _speed
 30440   00B164  20F4               	addwfc	prodh,w,c
 30441   00B166  6EDA               	movwf	fsr2h,c
 30442   00B168  6ADE               	clrf	postinc2,c
 30443   00B16A  6ADD               	clrf	postdec2,c
 30444                           
 30445                           ;../servo.c: 570:             break;
 30446   00B16C  D015               	goto	l20156
 30447   00B16E                     l20150:
 30448                           
 30449                           ; BSR set to: 0
 30450                           ;../servo.c: 572:             speed[io] = 12;
 30451   00B16E  518E               	movf	startBounceOutput@io& (0+255),w,b
 30452   00B170  0D02               	mullw	2
 30453   00B172  0E00               	movlw	low _speed
 30454   00B174  24F3               	addwf	243,w,c
 30455   00B176  6ED9               	movwf	fsr2l,c
 30456   00B178  0E02               	movlw	high _speed
 30457   00B17A  20F4               	addwfc	prodh,w,c
 30458   00B17C  6EDA               	movwf	fsr2h,c
 30459   00B17E  0E0C               	movlw	12
 30460   00B180  6EDE               	movwf	postinc2,c
 30461   00B182  0E00               	movlw	0
 30462   00B184  6EDD               	movwf	postdec2,c
 30463                           
 30464                           ;../servo.c: 573:             break;
 30465   00B186  D008               	goto	l20156
 30466   00B188                     l20154:
 30467   00B188  0100               	movlb	0	; () banked
 30468   00B18A  518D               	movf	startBounceOutput@action& (0+255),w,b
 30469                           
 30470                           ; Switch size 1, requested type "simple"
 30471                           ; Number of cases is 2, Range of values is 1 to 2
 30472                           ; switch strategies available:
 30473                           ; Name         Instructions Cycles
 30474                           ; simple_byte            7     4 (average)
 30475                           ;	Chosen strategy is simple_byte
 30476   00B18C  0A01               	xorlw	1	; case 1
 30477   00B18E  B4D8               	btfsc	status,2,c
 30478   00B190  D7EE               	goto	l20150
 30479   00B192  0A03               	xorlw	3	; case 2
 30480   00B194  B4D8               	btfsc	status,2,c
 30481   00B196  D7E0               	goto	l20148
 30482   00B198                     l20156:
 30483                           
 30484                           ; BSR set to: 0
 30485                           ;../servo.c: 575:     servoState[io] = SS_STARTING;
 30486   00B198  0E10               	movlw	low _servoState
 30487   00B19A  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30488   00B19C  6ED9               	movwf	fsr2l,c
 30489   00B19E  6ADA               	clrf	fsr2h,c
 30490   00B1A0  0E01               	movlw	high _servoState
 30491   00B1A2  22DA               	addwfc	fsr2h,f,c
 30492   00B1A4  0E03               	movlw	3
 30493   00B1A6  6EDF               	movwf	indf2,c
 30494                           
 30495                           ;../servo.c: 576:     loopCount[io] = 0;
 30496   00B1A8  0E54               	movlw	low _loopCount
 30497   00B1AA  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30498   00B1AC  6ED9               	movwf	fsr2l,c
 30499   00B1AE  6ADA               	clrf	fsr2h,c
 30500   00B1B0  0E02               	movlw	high _loopCount
 30501   00B1B2  22DA               	addwfc	fsr2h,f,c
 30502   00B1B4  6ADF               	clrf	indf2,c
 30503                           
 30504                           ; BSR set to: 0
 30505   00B1B6  0012               	return		;funcret
 30506   00B1B8                     __end_of_startBounceOutput:
 30507                           	callstack 0
 30508                           
 30509 ;; *************** function _setOutputState *****************
 30510 ;; Defined at:
 30511 ;;		line 110 in file "../outputs.c"
 30512 ;; Parameters:    Size  Location     Type
 30513 ;;  io              1    wreg     unsigned char 
 30514 ;;  act             1   51[BANK0 ] unsigned char 
 30515 ;;  type            1   52[BANK0 ] unsigned char 
 30516 ;; Auto vars:     Size  Location     Type
 30517 ;;  io              1   53[BANK0 ] unsigned char 
 30518 ;; Return value:  Size  Location     Type
 30519 ;;                  1    wreg      void 
 30520 ;; Registers used:
 30521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30522 ;; Tracked objects:
 30523 ;;		On entry : 0/0
 30524 ;;		On exit  : 0/0
 30525 ;;		Unchanged: 0/0
 30526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30528 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30530 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30531 ;;Total ram usage:        3 bytes
 30532 ;; Hardware stack levels used: 1
 30533 ;; Hardware stack levels required when called: 14
 30534 ;; This function calls:
 30535 ;;		_setBounceState
 30536 ;;		_setMultiState
 30537 ;;		_setServoState
 30538 ;; This function is called by:
 30539 ;;		_processActions
 30540 ;; This function uses a non-reentrant model
 30541 ;;
 30542                           
 30543                           	psect	text112
 30544   00B6D0                     __ptext112:
 30545                           	callstack 0
 30546   00B6D0                     _setOutputState:
 30547                           	callstack 14
 30548                           
 30549                           ; BSR set to: 0
 30550                           ;incstack = 0
 30551                           ;setOutputState@io stored from wreg
 30552   00B6D0  0100               	movlb	0	; () banked
 30553   00B6D2  6F95               	movwf	setOutputState@io& (0+255),b
 30554                           
 30555                           ;../outputs.c: 111:     switch(type) {
 30556   00B6D4  D012               	goto	l21484
 30557   00B6D6                     l21470:
 30558                           
 30559                           ; BSR set to: 0
 30560                           ;../outputs.c: 124:             setBounceState(io, act);
 30561   00B6D6  C093  F091         	movff	setOutputState@act,setBounceState@action
 30562   00B6DA  5195               	movf	setOutputState@io& (0+255),w,b
 30563   00B6DC  ECDD  F04A         	call	_setBounceState
 30564   00B6E0  0012               	return	
 30565   00B6E2                     l21474:
 30566                           
 30567                           ; BSR set to: 0
 30568                           ;../outputs.c: 129:             setServoState(io, act);
 30569   00B6E2  C093  F091         	movff	setOutputState@act,setServoState@action
 30570   00B6E6  5195               	movf	setOutputState@io& (0+255),w,b
 30571   00B6E8  EC7F  F04A         	call	_setServoState
 30572   00B6EC  0012               	return	
 30573   00B6EE                     l21478:
 30574                           
 30575                           ; BSR set to: 0
 30576                           ;../outputs.c: 134:             setMultiState(io, act);
 30577   00B6EE  C093  F091         	movff	setOutputState@act,setMultiState@action
 30578   00B6F2  5195               	movf	setOutputState@io& (0+255),w,b
 30579   00B6F4  EC08  F044         	call	_setMultiState
 30580   00B6F8  0012               	return	
 30581   00B6FA                     l21484:
 30582   00B6FA  0100               	movlb	0	; () banked
 30583   00B6FC  5194               	movf	setOutputState@type& (0+255),w,b
 30584                           
 30585                           ; Switch size 1, requested type "simple"
 30586                           ; Number of cases is 7, Range of values is 0 to 6
 30587                           ; switch strategies available:
 30588                           ; Name         Instructions Cycles
 30589                           ; simple_byte           22    12 (average)
 30590                           ;	Chosen strategy is simple_byte
 30591   00B6FE  0A00               	xorlw	0	; case 0
 30592   00B700  B4D8               	btfsc	status,2,c
 30593   00B702  0012               	return	
 30594   00B704  0A01               	xorlw	1	; case 1
 30595   00B706  B4D8               	btfsc	status,2,c
 30596   00B708  0012               	return	
 30597   00B70A  0A03               	xorlw	3	; case 2
 30598   00B70C  B4D8               	btfsc	status,2,c
 30599   00B70E  D7E9               	goto	l21474
 30600   00B710  0A01               	xorlw	1	; case 3
 30601   00B712  B4D8               	btfsc	status,2,c
 30602   00B714  D7E0               	goto	l21470
 30603   00B716  0A07               	xorlw	7	; case 4
 30604   00B718  B4D8               	btfsc	status,2,c
 30605   00B71A  D7E9               	goto	l21478
 30606   00B71C  0A01               	xorlw	1	; case 5
 30607   00B71E  B4D8               	btfsc	status,2,c
 30608   00B720  0012               	return	
 30609   00B722  0A03               	xorlw	3	; case 6
 30610   00B724  0012               	return	
 30611   00B726                     __end_of_setOutputState:
 30612                           	callstack 0
 30613                           
 30614 ;; *************** function _setServoState *****************
 30615 ;; Defined at:
 30616 ;;		line 606 in file "../servo.c"
 30617 ;; Parameters:    Size  Location     Type
 30618 ;;  io              1    wreg     unsigned char 
 30619 ;;  action          1   49[BANK0 ] unsigned char 
 30620 ;; Auto vars:     Size  Location     Type
 30621 ;;  io              1   50[BANK0 ] unsigned char 
 30622 ;; Return value:  Size  Location     Type
 30623 ;;                  1    wreg      void 
 30624 ;; Registers used:
 30625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30626 ;; Tracked objects:
 30627 ;;		On entry : 0/0
 30628 ;;		On exit  : 0/0
 30629 ;;		Unchanged: 0/0
 30630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30631 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30634 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30635 ;;Total ram usage:        2 bytes
 30636 ;; Hardware stack levels used: 1
 30637 ;; Hardware stack levels required when called: 13
 30638 ;; This function calls:
 30639 ;;		_getNV
 30640 ;; This function is called by:
 30641 ;;		_APP_nvValueChanged
 30642 ;;		_setOutputState
 30643 ;; This function uses a non-reentrant model
 30644 ;;
 30645                           
 30646                           	psect	text113
 30647   0094FE                     __ptext113:
 30648                           	callstack 0
 30649   0094FE                     _setServoState:
 30650                           	callstack 13
 30651                           
 30652                           ;incstack = 0
 30653                           ;setServoState@io stored from wreg
 30654   0094FE  0100               	movlb	0	; () banked
 30655   009500  6F92               	movwf	setServoState@io& (0+255),b
 30656                           
 30657                           ;../servo.c: 607:     switch (action) {
 30658   009502  D052               	goto	l20102
 30659   009504                     l20088:
 30660                           
 30661                           ; BSR set to: 0
 30662                           ;../servo.c: 609:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30663   009504  5192               	movf	setServoState@io& (0+255),w,b
 30664   009506  0D07               	mullw	7
 30665   009508  50F3               	movf	243,w,c
 30666   00950A  0F11               	addlw	17
 30667   00950C  EC52  F05E         	call	_getNV
 30668   009510  0100               	movlb	0	; () banked
 30669   009512  A18D               	btfss	?_getNV& (0+255),0,b
 30670   009514  D010               	goto	l20092
 30671                           
 30672                           ; BSR set to: 0
 30673                           ;../servo.c: 610:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30674   009516  5192               	movf	setServoState@io& (0+255),w,b
 30675   009518  0D07               	mullw	7
 30676   00951A  50F3               	movf	243,w,c
 30677   00951C  0F13               	addlw	19
 30678   00951E  EC52  F05E         	call	_getNV
 30679   009522  0E20               	movlw	low _targetPos
 30680   009524  0100               	movlb	0	; () banked
 30681   009526  2592               	addwf	setServoState@io& (0+255),w,b
 30682   009528  6ED9               	movwf	fsr2l,c
 30683   00952A  6ADA               	clrf	fsr2h,c
 30684   00952C  0E01               	movlw	high _targetPos
 30685   00952E  22DA               	addwfc	fsr2h,f,c
 30686   009530  C08D  FFDF         	movff	?_getNV,indf2
 30687                           
 30688                           ;../servo.c: 611:             } else {
 30689   009534  0012               	return	
 30690   009536                     l20092:
 30691                           
 30692                           ; BSR set to: 0
 30693                           ;../servo.c: 612:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30694   009536  5192               	movf	setServoState@io& (0+255),w,b
 30695   009538  0D07               	mullw	7
 30696   00953A  50F3               	movf	243,w,c
 30697   00953C  0F12               	addlw	18
 30698   00953E  EC52  F05E         	call	_getNV
 30699   009542  0E20               	movlw	low _targetPos
 30700   009544  0100               	movlb	0	; () banked
 30701   009546  2592               	addwf	setServoState@io& (0+255),w,b
 30702   009548  6ED9               	movwf	fsr2l,c
 30703   00954A  6ADA               	clrf	fsr2h,c
 30704   00954C  0E01               	movlw	high _targetPos
 30705   00954E  22DA               	addwfc	fsr2h,f,c
 30706   009550  C08D  FFDF         	movff	?_getNV,indf2
 30707   009554  0012               	return	
 30708   009556                     l20094:
 30709                           
 30710                           ; BSR set to: 0
 30711                           ;../servo.c: 616:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30712   009556  5192               	movf	setServoState@io& (0+255),w,b
 30713   009558  0D07               	mullw	7
 30714   00955A  50F3               	movf	243,w,c
 30715   00955C  0F11               	addlw	17
 30716   00955E  EC52  F05E         	call	_getNV
 30717   009562  0100               	movlb	0	; () banked
 30718   009564  A18D               	btfss	?_getNV& (0+255),0,b
 30719   009566  D010               	goto	l20098
 30720                           
 30721                           ; BSR set to: 0
 30722                           ;../servo.c: 617:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30723   009568  5192               	movf	setServoState@io& (0+255),w,b
 30724   00956A  0D07               	mullw	7
 30725   00956C  50F3               	movf	243,w,c
 30726   00956E  0F12               	addlw	18
 30727   009570  EC52  F05E         	call	_getNV
 30728   009574  0E20               	movlw	low _targetPos
 30729   009576  0100               	movlb	0	; () banked
 30730   009578  2592               	addwf	setServoState@io& (0+255),w,b
 30731   00957A  6ED9               	movwf	fsr2l,c
 30732   00957C  6ADA               	clrf	fsr2h,c
 30733   00957E  0E01               	movlw	high _targetPos
 30734   009580  22DA               	addwfc	fsr2h,f,c
 30735   009582  C08D  FFDF         	movff	?_getNV,indf2
 30736                           
 30737                           ;../servo.c: 618:             } else {
 30738   009586  0012               	return	
 30739   009588                     l20098:
 30740                           
 30741                           ; BSR set to: 0
 30742                           ;../servo.c: 619:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30743   009588  5192               	movf	setServoState@io& (0+255),w,b
 30744   00958A  0D07               	mullw	7
 30745   00958C  50F3               	movf	243,w,c
 30746   00958E  0F13               	addlw	19
 30747   009590  EC52  F05E         	call	_getNV
 30748   009594  0E20               	movlw	low _targetPos
 30749   009596  0100               	movlb	0	; () banked
 30750   009598  2592               	addwf	setServoState@io& (0+255),w,b
 30751   00959A  6ED9               	movwf	fsr2l,c
 30752   00959C  6ADA               	clrf	fsr2h,c
 30753   00959E  0E01               	movlw	high _targetPos
 30754   0095A0  22DA               	addwfc	fsr2h,f,c
 30755   0095A2  C08D  FFDF         	movff	?_getNV,indf2
 30756   0095A6  0012               	return	
 30757   0095A8                     l20102:
 30758   0095A8  0100               	movlb	0	; () banked
 30759   0095AA  5191               	movf	setServoState@action& (0+255),w,b
 30760                           
 30761                           ; Switch size 1, requested type "simple"
 30762                           ; Number of cases is 2, Range of values is 1 to 2
 30763                           ; switch strategies available:
 30764                           ; Name         Instructions Cycles
 30765                           ; simple_byte            7     4 (average)
 30766                           ;	Chosen strategy is simple_byte
 30767   0095AC  0A01               	xorlw	1	; case 1
 30768   0095AE  B4D8               	btfsc	status,2,c
 30769   0095B0  D7D2               	goto	l20094
 30770   0095B2  0A03               	xorlw	3	; case 2
 30771   0095B4  A4D8               	btfss	status,2,c
 30772   0095B6  0012               	return	
 30773   0095B8  D7A5               	goto	l20088
 30774   0095BA                     __end_of_setServoState:
 30775                           	callstack 0
 30776                           
 30777 ;; *************** function _setMultiState *****************
 30778 ;; Defined at:
 30779 ;;		line 657 in file "../servo.c"
 30780 ;; Parameters:    Size  Location     Type
 30781 ;;  io              1    wreg     unsigned char 
 30782 ;;  action          1   49[BANK0 ] unsigned char 
 30783 ;; Auto vars:     Size  Location     Type
 30784 ;;  io              1   50[BANK0 ] unsigned char 
 30785 ;; Return value:  Size  Location     Type
 30786 ;;                  1    wreg      void 
 30787 ;; Registers used:
 30788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30789 ;; Tracked objects:
 30790 ;;		On entry : 0/0
 30791 ;;		On exit  : 0/0
 30792 ;;		Unchanged: 0/0
 30793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30794 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30797 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30798 ;;Total ram usage:        2 bytes
 30799 ;; Hardware stack levels used: 1
 30800 ;; Hardware stack levels required when called: 13
 30801 ;; This function calls:
 30802 ;;		_getNV
 30803 ;; This function is called by:
 30804 ;;		_APP_nvValueChanged
 30805 ;;		_setOutputState
 30806 ;; This function uses a non-reentrant model
 30807 ;;
 30808                           
 30809                           	psect	text114
 30810   008810                     __ptext114:
 30811                           	callstack 0
 30812   008810                     _setMultiState:
 30813                           	callstack 13
 30814                           
 30815                           ; BSR set to: 0
 30816                           ;incstack = 0
 30817                           ;setMultiState@io stored from wreg
 30818   008810  0100               	movlb	0	; () banked
 30819   008812  6F92               	movwf	setMultiState@io& (0+255),b
 30820                           
 30821                           ;../servo.c: 658:     switch (action) {
 30822   008814  D05E               	goto	l20174
 30823   008816                     l20160:
 30824                           
 30825                           ; BSR set to: 0
 30826                           ;../servo.c: 660:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30827   008816  5192               	movf	setMultiState@io& (0+255),w,b
 30828   008818  0D07               	mullw	7
 30829   00881A  50F3               	movf	243,w,c
 30830   00881C  0F13               	addlw	19
 30831   00881E  EC52  F05E         	call	_getNV
 30832   008822  0E20               	movlw	low _targetPos
 30833   008824  0100               	movlb	0	; () banked
 30834   008826  2592               	addwf	setMultiState@io& (0+255),w,b
 30835   008828  6ED9               	movwf	fsr2l,c
 30836   00882A  6ADA               	clrf	fsr2h,c
 30837   00882C  0E01               	movlw	high _targetPos
 30838   00882E  22DA               	addwfc	fsr2h,f,c
 30839   008830  C08D  FFDF         	movff	?_getNV,indf2
 30840                           
 30841                           ;../servo.c: 661:             break;
 30842   008834  0012               	return	
 30843   008836                     l20162:
 30844                           
 30845                           ; BSR set to: 0
 30846                           ;../servo.c: 663:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 30847   008836  5192               	movf	setMultiState@io& (0+255),w,b
 30848   008838  0D07               	mullw	7
 30849   00883A  50F3               	movf	243,w,c
 30850   00883C  0F14               	addlw	20
 30851   00883E  EC52  F05E         	call	_getNV
 30852   008842  0E20               	movlw	low _targetPos
 30853   008844  0100               	movlb	0	; () banked
 30854   008846  2592               	addwf	setMultiState@io& (0+255),w,b
 30855   008848  6ED9               	movwf	fsr2l,c
 30856   00884A  6ADA               	clrf	fsr2h,c
 30857   00884C  0E01               	movlw	high _targetPos
 30858   00884E  22DA               	addwfc	fsr2h,f,c
 30859   008850  C08D  FFDF         	movff	?_getNV,indf2
 30860                           
 30861                           ;../servo.c: 664:             break;
 30862   008854  0012               	return	
 30863   008856                     l20164:
 30864                           
 30865                           ; BSR set to: 0
 30866                           ;../servo.c: 666:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 30867   008856  5192               	movf	setMultiState@io& (0+255),w,b
 30868   008858  0D07               	mullw	7
 30869   00885A  50F3               	movf	243,w,c
 30870   00885C  0F12               	addlw	18
 30871   00885E  EC52  F05E         	call	_getNV
 30872   008862  0100               	movlb	0	; () banked
 30873   008864  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30874   008866  0012               	return	
 30875   008868  518E               	movf	(?_getNV+1)& (0+255),w,b
 30876   00886A  E104               	bnz	u20150
 30877   00886C  0E03               	movlw	3
 30878   00886E  5D8D               	subwf	?_getNV& (0+255),w,b
 30879   008870  A0D8               	btfss	status,0,c
 30880   008872  0012               	return	
 30881   008874                     u20150:
 30882                           
 30883                           ; BSR set to: 0
 30884                           ;../servo.c: 667:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 30885   008874  5192               	movf	setMultiState@io& (0+255),w,b
 30886   008876  0D07               	mullw	7
 30887   008878  50F3               	movf	243,w,c
 30888   00887A  0F15               	addlw	21
 30889   00887C  EC52  F05E         	call	_getNV
 30890   008880  0E20               	movlw	low _targetPos
 30891   008882  0100               	movlb	0	; () banked
 30892   008884  2592               	addwf	setMultiState@io& (0+255),w,b
 30893   008886  6ED9               	movwf	fsr2l,c
 30894   008888  6ADA               	clrf	fsr2h,c
 30895   00888A  0E01               	movlw	high _targetPos
 30896   00888C  22DA               	addwfc	fsr2h,f,c
 30897   00888E  C08D  FFDF         	movff	?_getNV,indf2
 30898   008892  0012               	return	
 30899   008894                     l20168:
 30900                           
 30901                           ; BSR set to: 0
 30902                           ;../servo.c: 671:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 30903   008894  5192               	movf	setMultiState@io& (0+255),w,b
 30904   008896  0D07               	mullw	7
 30905   008898  50F3               	movf	243,w,c
 30906   00889A  0F12               	addlw	18
 30907   00889C  EC52  F05E         	call	_getNV
 30908   0088A0  0100               	movlb	0	; () banked
 30909   0088A2  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30910   0088A4  0012               	return	
 30911   0088A6  518E               	movf	(?_getNV+1)& (0+255),w,b
 30912   0088A8  E104               	bnz	u20160
 30913   0088AA  0E04               	movlw	4
 30914   0088AC  5D8D               	subwf	?_getNV& (0+255),w,b
 30915   0088AE  A0D8               	btfss	status,0,c
 30916   0088B0  0012               	return	
 30917   0088B2                     u20160:
 30918                           
 30919                           ; BSR set to: 0
 30920                           ;../servo.c: 672:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 30921   0088B2  5192               	movf	setMultiState@io& (0+255),w,b
 30922   0088B4  0D07               	mullw	7
 30923   0088B6  50F3               	movf	243,w,c
 30924   0088B8  0F16               	addlw	22
 30925   0088BA  EC52  F05E         	call	_getNV
 30926   0088BE  0E20               	movlw	low _targetPos
 30927   0088C0  0100               	movlb	0	; () banked
 30928   0088C2  2592               	addwf	setMultiState@io& (0+255),w,b
 30929   0088C4  6ED9               	movwf	fsr2l,c
 30930   0088C6  6ADA               	clrf	fsr2h,c
 30931   0088C8  0E01               	movlw	high _targetPos
 30932   0088CA  22DA               	addwfc	fsr2h,f,c
 30933   0088CC  C08D  FFDF         	movff	?_getNV,indf2
 30934   0088D0  0012               	return	
 30935   0088D2                     l20174:
 30936   0088D2  0100               	movlb	0	; () banked
 30937   0088D4  5191               	movf	setMultiState@action& (0+255),w,b
 30938                           
 30939                           ; Switch size 1, requested type "simple"
 30940                           ; Number of cases is 4, Range of values is 0 to 3
 30941                           ; switch strategies available:
 30942                           ; Name         Instructions Cycles
 30943                           ; simple_byte           13     7 (average)
 30944                           ;	Chosen strategy is simple_byte
 30945   0088D6  0A00               	xorlw	0	; case 0
 30946   0088D8  B4D8               	btfsc	status,2,c
 30947   0088DA  D79D               	goto	l20160
 30948   0088DC  0A01               	xorlw	1	; case 1
 30949   0088DE  B4D8               	btfsc	status,2,c
 30950   0088E0  D7AA               	goto	l20162
 30951   0088E2  0A03               	xorlw	3	; case 2
 30952   0088E4  B4D8               	btfsc	status,2,c
 30953   0088E6  D7B7               	goto	l20164
 30954   0088E8  0A01               	xorlw	1	; case 3
 30955   0088EA  A4D8               	btfss	status,2,c
 30956   0088EC  0012               	return	
 30957   0088EE  D7D2               	goto	l20168
 30958   0088F0                     __end_of_setMultiState:
 30959                           	callstack 0
 30960                           
 30961 ;; *************** function _setBounceState *****************
 30962 ;; Defined at:
 30963 ;;		line 633 in file "../servo.c"
 30964 ;; Parameters:    Size  Location     Type
 30965 ;;  io              1    wreg     unsigned char 
 30966 ;;  action          1   49[BANK0 ] unsigned char 
 30967 ;; Auto vars:     Size  Location     Type
 30968 ;;  io              1   50[BANK0 ] unsigned char 
 30969 ;; Return value:  Size  Location     Type
 30970 ;;                  1    wreg      void 
 30971 ;; Registers used:
 30972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30973 ;; Tracked objects:
 30974 ;;		On entry : 0/0
 30975 ;;		On exit  : 0/0
 30976 ;;		Unchanged: 0/0
 30977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30978 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30981 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30982 ;;Total ram usage:        2 bytes
 30983 ;; Hardware stack levels used: 1
 30984 ;; Hardware stack levels required when called: 13
 30985 ;; This function calls:
 30986 ;;		_getNV
 30987 ;; This function is called by:
 30988 ;;		_APP_nvValueChanged
 30989 ;;		_setOutputState
 30990 ;; This function uses a non-reentrant model
 30991 ;;
 30992                           
 30993                           	psect	text115
 30994   0095BA                     __ptext115:
 30995                           	callstack 0
 30996   0095BA                     _setBounceState:
 30997                           	callstack 13
 30998                           
 30999                           ; BSR set to: 0
 31000                           ;incstack = 0
 31001                           ;setBounceState@io stored from wreg
 31002   0095BA  0100               	movlb	0	; () banked
 31003   0095BC  6F92               	movwf	setBounceState@io& (0+255),b
 31004                           
 31005                           ;../servo.c: 634:     switch (action) {
 31006   0095BE  D052               	goto	l20144
 31007   0095C0                     l20130:
 31008                           
 31009                           ; BSR set to: 0
 31010                           ;../servo.c: 636:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31011   0095C0  5192               	movf	setBounceState@io& (0+255),w,b
 31012   0095C2  0D07               	mullw	7
 31013   0095C4  50F3               	movf	243,w,c
 31014   0095C6  0F11               	addlw	17
 31015   0095C8  EC52  F05E         	call	_getNV
 31016   0095CC  0100               	movlb	0	; () banked
 31017   0095CE  A18D               	btfss	?_getNV& (0+255),0,b
 31018   0095D0  D010               	goto	l20134
 31019                           
 31020                           ; BSR set to: 0
 31021                           ;../servo.c: 637:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31022   0095D2  5192               	movf	setBounceState@io& (0+255),w,b
 31023   0095D4  0D07               	mullw	7
 31024   0095D6  50F3               	movf	243,w,c
 31025   0095D8  0F12               	addlw	18
 31026   0095DA  EC52  F05E         	call	_getNV
 31027   0095DE  0E20               	movlw	low _targetPos
 31028   0095E0  0100               	movlb	0	; () banked
 31029   0095E2  2592               	addwf	setBounceState@io& (0+255),w,b
 31030   0095E4  6ED9               	movwf	fsr2l,c
 31031   0095E6  6ADA               	clrf	fsr2h,c
 31032   0095E8  0E01               	movlw	high _targetPos
 31033   0095EA  22DA               	addwfc	fsr2h,f,c
 31034   0095EC  C08D  FFDF         	movff	?_getNV,indf2
 31035                           
 31036                           ;../servo.c: 638:             } else {
 31037   0095F0  0012               	return	
 31038   0095F2                     l20134:
 31039                           
 31040                           ; BSR set to: 0
 31041                           ;../servo.c: 639:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31042   0095F2  5192               	movf	setBounceState@io& (0+255),w,b
 31043   0095F4  0D07               	mullw	7
 31044   0095F6  50F3               	movf	243,w,c
 31045   0095F8  0F13               	addlw	19
 31046   0095FA  EC52  F05E         	call	_getNV
 31047   0095FE  0E20               	movlw	low _targetPos
 31048   009600  0100               	movlb	0	; () banked
 31049   009602  2592               	addwf	setBounceState@io& (0+255),w,b
 31050   009604  6ED9               	movwf	fsr2l,c
 31051   009606  6ADA               	clrf	fsr2h,c
 31052   009608  0E01               	movlw	high _targetPos
 31053   00960A  22DA               	addwfc	fsr2h,f,c
 31054   00960C  C08D  FFDF         	movff	?_getNV,indf2
 31055   009610  0012               	return	
 31056   009612                     l20136:
 31057                           
 31058                           ; BSR set to: 0
 31059                           ;../servo.c: 643:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31060   009612  5192               	movf	setBounceState@io& (0+255),w,b
 31061   009614  0D07               	mullw	7
 31062   009616  50F3               	movf	243,w,c
 31063   009618  0F11               	addlw	17
 31064   00961A  EC52  F05E         	call	_getNV
 31065   00961E  0100               	movlb	0	; () banked
 31066   009620  A18D               	btfss	?_getNV& (0+255),0,b
 31067   009622  D010               	goto	l20140
 31068                           
 31069                           ; BSR set to: 0
 31070                           ;../servo.c: 644:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31071   009624  5192               	movf	setBounceState@io& (0+255),w,b
 31072   009626  0D07               	mullw	7
 31073   009628  50F3               	movf	243,w,c
 31074   00962A  0F13               	addlw	19
 31075   00962C  EC52  F05E         	call	_getNV
 31076   009630  0E20               	movlw	low _targetPos
 31077   009632  0100               	movlb	0	; () banked
 31078   009634  2592               	addwf	setBounceState@io& (0+255),w,b
 31079   009636  6ED9               	movwf	fsr2l,c
 31080   009638  6ADA               	clrf	fsr2h,c
 31081   00963A  0E01               	movlw	high _targetPos
 31082   00963C  22DA               	addwfc	fsr2h,f,c
 31083   00963E  C08D  FFDF         	movff	?_getNV,indf2
 31084                           
 31085                           ;../servo.c: 645:             } else {
 31086   009642  0012               	return	
 31087   009644                     l20140:
 31088                           
 31089                           ; BSR set to: 0
 31090                           ;../servo.c: 646:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31091   009644  5192               	movf	setBounceState@io& (0+255),w,b
 31092   009646  0D07               	mullw	7
 31093   009648  50F3               	movf	243,w,c
 31094   00964A  0F12               	addlw	18
 31095   00964C  EC52  F05E         	call	_getNV
 31096   009650  0E20               	movlw	low _targetPos
 31097   009652  0100               	movlb	0	; () banked
 31098   009654  2592               	addwf	setBounceState@io& (0+255),w,b
 31099   009656  6ED9               	movwf	fsr2l,c
 31100   009658  6ADA               	clrf	fsr2h,c
 31101   00965A  0E01               	movlw	high _targetPos
 31102   00965C  22DA               	addwfc	fsr2h,f,c
 31103   00965E  C08D  FFDF         	movff	?_getNV,indf2
 31104   009662  0012               	return	
 31105   009664                     l20144:
 31106   009664  0100               	movlb	0	; () banked
 31107   009666  5191               	movf	setBounceState@action& (0+255),w,b
 31108                           
 31109                           ; Switch size 1, requested type "simple"
 31110                           ; Number of cases is 2, Range of values is 1 to 2
 31111                           ; switch strategies available:
 31112                           ; Name         Instructions Cycles
 31113                           ; simple_byte            7     4 (average)
 31114                           ;	Chosen strategy is simple_byte
 31115   009668  0A01               	xorlw	1	; case 1
 31116   00966A  B4D8               	btfsc	status,2,c
 31117   00966C  D7D2               	goto	l20136
 31118   00966E  0A03               	xorlw	3	; case 2
 31119   009670  A4D8               	btfss	status,2,c
 31120   009672  0012               	return	
 31121   009674  D7A5               	goto	l20130
 31122   009676                     __end_of_setBounceState:
 31123                           	callstack 0
 31124                           
 31125 ;; *************** function _needsStarting *****************
 31126 ;; Defined at:
 31127 ;;		line 182 in file "../outputs.c"
 31128 ;; Parameters:    Size  Location     Type
 31129 ;;  io              1    wreg     unsigned char 
 31130 ;;  act             1   45[BANK0 ] unsigned char 
 31131 ;;  type            1   46[BANK0 ] unsigned char 
 31132 ;; Auto vars:     Size  Location     Type
 31133 ;;  io              1   49[BANK0 ] unsigned char 
 31134 ;; Return value:  Size  Location     Type
 31135 ;;                  1    wreg      enum E12767
 31136 ;; Registers used:
 31137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31138 ;; Tracked objects:
 31139 ;;		On entry : 0/0
 31140 ;;		On exit  : 0/0
 31141 ;;		Unchanged: 0/0
 31142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31143 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31146 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31147 ;;Total ram usage:        5 bytes
 31148 ;; Hardware stack levels used: 1
 31149 ;; Hardware stack levels required when called: 12
 31150 ;; This function calls:
 31151 ;;		Nothing
 31152 ;; This function is called by:
 31153 ;;		_processActions
 31154 ;; This function uses a non-reentrant model
 31155 ;;
 31156                           
 31157                           	psect	text116
 31158   00A7C8                     __ptext116:
 31159                           	callstack 0
 31160   00A7C8                     _needsStarting:
 31161                           	callstack 16
 31162                           
 31163                           ; BSR set to: 0
 31164                           ;incstack = 0
 31165                           ;needsStarting@io stored from wreg
 31166   00A7C8  0100               	movlb	0	; () banked
 31167   00A7CA  6F91               	movwf	needsStarting@io& (0+255),b
 31168                           
 31169                           ;../outputs.c: 183:     switch(type) {
 31170   00A7CC  D02B               	goto	l21508
 31171   00A7CE                     l21488:
 31172                           
 31173                           ; BSR set to: 0
 31174                           ;../outputs.c: 186:             return FALSE;
 31175   00A7CE  0E00               	movlw	0
 31176   00A7D0  0012               	return	
 31177   00A7D2                     l21492:
 31178                           
 31179                           ; BSR set to: 0
 31180                           ;../outputs.c: 195:             return (pulseDelays[io] == 0);
 31181   00A7D2  0EA4               	movlw	low _pulseDelays
 31182   00A7D4  2591               	addwf	needsStarting@io& (0+255),w,b
 31183   00A7D6  6ED9               	movwf	fsr2l,c
 31184   00A7D8  6ADA               	clrf	fsr2h,c
 31185   00A7DA  0E02               	movlw	high _pulseDelays
 31186   00A7DC  22DA               	addwfc	fsr2h,f,c
 31187   00A7DE  50DF               	movf	indf2,w,c
 31188   00A7E0  A4D8               	btfss	status,2,c
 31189   00A7E2  D002               	goto	u22010
 31190   00A7E4  0E01               	movlw	1
 31191   00A7E6  0012               	return	
 31192   00A7E8                     u22010:
 31193   00A7E8  0E00               	movlw	0
 31194   00A7EA  0012               	return	
 31195   00A7EC                     l21496:
 31196                           
 31197                           ; BSR set to: 0
 31198                           ;../outputs.c: 205:             if (targetPos[io] == currentPos[io]) {
 31199   00A7EC  5191               	movf	needsStarting@io& (0+255),w,b
 31200   00A7EE  0FA9               	addlw	low _currentPos
 31201   00A7F0  6ED9               	movwf	fsr2l,c
 31202   00A7F2  6ADA               	clrf	fsr2h,c
 31203   00A7F4  0E20               	movlw	low _targetPos
 31204   00A7F6  2591               	addwf	needsStarting@io& (0+255),w,b
 31205   00A7F8  6EE1               	movwf	fsr1l,c
 31206   00A7FA  6AE2               	clrf	fsr1h,c
 31207   00A7FC  0E01               	movlw	high _targetPos
 31208   00A7FE  22E2               	addwfc	fsr1h,f,c
 31209   00A800  50DE               	movf	postinc2,w,c
 31210   00A802  18E6               	xorwf	postinc1,w,c
 31211   00A804  B4D8               	btfsc	status,2,c
 31212   00A806  D7E3               	goto	l21488
 31213                           
 31214                           ; BSR set to: 0
 31215                           ;../outputs.c: 209:             return (servoState[io] != SS_MOVING);
 31216   00A808  0E10               	movlw	low _servoState
 31217   00A80A  2591               	addwf	needsStarting@io& (0+255),w,b
 31218   00A80C  6ED9               	movwf	fsr2l,c
 31219   00A80E  6ADA               	clrf	fsr2h,c
 31220   00A810  0E01               	movlw	high _servoState
 31221   00A812  22DA               	addwfc	fsr2h,f,c
 31222   00A814  0E02               	movlw	2
 31223   00A816  18DE               	xorwf	postinc2,w,c
 31224   00A818  B4D8               	btfsc	status,2,c
 31225   00A81A  D002               	goto	u22040
 31226   00A81C  0E01               	movlw	1
 31227   00A81E  0012               	return	
 31228   00A820                     u22040:
 31229   00A820  0E00               	movlw	0
 31230   00A822  0012               	return	
 31231   00A824                     l21508:
 31232   00A824  0100               	movlb	0	; () banked
 31233   00A826  518E               	movf	needsStarting@type& (0+255),w,b
 31234                           
 31235                           ; Switch size 1, requested type "simple"
 31236                           ; Number of cases is 5, Range of values is 0 to 4
 31237                           ; switch strategies available:
 31238                           ; Name         Instructions Cycles
 31239                           ; simple_byte           16     9 (average)
 31240                           ;	Chosen strategy is simple_byte
 31241   00A828  0A00               	xorlw	0	; case 0
 31242   00A82A  B4D8               	btfsc	status,2,c
 31243   00A82C  D7D0               	goto	l21488
 31244   00A82E  0A01               	xorlw	1	; case 1
 31245   00A830  B4D8               	btfsc	status,2,c
 31246   00A832  D7CF               	goto	l21492
 31247   00A834  0A03               	xorlw	3	; case 2
 31248   00A836  B4D8               	btfsc	status,2,c
 31249   00A838  D7D9               	goto	l21496
 31250   00A83A  0A01               	xorlw	1	; case 3
 31251   00A83C  B4D8               	btfsc	status,2,c
 31252   00A83E  D7D6               	goto	l21496
 31253   00A840  0A07               	xorlw	7	; case 4
 31254   00A842  B4D8               	btfsc	status,2,c
 31255   00A844  D7D3               	goto	l21496
 31256                           
 31257                           ; BSR set to: 0
 31258                           ;../outputs.c: 212:     return TRUE;
 31259   00A846  0E01               	movlw	1
 31260                           
 31261                           ; BSR set to: 0
 31262   00A848  0012               	return		;funcret
 31263   00A84A                     __end_of_needsStarting:
 31264                           	callstack 0
 31265                           
 31266 ;; *************** function _getTwoAction *****************
 31267 ;; Defined at:
 31268 ;;		line 414 in file "../event_consumerDualActionQueue.c"
 31269 ;; Parameters:    Size  Location     Type
 31270 ;;		None
 31271 ;; Auto vars:     Size  Location     Type
 31272 ;;		None
 31273 ;; Return value:  Size  Location     Type
 31274 ;;                  1    wreg      unsigned char 
 31275 ;; Registers used:
 31276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31277 ;; Tracked objects:
 31278 ;;		On entry : 0/0
 31279 ;;		On exit  : 0/0
 31280 ;;		Unchanged: 0/0
 31281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31286 ;;Total ram usage:        0 bytes
 31287 ;; Hardware stack levels used: 1
 31288 ;; Hardware stack levels required when called: 13
 31289 ;; This function calls:
 31290 ;;		_peekTwoActionQueue
 31291 ;; This function is called by:
 31292 ;;		_processActions
 31293 ;; This function uses a non-reentrant model
 31294 ;;
 31295                           
 31296                           	psect	text117
 31297   00C61C                     __ptext117:
 31298                           	callstack 0
 31299   00C61C                     _getTwoAction:
 31300                           	callstack 15
 31301                           
 31302                           ;../event_consumerDualActionQueue.c: 415:  return peekTwoActionQueue(0);
 31303                           
 31304                           ; BSR set to: 0
 31305                           ;incstack = 0
 31306   00C61C  0E00               	movlw	0
 31307   00C61E  ECD7  F052         	call	_peekTwoActionQueue
 31308   00C622  0012               	return		;funcret
 31309   00C624                     __end_of_getTwoAction:
 31310                           	callstack 0
 31311                           
 31312 ;; *************** function _peekTwoActionQueue *****************
 31313 ;; Defined at:
 31314 ;;		line 453 in file "../event_consumerDualActionQueue.c"
 31315 ;; Parameters:    Size  Location     Type
 31316 ;;  index           1    wreg     unsigned char 
 31317 ;; Auto vars:     Size  Location     Type
 31318 ;;  index           1   46[BANK0 ] unsigned char 
 31319 ;;  qty             1   45[BANK0 ] unsigned char 
 31320 ;; Return value:  Size  Location     Type
 31321 ;;                  1    wreg      unsigned char 
 31322 ;; Registers used:
 31323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31324 ;; Tracked objects:
 31325 ;;		On entry : 0/0
 31326 ;;		On exit  : 0/0
 31327 ;;		Unchanged: 0/0
 31328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31332 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31333 ;;Total ram usage:        2 bytes
 31334 ;; Hardware stack levels used: 1
 31335 ;; Hardware stack levels required when called: 12
 31336 ;; This function calls:
 31337 ;;		Nothing
 31338 ;; This function is called by:
 31339 ;;		_getTwoAction
 31340 ;;		_processActions
 31341 ;; This function uses a non-reentrant model
 31342 ;;
 31343                           
 31344                           	psect	text118
 31345   00A5AE                     __ptext118:
 31346                           	callstack 0
 31347   00A5AE                     _peekTwoActionQueue:
 31348                           	callstack 16
 31349                           
 31350                           ;incstack = 0
 31351                           ;peekTwoActionQueue@index stored from wreg
 31352   00A5AE  0100               	movlb	0	; () banked
 31353   00A5B0  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 31354                           
 31355                           ;../event_consumerDualActionQueue.c: 454:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 455:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31356   00A5B2  0100               	movlb	0	; () banked
 31357   00A5B4  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31358   00A5B6  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 31359   00A5B8  0B07               	andlw	7
 31360   00A5BA  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31361                           
 31362                           ;../event_consumerDualActionQueue.c: 456:     if (index < qty) {
 31363   00A5BC  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31364   00A5BE  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31365   00A5C0  B0D8               	btfsc	status,0,c
 31366   00A5C2  D019               	goto	l20582
 31367                           
 31368                           ; BSR set to: 0
 31369                           ;../event_consumerDualActionQueue.c: 457:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 31370   00A5C4  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31371   00A5C6  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 31372   00A5C8  A4D8               	btfss	status,2,c
 31373   00A5CA  D002               	goto	l20570
 31374   00A5CC                     u20920:
 31375                           
 31376                           ; BSR set to: 0
 31377   00A5CC  0E00               	movlw	0
 31378   00A5CE  0012               	return	
 31379   00A5D0                     l20570:
 31380                           
 31381                           ; BSR set to: 0
 31382                           ;../event_consumerDualActionQueue.c: 458:         index += expeditedReadIndex;
 31383   00A5D0  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31384   00A5D2  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31385                           
 31386                           ;../event_consumerDualActionQueue.c: 459:         if (index >= 8) {
 31387   00A5D4  0E07               	movlw	7
 31388   00A5D6  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31389   00A5D8  D002               	goto	l546
 31390                           
 31391                           ; BSR set to: 0
 31392                           ;../event_consumerDualActionQueue.c: 460:             index -= 8;
 31393   00A5DA  0E08               	movlw	8
 31394   00A5DC  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31395   00A5DE                     l546:
 31396                           
 31397                           ; BSR set to: 0
 31398                           ;../event_consumerDualActionQueue.c: 462:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 31399   00A5DE  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31400   00A5E0  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31401   00A5E2  B4D8               	btfsc	status,2,c
 31402   00A5E4  D7F3               	goto	u20920
 31403                           
 31404                           ; BSR set to: 0
 31405                           ;../event_consumerDualActionQueue.c: 463:         return expeditedQueueBuf[index];
 31406   00A5E6  0EC4               	movlw	low _expeditedQueueBuf
 31407   00A5E8  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31408   00A5EA  6ED9               	movwf	fsr2l,c
 31409   00A5EC  6ADA               	clrf	fsr2h,c
 31410   00A5EE  0E02               	movlw	high _expeditedQueueBuf
 31411   00A5F0  22DA               	addwfc	fsr2h,f,c
 31412   00A5F2  50DF               	movf	indf2,w,c
 31413   00A5F4  0012               	return	
 31414   00A5F6                     l20582:
 31415                           
 31416                           ; BSR set to: 0
 31417                           ;../event_consumerDualActionQueue.c: 465:     index -= qty;
 31418   00A5F6  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31419   00A5F8  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31420                           
 31421                           ;../event_consumerDualActionQueue.c: 466:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31422   00A5FA  51CD               	movf	_normalReadIndex& (0+255),w,b
 31423   00A5FC  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 31424   00A5FE  0B3F               	andlw	63
 31425   00A600  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31426                           
 31427                           ;../event_consumerDualActionQueue.c: 467:     if (index < qty) {
 31428   00A602  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31429   00A604  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31430   00A606  B0D8               	btfsc	status,0,c
 31431   00A608  D7E1               	goto	u20920
 31432                           
 31433                           ; BSR set to: 0
 31434                           ;../event_consumerDualActionQueue.c: 468:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 31435   00A60A  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31436   00A60C  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 31437   00A60E  B4D8               	btfsc	status,2,c
 31438   00A610  D7DD               	goto	u20920
 31439                           
 31440                           ; BSR set to: 0
 31441                           ;../event_consumerDualActionQueue.c: 469:         index += normalReadIndex;
 31442   00A612  51CD               	movf	_normalReadIndex& (0+255),w,b
 31443   00A614  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31444                           
 31445                           ;../event_consumerDualActionQueue.c: 470:         if (index >= 64) {
 31446   00A616  0E3F               	movlw	63
 31447   00A618  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31448   00A61A  D002               	goto	l550
 31449                           
 31450                           ; BSR set to: 0
 31451                           ;../event_consumerDualActionQueue.c: 471:             index -= 64;
 31452   00A61C  0E40               	movlw	64
 31453   00A61E  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31454   00A620                     l550:
 31455                           
 31456                           ; BSR set to: 0
 31457                           ;../event_consumerDualActionQueue.c: 473:         if (index == normalWriteIndex) return 
      +                          0;
 31458   00A620  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31459   00A622  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31460   00A624  B4D8               	btfsc	status,2,c
 31461   00A626  D7D2               	goto	u20920
 31462                           
 31463                           ; BSR set to: 0
 31464                           ;../event_consumerDualActionQueue.c: 474:         return normalQueueBuf[index];
 31465   00A628  0E80               	movlw	low _normalQueueBuf
 31466   00A62A  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31467   00A62C  6ED9               	movwf	fsr2l,c
 31468   00A62E  6ADA               	clrf	fsr2h,c
 31469   00A630  0E04               	movlw	high _normalQueueBuf
 31470   00A632  22DA               	addwfc	fsr2h,f,c
 31471   00A634  50DF               	movf	indf2,w,c
 31472                           
 31473                           ; BSR set to: 0
 31474   00A636  0012               	return		;funcret
 31475   00A638                     __end_of_peekTwoActionQueue:
 31476                           	callstack 0
 31477                           
 31478 ;; *************** function _finaliseOutput *****************
 31479 ;; Defined at:
 31480 ;;		line 253 in file "../outputs.c"
 31481 ;; Parameters:    Size  Location     Type
 31482 ;;  io              1    wreg     unsigned char 
 31483 ;;  type            1   45[BANK0 ] unsigned char 
 31484 ;; Auto vars:     Size  Location     Type
 31485 ;;  io              1    0[COMRAM] unsigned char 
 31486 ;; Return value:  Size  Location     Type
 31487 ;;                  1    wreg      void 
 31488 ;; Registers used:
 31489 ;;		wreg, status,2, status,0
 31490 ;; Tracked objects:
 31491 ;;		On entry : 0/0
 31492 ;;		On exit  : 0/0
 31493 ;;		Unchanged: 0/0
 31494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31495 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31499 ;;Total ram usage:        1 bytes
 31500 ;; Hardware stack levels used: 1
 31501 ;; Hardware stack levels required when called: 12
 31502 ;; This function calls:
 31503 ;;		Nothing
 31504 ;; This function is called by:
 31505 ;;		_processActions
 31506 ;; This function uses a non-reentrant model
 31507 ;;
 31508                           
 31509                           	psect	text119
 31510   00C624                     __ptext119:
 31511                           	callstack 0
 31512   00C624                     _finaliseOutput:
 31513                           	callstack 16
 31514                           
 31515                           ;../outputs.c: 254:     switch(type) {
 31516                           
 31517                           ; BSR set to: 0
 31518                           ;incstack = 0
 31519   00C624  0100               	movlb	0	; () banked
 31520   00C626  518D               	movf	finaliseOutput@type& (0+255),w,b
 31521                           
 31522                           ; Switch size 1, requested type "simple"
 31523                           ; Number of cases is 1, Range of values is 1 to 1
 31524                           ; switch strategies available:
 31525                           ; Name         Instructions Cycles
 31526                           ; simple_byte            4     3 (average)
 31527                           ;	Chosen strategy is simple_byte
 31528   00C628  0A01               	xorlw	1	; case 1
 31529   00C62A  0012               	return	
 31530   00C62C                     __end_of_finaliseOutput:
 31531                           	callstack 0
 31532                           
 31533 ;; *************** function _doWait *****************
 31534 ;; Defined at:
 31535 ;;		line 337 in file "../universalEvents.c"
 31536 ;; Parameters:    Size  Location     Type
 31537 ;;  duration        2   61[BANK0 ] unsigned short 
 31538 ;; Auto vars:     Size  Location     Type
 31539 ;;		None
 31540 ;; Return value:  Size  Location     Type
 31541 ;;                  1    wreg      void 
 31542 ;; Registers used:
 31543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31544 ;; Tracked objects:
 31545 ;;		On entry : 0/0
 31546 ;;		On exit  : 0/0
 31547 ;;		Unchanged: 0/0
 31548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31551 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31552 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31553 ;;Total ram usage:        6 bytes
 31554 ;; Hardware stack levels used: 1
 31555 ;; Hardware stack levels required when called: 14
 31556 ;; This function calls:
 31557 ;;		___lmul
 31558 ;;		_doneTwoAction
 31559 ;;		_tickGet
 31560 ;; This function is called by:
 31561 ;;		_processActions
 31562 ;; This function uses a non-reentrant model
 31563 ;;
 31564                           
 31565                           	psect	text120
 31566   00A522                     __ptext120:
 31567                           	callstack 0
 31568   00A522                     _doWait:
 31569                           	callstack 14
 31570                           
 31571                           ;../universalEvents.c: 339:     if (startWait.val == 0) {
 31572                           
 31573                           ; BSR set to: 0
 31574                           ;incstack = 0
 31575   00A522  5037               	movf	_startWait^0,w,c
 31576   00A524  1038               	iorwf	(_startWait+1)^0,w,c
 31577   00A526  1039               	iorwf	(_startWait+2)^0,w,c
 31578   00A528  103A               	iorwf	(_startWait+3)^0,w,c
 31579   00A52A  A4D8               	btfss	status,2,c
 31580   00A52C  D00B               	goto	l21460
 31581                           
 31582                           ;../universalEvents.c: 340:         startWait.val = tickGet();
 31583   00A52E  ECE4  F05A         	call	_tickGet	;wreg free
 31584   00A532  C08D  F037         	movff	?_tickGet,_startWait
 31585   00A536  C08E  F038         	movff	?_tickGet+1,_startWait+1
 31586   00A53A  C08F  F039         	movff	?_tickGet+2,_startWait+2
 31587   00A53E  C090  F03A         	movff	?_tickGet+3,_startWait+3
 31588   00A542  0012               	return	
 31589   00A544                     l21460:
 31590                           
 31591                           ;../universalEvents.c: 344:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 31592   00A544  ECE4  F05A         	call	_tickGet	;wreg free
 31593   00A548  5037               	movf	_startWait^0,w,c
 31594   00A54A  0100               	movlb	0	; () banked
 31595   00A54C  5D8D               	subwf	?_tickGet& (0+255),w,b
 31596   00A54E  6F9F               	movwf	??_doWait& (0+255),b
 31597   00A550  5038               	movf	(_startWait+1)^0,w,c
 31598   00A552  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 31599   00A554  6FA0               	movwf	(??_doWait+1)& (0+255),b
 31600   00A556  5039               	movf	(_startWait+2)^0,w,c
 31601   00A558  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 31602   00A55A  6FA1               	movwf	(??_doWait+2)& (0+255),b
 31603   00A55C  503A               	movf	(_startWait+3)^0,w,c
 31604   00A55E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 31605   00A560  6FA2               	movwf	(??_doWait+3)& (0+255),b
 31606   00A562  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 31607   00A566  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 31608   00A56A  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 31609   00A56C  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 31610   00A56E  0E6A               	movlw	106
 31611   00A570  6F95               	movwf	___lmul@multiplicand& (0+255),b
 31612   00A572  0E18               	movlw	24
 31613   00A574  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31614   00A576  0E00               	movlw	0
 31615   00A578  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31616   00A57A  0E00               	movlw	0
 31617   00A57C  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31618   00A57E  EC10  F05B         	call	___lmul	;wreg free
 31619   00A582  0100               	movlb	0	; () banked
 31620   00A584  519F               	movf	??_doWait& (0+255),w,b
 31621   00A586  5D91               	subwf	?___lmul& (0+255),w,b
 31622   00A588  51A0               	movf	(??_doWait+1)& (0+255),w,b
 31623   00A58A  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 31624   00A58C  51A1               	movf	(??_doWait+2)& (0+255),w,b
 31625   00A58E  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 31626   00A590  51A2               	movf	(??_doWait+3)& (0+255),w,b
 31627   00A592  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 31628   00A594  B0D8               	btfsc	status,0,c
 31629   00A596  0012               	return	
 31630                           
 31631                           ; BSR set to: 0
 31632                           ;../universalEvents.c: 345:             doneTwoAction();
 31633   00A598  EC1F  F063         	call	_doneTwoAction	;wreg free
 31634                           
 31635                           ;../universalEvents.c: 346:             startWait.val = 0;
 31636   00A59C  0E00               	movlw	0
 31637   00A59E  6E37               	movwf	_startWait^0,c
 31638   00A5A0  0E00               	movlw	0
 31639   00A5A2  6E38               	movwf	(_startWait+1)^0,c
 31640   00A5A4  0E00               	movlw	0
 31641   00A5A6  6E39               	movwf	(_startWait+2)^0,c
 31642   00A5A8  0E00               	movlw	0
 31643   00A5AA  6E3A               	movwf	(_startWait+3)^0,c
 31644   00A5AC  0012               	return		;funcret
 31645   00A5AE                     __end_of_doWait:
 31646                           	callstack 0
 31647                           
 31648 ;; *************** function _doneTwoAction *****************
 31649 ;; Defined at:
 31650 ;;		line 444 in file "../event_consumerDualActionQueue.c"
 31651 ;; Parameters:    Size  Location     Type
 31652 ;;		None
 31653 ;; Auto vars:     Size  Location     Type
 31654 ;;		None
 31655 ;; Return value:  Size  Location     Type
 31656 ;;                  1    wreg      void 
 31657 ;; Registers used:
 31658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31659 ;; Tracked objects:
 31660 ;;		On entry : 0/0
 31661 ;;		On exit  : 0/0
 31662 ;;		Unchanged: 0/0
 31663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31668 ;;Total ram usage:        0 bytes
 31669 ;; Hardware stack levels used: 1
 31670 ;; Hardware stack levels required when called: 13
 31671 ;; This function calls:
 31672 ;;		_popTwoAction
 31673 ;; This function is called by:
 31674 ;;		_processActions
 31675 ;;		_doWait
 31676 ;; This function uses a non-reentrant model
 31677 ;;
 31678                           
 31679                           	psect	text121
 31680   00C63E                     __ptext121:
 31681                           	callstack 0
 31682   00C63E                     _doneTwoAction:
 31683                           	callstack 15
 31684                           
 31685                           ;../event_consumerDualActionQueue.c: 445:  popTwoAction();
 31686                           
 31687                           ;incstack = 0
 31688   00C63E  EC56  F060         	call	_popTwoAction	;wreg free
 31689   00C642  0012               	return		;funcret
 31690   00C644                     __end_of_doneTwoAction:
 31691                           	callstack 0
 31692                           
 31693 ;; *************** function _popTwoAction *****************
 31694 ;; Defined at:
 31695 ;;		line 423 in file "../event_consumerDualActionQueue.c"
 31696 ;; Parameters:    Size  Location     Type
 31697 ;;		None
 31698 ;; Auto vars:     Size  Location     Type
 31699 ;;  ret             1    0        unsigned char 
 31700 ;; Return value:  Size  Location     Type
 31701 ;;                  1    wreg      unsigned char 
 31702 ;; Registers used:
 31703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31704 ;; Tracked objects:
 31705 ;;		On entry : 0/0
 31706 ;;		On exit  : 0/0
 31707 ;;		Unchanged: 0/0
 31708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31713 ;;Total ram usage:        0 bytes
 31714 ;; Hardware stack levels used: 1
 31715 ;; Hardware stack levels required when called: 12
 31716 ;; This function calls:
 31717 ;;		Nothing
 31718 ;; This function is called by:
 31719 ;;		_doneTwoAction
 31720 ;; This function uses a non-reentrant model
 31721 ;;
 31722                           
 31723                           	psect	text122
 31724   00C0AC                     __ptext122:
 31725                           	callstack 0
 31726   00C0AC                     _popTwoAction:
 31727                           	callstack 15
 31728                           
 31729                           ;../event_consumerDualActionQueue.c: 424:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 426:  if (expeditedWriteIndex != expeditedReadIndex) {
 31730                           
 31731                           ;incstack = 0
 31732   00C0AC  0100               	movlb	0	; () banked
 31733   00C0AE  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31734   00C0B0  19CA               	xorwf	_expeditedWriteIndex& (0+255),w,b
 31735   00C0B2  B4D8               	btfsc	status,2,c
 31736   00C0B4  D007               	goto	l20022
 31737                           
 31738                           ; BSR set to: 0
 31739                           
 31740                           ; BSR set to: 0
 31741   00C0B6  2BCB               	incf	_expeditedReadIndex& (0+255),f,b
 31742                           
 31743                           ; BSR set to: 0
 31744                           ;../event_consumerDualActionQueue.c: 429:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 31745   00C0B8  0E07               	movlw	7
 31746   00C0BA  65CB               	cpfsgt	_expeditedReadIndex& (0+255),b
 31747   00C0BC  0012               	return	
 31748                           
 31749                           ; BSR set to: 0
 31750   00C0BE  0E00               	movlw	0
 31751   00C0C0  6FCB               	movwf	_expeditedReadIndex& (0+255),b
 31752   00C0C2  0012               	return	
 31753   00C0C4                     l20022:
 31754                           
 31755                           ; BSR set to: 0
 31756                           ;../event_consumerDualActionQueue.c: 433:  if (normalWriteIndex == normalReadIndex) {
 31757   00C0C4  51CD               	movf	_normalReadIndex& (0+255),w,b
 31758   00C0C6  19CC               	xorwf	_normalWriteIndex& (0+255),w,b
 31759   00C0C8  B4D8               	btfsc	status,2,c
 31760   00C0CA  0012               	return	
 31761                           
 31762                           ; BSR set to: 0
 31763                           
 31764                           ; BSR set to: 0
 31765   00C0CC  2BCD               	incf	_normalReadIndex& (0+255),f,b
 31766                           
 31767                           ; BSR set to: 0
 31768                           ;../event_consumerDualActionQueue.c: 437:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 31769   00C0CE  0E3F               	movlw	63
 31770   00C0D0  65CD               	cpfsgt	_normalReadIndex& (0+255),b
 31771   00C0D2  0012               	return	
 31772                           
 31773                           ; BSR set to: 0
 31774   00C0D4  0E00               	movlw	0
 31775   00C0D6  6FCD               	movwf	_normalReadIndex& (0+255),b
 31776                           
 31777                           ; BSR set to: 0
 31778   00C0D8  0012               	return		;funcret
 31779   00C0DA                     __end_of_popTwoAction:
 31780                           	callstack 0
 31781                           
 31782 ;; *************** function _doSOD *****************
 31783 ;; Defined at:
 31784 ;;		line 387 in file "../universalEvents.c"
 31785 ;; Parameters:    Size  Location     Type
 31786 ;;		None
 31787 ;; Auto vars:     Size  Location     Type
 31788 ;;		None
 31789 ;; Return value:  Size  Location     Type
 31790 ;;                  1    wreg      void 
 31791 ;; Registers used:
 31792 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31793 ;; Tracked objects:
 31794 ;;		On entry : 0/0
 31795 ;;		On exit  : 0/0
 31796 ;;		Unchanged: 0/0
 31797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31802 ;;Total ram usage:        0 bytes
 31803 ;; Hardware stack levels used: 1
 31804 ;; Hardware stack levels required when called: 13
 31805 ;; This function calls:
 31806 ;;		_findServiceIndex
 31807 ;;		_startTimedResponse
 31808 ;; This function is called by:
 31809 ;;		_processActions
 31810 ;; This function uses a non-reentrant model
 31811 ;;
 31812                           
 31813                           	psect	text123
 31814   00C512                     __ptext123:
 31815                           	callstack 0
 31816   00C512                     _doSOD:
 31817                           	callstack 15
 31818                           
 31819                           ;../universalEvents.c: 388:     startTimedResponse(1, findServiceIndex(SERVICE_ID_PRODUC
      +                          ER), sodTRCallback);
 31820                           
 31821                           ; BSR set to: 0
 31822                           ;incstack = 0
 31823   00C512  0E05               	movlw	5
 31824   00C514  ECBF  F056         	call	_findServiceIndex
 31825   00C518  0100               	movlb	0	; () banked
 31826   00C51A  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 31827   00C51C  0E78               	movlw	low _sodTRCallback
 31828   00C51E  6F92               	movwf	startTimedResponse@callback& (0+255),b
 31829   00C520  0E83               	movlw	high _sodTRCallback
 31830   00C522  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 31831   00C524  0E01               	movlw	1
 31832   00C526  EC14  F05E         	call	_startTimedResponse
 31833   00C52A  0012               	return		;funcret
 31834   00C52C                     __end_of_doSOD:
 31835                           	callstack 0
 31836                           
 31837 ;; *************** function _startTimedResponse *****************
 31838 ;; Defined at:
 31839 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 31840 ;; Parameters:    Size  Location     Type
 31841 ;;  type            1    wreg     unsigned char 
 31842 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 31843 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 31844 ;;		 -> reqevCallback(1), nerdCallback(1), nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), 
 31845 ;;		 -> mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), sodTRCallback(1), 
 31846 ;; Auto vars:     Size  Location     Type
 31847 ;;  type            1   52[BANK0 ] unsigned char 
 31848 ;; Return value:  Size  Location     Type
 31849 ;;                  1    wreg      void 
 31850 ;; Registers used:
 31851 ;;		wreg, status,2, status,0
 31852 ;; Tracked objects:
 31853 ;;		On entry : 0/0
 31854 ;;		On exit  : 0/0
 31855 ;;		Unchanged: 0/0
 31856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31857 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31860 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31861 ;;Total ram usage:        4 bytes
 31862 ;; Hardware stack levels used: 1
 31863 ;; Hardware stack levels required when called: 12
 31864 ;; This function calls:
 31865 ;;		Nothing
 31866 ;; This function is called by:
 31867 ;;		_doSOD
 31868 ;;		_mnsProcessMessage
 31869 ;;		_nvProcessMessage
 31870 ;;		_doNerd
 31871 ;;		_doReqev
 31872 ;; This function uses a non-reentrant model
 31873 ;;
 31874                           
 31875                           	psect	text124
 31876   00BC28                     __ptext124:
 31877                           	callstack 0
 31878   00BC28                     _startTimedResponse:
 31879                           	callstack 15
 31880                           
 31881                           ;incstack = 0
 31882                           ;startTimedResponse@type stored from wreg
 31883   00BC28  0100               	movlb	0	; () banked
 31884   00BC2A  6F94               	movwf	startTimedResponse@type& (0+255),b
 31885                           
 31886                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 31887   00BC2C  C094  F0C3         	movff	startTimedResponse@type,_timedResponseType
 31888                           
 31889                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 31890   00BC30  0100               	movlb	0	; () banked
 31891   00BC32  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31892   00BC34  A4D8               	btfss	status,2,c
 31893   00BC36  D004               	goto	l20652
 31894                           
 31895                           ; BSR set to: 0
 31896                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 31897   00BC38  0E01               	movlw	1
 31898   00BC3A  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31899                           
 31900                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 31901   00BC3C  0E00               	movlw	0
 31902   00BC3E  D00B               	goto	L13
 31903   00BC40                     l20652:
 31904                           
 31905                           ; BSR set to: 0
 31906                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 31907   00BC40  0E00               	movlw	0
 31908   00BC42  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31909                           
 31910                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 31911   00BC44  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31912   00BC46  B4D8               	btfsc	status,2,c
 31913   00BC48  D003               	goto	u21090
 31914                           
 31915                           ; BSR set to: 0
 31916   00BC4A  0E09               	movlw	9
 31917   00BC4C  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 31918   00BC4E  D002               	goto	l20656
 31919   00BC50                     u21090:
 31920                           
 31921                           ; BSR set to: 0
 31922                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 31923   00BC50  69C3               	setf	_timedResponseType& (0+255),b
 31924                           
 31925                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 31926   00BC52  0012               	return	
 31927   00BC54                     l20656:
 31928                           
 31929                           ; BSR set to: 0
 31930                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 31931   00BC54  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 31932   00BC56                     L13:
 31933   00BC56  6FC4               	movwf	_timedResponseServiceIndex& (0+255),b
 31934                           
 31935                           ; BSR set to: 0
 31936                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 31937   00BC58  0E00               	movlw	0
 31938   00BC5A  6E43               	movwf	_timedResponseStep^0,c
 31939                           
 31940                           ; BSR set to: 0
 31941                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 31942   00BC5C  C092  F03F         	movff	startTimedResponse@callback,_timedResponseCallback
 31943   00BC60  C093  F040         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 31944                           
 31945                           ; BSR set to: 0
 31946   00BC64  0012               	return		;funcret
 31947   00BC66                     __end_of_startTimedResponse:
 31948                           	callstack 0
 31949                           
 31950 ;; *************** function _findServiceIndex *****************
 31951 ;; Defined at:
 31952 ;;		line 823 in file "../../VLCBlib_PIC/vlcb.c"
 31953 ;; Parameters:    Size  Location     Type
 31954 ;;  serviceType     1    wreg     unsigned char 
 31955 ;; Auto vars:     Size  Location     Type
 31956 ;;  serviceType     1   47[BANK0 ] unsigned char 
 31957 ;;  i               1   48[BANK0 ] unsigned char 
 31958 ;; Return value:  Size  Location     Type
 31959 ;;                  1    wreg      unsigned char 
 31960 ;; Registers used:
 31961 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 31962 ;; Tracked objects:
 31963 ;;		On entry : 0/0
 31964 ;;		On exit  : 0/0
 31965 ;;		Unchanged: 0/0
 31966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31968 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31969 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31970 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31971 ;;Total ram usage:        4 bytes
 31972 ;; Hardware stack levels used: 1
 31973 ;; Hardware stack levels required when called: 12
 31974 ;; This function calls:
 31975 ;;		Nothing
 31976 ;; This function is called by:
 31977 ;;		_doSOD
 31978 ;;		_mnsProcessMessage
 31979 ;;		_nvProcessMessage
 31980 ;;		_doNerd
 31981 ;;		_doReqev
 31982 ;; This function uses a non-reentrant model
 31983 ;;
 31984                           
 31985                           	psect	text125
 31986   00AD7E                     __ptext125:
 31987                           	callstack 0
 31988   00AD7E                     _findServiceIndex:
 31989                           	callstack 15
 31990                           
 31991                           ; BSR set to: 0
 31992                           ;incstack = 0
 31993                           ;findServiceIndex@serviceType stored from wreg
 31994   00AD7E  0100               	movlb	0	; () banked
 31995   00AD80  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 31996                           
 31997                           ;../../VLCBlib_PIC/vlcb.c: 824:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 825:     for (i
      +                          =0; i<9; i++) {
 31998   00AD82  0E00               	movlw	0
 31999   00AD84  0100               	movlb	0	; () banked
 32000   00AD86  6F90               	movwf	findServiceIndex@i& (0+255),b
 32001   00AD88                     l20630:
 32002                           
 32003                           ; BSR set to: 0
 32004                           ;../../VLCBlib_PIC/vlcb.c: 826:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32005   00AD88  5190               	movf	findServiceIndex@i& (0+255),w,b
 32006   00AD8A  0D02               	mullw	2
 32007   00AD8C  0E69               	movlw	low _services
 32008   00AD8E  24F3               	addwf	243,w,c
 32009   00AD90  6EF6               	movwf	tblptrl,c
 32010   00AD92  0EEE               	movlw	high _services
 32011   00AD94  20F4               	addwfc	244,w,c
 32012   00AD96  6EF7               	movwf	tblptrh,c
 32013   00AD98                     	if	1	;There are 3 active tblptr bytes
 32014   00AD98  6AF8               	clrf	tblptru,c
 32015   00AD9A  0E00               	movlw	low (__mediumconst shr (0+16))
 32016   00AD9C  22F8               	addwfc	tblptru,f,c
 32017   00AD9E                     	endif
 32018   00AD9E  0009               	tblrd		*+
 32019   00ADA0  50F5               	movf	tablat,w,c
 32020   00ADA2  0009               	tblrd		*+
 32021   00ADA4  10F5               	iorwf	tablat,w,c
 32022   00ADA6  B4D8               	btfsc	status,2,c
 32023   00ADA8  D01D               	goto	l20638
 32024                           
 32025                           ; BSR set to: 0
 32026   00ADAA  5190               	movf	findServiceIndex@i& (0+255),w,b
 32027   00ADAC  0D02               	mullw	2
 32028   00ADAE  0E69               	movlw	low _services
 32029   00ADB0  24F3               	addwf	243,w,c
 32030   00ADB2  6EF6               	movwf	tblptrl,c
 32031   00ADB4  0EEE               	movlw	high _services
 32032   00ADB6  20F4               	addwfc	244,w,c
 32033   00ADB8  6EF7               	movwf	tblptrh,c
 32034   00ADBA                     	if	1	;There are 3 active tblptr bytes
 32035   00ADBA  6AF8               	clrf	tblptru,c
 32036   00ADBC  0E00               	movlw	low (__mediumconst shr (0+16))
 32037   00ADBE  22F8               	addwfc	tblptru,f,c
 32038   00ADC0                     	endif
 32039   00ADC0  0009               	tblrd		*+
 32040   00ADC2  CFF5 F08D          	movff	tablat,??_findServiceIndex
 32041   00ADC6  0009               	tblrd		*+
 32042   00ADC8  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 32043   00ADCC  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 32044   00ADD0  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 32045   00ADD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32046   00ADD4  6AF8               	clrf	tblptru,c
 32047   00ADD6                     	endif
 32048   00ADD6                     	if	0	;tblptru may be non-zero
 32049   00ADD6                     	endif
 32050   00ADD6  0008               	tblrd		*
 32051   00ADD8  50F5               	movf	tablat,w,c
 32052   00ADDA  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 32053   00ADDC  A4D8               	btfss	status,2,c
 32054   00ADDE  D002               	goto	l20638
 32055                           
 32056                           ; BSR set to: 0
 32057                           ;../../VLCBlib_PIC/vlcb.c: 827:             return i;
 32058   00ADE0  5190               	movf	findServiceIndex@i& (0+255),w,b
 32059   00ADE2  0012               	return	
 32060   00ADE4                     l20638:
 32061                           
 32062                           ; BSR set to: 0
 32063                           ;../../VLCBlib_PIC/vlcb.c: 829:     }
 32064   00ADE4  2B90               	incf	findServiceIndex@i& (0+255),f,b
 32065                           
 32066                           ; BSR set to: 0
 32067   00ADE6  0E08               	movlw	8
 32068   00ADE8  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 32069   00ADEA  D7CE               	goto	l20630
 32070                           
 32071                           ; BSR set to: 0
 32072                           ;../../VLCBlib_PIC/vlcb.c: 830:     return 0xFF;
 32073   00ADEC  0EFF               	movlw	255
 32074                           
 32075                           ; BSR set to: 0
 32076   00ADEE  0012               	return		;funcret
 32077   00ADF0                     __end_of_findServiceIndex:
 32078                           	callstack 0
 32079                           
 32080 ;; *************** function _deleteTwoActionQueue *****************
 32081 ;; Defined at:
 32082 ;;		line 483 in file "../event_consumerDualActionQueue.c"
 32083 ;; Parameters:    Size  Location     Type
 32084 ;;  index           1    wreg     unsigned char 
 32085 ;; Auto vars:     Size  Location     Type
 32086 ;;  index           1   46[BANK0 ] unsigned char 
 32087 ;;  qty             1   45[BANK0 ] unsigned char 
 32088 ;; Return value:  Size  Location     Type
 32089 ;;                  1    wreg      void 
 32090 ;; Registers used:
 32091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32092 ;; Tracked objects:
 32093 ;;		On entry : 0/0
 32094 ;;		On exit  : 0/0
 32095 ;;		Unchanged: 0/0
 32096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32100 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32101 ;;Total ram usage:        2 bytes
 32102 ;; Hardware stack levels used: 1
 32103 ;; Hardware stack levels required when called: 12
 32104 ;; This function calls:
 32105 ;;		Nothing
 32106 ;; This function is called by:
 32107 ;;		_processActions
 32108 ;; This function uses a non-reentrant model
 32109 ;;
 32110                           
 32111                           	psect	text126
 32112   00A8C8                     __ptext126:
 32113                           	callstack 0
 32114   00A8C8                     _deleteTwoActionQueue:
 32115                           	callstack 16
 32116                           
 32117                           ; BSR set to: 0
 32118                           ;incstack = 0
 32119                           ;deleteTwoActionQueue@index stored from wreg
 32120   00A8C8  0100               	movlb	0	; () banked
 32121   00A8CA  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 32122                           
 32123                           ;../event_consumerDualActionQueue.c: 484:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 485:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 32124   00A8CC  0100               	movlb	0	; () banked
 32125   00A8CE  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32126   00A8D0  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 32127   00A8D2  0B07               	andlw	7
 32128   00A8D4  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32129                           
 32130                           ;../event_consumerDualActionQueue.c: 486:     if (index < qty) {
 32131   00A8D6  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32132   00A8D8  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32133   00A8DA  B0D8               	btfsc	status,0,c
 32134   00A8DC  D013               	goto	l21434
 32135                           
 32136                           ; BSR set to: 0
 32137                           ;../event_consumerDualActionQueue.c: 487:         index += expeditedReadIndex;
 32138   00A8DE  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32139   00A8E0  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32140                           
 32141                           ;../event_consumerDualActionQueue.c: 488:         if (index >= 8) {
 32142   00A8E2  0E07               	movlw	7
 32143   00A8E4  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32144   00A8E6  D002               	goto	l555
 32145                           
 32146                           ; BSR set to: 0
 32147                           ;../event_consumerDualActionQueue.c: 489:             index -= 8;
 32148   00A8E8  0E08               	movlw	8
 32149   00A8EA  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32150   00A8EC                     l555:
 32151                           
 32152                           ; BSR set to: 0
 32153                           ;../event_consumerDualActionQueue.c: 491:         if (index == expeditedWriteIndex) retu
      +                          rn;
 32154   00A8EC  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 32155   00A8EE  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32156   00A8F0  B4D8               	btfsc	status,2,c
 32157   00A8F2  0012               	return	
 32158                           
 32159                           ; BSR set to: 0
 32160                           ;../event_consumerDualActionQueue.c: 492:         expeditedQueueBuf[index] = 0;
 32161   00A8F4  0EC4               	movlw	low _expeditedQueueBuf
 32162   00A8F6  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32163   00A8F8  6ED9               	movwf	fsr2l,c
 32164   00A8FA  6ADA               	clrf	fsr2h,c
 32165   00A8FC  0E02               	movlw	high _expeditedQueueBuf
 32166   00A8FE  22DA               	addwfc	fsr2h,f,c
 32167   00A900  6ADF               	clrf	indf2,c
 32168   00A902  0012               	return	
 32169   00A904                     l21434:
 32170                           
 32171                           ; BSR set to: 0
 32172                           ;../event_consumerDualActionQueue.c: 495:     index -= qty;
 32173   00A904  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32174   00A906  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32175                           
 32176                           ;../event_consumerDualActionQueue.c: 496:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 32177   00A908  51CD               	movf	_normalReadIndex& (0+255),w,b
 32178   00A90A  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 32179   00A90C  0B3F               	andlw	63
 32180   00A90E  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32181                           
 32182                           ;../event_consumerDualActionQueue.c: 497:     if (index < qty) {
 32183   00A910  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32184   00A912  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32185   00A914  B0D8               	btfsc	status,0,c
 32186   00A916  0012               	return	
 32187                           
 32188                           ; BSR set to: 0
 32189                           ;../event_consumerDualActionQueue.c: 498:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 32190   00A918  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32191   00A91A  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 32192   00A91C  B4D8               	btfsc	status,2,c
 32193   00A91E  0012               	return	
 32194                           
 32195                           ; BSR set to: 0
 32196                           ;../event_consumerDualActionQueue.c: 499:         index += normalReadIndex;
 32197   00A920  51CD               	movf	_normalReadIndex& (0+255),w,b
 32198   00A922  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32199                           
 32200                           ;../event_consumerDualActionQueue.c: 500:         if (index >= 64) {
 32201   00A924  0E3F               	movlw	63
 32202   00A926  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32203   00A928  D002               	goto	l560
 32204                           
 32205                           ; BSR set to: 0
 32206                           ;../event_consumerDualActionQueue.c: 501:             index -= 64;
 32207   00A92A  0E40               	movlw	64
 32208   00A92C  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32209   00A92E                     l560:
 32210                           
 32211                           ; BSR set to: 0
 32212                           ;../event_consumerDualActionQueue.c: 503:         if (index == normalWriteIndex) return;
 32213   00A92E  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32214   00A930  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32215   00A932  B4D8               	btfsc	status,2,c
 32216   00A934  0012               	return	
 32217                           
 32218                           ; BSR set to: 0
 32219                           ;../event_consumerDualActionQueue.c: 504:         normalQueueBuf[index] = 0;
 32220   00A936  0E80               	movlw	low _normalQueueBuf
 32221   00A938  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32222   00A93A  6ED9               	movwf	fsr2l,c
 32223   00A93C  6ADA               	clrf	fsr2h,c
 32224   00A93E  0E04               	movlw	high _normalQueueBuf
 32225   00A940  22DA               	addwfc	fsr2h,f,c
 32226   00A942  6ADF               	clrf	indf2,c
 32227                           
 32228                           ; BSR set to: 0
 32229   00A944  0012               	return		;funcret
 32230   00A946                     __end_of_deleteTwoActionQueue:
 32231                           	callstack 0
 32232                           
 32233 ;; *************** function _completed *****************
 32234 ;; Defined at:
 32235 ;;		line 219 in file "../outputs.c"
 32236 ;; Parameters:    Size  Location     Type
 32237 ;;  io              1    wreg     unsigned char 
 32238 ;;  action          1   45[BANK0 ] unsigned char 
 32239 ;;  type            1   46[BANK0 ] unsigned char 
 32240 ;; Auto vars:     Size  Location     Type
 32241 ;;  io              1   50[BANK0 ] unsigned char 
 32242 ;; Return value:  Size  Location     Type
 32243 ;;                  1    wreg      enum E12767
 32244 ;; Registers used:
 32245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32246 ;; Tracked objects:
 32247 ;;		On entry : 0/0
 32248 ;;		On exit  : 0/0
 32249 ;;		Unchanged: 0/0
 32250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32252 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32253 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32254 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32255 ;;Total ram usage:        6 bytes
 32256 ;; Hardware stack levels used: 1
 32257 ;; Hardware stack levels required when called: 12
 32258 ;; This function calls:
 32259 ;;		Nothing
 32260 ;; This function is called by:
 32261 ;;		_processActions
 32262 ;; This function uses a non-reentrant model
 32263 ;;
 32264                           
 32265                           	psect	text127
 32266   00A12C                     __ptext127:
 32267                           	callstack 0
 32268   00A12C                     _completed:
 32269                           	callstack 16
 32270                           
 32271                           ; BSR set to: 0
 32272                           ;incstack = 0
 32273                           ;completed@io stored from wreg
 32274   00A12C  0100               	movlb	0	; () banked
 32275   00A12E  6F92               	movwf	completed@io& (0+255),b
 32276                           
 32277                           ;../outputs.c: 220:     switch(type) {
 32278   00A130  D035               	goto	l21560
 32279   00A132                     l21538:
 32280                           
 32281                           ; BSR set to: 0
 32282                           ;../outputs.c: 223:             return TRUE;
 32283   00A132  0E01               	movlw	1
 32284   00A134  0012               	return	
 32285   00A136                     l21542:
 32286                           
 32287                           ; BSR set to: 0
 32288                           ;../outputs.c: 226:             return pulseDelays[io] == 1;
 32289   00A136  0EA4               	movlw	low _pulseDelays
 32290   00A138  2592               	addwf	completed@io& (0+255),w,b
 32291   00A13A  6ED9               	movwf	fsr2l,c
 32292   00A13C  6ADA               	clrf	fsr2h,c
 32293   00A13E  0E02               	movlw	high _pulseDelays
 32294   00A140  22DA               	addwfc	fsr2h,f,c
 32295   00A142  04DE               	decf	postinc2,w,c
 32296   00A144  A4D8               	btfss	status,2,c
 32297   00A146  D002               	goto	u22060
 32298   00A148  0E01               	movlw	1
 32299   00A14A  0012               	return	
 32300   00A14C                     u22060:
 32301   00A14C  0E00               	movlw	0
 32302   00A14E  0012               	return	
 32303   00A150                     l21546:
 32304                           
 32305                           ; BSR set to: 0
 32306                           ;../outputs.c: 235:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 32307   00A150  0E00               	movlw	0
 32308   00A152  6F91               	movwf	_completed$1545& (0+255),b
 32309                           
 32310                           ; BSR set to: 0
 32311   00A154  5192               	movf	completed@io& (0+255),w,b
 32312   00A156  0FA9               	addlw	low _currentPos
 32313   00A158  6ED9               	movwf	fsr2l,c
 32314   00A15A  6ADA               	clrf	fsr2h,c
 32315   00A15C  0E20               	movlw	low _targetPos
 32316   00A15E  2592               	addwf	completed@io& (0+255),w,b
 32317   00A160  6EE1               	movwf	fsr1l,c
 32318   00A162  6AE2               	clrf	fsr1h,c
 32319   00A164  0E01               	movlw	high _targetPos
 32320   00A166  22E2               	addwfc	fsr1h,f,c
 32321   00A168  50DE               	movf	postinc2,w,c
 32322   00A16A  18E6               	xorwf	postinc1,w,c
 32323   00A16C  A4D8               	btfss	status,2,c
 32324   00A16E  D014               	goto	l916
 32325                           
 32326                           ; BSR set to: 0
 32327   00A170  0E10               	movlw	low _servoState
 32328   00A172  2592               	addwf	completed@io& (0+255),w,b
 32329   00A174  6ED9               	movwf	fsr2l,c
 32330   00A176  6ADA               	clrf	fsr2h,c
 32331   00A178  0E01               	movlw	high _servoState
 32332   00A17A  22DA               	addwfc	fsr2h,f,c
 32333   00A17C  04DE               	decf	postinc2,w,c
 32334   00A17E  B4D8               	btfsc	status,2,c
 32335   00A180  D009               	goto	u22100
 32336                           
 32337                           ; BSR set to: 0
 32338   00A182  0E10               	movlw	low _servoState
 32339   00A184  2592               	addwf	completed@io& (0+255),w,b
 32340   00A186  6ED9               	movwf	fsr2l,c
 32341   00A188  6ADA               	clrf	fsr2h,c
 32342   00A18A  0E01               	movlw	high _servoState
 32343   00A18C  22DA               	addwfc	fsr2h,f,c
 32344   00A18E  50DF               	movf	indf2,w,c
 32345   00A190  A4D8               	btfss	status,2,c
 32346   00A192  D002               	goto	l916
 32347   00A194                     u22100:
 32348                           
 32349                           ; BSR set to: 0
 32350   00A194  0E01               	movlw	1
 32351   00A196  6F91               	movwf	_completed$1545& (0+255),b
 32352   00A198                     l916:
 32353                           
 32354                           ; BSR set to: 0
 32355   00A198  5191               	movf	_completed$1545& (0+255),w,b
 32356   00A19A  0012               	return	
 32357   00A19C                     l21560:
 32358   00A19C  0100               	movlb	0	; () banked
 32359   00A19E  518E               	movf	completed@type& (0+255),w,b
 32360                           
 32361                           ; Switch size 1, requested type "simple"
 32362                           ; Number of cases is 5, Range of values is 0 to 4
 32363                           ; switch strategies available:
 32364                           ; Name         Instructions Cycles
 32365                           ; simple_byte           16     9 (average)
 32366                           ;	Chosen strategy is simple_byte
 32367   00A1A0  0A00               	xorlw	0	; case 0
 32368   00A1A2  B4D8               	btfsc	status,2,c
 32369   00A1A4  D7C6               	goto	l21538
 32370   00A1A6  0A01               	xorlw	1	; case 1
 32371   00A1A8  B4D8               	btfsc	status,2,c
 32372   00A1AA  D7C5               	goto	l21542
 32373   00A1AC  0A03               	xorlw	3	; case 2
 32374   00A1AE  B4D8               	btfsc	status,2,c
 32375   00A1B0  D7CF               	goto	l21546
 32376   00A1B2  0A01               	xorlw	1	; case 3
 32377   00A1B4  B4D8               	btfsc	status,2,c
 32378   00A1B6  D7CC               	goto	l21546
 32379   00A1B8  0A07               	xorlw	7	; case 4
 32380   00A1BA  B4D8               	btfsc	status,2,c
 32381   00A1BC  D7C9               	goto	l21546
 32382   00A1BE  D7B9               	goto	l21538
 32383   00A1C0                     __end_of_completed:
 32384                           	callstack 0
 32385                           
 32386 ;; *************** function _inputScan *****************
 32387 ;; Defined at:
 32388 ;;		line 101 in file "../inputs.c"
 32389 ;; Parameters:    Size  Location     Type
 32390 ;;		None
 32391 ;; Auto vars:     Size  Location     Type
 32392 ;;  change          1   20[BANK1 ] enum E12717
 32393 ;;  input           1   21[BANK1 ] unsigned char 
 32394 ;; Return value:  Size  Location     Type
 32395 ;;                  1    wreg      void 
 32396 ;; Registers used:
 32397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32398 ;; Tracked objects:
 32399 ;;		On entry : 0/0
 32400 ;;		On exit  : 0/0
 32401 ;;		Unchanged: 0/0
 32402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32404 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32405 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32406 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32407 ;;Total ram usage:        4 bytes
 32408 ;; Hardware stack levels used: 1
 32409 ;; Hardware stack levels required when called: 18
 32410 ;; This function calls:
 32411 ;;		_getNV
 32412 ;;		_readInput
 32413 ;;		_sendProducedEvent
 32414 ;;		_writeNVM
 32415 ;; This function is called by:
 32416 ;;		_loop
 32417 ;; This function uses a non-reentrant model
 32418 ;;
 32419                           
 32420                           	psect	text128
 32421   004F86                     __ptext128:
 32422                           	callstack 0
 32423   004F86                     _inputScan:
 32424                           	callstack 11
 32425                           
 32426                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 32427                           
 32428                           ; BSR set to: 0
 32429                           ;incstack = 0
 32430   004F86  0E00               	movlw	0
 32431   004F88  0100               	movlb	0	; () banked
 32432   004F8A  6FCE               	movwf	_io@inputs$F849& (0+255),b
 32433   004F8C                     l22814:
 32434                           
 32435                           ; BSR set to: 0
 32436   004F8C  0E0F               	movlw	15
 32437   004F8E  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
 32438   004F90  D001               	goto	l22818
 32439   004F92  0012               	return	
 32440   004F94                     l22818:
 32441                           
 32442                           ; BSR set to: 0
 32443                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 32444   004F94  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32445   004F96  0D07               	mullw	7
 32446   004F98  50F3               	movf	243,w,c
 32447   004F9A  0F10               	addlw	16
 32448   004F9C  EC52  F05E         	call	_getNV
 32449   004FA0  0100               	movlb	0	; () banked
 32450   004FA2  518D               	movf	?_getNV& (0+255),w,b
 32451   004FA4  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 32452   004FA6  A4D8               	btfss	status,2,c
 32453   004FA8  D151               	goto	l22880
 32454                           
 32455                           ; BSR set to: 0
 32456                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 32457   004FAA  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32458   004FAC  ECB0  F03F         	call	_readInput
 32459   004FB0  0101               	movlb	1	; () banked
 32460   004FB2  6FCF               	movwf	inputScan@input& (0+255),b
 32461                           
 32462                           ; BSR set to: 1
 32463                           ;../inputs.c: 105:             if (input != inputState[io]) {
 32464   004FB4  0E94               	movlw	low _inputState
 32465   004FB6  0100               	movlb	0	; () banked
 32466   004FB8  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32467   004FBA  6ED9               	movwf	fsr2l,c
 32468   004FBC  6ADA               	clrf	fsr2h,c
 32469   004FBE  0E02               	movlw	high _inputState
 32470   004FC0  22DA               	addwfc	fsr2h,f,c
 32471   004FC2  0101               	movlb	1	; () banked
 32472   004FC4  51CF               	movf	inputScan@input& (0+255),w,b
 32473   004FC6  18DE               	xorwf	postinc2,w,c
 32474   004FC8  B4D8               	btfsc	status,2,c
 32475   004FCA  D138               	goto	l22878
 32476                           
 32477                           ; BSR set to: 1
 32478                           ;../inputs.c: 106:                 Boolean change = FALSE;
 32479   004FCC  0E00               	movlw	0
 32480   004FCE  6FCE               	movwf	inputScan@change& (0+255),b
 32481                           
 32482                           ; BSR set to: 1
 32483                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 32484   004FD0  0E94               	movlw	low _inputState
 32485   004FD2  0100               	movlb	0	; () banked
 32486   004FD4  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32487   004FD6  6ED9               	movwf	fsr2l,c
 32488   004FD8  6ADA               	clrf	fsr2h,c
 32489   004FDA  0E02               	movlw	high _inputState
 32490   004FDC  22DA               	addwfc	fsr2h,f,c
 32491   004FDE  50DF               	movf	indf2,w,c
 32492   004FE0  B4D8               	btfsc	status,2,c
 32493   004FE2  D01E               	goto	l22832
 32494                           
 32495                           ; BSR set to: 0
 32496   004FE4  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32497   004FE6  0D07               	mullw	7
 32498   004FE8  50F3               	movf	243,w,c
 32499   004FEA  0F12               	addlw	18
 32500   004FEC  EC52  F05E         	call	_getNV
 32501   004FF0  0E84               	movlw	low _delayCount
 32502   004FF2  0100               	movlb	0	; () banked
 32503   004FF4  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32504   004FF6  6ED9               	movwf	fsr2l,c
 32505   004FF8  6ADA               	clrf	fsr2h,c
 32506   004FFA  0E02               	movlw	high _delayCount
 32507   004FFC  22DA               	addwfc	fsr2h,f,c
 32508   004FFE  50DF               	movf	indf2,w,c
 32509   005000  0101               	movlb	1	; () banked
 32510   005002  6FCC               	movwf	??_inputScan& (0+255),b
 32511   005004  6BCD               	clrf	(??_inputScan+1)& (0+255),b
 32512   005006  0100               	movlb	0	; () banked
 32513   005008  518D               	movf	?_getNV& (0+255),w,b
 32514   00500A  0101               	movlb	1	; () banked
 32515   00500C  19CC               	xorwf	??_inputScan& (0+255),w,b
 32516   00500E  E108               	bnz	l22832
 32517   005010  0100               	movlb	0	; () banked
 32518   005012  518E               	movf	(?_getNV+1)& (0+255),w,b
 32519   005014  0101               	movlb	1	; () banked
 32520   005016  19CD               	xorwf	(??_inputScan+1)& (0+255),w,b
 32521   005018  A4D8               	btfss	status,2,c
 32522   00501A  D002               	goto	l22832
 32523                           
 32524                           ; BSR set to: 1
 32525                           ;../inputs.c: 109:                     change = TRUE;
 32526   00501C  0E01               	movlw	1
 32527   00501E  6FCE               	movwf	inputScan@change& (0+255),b
 32528   005020                     l22832:
 32529                           
 32530                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 32531   005020  0E94               	movlw	low _inputState
 32532   005022  0100               	movlb	0	; () banked
 32533   005024  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32534   005026  6ED9               	movwf	fsr2l,c
 32535   005028  6ADA               	clrf	fsr2h,c
 32536   00502A  0E02               	movlw	high _inputState
 32537   00502C  22DA               	addwfc	fsr2h,f,c
 32538   00502E  50DF               	movf	indf2,w,c
 32539   005030  A4D8               	btfss	status,2,c
 32540   005032  D01E               	goto	l352
 32541                           
 32542                           ; BSR set to: 0
 32543   005034  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32544   005036  0D07               	mullw	7
 32545   005038  50F3               	movf	243,w,c
 32546   00503A  0F13               	addlw	19
 32547   00503C  EC52  F05E         	call	_getNV
 32548   005040  0E84               	movlw	low _delayCount
 32549   005042  0100               	movlb	0	; () banked
 32550   005044  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32551   005046  6ED9               	movwf	fsr2l,c
 32552   005048  6ADA               	clrf	fsr2h,c
 32553   00504A  0E02               	movlw	high _delayCount
 32554   00504C  22DA               	addwfc	fsr2h,f,c
 32555   00504E  50DF               	movf	indf2,w,c
 32556   005050  0101               	movlb	1	; () banked
 32557   005052  6FCC               	movwf	??_inputScan& (0+255),b
 32558   005054  6BCD               	clrf	(??_inputScan+1)& (0+255),b
 32559   005056  0100               	movlb	0	; () banked
 32560   005058  518D               	movf	?_getNV& (0+255),w,b
 32561   00505A  0101               	movlb	1	; () banked
 32562   00505C  19CC               	xorwf	??_inputScan& (0+255),w,b
 32563   00505E  E108               	bnz	l352
 32564   005060  0100               	movlb	0	; () banked
 32565   005062  518E               	movf	(?_getNV+1)& (0+255),w,b
 32566   005064  0101               	movlb	1	; () banked
 32567   005066  19CD               	xorwf	(??_inputScan+1)& (0+255),w,b
 32568   005068  A4D8               	btfss	status,2,c
 32569   00506A  D002               	goto	l352
 32570                           
 32571                           ; BSR set to: 1
 32572                           ;../inputs.c: 112:                     change = TRUE;
 32573   00506C  0E01               	movlw	1
 32574   00506E  6FCE               	movwf	inputScan@change& (0+255),b
 32575   005070                     l352:
 32576                           
 32577                           ;../inputs.c: 114:                 if (change) {
 32578   005070  0101               	movlb	1	; () banked
 32579   005072  51CE               	movf	inputScan@change& (0+255),w,b
 32580   005074  B4D8               	btfsc	status,2,c
 32581   005076  D0D9               	goto	l22876
 32582                           
 32583                           ; BSR set to: 1
 32584                           ;../inputs.c: 116:                     delayCount[io] = 0;
 32585   005078  0E84               	movlw	low _delayCount
 32586   00507A  0100               	movlb	0	; () banked
 32587   00507C  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32588   00507E  6ED9               	movwf	fsr2l,c
 32589   005080  6ADA               	clrf	fsr2h,c
 32590   005082  0E02               	movlw	high _delayCount
 32591   005084  22DA               	addwfc	fsr2h,f,c
 32592   005086  6ADF               	clrf	indf2,c
 32593                           
 32594                           ;../inputs.c: 117:                     inputState[io] = input;
 32595   005088  0E94               	movlw	low _inputState
 32596   00508A  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32597   00508C  6ED9               	movwf	fsr2l,c
 32598   00508E  6ADA               	clrf	fsr2h,c
 32599   005090  0E02               	movlw	high _inputState
 32600   005092  22DA               	addwfc	fsr2h,f,c
 32601   005094  C1CF  FFDF         	movff	inputScan@input,indf2
 32602                           
 32603                           ; BSR set to: 0
 32604                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 32605   005098  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32606   00509A  0D07               	mullw	7
 32607   00509C  50F3               	movf	243,w,c
 32608   00509E  0F11               	addlw	17
 32609   0050A0  EC52  F05E         	call	_getNV
 32610   0050A4  0100               	movlb	0	; () banked
 32611   0050A6  B18D               	btfsc	?_getNV& (0+255),0,b
 32612   0050A8  D008               	goto	l22844
 32613                           
 32614                           ; BSR set to: 0
 32615                           ;../inputs.c: 120:                         input = !input;
 32616   0050AA  0101               	movlb	1	; () banked
 32617   0050AC  51CF               	movf	inputScan@input& (0+255),w,b
 32618   0050AE  A4D8               	btfss	status,2,c
 32619   0050B0  D002               	goto	u24040
 32620   0050B2  0E01               	movlw	1
 32621   0050B4  D001               	goto	u24050
 32622   0050B6                     u24040:
 32623   0050B6  0E00               	movlw	0
 32624   0050B8                     u24050:
 32625   0050B8  6FCF               	movwf	inputScan@input& (0+255),b
 32626   0050BA                     l22844:
 32627                           
 32628                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 32629   0050BA  0100               	movlb	0	; () banked
 32630   0050BC  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32631   0050BE  0D07               	mullw	7
 32632   0050C0  50F3               	movf	243,w,c
 32633   0050C2  0F11               	addlw	17
 32634   0050C4  EC52  F05E         	call	_getNV
 32635   0050C8  0100               	movlb	0	; () banked
 32636   0050CA  A98D               	btfss	?_getNV& (0+255),4,b
 32637   0050CC  D031               	goto	l22852
 32638                           
 32639                           ; BSR set to: 0
 32640                           ;../inputs.c: 124:                         if (input) {
 32641   0050CE  0101               	movlb	1	; () banked
 32642   0050D0  51CF               	movf	inputScan@input& (0+255),w,b
 32643   0050D2  B4D8               	btfsc	status,2,c
 32644   0050D4  D0BB               	goto	l22880
 32645                           
 32646                           ; BSR set to: 1
 32647                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 32648   0050D6  0EB4               	movlw	low _outputState
 32649   0050D8  0100               	movlb	0	; () banked
 32650   0050DA  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32651   0050DC  6ED9               	movwf	fsr2l,c
 32652   0050DE  6ADA               	clrf	fsr2h,c
 32653   0050E0  0E02               	movlw	high _outputState
 32654   0050E2  22DA               	addwfc	fsr2h,f,c
 32655   0050E4  0EB4               	movlw	low _outputState
 32656   0050E6  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32657   0050E8  6EE1               	movwf	fsr1l,c
 32658   0050EA  6AE2               	clrf	fsr1h,c
 32659   0050EC  0E02               	movlw	high _outputState
 32660   0050EE  22E2               	addwfc	fsr1h,f,c
 32661   0050F0  50E7               	movf	indf1,w,c
 32662   0050F2  A4D8               	btfss	status,2,c
 32663   0050F4  D002               	goto	u24080
 32664   0050F6  0E01               	movlw	1
 32665   0050F8  D001               	goto	u24090
 32666   0050FA                     u24080:
 32667   0050FA  0E00               	movlw	0
 32668   0050FC                     u24090:
 32669   0050FC  6EDF               	movwf	indf2,c
 32670                           
 32671                           ; BSR set to: 0
 32672                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 32673                           
 32674                           ;../inputs.c: 126:                         } else {
 32675   0050FE  0EDE               	movlw	222
 32676   005100  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32677   005102  0101               	movlb	1	; () banked
 32678   005104  6FCC               	movwf	??_inputScan& (0+255),b
 32679   005106  6BCD               	clrf	(??_inputScan+1)& (0+255),b
 32680   005108  0E03               	movlw	3
 32681   00510A  23CD               	addwfc	(??_inputScan+1)& (0+255),f,b
 32682   00510C  C1CC  F0A4         	movff	??_inputScan,writeNVM@index
 32683   005110  C1CD  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 32684   005114  0100               	movlb	0	; () banked
 32685   005116  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 32686   005118  0EB4               	movlw	low _outputState
 32687   00511A  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32688   00511C  6ED9               	movwf	fsr2l,c
 32689   00511E  6ADA               	clrf	fsr2h,c
 32690   005120  0E02               	movlw	high _outputState
 32691   005122  22DA               	addwfc	fsr2h,f,c
 32692   005124  50DF               	movf	indf2,w,c
 32693   005126  6FA7               	movwf	writeNVM@value& (0+255),b
 32694   005128  0E00               	movlw	0
 32695   00512A  EC60  F05C         	call	_writeNVM
 32696                           
 32697                           ;../inputs.c: 130:                      } else {
 32698   00512E  D008               	goto	l22854
 32699   005130                     l22852:
 32700                           
 32701                           ; BSR set to: 0
 32702                           ;../inputs.c: 131:                         outputState[io] = input;
 32703   005130  0EB4               	movlw	low _outputState
 32704   005132  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32705   005134  6ED9               	movwf	fsr2l,c
 32706   005136  6ADA               	clrf	fsr2h,c
 32707   005138  0E02               	movlw	high _outputState
 32708   00513A  22DA               	addwfc	fsr2h,f,c
 32709   00513C  C1CF  FFDF         	movff	inputScan@input,indf2
 32710   005140                     l22854:
 32711                           
 32712                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 32713   005140  0100               	movlb	0	; () banked
 32714   005142  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32715   005144  0D07               	mullw	7
 32716   005146  50F3               	movf	243,w,c
 32717   005148  0F11               	addlw	17
 32718   00514A  EC52  F05E         	call	_getNV
 32719   00514E  0100               	movlb	0	; () banked
 32720   005150  A78D               	btfss	?_getNV& (0+255),3,b
 32721   005152  D03F               	goto	l22870
 32722                           
 32723                           ; BSR set to: 0
 32724                           ;../inputs.c: 136:                         if (outputState[io]) {
 32725   005154  0EB4               	movlw	low _outputState
 32726   005156  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32727   005158  6ED9               	movwf	fsr2l,c
 32728   00515A  6ADA               	clrf	fsr2h,c
 32729   00515C  0E02               	movlw	high _outputState
 32730   00515E  22DA               	addwfc	fsr2h,f,c
 32731   005160  50DF               	movf	indf2,w,c
 32732   005162  B4D8               	btfsc	status,2,c
 32733   005164  D01B               	goto	l22864
 32734                           
 32735                           ; BSR set to: 0
 32736                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32737   005166  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32738   005168  0D07               	mullw	7
 32739   00516A  50F3               	movf	243,w,c
 32740   00516C  0F11               	addlw	17
 32741   00516E  EC52  F05E         	call	_getNV
 32742   005172  0100               	movlb	0	; () banked
 32743   005174  AD8D               	btfss	?_getNV& (0+255),6,b
 32744   005176  D009               	goto	l22862
 32745                           
 32746                           ; BSR set to: 0
 32747                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 32748   005178  0E00               	movlw	0
 32749   00517A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32750   00517C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32751   00517E  0D04               	mullw	4
 32752   005180  50F3               	movf	243,w,c
 32753   005182  0F08               	addlw	8
 32754   005184  EC3B  F04B         	call	_sendProducedEvent
 32755                           
 32756                           ;../inputs.c: 141:                             } else {
 32757   005188  D061               	goto	l22880
 32758   00518A                     l22862:
 32759                           
 32760                           ; BSR set to: 0
 32761                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 32762   00518A  0E01               	movlw	1
 32763   00518C  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32764   00518E  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32765   005190  0D04               	mullw	4
 32766   005192  50F3               	movf	243,w,c
 32767   005194  0F08               	addlw	8
 32768   005196  EC3B  F04B         	call	_sendProducedEvent
 32769   00519A  D058               	goto	l22880
 32770   00519C                     l22864:
 32771                           
 32772                           ; BSR set to: 0
 32773                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32774   00519C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32775   00519E  0D07               	mullw	7
 32776   0051A0  50F3               	movf	243,w,c
 32777   0051A2  0F11               	addlw	17
 32778   0051A4  EC52  F05E         	call	_getNV
 32779   0051A8  0100               	movlb	0	; () banked
 32780   0051AA  AD8D               	btfss	?_getNV& (0+255),6,b
 32781   0051AC  D009               	goto	l22868
 32782                           
 32783                           ; BSR set to: 0
 32784                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 32785   0051AE  0E00               	movlw	0
 32786   0051B0  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32787   0051B2  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32788   0051B4  0D04               	mullw	4
 32789   0051B6  50F3               	movf	243,w,c
 32790   0051B8  0F09               	addlw	9
 32791   0051BA  EC3B  F04B         	call	_sendProducedEvent
 32792                           
 32793                           ;../inputs.c: 147:                             } else {
 32794   0051BE  D046               	goto	l22880
 32795   0051C0                     l22868:
 32796                           
 32797                           ; BSR set to: 0
 32798                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 32799   0051C0  0E01               	movlw	1
 32800   0051C2  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32801   0051C4  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32802   0051C6  0D04               	mullw	4
 32803   0051C8  50F3               	movf	243,w,c
 32804   0051CA  0F09               	addlw	9
 32805   0051CC  EC3B  F04B         	call	_sendProducedEvent
 32806   0051D0  D03D               	goto	l22880
 32807   0051D2                     l22870:
 32808                           
 32809                           ; BSR set to: 0
 32810                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32811   0051D2  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32812   0051D4  0D07               	mullw	7
 32813   0051D6  50F3               	movf	243,w,c
 32814   0051D8  0F11               	addlw	17
 32815   0051DA  EC52  F05E         	call	_getNV
 32816   0051DE  0100               	movlb	0	; () banked
 32817   0051E0  AD8D               	btfss	?_getNV& (0+255),6,b
 32818   0051E2  D014               	goto	l22874
 32819                           
 32820                           ; BSR set to: 0
 32821                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 32822   0051E4  0EB4               	movlw	low _outputState
 32823   0051E6  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32824   0051E8  6ED9               	movwf	fsr2l,c
 32825   0051EA  6ADA               	clrf	fsr2h,c
 32826   0051EC  0E02               	movlw	high _outputState
 32827   0051EE  22DA               	addwfc	fsr2h,f,c
 32828   0051F0  50DF               	movf	indf2,w,c
 32829   0051F2  A4D8               	btfss	status,2,c
 32830   0051F4  D002               	goto	u24150
 32831   0051F6  0E01               	movlw	1
 32832   0051F8  D001               	goto	u24160
 32833   0051FA                     u24150:
 32834   0051FA  0E00               	movlw	0
 32835   0051FC                     u24160:
 32836   0051FC  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32837   0051FE  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32838   005200  0D04               	mullw	4
 32839   005202  50F3               	movf	243,w,c
 32840   005204  0F08               	addlw	8
 32841   005206  EC3B  F04B         	call	_sendProducedEvent
 32842                           
 32843                           ;../inputs.c: 155:                         } else {
 32844   00520A  D020               	goto	l22880
 32845   00520C                     l22874:
 32846                           
 32847                           ; BSR set to: 0
 32848                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 32849   00520C  0EB4               	movlw	low _outputState
 32850   00520E  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32851   005210  6ED9               	movwf	fsr2l,c
 32852   005212  6ADA               	clrf	fsr2h,c
 32853   005214  0E02               	movlw	high _outputState
 32854   005216  22DA               	addwfc	fsr2h,f,c
 32855   005218  50DF               	movf	indf2,w,c
 32856   00521A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32857   00521C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32858   00521E  0D04               	mullw	4
 32859   005220  50F3               	movf	243,w,c
 32860   005222  0F08               	addlw	8
 32861   005224  EC3B  F04B         	call	_sendProducedEvent
 32862   005228  D011               	goto	l22880
 32863   00522A                     l22876:
 32864                           
 32865                           ; BSR set to: 1
 32866                           ;../inputs.c: 160:                     delayCount[io]++;
 32867   00522A  0E84               	movlw	low _delayCount
 32868   00522C  0100               	movlb	0	; () banked
 32869   00522E  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32870   005230  6ED9               	movwf	fsr2l,c
 32871   005232  6ADA               	clrf	fsr2h,c
 32872   005234  0E02               	movlw	high _delayCount
 32873   005236  22DA               	addwfc	fsr2h,f,c
 32874   005238  2ADF               	incf	indf2,f,c
 32875   00523A  D008               	goto	l22880
 32876   00523C                     l22878:
 32877                           
 32878                           ; BSR set to: 1
 32879                           ;../inputs.c: 163:                 delayCount[io] = 0;
 32880   00523C  0E84               	movlw	low _delayCount
 32881   00523E  0100               	movlb	0	; () banked
 32882   005240  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32883   005242  6ED9               	movwf	fsr2l,c
 32884   005244  6ADA               	clrf	fsr2h,c
 32885   005246  0E02               	movlw	high _delayCount
 32886   005248  22DA               	addwfc	fsr2h,f,c
 32887   00524A  6ADF               	clrf	indf2,c
 32888   00524C                     l22880:
 32889   00524C  0100               	movlb	0	; () banked
 32890   00524E  2BCE               	incf	_io@inputs$F849& (0+255),f,b
 32891   005250  D69D               	goto	l22814
 32892   005252                     __end_of_inputScan:
 32893                           	callstack 0
 32894                           
 32895 ;; *************** function _sendProducedEvent *****************
 32896 ;; Defined at:
 32897 ;;		line 217 in file "../../VLCBlib_PIC/event_producer_happening.c"
 32898 ;; Parameters:    Size  Location     Type
 32899 ;;  happening       1    wreg     unsigned char 
 32900 ;;  onOff           1   71[BANK0 ] enum E12736
 32901 ;; Auto vars:     Size  Location     Type
 32902 ;;  happening       1   17[BANK1 ] unsigned char 
 32903 ;;  producedEven    2   15[BANK1 ] struct Word
 32904 ;;  producedEven    2   13[BANK1 ] struct Word
 32905 ;;  opc             1   12[BANK1 ] unsigned char 
 32906 ;; Return value:  Size  Location     Type
 32907 ;;                  1    wreg      enum E12716
 32908 ;; Registers used:
 32909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32910 ;; Tracked objects:
 32911 ;;		On entry : 0/0
 32912 ;;		On exit  : 0/0
 32913 ;;		Unchanged: 0/0
 32914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32915 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32916 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32917 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32918 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32919 ;;Total ram usage:        8 bytes
 32920 ;; Hardware stack levels used: 1
 32921 ;; Hardware stack levels required when called: 17
 32922 ;; This function calls:
 32923 ;;		_getEN
 32924 ;;		_getNN
 32925 ;;		_sendMessage4
 32926 ;; This function is called by:
 32927 ;;		_loop
 32928 ;;		_processOutputs
 32929 ;;		_inputScan
 32930 ;;		_sendInvertedProducedEvent
 32931 ;;		_pollServos
 32932 ;;		_alwaysSendInvertedProducedEvent
 32933 ;; This function uses a non-reentrant model
 32934 ;;
 32935                           
 32936                           	psect	text129
 32937   009676                     __ptext129:
 32938                           	callstack 0
 32939   009676                     _sendProducedEvent:
 32940                           	callstack 9
 32941                           
 32942                           ; BSR set to: 0
 32943                           ;incstack = 0
 32944                           ;sendProducedEvent@happening stored from wreg
 32945   009676  0101               	movlb	1	; () banked
 32946   009678  6FCB               	movwf	sendProducedEvent@happening& (0+255),b
 32947                           
 32948                           ;../../VLCBlib_PIC/event_producer_happening.c: 218:     Word producedEventNN;;../../VLCB
      +                          lib_PIC/event_producer_happening.c: 219:     Word producedEventEN;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 220:     uint8_t opc;;../../VLCBlib_PIC/event_producer_happenin
      +                          g.c: 226:     if ((happening < 1) || (happening > (7+16*4))) return FALSE;
 32949   00967A  0101               	movlb	1	; () banked
 32950   00967C  51CB               	movf	sendProducedEvent@happening& (0+255),w,b
 32951   00967E  B4D8               	btfsc	status,2,c
 32952   009680  D003               	goto	u19770
 32953                           
 32954                           ; BSR set to: 1
 32955   009682  0E47               	movlw	71
 32956   009684  65CB               	cpfsgt	sendProducedEvent@happening& (0+255),b
 32957   009686  D002               	goto	l19778
 32958   009688                     u19770:
 32959                           
 32960                           ; BSR set to: 1
 32961   009688  0E00               	movlw	0
 32962   00968A  0012               	return	
 32963   00968C                     l19778:
 32964                           
 32965                           ; BSR set to: 1
 32966                           ;../../VLCBlib_PIC/event_producer_happening.c: 227:     if (happening2Event[happening-1]
      +                           == 0xff) return FALSE;
 32967   00968C  0EFF               	movlw	low (_happening2Event+65535)
 32968   00968E  25CB               	addwf	sendProducedEvent@happening& (0+255),w,b
 32969   009690  6ED9               	movwf	fsr2l,c
 32970   009692  6ADA               	clrf	fsr2h,c
 32971   009694  0E02               	movlw	high (_happening2Event+65535)
 32972   009696  22DA               	addwfc	fsr2h,f,c
 32973   009698  28DE               	incf	postinc2,w,c
 32974   00969A  B4D8               	btfsc	status,2,c
 32975   00969C  D7F5               	goto	u19770
 32976                           
 32977                           ; BSR set to: 1
 32978                           ;../../VLCBlib_PIC/event_producer_happening.c: 228:     producedEventNN.word = getNN(hap
      +                          pening2Event[happening-1]);
 32979   00969E  0EFF               	movlw	low (_happening2Event+65535)
 32980   0096A0  25CB               	addwf	sendProducedEvent@happening& (0+255),w,b
 32981   0096A2  6ED9               	movwf	fsr2l,c
 32982   0096A4  6ADA               	clrf	fsr2h,c
 32983   0096A6  0E02               	movlw	high (_happening2Event+65535)
 32984   0096A8  22DA               	addwfc	fsr2h,f,c
 32985   0096AA  50DF               	movf	indf2,w,c
 32986   0096AC  ECBF  F049         	call	_getNN
 32987   0096B0  C097  F1C9         	movff	?_getNN,sendProducedEvent@producedEventNN
 32988   0096B4  C098  F1CA         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 32989                           
 32990                           ;../../VLCBlib_PIC/event_producer_happening.c: 229:     producedEventEN.word = getEN(hap
      +                          pening2Event[happening-1]);
 32991   0096B8  0EFF               	movlw	low (_happening2Event+65535)
 32992   0096BA  0101               	movlb	1	; () banked
 32993   0096BC  25CB               	addwf	sendProducedEvent@happening& (0+255),w,b
 32994   0096BE  6ED9               	movwf	fsr2l,c
 32995   0096C0  6ADA               	clrf	fsr2h,c
 32996   0096C2  0E02               	movlw	high (_happening2Event+65535)
 32997   0096C4  22DA               	addwfc	fsr2h,f,c
 32998   0096C6  50DF               	movf	indf2,w,c
 32999   0096C8  EC9B  F055         	call	_getEN
 33000   0096CC  C097  F1C7         	movff	?_getEN,sendProducedEvent@producedEventEN
 33001   0096D0  C098  F1C8         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 33002                           
 33003                           ;../../VLCBlib_PIC/event_producer_happening.c: 253:                 if (producedEventNN.
      +                          word == 0) {
 33004   0096D4  0101               	movlb	1	; () banked
 33005   0096D6  51C9               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 33006   0096D8  11CA               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 33007   0096DA  A4D8               	btfss	status,2,c
 33008   0096DC  D00E               	goto	l19796
 33009                           
 33010                           ; BSR set to: 1
 33011                           ;../../VLCBlib_PIC/event_producer_happening.c: 255:                     if (onOff == EVE
      +                          NT_ON) {
 33012   0096DE  0100               	movlb	0	; () banked
 33013   0096E0  05A7               	decf	sendProducedEvent@onOff& (0+255),w,b
 33014   0096E2  A4D8               	btfss	status,2,c
 33015   0096E4  D002               	goto	l19792
 33016                           
 33017                           ; BSR set to: 0
 33018                           ;../../VLCBlib_PIC/event_producer_happening.c: 256:                         opc = OPC_AS
      +                          ON;
 33019   0096E6  0E98               	movlw	152
 33020   0096E8  D001               	goto	L14
 33021   0096EA                     l19792:
 33022                           
 33023                           ; BSR set to: 0
 33024                           ;../../VLCBlib_PIC/event_producer_happening.c: 258:                         opc = OPC_AS
      +                          OF;
 33025   0096EA  0E99               	movlw	153
 33026   0096EC                     L14:
 33027   0096EC  0101               	movlb	1	; () banked
 33028   0096EE  6FC6               	movwf	sendProducedEvent@opc& (0+255),b
 33029                           
 33030                           ; BSR set to: 1
 33031                           ;../../VLCBlib_PIC/event_producer_happening.c: 260:                     producedEventNN.
      +                          word = nn.word;
 33032   0096F0  C0BD  F1C9         	movff	_nn,sendProducedEvent@producedEventNN
 33033   0096F4  C0BE  F1CA         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 33034                           
 33035                           ;../../VLCBlib_PIC/event_producer_happening.c: 261:                 } else {
 33036   0096F8  D009               	goto	l19802
 33037   0096FA                     l19796:
 33038                           
 33039                           ; BSR set to: 1
 33040                           ;../../VLCBlib_PIC/event_producer_happening.c: 263:                     if (onOff == EVE
      +                          NT_ON) {
 33041   0096FA  0100               	movlb	0	; () banked
 33042   0096FC  05A7               	decf	sendProducedEvent@onOff& (0+255),w,b
 33043   0096FE  A4D8               	btfss	status,2,c
 33044   009700  D002               	goto	l19800
 33045                           
 33046                           ; BSR set to: 0
 33047                           ;../../VLCBlib_PIC/event_producer_happening.c: 264:                         opc = OPC_AC
      +                          ON;
 33048   009702  0E90               	movlw	144
 33049   009704  D001               	goto	L15
 33050   009706                     l19800:
 33051                           
 33052                           ; BSR set to: 0
 33053                           ;../../VLCBlib_PIC/event_producer_happening.c: 266:                         opc = OPC_AC
      +                          OF;
 33054   009706  0E91               	movlw	145
 33055   009708                     L15:
 33056   009708  0101               	movlb	1	; () banked
 33057   00970A  6FC6               	movwf	sendProducedEvent@opc& (0+255),b
 33058   00970C                     l19802:
 33059                           
 33060                           ; BSR set to: 1
 33061                           ;../../VLCBlib_PIC/event_producer_happening.c: 269:                 sendMessage4(opc, pr
      +                          oducedEventNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEven
      +                          tEN.bytes.lo);
 33062   00970C  C1CA  F1C2         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 33063   009710  C1C9  F1C3         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 33064   009714  C1C8  F1C4         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 33065   009718  C1C7  F1C5         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 33066   00971C  51C6               	movf	sendProducedEvent@opc& (0+255),w,b
 33067   00971E  ECF9  F05F         	call	_sendMessage4
 33068                           
 33069                           ;../../VLCBlib_PIC/event_producer_happening.c: 271:                 producerDiagnostics[
      +                          1].asUint++;
 33070   009722  0101               	movlb	1	; () banked
 33071   009724  4BAC               	infsnz	(_producerDiagnostics+2)& (0+255),f,b
 33072   009726  2BAD               	incf	(_producerDiagnostics+3)& (0+255),f,b
 33073                           
 33074                           ; BSR set to: 1
 33075                           ;../../VLCBlib_PIC/event_producer_happening.c: 273:                 return TRUE;
 33076   009728  0E01               	movlw	1
 33077                           
 33078                           ; BSR set to: 1
 33079   00972A  0012               	return		;funcret
 33080   00972C                     __end_of_sendProducedEvent:
 33081                           	callstack 0
 33082                           
 33083 ;; *************** function _sendMessage4 *****************
 33084 ;; Defined at:
 33085 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 33086 ;; Parameters:    Size  Location     Type
 33087 ;;  opc             1    wreg     enum E12392
 33088 ;;  data1           1    8[BANK1 ] unsigned char 
 33089 ;;  data2           1    9[BANK1 ] unsigned char 
 33090 ;;  data3           1   10[BANK1 ] unsigned char 
 33091 ;;  data4           1   11[BANK1 ] unsigned char 
 33092 ;; Auto vars:     Size  Location     Type
 33093 ;;  opc             1   70[BANK0 ] enum E12392
 33094 ;; Return value:  Size  Location     Type
 33095 ;;                  1    wreg      void 
 33096 ;; Registers used:
 33097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33098 ;; Tracked objects:
 33099 ;;		On entry : 0/0
 33100 ;;		On exit  : 0/0
 33101 ;;		Unchanged: 0/0
 33102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33103 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33106 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33107 ;;Total ram usage:        5 bytes
 33108 ;; Hardware stack levels used: 1
 33109 ;; Hardware stack levels required when called: 16
 33110 ;; This function calls:
 33111 ;;		_sendMessage
 33112 ;; This function is called by:
 33113 ;;		_mnsProcessMessage
 33114 ;;		_mnsTRrqnpnCallback
 33115 ;;		_nvProcessMessage
 33116 ;;		_nvTRnvrdCallback
 33117 ;;		_producerProcessMessage
 33118 ;;		_sendProducedEvent
 33119 ;; This function uses a non-reentrant model
 33120 ;;
 33121                           
 33122                           	psect	text130
 33123   00BFF2                     __ptext130:
 33124                           	callstack 0
 33125   00BFF2                     _sendMessage4:
 33126                           	callstack 12
 33127                           
 33128                           ; BSR set to: 1
 33129                           ;incstack = 0
 33130                           ;sendMessage4@opc stored from wreg
 33131   00BFF2  0100               	movlb	0	; () banked
 33132   00BFF4  6FA6               	movwf	sendMessage4@opc& (0+255),b
 33133                           
 33134                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 33135   00BFF6  0E05               	movlw	5
 33136   00BFF8  0101               	movlb	1	; () banked
 33137   00BFFA  6FBA               	movwf	sendMessage@len& (0+255),b
 33138   00BFFC  C1C2  F1BB         	movff	sendMessage4@data1,sendMessage@data1
 33139   00C000  C1C3  F1BC         	movff	sendMessage4@data2,sendMessage@data2
 33140   00C004  C1C4  F1BD         	movff	sendMessage4@data3,sendMessage@data3
 33141   00C008  C1C5  F1BE         	movff	sendMessage4@data4,sendMessage@data4
 33142   00C00C  0E00               	movlw	0
 33143   00C00E  6FBF               	movwf	sendMessage@data5& (0+255),b
 33144   00C010  0E00               	movlw	0
 33145   00C012  6FC0               	movwf	sendMessage@data6& (0+255),b
 33146   00C014  0E00               	movlw	0
 33147   00C016  6FC1               	movwf	sendMessage@data7& (0+255),b
 33148   00C018  0100               	movlb	0	; () banked
 33149   00C01A  51A6               	movf	sendMessage4@opc& (0+255),w,b
 33150   00C01C  ECA3  F054         	call	_sendMessage
 33151   00C020  0012               	return		;funcret
 33152   00C022                     __end_of_sendMessage4:
 33153                           	callstack 0
 33154                           
 33155 ;; *************** function _sendMessage *****************
 33156 ;; Defined at:
 33157 ;;		line 1226 in file "../../VLCBlib_PIC/vlcb.c"
 33158 ;; Parameters:    Size  Location     Type
 33159 ;;  opc             1    wreg     enum E12392
 33160 ;;  len             1    0[BANK1 ] unsigned char 
 33161 ;;  data1           1    1[BANK1 ] unsigned char 
 33162 ;;  data2           1    2[BANK1 ] unsigned char 
 33163 ;;  data3           1    3[BANK1 ] unsigned char 
 33164 ;;  data4           1    4[BANK1 ] unsigned char 
 33165 ;;  data5           1    5[BANK1 ] unsigned char 
 33166 ;;  data6           1    6[BANK1 ] unsigned char 
 33167 ;;  data7           1    7[BANK1 ] unsigned char 
 33168 ;; Auto vars:     Size  Location     Type
 33169 ;;  opc             1   69[BANK0 ] enum E12392
 33170 ;; Return value:  Size  Location     Type
 33171 ;;                  1    wreg      void 
 33172 ;; Registers used:
 33173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33174 ;; Tracked objects:
 33175 ;;		On entry : 0/0
 33176 ;;		On exit  : 0/0
 33177 ;;		Unchanged: 0/0
 33178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33179 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33182 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33183 ;;Total ram usage:       11 bytes
 33184 ;; Hardware stack levels used: 1
 33185 ;; Hardware stack levels required when called: 15
 33186 ;; This function calls:
 33187 ;;		_canSendMessage
 33188 ;; This function is called by:
 33189 ;;		_sendMessage2
 33190 ;;		_sendMessage3
 33191 ;;		_sendMessage4
 33192 ;;		_sendMessage5
 33193 ;;		_sendMessage6
 33194 ;;		_sendMessage7
 33195 ;;		_sendMessage0
 33196 ;;		_sendMessage1
 33197 ;; This function uses a non-reentrant model
 33198 ;;
 33199                           
 33200                           	psect	text131
 33201   00A946                     __ptext131:
 33202                           	callstack 0
 33203   00A946                     _sendMessage:
 33204                           	callstack 11
 33205                           
 33206                           ;incstack = 0
 33207                           ;sendMessage@opc stored from wreg
 33208   00A946  0100               	movlb	0	; () banked
 33209   00A948  6FA5               	movwf	sendMessage@opc& (0+255),b
 33210                           
 33211                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.opc = opc;
 33212   00A94A  C0A5  F19C         	movff	sendMessage@opc,_tmpMessage+1
 33213                           
 33214                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.len = len;
 33215   00A94E  C1BA  F19B         	movff	sendMessage@len,_tmpMessage
 33216                           
 33217                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[0] = data1;
 33218   00A952  C1BB  F19D         	movff	sendMessage@data1,_tmpMessage+2
 33219                           
 33220                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[1] = data2;
 33221   00A956  C1BC  F19E         	movff	sendMessage@data2,_tmpMessage+3
 33222                           
 33223                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[2] = data3;
 33224   00A95A  C1BD  F19F         	movff	sendMessage@data3,_tmpMessage+4
 33225                           
 33226                           ;../../VLCBlib_PIC/vlcb.c: 1232:     tmpMessage.bytes[3] = data4;
 33227   00A95E  C1BE  F1A0         	movff	sendMessage@data4,_tmpMessage+5
 33228                           
 33229                           ;../../VLCBlib_PIC/vlcb.c: 1233:     tmpMessage.bytes[4] = data5;
 33230   00A962  C1BF  F1A1         	movff	sendMessage@data5,_tmpMessage+6
 33231                           
 33232                           ;../../VLCBlib_PIC/vlcb.c: 1234:     tmpMessage.bytes[5] = data6;
 33233   00A966  C1C0  F1A2         	movff	sendMessage@data6,_tmpMessage+7
 33234                           
 33235                           ;../../VLCBlib_PIC/vlcb.c: 1235:     tmpMessage.bytes[6] = data7;
 33236   00A96A  C1C1  F1A3         	movff	sendMessage@data7,_tmpMessage+8
 33237                           
 33238                           ;../../VLCBlib_PIC/vlcb.c: 1236:     if (transport != ((void*)0)) {
 33239   00A96E  0101               	movlb	1	; () banked
 33240   00A970  5162               	movf	_transport& (0+255),w,b
 33241   00A972  1163               	iorwf	(_transport+1)& (0+255),w,b
 33242   00A974  B4D8               	btfsc	status,2,c
 33243   00A976  0012               	return	
 33244                           
 33245                           ; BSR set to: 1
 33246                           ;../../VLCBlib_PIC/vlcb.c: 1237:         if (transport->sendMessage != ((void*)0)) {
 33247   00A978  C162  FFF6         	movff	_transport,tblptrl
 33248   00A97C  C163  FFF7         	movff	_transport+1,tblptrh
 33249   00A980                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33250   00A980  6AF8               	clrf	tblptru,c
 33251   00A982                     	endif
 33252   00A982                     	if	0	;tblptru may be non-zero
 33253   00A982                     	endif
 33254   00A982  0009               	tblrd		*+
 33255   00A984  50F5               	movf	tablat,w,c
 33256   00A986  0009               	tblrd		*+
 33257   00A988  10F5               	iorwf	tablat,w,c
 33258   00A98A  B4D8               	btfsc	status,2,c
 33259   00A98C  0012               	return	
 33260                           
 33261                           ; BSR set to: 1
 33262                           ;../../VLCBlib_PIC/vlcb.c: 1238:             transport->sendMessage(&tmpMessage);
 33263   00A98E  0E9B               	movlw	low _tmpMessage
 33264   00A990  0100               	movlb	0	; () banked
 33265   00A992  6F99               	movwf	canSendMessage@mp& (0+255),b
 33266   00A994  0E01               	movlw	high _tmpMessage
 33267   00A996  6F9A               	movwf	(canSendMessage@mp+1)& (0+255),b
 33268   00A998  C162  FFF6         	movff	_transport,tblptrl
 33269   00A99C  C163  FFF7         	movff	_transport+1,tblptrh
 33270   00A9A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33271   00A9A0  6AF8               	clrf	tblptru,c
 33272   00A9A2                     	endif
 33273   00A9A2                     	if	0	;tblptru may be non-zero
 33274   00A9A2                     	endif
 33275   00A9A2  0009               	tblrd		*+
 33276   00A9A4  CFF5 F0A3          	movff	tablat,??_sendMessage
 33277   00A9A8  0009               	tblrd		*+
 33278   00A9AA  CFF5 F0A4          	movff	tablat,??_sendMessage+1
 33279   00A9AE  D801               	call	u19428
 33280   00A9B0  0012               	return	
 33281   00A9B2                     u19428:
 33282   00A9B2  0005               	push	
 33283   00A9B4  6EFA               	movwf	pclath,c
 33284   00A9B6  51A3               	movf	??_sendMessage& (0+255),w,b
 33285   00A9B8  6EFD               	movwf	tosl,c
 33286   00A9BA  51A4               	movf	(??_sendMessage+1)& (0+255),w,b
 33287   00A9BC  6EFE               	movwf	tosh,c
 33288   00A9BE  6AFF               	clrf	tosu,c
 33289   00A9C0  50FA               	movf	pclath,w,c
 33290   00A9C2  0012               	return		;indir
 33291   00A9C4                     __end_of_sendMessage:
 33292                           	callstack 0
 33293                           
 33294 ;; *************** function _canSendMessage *****************
 33295 ;; Defined at:
 33296 ;;		line 493 in file "../../VLCBlib_PIC/can18_ecan.c"
 33297 ;; Parameters:    Size  Location     Type
 33298 ;;  mp              2   57[BANK0 ] PTR struct Message
 33299 ;;		 -> tmpMessage(9), 
 33300 ;; Auto vars:     Size  Location     Type
 33301 ;;  m               2   65[BANK0 ] PTR struct Message
 33302 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 33303 ;;  no              1   64[BANK0 ] unsigned char 
 33304 ;; Return value:  Size  Location     Type
 33305 ;;                  1    wreg      enum E13081
 33306 ;; Registers used:
 33307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33308 ;; Tracked objects:
 33309 ;;		On entry : 0/0
 33310 ;;		On exit  : 0/0
 33311 ;;		Unchanged: 0/0
 33312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33313 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33314 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33315 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33316 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33317 ;;Total ram usage:       10 bytes
 33318 ;; Hardware stack levels used: 1
 33319 ;; Hardware stack levels required when called: 14
 33320 ;; This function calls:
 33321 ;;		_getNextWriteMessage
 33322 ;;		_getNumTxBuffersInUse
 33323 ;;		_have
 33324 ;;		_isEvent
 33325 ;;		_push
 33326 ;;		_quantity
 33327 ;;		_updateModuleErrorStatus
 33328 ;; This function is called by:
 33329 ;;		_sendMessage
 33330 ;; This function uses a non-reentrant model
 33331 ;;
 33332                           
 33333                           	psect	text132
 33334   0049AC                     __ptext132:
 33335                           	callstack 0
 33336   0049AC                     _canSendMessage:
 33337                           	callstack 11
 33338                           
 33339                           ;../../VLCBlib_PIC/can18_ecan.c: 495:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          98:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 502:     PIE5bits.TXBnIE = 0;
 33340                           
 33341                           ;incstack = 0
 33342   0049AC  9876               	bcf	118,4,c	;volatile
 33343                           
 33344                           ;../../VLCBlib_PIC/can18_ecan.c: 503:     if (quantity(&txQueue) == 0) {
 33345   0049AE  0E4A               	movlw	low _txQueue
 33346   0049B0  0100               	movlb	0	; () banked
 33347   0049B2  6F8D               	movwf	quantity@q& (0+255),b
 33348   0049B4  EC02  F05F         	call	_quantity	;wreg free
 33349   0049B8  0900               	iorlw	0
 33350   0049BA  A4D8               	btfss	status,2,c
 33351   0049BC  D150               	goto	l19410
 33352                           
 33353                           ;../../VLCBlib_PIC/can18_ecan.c: 505:         if (TXB0CONbits.TXREQ == 0) {
 33354   0049BE  010F               	movlb	15	; () banked
 33355   0049C0  B720               	btfsc	32,3,b	;volatile
 33356   0049C2  D14D               	goto	l19410
 33357                           
 33358                           ; BSR set to: 15
 33359                           ;../../VLCBlib_PIC/can18_ecan.c: 507:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 33360   0049C4  0100               	movlb	0	; () banked
 33361   0049C6  51C1               	movf	_canId& (0+255),w,b
 33362   0049C8  A4D8               	btfss	status,2,c
 33363   0049CA  D007               	goto	l19346
 33364                           
 33365                           ; BSR set to: 0
 33366   0049CC  51BF               	movf	_enumerationState& (0+255),w,b
 33367   0049CE  A4D8               	btfss	status,2,c
 33368   0049D0  D004               	goto	l19346
 33369                           
 33370                           ; BSR set to: 0
 33371                           ;../../VLCBlib_PIC/can18_ecan.c: 508:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 33372   0049D2  0E01               	movlw	1
 33373   0049D4  6FBF               	movwf	_enumerationState& (0+255),b
 33374                           
 33375                           ;../../VLCBlib_PIC/can18_ecan.c: 509:                 canId = 1;
 33376   0049D6  0E01               	movlw	1
 33377   0049D8  6FC1               	movwf	_canId& (0+255),b
 33378   0049DA                     l19346:
 33379                           
 33380                           ; BSR set to: 0
 33381                           ;../../VLCBlib_PIC/can18_ecan.c: 511:             PIE5bits.TXBnIE = 1;
 33382   0049DA  8876               	bsf	118,4,c	;volatile
 33383                           
 33384                           ; BSR set to: 0
 33385                           ;../../VLCBlib_PIC/can18_ecan.c: 513:             if (mp->len >8) mp->len = 8;
 33386   0049DC  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33387   0049E0  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33388   0049E4  0E08               	movlw	8
 33389   0049E6  64DF               	cpfsgt	indf2,c
 33390   0049E8  D006               	goto	l19352
 33391                           
 33392                           ; BSR set to: 0
 33393   0049EA  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33394   0049EE  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33395   0049F2  0E08               	movlw	8
 33396   0049F4  6EDF               	movwf	indf2,c
 33397   0049F6                     l19352:
 33398                           
 33399                           ; BSR set to: 0
 33400                           ;../../VLCBlib_PIC/can18_ecan.c: 515:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 33401   0049F6  EE20 F001          	lfsr	2,1
 33402   0049FA  5199               	movf	canSendMessage@mp& (0+255),w,b
 33403   0049FC  26D9               	addwf	fsr2l,f,c
 33404   0049FE  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33405   004A00  22DA               	addwfc	fsr2h,f,c
 33406   004A02  50DF               	movf	indf2,w,c
 33407   004A04  6F9B               	movwf	??_canSendMessage& (0+255),b
 33408   004A06  6B9C               	clrf	(??_canSendMessage+1)& (0+255),b
 33409   004A08  0E29               	movlw	low _priorities
 33410   004A0A  259B               	addwf	??_canSendMessage& (0+255),w,b
 33411   004A0C  6EF6               	movwf	tblptrl,c
 33412   004A0E  0EED               	movlw	high _priorities
 33413   004A10  219C               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 33414   004A12  6EF7               	movwf	tblptrh,c
 33415   004A14                     	if	1	;There are 3 active tblptr bytes
 33416   004A14  6AF8               	clrf	tblptru,c
 33417   004A16  0E00               	movlw	low (__mediumconst shr (0+16))
 33418   004A18  22F8               	addwfc	tblptru,f,c
 33419   004A1A                     	endif
 33420   004A1A  0008               	tblrd		*
 33421   004A1C  50F5               	movf	tablat,w,c
 33422   004A1E  6F9D               	movwf	(??_canSendMessage+2)& (0+255),b
 33423   004A20  6B9E               	clrf	(??_canSendMessage+3)& (0+255),b
 33424   004A22  0E86               	movlw	low _canPri
 33425   004A24  259D               	addwf	(??_canSendMessage+2)& (0+255),w,b
 33426   004A26  6EF6               	movwf	tblptrl,c
 33427   004A28  0EEE               	movlw	high _canPri
 33428   004A2A  219E               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 33429   004A2C  6EF7               	movwf	tblptrh,c
 33430   004A2E                     	if	1	;There are 3 active tblptr bytes
 33431   004A2E  6AF8               	clrf	tblptru,c
 33432   004A30  0E00               	movlw	low (__mediumconst shr (0+16))
 33433   004A32  22F8               	addwfc	tblptru,f,c
 33434   004A34                     	endif
 33435   004A34  0008               	tblrd		*
 33436   004A36  CFF5 F09F          	movff	tablat,??_canSendMessage+4
 33437   004A3A  39C1               	swapf	_canId& (0+255),w,b
 33438   004A3C  46E8               	rlncf	wreg,f,c
 33439   004A3E  0B1F               	andlw	31
 33440   004A40  0B0F               	andlw	15
 33441   004A42  119F               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 33442   004A44  010F               	movlb	15	; () banked
 33443   004A46  6F21               	movwf	33,b	;volatile
 33444                           
 33445                           ; BSR set to: 15
 33446                           ;../../VLCBlib_PIC/can18_ecan.c: 516:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 33447   004A48  C0C1  F09B         	movff	_canId,??_canSendMessage
 33448   004A4C  0E07               	movlw	7
 33449   004A4E  0100               	movlb	0	; () banked
 33450   004A50  179B               	andwf	??_canSendMessage& (0+255),f,b
 33451   004A52  0E05               	movlw	5
 33452   004A54  6F9C               	movwf	(??_canSendMessage+1)& (0+255),b
 33453   004A56                     u19085:
 33454   004A56  90D8               	bcf	status,0,c
 33455   004A58  379B               	rlcf	??_canSendMessage& (0+255),f,b
 33456   004A5A  2F9C               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 33457   004A5C  D7FC               	goto	u19085
 33458   004A5E  519B               	movf	??_canSendMessage& (0+255),w,b
 33459   004A60  010F               	movlb	15	; () banked
 33460   004A62  6F22               	movwf	34,b	;volatile
 33461                           
 33462                           ; BSR set to: 15
 33463                           ;../../VLCBlib_PIC/can18_ecan.c: 517:             TXB0D0 = mp->opc;
 33464   004A64  0100               	movlb	0	; () banked
 33465   004A66  EE20 F001          	lfsr	2,1
 33466   004A6A  5199               	movf	canSendMessage@mp& (0+255),w,b
 33467   004A6C  26D9               	addwf	fsr2l,f,c
 33468   004A6E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33469   004A70  22DA               	addwfc	fsr2h,f,c
 33470   004A72  50DF               	movf	indf2,w,c
 33471   004A74  010F               	movlb	15	; () banked
 33472   004A76  6F26               	movwf	38,b	;volatile
 33473                           
 33474                           ; BSR set to: 15
 33475                           ;../../VLCBlib_PIC/can18_ecan.c: 518:             TXB0D1 = mp->bytes[0];
 33476   004A78  0100               	movlb	0	; () banked
 33477   004A7A  EE20 F002          	lfsr	2,2
 33478   004A7E  5199               	movf	canSendMessage@mp& (0+255),w,b
 33479   004A80  26D9               	addwf	fsr2l,f,c
 33480   004A82  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33481   004A84  22DA               	addwfc	fsr2h,f,c
 33482   004A86  50DF               	movf	indf2,w,c
 33483   004A88  010F               	movlb	15	; () banked
 33484   004A8A  6F27               	movwf	39,b	;volatile
 33485                           
 33486                           ; BSR set to: 15
 33487                           ;../../VLCBlib_PIC/can18_ecan.c: 519:             TXB0D2 = mp->bytes[1];
 33488   004A8C  0100               	movlb	0	; () banked
 33489   004A8E  EE20 F003          	lfsr	2,3
 33490   004A92  5199               	movf	canSendMessage@mp& (0+255),w,b
 33491   004A94  26D9               	addwf	fsr2l,f,c
 33492   004A96  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33493   004A98  22DA               	addwfc	fsr2h,f,c
 33494   004A9A  50DF               	movf	indf2,w,c
 33495   004A9C  010F               	movlb	15	; () banked
 33496   004A9E  6F28               	movwf	40,b	;volatile
 33497                           
 33498                           ; BSR set to: 15
 33499                           ;../../VLCBlib_PIC/can18_ecan.c: 520:             TXB0D3 = mp->bytes[2];
 33500   004AA0  0100               	movlb	0	; () banked
 33501   004AA2  EE20 F004          	lfsr	2,4
 33502   004AA6  5199               	movf	canSendMessage@mp& (0+255),w,b
 33503   004AA8  26D9               	addwf	fsr2l,f,c
 33504   004AAA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33505   004AAC  22DA               	addwfc	fsr2h,f,c
 33506   004AAE  50DF               	movf	indf2,w,c
 33507   004AB0  010F               	movlb	15	; () banked
 33508   004AB2  6F29               	movwf	41,b	;volatile
 33509                           
 33510                           ; BSR set to: 15
 33511                           ;../../VLCBlib_PIC/can18_ecan.c: 521:             TXB0D4 = mp->bytes[3];
 33512   004AB4  0100               	movlb	0	; () banked
 33513   004AB6  EE20 F005          	lfsr	2,5
 33514   004ABA  5199               	movf	canSendMessage@mp& (0+255),w,b
 33515   004ABC  26D9               	addwf	fsr2l,f,c
 33516   004ABE  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33517   004AC0  22DA               	addwfc	fsr2h,f,c
 33518   004AC2  50DF               	movf	indf2,w,c
 33519   004AC4  010F               	movlb	15	; () banked
 33520   004AC6  6F2A               	movwf	42,b	;volatile
 33521                           
 33522                           ; BSR set to: 15
 33523                           ;../../VLCBlib_PIC/can18_ecan.c: 522:             TXB0D5 = mp->bytes[4];
 33524   004AC8  0100               	movlb	0	; () banked
 33525   004ACA  EE20 F006          	lfsr	2,6
 33526   004ACE  5199               	movf	canSendMessage@mp& (0+255),w,b
 33527   004AD0  26D9               	addwf	fsr2l,f,c
 33528   004AD2  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33529   004AD4  22DA               	addwfc	fsr2h,f,c
 33530   004AD6  50DF               	movf	indf2,w,c
 33531   004AD8  010F               	movlb	15	; () banked
 33532   004ADA  6F2B               	movwf	43,b	;volatile
 33533                           
 33534                           ; BSR set to: 15
 33535                           ;../../VLCBlib_PIC/can18_ecan.c: 523:             TXB0D6 = mp->bytes[5];
 33536   004ADC  0100               	movlb	0	; () banked
 33537   004ADE  EE20 F007          	lfsr	2,7
 33538   004AE2  5199               	movf	canSendMessage@mp& (0+255),w,b
 33539   004AE4  26D9               	addwf	fsr2l,f,c
 33540   004AE6  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33541   004AE8  22DA               	addwfc	fsr2h,f,c
 33542   004AEA  50DF               	movf	indf2,w,c
 33543   004AEC  010F               	movlb	15	; () banked
 33544   004AEE  6F2C               	movwf	44,b	;volatile
 33545                           
 33546                           ; BSR set to: 15
 33547                           ;../../VLCBlib_PIC/can18_ecan.c: 524:             TXB0D7 = mp->bytes[6];
 33548   004AF0  0100               	movlb	0	; () banked
 33549   004AF2  EE20 F008          	lfsr	2,8
 33550   004AF6  5199               	movf	canSendMessage@mp& (0+255),w,b
 33551   004AF8  26D9               	addwf	fsr2l,f,c
 33552   004AFA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33553   004AFC  22DA               	addwfc	fsr2h,f,c
 33554   004AFE  50DF               	movf	indf2,w,c
 33555   004B00  010F               	movlb	15	; () banked
 33556   004B02  6F2D               	movwf	45,b	;volatile
 33557                           
 33558                           ; BSR set to: 15
 33559                           ;../../VLCBlib_PIC/can18_ecan.c: 525:             TXB0DLC = mp->len & 0x0F;
 33560   004B04  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33561   004B08  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33562   004B0C  50DF               	movf	indf2,w,c
 33563   004B0E  0B0F               	andlw	15
 33564   004B10  6F25               	movwf	37,b	;volatile
 33565                           
 33566                           ; BSR set to: 15
 33567                           ;../../VLCBlib_PIC/can18_ecan.c: 527:             TXB0CONbits.TXREQ = 1;
 33568   004B12  8720               	bsf	32,3,b	;volatile
 33569                           
 33570                           ; BSR set to: 15
 33571                           ;../../VLCBlib_PIC/can18_ecan.c: 529:             canDiagnostics[0x06].asUint++;
 33572   004B14  0101               	movlb	1	; () banked
 33573   004B16  4B73               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 33574   004B18  2B74               	incf	(_canDiagnostics+13)& (0+255),f,b
 33575                           
 33576                           ; BSR set to: 1
 33577                           ;../../VLCBlib_PIC/can18_ecan.c: 534:             if (isEvent(mp->opc)) {
 33578   004B1A  0100               	movlb	0	; () banked
 33579   004B1C  EE20 F001          	lfsr	2,1
 33580   004B20  5199               	movf	canSendMessage@mp& (0+255),w,b
 33581   004B22  26D9               	addwf	fsr2l,f,c
 33582   004B24  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33583   004B26  22DA               	addwfc	fsr2h,f,c
 33584   004B28  50DF               	movf	indf2,w,c
 33585   004B2A  EC3B  F061         	call	_isEvent
 33586   004B2E  0900               	iorlw	0
 33587   004B30  B4D8               	btfsc	status,2,c
 33588   004B32  0012               	return	
 33589                           
 33590                           ;../../VLCBlib_PIC/can18_ecan.c: 535:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 33591   004B34  0E08               	movlw	8
 33592   004B36  ECF8  F056         	call	_have
 33593   004B3A  0900               	iorlw	0
 33594   004B3C  B4D8               	btfsc	status,2,c
 33595   004B3E  0012               	return	
 33596                           
 33597                           ;../../VLCBlib_PIC/can18_ecan.c: 537:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 33598   004B40  0E4F               	movlw	low _rxQueue
 33599   004B42  0100               	movlb	0	; () banked
 33600   004B44  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 33601   004B46  ECC0  F045         	call	_getNextWriteMessage	;wreg free
 33602   004B4A  C08D  F0A1         	movff	?_getNextWriteMessage,canSendMessage@m
 33603   004B4E  C08E  F0A2         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 33604                           
 33605                           ;../../VLCBlib_PIC/can18_ecan.c: 538:                     if (m == ((void*)0)) {
 33606   004B52  0100               	movlb	0	; () banked
 33607   004B54  51A1               	movf	canSendMessage@m& (0+255),w,b
 33608   004B56  11A2               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 33609   004B58  A4D8               	btfss	status,2,c
 33610   004B5A  D006               	goto	l19390
 33611                           
 33612                           ; BSR set to: 0
 33613                           ;../../VLCBlib_PIC/can18_ecan.c: 540:                         canDiagnostics[0x08].asUin
      +                          t++;
 33614   004B5C  0101               	movlb	1	; () banked
 33615   004B5E  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 33616   004B60  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 33617                           
 33618                           ; BSR set to: 1
 33619                           ;../../VLCBlib_PIC/can18_ecan.c: 541:                         updateModuleErrorStatus();
 33620   004B62  ECED  F062         	call	_updateModuleErrorStatus	;wreg free
 33621                           
 33622                           ;../../VLCBlib_PIC/can18_ecan.c: 543:                     } else {
 33623   004B66  0012               	return	
 33624   004B68                     l19390:
 33625                           
 33626                           ; BSR set to: 0
 33627                           ;../../VLCBlib_PIC/can18_ecan.c: 545:                         m->opc = mp->opc;
 33628   004B68  EE20 F001          	lfsr	2,1
 33629   004B6C  5199               	movf	canSendMessage@mp& (0+255),w,b
 33630   004B6E  26D9               	addwf	fsr2l,f,c
 33631   004B70  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33632   004B72  22DA               	addwfc	fsr2h,f,c
 33633   004B74  EE10 F001          	lfsr	1,1
 33634   004B78  51A1               	movf	canSendMessage@m& (0+255),w,b
 33635   004B7A  26E1               	addwf	fsr1l,f,c
 33636   004B7C  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33637   004B7E  22E2               	addwfc	fsr1h,f,c
 33638   004B80  CFDF FFE7          	movff	indf2,indf1
 33639                           
 33640                           ; BSR set to: 0
 33641                           ;../../VLCBlib_PIC/can18_ecan.c: 546:                         m->len = mp->len;
 33642   004B84  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33643   004B88  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33644   004B8C  C0A1  FFE1         	movff	canSendMessage@m,fsr1l
 33645   004B90  C0A2  FFE2         	movff	canSendMessage@m+1,fsr1h
 33646   004B94  CFDF FFE7          	movff	indf2,indf1
 33647                           
 33648                           ; BSR set to: 0
 33649                           ;../../VLCBlib_PIC/can18_ecan.c: 547:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 33650   004B98  EE20 F002          	lfsr	2,2
 33651   004B9C  5199               	movf	canSendMessage@mp& (0+255),w,b
 33652   004B9E  26D9               	addwf	fsr2l,f,c
 33653   004BA0  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33654   004BA2  22DA               	addwfc	fsr2h,f,c
 33655   004BA4  EE10 F002          	lfsr	1,2
 33656   004BA8  51A1               	movf	canSendMessage@m& (0+255),w,b
 33657   004BAA  26E1               	addwf	fsr1l,f,c
 33658   004BAC  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33659   004BAE  22E2               	addwfc	fsr1h,f,c
 33660   004BB0  CFDF FFE7          	movff	indf2,indf1
 33661                           
 33662                           ; BSR set to: 0
 33663                           ;../../VLCBlib_PIC/can18_ecan.c: 548:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 33664   004BB4  EE20 F003          	lfsr	2,3
 33665   004BB8  5199               	movf	canSendMessage@mp& (0+255),w,b
 33666   004BBA  26D9               	addwf	fsr2l,f,c
 33667   004BBC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33668   004BBE  22DA               	addwfc	fsr2h,f,c
 33669   004BC0  EE10 F003          	lfsr	1,3
 33670   004BC4  51A1               	movf	canSendMessage@m& (0+255),w,b
 33671   004BC6  26E1               	addwf	fsr1l,f,c
 33672   004BC8  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33673   004BCA  22E2               	addwfc	fsr1h,f,c
 33674   004BCC  CFDF FFE7          	movff	indf2,indf1
 33675                           
 33676                           ; BSR set to: 0
 33677                           ;../../VLCBlib_PIC/can18_ecan.c: 549:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 33678   004BD0  EE20 F004          	lfsr	2,4
 33679   004BD4  5199               	movf	canSendMessage@mp& (0+255),w,b
 33680   004BD6  26D9               	addwf	fsr2l,f,c
 33681   004BD8  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33682   004BDA  22DA               	addwfc	fsr2h,f,c
 33683   004BDC  EE10 F004          	lfsr	1,4
 33684   004BE0  51A1               	movf	canSendMessage@m& (0+255),w,b
 33685   004BE2  26E1               	addwf	fsr1l,f,c
 33686   004BE4  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33687   004BE6  22E2               	addwfc	fsr1h,f,c
 33688   004BE8  CFDF FFE7          	movff	indf2,indf1
 33689                           
 33690                           ; BSR set to: 0
 33691                           ;../../VLCBlib_PIC/can18_ecan.c: 550:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 33692   004BEC  EE20 F005          	lfsr	2,5
 33693   004BF0  5199               	movf	canSendMessage@mp& (0+255),w,b
 33694   004BF2  26D9               	addwf	fsr2l,f,c
 33695   004BF4  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33696   004BF6  22DA               	addwfc	fsr2h,f,c
 33697   004BF8  EE10 F005          	lfsr	1,5
 33698   004BFC  51A1               	movf	canSendMessage@m& (0+255),w,b
 33699   004BFE  26E1               	addwf	fsr1l,f,c
 33700   004C00  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33701   004C02  22E2               	addwfc	fsr1h,f,c
 33702   004C04  CFDF FFE7          	movff	indf2,indf1
 33703                           
 33704                           ; BSR set to: 0
 33705                           ;../../VLCBlib_PIC/can18_ecan.c: 551:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 33706   004C08  EE20 F006          	lfsr	2,6
 33707   004C0C  5199               	movf	canSendMessage@mp& (0+255),w,b
 33708   004C0E  26D9               	addwf	fsr2l,f,c
 33709   004C10  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33710   004C12  22DA               	addwfc	fsr2h,f,c
 33711   004C14  EE10 F006          	lfsr	1,6
 33712   004C18  51A1               	movf	canSendMessage@m& (0+255),w,b
 33713   004C1A  26E1               	addwf	fsr1l,f,c
 33714   004C1C  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33715   004C1E  22E2               	addwfc	fsr1h,f,c
 33716   004C20  CFDF FFE7          	movff	indf2,indf1
 33717                           
 33718                           ; BSR set to: 0
 33719                           ;../../VLCBlib_PIC/can18_ecan.c: 552:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 33720   004C24  EE20 F007          	lfsr	2,7
 33721   004C28  5199               	movf	canSendMessage@mp& (0+255),w,b
 33722   004C2A  26D9               	addwf	fsr2l,f,c
 33723   004C2C  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33724   004C2E  22DA               	addwfc	fsr2h,f,c
 33725   004C30  EE10 F007          	lfsr	1,7
 33726   004C34  51A1               	movf	canSendMessage@m& (0+255),w,b
 33727   004C36  26E1               	addwf	fsr1l,f,c
 33728   004C38  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33729   004C3A  22E2               	addwfc	fsr1h,f,c
 33730   004C3C  CFDF FFE7          	movff	indf2,indf1
 33731                           
 33732                           ; BSR set to: 0
 33733                           ;../../VLCBlib_PIC/can18_ecan.c: 553:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 33734   004C40  EE20 F008          	lfsr	2,8
 33735   004C44  5199               	movf	canSendMessage@mp& (0+255),w,b
 33736   004C46  26D9               	addwf	fsr2l,f,c
 33737   004C48  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33738   004C4A  22DA               	addwfc	fsr2h,f,c
 33739   004C4C  EE10 F008          	lfsr	1,8
 33740   004C50  51A1               	movf	canSendMessage@m& (0+255),w,b
 33741   004C52  26E1               	addwf	fsr1l,f,c
 33742   004C54  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33743   004C56  22E2               	addwfc	fsr1h,f,c
 33744   004C58  CFDF FFE7          	movff	indf2,indf1
 33745   004C5C  0012               	return	
 33746   004C5E                     l19410:
 33747                           
 33748                           ;../../VLCBlib_PIC/can18_ecan.c: 562:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 33749   004C5E  0E4A               	movlw	low _txQueue
 33750   004C60  0100               	movlb	0	; () banked
 33751   004C62  6F8D               	movwf	push@q& (0+255),b
 33752   004C64  C099  F08E         	movff	canSendMessage@mp,push@m
 33753   004C68  C09A  F08F         	movff	canSendMessage@mp+1,push@m+1
 33754   004C6C  ECF1  F01F         	call	_push	;wreg free
 33755   004C70  0900               	iorlw	0
 33756   004C72  A4D8               	btfss	status,2,c
 33757   004C74  D007               	goto	l19420
 33758                           
 33759                           ;../../VLCBlib_PIC/can18_ecan.c: 564:         canDiagnostics[0x05].asUint++;
 33760   004C76  0101               	movlb	1	; () banked
 33761   004C78  4B71               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 33762   004C7A  2B72               	incf	(_canDiagnostics+11)& (0+255),f,b
 33763                           
 33764                           ; BSR set to: 1
 33765                           ;../../VLCBlib_PIC/can18_ecan.c: 565:         updateModuleErrorStatus();
 33766   004C7C  ECED  F062         	call	_updateModuleErrorStatus	;wreg free
 33767                           
 33768                           ;../../VLCBlib_PIC/can18_ecan.c: 567:         PIE5bits.TXBnIE = 1;
 33769   004C80  8876               	bsf	118,4,c	;volatile
 33770   004C82  0012               	return	
 33771   004C84                     l19420:
 33772                           
 33773                           ;../../VLCBlib_PIC/can18_ecan.c: 571:     no = getNumTxBuffersInUse();
 33774   004C84  ECE7  F062         	call	_getNumTxBuffersInUse	;wreg free
 33775   004C88  0100               	movlb	0	; () banked
 33776   004C8A  6FA0               	movwf	canSendMessage@no& (0+255),b
 33777                           
 33778                           ; BSR set to: 0
 33779                           ;../../VLCBlib_PIC/can18_ecan.c: 572:     if (canDiagnostics[0x11].asUint < no) {
 33780   004C8C  51A0               	movf	canSendMessage@no& (0+255),w,b
 33781   004C8E  0101               	movlb	1	; () banked
 33782   004C90  5D89               	subwf	(_canDiagnostics+34)& (0+255),w,b
 33783   004C92  0E00               	movlw	0
 33784   004C94  598A               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 33785   004C96  B0D8               	btfsc	status,0,c
 33786   004C98  D003               	goto	l2510
 33787                           
 33788                           ; BSR set to: 1
 33789                           ;../../VLCBlib_PIC/can18_ecan.c: 573:         canDiagnostics[0x11].asUint = no;
 33790   004C9A  C0A0  F189         	movff	canSendMessage@no,_canDiagnostics+34
 33791   004C9E  6B8A               	clrf	(_canDiagnostics+35)& (0+255),b
 33792   004CA0                     l2510:
 33793                           
 33794                           ; BSR set to: 1
 33795                           ;../../VLCBlib_PIC/can18_ecan.c: 576:     PIE5bits.TXBnIE = 1;
 33796   004CA0  8876               	bsf	118,4,c	;volatile
 33797                           
 33798                           ;../../VLCBlib_PIC/can18_ecan.c: 577:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 33799   004CA2  0012               	return		;funcret
 33800   004CA4                     __end_of_canSendMessage:
 33801                           	callstack 0
 33802                           
 33803 ;; *************** function _push *****************
 33804 ;; Defined at:
 33805 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 33806 ;; Parameters:    Size  Location     Type
 33807 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33808 ;;		 -> txQueue(5), 
 33809 ;;  m               2   46[BANK0 ] PTR struct Message
 33810 ;;		 -> tmpMessage(9), 
 33811 ;; Auto vars:     Size  Location     Type
 33812 ;;		None
 33813 ;; Return value:  Size  Location     Type
 33814 ;;                  1    wreg      enum E12934
 33815 ;; Registers used:
 33816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33817 ;; Tracked objects:
 33818 ;;		On entry : 0/0
 33819 ;;		On exit  : 0/0
 33820 ;;		Unchanged: 0/0
 33821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33822 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33824 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33825 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33826 ;;Total ram usage:       12 bytes
 33827 ;; Hardware stack levels used: 1
 33828 ;; Hardware stack levels required when called: 12
 33829 ;; This function calls:
 33830 ;;		Nothing
 33831 ;; This function is called by:
 33832 ;;		_canSendMessage
 33833 ;; This function uses a non-reentrant model
 33834 ;;
 33835                           
 33836                           	psect	text133
 33837   003FE2                     __ptext133:
 33838                           	callstack 0
 33839   003FE2                     _push:
 33840                           	callstack 12
 33841                           
 33842                           ;incstack = 0
 33843   003FE2  0100               	movlb	0	; () banked
 33844   003FE4  518D               	movf	push@q& (0+255),w,b
 33845   003FE6  6ED9               	movwf	fsr2l,c
 33846   003FE8  6ADA               	clrf	fsr2h,c
 33847   003FEA  0E02               	movlw	2
 33848   003FEC  26D9               	addwf	fsr2l,f,c
 33849   003FEE  50DF               	movf	indf2,w,c
 33850   003FF0  6F90               	movwf	??_push& (0+255),b
 33851   003FF2  6B91               	clrf	(??_push+1)& (0+255),b
 33852   003FF4  518D               	movf	push@q& (0+255),w,b
 33853   003FF6  6ED9               	movwf	fsr2l,c
 33854   003FF8  6ADA               	clrf	fsr2h,c
 33855   003FFA  0E04               	movlw	4
 33856   003FFC  26D9               	addwf	fsr2l,f,c
 33857   003FFE  50DF               	movf	indf2,w,c
 33858   004000  6F92               	movwf	(??_push+2)& (0+255),b
 33859   004002  0EFF               	movlw	255
 33860   004004  2592               	addwf	(??_push+2)& (0+255),w,b
 33861   004006  6F93               	movwf	(??_push+3)& (0+255),b
 33862   004008  6B94               	clrf	(??_push+4)& (0+255),b
 33863   00400A  0EFF               	movlw	255
 33864   00400C  2394               	addwfc	(??_push+4)& (0+255),f,b
 33865   00400E  518D               	movf	push@q& (0+255),w,b
 33866   004010  6ED9               	movwf	fsr2l,c
 33867   004012  6ADA               	clrf	fsr2h,c
 33868   004014  0E03               	movlw	3
 33869   004016  26D9               	addwf	fsr2l,f,c
 33870   004018  50DF               	movf	indf2,w,c
 33871   00401A  6F95               	movwf	(??_push+5)& (0+255),b
 33872   00401C  6B96               	clrf	(??_push+6)& (0+255),b
 33873   00401E  0E01               	movlw	1
 33874   004020  2795               	addwf	(??_push+5)& (0+255),f,b
 33875   004022  0E00               	movlw	0
 33876   004024  2396               	addwfc	(??_push+6)& (0+255),f,b
 33877   004026  5193               	movf	(??_push+3)& (0+255),w,b
 33878   004028  1595               	andwf	(??_push+5)& (0+255),w,b
 33879   00402A  6F97               	movwf	(??_push+7)& (0+255),b
 33880   00402C  5194               	movf	(??_push+4)& (0+255),w,b
 33881   00402E  1596               	andwf	(??_push+6)& (0+255),w,b
 33882   004030  6F98               	movwf	(??_push+8)& (0+255),b
 33883   004032  5190               	movf	??_push& (0+255),w,b
 33884   004034  1997               	xorwf	(??_push+7)& (0+255),w,b
 33885   004036  E106               	bnz	l19212
 33886   004038  5191               	movf	(??_push+1)& (0+255),w,b
 33887   00403A  1998               	xorwf	(??_push+8)& (0+255),w,b
 33888   00403C  A4D8               	btfss	status,2,c
 33889   00403E  D002               	goto	l19212
 33890                           
 33891                           ; BSR set to: 0
 33892   004040  0E00               	movlw	0
 33893   004042  0012               	return	
 33894   004044                     l19212:
 33895                           
 33896                           ; BSR set to: 0
 33897   004044  EE20 F001          	lfsr	2,1
 33898   004048  518E               	movf	push@m& (0+255),w,b
 33899   00404A  26D9               	addwf	fsr2l,f,c
 33900   00404C  518F               	movf	(push@m+1)& (0+255),w,b
 33901   00404E  22DA               	addwfc	fsr2h,f,c
 33902   004050  518D               	movf	push@q& (0+255),w,b
 33903   004052  6EE1               	movwf	fsr1l,c
 33904   004054  6AE2               	clrf	fsr1h,c
 33905   004056  0E03               	movlw	3
 33906   004058  26E1               	addwf	fsr1l,f,c
 33907   00405A  50E7               	movf	indf1,w,c
 33908   00405C  6F90               	movwf	??_push& (0+255),b
 33909   00405E  5190               	movf	??_push& (0+255),w,b
 33910   004060  0D09               	mullw	9
 33911   004062  CFF3 F091          	movff	prodl,??_push+1
 33912   004066  CFF4 F092          	movff	prodh,??_push+2
 33913   00406A  518D               	movf	push@q& (0+255),w,b
 33914   00406C  6EE1               	movwf	fsr1l,c
 33915   00406E  6AE2               	clrf	fsr1h,c
 33916   004070  CFE6 F093          	movff	postinc1,??_push+3
 33917   004074  CFE5 F094          	movff	postdec1,??_push+4
 33918   004078  5191               	movf	(??_push+1)& (0+255),w,b
 33919   00407A  2593               	addwf	(??_push+3)& (0+255),w,b
 33920   00407C  6F95               	movwf	(??_push+5)& (0+255),b
 33921   00407E  5192               	movf	(??_push+2)& (0+255),w,b
 33922   004080  2194               	addwfc	(??_push+4)& (0+255),w,b
 33923   004082  6F96               	movwf	(??_push+6)& (0+255),b
 33924   004084  0E01               	movlw	1
 33925   004086  2595               	addwf	(??_push+5)& (0+255),w,b
 33926   004088  6EE1               	movwf	fsr1l,c
 33927   00408A  0E00               	movlw	0
 33928   00408C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33929   00408E  6EE2               	movwf	fsr1h,c
 33930   004090  CFDF FFE7          	movff	indf2,indf1
 33931   004094  EE20 F002          	lfsr	2,2
 33932   004098  518E               	movf	push@m& (0+255),w,b
 33933   00409A  26D9               	addwf	fsr2l,f,c
 33934   00409C  518F               	movf	(push@m+1)& (0+255),w,b
 33935   00409E  22DA               	addwfc	fsr2h,f,c
 33936   0040A0  518D               	movf	push@q& (0+255),w,b
 33937   0040A2  6EE1               	movwf	fsr1l,c
 33938   0040A4  6AE2               	clrf	fsr1h,c
 33939   0040A6  0E03               	movlw	3
 33940   0040A8  26E1               	addwf	fsr1l,f,c
 33941   0040AA  50E7               	movf	indf1,w,c
 33942   0040AC  6F90               	movwf	??_push& (0+255),b
 33943   0040AE  5190               	movf	??_push& (0+255),w,b
 33944   0040B0  0D09               	mullw	9
 33945   0040B2  CFF3 F091          	movff	prodl,??_push+1
 33946   0040B6  CFF4 F092          	movff	prodh,??_push+2
 33947   0040BA  518D               	movf	push@q& (0+255),w,b
 33948   0040BC  6EE1               	movwf	fsr1l,c
 33949   0040BE  6AE2               	clrf	fsr1h,c
 33950   0040C0  CFE6 F093          	movff	postinc1,??_push+3
 33951   0040C4  CFE5 F094          	movff	postdec1,??_push+4
 33952   0040C8  5191               	movf	(??_push+1)& (0+255),w,b
 33953   0040CA  2593               	addwf	(??_push+3)& (0+255),w,b
 33954   0040CC  6F95               	movwf	(??_push+5)& (0+255),b
 33955   0040CE  5192               	movf	(??_push+2)& (0+255),w,b
 33956   0040D0  2194               	addwfc	(??_push+4)& (0+255),w,b
 33957   0040D2  6F96               	movwf	(??_push+6)& (0+255),b
 33958   0040D4  0E02               	movlw	2
 33959   0040D6  2595               	addwf	(??_push+5)& (0+255),w,b
 33960   0040D8  6EE1               	movwf	fsr1l,c
 33961   0040DA  0E00               	movlw	0
 33962   0040DC  2196               	addwfc	(??_push+6)& (0+255),w,b
 33963   0040DE  6EE2               	movwf	fsr1h,c
 33964   0040E0  CFDF FFE7          	movff	indf2,indf1
 33965   0040E4  EE20 F003          	lfsr	2,3
 33966   0040E8  518E               	movf	push@m& (0+255),w,b
 33967   0040EA  26D9               	addwf	fsr2l,f,c
 33968   0040EC  518F               	movf	(push@m+1)& (0+255),w,b
 33969   0040EE  22DA               	addwfc	fsr2h,f,c
 33970   0040F0  518D               	movf	push@q& (0+255),w,b
 33971   0040F2  6EE1               	movwf	fsr1l,c
 33972   0040F4  6AE2               	clrf	fsr1h,c
 33973   0040F6  0E03               	movlw	3
 33974   0040F8  26E1               	addwf	fsr1l,f,c
 33975   0040FA  50E7               	movf	indf1,w,c
 33976   0040FC  6F90               	movwf	??_push& (0+255),b
 33977   0040FE  5190               	movf	??_push& (0+255),w,b
 33978   004100  0D09               	mullw	9
 33979   004102  CFF3 F091          	movff	prodl,??_push+1
 33980   004106  CFF4 F092          	movff	prodh,??_push+2
 33981   00410A  518D               	movf	push@q& (0+255),w,b
 33982   00410C  6EE1               	movwf	fsr1l,c
 33983   00410E  6AE2               	clrf	fsr1h,c
 33984   004110  CFE6 F093          	movff	postinc1,??_push+3
 33985   004114  CFE5 F094          	movff	postdec1,??_push+4
 33986   004118  5191               	movf	(??_push+1)& (0+255),w,b
 33987   00411A  2593               	addwf	(??_push+3)& (0+255),w,b
 33988   00411C  6F95               	movwf	(??_push+5)& (0+255),b
 33989   00411E  5192               	movf	(??_push+2)& (0+255),w,b
 33990   004120  2194               	addwfc	(??_push+4)& (0+255),w,b
 33991   004122  6F96               	movwf	(??_push+6)& (0+255),b
 33992   004124  0E03               	movlw	3
 33993   004126  2595               	addwf	(??_push+5)& (0+255),w,b
 33994   004128  6EE1               	movwf	fsr1l,c
 33995   00412A  0E00               	movlw	0
 33996   00412C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33997   00412E  6EE2               	movwf	fsr1h,c
 33998   004130  CFDF FFE7          	movff	indf2,indf1
 33999   004134  EE20 F004          	lfsr	2,4
 34000   004138  518E               	movf	push@m& (0+255),w,b
 34001   00413A  26D9               	addwf	fsr2l,f,c
 34002   00413C  518F               	movf	(push@m+1)& (0+255),w,b
 34003   00413E  22DA               	addwfc	fsr2h,f,c
 34004   004140  518D               	movf	push@q& (0+255),w,b
 34005   004142  6EE1               	movwf	fsr1l,c
 34006   004144  6AE2               	clrf	fsr1h,c
 34007   004146  0E03               	movlw	3
 34008   004148  26E1               	addwf	fsr1l,f,c
 34009   00414A  50E7               	movf	indf1,w,c
 34010   00414C  6F90               	movwf	??_push& (0+255),b
 34011   00414E  5190               	movf	??_push& (0+255),w,b
 34012   004150  0D09               	mullw	9
 34013   004152  CFF3 F091          	movff	prodl,??_push+1
 34014   004156  CFF4 F092          	movff	prodh,??_push+2
 34015   00415A  518D               	movf	push@q& (0+255),w,b
 34016   00415C  6EE1               	movwf	fsr1l,c
 34017   00415E  6AE2               	clrf	fsr1h,c
 34018   004160  CFE6 F093          	movff	postinc1,??_push+3
 34019   004164  CFE5 F094          	movff	postdec1,??_push+4
 34020   004168  5191               	movf	(??_push+1)& (0+255),w,b
 34021   00416A  2593               	addwf	(??_push+3)& (0+255),w,b
 34022   00416C  6F95               	movwf	(??_push+5)& (0+255),b
 34023   00416E  5192               	movf	(??_push+2)& (0+255),w,b
 34024   004170  2194               	addwfc	(??_push+4)& (0+255),w,b
 34025   004172  6F96               	movwf	(??_push+6)& (0+255),b
 34026   004174  0E04               	movlw	4
 34027   004176  2595               	addwf	(??_push+5)& (0+255),w,b
 34028   004178  6EE1               	movwf	fsr1l,c
 34029   00417A  0E00               	movlw	0
 34030   00417C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34031   00417E  6EE2               	movwf	fsr1h,c
 34032   004180  CFDF FFE7          	movff	indf2,indf1
 34033   004184  EE20 F005          	lfsr	2,5
 34034   004188  518E               	movf	push@m& (0+255),w,b
 34035   00418A  26D9               	addwf	fsr2l,f,c
 34036   00418C  518F               	movf	(push@m+1)& (0+255),w,b
 34037   00418E  22DA               	addwfc	fsr2h,f,c
 34038   004190  518D               	movf	push@q& (0+255),w,b
 34039   004192  6EE1               	movwf	fsr1l,c
 34040   004194  6AE2               	clrf	fsr1h,c
 34041   004196  0E03               	movlw	3
 34042   004198  26E1               	addwf	fsr1l,f,c
 34043   00419A  50E7               	movf	indf1,w,c
 34044   00419C  6F90               	movwf	??_push& (0+255),b
 34045   00419E  5190               	movf	??_push& (0+255),w,b
 34046   0041A0  0D09               	mullw	9
 34047   0041A2  CFF3 F091          	movff	prodl,??_push+1
 34048   0041A6  CFF4 F092          	movff	prodh,??_push+2
 34049   0041AA  518D               	movf	push@q& (0+255),w,b
 34050   0041AC  6EE1               	movwf	fsr1l,c
 34051   0041AE  6AE2               	clrf	fsr1h,c
 34052   0041B0  CFE6 F093          	movff	postinc1,??_push+3
 34053   0041B4  CFE5 F094          	movff	postdec1,??_push+4
 34054   0041B8  5191               	movf	(??_push+1)& (0+255),w,b
 34055   0041BA  2593               	addwf	(??_push+3)& (0+255),w,b
 34056   0041BC  6F95               	movwf	(??_push+5)& (0+255),b
 34057   0041BE  5192               	movf	(??_push+2)& (0+255),w,b
 34058   0041C0  2194               	addwfc	(??_push+4)& (0+255),w,b
 34059   0041C2  6F96               	movwf	(??_push+6)& (0+255),b
 34060   0041C4  0E05               	movlw	5
 34061   0041C6  2595               	addwf	(??_push+5)& (0+255),w,b
 34062   0041C8  6EE1               	movwf	fsr1l,c
 34063   0041CA  0E00               	movlw	0
 34064   0041CC  2196               	addwfc	(??_push+6)& (0+255),w,b
 34065   0041CE  6EE2               	movwf	fsr1h,c
 34066   0041D0  CFDF FFE7          	movff	indf2,indf1
 34067   0041D4  EE20 F006          	lfsr	2,6
 34068   0041D8  518E               	movf	push@m& (0+255),w,b
 34069   0041DA  26D9               	addwf	fsr2l,f,c
 34070   0041DC  518F               	movf	(push@m+1)& (0+255),w,b
 34071   0041DE  22DA               	addwfc	fsr2h,f,c
 34072   0041E0  518D               	movf	push@q& (0+255),w,b
 34073   0041E2  6EE1               	movwf	fsr1l,c
 34074   0041E4  6AE2               	clrf	fsr1h,c
 34075   0041E6  0E03               	movlw	3
 34076   0041E8  26E1               	addwf	fsr1l,f,c
 34077   0041EA  50E7               	movf	indf1,w,c
 34078   0041EC  6F90               	movwf	??_push& (0+255),b
 34079   0041EE  5190               	movf	??_push& (0+255),w,b
 34080   0041F0  0D09               	mullw	9
 34081   0041F2  CFF3 F091          	movff	prodl,??_push+1
 34082   0041F6  CFF4 F092          	movff	prodh,??_push+2
 34083   0041FA  518D               	movf	push@q& (0+255),w,b
 34084   0041FC  6EE1               	movwf	fsr1l,c
 34085   0041FE  6AE2               	clrf	fsr1h,c
 34086   004200  CFE6 F093          	movff	postinc1,??_push+3
 34087   004204  CFE5 F094          	movff	postdec1,??_push+4
 34088   004208  5191               	movf	(??_push+1)& (0+255),w,b
 34089   00420A  2593               	addwf	(??_push+3)& (0+255),w,b
 34090   00420C  6F95               	movwf	(??_push+5)& (0+255),b
 34091   00420E  5192               	movf	(??_push+2)& (0+255),w,b
 34092   004210  2194               	addwfc	(??_push+4)& (0+255),w,b
 34093   004212  6F96               	movwf	(??_push+6)& (0+255),b
 34094   004214  0E06               	movlw	6
 34095   004216  2595               	addwf	(??_push+5)& (0+255),w,b
 34096   004218  6EE1               	movwf	fsr1l,c
 34097   00421A  0E00               	movlw	0
 34098   00421C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34099   00421E  6EE2               	movwf	fsr1h,c
 34100   004220  CFDF FFE7          	movff	indf2,indf1
 34101   004224  EE20 F007          	lfsr	2,7
 34102   004228  518E               	movf	push@m& (0+255),w,b
 34103   00422A  26D9               	addwf	fsr2l,f,c
 34104   00422C  518F               	movf	(push@m+1)& (0+255),w,b
 34105   00422E  22DA               	addwfc	fsr2h,f,c
 34106   004230  518D               	movf	push@q& (0+255),w,b
 34107   004232  6EE1               	movwf	fsr1l,c
 34108   004234  6AE2               	clrf	fsr1h,c
 34109   004236  0E03               	movlw	3
 34110   004238  26E1               	addwf	fsr1l,f,c
 34111   00423A  50E7               	movf	indf1,w,c
 34112   00423C  6F90               	movwf	??_push& (0+255),b
 34113   00423E  5190               	movf	??_push& (0+255),w,b
 34114   004240  0D09               	mullw	9
 34115   004242  CFF3 F091          	movff	prodl,??_push+1
 34116   004246  CFF4 F092          	movff	prodh,??_push+2
 34117   00424A  518D               	movf	push@q& (0+255),w,b
 34118   00424C  6EE1               	movwf	fsr1l,c
 34119   00424E  6AE2               	clrf	fsr1h,c
 34120   004250  CFE6 F093          	movff	postinc1,??_push+3
 34121   004254  CFE5 F094          	movff	postdec1,??_push+4
 34122   004258  5191               	movf	(??_push+1)& (0+255),w,b
 34123   00425A  2593               	addwf	(??_push+3)& (0+255),w,b
 34124   00425C  6F95               	movwf	(??_push+5)& (0+255),b
 34125   00425E  5192               	movf	(??_push+2)& (0+255),w,b
 34126   004260  2194               	addwfc	(??_push+4)& (0+255),w,b
 34127   004262  6F96               	movwf	(??_push+6)& (0+255),b
 34128   004264  0E07               	movlw	7
 34129   004266  2595               	addwf	(??_push+5)& (0+255),w,b
 34130   004268  6EE1               	movwf	fsr1l,c
 34131   00426A  0E00               	movlw	0
 34132   00426C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34133   00426E  6EE2               	movwf	fsr1h,c
 34134   004270  CFDF FFE7          	movff	indf2,indf1
 34135   004274  EE20 F008          	lfsr	2,8
 34136   004278  518E               	movf	push@m& (0+255),w,b
 34137   00427A  26D9               	addwf	fsr2l,f,c
 34138   00427C  518F               	movf	(push@m+1)& (0+255),w,b
 34139   00427E  22DA               	addwfc	fsr2h,f,c
 34140   004280  518D               	movf	push@q& (0+255),w,b
 34141   004282  6EE1               	movwf	fsr1l,c
 34142   004284  6AE2               	clrf	fsr1h,c
 34143   004286  0E03               	movlw	3
 34144   004288  26E1               	addwf	fsr1l,f,c
 34145   00428A  50E7               	movf	indf1,w,c
 34146   00428C  6F90               	movwf	??_push& (0+255),b
 34147   00428E  5190               	movf	??_push& (0+255),w,b
 34148   004290  0D09               	mullw	9
 34149   004292  CFF3 F091          	movff	prodl,??_push+1
 34150   004296  CFF4 F092          	movff	prodh,??_push+2
 34151   00429A  518D               	movf	push@q& (0+255),w,b
 34152   00429C  6EE1               	movwf	fsr1l,c
 34153   00429E  6AE2               	clrf	fsr1h,c
 34154   0042A0  CFE6 F093          	movff	postinc1,??_push+3
 34155   0042A4  CFE5 F094          	movff	postdec1,??_push+4
 34156   0042A8  5191               	movf	(??_push+1)& (0+255),w,b
 34157   0042AA  2593               	addwf	(??_push+3)& (0+255),w,b
 34158   0042AC  6F95               	movwf	(??_push+5)& (0+255),b
 34159   0042AE  5192               	movf	(??_push+2)& (0+255),w,b
 34160   0042B0  2194               	addwfc	(??_push+4)& (0+255),w,b
 34161   0042B2  6F96               	movwf	(??_push+6)& (0+255),b
 34162   0042B4  0E08               	movlw	8
 34163   0042B6  2595               	addwf	(??_push+5)& (0+255),w,b
 34164   0042B8  6EE1               	movwf	fsr1l,c
 34165   0042BA  0E00               	movlw	0
 34166   0042BC  2196               	addwfc	(??_push+6)& (0+255),w,b
 34167   0042BE  6EE2               	movwf	fsr1h,c
 34168   0042C0  CFDF FFE7          	movff	indf2,indf1
 34169   0042C4  C08E  FFD9         	movff	push@m,fsr2l
 34170   0042C8  C08F  FFDA         	movff	push@m+1,fsr2h
 34171   0042CC  518D               	movf	push@q& (0+255),w,b
 34172   0042CE  6EE1               	movwf	fsr1l,c
 34173   0042D0  6AE2               	clrf	fsr1h,c
 34174   0042D2  0E03               	movlw	3
 34175   0042D4  26E1               	addwf	fsr1l,f,c
 34176   0042D6  50E7               	movf	indf1,w,c
 34177   0042D8  6F90               	movwf	??_push& (0+255),b
 34178   0042DA  5190               	movf	??_push& (0+255),w,b
 34179   0042DC  0D09               	mullw	9
 34180   0042DE  CFF3 F091          	movff	prodl,??_push+1
 34181   0042E2  CFF4 F092          	movff	prodh,??_push+2
 34182   0042E6  518D               	movf	push@q& (0+255),w,b
 34183   0042E8  6EE1               	movwf	fsr1l,c
 34184   0042EA  6AE2               	clrf	fsr1h,c
 34185   0042EC  CFE6 F093          	movff	postinc1,??_push+3
 34186   0042F0  CFE5 F094          	movff	postdec1,??_push+4
 34187   0042F4  5191               	movf	(??_push+1)& (0+255),w,b
 34188   0042F6  2593               	addwf	(??_push+3)& (0+255),w,b
 34189   0042F8  6EE1               	movwf	fsr1l,c
 34190   0042FA  5192               	movf	(??_push+2)& (0+255),w,b
 34191   0042FC  2194               	addwfc	(??_push+4)& (0+255),w,b
 34192   0042FE  6EE2               	movwf	fsr1h,c
 34193   004300  CFDF FFE7          	movff	indf2,indf1
 34194                           
 34195                           ; BSR set to: 0
 34196   004304  518D               	movf	push@q& (0+255),w,b
 34197   004306  6ED9               	movwf	fsr2l,c
 34198   004308  6ADA               	clrf	fsr2h,c
 34199   00430A  0E03               	movlw	3
 34200   00430C  26D9               	addwf	fsr2l,f,c
 34201   00430E  2ADF               	incf	indf2,f,c
 34202                           
 34203                           ; BSR set to: 0
 34204   004310  518D               	movf	push@q& (0+255),w,b
 34205   004312  6ED9               	movwf	fsr2l,c
 34206   004314  6ADA               	clrf	fsr2h,c
 34207   004316  0E04               	movlw	4
 34208   004318  26D9               	addwf	fsr2l,f,c
 34209   00431A  518D               	movf	push@q& (0+255),w,b
 34210   00431C  6EE1               	movwf	fsr1l,c
 34211   00431E  6AE2               	clrf	fsr1h,c
 34212   004320  0E03               	movlw	3
 34213   004322  26E1               	addwf	fsr1l,f,c
 34214   004324  50DE               	movf	postinc2,w,c
 34215   004326  5CE6               	subwf	postinc1,w,c
 34216   004328  A0D8               	btfss	status,0,c
 34217   00432A  D006               	goto	l19220
 34218                           
 34219                           ; BSR set to: 0
 34220   00432C  518D               	movf	push@q& (0+255),w,b
 34221   00432E  6ED9               	movwf	fsr2l,c
 34222   004330  6ADA               	clrf	fsr2h,c
 34223   004332  0E03               	movlw	3
 34224   004334  26D9               	addwf	fsr2l,f,c
 34225   004336  6ADF               	clrf	indf2,c
 34226   004338                     l19220:
 34227                           
 34228                           ; BSR set to: 0
 34229   004338  0E01               	movlw	1
 34230                           
 34231                           ; BSR set to: 0
 34232   00433A  0012               	return		;funcret
 34233   00433C                     __end_of_push:
 34234                           	callstack 0
 34235                           
 34236 ;; *************** function _isEvent *****************
 34237 ;; Defined at:
 34238 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 34239 ;; Parameters:    Size  Location     Type
 34240 ;;  opc             1    wreg     unsigned char 
 34241 ;; Auto vars:     Size  Location     Type
 34242 ;;  opc             1   46[BANK0 ] unsigned char 
 34243 ;; Return value:  Size  Location     Type
 34244 ;;                  1    wreg      enum E12766
 34245 ;; Registers used:
 34246 ;;		wreg, status,2, status,0
 34247 ;; Tracked objects:
 34248 ;;		On entry : 0/0
 34249 ;;		On exit  : 0/0
 34250 ;;		Unchanged: 0/0
 34251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34255 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34256 ;;Total ram usage:        2 bytes
 34257 ;; Hardware stack levels used: 1
 34258 ;; Hardware stack levels required when called: 12
 34259 ;; This function calls:
 34260 ;;		Nothing
 34261 ;; This function is called by:
 34262 ;;		_canSendMessage
 34263 ;; This function uses a non-reentrant model
 34264 ;;
 34265                           
 34266                           	psect	text134
 34267   00C276                     __ptext134:
 34268                           	callstack 0
 34269   00C276                     _isEvent:
 34270                           	callstack 12
 34271                           
 34272                           ; BSR set to: 0
 34273                           ;incstack = 0
 34274                           ;isEvent@opc stored from wreg
 34275   00C276  0100               	movlb	0	; () banked
 34276   00C278  6F8E               	movwf	isEvent@opc& (0+255),b
 34277                           
 34278                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 34279   00C27A  0E00               	movlw	0
 34280   00C27C  0100               	movlb	0	; () banked
 34281   00C27E  6F8D               	movwf	_isEvent$4890& (0+255),b
 34282                           
 34283                           ; BSR set to: 0
 34284   00C280  518E               	movf	isEvent@opc& (0+255),w,b
 34285   00C282  0B90               	andlw	144
 34286   00C284  0A90               	xorlw	144
 34287   00C286  A4D8               	btfss	status,2,c
 34288   00C288  D008               	goto	l2048
 34289                           
 34290                           ; BSR set to: 0
 34291   00C28A  518E               	movf	isEvent@opc& (0+255),w,b
 34292   00C28C  0AFF               	xorlw	255
 34293   00C28E  0B06               	andlw	6
 34294   00C290  0A06               	xorlw	6
 34295   00C292  A4D8               	btfss	status,2,c
 34296   00C294  D002               	goto	l2048
 34297                           
 34298                           ; BSR set to: 0
 34299   00C296  0E01               	movlw	1
 34300   00C298  6F8D               	movwf	_isEvent$4890& (0+255),b
 34301   00C29A                     l2048:
 34302                           
 34303                           ; BSR set to: 0
 34304   00C29A  518D               	movf	_isEvent$4890& (0+255),w,b
 34305                           
 34306                           ; BSR set to: 0
 34307   00C29C  0012               	return		;funcret
 34308   00C29E                     __end_of_isEvent:
 34309                           	callstack 0
 34310                           
 34311 ;; *************** function _have *****************
 34312 ;; Defined at:
 34313 ;;		line 838 in file "../../VLCBlib_PIC/vlcb.c"
 34314 ;; Parameters:    Size  Location     Type
 34315 ;;  id              1    wreg     unsigned char 
 34316 ;; Auto vars:     Size  Location     Type
 34317 ;;  id              1   47[BANK0 ] unsigned char 
 34318 ;;  i               1   48[BANK0 ] unsigned char 
 34319 ;; Return value:  Size  Location     Type
 34320 ;;                  1    wreg      enum E12897
 34321 ;; Registers used:
 34322 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 34323 ;; Tracked objects:
 34324 ;;		On entry : 0/0
 34325 ;;		On exit  : 0/0
 34326 ;;		Unchanged: 0/0
 34327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34330 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34331 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34332 ;;Total ram usage:        4 bytes
 34333 ;; Hardware stack levels used: 1
 34334 ;; Hardware stack levels required when called: 12
 34335 ;; This function calls:
 34336 ;;		Nothing
 34337 ;; This function is called by:
 34338 ;;		_getParameterFlags
 34339 ;;		_getParameter
 34340 ;;		_canSendMessage
 34341 ;; This function uses a non-reentrant model
 34342 ;;
 34343                           
 34344                           	psect	text135
 34345   00ADF0                     __ptext135:
 34346                           	callstack 0
 34347   00ADF0                     _have:
 34348                           	callstack 12
 34349                           
 34350                           ; BSR set to: 0
 34351                           ;incstack = 0
 34352                           ;have@id stored from wreg
 34353   00ADF0  0100               	movlb	0	; () banked
 34354   00ADF2  6F8F               	movwf	have@id& (0+255),b
 34355                           
 34356                           ;../../VLCBlib_PIC/vlcb.c: 839:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 840:     for (i
      +                          =0; i<9; i++) {
 34357   00ADF4  0E00               	movlw	0
 34358   00ADF6  0100               	movlb	0	; () banked
 34359   00ADF8  6F90               	movwf	have@i& (0+255),b
 34360   00ADFA                     l19180:
 34361                           
 34362                           ; BSR set to: 0
 34363                           ;../../VLCBlib_PIC/vlcb.c: 841:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 34364   00ADFA  5190               	movf	have@i& (0+255),w,b
 34365   00ADFC  0D02               	mullw	2
 34366   00ADFE  0E69               	movlw	low _services
 34367   00AE00  24F3               	addwf	243,w,c
 34368   00AE02  6EF6               	movwf	tblptrl,c
 34369   00AE04  0EEE               	movlw	high _services
 34370   00AE06  20F4               	addwfc	244,w,c
 34371   00AE08  6EF7               	movwf	tblptrh,c
 34372   00AE0A                     	if	1	;There are 3 active tblptr bytes
 34373   00AE0A  6AF8               	clrf	tblptru,c
 34374   00AE0C  0E00               	movlw	low (__mediumconst shr (0+16))
 34375   00AE0E  22F8               	addwfc	tblptru,f,c
 34376   00AE10                     	endif
 34377   00AE10  0009               	tblrd		*+
 34378   00AE12  50F5               	movf	tablat,w,c
 34379   00AE14  0009               	tblrd		*+
 34380   00AE16  10F5               	iorwf	tablat,w,c
 34381   00AE18  B4D8               	btfsc	status,2,c
 34382   00AE1A  D01D               	goto	l19188
 34383                           
 34384                           ; BSR set to: 0
 34385   00AE1C  5190               	movf	have@i& (0+255),w,b
 34386   00AE1E  0D02               	mullw	2
 34387   00AE20  0E69               	movlw	low _services
 34388   00AE22  24F3               	addwf	243,w,c
 34389   00AE24  6EF6               	movwf	tblptrl,c
 34390   00AE26  0EEE               	movlw	high _services
 34391   00AE28  20F4               	addwfc	244,w,c
 34392   00AE2A  6EF7               	movwf	tblptrh,c
 34393   00AE2C                     	if	1	;There are 3 active tblptr bytes
 34394   00AE2C  6AF8               	clrf	tblptru,c
 34395   00AE2E  0E00               	movlw	low (__mediumconst shr (0+16))
 34396   00AE30  22F8               	addwfc	tblptru,f,c
 34397   00AE32                     	endif
 34398   00AE32  0009               	tblrd		*+
 34399   00AE34  CFF5 F08D          	movff	tablat,??_have
 34400   00AE38  0009               	tblrd		*+
 34401   00AE3A  CFF5 F08E          	movff	tablat,??_have+1
 34402   00AE3E  C08D  FFF6         	movff	??_have,tblptrl
 34403   00AE42  C08E  FFF7         	movff	??_have+1,tblptrh
 34404   00AE46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34405   00AE46  6AF8               	clrf	tblptru,c
 34406   00AE48                     	endif
 34407   00AE48                     	if	0	;tblptru may be non-zero
 34408   00AE48                     	endif
 34409   00AE48  0008               	tblrd		*
 34410   00AE4A  50F5               	movf	tablat,w,c
 34411   00AE4C  198F               	xorwf	have@id& (0+255),w,b
 34412   00AE4E  A4D8               	btfss	status,2,c
 34413   00AE50  D002               	goto	l19188
 34414                           
 34415                           ; BSR set to: 0
 34416                           ;../../VLCBlib_PIC/vlcb.c: 842:             return PRESENT;
 34417   00AE52  0E01               	movlw	1
 34418   00AE54  0012               	return	
 34419   00AE56                     l19188:
 34420                           
 34421                           ; BSR set to: 0
 34422                           ;../../VLCBlib_PIC/vlcb.c: 844:     }
 34423   00AE56  2B90               	incf	have@i& (0+255),f,b
 34424                           
 34425                           ; BSR set to: 0
 34426   00AE58  0E08               	movlw	8
 34427   00AE5A  6590               	cpfsgt	have@i& (0+255),b
 34428   00AE5C  D7CE               	goto	l19180
 34429                           
 34430                           ; BSR set to: 0
 34431                           ;../../VLCBlib_PIC/vlcb.c: 845:     return NOT_PRESENT;
 34432   00AE5E  0E00               	movlw	0
 34433                           
 34434                           ; BSR set to: 0
 34435   00AE60  0012               	return		;funcret
 34436   00AE62                     __end_of_have:
 34437                           	callstack 0
 34438                           
 34439 ;; *************** function _getNumTxBuffersInUse *****************
 34440 ;; Defined at:
 34441 ;;		line 461 in file "../../VLCBlib_PIC/can18_ecan.c"
 34442 ;; Parameters:    Size  Location     Type
 34443 ;;		None
 34444 ;; Auto vars:     Size  Location     Type
 34445 ;;		None
 34446 ;; Return value:  Size  Location     Type
 34447 ;;                  1    wreg      unsigned char 
 34448 ;; Registers used:
 34449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34450 ;; Tracked objects:
 34451 ;;		On entry : 0/0
 34452 ;;		On exit  : 0/0
 34453 ;;		Unchanged: 0/0
 34454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34459 ;;Total ram usage:        0 bytes
 34460 ;; Hardware stack levels used: 1
 34461 ;; Hardware stack levels required when called: 13
 34462 ;; This function calls:
 34463 ;;		_quantity
 34464 ;; This function is called by:
 34465 ;;		_canGetDiagnostic
 34466 ;;		_canSendMessage
 34467 ;; This function uses a non-reentrant model
 34468 ;;
 34469                           
 34470                           	psect	text136
 34471   00C5CE                     __ptext136:
 34472                           	callstack 0
 34473   00C5CE                     _getNumTxBuffersInUse:
 34474                           	callstack 11
 34475                           
 34476                           ;../../VLCBlib_PIC/can18_ecan.c: 462:     return quantity(&txQueue);
 34477                           
 34478                           ; BSR set to: 0
 34479                           ;incstack = 0
 34480   00C5CE  0E4A               	movlw	low _txQueue
 34481   00C5D0  0100               	movlb	0	; () banked
 34482   00C5D2  6F8D               	movwf	quantity@q& (0+255),b
 34483   00C5D4  EC02  F05F         	call	_quantity	;wreg free
 34484   00C5D8  0012               	return		;funcret
 34485   00C5DA                     __end_of_getNumTxBuffersInUse:
 34486                           	callstack 0
 34487                           
 34488 ;; *************** function _quantity *****************
 34489 ;; Defined at:
 34490 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 34491 ;; Parameters:    Size  Location     Type
 34492 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34493 ;;		 -> txQueue(5), rxQueue(5), 
 34494 ;; Auto vars:     Size  Location     Type
 34495 ;;		None
 34496 ;; Return value:  Size  Location     Type
 34497 ;;                  1    wreg      unsigned char 
 34498 ;; Registers used:
 34499 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34500 ;; Tracked objects:
 34501 ;;		On entry : 0/0
 34502 ;;		On exit  : 0/0
 34503 ;;		Unchanged: 0/0
 34504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34505 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34507 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34508 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34509 ;;Total ram usage:        5 bytes
 34510 ;; Hardware stack levels used: 1
 34511 ;; Hardware stack levels required when called: 12
 34512 ;; This function calls:
 34513 ;;		Nothing
 34514 ;; This function is called by:
 34515 ;;		_getNumTxBuffersInUse
 34516 ;;		_getNumRxBuffersInUse
 34517 ;;		_canSendMessage
 34518 ;; This function uses a non-reentrant model
 34519 ;;
 34520                           
 34521                           	psect	text137
 34522   00BE04                     __ptext137:
 34523                           	callstack 0
 34524   00BE04                     _quantity:
 34525                           	callstack 12
 34526                           
 34527                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 34528                           
 34529                           ;incstack = 0
 34530   00BE04  0100               	movlb	0	; () banked
 34531   00BE06  518D               	movf	quantity@q& (0+255),w,b
 34532   00BE08  6ED9               	movwf	fsr2l,c
 34533   00BE0A  6ADA               	clrf	fsr2h,c
 34534   00BE0C  0E02               	movlw	2
 34535   00BE0E  26D9               	addwf	fsr2l,f,c
 34536   00BE10  50DF               	movf	indf2,w,c
 34537   00BE12  6F8E               	movwf	??_quantity& (0+255),b
 34538   00BE14  518D               	movf	quantity@q& (0+255),w,b
 34539   00BE16  6ED9               	movwf	fsr2l,c
 34540   00BE18  6ADA               	clrf	fsr2h,c
 34541   00BE1A  0E03               	movlw	3
 34542   00BE1C  26D9               	addwf	fsr2l,f,c
 34543   00BE1E  50DF               	movf	indf2,w,c
 34544   00BE20  6F8F               	movwf	(??_quantity+1)& (0+255),b
 34545   00BE22  518E               	movf	??_quantity& (0+255),w,b
 34546   00BE24  5D8F               	subwf	(??_quantity+1)& (0+255),w,b
 34547   00BE26  6F90               	movwf	(??_quantity+2)& (0+255),b
 34548   00BE28  518D               	movf	quantity@q& (0+255),w,b
 34549   00BE2A  6ED9               	movwf	fsr2l,c
 34550   00BE2C  6ADA               	clrf	fsr2h,c
 34551   00BE2E  0E04               	movlw	4
 34552   00BE30  26D9               	addwf	fsr2l,f,c
 34553   00BE32  50DF               	movf	indf2,w,c
 34554   00BE34  6F91               	movwf	(??_quantity+3)& (0+255),b
 34555   00BE36  0591               	decf	(??_quantity+3)& (0+255),w,b
 34556   00BE38  1590               	andwf	(??_quantity+2)& (0+255),w,b
 34557                           
 34558                           ; BSR set to: 0
 34559   00BE3A  0012               	return		;funcret
 34560   00BE3C                     __end_of_quantity:
 34561                           	callstack 0
 34562                           
 34563 ;; *************** function _getNextWriteMessage *****************
 34564 ;; Defined at:
 34565 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 34566 ;; Parameters:    Size  Location     Type
 34567 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34568 ;;		 -> rxQueue(5), 
 34569 ;; Auto vars:     Size  Location     Type
 34570 ;;  wr              1   56[BANK0 ] unsigned char 
 34571 ;; Return value:  Size  Location     Type
 34572 ;;                  2   45[BANK0 ] PTR struct Message
 34573 ;; Registers used:
 34574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34575 ;; Tracked objects:
 34576 ;;		On entry : 0/0
 34577 ;;		On exit  : 0/0
 34578 ;;		Unchanged: 0/0
 34579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34580 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34582 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34583 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34584 ;;Total ram usage:       12 bytes
 34585 ;; Hardware stack levels used: 1
 34586 ;; Hardware stack levels required when called: 12
 34587 ;; This function calls:
 34588 ;;		Nothing
 34589 ;; This function is called by:
 34590 ;;		_canSendMessage
 34591 ;; This function uses a non-reentrant model
 34592 ;;
 34593                           
 34594                           	psect	text138
 34595   008B80                     __ptext138:
 34596                           	callstack 0
 34597   008B80                     _getNextWriteMessage:
 34598                           	callstack 12
 34599                           
 34600                           ; BSR set to: 0
 34601                           ;incstack = 0
 34602   008B80  0100               	movlb	0	; () banked
 34603   008B82  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34604   008B84  6ED9               	movwf	fsr2l,c
 34605   008B86  6ADA               	clrf	fsr2h,c
 34606   008B88  0E02               	movlw	2
 34607   008B8A  26D9               	addwf	fsr2l,f,c
 34608   008B8C  50DF               	movf	indf2,w,c
 34609   008B8E  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 34610   008B90  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 34611   008B92  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34612   008B94  6ED9               	movwf	fsr2l,c
 34613   008B96  6ADA               	clrf	fsr2h,c
 34614   008B98  0E04               	movlw	4
 34615   008B9A  26D9               	addwf	fsr2l,f,c
 34616   008B9C  50DF               	movf	indf2,w,c
 34617   008B9E  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 34618   008BA0  0EFF               	movlw	255
 34619   008BA2  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 34620   008BA4  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 34621   008BA6  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 34622   008BA8  0EFF               	movlw	255
 34623   008BAA  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 34624   008BAC  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34625   008BAE  6ED9               	movwf	fsr2l,c
 34626   008BB0  6ADA               	clrf	fsr2h,c
 34627   008BB2  0E03               	movlw	3
 34628   008BB4  26D9               	addwf	fsr2l,f,c
 34629   008BB6  50DF               	movf	indf2,w,c
 34630   008BB8  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 34631   008BBA  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 34632   008BBC  0E01               	movlw	1
 34633   008BBE  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 34634   008BC0  0E00               	movlw	0
 34635   008BC2  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 34636   008BC4  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 34637   008BC6  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 34638   008BC8  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 34639   008BCA  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 34640   008BCC  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 34641   008BCE  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 34642   008BD0  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 34643   008BD2  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 34644   008BD4  E109               	bnz	l19230
 34645   008BD6  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 34646   008BD8  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 34647   008BDA  A4D8               	btfss	status,2,c
 34648   008BDC  D005               	goto	l19230
 34649                           
 34650                           ; BSR set to: 0
 34651   008BDE  0E00               	movlw	0
 34652   008BE0  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 34653   008BE2  0E00               	movlw	0
 34654   008BE4  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 34655   008BE6  0012               	return	
 34656   008BE8                     l19230:
 34657                           
 34658                           ; BSR set to: 0
 34659   008BE8  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34660   008BEA  6ED9               	movwf	fsr2l,c
 34661   008BEC  6ADA               	clrf	fsr2h,c
 34662   008BEE  0E03               	movlw	3
 34663   008BF0  26D9               	addwf	fsr2l,f,c
 34664   008BF2  50DF               	movf	indf2,w,c
 34665   008BF4  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 34666   008BF6  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34667   008BF8  6ED9               	movwf	fsr2l,c
 34668   008BFA  6ADA               	clrf	fsr2h,c
 34669   008BFC  0E03               	movlw	3
 34670   008BFE  26D9               	addwf	fsr2l,f,c
 34671   008C00  2ADF               	incf	indf2,f,c
 34672                           
 34673                           ; BSR set to: 0
 34674   008C02  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34675   008C04  6ED9               	movwf	fsr2l,c
 34676   008C06  6ADA               	clrf	fsr2h,c
 34677   008C08  0E04               	movlw	4
 34678   008C0A  26D9               	addwf	fsr2l,f,c
 34679   008C0C  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34680   008C0E  6EE1               	movwf	fsr1l,c
 34681   008C10  6AE2               	clrf	fsr1h,c
 34682   008C12  0E03               	movlw	3
 34683   008C14  26E1               	addwf	fsr1l,f,c
 34684   008C16  50DE               	movf	postinc2,w,c
 34685   008C18  5CE6               	subwf	postinc1,w,c
 34686   008C1A  A0D8               	btfss	status,0,c
 34687   008C1C  D006               	goto	l19236
 34688                           
 34689                           ; BSR set to: 0
 34690   008C1E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34691   008C20  6ED9               	movwf	fsr2l,c
 34692   008C22  6ADA               	clrf	fsr2h,c
 34693   008C24  0E03               	movlw	3
 34694   008C26  26D9               	addwf	fsr2l,f,c
 34695   008C28  6ADF               	clrf	indf2,c
 34696   008C2A                     l19236:
 34697                           
 34698                           ; BSR set to: 0
 34699   008C2A  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 34700   008C2C  0D09               	mullw	9
 34701   008C2E  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 34702   008C32  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 34703   008C36  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34704   008C38  6ED9               	movwf	fsr2l,c
 34705   008C3A  6ADA               	clrf	fsr2h,c
 34706   008C3C  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 34707   008C40  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 34708   008C44  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 34709   008C46  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 34710   008C48  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 34711   008C4A  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 34712   008C4C  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 34713   008C4E  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 34714                           
 34715                           ; BSR set to: 0
 34716   008C50  0012               	return		;funcret
 34717   008C52                     __end_of_getNextWriteMessage:
 34718                           	callstack 0
 34719                           
 34720 ;; *************** function _readInput *****************
 34721 ;; Defined at:
 34722 ;;		line 174 in file "../inputs.c"
 34723 ;; Parameters:    Size  Location     Type
 34724 ;;  io              1    wreg     unsigned char 
 34725 ;; Auto vars:     Size  Location     Type
 34726 ;;  io              1   51[BANK0 ] unsigned char 
 34727 ;; Return value:  Size  Location     Type
 34728 ;;                  1    wreg      enum E12717
 34729 ;; Registers used:
 34730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34731 ;; Tracked objects:
 34732 ;;		On entry : 0/0
 34733 ;;		On exit  : 0/0
 34734 ;;		Unchanged: 0/0
 34735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34739 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34740 ;;Total ram usage:        3 bytes
 34741 ;; Hardware stack levels used: 1
 34742 ;; Hardware stack levels required when called: 13
 34743 ;; This function calls:
 34744 ;;		_getNV
 34745 ;; This function is called by:
 34746 ;;		_initInputScan
 34747 ;;		_inputScan
 34748 ;; This function uses a non-reentrant model
 34749 ;;
 34750                           
 34751                           	psect	text139
 34752   007F60                     __ptext139:
 34753                           	callstack 0
 34754   007F60                     _readInput:
 34755                           	callstack 15
 34756                           
 34757                           ; BSR set to: 0
 34758                           ;incstack = 0
 34759                           ;readInput@io stored from wreg
 34760   007F60  0100               	movlb	0	; () banked
 34761   007F62  6F93               	movwf	readInput@io& (0+255),b
 34762                           
 34763                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 34764   007F64  0100               	movlb	0	; () banked
 34765   007F66  5193               	movf	readInput@io& (0+255),w,b
 34766   007F68  0D07               	mullw	7
 34767   007F6A  50F3               	movf	243,w,c
 34768   007F6C  0F10               	addlw	16
 34769   007F6E  EC52  F05E         	call	_getNV
 34770   007F72  0100               	movlb	0	; () banked
 34771   007F74  518D               	movf	?_getNV& (0+255),w,b
 34772   007F76  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 34773   007F78  B4D8               	btfsc	status,2,c
 34774   007F7A  D05B               	goto	l21354
 34775   007F7C  D074               	goto	l21356
 34776   007F7E                     l21340:
 34777                           
 34778                           ; BSR set to: 0
 34779                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 34780   007F7E  5193               	movf	readInput@io& (0+255),w,b
 34781   007F80  0D04               	mullw	4
 34782   007F82  0E02               	movlw	2
 34783   007F84  26F3               	addwf	243,f,c
 34784   007F86  0E00               	movlw	0
 34785   007F88  22F4               	addwfc	244,f,c
 34786   007F8A  0E29               	movlw	low _configs
 34787   007F8C  24F3               	addwf	243,w,c
 34788   007F8E  6EF6               	movwf	tblptrl,c
 34789   007F90  0EEE               	movlw	high _configs
 34790   007F92  20F4               	addwfc	244,w,c
 34791   007F94  6EF7               	movwf	tblptrh,c
 34792   007F96                     	if	1	;There are 3 active tblptr bytes
 34793   007F96  6AF8               	clrf	tblptru,c
 34794   007F98  0E00               	movlw	low (__mediumconst shr (0+16))
 34795   007F9A  22F8               	addwfc	tblptru,f,c
 34796   007F9C                     	endif
 34797   007F9C  0008               	tblrd		*
 34798   007F9E  CFF5 F091          	movff	tablat,??_readInput
 34799   007FA2  0E01               	movlw	1
 34800   007FA4  6F92               	movwf	(??_readInput+1)& (0+255),b
 34801   007FA6  2B91               	incf	??_readInput& (0+255),f,b
 34802   007FA8  D002               	goto	u21824
 34803   007FAA                     u21825:
 34804   007FAA  90D8               	bcf	status,0,c
 34805   007FAC  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34806   007FAE                     u21824:
 34807   007FAE  2F91               	decfsz	??_readInput& (0+255),f,b
 34808   007FB0  D7FC               	goto	u21825
 34809   007FB2  0100               	movlb	0	; () banked
 34810   007FB4  5192               	movf	(??_readInput+1)& (0+255),w,b
 34811   007FB6  1480               	andwf	128,w,c	;volatile
 34812   007FB8  0012               	return	
 34813   007FBA                     l21344:
 34814                           
 34815                           ; BSR set to: 0
 34816                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 34817   007FBA  5193               	movf	readInput@io& (0+255),w,b
 34818   007FBC  0D04               	mullw	4
 34819   007FBE  0E02               	movlw	2
 34820   007FC0  26F3               	addwf	243,f,c
 34821   007FC2  0E00               	movlw	0
 34822   007FC4  22F4               	addwfc	244,f,c
 34823   007FC6  0E29               	movlw	low _configs
 34824   007FC8  24F3               	addwf	243,w,c
 34825   007FCA  6EF6               	movwf	tblptrl,c
 34826   007FCC  0EEE               	movlw	high _configs
 34827   007FCE  20F4               	addwfc	244,w,c
 34828   007FD0  6EF7               	movwf	tblptrh,c
 34829   007FD2                     	if	1	;There are 3 active tblptr bytes
 34830   007FD2  6AF8               	clrf	tblptru,c
 34831   007FD4  0E00               	movlw	low (__mediumconst shr (0+16))
 34832   007FD6  22F8               	addwfc	tblptru,f,c
 34833   007FD8                     	endif
 34834   007FD8  0008               	tblrd		*
 34835   007FDA  CFF5 F091          	movff	tablat,??_readInput
 34836   007FDE  0E01               	movlw	1
 34837   007FE0  6F92               	movwf	(??_readInput+1)& (0+255),b
 34838   007FE2  2B91               	incf	??_readInput& (0+255),f,b
 34839   007FE4  D002               	goto	u21834
 34840   007FE6                     u21835:
 34841   007FE6  90D8               	bcf	status,0,c
 34842   007FE8  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34843   007FEA                     u21834:
 34844   007FEA  2F91               	decfsz	??_readInput& (0+255),f,b
 34845   007FEC  D7FC               	goto	u21835
 34846   007FEE  0100               	movlb	0	; () banked
 34847   007FF0  5192               	movf	(??_readInput+1)& (0+255),w,b
 34848   007FF2  1481               	andwf	129,w,c	;volatile
 34849   007FF4  0012               	return	
 34850   007FF6                     l21348:
 34851                           
 34852                           ; BSR set to: 0
 34853                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 34854   007FF6  5193               	movf	readInput@io& (0+255),w,b
 34855   007FF8  0D04               	mullw	4
 34856   007FFA  0E02               	movlw	2
 34857   007FFC  26F3               	addwf	243,f,c
 34858   007FFE  0E00               	movlw	0
 34859   008000  22F4               	addwfc	244,f,c
 34860   008002  0E29               	movlw	low _configs
 34861   008004  24F3               	addwf	243,w,c
 34862   008006  6EF6               	movwf	tblptrl,c
 34863   008008  0EEE               	movlw	high _configs
 34864   00800A  20F4               	addwfc	244,w,c
 34865   00800C  6EF7               	movwf	tblptrh,c
 34866   00800E                     	if	1	;There are 3 active tblptr bytes
 34867   00800E  6AF8               	clrf	tblptru,c
 34868   008010  0E00               	movlw	low (__mediumconst shr (0+16))
 34869   008012  22F8               	addwfc	tblptru,f,c
 34870   008014                     	endif
 34871   008014  0008               	tblrd		*
 34872   008016  CFF5 F091          	movff	tablat,??_readInput
 34873   00801A  0E01               	movlw	1
 34874   00801C  6F92               	movwf	(??_readInput+1)& (0+255),b
 34875   00801E  2B91               	incf	??_readInput& (0+255),f,b
 34876   008020  D002               	goto	u21844
 34877   008022                     u21845:
 34878   008022  90D8               	bcf	status,0,c
 34879   008024  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34880   008026                     u21844:
 34881   008026  2F91               	decfsz	??_readInput& (0+255),f,b
 34882   008028  D7FC               	goto	u21845
 34883   00802A  0100               	movlb	0	; () banked
 34884   00802C  5192               	movf	(??_readInput+1)& (0+255),w,b
 34885   00802E  1482               	andwf	130,w,c	;volatile
 34886   008030  0012               	return	
 34887   008032                     l21354:
 34888                           
 34889                           ; BSR set to: 0
 34890   008032  5193               	movf	readInput@io& (0+255),w,b
 34891   008034  0D04               	mullw	4
 34892   008036  0E01               	movlw	1
 34893   008038  26F3               	addwf	243,f,c
 34894   00803A  0E00               	movlw	0
 34895   00803C  22F4               	addwfc	244,f,c
 34896   00803E  0E29               	movlw	low _configs
 34897   008040  24F3               	addwf	243,w,c
 34898   008042  6EF6               	movwf	tblptrl,c
 34899   008044  0EEE               	movlw	high _configs
 34900   008046  20F4               	addwfc	244,w,c
 34901   008048  6EF7               	movwf	tblptrh,c
 34902   00804A                     	if	1	;There are 3 active tblptr bytes
 34903   00804A  6AF8               	clrf	tblptru,c
 34904   00804C  0E00               	movlw	low (__mediumconst shr (0+16))
 34905   00804E  22F8               	addwfc	tblptru,f,c
 34906   008050                     	endif
 34907   008050  0008               	tblrd		*
 34908   008052  50F5               	movf	tablat,w,c
 34909                           
 34910                           ; Switch size 1, requested type "simple"
 34911                           ; Number of cases is 3, Range of values is 65 to 67
 34912                           ; switch strategies available:
 34913                           ; Name         Instructions Cycles
 34914                           ; simple_byte           10     6 (average)
 34915                           ;	Chosen strategy is simple_byte
 34916   008054  0A41               	xorlw	65	; case 65
 34917   008056  B4D8               	btfsc	status,2,c
 34918   008058  D792               	goto	l21340
 34919   00805A  0A03               	xorlw	3	; case 66
 34920   00805C  B4D8               	btfsc	status,2,c
 34921   00805E  D7AD               	goto	l21344
 34922   008060  0A01               	xorlw	1	; case 67
 34923   008062  B4D8               	btfsc	status,2,c
 34924   008064  D7C8               	goto	l21348
 34925   008066                     l21356:
 34926                           
 34927                           ; BSR set to: 0
 34928                           ;../inputs.c: 191:     return FALSE;
 34929   008066  0E00               	movlw	0
 34930                           
 34931                           ; BSR set to: 0
 34932   008068  0012               	return		;funcret
 34933   00806A                     __end_of_readInput:
 34934                           	callstack 0
 34935                           
 34936 ;; *************** function _initRomOps *****************
 34937 ;; Defined at:
 34938 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 34939 ;; Parameters:    Size  Location     Type
 34940 ;;		None
 34941 ;; Auto vars:     Size  Location     Type
 34942 ;;		None
 34943 ;; Return value:  Size  Location     Type
 34944 ;;                  1    wreg      void 
 34945 ;; Registers used:
 34946 ;;		wreg, status,2
 34947 ;; Tracked objects:
 34948 ;;		On entry : 0/0
 34949 ;;		On exit  : 0/0
 34950 ;;		Unchanged: 0/0
 34951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34956 ;;Total ram usage:        0 bytes
 34957 ;; Hardware stack levels used: 1
 34958 ;; Hardware stack levels required when called: 12
 34959 ;; This function calls:
 34960 ;;		Nothing
 34961 ;; This function is called by:
 34962 ;;		_main
 34963 ;; This function uses a non-reentrant model
 34964 ;;
 34965                           
 34966                           	psect	text140
 34967   00C572                     __ptext140:
 34968                           	callstack 0
 34969   00C572                     _initRomOps:
 34970                           	callstack 18
 34971                           
 34972                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 34973                           
 34974                           ; BSR set to: 0
 34975                           ;incstack = 0
 34976   00C572  0E00               	movlw	0
 34977   00C574  0100               	movlb	0	; () banked
 34978   00C576  6FC2               	movwf	_flashFlags& (0+255),b
 34979                           
 34980                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0700;
 34981   00C578  0E07               	movlw	7
 34982   00C57A  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 34983   00C57C  0E00               	movlw	0
 34984   00C57E  6FD1               	movwf	_flashBlock& (0+255),b
 34985                           
 34986                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 34987   00C580  0E00               	movlw	0
 34988   00C582  6EF8               	movwf	248,c	;volatile
 34989                           
 34990                           ; BSR set to: 0
 34991   00C584  0012               	return		;funcret
 34992   00C586                     __end_of_initRomOps:
 34993                           	callstack 0
 34994                           
 34995 ;; *************** function _checkPowerOnPb *****************
 34996 ;; Defined at:
 34997 ;;		line 954 in file "../../VLCBlib_PIC/vlcb.c"
 34998 ;; Parameters:    Size  Location     Type
 34999 ;;		None
 35000 ;; Auto vars:     Size  Location     Type
 35001 ;;  i               1   57[BANK1 ] unsigned char 
 35002 ;; Return value:  Size  Location     Type
 35003 ;;                  1    wreg      void 
 35004 ;; Registers used:
 35005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35006 ;; Tracked objects:
 35007 ;;		On entry : 0/0
 35008 ;;		On exit  : 0/0
 35009 ;;		Unchanged: 0/0
 35010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35012 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35014 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35015 ;;Total ram usage:        1 bytes
 35016 ;; Hardware stack levels used: 1
 35017 ;; Hardware stack levels required when called: 27
 35018 ;; This function calls:
 35019 ;;		_APP_testMode
 35020 ;;		_factoryReset
 35021 ;;		_pbDownTimer
 35022 ;;		_pbUpTimer
 35023 ;;		_showStatus
 35024 ;; This function is called by:
 35025 ;;		_main
 35026 ;; This function uses a non-reentrant model
 35027 ;;
 35028                           
 35029                           	psect	text141
 35030   00B45E                     __ptext141:
 35031                           	callstack 0
 35032   00B45E                     _checkPowerOnPb:
 35033                           	callstack 3
 35034                           
 35035                           ;../../VLCBlib_PIC/vlcb.c: 955:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 958:     if ((!
      +                          (PORTAbits.RA2))) {
 35036                           
 35037                           ; BSR set to: 0
 35038                           ;incstack = 0
 35039   00B45E  B480               	btfsc	128,2,c	;volatile
 35040   00B460  0012               	return	
 35041                           
 35042                           ;../../VLCBlib_PIC/vlcb.c: 960:         i = pbDownTimer(30);
 35043   00B462  0E1E               	movlw	30
 35044   00B464  EC47  F04C         	call	_pbDownTimer
 35045   00B468  0101               	movlb	1	; () banked
 35046   00B46A  6FF3               	movwf	checkPowerOnPb@i& (0+255),b
 35047                           
 35048                           ; BSR set to: 1
 35049                           ;../../VLCBlib_PIC/vlcb.c: 961:         if (i == 0) {
 35050   00B46C  51F3               	movf	checkPowerOnPb@i& (0+255),w,b
 35051   00B46E  B4D8               	btfsc	status,2,c
 35052   00B470  0012               	return	
 35053                           
 35054                           ; BSR set to: 1
 35055                           
 35056                           ; BSR set to: 1
 35057                           ;../../VLCBlib_PIC/vlcb.c: 963:             return;
 35058   00B472  0E01               	movlw	1
 35059   00B474  65F3               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35060   00B476  D006               	goto	l24846
 35061                           
 35062                           ; BSR set to: 1
 35063   00B478  0E06               	movlw	6
 35064   00B47A  61F3               	cpfslt	checkPowerOnPb@i& (0+255),b
 35065   00B47C  D003               	goto	l24846
 35066                           
 35067                           ; BSR set to: 1
 35068                           ;../../VLCBlib_PIC/vlcb.c: 965:             APP_testMode();
 35069   00B47E  EC2A  F063         	call	_APP_testMode	;wreg free
 35070                           
 35071                           ;../../VLCBlib_PIC/vlcb.c: 966:         } else if (i >= 10) {
 35072   00B482  0012               	return	
 35073   00B484                     l24846:
 35074                           
 35075                           ; BSR set to: 1
 35076   00B484  0E09               	movlw	9
 35077   00B486  65F3               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35078   00B488  0012               	return	
 35079                           
 35080                           ; BSR set to: 1
 35081                           ;../../VLCBlib_PIC/vlcb.c: 967:             showStatus(STATUS_RESET_WARNING);
 35082   00B48A  0E04               	movlw	4
 35083   00B48C  EC96  F043         	call	_showStatus
 35084                           
 35085                           ;../../VLCBlib_PIC/vlcb.c: 969:             i = pbUpTimer(5);
 35086   00B490  0E05               	movlw	5
 35087   00B492  ECEF  F04B         	call	_pbUpTimer
 35088   00B496  0101               	movlb	1	; () banked
 35089   00B498  6FF3               	movwf	checkPowerOnPb@i& (0+255),b
 35090                           
 35091                           ; BSR set to: 1
 35092                           ;../../VLCBlib_PIC/vlcb.c: 970:             if (i == 0) {
 35093   00B49A  51F3               	movf	checkPowerOnPb@i& (0+255),w,b
 35094   00B49C  B4D8               	btfsc	status,2,c
 35095   00B49E  0012               	return	
 35096                           
 35097                           ; BSR set to: 1
 35098                           ;../../VLCBlib_PIC/vlcb.c: 974:             i = pbDownTimer(5);
 35099   00B4A0  0E05               	movlw	5
 35100   00B4A2  EC47  F04C         	call	_pbDownTimer
 35101   00B4A6  0101               	movlb	1	; () banked
 35102   00B4A8  6FF3               	movwf	checkPowerOnPb@i& (0+255),b
 35103                           
 35104                           ; BSR set to: 1
 35105                           ;../../VLCBlib_PIC/vlcb.c: 975:             if ((i>=2) && (i < 4)) {
 35106   00B4AA  0E01               	movlw	1
 35107   00B4AC  65F3               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35108   00B4AE  0012               	return	
 35109                           
 35110                           ; BSR set to: 1
 35111   00B4B0  0E04               	movlw	4
 35112   00B4B2  61F3               	cpfslt	checkPowerOnPb@i& (0+255),b
 35113   00B4B4  0012               	return	
 35114                           
 35115                           ; BSR set to: 1
 35116                           ;../../VLCBlib_PIC/vlcb.c: 976:                 factoryReset();
 35117   00B4B6  ECB1  F042         	call	_factoryReset	;wreg free
 35118   00B4BA  0012               	return		;funcret
 35119   00B4BC                     __end_of_checkPowerOnPb:
 35120                           	callstack 0
 35121                           
 35122 ;; *************** function _showStatus *****************
 35123 ;; Defined at:
 35124 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 35125 ;; Parameters:    Size  Location     Type
 35126 ;;  s               1    wreg     enum E12897
 35127 ;; Auto vars:     Size  Location     Type
 35128 ;;  s               1   47[BANK0 ] enum E12897
 35129 ;; Return value:  Size  Location     Type
 35130 ;;                  1    wreg      void 
 35131 ;; Registers used:
 35132 ;;		wreg, status,2, status,0
 35133 ;; Tracked objects:
 35134 ;;		On entry : 0/0
 35135 ;;		On exit  : 0/0
 35136 ;;		Unchanged: 0/0
 35137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35141 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35142 ;;Total ram usage:        3 bytes
 35143 ;; Hardware stack levels used: 1
 35144 ;; Hardware stack levels required when called: 12
 35145 ;; This function calls:
 35146 ;;		Nothing
 35147 ;; This function is called by:
 35148 ;;		_setLEDsByMode
 35149 ;;		_checkPowerOnPb
 35150 ;;		_poll
 35151 ;; This function uses a non-reentrant model
 35152 ;;
 35153                           
 35154                           	psect	text142
 35155   00872C                     __ptext142:
 35156                           	callstack 0
 35157   00872C                     _showStatus:
 35158                           	callstack 15
 35159                           
 35160                           ;incstack = 0
 35161                           ;showStatus@s stored from wreg
 35162   00872C  0100               	movlb	0	; () banked
 35163   00872E  6F8F               	movwf	showStatus@s& (0+255),b
 35164                           
 35165                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 35166   008730  D03E               	goto	l21068
 35167   008732                     l21038:
 35168                           
 35169                           ; BSR set to: 0
 35170                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 35171   008732  0E00               	movlw	0
 35172   008734  6FBB               	movwf	_ledState& (0+255),b
 35173                           
 35174                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 35175   008736  0E00               	movlw	0
 35176   008738  6FBC               	movwf	(_ledState+1)& (0+255),b
 35177                           
 35178                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 35179   00873A  0012               	return	
 35180   00873C                     l21040:
 35181                           
 35182                           ; BSR set to: 0
 35183                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 35184   00873C  0E01               	movlw	1
 35185   00873E  6FBB               	movwf	_ledState& (0+255),b
 35186                           
 35187                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 35188   008740  0E00               	movlw	0
 35189   008742  6FBC               	movwf	(_ledState+1)& (0+255),b
 35190                           
 35191                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 35192   008744  0012               	return	
 35193   008746                     l21042:
 35194                           
 35195                           ; BSR set to: 0
 35196                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 35197   008746  0E00               	movlw	0
 35198   008748  6FBB               	movwf	_ledState& (0+255),b
 35199                           
 35200                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 35201   00874A  0E03               	movlw	3
 35202   00874C  6FBC               	movwf	(_ledState+1)& (0+255),b
 35203                           
 35204                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 35205   00874E  0012               	return	
 35206   008750                     l1801:
 35207                           
 35208                           ; BSR set to: 0
 35209                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 35210                           
 35211                           ; BSR set to: 0
 35212   008750  0E00               	movlw	0
 35213   008752  6FBB               	movwf	_ledState& (0+255),b
 35214                           
 35215                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 35216   008754  0E01               	movlw	1
 35217   008756  6FBC               	movwf	(_ledState+1)& (0+255),b
 35218                           
 35219                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 35220   008758  0012               	return	
 35221   00875A                     l21046:
 35222                           
 35223                           ; BSR set to: 0
 35224                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 35225   00875A  0E00               	movlw	0
 35226   00875C  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35227                           
 35228                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 35229   00875E  0E19               	movlw	25
 35230   008760  6FB9               	movwf	_flashCounter& (0+255),b
 35231                           
 35232                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 35233   008762  0E02               	movlw	2
 35234   008764  6FBB               	movwf	_ledState& (0+255),b
 35235                           
 35236                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 35237   008766  0E02               	movlw	2
 35238   008768  6FBC               	movwf	(_ledState+1)& (0+255),b
 35239                           
 35240                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 35241   00876A  0012               	return	
 35242   00876C                     l21048:
 35243                           
 35244                           ; BSR set to: 0
 35245                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35246   00876C  29C5               	incf	_mode_state& (0+255),w,b
 35247   00876E  A4D8               	btfss	status,2,c
 35248   008770  D003               	goto	l21052
 35249                           
 35250                           ; BSR set to: 0
 35251                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 35252   008772  0E06               	movlw	6
 35253   008774  6FBC               	movwf	(_ledState+1)& (0+255),b
 35254                           
 35255                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35256   008776  0012               	return	
 35257   008778                     l21052:
 35258                           
 35259                           ; BSR set to: 0
 35260   008778  05C5               	decf	_mode_state& (0+255),w,b
 35261   00877A  A4D8               	btfss	status,2,c
 35262   00877C  0012               	return	
 35263                           
 35264                           ; BSR set to: 0
 35265                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 35266   00877E  0E06               	movlw	6
 35267   008780  6FBB               	movwf	_ledState& (0+255),b
 35268   008782  0012               	return	
 35269   008784                     l21056:
 35270                           
 35271                           ; BSR set to: 0
 35272                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35273   008784  29C5               	incf	_mode_state& (0+255),w,b
 35274   008786  A4D8               	btfss	status,2,c
 35275   008788  D003               	goto	l21060
 35276                           
 35277                           ; BSR set to: 0
 35278                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 35279   00878A  0E08               	movlw	8
 35280   00878C  6FBC               	movwf	(_ledState+1)& (0+255),b
 35281                           
 35282                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35283   00878E  0012               	return	
 35284   008790                     l21060:
 35285                           
 35286                           ; BSR set to: 0
 35287   008790  05C5               	decf	_mode_state& (0+255),w,b
 35288   008792  A4D8               	btfss	status,2,c
 35289   008794  0012               	return	
 35290                           
 35291                           ; BSR set to: 0
 35292                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 35293   008796  0E08               	movlw	8
 35294   008798  6FBB               	movwf	_ledState& (0+255),b
 35295   00879A  0012               	return	
 35296   00879C                     l21064:
 35297                           
 35298                           ; BSR set to: 0
 35299                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 35300   00879C  0E00               	movlw	0
 35301   00879E  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35302                           
 35303                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 35304   0087A0  0E00               	movlw	0
 35305   0087A2  6FB9               	movwf	_flashCounter& (0+255),b
 35306                           
 35307                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 35308   0087A4  0E02               	movlw	2
 35309   0087A6  6FBB               	movwf	_ledState& (0+255),b
 35310                           
 35311                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 35312   0087A8  0E02               	movlw	2
 35313   0087AA  6FBC               	movwf	(_ledState+1)& (0+255),b
 35314                           
 35315                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 35316   0087AC  0012               	return	
 35317   0087AE                     l21068:
 35318   0087AE  0100               	movlb	0	; () banked
 35319   0087B0  518F               	movf	showStatus@s& (0+255),w,b
 35320   0087B2  6F8D               	movwf	??_showStatus& (0+255),b
 35321   0087B4  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 35322                           
 35323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35324                           ; Switch size 1, requested type "simple"
 35325                           ; Number of cases is 1, Range of values is 0 to 0
 35326                           ; switch strategies available:
 35327                           ; Name         Instructions Cycles
 35328                           ; simple_byte            4     3 (average)
 35329                           ;	Chosen strategy is simple_byte
 35330   0087B6  518E               	movf	(??_showStatus+1)& (0+255),w,b
 35331   0087B8  0A00               	xorlw	0	; case 0
 35332   0087BA  A4D8               	btfss	status,2,c
 35333   0087BC  0012               	return	
 35334                           
 35335                           ; BSR set to: 0
 35336                           ; Switch size 1, requested type "simple"
 35337                           ; Number of cases is 13, Range of values is 0 to 12
 35338                           ; switch strategies available:
 35339                           ; Name         Instructions Cycles
 35340                           ; simple_byte           40    21 (average)
 35341                           ;	Chosen strategy is simple_byte
 35342   0087BE  518D               	movf	??_showStatus& (0+255),w,b
 35343   0087C0  0A00               	xorlw	0	; case 0
 35344   0087C2  B4D8               	btfsc	status,2,c
 35345   0087C4  D7B6               	goto	l21038
 35346   0087C6  0A01               	xorlw	1	; case 1
 35347   0087C8  B4D8               	btfsc	status,2,c
 35348   0087CA  D7B8               	goto	l21040
 35349   0087CC  0A03               	xorlw	3	; case 2
 35350   0087CE  B4D8               	btfsc	status,2,c
 35351   0087D0  D7BA               	goto	l21042
 35352   0087D2  0A01               	xorlw	1	; case 3
 35353   0087D4  B4D8               	btfsc	status,2,c
 35354   0087D6  D7BC               	goto	l1801
 35355   0087D8  0A07               	xorlw	7	; case 4
 35356   0087DA  B4D8               	btfsc	status,2,c
 35357   0087DC  D7BE               	goto	l21046
 35358   0087DE  0A01               	xorlw	1	; case 5
 35359   0087E0  B4D8               	btfsc	status,2,c
 35360   0087E2  D7B6               	goto	l1801
 35361   0087E4  0A03               	xorlw	3	; case 6
 35362   0087E6  B4D8               	btfsc	status,2,c
 35363   0087E8  D7B3               	goto	l1801
 35364   0087EA  0A01               	xorlw	1	; case 7
 35365   0087EC  B4D8               	btfsc	status,2,c
 35366   0087EE  D7BE               	goto	l21048
 35367   0087F0  0A0F               	xorlw	15	; case 8
 35368   0087F2  B4D8               	btfsc	status,2,c
 35369   0087F4  D7C7               	goto	l21056
 35370   0087F6  0A01               	xorlw	1	; case 9
 35371   0087F8  B4D8               	btfsc	status,2,c
 35372   0087FA  D7AA               	goto	l1801
 35373   0087FC  0A03               	xorlw	3	; case 10
 35374   0087FE  B4D8               	btfsc	status,2,c
 35375   008800  D7A7               	goto	l1801
 35376   008802  0A01               	xorlw	1	; case 11
 35377   008804  B4D8               	btfsc	status,2,c
 35378   008806  D7CA               	goto	l21064
 35379   008808  0A07               	xorlw	7	; case 12
 35380   00880A  A4D8               	btfss	status,2,c
 35381   00880C  0012               	return	
 35382   00880E  D7C6               	goto	l21064
 35383   008810                     __end_of_showStatus:
 35384                           	callstack 0
 35385                           
 35386 ;; *************** function _pbUpTimer *****************
 35387 ;; Defined at:
 35388 ;;		line 931 in file "../../VLCBlib_PIC/vlcb.c"
 35389 ;; Parameters:    Size  Location     Type
 35390 ;;  timeout         1    wreg     unsigned char 
 35391 ;; Auto vars:     Size  Location     Type
 35392 ;;  timeout         1   72[BANK0 ] unsigned char 
 35393 ;; Return value:  Size  Location     Type
 35394 ;;                  1    wreg      unsigned char 
 35395 ;; Registers used:
 35396 ;;		wreg, status,2, status,0, cstack
 35397 ;; Tracked objects:
 35398 ;;		On entry : 0/0
 35399 ;;		On exit  : 0/0
 35400 ;;		Unchanged: 0/0
 35401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35404 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35405 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35406 ;;Total ram usage:        5 bytes
 35407 ;; Hardware stack levels used: 1
 35408 ;; Hardware stack levels required when called: 14
 35409 ;; This function calls:
 35410 ;;		___lldiv
 35411 ;;		___lmul
 35412 ;;		_leds_poll
 35413 ;;		_tickGet
 35414 ;; This function is called by:
 35415 ;;		_checkPowerOnPb
 35416 ;; This function uses a non-reentrant model
 35417 ;;
 35418                           
 35419                           	psect	text143
 35420   0097DE                     __ptext143:
 35421                           	callstack 0
 35422   0097DE                     _pbUpTimer:
 35423                           	callstack 15
 35424                           
 35425                           ; BSR set to: 0
 35426                           ;incstack = 0
 35427                           ;pbUpTimer@timeout stored from wreg
 35428   0097DE  0100               	movlb	0	; () banked
 35429   0097E0  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 35430                           
 35431                           ;../../VLCBlib_PIC/vlcb.c: 933:     pbTimer.val = tickGet();
 35432   0097E2  ECE4  F05A         	call	_tickGet	;wreg free
 35433   0097E6  C08D  F033         	movff	?_tickGet,_pbTimer
 35434   0097EA  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 35435   0097EE  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 35436   0097F2  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 35437                           
 35438                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35439   0097F6  D02D               	goto	l1992
 35440   0097F8                     l24124:
 35441                           
 35442                           ;../../VLCBlib_PIC/vlcb.c: 935:         leds_poll();
 35443   0097F8  EC6E  F02E         	call	_leds_poll	;wreg free
 35444                           
 35445                           ;../../VLCBlib_PIC/vlcb.c: 936:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35446   0097FC  ECE4  F05A         	call	_tickGet	;wreg free
 35447   009800  5033               	movf	_pbTimer^0,w,c
 35448   009802  0100               	movlb	0	; () banked
 35449   009804  5D8D               	subwf	?_tickGet& (0+255),w,b
 35450   009806  6FA4               	movwf	??_pbUpTimer& (0+255),b
 35451   009808  5034               	movf	(_pbTimer+1)^0,w,c
 35452   00980A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35453   00980C  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 35454   00980E  5035               	movf	(_pbTimer+2)^0,w,c
 35455   009810  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35456   009812  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 35457   009814  5036               	movf	(_pbTimer+3)^0,w,c
 35458   009816  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35459   009818  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 35460   00981A  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 35461   00981C  6F91               	movwf	___lmul@multiplier& (0+255),b
 35462   00981E  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35463   009820  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35464   009822  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35465   009824  0E24               	movlw	36
 35466   009826  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35467   009828  0EF4               	movlw	244
 35468   00982A  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35469   00982C  0E00               	movlw	0
 35470   00982E  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35471   009830  0E00               	movlw	0
 35472   009832  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35473   009834  EC10  F05B         	call	___lmul	;wreg free
 35474   009838  0100               	movlb	0	; () banked
 35475   00983A  51A4               	movf	??_pbUpTimer& (0+255),w,b
 35476   00983C  5D91               	subwf	?___lmul& (0+255),w,b
 35477   00983E  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 35478   009840  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35479   009842  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 35480   009844  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35481   009846  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 35482   009848  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35483   00984A  B0D8               	btfsc	status,0,c
 35484   00984C  D002               	goto	l1992
 35485                           
 35486                           ; BSR set to: 0
 35487                           ;../../VLCBlib_PIC/vlcb.c: 937:             return 0;
 35488   00984E  0E00               	movlw	0
 35489   009850  0012               	return	
 35490   009852                     l1992:
 35491                           
 35492                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35493   009852  B480               	btfsc	128,2,c	;volatile
 35494   009854  D7D1               	goto	l24124
 35495                           
 35496                           ;../../VLCBlib_PIC/vlcb.c: 941:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35497   009856  ECE4  F05A         	call	_tickGet	;wreg free
 35498   00985A  5033               	movf	_pbTimer^0,w,c
 35499   00985C  0100               	movlb	0	; () banked
 35500   00985E  5D8D               	subwf	?_tickGet& (0+255),w,b
 35501   009860  6F97               	movwf	___lldiv@dividend& (0+255),b
 35502   009862  5034               	movf	(_pbTimer+1)^0,w,c
 35503   009864  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35504   009866  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35505   009868  5035               	movf	(_pbTimer+2)^0,w,c
 35506   00986A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35507   00986C  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35508   00986E  5036               	movf	(_pbTimer+3)^0,w,c
 35509   009870  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35510   009872  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35511   009874  0E24               	movlw	36
 35512   009876  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35513   009878  0EF4               	movlw	244
 35514   00987A  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35515   00987C  0E00               	movlw	0
 35516   00987E  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35517   009880  0E00               	movlw	0
 35518   009882  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 35519   009884  ECA2  F053         	call	___lldiv	;wreg free
 35520   009888  0100               	movlb	0	; () banked
 35521   00988A  5197               	movf	?___lldiv& (0+255),w,b
 35522                           
 35523                           ; BSR set to: 0
 35524   00988C  0012               	return		;funcret
 35525   00988E                     __end_of_pbUpTimer:
 35526                           	callstack 0
 35527                           
 35528 ;; *************** function _pbDownTimer *****************
 35529 ;; Defined at:
 35530 ;;		line 912 in file "../../VLCBlib_PIC/vlcb.c"
 35531 ;; Parameters:    Size  Location     Type
 35532 ;;  timeout         1    wreg     unsigned char 
 35533 ;; Auto vars:     Size  Location     Type
 35534 ;;  timeout         1   72[BANK0 ] unsigned char 
 35535 ;; Return value:  Size  Location     Type
 35536 ;;                  1    wreg      unsigned char 
 35537 ;; Registers used:
 35538 ;;		wreg, status,2, status,0, cstack
 35539 ;; Tracked objects:
 35540 ;;		On entry : 0/0
 35541 ;;		On exit  : 0/0
 35542 ;;		Unchanged: 0/0
 35543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35547 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35548 ;;Total ram usage:        5 bytes
 35549 ;; Hardware stack levels used: 1
 35550 ;; Hardware stack levels required when called: 14
 35551 ;; This function calls:
 35552 ;;		___lldiv
 35553 ;;		___lmul
 35554 ;;		_leds_poll
 35555 ;;		_tickGet
 35556 ;; This function is called by:
 35557 ;;		_checkPowerOnPb
 35558 ;; This function uses a non-reentrant model
 35559 ;;
 35560                           
 35561                           	psect	text144
 35562   00988E                     __ptext144:
 35563                           	callstack 0
 35564   00988E                     _pbDownTimer:
 35565                           	callstack 15
 35566                           
 35567                           ; BSR set to: 0
 35568                           ;incstack = 0
 35569                           ;pbDownTimer@timeout stored from wreg
 35570   00988E  0100               	movlb	0	; () banked
 35571   009890  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 35572                           
 35573                           ;../../VLCBlib_PIC/vlcb.c: 914:     pbTimer.val = tickGet();
 35574   009892  ECE4  F05A         	call	_tickGet	;wreg free
 35575   009896  C08D  F033         	movff	?_tickGet,_pbTimer
 35576   00989A  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 35577   00989E  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 35578   0098A2  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 35579                           
 35580                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 35581   0098A6  D02D               	goto	l1985
 35582   0098A8                     l24112:
 35583                           
 35584                           ;../../VLCBlib_PIC/vlcb.c: 916:         leds_poll();
 35585   0098A8  EC6E  F02E         	call	_leds_poll	;wreg free
 35586                           
 35587                           ;../../VLCBlib_PIC/vlcb.c: 917:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35588   0098AC  ECE4  F05A         	call	_tickGet	;wreg free
 35589   0098B0  5033               	movf	_pbTimer^0,w,c
 35590   0098B2  0100               	movlb	0	; () banked
 35591   0098B4  5D8D               	subwf	?_tickGet& (0+255),w,b
 35592   0098B6  6FA4               	movwf	??_pbDownTimer& (0+255),b
 35593   0098B8  5034               	movf	(_pbTimer+1)^0,w,c
 35594   0098BA  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35595   0098BC  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 35596   0098BE  5035               	movf	(_pbTimer+2)^0,w,c
 35597   0098C0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35598   0098C2  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 35599   0098C4  5036               	movf	(_pbTimer+3)^0,w,c
 35600   0098C6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35601   0098C8  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 35602   0098CA  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 35603   0098CC  6F91               	movwf	___lmul@multiplier& (0+255),b
 35604   0098CE  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35605   0098D0  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35606   0098D2  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35607   0098D4  0E24               	movlw	36
 35608   0098D6  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35609   0098D8  0EF4               	movlw	244
 35610   0098DA  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35611   0098DC  0E00               	movlw	0
 35612   0098DE  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35613   0098E0  0E00               	movlw	0
 35614   0098E2  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35615   0098E4  EC10  F05B         	call	___lmul	;wreg free
 35616   0098E8  0100               	movlb	0	; () banked
 35617   0098EA  51A4               	movf	??_pbDownTimer& (0+255),w,b
 35618   0098EC  5D91               	subwf	?___lmul& (0+255),w,b
 35619   0098EE  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 35620   0098F0  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35621   0098F2  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 35622   0098F4  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35623   0098F6  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 35624   0098F8  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35625   0098FA  B0D8               	btfsc	status,0,c
 35626   0098FC  D002               	goto	l1985
 35627                           
 35628                           ; BSR set to: 0
 35629                           ;../../VLCBlib_PIC/vlcb.c: 918:             return 0;
 35630   0098FE  0E00               	movlw	0
 35631   009900  0012               	return	
 35632   009902                     l1985:
 35633                           
 35634                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 35635   009902  A480               	btfss	128,2,c	;volatile
 35636   009904  D7D1               	goto	l24112
 35637                           
 35638                           ;../../VLCBlib_PIC/vlcb.c: 922:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35639   009906  ECE4  F05A         	call	_tickGet	;wreg free
 35640   00990A  5033               	movf	_pbTimer^0,w,c
 35641   00990C  0100               	movlb	0	; () banked
 35642   00990E  5D8D               	subwf	?_tickGet& (0+255),w,b
 35643   009910  6F97               	movwf	___lldiv@dividend& (0+255),b
 35644   009912  5034               	movf	(_pbTimer+1)^0,w,c
 35645   009914  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35646   009916  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35647   009918  5035               	movf	(_pbTimer+2)^0,w,c
 35648   00991A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35649   00991C  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35650   00991E  5036               	movf	(_pbTimer+3)^0,w,c
 35651   009920  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35652   009922  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35653   009924  0E24               	movlw	36
 35654   009926  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35655   009928  0EF4               	movlw	244
 35656   00992A  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35657   00992C  0E00               	movlw	0
 35658   00992E  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35659   009930  0E00               	movlw	0
 35660   009932  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 35661   009934  ECA2  F053         	call	___lldiv	;wreg free
 35662   009938  0100               	movlb	0	; () banked
 35663   00993A  5197               	movf	?___lldiv& (0+255),w,b
 35664                           
 35665                           ; BSR set to: 0
 35666   00993C  0012               	return		;funcret
 35667   00993E                     __end_of_pbDownTimer:
 35668                           	callstack 0
 35669                           
 35670 ;; *************** function _leds_poll *****************
 35671 ;; Defined at:
 35672 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 35673 ;; Parameters:    Size  Location     Type
 35674 ;;		None
 35675 ;; Auto vars:     Size  Location     Type
 35676 ;;		None
 35677 ;; Return value:  Size  Location     Type
 35678 ;;                  1    wreg      void 
 35679 ;; Registers used:
 35680 ;;		wreg, status,2, status,0, cstack
 35681 ;; Tracked objects:
 35682 ;;		On entry : 0/0
 35683 ;;		On exit  : 0/0
 35684 ;;		Unchanged: 0/0
 35685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35688 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35689 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35690 ;;Total ram usage:        4 bytes
 35691 ;; Hardware stack levels used: 1
 35692 ;; Hardware stack levels required when called: 13
 35693 ;; This function calls:
 35694 ;;		___awdiv
 35695 ;;		_tickGet
 35696 ;; This function is called by:
 35697 ;;		_pbDownTimer
 35698 ;;		_pbUpTimer
 35699 ;;		_poll
 35700 ;; This function uses a non-reentrant model
 35701 ;;
 35702                           
 35703                           	psect	text145
 35704   005CDC                     __ptext145:
 35705                           	callstack 0
 35706   005CDC                     _leds_poll:
 35707                           	callstack 16
 35708                           
 35709                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 35710                           
 35711                           ; BSR set to: 0
 35712                           ;incstack = 0
 35713   005CDC  ECE4  F05A         	call	_tickGet	;wreg free
 35714   005CE0  0101               	movlb	1	; () banked
 35715   005CE2  5148               	movf	_ledTimer& (0+255),w,b
 35716   005CE4  0100               	movlb	0	; () banked
 35717   005CE6  5D8D               	subwf	?_tickGet& (0+255),w,b
 35718   005CE8  6F9F               	movwf	??_leds_poll& (0+255),b
 35719   005CEA  0101               	movlb	1	; () banked
 35720   005CEC  5149               	movf	(_ledTimer+1)& (0+255),w,b
 35721   005CEE  0100               	movlb	0	; () banked
 35722   005CF0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35723   005CF2  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 35724   005CF4  0101               	movlb	1	; () banked
 35725   005CF6  514A               	movf	(_ledTimer+2)& (0+255),w,b
 35726   005CF8  0100               	movlb	0	; () banked
 35727   005CFA  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35728   005CFC  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 35729   005CFE  0101               	movlb	1	; () banked
 35730   005D00  514B               	movf	(_ledTimer+3)& (0+255),w,b
 35731   005D02  0100               	movlb	0	; () banked
 35732   005D04  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35733   005D06  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 35734   005D08  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 35735   005D0A  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 35736   005D0C  E106               	bnz	u23050
 35737   005D0E  0E72               	movlw	114
 35738   005D10  5D9F               	subwf	??_leds_poll& (0+255),w,b
 35739   005D12  0E02               	movlw	2
 35740   005D14  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 35741   005D16  A0D8               	btfss	status,0,c
 35742   005D18  D06B               	goto	l22178
 35743   005D1A                     u23050:
 35744                           
 35745                           ; BSR set to: 0
 35746                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 35747   005D1A  2BB9               	incf	_flashCounter& (0+255),f,b
 35748                           
 35749                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 35750   005D1C  2BBA               	incf	(_flashCounter+1)& (0+255),f,b
 35751                           
 35752                           ; BSR set to: 0
 35753                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 35754   005D1E  ECE4  F05A         	call	_tickGet	;wreg free
 35755   005D22  C08D  F148         	movff	?_tickGet,_ledTimer
 35756   005D26  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
 35757   005D2A  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
 35758   005D2E  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
 35759   005D32  D05E               	goto	l22178
 35760   005D34                     l1751:
 35761                           
 35762                           ; BSR set to: 0
 35763                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 35764   005D34  8C8A               	bsf	138,6,c	;volatile
 35765   005D36                     l22134:
 35766                           
 35767                           ; BSR set to: 0
 35768                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 35769   005D36  0E00               	movlw	0
 35770   005D38  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35771                           
 35772                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 35773   005D3A  D0E0               	goto	l22224
 35774   005D3C                     l1753:
 35775                           
 35776                           ; BSR set to: 0
 35777                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 35778   005D3C  9C8A               	bcf	138,6,c	;volatile
 35779   005D3E  D7FB               	goto	l22134
 35780   005D40                     l22138:
 35781                           
 35782                           ; BSR set to: 0
 35783                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 35784   005D40  C0BA  F097         	movff	_flashCounter+1,___awdiv@dividend
 35785   005D44  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35786   005D46  0E00               	movlw	0
 35787   005D48  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35788   005D4A  0E19               	movlw	25
 35789   005D4C  6F99               	movwf	___awdiv@divisor& (0+255),b
 35790   005D4E  EC1C  F053         	call	___awdiv	;wreg free
 35791   005D52  0100               	movlb	0	; () banked
 35792   005D54  3B97               	swapf	?___awdiv& (0+255),f,b
 35793   005D56  4797               	rlncf	?___awdiv& (0+255),f,b
 35794   005D58  4797               	rlncf	?___awdiv& (0+255),f,b
 35795   005D5A  508A               	movf	138,w,c	;volatile
 35796   005D5C  1997               	xorwf	?___awdiv& (0+255),w,b
 35797   005D5E  0BBF               	andlw	-65
 35798   005D60  1997               	xorwf	?___awdiv& (0+255),w,b
 35799   005D62  6E8A               	movwf	138,c	;volatile
 35800                           
 35801                           ; BSR set to: 0
 35802                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 35803   005D64  0E31               	movlw	49
 35804   005D66                     L16:
 35805   005D66  65BA               	cpfsgt	(_flashCounter+1)& (0+255),b
 35806   005D68  D0C9               	goto	l22224
 35807   005D6A  D7E5               	goto	l22134
 35808   005D6C                     l22144:
 35809                           
 35810                           ; BSR set to: 0
 35811                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 35812   005D6C  C0BA  F097         	movff	_flashCounter+1,___awdiv@dividend
 35813   005D70  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35814   005D72  0E00               	movlw	0
 35815   005D74  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35816   005D76  0E32               	movlw	50
 35817   005D78  6F99               	movwf	___awdiv@divisor& (0+255),b
 35818   005D7A  EC1C  F053         	call	___awdiv	;wreg free
 35819   005D7E  0100               	movlb	0	; () banked
 35820   005D80  3B97               	swapf	?___awdiv& (0+255),f,b
 35821   005D82  4797               	rlncf	?___awdiv& (0+255),f,b
 35822   005D84  4797               	rlncf	?___awdiv& (0+255),f,b
 35823   005D86  508A               	movf	138,w,c	;volatile
 35824   005D88  1997               	xorwf	?___awdiv& (0+255),w,b
 35825   005D8A  0BBF               	andlw	-65
 35826   005D8C  1997               	xorwf	?___awdiv& (0+255),w,b
 35827   005D8E  6E8A               	movwf	138,c	;volatile
 35828                           
 35829                           ; BSR set to: 0
 35830                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 35831   005D90  0E63               	movlw	99
 35832   005D92  D7E9               	goto	L16
 35833   005D94                     l22150:
 35834                           
 35835                           ; BSR set to: 0
 35836                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 35837   005D94  C0BA  F097         	movff	_flashCounter+1,___awdiv@dividend
 35838   005D98  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35839   005D9A  0E00               	movlw	0
 35840   005D9C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35841   005D9E  0E64               	movlw	100
 35842   005DA0  6F99               	movwf	___awdiv@divisor& (0+255),b
 35843   005DA2  EC1C  F053         	call	___awdiv	;wreg free
 35844   005DA6  0100               	movlb	0	; () banked
 35845   005DA8  3B97               	swapf	?___awdiv& (0+255),f,b
 35846   005DAA  4797               	rlncf	?___awdiv& (0+255),f,b
 35847   005DAC  4797               	rlncf	?___awdiv& (0+255),f,b
 35848   005DAE  508A               	movf	138,w,c	;volatile
 35849   005DB0  1997               	xorwf	?___awdiv& (0+255),w,b
 35850   005DB2  0BBF               	andlw	-65
 35851   005DB4  1997               	xorwf	?___awdiv& (0+255),w,b
 35852   005DB6  6E8A               	movwf	138,c	;volatile
 35853                           
 35854                           ; BSR set to: 0
 35855                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 35856   005DB8  0EC7               	movlw	199
 35857   005DBA  D7D5               	goto	L16
 35858   005DBC                     l1760:
 35859                           
 35860                           ; BSR set to: 0
 35861                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 35862   005DBC  8C8A               	bsf	138,6,c	;volatile
 35863                           
 35864                           ; BSR set to: 0
 35865                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 35866   005DBE  0E18               	movlw	24
 35867   005DC0  65BA               	cpfsgt	(_flashCounter+1)& (0+255),b
 35868   005DC2  D09C               	goto	l22224
 35869                           
 35870                           ; BSR set to: 0
 35871                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 35872   005DC4  0E00               	movlw	0
 35873   005DC6  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35874                           
 35875                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 35876   005DC8  0E00               	movlw	0
 35877   005DCA  D007               	goto	L17
 35878   005DCC                     l1762:
 35879                           
 35880                           ; BSR set to: 0
 35881                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 35882   005DCC  9C8A               	bcf	138,6,c	;volatile
 35883                           
 35884                           ; BSR set to: 0
 35885                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 35886   005DCE  0E18               	movlw	24
 35887   005DD0  65BA               	cpfsgt	(_flashCounter+1)& (0+255),b
 35888   005DD2  D094               	goto	l22224
 35889                           
 35890                           ; BSR set to: 0
 35891                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 35892   005DD4  0E00               	movlw	0
 35893   005DD6  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35894                           
 35895                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 35896   005DD8  0E01               	movlw	1
 35897   005DDA                     L17:
 35898   005DDA  6FBC               	movwf	(_ledState+1)& (0+255),b
 35899   005DDC  D08F               	goto	l22224
 35900   005DDE                     l1764:
 35901                           
 35902                           ; BSR set to: 0
 35903                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 35904   005DDE  8C8A               	bsf	138,6,c	;volatile
 35905                           
 35906                           ; BSR set to: 0
 35907                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 35908   005DE0  0E31               	movlw	49
 35909   005DE2  D7EE               	goto	L20
 35910   005DE4                     l1766:
 35911                           
 35912                           ; BSR set to: 0
 35913                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 35914   005DE4  9C8A               	bcf	138,6,c	;volatile
 35915                           
 35916                           ; BSR set to: 0
 35917                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 35918   005DE6  0E31               	movlw	49
 35919   005DE8  D7F3               	goto	L21
 35920   005DEA                     l1768:
 35921                           
 35922                           ; BSR set to: 0
 35923                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 35924   005DEA  9C8A               	bcf	138,6,c	;volatile
 35925                           
 35926                           ; BSR set to: 0
 35927                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 35928   005DEC  0E63               	movlw	99
 35929   005DEE  D7F0               	goto	L21
 35930   005DF0                     l22178:
 35931   005DF0  0100               	movlb	0	; () banked
 35932   005DF2  51BC               	movf	(_ledState+1)& (0+255),w,b
 35933   005DF4  6F9F               	movwf	??_leds_poll& (0+255),b
 35934   005DF6  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 35935                           
 35936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35937                           ; Switch size 1, requested type "simple"
 35938                           ; Number of cases is 1, Range of values is 0 to 0
 35939                           ; switch strategies available:
 35940                           ; Name         Instructions Cycles
 35941                           ; simple_byte            4     3 (average)
 35942                           ;	Chosen strategy is simple_byte
 35943   005DF8  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35944   005DFA  0A00               	xorlw	0	; case 0
 35945   005DFC  A4D8               	btfss	status,2,c
 35946   005DFE  D07E               	goto	l22224
 35947                           
 35948                           ; BSR set to: 0
 35949                           ; Switch size 1, requested type "simple"
 35950                           ; Number of cases is 10, Range of values is 0 to 9
 35951                           ; switch strategies available:
 35952                           ; Name         Instructions Cycles
 35953                           ; simple_byte           31    16 (average)
 35954                           ;	Chosen strategy is simple_byte
 35955   005E00  519F               	movf	??_leds_poll& (0+255),w,b
 35956   005E02  0A00               	xorlw	0	; case 0
 35957   005E04  B4D8               	btfsc	status,2,c
 35958   005E06  D79A               	goto	l1753
 35959   005E08  0A01               	xorlw	1	; case 1
 35960   005E0A  B4D8               	btfsc	status,2,c
 35961   005E0C  D793               	goto	l1751
 35962   005E0E  0A03               	xorlw	3	; case 2
 35963   005E10  B4D8               	btfsc	status,2,c
 35964   005E12  D796               	goto	l22138
 35965   005E14  0A01               	xorlw	1	; case 3
 35966   005E16  B4D8               	btfsc	status,2,c
 35967   005E18  D7A9               	goto	l22144
 35968   005E1A  0A07               	xorlw	7	; case 4
 35969   005E1C  B4D8               	btfsc	status,2,c
 35970   005E1E  D7BA               	goto	l22150
 35971   005E20  0A01               	xorlw	1	; case 5
 35972   005E22  B4D8               	btfsc	status,2,c
 35973   005E24  D7D3               	goto	l1762
 35974   005E26  0A03               	xorlw	3	; case 6
 35975   005E28  B4D8               	btfsc	status,2,c
 35976   005E2A  D7C8               	goto	l1760
 35977   005E2C  0A01               	xorlw	1	; case 7
 35978   005E2E  B4D8               	btfsc	status,2,c
 35979   005E30  D7D9               	goto	l1766
 35980   005E32  0A0F               	xorlw	15	; case 8
 35981   005E34  B4D8               	btfsc	status,2,c
 35982   005E36  D7D3               	goto	l1764
 35983   005E38  0A01               	xorlw	1	; case 9
 35984   005E3A  B4D8               	btfsc	status,2,c
 35985   005E3C  D7D6               	goto	l1768
 35986   005E3E  D05E               	goto	l22224
 35987   005E40                     l1771:
 35988                           
 35989                           ; BSR set to: 0
 35990                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 35991   005E40  8E8A               	bsf	138,7,c	;volatile
 35992   005E42                     l22180:
 35993                           
 35994                           ; BSR set to: 0
 35995                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 35996   005E42  0E00               	movlw	0
 35997   005E44  6FB9               	movwf	_flashCounter& (0+255),b
 35998                           
 35999                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 36000   005E46  0012               	return	
 36001   005E48                     l1773:
 36002                           
 36003                           ; BSR set to: 0
 36004                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 36005   005E48  9E8A               	bcf	138,7,c	;volatile
 36006   005E4A  D7FB               	goto	l22180
 36007   005E4C                     l22184:
 36008                           
 36009                           ; BSR set to: 0
 36010                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 36011   005E4C  C0B9  F097         	movff	_flashCounter,___awdiv@dividend
 36012   005E50  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36013   005E52  0E00               	movlw	0
 36014   005E54  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36015   005E56  0E19               	movlw	25
 36016   005E58  6F99               	movwf	___awdiv@divisor& (0+255),b
 36017   005E5A  EC1C  F053         	call	___awdiv	;wreg free
 36018   005E5E  0100               	movlb	0	; () banked
 36019   005E60  3397               	rrcf	?___awdiv& (0+255),f,b
 36020   005E62  3397               	rrcf	?___awdiv& (0+255),f,b
 36021   005E64  508A               	movf	138,w,c	;volatile
 36022   005E66  1997               	xorwf	?___awdiv& (0+255),w,b
 36023   005E68  0B7F               	andlw	-129
 36024   005E6A  1997               	xorwf	?___awdiv& (0+255),w,b
 36025   005E6C  6E8A               	movwf	138,c	;volatile
 36026                           
 36027                           ; BSR set to: 0
 36028                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 36029   005E6E  0E31               	movlw	49
 36030   005E70                     L19:
 36031   005E70  65B9               	cpfsgt	_flashCounter& (0+255),b
 36032   005E72  0012               	return	
 36033   005E74  D7E6               	goto	l22180
 36034   005E76                     l22190:
 36035                           
 36036                           ; BSR set to: 0
 36037                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 36038   005E76  C0B9  F097         	movff	_flashCounter,___awdiv@dividend
 36039   005E7A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36040   005E7C  0E00               	movlw	0
 36041   005E7E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36042   005E80  0E32               	movlw	50
 36043   005E82  6F99               	movwf	___awdiv@divisor& (0+255),b
 36044   005E84  EC1C  F053         	call	___awdiv	;wreg free
 36045   005E88  0100               	movlb	0	; () banked
 36046   005E8A  3397               	rrcf	?___awdiv& (0+255),f,b
 36047   005E8C  3397               	rrcf	?___awdiv& (0+255),f,b
 36048   005E8E  508A               	movf	138,w,c	;volatile
 36049   005E90  1997               	xorwf	?___awdiv& (0+255),w,b
 36050   005E92  0B7F               	andlw	-129
 36051   005E94  1997               	xorwf	?___awdiv& (0+255),w,b
 36052   005E96  6E8A               	movwf	138,c	;volatile
 36053                           
 36054                           ; BSR set to: 0
 36055                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 36056   005E98  0E63               	movlw	99
 36057   005E9A  D7EA               	goto	L19
 36058   005E9C                     l22196:
 36059                           
 36060                           ; BSR set to: 0
 36061                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 36062   005E9C  C0B9  F097         	movff	_flashCounter,___awdiv@dividend
 36063   005EA0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36064   005EA2  0E00               	movlw	0
 36065   005EA4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36066   005EA6  0E64               	movlw	100
 36067   005EA8  6F99               	movwf	___awdiv@divisor& (0+255),b
 36068   005EAA  EC1C  F053         	call	___awdiv	;wreg free
 36069   005EAE  0100               	movlb	0	; () banked
 36070   005EB0  3397               	rrcf	?___awdiv& (0+255),f,b
 36071   005EB2  3397               	rrcf	?___awdiv& (0+255),f,b
 36072   005EB4  508A               	movf	138,w,c	;volatile
 36073   005EB6  1997               	xorwf	?___awdiv& (0+255),w,b
 36074   005EB8  0B7F               	andlw	-129
 36075   005EBA  1997               	xorwf	?___awdiv& (0+255),w,b
 36076   005EBC  6E8A               	movwf	138,c	;volatile
 36077                           
 36078                           ; BSR set to: 0
 36079                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 36080   005EBE  0EC7               	movlw	199
 36081   005EC0  D7D7               	goto	L19
 36082   005EC2                     l1780:
 36083                           
 36084                           ; BSR set to: 0
 36085                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 36086   005EC2  8E8A               	bsf	138,7,c	;volatile
 36087                           
 36088                           ; BSR set to: 0
 36089                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 36090   005EC4  0E18               	movlw	24
 36091   005EC6  D00F               	goto	L23
 36092   005EC8                     u23170:
 36093                           
 36094                           ; BSR set to: 0
 36095                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 36096   005EC8  0E00               	movlw	0
 36097   005ECA  6FB9               	movwf	_flashCounter& (0+255),b
 36098                           
 36099                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 36100   005ECC  0E00               	movlw	0
 36101   005ECE  6FBB               	movwf	_ledState& (0+255),b
 36102   005ED0  0012               	return	
 36103   005ED2                     l1782:
 36104                           
 36105                           ; BSR set to: 0
 36106                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 36107   005ED2  9E8A               	bcf	138,7,c	;volatile
 36108                           
 36109                           ; BSR set to: 0
 36110                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 36111   005ED4  0E18               	movlw	24
 36112   005ED6  D00C               	goto	L22
 36113   005ED8                     u23180:
 36114                           
 36115                           ; BSR set to: 0
 36116                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 36117   005ED8  0E00               	movlw	0
 36118   005EDA  6FB9               	movwf	_flashCounter& (0+255),b
 36119                           
 36120                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 36121   005EDC  0E01               	movlw	1
 36122   005EDE  6FBB               	movwf	_ledState& (0+255),b
 36123   005EE0  0012               	return	
 36124   005EE2                     l1784:
 36125                           
 36126                           ; BSR set to: 0
 36127                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 36128   005EE2  8E8A               	bsf	138,7,c	;volatile
 36129                           
 36130                           ; BSR set to: 0
 36131                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 36132   005EE4  0E31               	movlw	49
 36133   005EE6                     L23:
 36134   005EE6  65B9               	cpfsgt	_flashCounter& (0+255),b
 36135   005EE8  0012               	return	
 36136   005EEA  D7EE               	goto	u23170
 36137   005EEC                     l1786:
 36138                           
 36139                           ; BSR set to: 0
 36140                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 36141   005EEC  9E8A               	bcf	138,7,c	;volatile
 36142                           
 36143                           ; BSR set to: 0
 36144                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 36145   005EEE  0E31               	movlw	49
 36146   005EF0                     L22:
 36147   005EF0  65B9               	cpfsgt	_flashCounter& (0+255),b
 36148   005EF2  0012               	return	
 36149   005EF4  D7F1               	goto	u23180
 36150   005EF6                     l1788:
 36151                           
 36152                           ; BSR set to: 0
 36153                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 36154   005EF6  9E8A               	bcf	138,7,c	;volatile
 36155                           
 36156                           ; BSR set to: 0
 36157                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 36158   005EF8  0E63               	movlw	99
 36159   005EFA  D7FA               	goto	L22
 36160   005EFC                     l22224:
 36161                           
 36162                           ; BSR set to: 0
 36163   005EFC  51BB               	movf	_ledState& (0+255),w,b
 36164   005EFE  6F9F               	movwf	??_leds_poll& (0+255),b
 36165   005F00  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 36166                           
 36167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36168                           ; Switch size 1, requested type "simple"
 36169                           ; Number of cases is 1, Range of values is 0 to 0
 36170                           ; switch strategies available:
 36171                           ; Name         Instructions Cycles
 36172                           ; simple_byte            4     3 (average)
 36173                           ;	Chosen strategy is simple_byte
 36174   005F02  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 36175   005F04  0A00               	xorlw	0	; case 0
 36176   005F06  A4D8               	btfss	status,2,c
 36177   005F08  0012               	return	
 36178                           
 36179                           ; BSR set to: 0
 36180                           ; Switch size 1, requested type "simple"
 36181                           ; Number of cases is 10, Range of values is 0 to 9
 36182                           ; switch strategies available:
 36183                           ; Name         Instructions Cycles
 36184                           ; simple_byte           31    16 (average)
 36185                           ;	Chosen strategy is simple_byte
 36186   005F0A  519F               	movf	??_leds_poll& (0+255),w,b
 36187   005F0C  0A00               	xorlw	0	; case 0
 36188   005F0E  B4D8               	btfsc	status,2,c
 36189   005F10  D79B               	goto	l1773
 36190   005F12  0A01               	xorlw	1	; case 1
 36191   005F14  B4D8               	btfsc	status,2,c
 36192   005F16  D794               	goto	l1771
 36193   005F18  0A03               	xorlw	3	; case 2
 36194   005F1A  B4D8               	btfsc	status,2,c
 36195   005F1C  D797               	goto	l22184
 36196   005F1E  0A01               	xorlw	1	; case 3
 36197   005F20  B4D8               	btfsc	status,2,c
 36198   005F22  D7A9               	goto	l22190
 36199   005F24  0A07               	xorlw	7	; case 4
 36200   005F26  B4D8               	btfsc	status,2,c
 36201   005F28  D7B9               	goto	l22196
 36202   005F2A  0A01               	xorlw	1	; case 5
 36203   005F2C  B4D8               	btfsc	status,2,c
 36204   005F2E  D7D1               	goto	l1782
 36205   005F30  0A03               	xorlw	3	; case 6
 36206   005F32  B4D8               	btfsc	status,2,c
 36207   005F34  D7C6               	goto	l1780
 36208   005F36  0A01               	xorlw	1	; case 7
 36209   005F38  B4D8               	btfsc	status,2,c
 36210   005F3A  D7D8               	goto	l1786
 36211   005F3C  0A0F               	xorlw	15	; case 8
 36212   005F3E  B4D8               	btfsc	status,2,c
 36213   005F40  D7D0               	goto	l1784
 36214   005F42  0A01               	xorlw	1	; case 9
 36215   005F44  A4D8               	btfss	status,2,c
 36216   005F46  0012               	return	
 36217   005F48  D7D6               	goto	l1788
 36218   005F4A                     __end_of_leds_poll:
 36219                           	callstack 0
 36220                           
 36221 ;; *************** function _tickGet *****************
 36222 ;; Defined at:
 36223 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 36224 ;; Parameters:    Size  Location     Type
 36225 ;;		None
 36226 ;; Auto vars:     Size  Location     Type
 36227 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 36228 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 36229 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 36230 ;; Return value:  Size  Location     Type
 36231 ;;                  4   45[BANK0 ] unsigned long 
 36232 ;; Registers used:
 36233 ;;		wreg, status,2, status,0
 36234 ;; Tracked objects:
 36235 ;;		On entry : 0/0
 36236 ;;		On exit  : 0/0
 36237 ;;		Unchanged: 0/0
 36238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36239 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36240 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36242 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36243 ;;Total ram usage:       10 bytes
 36244 ;; Hardware stack levels used: 1
 36245 ;; Hardware stack levels required when called: 12
 36246 ;; This function calls:
 36247 ;;		Nothing
 36248 ;; This function is called by:
 36249 ;;		_setup
 36250 ;;		_loop
 36251 ;;		_doWait
 36252 ;;		_initServos
 36253 ;;		_pollServos
 36254 ;;		_mnsPowerUp
 36255 ;;		_mnsPoll
 36256 ;;		_leds_powerUp
 36257 ;;		_leds_poll
 36258 ;;		_pbDownTimer
 36259 ;;		_pbUpTimer
 36260 ;;		_poll
 36261 ;;		_canPowerUp
 36262 ;;		_handleSelfEnumeration
 36263 ;;		_processEnumeration
 36264 ;; This function uses a non-reentrant model
 36265 ;;
 36266                           
 36267                           	psect	text146
 36268   00B5C8                     __ptext146:
 36269                           	callstack 0
 36270   00B5C8                     _tickGet:
 36271                           	callstack 17
 36272                           
 36273                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 36274                           
 36275                           ; BSR set to: 0
 36276                           ;incstack = 0
 36277   00B5C8  0E00               	movlw	0
 36278   00B5CA  0100               	movlb	0	; () banked
 36279   00B5CC  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 36280                           
 36281                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 36282   00B5CE  0E00               	movlw	0
 36283   00B5D0  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 36284                           
 36285                           ; BSR set to: 0
 36286                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 36287   00B5D2  9AF2               	bcf	242,5,c	;volatile
 36288   00B5D4                     l20366:
 36289                           
 36290                           ; BSR set to: 0
 36291                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 36292   00B5D4  0E00               	movlw	0
 36293   00B5D6  B4F2               	btfsc	242,2,c	;volatile
 36294   00B5D8  0E01               	movlw	1
 36295   00B5DA  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 36296                           
 36297                           ; BSR set to: 0
 36298                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 36299   00B5DC  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 36300                           
 36301                           ; BSR set to: 0
 36302                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 36303   00B5E0  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 36304                           
 36305                           ; BSR set to: 0
 36306                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 36307   00B5E4  0E00               	movlw	0
 36308   00B5E6  B4F2               	btfsc	242,2,c	;volatile
 36309   00B5E8  0E01               	movlw	1
 36310   00B5EA  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 36311                           
 36312                           ; BSR set to: 0
 36313                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 36314   00B5EC  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 36315   00B5EE  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 36316   00B5F0  A4D8               	btfss	status,2,c
 36317   00B5F2  D7F0               	goto	l20366
 36318                           
 36319                           ; BSR set to: 0
 36320                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 36321   00B5F4  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 36322   00B5F6  B4D8               	btfsc	status,2,c
 36323   00B5F8  D005               	goto	l20386
 36324                           
 36325                           ; BSR set to: 0
 36326                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 36327   00B5FA  94F2               	bcf	242,2,c	;volatile
 36328                           
 36329                           ; BSR set to: 0
 36330                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 36331   00B5FC  2BC7               	incf	_timerExtension1& (0+255),f,b	;volatile
 36332                           
 36333                           ; BSR set to: 0
 36334                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 36335   00B5FE  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 36336   00B600  B4D8               	btfsc	status,2,c
 36337                           
 36338                           ; BSR set to: 0
 36339                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 36340   00B602  2BC6               	incf	_timerExtension2& (0+255),f,b	;volatile
 36341   00B604                     l20386:
 36342                           
 36343                           ; BSR set to: 0
 36344                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 36345   00B604  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 36346   00B606  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 36347                           
 36348                           ; BSR set to: 0
 36349                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 36350   00B608  51C6               	movf	_timerExtension2& (0+255),w,b	;volatile
 36351   00B60A  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 36352                           
 36353                           ; BSR set to: 0
 36354                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 36355   00B60C  8AF2               	bsf	242,5,c	;volatile
 36356                           
 36357                           ; BSR set to: 0
 36358                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 36359   00B60E  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 36360   00B612  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 36361   00B616  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 36362   00B61A  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 36363                           
 36364                           ; BSR set to: 0
 36365   00B61E  0012               	return		;funcret
 36366   00B620                     __end_of_tickGet:
 36367                           	callstack 0
 36368                           
 36369 ;; *************** function ___lmul *****************
 36370 ;; Defined at:
 36371 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 36372 ;; Parameters:    Size  Location     Type
 36373 ;;  multiplier      4   49[BANK0 ] unsigned long 
 36374 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 36375 ;; Auto vars:     Size  Location     Type
 36376 ;;  product         4   57[BANK0 ] unsigned long 
 36377 ;; Return value:  Size  Location     Type
 36378 ;;                  4   49[BANK0 ] unsigned long 
 36379 ;; Registers used:
 36380 ;;		wreg, status,2, status,0
 36381 ;; Tracked objects:
 36382 ;;		On entry : 0/0
 36383 ;;		On exit  : 0/0
 36384 ;;		Unchanged: 0/0
 36385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36386 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36387 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36389 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36390 ;;Total ram usage:       12 bytes
 36391 ;; Hardware stack levels used: 1
 36392 ;; Hardware stack levels required when called: 12
 36393 ;; This function calls:
 36394 ;;		Nothing
 36395 ;; This function is called by:
 36396 ;;		_loop
 36397 ;;		_doWait
 36398 ;;		_pbDownTimer
 36399 ;;		_pbUpTimer
 36400 ;;		_poll
 36401 ;; This function uses a non-reentrant model
 36402 ;;
 36403                           
 36404                           	psect	text147
 36405   00B620                     __ptext147:
 36406                           	callstack 0
 36407   00B620                     ___lmul:
 36408                           	callstack 17
 36409                           
 36410                           ; BSR set to: 0
 36411                           ;incstack = 0
 36412   00B620  0E00               	movlw	0
 36413   00B622  0100               	movlb	0	; () banked
 36414   00B624  6F99               	movwf	___lmul@product& (0+255),b
 36415   00B626  0E00               	movlw	0
 36416   00B628  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 36417   00B62A  0E00               	movlw	0
 36418   00B62C  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 36419   00B62E  0E00               	movlw	0
 36420   00B630  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 36421   00B632                     l21286:
 36422                           
 36423                           ; BSR set to: 0
 36424   00B632  A191               	btfss	___lmul@multiplier& (0+255),0,b
 36425   00B634  D008               	goto	l21290
 36426                           
 36427                           ; BSR set to: 0
 36428   00B636  5195               	movf	___lmul@multiplicand& (0+255),w,b
 36429   00B638  2799               	addwf	___lmul@product& (0+255),f,b
 36430   00B63A  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 36431   00B63C  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 36432   00B63E  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 36433   00B640  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 36434   00B642  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 36435   00B644  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 36436   00B646                     l21290:
 36437                           
 36438                           ; BSR set to: 0
 36439   00B646  90D8               	bcf	status,0,c
 36440   00B648  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 36441   00B64A  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 36442   00B64C  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 36443   00B64E  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 36444                           
 36445                           ; BSR set to: 0
 36446   00B650  90D8               	bcf	status,0,c
 36447   00B652  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 36448   00B654  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 36449   00B656  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 36450   00B658  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 36451   00B65A  5191               	movf	___lmul@multiplier& (0+255),w,b
 36452   00B65C  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 36453   00B65E  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 36454   00B660  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 36455   00B662  A4D8               	btfss	status,2,c
 36456   00B664  D7E6               	goto	l21286
 36457                           
 36458                           ; BSR set to: 0
 36459   00B666  C099  F091         	movff	___lmul@product,?___lmul
 36460   00B66A  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 36461   00B66E  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 36462   00B672  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 36463                           
 36464                           ; BSR set to: 0
 36465   00B676  0012               	return		;funcret
 36466   00B678                     __end_of___lmul:
 36467                           	callstack 0
 36468                           
 36469 ;; *************** function ___lldiv *****************
 36470 ;; Defined at:
 36471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 36472 ;; Parameters:    Size  Location     Type
 36473 ;;  dividend        4   55[BANK0 ] unsigned long 
 36474 ;;  divisor         4   59[BANK0 ] unsigned long 
 36475 ;; Auto vars:     Size  Location     Type
 36476 ;;  quotient        4   63[BANK0 ] unsigned long 
 36477 ;;  counter         1   67[BANK0 ] unsigned char 
 36478 ;; Return value:  Size  Location     Type
 36479 ;;                  4   55[BANK0 ] unsigned long 
 36480 ;; Registers used:
 36481 ;;		wreg, status,2, status,0
 36482 ;; Tracked objects:
 36483 ;;		On entry : 0/0
 36484 ;;		On exit  : 0/0
 36485 ;;		Unchanged: 0/0
 36486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36487 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36488 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36490 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36491 ;;Total ram usage:       13 bytes
 36492 ;; Hardware stack levels used: 1
 36493 ;; Hardware stack levels required when called: 12
 36494 ;; This function calls:
 36495 ;;		Nothing
 36496 ;; This function is called by:
 36497 ;;		_pbDownTimer
 36498 ;;		_pbUpTimer
 36499 ;; This function uses a non-reentrant model
 36500 ;;
 36501                           
 36502                           	psect	text148
 36503   00A744                     __ptext148:
 36504                           	callstack 0
 36505   00A744                     ___lldiv:
 36506                           	callstack 16
 36507                           
 36508                           ; BSR set to: 0
 36509                           ;incstack = 0
 36510   00A744  0E00               	movlw	0
 36511   00A746  0100               	movlb	0	; () banked
 36512   00A748  6F9F               	movwf	___lldiv@quotient& (0+255),b
 36513   00A74A  0E00               	movlw	0
 36514   00A74C  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 36515   00A74E  0E00               	movlw	0
 36516   00A750  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 36517   00A752  0E00               	movlw	0
 36518   00A754  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 36519                           
 36520                           ; BSR set to: 0
 36521   00A756  519B               	movf	___lldiv@divisor& (0+255),w,b
 36522   00A758  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 36523   00A75A  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 36524   00A75C  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 36525   00A75E  B4D8               	btfsc	status,2,c
 36526   00A760  D02A               	goto	l3126
 36527                           
 36528                           ; BSR set to: 0
 36529   00A762  0E01               	movlw	1
 36530   00A764  6FA3               	movwf	___lldiv@counter& (0+255),b
 36531   00A766  D006               	goto	l15498
 36532   00A768                     l15496:
 36533                           
 36534                           ; BSR set to: 0
 36535   00A768  90D8               	bcf	status,0,c
 36536   00A76A  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 36537   00A76C  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 36538   00A76E  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 36539   00A770  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 36540   00A772  2BA3               	incf	___lldiv@counter& (0+255),f,b
 36541   00A774                     l15498:
 36542                           
 36543                           ; BSR set to: 0
 36544   00A774  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 36545   00A776  D7F8               	goto	l15496
 36546   00A778                     u14950:
 36547                           
 36548                           ; BSR set to: 0
 36549   00A778  90D8               	bcf	status,0,c
 36550   00A77A  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 36551   00A77C  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 36552   00A77E  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 36553   00A780  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 36554                           
 36555                           ; BSR set to: 0
 36556   00A782  519B               	movf	___lldiv@divisor& (0+255),w,b
 36557   00A784  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 36558   00A786  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36559   00A788  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 36560   00A78A  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36561   00A78C  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 36562   00A78E  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36563   00A790  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 36564   00A792  A0D8               	btfss	status,0,c
 36565   00A794  D009               	goto	l15508
 36566                           
 36567                           ; BSR set to: 0
 36568   00A796  519B               	movf	___lldiv@divisor& (0+255),w,b
 36569   00A798  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 36570   00A79A  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36571   00A79C  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 36572   00A79E  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36573   00A7A0  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 36574   00A7A2  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36575   00A7A4  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 36576                           
 36577                           ; BSR set to: 0
 36578   00A7A6  819F               	bsf	___lldiv@quotient& (0+255),0,b
 36579   00A7A8                     l15508:
 36580                           
 36581                           ; BSR set to: 0
 36582   00A7A8  90D8               	bcf	status,0,c
 36583   00A7AA  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 36584   00A7AC  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 36585   00A7AE  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 36586   00A7B0  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 36587                           
 36588                           ; BSR set to: 0
 36589   00A7B2  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 36590   00A7B4  D7E1               	goto	u14950
 36591   00A7B6                     l3126:
 36592                           
 36593                           ; BSR set to: 0
 36594   00A7B6  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 36595   00A7BA  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 36596   00A7BE  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 36597   00A7C2  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 36598                           
 36599                           ; BSR set to: 0
 36600   00A7C6  0012               	return		;funcret
 36601   00A7C8                     __end_of___lldiv:
 36602                           	callstack 0
 36603                           
 36604 ;; *************** function _factoryReset *****************
 36605 ;; Defined at:
 36606 ;;		line 857 in file "../../VLCBlib_PIC/vlcb.c"
 36607 ;; Parameters:    Size  Location     Type
 36608 ;;		None
 36609 ;; Auto vars:     Size  Location     Type
 36610 ;;  i               1   56[BANK1 ] unsigned char 
 36611 ;; Return value:  Size  Location     Type
 36612 ;;                  1    wreg      void 
 36613 ;; Registers used:
 36614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36615 ;; Tracked objects:
 36616 ;;		On entry : 0/0
 36617 ;;		On exit  : 0/0
 36618 ;;		Unchanged: 0/0
 36619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36621 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36622 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36623 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36624 ;;Total ram usage:        5 bytes
 36625 ;; Hardware stack levels used: 1
 36626 ;; Hardware stack levels required when called: 26
 36627 ;; This function calls:
 36628 ;;		NULL
 36629 ;;		_APP_factoryReset
 36630 ;;		_canFactoryReset
 36631 ;;		_mnsFactoryReset
 36632 ;;		_nvFactoryReset
 36633 ;;		_teachFactoryReset
 36634 ;;		_writeNVM
 36635 ;; This function is called by:
 36636 ;;		_mnsProcessMessage
 36637 ;;		_checkPowerOnPb
 36638 ;;		_main
 36639 ;; This function uses a non-reentrant model
 36640 ;;
 36641                           
 36642                           	psect	text149
 36643   008562                     __ptext149:
 36644                           	callstack 0
 36645   008562                     _factoryReset:
 36646                           	callstack 2
 36647                           
 36648                           ;../../VLCBlib_PIC/vlcb.c: 858:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 860:     for (i
      +                          =0; i<9; i++) {
 36649                           
 36650                           ; BSR set to: 0
 36651                           ;incstack = 0
 36652   008562  0E00               	movlw	0
 36653   008564  0101               	movlb	1	; () banked
 36654   008566  6FF2               	movwf	factoryReset@i& (0+255),b
 36655   008568                     l22010:
 36656                           
 36657                           ; BSR set to: 1
 36658                           ;../../VLCBlib_PIC/vlcb.c: 861:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 36659   008568  51F2               	movf	factoryReset@i& (0+255),w,b
 36660   00856A  0D02               	mullw	2
 36661   00856C  0E69               	movlw	low _services
 36662   00856E  24F3               	addwf	243,w,c
 36663   008570  6EF6               	movwf	tblptrl,c
 36664   008572  0EEE               	movlw	high _services
 36665   008574  20F4               	addwfc	244,w,c
 36666   008576  6EF7               	movwf	tblptrh,c
 36667   008578                     	if	1	;There are 3 active tblptr bytes
 36668   008578  6AF8               	clrf	tblptru,c
 36669   00857A  0E00               	movlw	low (__mediumconst shr (0+16))
 36670   00857C  22F8               	addwfc	tblptru,f,c
 36671   00857E                     	endif
 36672   00857E  0009               	tblrd		*+
 36673   008580  50F5               	movf	tablat,w,c
 36674   008582  0009               	tblrd		*+
 36675   008584  10F5               	iorwf	tablat,w,c
 36676   008586  B4D8               	btfsc	status,2,c
 36677   008588  D04B               	goto	u22949
 36678                           
 36679                           ; BSR set to: 1
 36680   00858A  51F2               	movf	factoryReset@i& (0+255),w,b
 36681   00858C  0D02               	mullw	2
 36682   00858E  0E69               	movlw	low _services
 36683   008590  24F3               	addwf	243,w,c
 36684   008592  6EF6               	movwf	tblptrl,c
 36685   008594  0EEE               	movlw	high _services
 36686   008596  20F4               	addwfc	244,w,c
 36687   008598  6EF7               	movwf	tblptrh,c
 36688   00859A                     	if	1	;There are 3 active tblptr bytes
 36689   00859A  6AF8               	clrf	tblptru,c
 36690   00859C  0E00               	movlw	low (__mediumconst shr (0+16))
 36691   00859E  22F8               	addwfc	tblptru,f,c
 36692   0085A0                     	endif
 36693   0085A0  0009               	tblrd		*+
 36694   0085A2  CFF5 F1EE          	movff	tablat,??_factoryReset
 36695   0085A6  0009               	tblrd		*+
 36696   0085A8  CFF5 F1EF          	movff	tablat,??_factoryReset+1
 36697   0085AC  0E02               	movlw	2
 36698   0085AE  27EE               	addwf	??_factoryReset& (0+255),f,b
 36699   0085B0  0E00               	movlw	0
 36700   0085B2  23EF               	addwfc	(??_factoryReset+1)& (0+255),f,b
 36701   0085B4  C1EE  FFF6         	movff	??_factoryReset,tblptrl
 36702   0085B8  C1EF  FFF7         	movff	??_factoryReset+1,tblptrh
 36703   0085BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36704   0085BC  6AF8               	clrf	tblptru,c
 36705   0085BE                     	endif
 36706   0085BE                     	if	0	;tblptru may be non-zero
 36707   0085BE                     	endif
 36708   0085BE  0009               	tblrd		*+
 36709   0085C0  50F5               	movf	tablat,w,c
 36710   0085C2  0009               	tblrd		*+
 36711   0085C4  10F5               	iorwf	tablat,w,c
 36712   0085C6  B4D8               	btfsc	status,2,c
 36713   0085C8  D02B               	goto	u22949
 36714                           
 36715                           ; BSR set to: 1
 36716                           ;../../VLCBlib_PIC/vlcb.c: 862:             services[i]->factoryReset();
 36717   0085CA  51F2               	movf	factoryReset@i& (0+255),w,b
 36718   0085CC  0D02               	mullw	2
 36719   0085CE  0E69               	movlw	low _services
 36720   0085D0  24F3               	addwf	243,w,c
 36721   0085D2  6EF6               	movwf	tblptrl,c
 36722   0085D4  0EEE               	movlw	high _services
 36723   0085D6  20F4               	addwfc	244,w,c
 36724   0085D8  6EF7               	movwf	tblptrh,c
 36725   0085DA                     	if	1	;There are 3 active tblptr bytes
 36726   0085DA  6AF8               	clrf	tblptru,c
 36727   0085DC  0E00               	movlw	low (__mediumconst shr (0+16))
 36728   0085DE  22F8               	addwfc	tblptru,f,c
 36729   0085E0                     	endif
 36730   0085E0  0009               	tblrd		*+
 36731   0085E2  CFF5 F1EE          	movff	tablat,??_factoryReset
 36732   0085E6  0009               	tblrd		*+
 36733   0085E8  CFF5 F1EF          	movff	tablat,??_factoryReset+1
 36734   0085EC  0E02               	movlw	2
 36735   0085EE  27EE               	addwf	??_factoryReset& (0+255),f,b
 36736   0085F0  0E00               	movlw	0
 36737   0085F2  23EF               	addwfc	(??_factoryReset+1)& (0+255),f,b
 36738   0085F4  C1EE  FFF6         	movff	??_factoryReset,tblptrl
 36739   0085F8  C1EF  FFF7         	movff	??_factoryReset+1,tblptrh
 36740   0085FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36741   0085FC  6AF8               	clrf	tblptru,c
 36742   0085FE                     	endif
 36743   0085FE                     	if	0	;tblptru may be non-zero
 36744   0085FE                     	endif
 36745   0085FE  0009               	tblrd		*+
 36746   008600  CFF5 F1F0          	movff	tablat,??_factoryReset+2
 36747   008604  0009               	tblrd		*+
 36748   008606  CFF5 F1F1          	movff	tablat,??_factoryReset+3
 36749   00860A  D801               	call	u22948
 36750   00860C  D009               	goto	u22949
 36751   00860E                     u22948:
 36752   00860E  0005               	push	
 36753   008610  6EFA               	movwf	pclath,c
 36754   008612  51F0               	movf	(??_factoryReset+2)& (0+255),w,b
 36755   008614  6EFD               	movwf	tosl,c
 36756   008616  51F1               	movf	(??_factoryReset+3)& (0+255),w,b
 36757   008618  6EFE               	movwf	tosh,c
 36758   00861A  6AFF               	clrf	tosu,c
 36759   00861C  50FA               	movf	pclath,w,c
 36760   00861E  0012               	return		;indir
 36761   008620                     u22949:
 36762                           
 36763                           ;../../VLCBlib_PIC/vlcb.c: 864:     }
 36764   008620  0101               	movlb	1	; () banked
 36765   008622  2BF2               	incf	factoryReset@i& (0+255),f,b
 36766                           
 36767                           ; BSR set to: 1
 36768   008624  0E08               	movlw	8
 36769   008626  65F2               	cpfsgt	factoryReset@i& (0+255),b
 36770   008628  D79F               	goto	l22010
 36771                           
 36772                           ; BSR set to: 1
 36773                           ;../../VLCBlib_PIC/vlcb.c: 866:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 36774   00862A  0EFA               	movlw	250
 36775   00862C  0100               	movlb	0	; () banked
 36776   00862E  6FA4               	movwf	writeNVM@index& (0+255),b
 36777   008630  0E03               	movlw	3
 36778   008632  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36779   008634  0E00               	movlw	0
 36780   008636  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36781   008638  0E01               	movlw	1
 36782   00863A  6FA7               	movwf	writeNVM@value& (0+255),b
 36783   00863C  0E00               	movlw	0
 36784   00863E  EC60  F05C         	call	_writeNVM
 36785                           
 36786                           ;../../VLCBlib_PIC/vlcb.c: 868:     APP_factoryReset();
 36787   008642  ECBF  F061         	call	_APP_factoryReset	;wreg free
 36788   008646  0012               	return		;funcret
 36789   008648                     __end_of_factoryReset:
 36790                           	callstack 0
 36791                           
 36792 ;; *************** function _canFactoryReset *****************
 36793 ;; Defined at:
 36794 ;;		line 204 in file "../../VLCBlib_PIC/can18_ecan.c"
 36795 ;; Parameters:    Size  Location     Type
 36796 ;;		None
 36797 ;; Auto vars:     Size  Location     Type
 36798 ;;		None
 36799 ;; Return value:  Size  Location     Type
 36800 ;;                  1    wreg      void 
 36801 ;; Registers used:
 36802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36803 ;; Tracked objects:
 36804 ;;		On entry : 0/0
 36805 ;;		On exit  : 0/0
 36806 ;;		Unchanged: 0/0
 36807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36812 ;;Total ram usage:        0 bytes
 36813 ;; Hardware stack levels used: 1
 36814 ;; Hardware stack levels required when called: 18
 36815 ;; This function calls:
 36816 ;;		_writeNVM
 36817 ;; This function is called by:
 36818 ;;		_factoryReset
 36819 ;; This function uses a non-reentrant model
 36820 ;;
 36821                           
 36822                           	psect	text150
 36823   00C488                     __ptext150:
 36824                           	callstack 0
 36825   00C488                     _canFactoryReset:
 36826                           	callstack 9
 36827                           
 36828                           ;../../VLCBlib_PIC/can18_ecan.c: 205:     canId = 0;
 36829                           
 36830                           ;incstack = 0
 36831   00C488  0E00               	movlw	0
 36832   00C48A  0100               	movlb	0	; () banked
 36833   00C48C  6FC1               	movwf	_canId& (0+255),b
 36834                           
 36835                           ; BSR set to: 0
 36836                           ;../../VLCBlib_PIC/can18_ecan.c: 206:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 36837   00C48E  0EFE               	movlw	254
 36838   00C490  6FA4               	movwf	writeNVM@index& (0+255),b
 36839   00C492  0E03               	movlw	3
 36840   00C494  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36841   00C496  0E00               	movlw	0
 36842   00C498  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36843   00C49A  C0C1  F0A7         	movff	_canId,writeNVM@value
 36844   00C49E  0E00               	movlw	0
 36845   00C4A0  EC60  F05C         	call	_writeNVM
 36846   00C4A4  0012               	return		;funcret
 36847   00C4A6                     __end_of_canFactoryReset:
 36848                           	callstack 0
 36849                           
 36850 ;; *************** function _nvFactoryReset *****************
 36851 ;; Defined at:
 36852 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 36853 ;; Parameters:    Size  Location     Type
 36854 ;;		None
 36855 ;; Auto vars:     Size  Location     Type
 36856 ;;  i               1    4[BANK1 ] unsigned char 
 36857 ;; Return value:  Size  Location     Type
 36858 ;;                  1    wreg      void 
 36859 ;; Registers used:
 36860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36861 ;; Tracked objects:
 36862 ;;		On entry : 0/0
 36863 ;;		On exit  : 0/0
 36864 ;;		Unchanged: 0/0
 36865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36867 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36868 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36869 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36870 ;;Total ram usage:        3 bytes
 36871 ;; Hardware stack levels used: 1
 36872 ;; Hardware stack levels required when called: 18
 36873 ;; This function calls:
 36874 ;;		_APP_nvDefault
 36875 ;;		_writeNVM
 36876 ;; This function is called by:
 36877 ;;		_factoryReset
 36878 ;; This function uses a non-reentrant model
 36879 ;;
 36880                           
 36881                           	psect	text151
 36882   00BCE2                     __ptext151:
 36883                           	callstack 0
 36884   00BCE2                     _nvFactoryReset:
 36885                           	callstack 9
 36886                           
 36887                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= (15+7*16); i++) {
 36888                           
 36889                           ;incstack = 0
 36890   00BCE2  0E01               	movlw	1
 36891   00BCE4  0101               	movlb	1	; () banked
 36892   00BCE6  6FBE               	movwf	nvFactoryReset@i& (0+255),b
 36893   00BCE8                     l21082:
 36894                           
 36895                           ; BSR set to: 1
 36896                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 36897   00BCE8  0E80               	movlw	128
 36898   00BCEA  25BE               	addwf	nvFactoryReset@i& (0+255),w,b
 36899   00BCEC  6FBC               	movwf	??_nvFactoryReset& (0+255),b
 36900   00BCEE  6BBD               	clrf	(??_nvFactoryReset+1)& (0+255),b
 36901   00BCF0  0EFF               	movlw	255
 36902   00BCF2  23BD               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 36903   00BCF4  C1BC  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 36904   00BCF8  C1BD  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 36905   00BCFC  0100               	movlb	0	; () banked
 36906   00BCFE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36907   00BD00  0101               	movlb	1	; () banked
 36908   00BD02  51BE               	movf	nvFactoryReset@i& (0+255),w,b
 36909   00BD04  EC29  F046         	call	_APP_nvDefault
 36910   00BD08  0100               	movlb	0	; () banked
 36911   00BD0A  6FA7               	movwf	writeNVM@value& (0+255),b
 36912   00BD0C  0E01               	movlw	1
 36913   00BD0E  EC60  F05C         	call	_writeNVM
 36914                           
 36915                           ;../../VLCBlib_PIC/nv.c: 130:     }
 36916   00BD12  0101               	movlb	1	; () banked
 36917   00BD14  2BBE               	incf	nvFactoryReset@i& (0+255),f,b
 36918                           
 36919                           ; BSR set to: 1
 36920   00BD16  0E7F               	movlw	127
 36921   00BD18  65BE               	cpfsgt	nvFactoryReset@i& (0+255),b
 36922   00BD1A  D7E6               	goto	l21082
 36923   00BD1C  0012               	return	
 36924   00BD1E                     __end_of_nvFactoryReset:
 36925                           	callstack 0
 36926                           
 36927 ;; *************** function _mnsFactoryReset *****************
 36928 ;; Defined at:
 36929 ;;		line 276 in file "../../VLCBlib_PIC/mns.c"
 36930 ;; Parameters:    Size  Location     Type
 36931 ;;		None
 36932 ;; Auto vars:     Size  Location     Type
 36933 ;;		None
 36934 ;; Return value:  Size  Location     Type
 36935 ;;                  1    wreg      void 
 36936 ;; Registers used:
 36937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36938 ;; Tracked objects:
 36939 ;;		On entry : 0/0
 36940 ;;		On exit  : 0/0
 36941 ;;		Unchanged: 0/0
 36942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36947 ;;Total ram usage:        0 bytes
 36948 ;; Hardware stack levels used: 1
 36949 ;; Hardware stack levels required when called: 18
 36950 ;; This function calls:
 36951 ;;		_writeNVM
 36952 ;; This function is called by:
 36953 ;;		_factoryReset
 36954 ;; This function uses a non-reentrant model
 36955 ;;
 36956                           
 36957                           	psect	text152
 36958   00ABB0                     __ptext152:
 36959                           	callstack 0
 36960   00ABB0                     _mnsFactoryReset:
 36961                           	callstack 9
 36962                           
 36963                           ;../../VLCBlib_PIC/mns.c: 277:     nn.bytes.hi = 0;
 36964                           
 36965                           ; BSR set to: 1
 36966                           ;incstack = 0
 36967   00ABB0  0E00               	movlw	0
 36968   00ABB2  0100               	movlb	0	; () banked
 36969   00ABB4  6FBE               	movwf	(_nn+1)& (0+255),b
 36970                           
 36971                           ;../../VLCBlib_PIC/mns.c: 278:     nn.bytes.lo = 0;
 36972   00ABB6  0E00               	movlw	0
 36973   00ABB8  6FBD               	movwf	_nn& (0+255),b
 36974                           
 36975                           ; BSR set to: 0
 36976                           ;../../VLCBlib_PIC/mns.c: 279:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 36977   00ABBA  0EFD               	movlw	253
 36978   00ABBC  6FA4               	movwf	writeNVM@index& (0+255),b
 36979   00ABBE  0E03               	movlw	3
 36980   00ABC0  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36981   00ABC2  0E00               	movlw	0
 36982   00ABC4  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36983   00ABC6  C0BE  F0A7         	movff	_nn+1,writeNVM@value
 36984   00ABCA  0E00               	movlw	0
 36985   00ABCC  EC60  F05C         	call	_writeNVM
 36986                           
 36987                           ;../../VLCBlib_PIC/mns.c: 280:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 36988   00ABD0  0EFC               	movlw	252
 36989   00ABD2  0100               	movlb	0	; () banked
 36990   00ABD4  6FA4               	movwf	writeNVM@index& (0+255),b
 36991   00ABD6  0E03               	movlw	3
 36992   00ABD8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36993   00ABDA  0E00               	movlw	0
 36994   00ABDC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36995   00ABDE  C0BD  F0A7         	movff	_nn,writeNVM@value
 36996   00ABE2  0E00               	movlw	0
 36997   00ABE4  EC60  F05C         	call	_writeNVM
 36998                           
 36999                           ;../../VLCBlib_PIC/mns.c: 282:     last_mode_state = mode_state = MODE_UNINITIALISED;
 37000   00ABE8  0100               	movlb	0	; () banked
 37001   00ABEA  69C5               	setf	_mode_state& (0+255),b
 37002   00ABEC  6847               	setf	_last_mode_state^0,c
 37003                           
 37004                           ; BSR set to: 0
 37005                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 37006   00ABEE  0EFB               	movlw	251
 37007   00ABF0  6FA4               	movwf	writeNVM@index& (0+255),b
 37008   00ABF2  0E03               	movlw	3
 37009   00ABF4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37010   00ABF6  0E00               	movlw	0
 37011   00ABF8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37012   00ABFA  C0C5  F0A7         	movff	_mode_state,writeNVM@value
 37013   00ABFE  0E00               	movlw	0
 37014   00AC00  EC60  F05C         	call	_writeNVM
 37015                           
 37016                           ;../../VLCBlib_PIC/mns.c: 286:     last_mode_flags = mode_flags = 0;
 37017   00AC04  0E00               	movlw	0
 37018   00AC06  0101               	movlb	1	; () banked
 37019   00AC08  6F66               	movwf	_mode_flags& (0+255),b
 37020   00AC0A  C166  F046         	movff	_mode_flags,_last_mode_flags
 37021                           
 37022                           ;../../VLCBlib_PIC/mns.c: 287:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 37023   00AC0E  0EF9               	movlw	249
 37024   00AC10  0100               	movlb	0	; () banked
 37025   00AC12  6FA4               	movwf	writeNVM@index& (0+255),b
 37026   00AC14  0E03               	movlw	3
 37027   00AC16  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37028   00AC18  0E00               	movlw	0
 37029   00AC1A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37030   00AC1C  C166  F0A7         	movff	_mode_flags,writeNVM@value
 37031   00AC20  0E00               	movlw	0
 37032   00AC22  EC60  F05C         	call	_writeNVM
 37033   00AC26  0012               	return		;funcret
 37034   00AC28                     __end_of_mnsFactoryReset:
 37035                           	callstack 0
 37036                           
 37037 ;; *************** function _teachFactoryReset *****************
 37038 ;; Defined at:
 37039 ;;		line 352 in file "../../VLCBlib_PIC/event_teach_large.c"
 37040 ;; Parameters:    Size  Location     Type
 37041 ;;		None
 37042 ;; Auto vars:     Size  Location     Type
 37043 ;;		None
 37044 ;; Return value:  Size  Location     Type
 37045 ;;                  1    wreg      void 
 37046 ;; Registers used:
 37047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37048 ;; Tracked objects:
 37049 ;;		On entry : 0/0
 37050 ;;		On exit  : 0/0
 37051 ;;		Unchanged: 0/0
 37052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37057 ;;Total ram usage:        0 bytes
 37058 ;; Hardware stack levels used: 1
 37059 ;; Hardware stack levels required when called: 19
 37060 ;; This function calls:
 37061 ;;		_clearAllEvents
 37062 ;; This function is called by:
 37063 ;;		_factoryReset
 37064 ;; This function uses a non-reentrant model
 37065 ;;
 37066                           
 37067                           	psect	text153
 37068   00C644                     __ptext153:
 37069                           	callstack 0
 37070   00C644                     _teachFactoryReset:
 37071                           	callstack 8
 37072                           
 37073                           ;../../VLCBlib_PIC/event_teach_large.c: 353:     clearAllEvents();
 37074                           
 37075                           ;incstack = 0
 37076   00C644  EC93  F05B         	call	_clearAllEvents	;wreg free
 37077   00C648  0012               	return		;funcret
 37078   00C64A                     __end_of_teachFactoryReset:
 37079                           	callstack 0
 37080                           
 37081 ;; *************** function _clearAllEvents *****************
 37082 ;; Defined at:
 37083 ;;		line 558 in file "../../VLCBlib_PIC/event_teach_large.c"
 37084 ;; Parameters:    Size  Location     Type
 37085 ;;		None
 37086 ;; Auto vars:     Size  Location     Type
 37087 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 37088 ;; Return value:  Size  Location     Type
 37089 ;;                  1    wreg      void 
 37090 ;; Registers used:
 37091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37092 ;; Tracked objects:
 37093 ;;		On entry : 0/0
 37094 ;;		On exit  : 0/0
 37095 ;;		Unchanged: 0/0
 37096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37098 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37099 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37100 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37101 ;;Total ram usage:        5 bytes
 37102 ;; Hardware stack levels used: 1
 37103 ;; Hardware stack levels required when called: 18
 37104 ;; This function calls:
 37105 ;;		_flushFlashBlock
 37106 ;;		_rebuildHashtable
 37107 ;;		_writeNVM
 37108 ;; This function is called by:
 37109 ;;		_teachFactoryReset
 37110 ;;		_doNnclr
 37111 ;; This function uses a non-reentrant model
 37112 ;;
 37113                           
 37114                           	psect	text154
 37115   00B726                     __ptext154:
 37116                           	callstack 0
 37117   00B726                     _clearAllEvents:
 37118                           	callstack 9
 37119                           
 37120                           ;../../VLCBlib_PIC/event_teach_large.c: 559:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 560:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 37121                           
 37122                           ;incstack = 0
 37123   00B726  0E00               	movlw	0
 37124   00B728  0101               	movlb	1	; () banked
 37125   00B72A  6FC7               	movwf	clearAllEvents@tableIndex& (0+255),b
 37126   00B72C                     l20248:
 37127                           
 37128                           ; BSR set to: 1
 37129                           ;../../VLCBlib_PIC/event_teach_large.c: 562:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex + 0, 0xff);
 37130   00B72C  51C7               	movf	clearAllEvents@tableIndex& (0+255),w,b
 37131   00B72E  6FC3               	movwf	??_clearAllEvents& (0+255),b
 37132   00B730  6BC4               	clrf	(??_clearAllEvents+1)& (0+255),b
 37133   00B732  3BC3               	swapf	??_clearAllEvents& (0+255),f,b
 37134   00B734  3BC4               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 37135   00B736  0EF0               	movlw	240
 37136   00B738  17C4               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 37137   00B73A  51C3               	movf	??_clearAllEvents& (0+255),w,b
 37138   00B73C  0B0F               	andlw	15
 37139   00B73E  13C4               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 37140   00B740  0EF0               	movlw	240
 37141   00B742  17C3               	andwf	??_clearAllEvents& (0+255),f,b
 37142   00B744  0E80               	movlw	128
 37143   00B746  25C3               	addwf	??_clearAllEvents& (0+255),w,b
 37144   00B748  6FC5               	movwf	(??_clearAllEvents+2)& (0+255),b
 37145   00B74A  0EEF               	movlw	239
 37146   00B74C  21C4               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 37147   00B74E  6FC6               	movwf	(??_clearAllEvents+3)& (0+255),b
 37148   00B750  C1C5  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 37149   00B754  C1C6  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 37150   00B758  0100               	movlb	0	; () banked
 37151   00B75A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37152   00B75C  0EFF               	movlw	255
 37153   00B75E  6FA7               	movwf	writeNVM@value& (0+255),b
 37154   00B760  0E01               	movlw	1
 37155   00B762  EC60  F05C         	call	_writeNVM
 37156                           
 37157                           ;../../VLCBlib_PIC/event_teach_large.c: 563:     }
 37158   00B766  0101               	movlb	1	; () banked
 37159   00B768  2BC7               	incf	clearAllEvents@tableIndex& (0+255),f,b
 37160                           
 37161                           ; BSR set to: 1
 37162   00B76A  29C7               	incf	clearAllEvents@tableIndex& (0+255),w,b
 37163   00B76C  A4D8               	btfss	status,2,c
 37164   00B76E  D7DE               	goto	l20248
 37165                           
 37166                           ; BSR set to: 1
 37167                           ;../../VLCBlib_PIC/event_teach_large.c: 564:     flushFlashBlock();
 37168   00B770  EC5F  F053         	call	_flushFlashBlock	;wreg free
 37169                           
 37170                           ;../../VLCBlib_PIC/event_teach_large.c: 566:     rebuildHashtable();
 37171   00B774  EC93  F03E         	call	_rebuildHashtable	;wreg free
 37172   00B778  0012               	return		;funcret
 37173   00B77A                     __end_of_clearAllEvents:
 37174                           	callstack 0
 37175                           
 37176 ;; *************** function _APP_nvDefault *****************
 37177 ;; Defined at:
 37178 ;;		line 73 in file "../universalNv.c"
 37179 ;; Parameters:    Size  Location     Type
 37180 ;;  index           1    wreg     unsigned char 
 37181 ;; Auto vars:     Size  Location     Type
 37182 ;;  index           1   67[BANK0 ] unsigned char 
 37183 ;; Return value:  Size  Location     Type
 37184 ;;                  1    wreg      unsigned char 
 37185 ;; Registers used:
 37186 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37187 ;; Tracked objects:
 37188 ;;		On entry : 0/0
 37189 ;;		On exit  : 0/0
 37190 ;;		Unchanged: 0/0
 37191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37193 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37194 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37195 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37196 ;;Total ram usage:        5 bytes
 37197 ;; Hardware stack levels used: 1
 37198 ;; Hardware stack levels required when called: 13
 37199 ;; This function calls:
 37200 ;;		___awdiv
 37201 ;;		___awmod
 37202 ;;		___wmul
 37203 ;; This function is called by:
 37204 ;;		_nvFactoryReset
 37205 ;; This function uses a non-reentrant model
 37206 ;;
 37207                           
 37208                           	psect	text155
 37209   008C52                     __ptext155:
 37210                           	callstack 0
 37211   008C52                     _APP_nvDefault:
 37212                           	callstack 13
 37213                           
 37214                           ;incstack = 0
 37215                           ;APP_nvDefault@index stored from wreg
 37216   008C52  0100               	movlb	0	; () banked
 37217   008C54  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 37218                           
 37219                           ;../universalNv.c: 74:     if (index < 16) {
 37220   008C56  0E10               	movlw	16
 37221   008C58  0100               	movlb	0	; () banked
 37222   008C5A  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 37223   008C5C  D02A               	goto	l20076
 37224   008C5E  D00C               	goto	l20074
 37225   008C60                     l20040:
 37226                           
 37227                           ; BSR set to: 0
 37228                           ;../universalNv.c: 78:                 return 0;
 37229   008C60  0E00               	movlw	0
 37230   008C62  0012               	return	
 37231   008C64                     l20048:
 37232                           
 37233                           ; BSR set to: 0
 37234                           ;../universalNv.c: 82:                 return 234;
 37235   008C64  0EEA               	movlw	234
 37236   008C66  0012               	return	
 37237   008C68                     l20052:
 37238                           
 37239                           ; BSR set to: 0
 37240                           ;../universalNv.c: 84:                 return 0x33;
 37241   008C68  0E33               	movlw	51
 37242   008C6A  0012               	return	
 37243   008C6C                     l20056:
 37244                           
 37245                           ; BSR set to: 0
 37246                           ;../universalNv.c: 86:                 return 2;
 37247   008C6C  0E02               	movlw	2
 37248   008C6E  0012               	return	
 37249   008C70                     l20060:
 37250                           
 37251                           ; BSR set to: 0
 37252                           ;../universalNv.c: 90:                 return 0xFF;
 37253   008C70  0EFF               	movlw	255
 37254   008C72  0012               	return	
 37255   008C74                     l20064:
 37256                           
 37257                           ; BSR set to: 0
 37258                           ;../universalNv.c: 92:                 return 20;
 37259   008C74  0E14               	movlw	20
 37260   008C76  0012               	return	
 37261   008C78                     l20074:
 37262                           
 37263                           ; BSR set to: 0
 37264   008C78  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 37265                           
 37266                           ; Switch size 1, requested type "simple"
 37267                           ; Number of cases is 9, Range of values is 1 to 9
 37268                           ; switch strategies available:
 37269                           ; Name         Instructions Cycles
 37270                           ; simple_byte           28    15 (average)
 37271                           ;	Chosen strategy is simple_byte
 37272   008C7A  0A01               	xorlw	1	; case 1
 37273   008C7C  B4D8               	btfsc	status,2,c
 37274   008C7E  D7F0               	goto	l20040
 37275   008C80  0A03               	xorlw	3	; case 2
 37276   008C82  B4D8               	btfsc	status,2,c
 37277   008C84  D7ED               	goto	l20040
 37278   008C86  0A01               	xorlw	1	; case 3
 37279   008C88  B4D8               	btfsc	status,2,c
 37280   008C8A  D7EC               	goto	l20048
 37281   008C8C  0A07               	xorlw	7	; case 4
 37282   008C8E  B4D8               	btfsc	status,2,c
 37283   008C90  D7EB               	goto	l20052
 37284   008C92  0A01               	xorlw	1	; case 5
 37285   008C94  B4D8               	btfsc	status,2,c
 37286   008C96  D7EA               	goto	l20056
 37287   008C98  0A03               	xorlw	3	; case 6
 37288   008C9A  B4D8               	btfsc	status,2,c
 37289   008C9C  D7E9               	goto	l20060
 37290   008C9E  0A01               	xorlw	1	; case 7
 37291   008CA0  B4D8               	btfsc	status,2,c
 37292   008CA2  D7E6               	goto	l20060
 37293   008CA4  0A0F               	xorlw	15	; case 8
 37294   008CA6  B4D8               	btfsc	status,2,c
 37295   008CA8  D7E3               	goto	l20060
 37296   008CAA  0A01               	xorlw	1	; case 9
 37297   008CAC  B4D8               	btfsc	status,2,c
 37298   008CAE  D7E2               	goto	l20064
 37299   008CB0  D7D7               	goto	l20040
 37300   008CB2                     l20076:
 37301                           
 37302                           ; BSR set to: 0
 37303                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 37304   008CB2  0EF0               	movlw	240
 37305   008CB4  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37306   008CB6  6F97               	movwf	___awdiv@dividend& (0+255),b
 37307   008CB8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 37308   008CBA  0EFF               	movlw	255
 37309   008CBC  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 37310   008CBE  0E00               	movlw	0
 37311   008CC0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 37312   008CC2  0E07               	movlw	7
 37313   008CC4  6F99               	movwf	___awdiv@divisor& (0+255),b
 37314   008CC6  EC1C  F053         	call	___awdiv	;wreg free
 37315   008CCA  0E00               	movlw	0
 37316   008CCC  0100               	movlb	0	; () banked
 37317   008CCE  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 37318   008CD0  0E00               	movlw	0
 37319   008CD2  6F91               	movwf	___wmul@multiplier& (0+255),b
 37320   008CD4  0E00               	movlw	0
 37321   008CD6  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 37322   008CD8  0E07               	movlw	7
 37323   008CDA  6F93               	movwf	___wmul@multiplicand& (0+255),b
 37324   008CDC  EC4F  F061         	call	___wmul	;wreg free
 37325   008CE0  0E8B               	movlw	low _channelDefaultNVs
 37326   008CE2  0100               	movlb	0	; () banked
 37327   008CE4  2591               	addwf	?___wmul& (0+255),w,b
 37328   008CE6  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 37329   008CE8  0EEE               	movlw	high _channelDefaultNVs
 37330   008CEA  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 37331   008CEC  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 37332   008CEE  0EF0               	movlw	240
 37333   008CF0  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37334   008CF2  6F8D               	movwf	___awmod@dividend& (0+255),b
 37335   008CF4  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 37336   008CF6  0EFF               	movlw	255
 37337   008CF8  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 37338   008CFA  0E00               	movlw	0
 37339   008CFC  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 37340   008CFE  0E07               	movlw	7
 37341   008D00  6F8F               	movwf	___awmod@divisor& (0+255),b
 37342   008D02  EC31  F057         	call	___awmod	;wreg free
 37343   008D06  0100               	movlb	0	; () banked
 37344   008D08  518D               	movf	?___awmod& (0+255),w,b
 37345   008D0A  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 37346   008D0C  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 37347   008D0E  518E               	movf	(?___awmod+1)& (0+255),w,b
 37348   008D10  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 37349   008D12  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 37350   008D14  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 37351   008D18  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 37352   008D1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37353   008D1C  6AF8               	clrf	tblptru,c
 37354   008D1E                     	endif
 37355   008D1E                     	if	0	;tblptru may be non-zero
 37356   008D1E                     	endif
 37357   008D1E  0008               	tblrd		*
 37358   008D20  50F5               	movf	tablat,w,c
 37359                           
 37360                           ; BSR set to: 0
 37361   008D22  0012               	return		;funcret
 37362   008D24                     __end_of_APP_nvDefault:
 37363                           	callstack 0
 37364                           
 37365 ;; *************** function ___wmul *****************
 37366 ;; Defined at:
 37367 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 37368 ;; Parameters:    Size  Location     Type
 37369 ;;  multiplier      2   49[BANK0 ] unsigned int 
 37370 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 37371 ;; Auto vars:     Size  Location     Type
 37372 ;;  product         2   53[BANK0 ] unsigned int 
 37373 ;; Return value:  Size  Location     Type
 37374 ;;                  2   49[BANK0 ] unsigned int 
 37375 ;; Registers used:
 37376 ;;		wreg, status,2, status,0, prodl, prodh
 37377 ;; Tracked objects:
 37378 ;;		On entry : 0/0
 37379 ;;		On exit  : 0/0
 37380 ;;		Unchanged: 0/0
 37381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37382 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37383 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37385 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37386 ;;Total ram usage:        6 bytes
 37387 ;; Hardware stack levels used: 1
 37388 ;; Hardware stack levels required when called: 12
 37389 ;; This function calls:
 37390 ;;		Nothing
 37391 ;; This function is called by:
 37392 ;;		_APP_nvDefault
 37393 ;;		_bounceDown
 37394 ;; This function uses a non-reentrant model
 37395 ;;
 37396                           
 37397                           	psect	text156
 37398   00C29E                     __ptext156:
 37399                           	callstack 0
 37400   00C29E                     ___wmul:
 37401                           	callstack 13
 37402                           
 37403                           ; BSR set to: 0
 37404                           ;incstack = 0
 37405   00C29E  0100               	movlb	0	; () banked
 37406   00C2A0  5191               	movf	___wmul@multiplier& (0+255),w,b
 37407   00C2A2  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37408   00C2A4  CFF3 F095          	movff	prodl,___wmul@product
 37409   00C2A8  CFF4 F096          	movff	prodh,___wmul@product+1
 37410   00C2AC  5191               	movf	___wmul@multiplier& (0+255),w,b
 37411   00C2AE  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 37412   00C2B0  50F3               	movf	243,w,c
 37413   00C2B2  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37414   00C2B4  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 37415   00C2B6  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37416   00C2B8  50F3               	movf	243,w,c
 37417   00C2BA  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37418                           
 37419                           ; BSR set to: 0
 37420   00C2BC  C095  F091         	movff	___wmul@product,?___wmul
 37421   00C2C0  C096  F092         	movff	___wmul@product+1,?___wmul+1
 37422                           
 37423                           ; BSR set to: 0
 37424   00C2C4  0012               	return		;funcret
 37425   00C2C6                     __end_of___wmul:
 37426                           	callstack 0
 37427                           
 37428 ;; *************** function ___awmod *****************
 37429 ;; Defined at:
 37430 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 37431 ;; Parameters:    Size  Location     Type
 37432 ;;  dividend        2   45[BANK0 ] int 
 37433 ;;  divisor         2   47[BANK0 ] int 
 37434 ;; Auto vars:     Size  Location     Type
 37435 ;;  sign            1   50[BANK0 ] unsigned char 
 37436 ;;  counter         1   49[BANK0 ] unsigned char 
 37437 ;; Return value:  Size  Location     Type
 37438 ;;                  2   45[BANK0 ] int 
 37439 ;; Registers used:
 37440 ;;		wreg, status,2, status,0
 37441 ;; Tracked objects:
 37442 ;;		On entry : 0/0
 37443 ;;		On exit  : 0/0
 37444 ;;		Unchanged: 0/0
 37445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37446 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37447 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37449 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37450 ;;Total ram usage:        6 bytes
 37451 ;; Hardware stack levels used: 1
 37452 ;; Hardware stack levels required when called: 12
 37453 ;; This function calls:
 37454 ;;		Nothing
 37455 ;; This function is called by:
 37456 ;;		_consumer2QProcessMessage
 37457 ;;		_processActions
 37458 ;;		_APP_nvDefault
 37459 ;;		_APP_nvValueChanged
 37460 ;;		_APP_nvValidate
 37461 ;; This function uses a non-reentrant model
 37462 ;;
 37463                           
 37464                           	psect	text157
 37465   00AE62                     __ptext157:
 37466                           	callstack 0
 37467   00AE62                     ___awmod:
 37468                           	callstack 14
 37469                           
 37470                           ; BSR set to: 0
 37471                           ;incstack = 0
 37472   00AE62  0E00               	movlw	0
 37473   00AE64  0100               	movlb	0	; () banked
 37474   00AE66  6F92               	movwf	___awmod@sign& (0+255),b
 37475                           
 37476                           ; BSR set to: 0
 37477   00AE68  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 37478   00AE6A  D006               	goto	l19942
 37479                           
 37480                           ; BSR set to: 0
 37481   00AE6C  6D8D               	negf	___awmod@dividend& (0+255),b
 37482   00AE6E  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37483   00AE70  B0D8               	btfsc	status,0,c
 37484   00AE72  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37485                           
 37486                           ; BSR set to: 0
 37487   00AE74  0E01               	movlw	1
 37488   00AE76  6F92               	movwf	___awmod@sign& (0+255),b
 37489   00AE78                     l19942:
 37490                           
 37491                           ; BSR set to: 0
 37492   00AE78  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37493   00AE7A  D004               	goto	l19946
 37494                           
 37495                           ; BSR set to: 0
 37496   00AE7C  6D8F               	negf	___awmod@divisor& (0+255),b
 37497   00AE7E  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 37498   00AE80  B0D8               	btfsc	status,0,c
 37499   00AE82  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 37500   00AE84                     l19946:
 37501                           
 37502                           ; BSR set to: 0
 37503   00AE84  518F               	movf	___awmod@divisor& (0+255),w,b
 37504   00AE86  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 37505   00AE88  B4D8               	btfsc	status,2,c
 37506   00AE8A  D018               	goto	l19962
 37507                           
 37508                           ; BSR set to: 0
 37509   00AE8C  0E01               	movlw	1
 37510   00AE8E  6F91               	movwf	___awmod@counter& (0+255),b
 37511   00AE90  D004               	goto	l19952
 37512   00AE92                     l19950:
 37513                           
 37514                           ; BSR set to: 0
 37515   00AE92  90D8               	bcf	status,0,c
 37516   00AE94  378F               	rlcf	___awmod@divisor& (0+255),f,b
 37517   00AE96  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 37518   00AE98  2B91               	incf	___awmod@counter& (0+255),f,b
 37519   00AE9A                     l19952:
 37520                           
 37521                           ; BSR set to: 0
 37522   00AE9A  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37523   00AE9C  D7FA               	goto	l19950
 37524   00AE9E                     u19920:
 37525                           
 37526                           ; BSR set to: 0
 37527   00AE9E  518F               	movf	___awmod@divisor& (0+255),w,b
 37528   00AEA0  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 37529   00AEA2  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37530   00AEA4  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 37531   00AEA6  A0D8               	btfss	status,0,c
 37532   00AEA8  D004               	goto	l19958
 37533                           
 37534                           ; BSR set to: 0
 37535   00AEAA  518F               	movf	___awmod@divisor& (0+255),w,b
 37536   00AEAC  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 37537   00AEAE  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37538   00AEB0  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 37539   00AEB2                     l19958:
 37540                           
 37541                           ; BSR set to: 0
 37542   00AEB2  90D8               	bcf	status,0,c
 37543   00AEB4  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 37544   00AEB6  338F               	rrcf	___awmod@divisor& (0+255),f,b
 37545                           
 37546                           ; BSR set to: 0
 37547   00AEB8  2F91               	decfsz	___awmod@counter& (0+255),f,b
 37548   00AEBA  D7F1               	goto	u19920
 37549   00AEBC                     l19962:
 37550                           
 37551                           ; BSR set to: 0
 37552   00AEBC  5192               	movf	___awmod@sign& (0+255),w,b
 37553   00AEBE  B4D8               	btfsc	status,2,c
 37554   00AEC0  D004               	goto	l19966
 37555                           
 37556                           ; BSR set to: 0
 37557   00AEC2  6D8D               	negf	___awmod@dividend& (0+255),b
 37558   00AEC4  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37559   00AEC6  B0D8               	btfsc	status,0,c
 37560   00AEC8  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37561   00AECA                     l19966:
 37562                           
 37563                           ; BSR set to: 0
 37564   00AECA  C08D  F08D         	movff	___awmod@dividend,?___awmod
 37565   00AECE  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 37566                           
 37567                           ; BSR set to: 0
 37568   00AED2  0012               	return		;funcret
 37569   00AED4                     __end_of___awmod:
 37570                           	callstack 0
 37571                           
 37572 ;; *************** function ___awdiv *****************
 37573 ;; Defined at:
 37574 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 37575 ;; Parameters:    Size  Location     Type
 37576 ;;  dividend        2   55[BANK0 ] int 
 37577 ;;  divisor         2   57[BANK0 ] int 
 37578 ;; Auto vars:     Size  Location     Type
 37579 ;;  quotient        2   61[BANK0 ] int 
 37580 ;;  sign            1   60[BANK0 ] unsigned char 
 37581 ;;  counter         1   59[BANK0 ] unsigned char 
 37582 ;; Return value:  Size  Location     Type
 37583 ;;                  2   55[BANK0 ] int 
 37584 ;; Registers used:
 37585 ;;		wreg, status,2, status,0
 37586 ;; Tracked objects:
 37587 ;;		On entry : 0/0
 37588 ;;		On exit  : 0/0
 37589 ;;		Unchanged: 0/0
 37590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37592 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37594 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37595 ;;Total ram usage:        8 bytes
 37596 ;; Hardware stack levels used: 1
 37597 ;; Hardware stack levels required when called: 12
 37598 ;; This function calls:
 37599 ;;		Nothing
 37600 ;; This function is called by:
 37601 ;;		_APP_GetEventState
 37602 ;;		_consumer2QProcessMessage
 37603 ;;		_processActions
 37604 ;;		_sodTRCallback
 37605 ;;		_APP_nvDefault
 37606 ;;		_APP_nvValueChanged
 37607 ;;		_APP_nvValidate
 37608 ;;		_pollServos
 37609 ;;		_bounceDown
 37610 ;;		_bounceUp
 37611 ;;		_leds_poll
 37612 ;; This function uses a non-reentrant model
 37613 ;;
 37614                           
 37615                           	psect	text158
 37616   00A638                     __ptext158:
 37617                           	callstack 0
 37618   00A638                     ___awdiv:
 37619                           	callstack 15
 37620                           
 37621                           ; BSR set to: 0
 37622                           ;incstack = 0
 37623   00A638  0E00               	movlw	0
 37624   00A63A  0100               	movlb	0	; () banked
 37625   00A63C  6F9C               	movwf	___awdiv@sign& (0+255),b
 37626                           
 37627                           ; BSR set to: 0
 37628   00A63E  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 37629   00A640  D006               	goto	l19898
 37630                           
 37631                           ; BSR set to: 0
 37632   00A642  6D99               	negf	___awdiv@divisor& (0+255),b
 37633   00A644  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 37634   00A646  B0D8               	btfsc	status,0,c
 37635   00A648  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 37636                           
 37637                           ; BSR set to: 0
 37638   00A64A  0E01               	movlw	1
 37639   00A64C  6F9C               	movwf	___awdiv@sign& (0+255),b
 37640   00A64E                     l19898:
 37641                           
 37642                           ; BSR set to: 0
 37643   00A64E  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 37644   00A650  D006               	goto	l19904
 37645                           
 37646                           ; BSR set to: 0
 37647   00A652  6D97               	negf	___awdiv@dividend& (0+255),b
 37648   00A654  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 37649   00A656  B0D8               	btfsc	status,0,c
 37650   00A658  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 37651                           
 37652                           ; BSR set to: 0
 37653   00A65A  0E01               	movlw	1
 37654   00A65C  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 37655   00A65E                     l19904:
 37656                           
 37657                           ; BSR set to: 0
 37658   00A65E  0E00               	movlw	0
 37659   00A660  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 37660   00A662  0E00               	movlw	0
 37661   00A664  6F9D               	movwf	___awdiv@quotient& (0+255),b
 37662                           
 37663                           ; BSR set to: 0
 37664   00A666  5199               	movf	___awdiv@divisor& (0+255),w,b
 37665   00A668  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 37666   00A66A  B4D8               	btfsc	status,2,c
 37667   00A66C  D01C               	goto	l19926
 37668                           
 37669                           ; BSR set to: 0
 37670   00A66E  0E01               	movlw	1
 37671   00A670  6F9B               	movwf	___awdiv@counter& (0+255),b
 37672   00A672  D004               	goto	l19912
 37673   00A674                     l19910:
 37674                           
 37675                           ; BSR set to: 0
 37676   00A674  90D8               	bcf	status,0,c
 37677   00A676  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 37678   00A678  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 37679   00A67A  2B9B               	incf	___awdiv@counter& (0+255),f,b
 37680   00A67C                     l19912:
 37681                           
 37682                           ; BSR set to: 0
 37683   00A67C  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 37684   00A67E  D7FA               	goto	l19910
 37685   00A680                     u19860:
 37686                           
 37687                           ; BSR set to: 0
 37688   00A680  90D8               	bcf	status,0,c
 37689   00A682  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 37690   00A684  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 37691                           
 37692                           ; BSR set to: 0
 37693   00A686  5199               	movf	___awdiv@divisor& (0+255),w,b
 37694   00A688  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 37695   00A68A  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 37696   00A68C  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 37697   00A68E  A0D8               	btfss	status,0,c
 37698   00A690  D005               	goto	l19922
 37699                           
 37700                           ; BSR set to: 0
 37701   00A692  5199               	movf	___awdiv@divisor& (0+255),w,b
 37702   00A694  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 37703   00A696  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 37704   00A698  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 37705                           
 37706                           ; BSR set to: 0
 37707   00A69A  819D               	bsf	___awdiv@quotient& (0+255),0,b
 37708   00A69C                     l19922:
 37709                           
 37710                           ; BSR set to: 0
 37711   00A69C  90D8               	bcf	status,0,c
 37712   00A69E  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 37713   00A6A0  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 37714                           
 37715                           ; BSR set to: 0
 37716   00A6A2  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 37717   00A6A4  D7ED               	goto	u19860
 37718   00A6A6                     l19926:
 37719                           
 37720                           ; BSR set to: 0
 37721   00A6A6  519C               	movf	___awdiv@sign& (0+255),w,b
 37722   00A6A8  B4D8               	btfsc	status,2,c
 37723   00A6AA  D004               	goto	l19930
 37724                           
 37725                           ; BSR set to: 0
 37726   00A6AC  6D9D               	negf	___awdiv@quotient& (0+255),b
 37727   00A6AE  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 37728   00A6B0  B0D8               	btfsc	status,0,c
 37729   00A6B2  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 37730   00A6B4                     l19930:
 37731                           
 37732                           ; BSR set to: 0
 37733   00A6B4  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 37734   00A6B8  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 37735                           
 37736                           ; BSR set to: 0
 37737   00A6BC  0012               	return		;funcret
 37738   00A6BE                     __end_of___awdiv:
 37739                           	callstack 0
 37740                           
 37741 ;; *************** function _APP_factoryReset *****************
 37742 ;; Defined at:
 37743 ;;		line 214 in file "../main.c"
 37744 ;; Parameters:    Size  Location     Type
 37745 ;;		None
 37746 ;; Auto vars:     Size  Location     Type
 37747 ;;  io              1   51[BANK1 ] unsigned char 
 37748 ;; Return value:  Size  Location     Type
 37749 ;;                  1    wreg      void 
 37750 ;; Registers used:
 37751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37752 ;; Tracked objects:
 37753 ;;		On entry : 0/0
 37754 ;;		On exit  : 0/0
 37755 ;;		Unchanged: 0/0
 37756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37758 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37760 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37761 ;;Total ram usage:        1 bytes
 37762 ;; Hardware stack levels used: 1
 37763 ;; Hardware stack levels required when called: 25
 37764 ;; This function calls:
 37765 ;;		_factoryResetGlobalEvents
 37766 ;;		_flushFlashBlock
 37767 ;;		_setType
 37768 ;; This function is called by:
 37769 ;;		_factoryReset
 37770 ;; This function uses a non-reentrant model
 37771 ;;
 37772                           
 37773                           	psect	text159
 37774   00C37E                     __ptext159:
 37775                           	callstack 0
 37776   00C37E                     _APP_factoryReset:
 37777                           	callstack 2
 37778                           
 37779                           ;../main.c: 215:     uint8_t io;;../main.c: 217:     factoryResetGlobalEvents();
 37780                           
 37781                           ; BSR set to: 0
 37782                           ;incstack = 0
 37783   00C37E  EC29  F063         	call	_factoryResetGlobalEvents	;wreg free
 37784                           
 37785                           ;../main.c: 219:     for (io=0; io<16; io++) {
 37786   00C382  0E00               	movlw	0
 37787   00C384  0101               	movlb	1	; () banked
 37788   00C386  6FED               	movwf	APP_factoryReset@io& (0+255),b
 37789   00C388                     l20348:
 37790                           
 37791                           ; BSR set to: 1
 37792                           
 37793                           ; BSR set to: 1
 37794                           
 37795                           ; BSR set to: 1
 37796   00C388  0E00               	movlw	0
 37797   00C38A  6FEA               	movwf	setType@type& (0+255),b
 37798   00C38C  51ED               	movf	APP_factoryReset@io& (0+255),w,b
 37799   00C38E  ECA0  F059         	call	_setType
 37800                           
 37801                           ;../main.c: 221:     }
 37802   00C392  0101               	movlb	1	; () banked
 37803   00C394  2BED               	incf	APP_factoryReset@io& (0+255),f,b
 37804                           
 37805                           ; BSR set to: 1
 37806   00C396  0E0F               	movlw	15
 37807   00C398  65ED               	cpfsgt	APP_factoryReset@io& (0+255),b
 37808   00C39A  D7F6               	goto	l20348
 37809                           
 37810                           ; BSR set to: 1
 37811                           ;../main.c: 222:     flushFlashBlock();
 37812   00C39C  EC5F  F053         	call	_flushFlashBlock	;wreg free
 37813   00C3A0  0012               	return		;funcret
 37814   00C3A2                     __end_of_APP_factoryReset:
 37815                           	callstack 0
 37816                           
 37817 ;; *************** function _setType *****************
 37818 ;; Defined at:
 37819 ;;		line 527 in file "../main.c"
 37820 ;; Parameters:    Size  Location     Type
 37821 ;;  io              1    wreg     unsigned char 
 37822 ;;  type            1   48[BANK1 ] unsigned char 
 37823 ;; Auto vars:     Size  Location     Type
 37824 ;;  io              1   50[BANK1 ] unsigned char 
 37825 ;;  index           1   49[BANK1 ] unsigned char 
 37826 ;; Return value:  Size  Location     Type
 37827 ;;                  1    wreg      void 
 37828 ;; Registers used:
 37829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37830 ;; Tracked objects:
 37831 ;;		On entry : 0/0
 37832 ;;		On exit  : 0/0
 37833 ;;		Unchanged: 0/0
 37834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37835 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37836 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37838 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37839 ;;Total ram usage:        3 bytes
 37840 ;; Hardware stack levels used: 1
 37841 ;; Hardware stack levels required when called: 24
 37842 ;; This function calls:
 37843 ;;		_configIO
 37844 ;;		_defaultEvents
 37845 ;;		_defaultNVs
 37846 ;;		_saveNV
 37847 ;; This function is called by:
 37848 ;;		_APP_factoryReset
 37849 ;;		_APP_nvValueChanged
 37850 ;; This function uses a non-reentrant model
 37851 ;;
 37852                           
 37853                           	psect	text160
 37854   00B340                     __ptext160:
 37855                           	callstack 0
 37856   00B340                     _setType:
 37857                           	callstack 2
 37858                           
 37859                           ;incstack = 0
 37860                           ;setType@io stored from wreg
 37861   00B340  0101               	movlb	1	; () banked
 37862   00B342  6FEC               	movwf	setType@io& (0+255),b
 37863                           
 37864                           ;../main.c: 528:     uint8_t index;;../main.c: 530:     index = (16 + 7*(io) + 0);
 37865   00B344  0101               	movlb	1	; () banked
 37866   00B346  51EC               	movf	setType@io& (0+255),w,b
 37867   00B348  0D07               	mullw	7
 37868   00B34A  50F3               	movf	243,w,c
 37869   00B34C  0F10               	addlw	16
 37870   00B34E  6FEB               	movwf	setType@index& (0+255),b
 37871                           
 37872                           ; BSR set to: 1
 37873                           ;../main.c: 531:     saveNV((uint8_t)index, type);
 37874   00B350  C1EA  F1BC         	movff	setType@type,saveNV@value
 37875   00B354  51EB               	movf	setType@index& (0+255),w,b
 37876   00B356  ECAC  F05E         	call	_saveNV
 37877                           
 37878                           ;../main.c: 534:     defaultNVs(io, type);
 37879   00B35A  C1EA  F1C0         	movff	setType@type,defaultNVs@type
 37880   00B35E  0101               	movlb	1	; () banked
 37881   00B360  51EC               	movf	setType@io& (0+255),w,b
 37882   00B362  EC11  F05C         	call	_defaultNVs
 37883                           
 37884                           ;../main.c: 537:     configIO(io);
 37885   00B366  0101               	movlb	1	; () banked
 37886   00B368  51EC               	movf	setType@io& (0+255),w,b
 37887   00B36A  EC52  F026         	call	_configIO
 37888                           
 37889                           ;../main.c: 539:     if ((type == 2) || (type== 3) || (type == 4)) {
 37890   00B36E  0E02               	movlw	2
 37891   00B370  0101               	movlb	1	; () banked
 37892   00B372  19EA               	xorwf	setType@type& (0+255),w,b
 37893   00B374  B4D8               	btfsc	status,2,c
 37894   00B376  D008               	goto	u19970
 37895                           
 37896                           ; BSR set to: 1
 37897   00B378  0E03               	movlw	3
 37898   00B37A  19EA               	xorwf	setType@type& (0+255),w,b
 37899   00B37C  B4D8               	btfsc	status,2,c
 37900   00B37E  D004               	goto	u19970
 37901                           
 37902                           ; BSR set to: 1
 37903   00B380  0E04               	movlw	4
 37904   00B382  19EA               	xorwf	setType@type& (0+255),w,b
 37905   00B384  A4D8               	btfss	status,2,c
 37906   00B386  D006               	goto	l19986
 37907   00B388                     u19970:
 37908                           
 37909                           ; BSR set to: 1
 37910                           ;../main.c: 540:         currentPos[io] = 128;
 37911   00B388  51EC               	movf	setType@io& (0+255),w,b
 37912   00B38A  0FA9               	addlw	low _currentPos
 37913   00B38C  6ED9               	movwf	fsr2l,c
 37914   00B38E  6ADA               	clrf	fsr2h,c
 37915   00B390  0E80               	movlw	128
 37916   00B392  6EDF               	movwf	indf2,c
 37917   00B394                     l19986:
 37918                           
 37919                           ; BSR set to: 1
 37920                           ;../main.c: 544:     defaultEvents(io, type);
 37921   00B394  C1EA  F1E6         	movff	setType@type,defaultEvents@type
 37922   00B398  51EC               	movf	setType@io& (0+255),w,b
 37923   00B39A  ECAC  F03A         	call	_defaultEvents
 37924   00B39E  0012               	return		;funcret
 37925   00B3A0                     __end_of_setType:
 37926                           	callstack 0
 37927                           
 37928 ;; *************** function _defaultNVs *****************
 37929 ;; Defined at:
 37930 ;;		line 342 in file "../universalNv.c"
 37931 ;; Parameters:    Size  Location     Type
 37932 ;;  io              1    wreg     unsigned char 
 37933 ;;  type            1    6[BANK1 ] unsigned char 
 37934 ;; Auto vars:     Size  Location     Type
 37935 ;;  io              1    9[BANK1 ] unsigned char 
 37936 ;;  i               1   10[BANK1 ] unsigned char 
 37937 ;; Return value:  Size  Location     Type
 37938 ;;                  1    wreg      void 
 37939 ;; Registers used:
 37940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37941 ;; Tracked objects:
 37942 ;;		On entry : 0/0
 37943 ;;		On exit  : 0/0
 37944 ;;		Unchanged: 0/0
 37945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37946 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37947 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37948 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37949 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37950 ;;Total ram usage:        5 bytes
 37951 ;; Hardware stack levels used: 1
 37952 ;; Hardware stack levels required when called: 19
 37953 ;; This function calls:
 37954 ;;		_loadNvCache
 37955 ;;		_saveNV
 37956 ;; This function is called by:
 37957 ;;		_setType
 37958 ;; This function uses a non-reentrant model
 37959 ;;
 37960                           
 37961                           	psect	text161
 37962   00B822                     __ptext161:
 37963                           	callstack 0
 37964   00B822                     _defaultNVs:
 37965                           	callstack 6
 37966                           
 37967                           ;incstack = 0
 37968                           ;defaultNVs@io stored from wreg
 37969   00B822  0101               	movlb	1	; () banked
 37970   00B824  6FC3               	movwf	defaultNVs@io& (0+255),b
 37971                           
 37972                           ;../universalNv.c: 343:     uint8_t i;;../universalNv.c: 345:     for (i=1; i<7; i++) {
 37973   00B826  0E01               	movlw	1
 37974   00B828  0101               	movlb	1	; () banked
 37975   00B82A  6FC4               	movwf	defaultNVs@i& (0+255),b
 37976   00B82C                     l19820:
 37977                           
 37978                           ; BSR set to: 1
 37979                           ;../universalNv.c: 346:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 37980   00B82C  51C0               	movf	defaultNVs@type& (0+255),w,b
 37981   00B82E  0D07               	mullw	7
 37982   00B830  0E8B               	movlw	low _channelDefaultNVs
 37983   00B832  24F3               	addwf	243,w,c
 37984   00B834  6FC1               	movwf	??_defaultNVs& (0+255),b
 37985   00B836  0EEE               	movlw	high _channelDefaultNVs
 37986   00B838  20F4               	addwfc	prodh,w,c
 37987   00B83A  6FC2               	movwf	(??_defaultNVs+1)& (0+255),b
 37988   00B83C  51C4               	movf	defaultNVs@i& (0+255),w,b
 37989   00B83E  27C1               	addwf	??_defaultNVs& (0+255),f,b
 37990   00B840  0E00               	movlw	0
 37991   00B842  23C2               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 37992   00B844  C1C1  FFF6         	movff	??_defaultNVs,tblptrl
 37993   00B848  C1C2  FFF7         	movff	??_defaultNVs+1,tblptrh
 37994   00B84C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37995   00B84C  6AF8               	clrf	tblptru,c
 37996   00B84E                     	endif
 37997   00B84E                     	if	0	;tblptru may be non-zero
 37998   00B84E                     	endif
 37999   00B84E  0008               	tblrd		*
 38000   00B850  CFF5 F1BC          	movff	tablat,saveNV@value
 38001   00B854  51C3               	movf	defaultNVs@io& (0+255),w,b
 38002   00B856  0D07               	mullw	7
 38003   00B858  50F3               	movf	243,w,c
 38004   00B85A  25C4               	addwf	defaultNVs@i& (0+255),w,b
 38005   00B85C  0F10               	addlw	16
 38006   00B85E  ECAC  F05E         	call	_saveNV
 38007                           
 38008                           ;../universalNv.c: 347:     }
 38009   00B862  0101               	movlb	1	; () banked
 38010   00B864  2BC4               	incf	defaultNVs@i& (0+255),f,b
 38011                           
 38012                           ; BSR set to: 1
 38013   00B866  0E06               	movlw	6
 38014   00B868  65C4               	cpfsgt	defaultNVs@i& (0+255),b
 38015   00B86A  D7E0               	goto	l19820
 38016                           
 38017                           ; BSR set to: 1
 38018                           ;../universalNv.c: 348:     loadNvCache();
 38019   00B86C  EC1C  F05D         	call	_loadNvCache	;wreg free
 38020   00B870  0012               	return		;funcret
 38021   00B872                     __end_of_defaultNVs:
 38022                           	callstack 0
 38023                           
 38024 ;; *************** function _saveNV *****************
 38025 ;; Defined at:
 38026 ;;		line 199 in file "../../VLCBlib_PIC/nv.c"
 38027 ;; Parameters:    Size  Location     Type
 38028 ;;  index           1    wreg     unsigned char 
 38029 ;;  value           1    2[BANK1 ] unsigned char 
 38030 ;; Auto vars:     Size  Location     Type
 38031 ;;  index           1    5[BANK1 ] unsigned char 
 38032 ;; Return value:  Size  Location     Type
 38033 ;;                  1    wreg      void 
 38034 ;; Registers used:
 38035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38036 ;; Tracked objects:
 38037 ;;		On entry : 0/0
 38038 ;;		On exit  : 0/0
 38039 ;;		Unchanged: 0/0
 38040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38041 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38042 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38043 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38044 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38045 ;;Total ram usage:        4 bytes
 38046 ;; Hardware stack levels used: 1
 38047 ;; Hardware stack levels required when called: 18
 38048 ;; This function calls:
 38049 ;;		_writeNVM
 38050 ;; This function is called by:
 38051 ;;		_setType
 38052 ;;		_defaultNVs
 38053 ;; This function uses a non-reentrant model
 38054 ;;
 38055                           
 38056                           	psect	text162
 38057   00BD58                     __ptext162:
 38058                           	callstack 0
 38059   00BD58                     _saveNV:
 38060                           	callstack 7
 38061                           
 38062                           ;incstack = 0
 38063                           ;saveNV@index stored from wreg
 38064   00BD58  0101               	movlb	1	; () banked
 38065   00BD5A  6FBF               	movwf	saveNV@index& (0+255),b
 38066                           
 38067                           ;../../VLCBlib_PIC/nv.c: 201:     nvCache[index] = value;
 38068   00BD5C  0E00               	movlw	low _nvCache
 38069   00BD5E  0101               	movlb	1	; () banked
 38070   00BD60  25BF               	addwf	saveNV@index& (0+255),w,b
 38071   00BD62  6ED9               	movwf	fsr2l,c
 38072   00BD64  6ADA               	clrf	fsr2h,c
 38073   00BD66  0E04               	movlw	high _nvCache
 38074   00BD68  22DA               	addwfc	fsr2h,f,c
 38075   00BD6A  C1BC  FFDF         	movff	saveNV@value,indf2
 38076                           
 38077                           ; BSR set to: 1
 38078                           ;../../VLCBlib_PIC/nv.c: 203:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 38079   00BD6E  0E80               	movlw	128
 38080   00BD70  25BF               	addwf	saveNV@index& (0+255),w,b
 38081   00BD72  6FBD               	movwf	??_saveNV& (0+255),b
 38082   00BD74  6BBE               	clrf	(??_saveNV+1)& (0+255),b
 38083   00BD76  0EFF               	movlw	255
 38084   00BD78  23BE               	addwfc	(??_saveNV+1)& (0+255),f,b
 38085   00BD7A  C1BD  F0A4         	movff	??_saveNV,writeNVM@index
 38086   00BD7E  C1BE  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 38087   00BD82  0100               	movlb	0	; () banked
 38088   00BD84  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38089   00BD86  C1BC  F0A7         	movff	saveNV@value,writeNVM@value
 38090   00BD8A  0E01               	movlw	1
 38091   00BD8C  EC60  F05C         	call	_writeNVM
 38092   00BD90  0012               	return		;funcret
 38093   00BD92                     __end_of_saveNV:
 38094                           	callstack 0
 38095                           
 38096 ;; *************** function _loadNvCache *****************
 38097 ;; Defined at:
 38098 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 38099 ;; Parameters:    Size  Location     Type
 38100 ;;		None
 38101 ;; Auto vars:     Size  Location     Type
 38102 ;;  temp            2   57[BANK0 ] short 
 38103 ;;  i               1   59[BANK0 ] unsigned char 
 38104 ;; Return value:  Size  Location     Type
 38105 ;;                  1    wreg      void 
 38106 ;; Registers used:
 38107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38108 ;; Tracked objects:
 38109 ;;		On entry : 0/0
 38110 ;;		On exit  : 0/0
 38111 ;;		Unchanged: 0/0
 38112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38114 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38116 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38117 ;;Total ram usage:        5 bytes
 38118 ;; Hardware stack levels used: 1
 38119 ;; Hardware stack levels required when called: 14
 38120 ;; This function calls:
 38121 ;;		_readNVM
 38122 ;; This function is called by:
 38123 ;;		_defaultNVs
 38124 ;;		_nvPowerUp
 38125 ;; This function uses a non-reentrant model
 38126 ;;
 38127                           
 38128                           	psect	text163
 38129   00BA38                     __ptext163:
 38130                           	callstack 0
 38131   00BA38                     _loadNvCache:
 38132                           	callstack 14
 38133                           
 38134                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= (15+7*16); i++) {
 38135                           
 38136                           ;incstack = 0
 38137   00BA38  0E01               	movlw	1
 38138   00BA3A  0100               	movlb	0	; () banked
 38139   00BA3C  6F9B               	movwf	loadNvCache@i& (0+255),b
 38140   00BA3E                     l19692:
 38141                           
 38142                           ; BSR set to: 0
 38143                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 38144   00BA3E  0E80               	movlw	128
 38145   00BA40  259B               	addwf	loadNvCache@i& (0+255),w,b
 38146   00BA42  6F97               	movwf	??_loadNvCache& (0+255),b
 38147   00BA44  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 38148   00BA46  0EFF               	movlw	255
 38149   00BA48  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 38150   00BA4A  C097  F091         	movff	??_loadNvCache,readNVM@index
 38151   00BA4E  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 38152   00BA52  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38153   00BA54  0E01               	movlw	1
 38154   00BA56  ECD0  F059         	call	_readNVM
 38155   00BA5A  C091  F099         	movff	?_readNVM,loadNvCache@temp
 38156   00BA5E  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 38157                           
 38158                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 38159   00BA62  0100               	movlb	0	; () banked
 38160   00BA64  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 38161   00BA66  D008               	goto	l19700
 38162                           
 38163                           ; BSR set to: 0
 38164                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 38165   00BA68  0E00               	movlw	low _nvCache
 38166   00BA6A  259B               	addwf	loadNvCache@i& (0+255),w,b
 38167   00BA6C  6ED9               	movwf	fsr2l,c
 38168   00BA6E  6ADA               	clrf	fsr2h,c
 38169   00BA70  0E04               	movlw	high _nvCache
 38170   00BA72  22DA               	addwfc	fsr2h,f,c
 38171   00BA74  C099  FFDF         	movff	loadNvCache@temp,indf2
 38172   00BA78                     l19700:
 38173                           
 38174                           ; BSR set to: 0
 38175                           ;../../VLCBlib_PIC/nv.c: 173:     }
 38176   00BA78  2B9B               	incf	loadNvCache@i& (0+255),f,b
 38177                           
 38178                           ; BSR set to: 0
 38179   00BA7A  0E7F               	movlw	127
 38180   00BA7C  659B               	cpfsgt	loadNvCache@i& (0+255),b
 38181   00BA7E  D7DF               	goto	l19692
 38182   00BA80  0012               	return	
 38183   00BA82                     __end_of_loadNvCache:
 38184                           	callstack 0
 38185                           
 38186 ;; *************** function _defaultEvents *****************
 38187 ;; Defined at:
 38188 ;;		line 110 in file "../universalEvents.c"
 38189 ;; Parameters:    Size  Location     Type
 38190 ;;  io              1    wreg     unsigned char 
 38191 ;;  type            1   44[BANK1 ] unsigned char 
 38192 ;; Auto vars:     Size  Location     Type
 38193 ;;  io              1   47[BANK1 ] unsigned char 
 38194 ;;  en              2   45[BANK1 ] unsigned short 
 38195 ;;  b               1    0        unsigned char 
 38196 ;; Return value:  Size  Location     Type
 38197 ;;                  1    wreg      void 
 38198 ;; Registers used:
 38199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38200 ;; Tracked objects:
 38201 ;;		On entry : 0/0
 38202 ;;		On exit  : 0/0
 38203 ;;		Unchanged: 0/0
 38204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38205 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38206 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38208 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38209 ;;Total ram usage:        4 bytes
 38210 ;; Hardware stack levels used: 1
 38211 ;; Hardware stack levels required when called: 23
 38212 ;; This function calls:
 38213 ;;		_addEvent
 38214 ;;		_clearEvents
 38215 ;; This function is called by:
 38216 ;;		_setType
 38217 ;; This function uses a non-reentrant model
 38218 ;;
 38219                           
 38220                           	psect	text164
 38221   007558                     __ptext164:
 38222                           	callstack 0
 38223   007558                     _defaultEvents:
 38224                           	callstack 2
 38225                           
 38226                           ; BSR set to: 0
 38227                           ;incstack = 0
 38228                           ;defaultEvents@io stored from wreg
 38229   007558  0101               	movlb	1	; () banked
 38230   00755A  6FE9               	movwf	defaultEvents@io& (0+255),b
 38231                           
 38232                           ;../universalEvents.c: 111:     uint16_t en = io+1;
 38233   00755C  0E01               	movlw	1
 38234   00755E  0101               	movlb	1	; () banked
 38235   007560  25E9               	addwf	defaultEvents@io& (0+255),w,b
 38236   007562  6FE7               	movwf	defaultEvents@en& (0+255),b
 38237   007564  6BE8               	clrf	(defaultEvents@en+1)& (0+255),b
 38238   007566  0E00               	movlw	0
 38239   007568  23E8               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 38240                           
 38241                           ; BSR set to: 1
 38242                           ;../universalEvents.c: 112:     uint8_t b;;../universalEvents.c: 120:         clearEvent
      +                          s(io);
 38243   00756A  51E9               	movf	defaultEvents@io& (0+255),w,b
 38244   00756C  EC33  F05E         	call	_clearEvents
 38245                           
 38246                           ;../universalEvents.c: 125:     switch(type) {
 38247   007570  D094               	goto	l19840
 38248   007572                     l19832:
 38249                           
 38250                           ; BSR set to: 1
 38251                           ;../universalEvents.c: 129:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 38252   007572  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38253   007576  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38254   00757A  0E64               	movlw	100
 38255   00757C  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38256   00757E  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38257   007580  0E00               	movlw	0
 38258   007582  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38259   007584  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38260   007586  0E00               	movlw	0
 38261   007588  6FDB               	movwf	addEvent@evNum& (0+255),b
 38262   00758A  51E9               	movf	defaultEvents@io& (0+255),w,b
 38263   00758C  0D04               	mullw	4
 38264   00758E  50F3               	movf	243,w,c
 38265   007590  0F08               	addlw	8
 38266   007592  6FDC               	movwf	addEvent@evVal& (0+255),b
 38267   007594  0E01               	movlw	1
 38268   007596  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38269   007598  ECF5  F031         	call	_addEvent	;wreg free
 38270   00759C                     l645:
 38271                           
 38272                           ;../universalEvents.c: 134:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38273   00759C  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38274   0075A0  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38275   0075A4  C1E7  F1D9         	movff	defaultEvents@en,addEvent@eventNumber
 38276   0075A8  C1E8  F1DA         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38277   0075AC  0E01               	movlw	1
 38278   0075AE  0101               	movlb	1	; () banked
 38279   0075B0  6FDB               	movwf	addEvent@evNum& (0+255),b
 38280   0075B2  51E9               	movf	defaultEvents@io& (0+255),w,b
 38281   0075B4  0D05               	mullw	5
 38282   0075B6  50F3               	movf	243,w,c
 38283   0075B8  0F08               	addlw	8
 38284   0075BA  6FDC               	movwf	addEvent@evVal& (0+255),b
 38285   0075BC  0E01               	movlw	1
 38286   0075BE  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38287   0075C0  ECF5  F031         	call	_addEvent	;wreg free
 38288                           
 38289                           ;../universalEvents.c: 137:             break;
 38290   0075C4  0012               	return	
 38291   0075C6                     l19834:
 38292                           
 38293                           ; BSR set to: 1
 38294                           ;../universalEvents.c: 140:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 38295   0075C6  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38296   0075CA  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38297   0075CE  C1E7  F1D9         	movff	defaultEvents@en,addEvent@eventNumber
 38298   0075D2  C1E8  F1DA         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38299   0075D6  0E00               	movlw	0
 38300   0075D8  6FDB               	movwf	addEvent@evNum& (0+255),b
 38301   0075DA  51E9               	movf	defaultEvents@io& (0+255),w,b
 38302   0075DC  0D04               	mullw	4
 38303   0075DE  50F3               	movf	243,w,c
 38304   0075E0  0F08               	addlw	8
 38305   0075E2  6FDC               	movwf	addEvent@evVal& (0+255),b
 38306   0075E4  0E01               	movlw	1
 38307   0075E6  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38308   0075E8  ECF5  F031         	call	_addEvent	;wreg free
 38309                           
 38310                           ;../universalEvents.c: 141:             break;
 38311   0075EC  0012               	return	
 38312   0075EE                     l19836:
 38313                           
 38314                           ; BSR set to: 1
 38315                           ;../universalEvents.c: 145:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 38316   0075EE  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38317   0075F2  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38318   0075F6  0E64               	movlw	100
 38319   0075F8  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38320   0075FA  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38321   0075FC  0E00               	movlw	0
 38322   0075FE  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38323   007600  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38324   007602  0E00               	movlw	0
 38325   007604  6FDB               	movwf	addEvent@evNum& (0+255),b
 38326   007606  51E9               	movf	defaultEvents@io& (0+255),w,b
 38327   007608  0D04               	mullw	4
 38328   00760A  50F3               	movf	243,w,c
 38329   00760C  0F08               	addlw	8
 38330   00760E  6FDC               	movwf	addEvent@evVal& (0+255),b
 38331   007610  0E01               	movlw	1
 38332   007612  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38333   007614  ECF5  F031         	call	_addEvent	;wreg free
 38334                           
 38335                           ;../universalEvents.c: 146:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 38336   007618  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38337   00761C  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38338   007620  0E2C               	movlw	44
 38339   007622  0101               	movlb	1	; () banked
 38340   007624  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38341   007626  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38342   007628  0E01               	movlw	1
 38343   00762A  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38344   00762C  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38345   00762E  0E00               	movlw	0
 38346   007630  6FDB               	movwf	addEvent@evNum& (0+255),b
 38347   007632  51E9               	movf	defaultEvents@io& (0+255),w,b
 38348   007634  0D04               	mullw	4
 38349   007636  50F3               	movf	243,w,c
 38350   007638  0F09               	addlw	9
 38351   00763A  6FDC               	movwf	addEvent@evVal& (0+255),b
 38352   00763C  0E01               	movlw	1
 38353   00763E  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38354   007640  ECF5  F031         	call	_addEvent	;wreg free
 38355                           
 38356                           ;../universalEvents.c: 147:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 38357   007644  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38358   007648  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38359   00764C  0EC8               	movlw	200
 38360   00764E  0101               	movlb	1	; () banked
 38361   007650  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38362   007652  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38363   007654  0E00               	movlw	0
 38364   007656  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38365   007658  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38366   00765A  0E00               	movlw	0
 38367   00765C  6FDB               	movwf	addEvent@evNum& (0+255),b
 38368   00765E  51E9               	movf	defaultEvents@io& (0+255),w,b
 38369   007660  0D04               	mullw	4
 38370   007662  50F3               	movf	243,w,c
 38371   007664  0F0A               	addlw	10
 38372   007666  6FDC               	movwf	addEvent@evVal& (0+255),b
 38373   007668  0E01               	movlw	1
 38374   00766A  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38375   00766C  ECF5  F031         	call	_addEvent	;wreg free
 38376                           
 38377                           ;../universalEvents.c: 149:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38378   007670  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38379   007674  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38380   007678  C1E7  F1D9         	movff	defaultEvents@en,addEvent@eventNumber
 38381   00767C  C1E8  F1DA         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38382   007680  0E01               	movlw	1
 38383   007682  0101               	movlb	1	; () banked
 38384   007684  6FDB               	movwf	addEvent@evNum& (0+255),b
 38385   007686  51E9               	movf	defaultEvents@io& (0+255),w,b
 38386   007688  0D05               	mullw	5
 38387   00768A  50F3               	movf	243,w,c
 38388   00768C  0F08               	addlw	8
 38389   00768E  6FDC               	movwf	addEvent@evVal& (0+255),b
 38390   007690  0E01               	movlw	1
 38391   007692  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38392   007694  ECF5  F031         	call	_addEvent	;wreg free
 38393                           
 38394                           ;../universalEvents.c: 150:             break;
 38395   007698  0012               	return	
 38396   00769A                     l19840:
 38397   00769A  0101               	movlb	1	; () banked
 38398   00769C  51E6               	movf	defaultEvents@type& (0+255),w,b
 38399                           
 38400                           ; Switch size 1, requested type "simple"
 38401                           ; Number of cases is 5, Range of values is 0 to 4
 38402                           ; switch strategies available:
 38403                           ; Name         Instructions Cycles
 38404                           ; simple_byte           16     9 (average)
 38405                           ;	Chosen strategy is simple_byte
 38406   00769E  0A00               	xorlw	0	; case 0
 38407   0076A0  B4D8               	btfsc	status,2,c
 38408   0076A2  D791               	goto	l19834
 38409   0076A4  0A01               	xorlw	1	; case 1
 38410   0076A6  B4D8               	btfsc	status,2,c
 38411   0076A8  D779               	goto	l645
 38412   0076AA  0A03               	xorlw	3	; case 2
 38413   0076AC  B4D8               	btfsc	status,2,c
 38414   0076AE  D79F               	goto	l19836
 38415   0076B0  0A01               	xorlw	1	; case 3
 38416   0076B2  B4D8               	btfsc	status,2,c
 38417   0076B4  D75E               	goto	l19832
 38418   0076B6  0A07               	xorlw	7	; case 4
 38419   0076B8  0012               	return	
 38420   0076BA                     __end_of_defaultEvents:
 38421                           	callstack 0
 38422                           
 38423 ;; *************** function _clearEvents *****************
 38424 ;; Defined at:
 38425 ;;		line 222 in file "../universalEvents.c"
 38426 ;; Parameters:    Size  Location     Type
 38427 ;;  io              1    wreg     unsigned char 
 38428 ;; Auto vars:     Size  Location     Type
 38429 ;;  io              1   39[BANK1 ] unsigned char 
 38430 ;; Return value:  Size  Location     Type
 38431 ;;                  1    wreg      void 
 38432 ;; Registers used:
 38433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38434 ;; Tracked objects:
 38435 ;;		On entry : 0/0
 38436 ;;		On exit  : 0/0
 38437 ;;		Unchanged: 0/0
 38438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38440 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38442 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38443 ;;Total ram usage:        1 bytes
 38444 ;; Hardware stack levels used: 1
 38445 ;; Hardware stack levels required when called: 22
 38446 ;; This function calls:
 38447 ;;		_deleteActionRange
 38448 ;;		_deleteHappeningRange
 38449 ;; This function is called by:
 38450 ;;		_defaultEvents
 38451 ;; This function uses a non-reentrant model
 38452 ;;
 38453                           
 38454                           	psect	text165
 38455   00BC66                     __ptext165:
 38456                           	callstack 0
 38457   00BC66                     _clearEvents:
 38458                           	callstack 2
 38459                           
 38460                           ;incstack = 0
 38461                           ;clearEvents@io stored from wreg
 38462   00BC66  0101               	movlb	1	; () banked
 38463   00BC68  6FE1               	movwf	clearEvents@io& (0+255),b
 38464                           
 38465                           ;../universalEvents.c: 223:     deleteActionRange((uint8_t)(uint8_t)(8 + 5*(io)), 5);
 38466   00BC6A  0E05               	movlw	5
 38467   00BC6C  0101               	movlb	1	; () banked
 38468   00BC6E  6FD7               	movwf	deleteActionRange@number& (0+255),b
 38469   00BC70  51E1               	movf	clearEvents@io& (0+255),w,b
 38470   00BC72  0D05               	mullw	5
 38471   00BC74  50F3               	movf	243,w,c
 38472   00BC76  0F08               	addlw	8
 38473   00BC78  EC96  F04B         	call	_deleteActionRange
 38474                           
 38475                           ;../universalEvents.c: 224:     deleteActionRange((uint8_t)(uint8_t)((8 + 5*(io)) | 0x80
      +                          ), 5);
 38476   00BC7C  0E05               	movlw	5
 38477   00BC7E  0101               	movlb	1	; () banked
 38478   00BC80  6FD7               	movwf	deleteActionRange@number& (0+255),b
 38479   00BC82  51E1               	movf	clearEvents@io& (0+255),w,b
 38480   00BC84  0D05               	mullw	5
 38481   00BC86  50F3               	movf	243,w,c
 38482   00BC88  0F08               	addlw	8
 38483   00BC8A  0980               	iorlw	128
 38484   00BC8C  EC96  F04B         	call	_deleteActionRange
 38485                           
 38486                           ;../universalEvents.c: 225:     deleteHappeningRange((8 + 4*(io)), 4);
 38487   00BC90  0E04               	movlw	4
 38488   00BC92  0101               	movlb	1	; () banked
 38489   00BC94  6FD7               	movwf	deleteHappeningRange@number& (0+255),b
 38490   00BC96  51E1               	movf	clearEvents@io& (0+255),w,b
 38491   00BC98  0D04               	mullw	4
 38492   00BC9A  50F3               	movf	243,w,c
 38493   00BC9C  0F08               	addlw	8
 38494   00BC9E  ECE6  F044         	call	_deleteHappeningRange
 38495   00BCA2  0012               	return		;funcret
 38496   00BCA4                     __end_of_clearEvents:
 38497                           	callstack 0
 38498                           
 38499 ;; *************** function _deleteHappeningRange *****************
 38500 ;; Defined at:
 38501 ;;		line 287 in file "../../VLCBlib_PIC/event_producer_happening.c"
 38502 ;; Parameters:    Size  Location     Type
 38503 ;;  happening       1    wreg     unsigned char 
 38504 ;;  number          1   29[BANK1 ] unsigned char 
 38505 ;; Auto vars:     Size  Location     Type
 38506 ;;  happening       1   35[BANK1 ] unsigned char 
 38507 ;;  h               1   36[BANK1 ] unsigned char 
 38508 ;;  f               1    0        struct .
 38509 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 38510 ;; Return value:  Size  Location     Type
 38511 ;;                  1    wreg      void 
 38512 ;; Registers used:
 38513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38514 ;; Tracked objects:
 38515 ;;		On entry : 0/0
 38516 ;;		On exit  : 0/0
 38517 ;;		Unchanged: 0/0
 38518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38519 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38520 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38521 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38522 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38523 ;;Total ram usage:        9 bytes
 38524 ;; Hardware stack levels used: 1
 38525 ;; Hardware stack levels required when called: 21
 38526 ;; This function calls:
 38527 ;;		_checkRemoveTableEntry
 38528 ;;		_flushFlashBlock
 38529 ;;		_readNVM
 38530 ;;		_rebuildHashtable
 38531 ;;		_validStart
 38532 ;;		_writeEv
 38533 ;; This function is called by:
 38534 ;;		_clearEvents
 38535 ;; This function uses a non-reentrant model
 38536 ;;
 38537                           
 38538                           	psect	text166
 38539   0089CC                     __ptext166:
 38540                           	callstack 0
 38541   0089CC                     _deleteHappeningRange:
 38542                           	callstack 2
 38543                           
 38544                           ;incstack = 0
 38545                           ;deleteHappeningRange@happening stored from wreg
 38546   0089CC  0101               	movlb	1	; () banked
 38547   0089CE  6FDD               	movwf	deleteHappeningRange@happening& (0+255),b
 38548                           
 38549                           ;../../VLCBlib_PIC/event_producer_happening.c: 288:     uint8_t tableIndex;;../../VLCBli
      +                          b_PIC/event_producer_happening.c: 289:     for (tableIndex=0; tableIndex < 255; tableInd
      +                          ex++) {
 38550   0089D0  0E00               	movlw	0
 38551   0089D2  0101               	movlb	1	; () banked
 38552   0089D4  6FDF               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 38553   0089D6                     l19550:
 38554                           
 38555                           ; BSR set to: 1
 38556                           ;../../VLCBlib_PIC/event_producer_happening.c: 290:         if ( validStart(tableIndex))
      +                           {
 38557   0089D6  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38558   0089D8  EC39  F05C         	call	_validStart
 38559   0089DC  0900               	iorlw	0
 38560   0089DE  B4D8               	btfsc	status,2,c
 38561   0089E0  D059               	goto	l19562
 38562   0089E2  0101               	movlb	1	; () banked
 38563   0089E4  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38564   0089E6  6FD8               	movwf	??_deleteHappeningRange& (0+255),b
 38565   0089E8  6BD9               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 38566   0089EA  3BD8               	swapf	??_deleteHappeningRange& (0+255),f,b
 38567   0089EC  3BD9               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 38568   0089EE  0EF0               	movlw	240
 38569   0089F0  17D9               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38570   0089F2  51D8               	movf	??_deleteHappeningRange& (0+255),w,b
 38571   0089F4  0B0F               	andlw	15
 38572   0089F6  13D9               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38573   0089F8  0EF0               	movlw	240
 38574   0089FA  17D8               	andwf	??_deleteHappeningRange& (0+255),f,b
 38575   0089FC  0E80               	movlw	128
 38576   0089FE  25D8               	addwf	??_deleteHappeningRange& (0+255),w,b
 38577   008A00  6FDA               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38578   008A02  0EEF               	movlw	239
 38579   008A04  21D9               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38580   008A06  6FDB               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38581   008A08  C1DA  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38582   008A0C  C1DB  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38583   008A10  0100               	movlb	0	; () banked
 38584   008A12  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38585   008A14  0E01               	movlw	1
 38586   008A16  ECD0  F059         	call	_readNVM
 38587                           
 38588                           ;../../VLCBlib_PIC/event_producer_happening.c: 295:             h = (Happening)readNVM(F
      +                          LASH_NVM_TYPE,
 38589   008A1A  0101               	movlb	1	; () banked
 38590   008A1C  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38591   008A1E  0D10               	mullw	16
 38592   008A20  CFF3 F1D8          	movff	prodl,??_deleteHappeningRange
 38593   008A24  CFF4 F1D9          	movff	prodh,??_deleteHappeningRange+1
 38594   008A28  0E86               	movlw	134
 38595   008A2A  25D8               	addwf	??_deleteHappeningRange& (0+255),w,b
 38596   008A2C  6FDA               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38597   008A2E  0EEF               	movlw	239
 38598   008A30  21D9               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38599   008A32  6FDB               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38600   008A34  C1DA  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38601   008A38  C1DB  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38602   008A3C  0100               	movlb	0	; () banked
 38603   008A3E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38604   008A40  0E01               	movlw	1
 38605   008A42  ECD0  F059         	call	_readNVM
 38606   008A46  0100               	movlb	0	; () banked
 38607   008A48  5191               	movf	?_readNVM& (0+255),w,b
 38608   008A4A  0101               	movlb	1	; () banked
 38609   008A4C  6FDE               	movwf	deleteHappeningRange@h& (0+255),b
 38610                           
 38611                           ; BSR set to: 1
 38612                           ;../../VLCBlib_PIC/event_producer_happening.c: 297:             if ((h >= happening) && 
      +                          (h < happening+number)) {
 38613   008A4E  51DD               	movf	deleteHappeningRange@happening& (0+255),w,b
 38614   008A50  5DDE               	subwf	deleteHappeningRange@h& (0+255),w,b
 38615   008A52  A0D8               	btfss	status,0,c
 38616   008A54  D01F               	goto	l19562
 38617                           
 38618                           ; BSR set to: 1
 38619   008A56  51D7               	movf	deleteHappeningRange@number& (0+255),w,b
 38620   008A58  C1DD  F1D8         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 38621   008A5C  6BD9               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 38622   008A5E  27D8               	addwf	??_deleteHappeningRange& (0+255),f,b
 38623   008A60  0E00               	movlw	0
 38624   008A62  23D9               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 38625   008A64  51DE               	movf	deleteHappeningRange@h& (0+255),w,b
 38626   008A66  6FDA               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38627   008A68  6BDB               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 38628   008A6A  51D8               	movf	??_deleteHappeningRange& (0+255),w,b
 38629   008A6C  5DDA               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 38630   008A6E  51DB               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 38631   008A70  0A80               	xorlw	128
 38632   008A72  6FDC               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 38633   008A74  51D9               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 38634   008A76  0A80               	xorlw	128
 38635   008A78  59DC               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 38636   008A7A  B0D8               	btfsc	status,0,c
 38637   008A7C  D00B               	goto	l19562
 38638                           
 38639                           ; BSR set to: 1
 38640                           ;../../VLCBlib_PIC/event_producer_happening.c: 298:                 writeEv(tableIndex, 
      +                          0, 0);
 38641   008A7E  0E00               	movlw	0
 38642   008A80  6FCB               	movwf	writeEv@evNum& (0+255),b
 38643   008A82  0E00               	movlw	0
 38644   008A84  6FCC               	movwf	writeEv@evVal& (0+255),b
 38645   008A86  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38646   008A88  ECF7  F018         	call	_writeEv
 38647                           
 38648                           ;../../VLCBlib_PIC/event_producer_happening.c: 299:                 checkRemoveTableEntr
      +                          y(tableIndex);
 38649   008A8C  0101               	movlb	1	; () banked
 38650   008A8E  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38651   008A90  EC8A  F05D         	call	_checkRemoveTableEntry
 38652   008A94                     l19562:
 38653                           
 38654                           ;../../VLCBlib_PIC/event_producer_happening.c: 302:     }
 38655   008A94  0101               	movlb	1	; () banked
 38656   008A96  2BDF               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 38657                           
 38658                           ; BSR set to: 1
 38659   008A98  29DF               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 38660   008A9A  A4D8               	btfss	status,2,c
 38661   008A9C  D79C               	goto	l19550
 38662                           
 38663                           ; BSR set to: 1
 38664                           ;../../VLCBlib_PIC/event_producer_happening.c: 303:     flushFlashBlock();
 38665   008A9E  EC5F  F053         	call	_flushFlashBlock	;wreg free
 38666                           
 38667                           ;../../VLCBlib_PIC/event_producer_happening.c: 304:     rebuildHashtable();
 38668   008AA2  EC93  F03E         	call	_rebuildHashtable	;wreg free
 38669   008AA6  0012               	return		;funcret
 38670   008AA8                     __end_of_deleteHappeningRange:
 38671                           	callstack 0
 38672                           
 38673 ;; *************** function _deleteActionRange *****************
 38674 ;; Defined at:
 38675 ;;		line 529 in file "../event_consumerDualActionQueue.c"
 38676 ;; Parameters:    Size  Location     Type
 38677 ;;  action          1    wreg     unsigned char 
 38678 ;;  number          1   29[BANK1 ] unsigned char 
 38679 ;; Auto vars:     Size  Location     Type
 38680 ;;  action          1   36[BANK1 ] unsigned char 
 38681 ;;  e               1   37[BANK1 ] unsigned char 
 38682 ;;  updated         1   35[BANK1 ] enum E12766
 38683 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 38684 ;; Return value:  Size  Location     Type
 38685 ;;                  1    wreg      void 
 38686 ;; Registers used:
 38687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38688 ;; Tracked objects:
 38689 ;;		On entry : 0/0
 38690 ;;		On exit  : 0/0
 38691 ;;		Unchanged: 0/0
 38692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38693 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38694 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38695 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38696 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38697 ;;Total ram usage:       10 bytes
 38698 ;; Hardware stack levels used: 1
 38699 ;; Hardware stack levels required when called: 21
 38700 ;; This function calls:
 38701 ;;		_checkRemoveTableEntry
 38702 ;;		_flushFlashBlock
 38703 ;;		_getEVs
 38704 ;;		_rebuildHashtable
 38705 ;;		_validStart
 38706 ;;		_writeEv
 38707 ;; This function is called by:
 38708 ;;		_clearEvents
 38709 ;; This function uses a non-reentrant model
 38710 ;;
 38711                           
 38712                           	psect	text167
 38713   00972C                     __ptext167:
 38714                           	callstack 0
 38715   00972C                     _deleteActionRange:
 38716                           	callstack 2
 38717                           
 38718                           ;incstack = 0
 38719                           ;deleteActionRange@action stored from wreg
 38720   00972C  0101               	movlb	1	; () banked
 38721   00972E  6FDE               	movwf	deleteActionRange@action& (0+255),b
 38722                           
 38723                           ;../event_consumerDualActionQueue.c: 530:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 531:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 38724   009730  0E00               	movlw	0
 38725   009732  0101               	movlb	1	; () banked
 38726   009734  6FE0               	movwf	deleteActionRange@tableIndex& (0+255),b
 38727   009736                     l19506:
 38728                           
 38729                           ; BSR set to: 1
 38730                           ;../event_consumerDualActionQueue.c: 532:         if (validStart(tableIndex)) {
 38731   009736  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38732   009738  EC39  F05C         	call	_validStart
 38733   00973C  0900               	iorlw	0
 38734   00973E  B4D8               	btfsc	status,2,c
 38735   009740  D044               	goto	l19536
 38736                           
 38737                           ;../event_consumerDualActionQueue.c: 533:             Boolean updated = FALSE;
 38738   009742  0E00               	movlw	0
 38739   009744  0101               	movlb	1	; () banked
 38740   009746  6FDD               	movwf	deleteActionRange@updated& (0+255),b
 38741                           
 38742                           ; BSR set to: 1
 38743                           ;../event_consumerDualActionQueue.c: 534:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 535:             if (getEVs(tableIndex)) {
 38744   009748  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38745   00974A  EC3A  F041         	call	_getEVs
 38746   00974E  0900               	iorlw	0
 38747   009750  A4D8               	btfss	status,2,c
 38748   009752  0012               	return	
 38749                           
 38750                           ;../event_consumerDualActionQueue.c: 539:             for (e=1; e<20; e++) {
 38751   009754  0E01               	movlw	1
 38752   009756  0101               	movlb	1	; () banked
 38753   009758  6FDF               	movwf	deleteActionRange@e& (0+255),b
 38754   00975A                     l19520:
 38755                           
 38756                           ; BSR set to: 1
 38757                           ;../event_consumerDualActionQueue.c: 540:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 38758   00975A  0E20               	movlw	low _evs
 38759   00975C  25DF               	addwf	deleteActionRange@e& (0+255),w,b
 38760   00975E  6ED9               	movwf	fsr2l,c
 38761   009760  6ADA               	clrf	fsr2h,c
 38762   009762  0E02               	movlw	high _evs
 38763   009764  22DA               	addwfc	fsr2h,f,c
 38764   009766  51DE               	movf	deleteActionRange@action& (0+255),w,b
 38765   009768  5CDE               	subwf	postinc2,w,c
 38766   00976A  A0D8               	btfss	status,0,c
 38767   00976C  D024               	goto	l19528
 38768                           
 38769                           ; BSR set to: 1
 38770   00976E  51D7               	movf	deleteActionRange@number& (0+255),w,b
 38771   009770  C1DE  F1D8         	movff	deleteActionRange@action,??_deleteActionRange
 38772   009774  6BD9               	clrf	(??_deleteActionRange+1)& (0+255),b
 38773   009776  27D8               	addwf	??_deleteActionRange& (0+255),f,b
 38774   009778  0E00               	movlw	0
 38775   00977A  23D9               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 38776   00977C  0E20               	movlw	low _evs
 38777   00977E  25DF               	addwf	deleteActionRange@e& (0+255),w,b
 38778   009780  6ED9               	movwf	fsr2l,c
 38779   009782  6ADA               	clrf	fsr2h,c
 38780   009784  0E02               	movlw	high _evs
 38781   009786  22DA               	addwfc	fsr2h,f,c
 38782   009788  50DF               	movf	indf2,w,c
 38783   00978A  6FDA               	movwf	(??_deleteActionRange+2)& (0+255),b
 38784   00978C  6BDB               	clrf	(??_deleteActionRange+3)& (0+255),b
 38785   00978E  51D8               	movf	??_deleteActionRange& (0+255),w,b
 38786   009790  5DDA               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 38787   009792  51DB               	movf	(??_deleteActionRange+3)& (0+255),w,b
 38788   009794  0A80               	xorlw	128
 38789   009796  6FDC               	movwf	(??_deleteActionRange+4)& (0+255),b
 38790   009798  51D9               	movf	(??_deleteActionRange+1)& (0+255),w,b
 38791   00979A  0A80               	xorlw	128
 38792   00979C  59DC               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 38793   00979E  B0D8               	btfsc	status,0,c
 38794   0097A0  D00A               	goto	l19528
 38795                           
 38796                           ; BSR set to: 1
 38797                           ;../event_consumerDualActionQueue.c: 541:                     writeEv(tableIndex, e, 0);
 38798   0097A2  C1DF  F1CB         	movff	deleteActionRange@e,writeEv@evNum
 38799   0097A6  0E00               	movlw	0
 38800   0097A8  6FCC               	movwf	writeEv@evVal& (0+255),b
 38801   0097AA  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38802   0097AC  ECF7  F018         	call	_writeEv
 38803                           
 38804                           ;../event_consumerDualActionQueue.c: 542:                     updated = TRUE;
 38805   0097B0  0E01               	movlw	1
 38806   0097B2  0101               	movlb	1	; () banked
 38807   0097B4  6FDD               	movwf	deleteActionRange@updated& (0+255),b
 38808   0097B6                     l19528:
 38809                           
 38810                           ; BSR set to: 1
 38811                           ;../event_consumerDualActionQueue.c: 544:             }
 38812   0097B6  2BDF               	incf	deleteActionRange@e& (0+255),f,b
 38813                           
 38814                           ; BSR set to: 1
 38815   0097B8  0E13               	movlw	19
 38816   0097BA  65DF               	cpfsgt	deleteActionRange@e& (0+255),b
 38817   0097BC  D7CE               	goto	l19520
 38818                           
 38819                           ; BSR set to: 1
 38820                           ;../event_consumerDualActionQueue.c: 545:             if (updated) {
 38821   0097BE  51DD               	movf	deleteActionRange@updated& (0+255),w,b
 38822   0097C0  B4D8               	btfsc	status,2,c
 38823   0097C2  D003               	goto	l19536
 38824                           
 38825                           ; BSR set to: 1
 38826                           ;../event_consumerDualActionQueue.c: 546:                 checkRemoveTableEntry(tableInd
      +                          ex);
 38827   0097C4  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38828   0097C6  EC8A  F05D         	call	_checkRemoveTableEntry
 38829   0097CA                     l19536:
 38830                           
 38831                           ;../event_consumerDualActionQueue.c: 549:     }
 38832   0097CA  0101               	movlb	1	; () banked
 38833   0097CC  2BE0               	incf	deleteActionRange@tableIndex& (0+255),f,b
 38834                           
 38835                           ; BSR set to: 1
 38836   0097CE  29E0               	incf	deleteActionRange@tableIndex& (0+255),w,b
 38837   0097D0  A4D8               	btfss	status,2,c
 38838   0097D2  D7B1               	goto	l19506
 38839                           
 38840                           ; BSR set to: 1
 38841                           ;../event_consumerDualActionQueue.c: 550:     flushFlashBlock();
 38842   0097D4  EC5F  F053         	call	_flushFlashBlock	;wreg free
 38843                           
 38844                           ;../event_consumerDualActionQueue.c: 552:     rebuildHashtable();
 38845   0097D8  EC93  F03E         	call	_rebuildHashtable	;wreg free
 38846   0097DC  0012               	return		;funcret
 38847   0097DE                     __end_of_deleteActionRange:
 38848                           	callstack 0
 38849                           
 38850 ;; *************** function _addEvent *****************
 38851 ;; Defined at:
 38852 ;;		line 938 in file "../../VLCBlib_PIC/event_teach_large.c"
 38853 ;; Parameters:    Size  Location     Type
 38854 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 38855 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 38856 ;;  evNum           1   33[BANK1 ] unsigned char 
 38857 ;;  evVal           1   34[BANK1 ] unsigned char 
 38858 ;;  forceOwnNN      1   35[BANK1 ] enum E12766
 38859 ;; Auto vars:     Size  Location     Type
 38860 ;;  e               1   42[BANK1 ] unsigned char 
 38861 ;;  f               1   41[BANK1 ] struct .
 38862 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 38863 ;;  error           1   40[BANK1 ] unsigned char 
 38864 ;; Return value:  Size  Location     Type
 38865 ;;                  1    wreg      unsigned char 
 38866 ;; Registers used:
 38867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38868 ;; Tracked objects:
 38869 ;;		On entry : 0/0
 38870 ;;		On exit  : 0/0
 38871 ;;		Unchanged: 0/0
 38872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38873 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38874 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38875 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38876 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38877 ;;Total ram usage:       15 bytes
 38878 ;; Hardware stack levels used: 1
 38879 ;; Hardware stack levels required when called: 21
 38880 ;; This function calls:
 38881 ;;		_findEvent
 38882 ;;		_flushFlashBlock
 38883 ;;		_readNVM
 38884 ;;		_rebuildHashtable
 38885 ;;		_writeEv
 38886 ;;		_writeNVM
 38887 ;; This function is called by:
 38888 ;;		_defaultEvents
 38889 ;;		_APP_addEvent
 38890 ;; This function uses a non-reentrant model
 38891 ;;
 38892                           
 38893                           	psect	text168
 38894   0063EA                     __ptext168:
 38895                           	callstack 0
 38896   0063EA                     _addEvent:
 38897                           	callstack 5
 38898                           
 38899                           ;../../VLCBlib_PIC/event_teach_large.c: 939:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 940:     uint8_t error;;../../VLCBlib_PIC/event_teach_large.c: 942: 
      +                              tableIndex = findEvent(nodeNumber, eventNumber);
 38900                           
 38901                           ;incstack = 0
 38902   0063EA  C1D7  F1BA         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 38903   0063EE  C1D8  F1BB         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 38904   0063F2  C1D9  F1BC         	movff	addEvent@eventNumber,findEvent@eventNumber
 38905   0063F6  C1DA  F1BD         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 38906   0063FA  ECBB  F051         	call	_findEvent	;wreg free
 38907   0063FE  0101               	movlb	1	; () banked
 38908   006400  6FE5               	movwf	addEvent@tableIndex& (0+255),b
 38909                           
 38910                           ; BSR set to: 1
 38911                           ;../../VLCBlib_PIC/event_teach_large.c: 943:     if (tableIndex == 0xff) {
 38912   006402  29E5               	incf	addEvent@tableIndex& (0+255),w,b
 38913   006404  A4D8               	btfss	status,2,c
 38914   006406  D0E2               	goto	l19672
 38915                           
 38916                           ; BSR set to: 1
 38917                           ;../../VLCBlib_PIC/event_teach_large.c: 949:         if (evVal == 0) {
 38918   006408  51DC               	movf	addEvent@evVal& (0+255),w,b
 38919   00640A  A4D8               	btfss	status,2,c
 38920   00640C  D002               	goto	l19630
 38921   00640E                     u19490:
 38922                           
 38923                           ;../../VLCBlib_PIC/event_teach_large.c: 950:             return 0;
 38924   00640E  0E00               	movlw	0
 38925   006410  0012               	return	
 38926   006412                     l19630:
 38927                           
 38928                           ; BSR set to: 1
 38929                           ;../../VLCBlib_PIC/event_teach_large.c: 952:         error = 1;
 38930   006412  0E01               	movlw	1
 38931   006414  6FE2               	movwf	addEvent@error& (0+255),b
 38932                           
 38933                           ;../../VLCBlib_PIC/event_teach_large.c: 954:         for (tableIndex=0; tableIndex<255; 
      +                          tableIndex++) {
 38934   006416  0E00               	movlw	0
 38935   006418  6FE5               	movwf	addEvent@tableIndex& (0+255),b
 38936   00641A                     l19636:
 38937                           
 38938                           ; BSR set to: 1
 38939                           ;../../VLCBlib_PIC/event_teach_large.c: 955:             EventTableFlags f;;../../VLCBli
      +                          b_PIC/event_teach_large.c: 956:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 38940   00641A  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38941   00641C  6FDE               	movwf	??_addEvent& (0+255),b
 38942   00641E  6BDF               	clrf	(??_addEvent+1)& (0+255),b
 38943   006420  3BDE               	swapf	??_addEvent& (0+255),f,b
 38944   006422  3BDF               	swapf	(??_addEvent+1)& (0+255),f,b
 38945   006424  0EF0               	movlw	240
 38946   006426  17DF               	andwf	(??_addEvent+1)& (0+255),f,b
 38947   006428  51DE               	movf	??_addEvent& (0+255),w,b
 38948   00642A  0B0F               	andlw	15
 38949   00642C  13DF               	iorwf	(??_addEvent+1)& (0+255),f,b
 38950   00642E  0EF0               	movlw	240
 38951   006430  17DE               	andwf	??_addEvent& (0+255),f,b
 38952   006432  0E80               	movlw	128
 38953   006434  25DE               	addwf	??_addEvent& (0+255),w,b
 38954   006436  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38955   006438  0EEF               	movlw	239
 38956   00643A  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38957   00643C  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38958   00643E  C1E0  F091         	movff	??_addEvent+2,readNVM@index
 38959   006442  C1E1  F092         	movff	??_addEvent+3,readNVM@index+1
 38960   006446  0100               	movlb	0	; () banked
 38961   006448  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38962   00644A  0E01               	movlw	1
 38963   00644C  ECD0  F059         	call	_readNVM
 38964   006450  0100               	movlb	0	; () banked
 38965   006452  5191               	movf	?_readNVM& (0+255),w,b
 38966   006454  0101               	movlb	1	; () banked
 38967   006456  6FE3               	movwf	addEvent@f& (0+255),b
 38968                           
 38969                           ; BSR set to: 1
 38970                           ;../../VLCBlib_PIC/event_teach_large.c: 957:             if (f.freeEntry) {
 38971   006458  AFE3               	btfss	addEvent@f& (0+255),7,b
 38972   00645A  D0AF               	goto	l19662
 38973                           
 38974                           ; BSR set to: 1
 38975                           ;../../VLCBlib_PIC/event_teach_large.c: 958:                 uint8_t e;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 960:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIn
      +                          dex+2, nodeNumber&0xFF);
 38976   00645C  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38977   00645E  0D10               	mullw	16
 38978   006460  CFF3 F1DE          	movff	prodl,??_addEvent
 38979   006464  CFF4 F1DF          	movff	prodh,??_addEvent+1
 38980   006468  0E82               	movlw	130
 38981   00646A  25DE               	addwf	??_addEvent& (0+255),w,b
 38982   00646C  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38983   00646E  0EEF               	movlw	239
 38984   006470  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38985   006472  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38986   006474  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 38987   006478  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38988   00647C  0100               	movlb	0	; () banked
 38989   00647E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38990   006480  C1D7  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 38991   006484  0E01               	movlw	1
 38992   006486  EC60  F05C         	call	_writeNVM
 38993                           
 38994                           ;../../VLCBlib_PIC/event_teach_large.c: 961:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+2 +1, nodeNumber>>8);
 38995   00648A  0101               	movlb	1	; () banked
 38996   00648C  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38997   00648E  0D10               	mullw	16
 38998   006490  CFF3 F1DE          	movff	prodl,??_addEvent
 38999   006494  CFF4 F1DF          	movff	prodh,??_addEvent+1
 39000   006498  0E83               	movlw	131
 39001   00649A  25DE               	addwf	??_addEvent& (0+255),w,b
 39002   00649C  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39003   00649E  0EEF               	movlw	239
 39004   0064A0  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39005   0064A2  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39006   0064A4  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39007   0064A8  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39008   0064AC  0100               	movlb	0	; () banked
 39009   0064AE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39010   0064B0  0101               	movlb	1	; () banked
 39011   0064B2  51D8               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 39012   0064B4  0100               	movlb	0	; () banked
 39013   0064B6  6FA7               	movwf	writeNVM@value& (0+255),b
 39014   0064B8  0E01               	movlw	1
 39015   0064BA  EC60  F05C         	call	_writeNVM
 39016                           
 39017                           ;../../VLCBlib_PIC/event_teach_large.c: 962:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4, eventNumber&0xFF);
 39018   0064BE  0101               	movlb	1	; () banked
 39019   0064C0  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39020   0064C2  0D10               	mullw	16
 39021   0064C4  CFF3 F1DE          	movff	prodl,??_addEvent
 39022   0064C8  CFF4 F1DF          	movff	prodh,??_addEvent+1
 39023   0064CC  0E84               	movlw	132
 39024   0064CE  25DE               	addwf	??_addEvent& (0+255),w,b
 39025   0064D0  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39026   0064D2  0EEF               	movlw	239
 39027   0064D4  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39028   0064D6  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39029   0064D8  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39030   0064DC  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39031   0064E0  0100               	movlb	0	; () banked
 39032   0064E2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39033   0064E4  C1D9  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 39034   0064E8  0E01               	movlw	1
 39035   0064EA  EC60  F05C         	call	_writeNVM
 39036                           
 39037                           ;../../VLCBlib_PIC/event_teach_large.c: 963:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4 +1, eventNumber>>8);
 39038   0064EE  0101               	movlb	1	; () banked
 39039   0064F0  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39040   0064F2  0D10               	mullw	16
 39041   0064F4  CFF3 F1DE          	movff	prodl,??_addEvent
 39042   0064F8  CFF4 F1DF          	movff	prodh,??_addEvent+1
 39043   0064FC  0E85               	movlw	133
 39044   0064FE  25DE               	addwf	??_addEvent& (0+255),w,b
 39045   006500  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39046   006502  0EEF               	movlw	239
 39047   006504  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39048   006506  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39049   006508  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39050   00650C  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39051   006510  0100               	movlb	0	; () banked
 39052   006512  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39053   006514  0101               	movlb	1	; () banked
 39054   006516  51DA               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 39055   006518  0100               	movlb	0	; () banked
 39056   00651A  6FA7               	movwf	writeNVM@value& (0+255),b
 39057   00651C  0E01               	movlw	1
 39058   00651E  EC60  F05C         	call	_writeNVM
 39059                           
 39060                           ;../../VLCBlib_PIC/event_teach_large.c: 964:                 f.asByte = 0;
 39061   006522  0E00               	movlw	0
 39062   006524  0101               	movlb	1	; () banked
 39063   006526  6FE3               	movwf	addEvent@f& (0+255),b
 39064                           
 39065                           ; BSR set to: 1
 39066                           ;../../VLCBlib_PIC/event_teach_large.c: 965:                 f.forceOwnNN = forceOwnNN;
 39067   006528  B1DD               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 39068   00652A  D002               	bra	u19515
 39069   00652C  9DE3               	bcf	addEvent@f& (0+255),6,b
 39070   00652E  D002               	bra	u19516
 39071   006530                     u19515:
 39072   006530  0101               	movlb	1	; () banked
 39073   006532  8DE3               	bsf	addEvent@f& (0+255),6,b
 39074   006534                     u19516:
 39075                           
 39076                           ; BSR set to: 1
 39077                           ;../../VLCBlib_PIC/event_teach_large.c: 966:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0, f.asByte);
 39078   006534  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39079   006536  6FDE               	movwf	??_addEvent& (0+255),b
 39080   006538  6BDF               	clrf	(??_addEvent+1)& (0+255),b
 39081   00653A  3BDE               	swapf	??_addEvent& (0+255),f,b
 39082   00653C  3BDF               	swapf	(??_addEvent+1)& (0+255),f,b
 39083   00653E  0EF0               	movlw	240
 39084   006540  17DF               	andwf	(??_addEvent+1)& (0+255),f,b
 39085   006542  51DE               	movf	??_addEvent& (0+255),w,b
 39086   006544  0B0F               	andlw	15
 39087   006546  13DF               	iorwf	(??_addEvent+1)& (0+255),f,b
 39088   006548  0EF0               	movlw	240
 39089   00654A  17DE               	andwf	??_addEvent& (0+255),f,b
 39090   00654C  0E80               	movlw	128
 39091   00654E  25DE               	addwf	??_addEvent& (0+255),w,b
 39092   006550  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39093   006552  0EEF               	movlw	239
 39094   006554  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39095   006556  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39096   006558  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39097   00655C  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39098   006560  0100               	movlb	0	; () banked
 39099   006562  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39100   006564  C1E3  F0A7         	movff	addEvent@f,writeNVM@value
 39101   006568  0E01               	movlw	1
 39102   00656A  EC60  F05C         	call	_writeNVM
 39103                           
 39104                           ;../../VLCBlib_PIC/event_teach_large.c: 968:                 for (e = 0; e < 10; e++) {
 39105   00656E  0E00               	movlw	0
 39106   006570  0101               	movlb	1	; () banked
 39107   006572  6FE4               	movwf	addEvent@e& (0+255),b
 39108   006574                     l19654:
 39109                           
 39110                           ; BSR set to: 1
 39111                           ;../../VLCBlib_PIC/event_teach_large.c: 969:                     writeNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +e, 0);
 39112   006574  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39113   006576  0D10               	mullw	16
 39114   006578  CFF3 F1DE          	movff	prodl,??_addEvent
 39115   00657C  CFF4 F1DF          	movff	prodh,??_addEvent+1
 39116   006580  51E4               	movf	addEvent@e& (0+255),w,b
 39117   006582  27DE               	addwf	??_addEvent& (0+255),f,b
 39118   006584  0E00               	movlw	0
 39119   006586  23DF               	addwfc	(??_addEvent+1)& (0+255),f,b
 39120   006588  0E86               	movlw	134
 39121   00658A  25DE               	addwf	??_addEvent& (0+255),w,b
 39122   00658C  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39123   00658E  0EEF               	movlw	239
 39124   006590  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39125   006592  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39126   006594  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39127   006598  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39128   00659C  0100               	movlb	0	; () banked
 39129   00659E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39130   0065A0  0E00               	movlw	0
 39131   0065A2  6FA7               	movwf	writeNVM@value& (0+255),b
 39132   0065A4  0E01               	movlw	1
 39133   0065A6  EC60  F05C         	call	_writeNVM
 39134                           
 39135                           ;../../VLCBlib_PIC/event_teach_large.c: 970:                 }
 39136   0065AA  0101               	movlb	1	; () banked
 39137   0065AC  2BE4               	incf	addEvent@e& (0+255),f,b
 39138                           
 39139                           ; BSR set to: 1
 39140   0065AE  0E09               	movlw	9
 39141   0065B0  65E4               	cpfsgt	addEvent@e& (0+255),b
 39142   0065B2  D7E0               	goto	l19654
 39143                           
 39144                           ; BSR set to: 1
 39145                           ;../../VLCBlib_PIC/event_teach_large.c: 971:                 error = 0;
 39146   0065B4  0E00               	movlw	0
 39147   0065B6  6FE2               	movwf	addEvent@error& (0+255),b
 39148                           
 39149                           ;../../VLCBlib_PIC/event_teach_large.c: 972:                 break;
 39150   0065B8  D004               	goto	u19530
 39151   0065BA                     l19662:
 39152                           
 39153                           ; BSR set to: 1
 39154                           ;../../VLCBlib_PIC/event_teach_large.c: 974:         }
 39155   0065BA  2BE5               	incf	addEvent@tableIndex& (0+255),f,b
 39156                           
 39157                           ; BSR set to: 1
 39158   0065BC  29E5               	incf	addEvent@tableIndex& (0+255),w,b
 39159   0065BE  A4D8               	btfss	status,2,c
 39160   0065C0  D72C               	goto	l19636
 39161   0065C2                     u19530:
 39162                           
 39163                           ; BSR set to: 1
 39164                           ;../../VLCBlib_PIC/event_teach_large.c: 975:         if (error) {
 39165   0065C2  51E2               	movf	addEvent@error& (0+255),w,b
 39166   0065C4  B4D8               	btfsc	status,2,c
 39167   0065C6  D002               	goto	l19672
 39168                           
 39169                           ; BSR set to: 1
 39170                           ;../../VLCBlib_PIC/event_teach_large.c: 976:             return CMDERR_TOO_MANY_EVENTS;
 39171   0065C8  0E04               	movlw	4
 39172   0065CA  0012               	return	
 39173   0065CC                     l19672:
 39174                           
 39175                           ; BSR set to: 1
 39176                           ;../../VLCBlib_PIC/event_teach_large.c: 980:     if (writeEv(tableIndex, evNum, evVal)) 
      +                          {
 39177   0065CC  C1DB  F1CB         	movff	addEvent@evNum,writeEv@evNum
 39178   0065D0  C1DC  F1CC         	movff	addEvent@evVal,writeEv@evVal
 39179   0065D4  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39180   0065D6  ECF7  F018         	call	_writeEv
 39181   0065DA  0900               	iorlw	0
 39182   0065DC  B4D8               	btfsc	status,2,c
 39183   0065DE  D002               	goto	l19678
 39184                           
 39185                           ;../../VLCBlib_PIC/event_teach_large.c: 982:         return CMDERR_INV_EV_IDX;
 39186   0065E0  0E06               	movlw	6
 39187   0065E2  0012               	return	
 39188   0065E4                     l19678:
 39189                           
 39190                           ;../../VLCBlib_PIC/event_teach_large.c: 985:     flushFlashBlock();
 39191   0065E4  EC5F  F053         	call	_flushFlashBlock	;wreg free
 39192                           
 39193                           ;../../VLCBlib_PIC/event_teach_large.c: 987:     rebuildHashtable();
 39194   0065E8  EC93  F03E         	call	_rebuildHashtable	;wreg free
 39195   0065EC  D710               	goto	u19490
 39196   0065EE                     __end_of_addEvent:
 39197                           	callstack 0
 39198                           
 39199 ;; *************** function _writeEv *****************
 39200 ;; Defined at:
 39201 ;;		line 1039 in file "../../VLCBlib_PIC/event_teach_large.c"
 39202 ;; Parameters:    Size  Location     Type
 39203 ;;  tableIndex      1    wreg     unsigned char 
 39204 ;;  evNum           1   17[BANK1 ] unsigned char 
 39205 ;;  evVal           1   18[BANK1 ] unsigned char 
 39206 ;; Auto vars:     Size  Location     Type
 39207 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 39208 ;;  e               1   25[BANK1 ] unsigned char 
 39209 ;;  nextF           1   24[BANK1 ] struct .
 39210 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 39211 ;;  f               1   26[BANK1 ] struct .
 39212 ;;  startIndex      1   23[BANK1 ] unsigned char 
 39213 ;; Return value:  Size  Location     Type
 39214 ;;                  1    wreg      unsigned char 
 39215 ;; Registers used:
 39216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39217 ;; Tracked objects:
 39218 ;;		On entry : 0/0
 39219 ;;		On exit  : 0/0
 39220 ;;		Unchanged: 0/0
 39221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39222 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39223 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39224 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39225 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39226 ;;Total ram usage:       12 bytes
 39227 ;; Hardware stack levels used: 1
 39228 ;; Hardware stack levels required when called: 20
 39229 ;; This function calls:
 39230 ;;		_checkRemoveTableEntry
 39231 ;;		_readNVM
 39232 ;;		_writeNVM
 39233 ;; This function is called by:
 39234 ;;		_deleteActionRange
 39235 ;;		_APP_addEvent
 39236 ;;		_addEvent
 39237 ;;		_deleteHappeningRange
 39238 ;; This function uses a non-reentrant model
 39239 ;;
 39240                           
 39241                           	psect	text169
 39242   0031EE                     __ptext169:
 39243                           	callstack 0
 39244   0031EE                     _writeEv:
 39245                           	callstack 6
 39246                           
 39247                           ;incstack = 0
 39248                           ;writeEv@tableIndex stored from wreg
 39249   0031EE  0101               	movlb	1	; () banked
 39250   0031F0  6FD5               	movwf	writeEv@tableIndex& (0+255),b
 39251                           
 39252                           ;../../VLCBlib_PIC/event_teach_large.c: 1040:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1041:     uint8_t startIndex = tableIndex;
 39253   0031F2  C1D5  F1D1         	movff	writeEv@tableIndex,writeEv@startIndex
 39254                           
 39255                           ;../../VLCBlib_PIC/event_teach_large.c: 1042:     if (evNum >= 20) {
 39256   0031F6  0E13               	movlw	19
 39257   0031F8  0101               	movlb	1	; () banked
 39258   0031FA  65CB               	cpfsgt	writeEv@evNum& (0+255),b
 39259   0031FC  D14F               	goto	l19314
 39260                           
 39261                           ; BSR set to: 1
 39262                           ;../../VLCBlib_PIC/event_teach_large.c: 1043:         return CMDERR_INV_EV_IDX;
 39263   0031FE  0E06               	movlw	6
 39264   003200  0012               	return	
 39265   003202                     l19252:
 39266                           
 39267                           ; BSR set to: 1
 39268                           ;../../VLCBlib_PIC/event_teach_large.c: 1046:         uint8_t nextIdx;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1049:         evNum -= 10;
 39269   003202  0E0A               	movlw	10
 39270   003204  5FCB               	subwf	writeEv@evNum& (0+255),f,b
 39271                           
 39272                           ; BSR set to: 1
 39273                           ;../../VLCBlib_PIC/event_teach_large.c: 1050:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39274   003206  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39275   003208  6FCD               	movwf	??_writeEv& (0+255),b
 39276   00320A  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39277   00320C  3BCD               	swapf	??_writeEv& (0+255),f,b
 39278   00320E  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39279   003210  0EF0               	movlw	240
 39280   003212  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39281   003214  51CD               	movf	??_writeEv& (0+255),w,b
 39282   003216  0B0F               	andlw	15
 39283   003218  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39284   00321A  0EF0               	movlw	240
 39285   00321C  17CD               	andwf	??_writeEv& (0+255),f,b
 39286   00321E  0E80               	movlw	128
 39287   003220  25CD               	addwf	??_writeEv& (0+255),w,b
 39288   003222  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39289   003224  0EEF               	movlw	239
 39290   003226  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39291   003228  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39292   00322A  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39293   00322E  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39294   003232  0100               	movlb	0	; () banked
 39295   003234  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39296   003236  0E01               	movlw	1
 39297   003238  ECD0  F059         	call	_readNVM
 39298   00323C  0100               	movlb	0	; () banked
 39299   00323E  5191               	movf	?_readNVM& (0+255),w,b
 39300   003240  0101               	movlb	1	; () banked
 39301   003242  6FD4               	movwf	writeEv@f& (0+255),b
 39302                           
 39303                           ; BSR set to: 1
 39304                           ;../../VLCBlib_PIC/event_teach_large.c: 1052:         if (f.continued) {
 39305   003244  A9D4               	btfss	writeEv@f& (0+255),4,b
 39306   003246  D01E               	goto	l19266
 39307                           
 39308                           ; BSR set to: 1
 39309                           ;../../VLCBlib_PIC/event_teach_large.c: 1053:             tableIndex = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39310   003248  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39311   00324A  0D10               	mullw	16
 39312   00324C  CFF3 F1CD          	movff	prodl,??_writeEv
 39313   003250  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39314   003254  0E81               	movlw	129
 39315   003256  25CD               	addwf	??_writeEv& (0+255),w,b
 39316   003258  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39317   00325A  0EEF               	movlw	239
 39318   00325C  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39319   00325E  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39320   003260  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39321   003264  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39322   003268  0100               	movlb	0	; () banked
 39323   00326A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39324   00326C  0E01               	movlw	1
 39325   00326E  ECD0  F059         	call	_readNVM
 39326   003272  0100               	movlb	0	; () banked
 39327   003274  5191               	movf	?_readNVM& (0+255),w,b
 39328   003276  0101               	movlb	1	; () banked
 39329   003278  6FD5               	movwf	writeEv@tableIndex& (0+255),b
 39330                           
 39331                           ; BSR set to: 1
 39332                           ;../../VLCBlib_PIC/event_teach_large.c: 1054:             if (tableIndex == 0xff) {
 39333   00327A  29D5               	incf	writeEv@tableIndex& (0+255),w,b
 39334   00327C  A4D8               	btfss	status,2,c
 39335   00327E  D10E               	goto	l19314
 39336                           
 39337                           ; BSR set to: 1
 39338                           ;../../VLCBlib_PIC/event_teach_large.c: 1055:                 return CMDERR_INVALID_EVEN
      +                          T;
 39339   003280  0E07               	movlw	7
 39340   003282  0012               	return	
 39341   003284                     l19266:
 39342                           
 39343                           ; BSR set to: 1
 39344                           ;../../VLCBlib_PIC/event_teach_large.c: 1064:             if (evVal == 0) {
 39345   003284  51CC               	movf	writeEv@evVal& (0+255),w,b
 39346   003286  A4D8               	btfss	status,2,c
 39347   003288  D002               	goto	l19272
 39348   00328A                     u18940:
 39349                           
 39350                           ;../../VLCBlib_PIC/event_teach_large.c: 1065:                 return 0;
 39351   00328A  0E00               	movlw	0
 39352   00328C  0012               	return	
 39353   00328E                     l19272:
 39354                           
 39355                           ; BSR set to: 1
 39356                           ;../../VLCBlib_PIC/event_teach_large.c: 1068:             for (nextIdx = tableIndex+1 ; 
      +                          nextIdx < 255; nextIdx++) {
 39357   00328E  29D5               	incf	writeEv@tableIndex& (0+255),w,b
 39358   003290  6FD6               	movwf	writeEv@nextIdx& (0+255),b
 39359   003292  D0FB               	goto	l19306
 39360   003294                     l19276:
 39361                           
 39362                           ; BSR set to: 1
 39363                           ;../../VLCBlib_PIC/event_teach_large.c: 1069:                 EventTableFlags nextF;;../
      +                          ../VLCBlib_PIC/event_teach_large.c: 1070:                 nextF.asByte = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+0);
 39364   003294  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39365   003296  6FCD               	movwf	??_writeEv& (0+255),b
 39366   003298  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39367   00329A  3BCD               	swapf	??_writeEv& (0+255),f,b
 39368   00329C  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39369   00329E  0EF0               	movlw	240
 39370   0032A0  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39371   0032A2  51CD               	movf	??_writeEv& (0+255),w,b
 39372   0032A4  0B0F               	andlw	15
 39373   0032A6  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39374   0032A8  0EF0               	movlw	240
 39375   0032AA  17CD               	andwf	??_writeEv& (0+255),f,b
 39376   0032AC  0E80               	movlw	128
 39377   0032AE  25CD               	addwf	??_writeEv& (0+255),w,b
 39378   0032B0  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39379   0032B2  0EEF               	movlw	239
 39380   0032B4  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39381   0032B6  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39382   0032B8  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39383   0032BC  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39384   0032C0  0100               	movlb	0	; () banked
 39385   0032C2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39386   0032C4  0E01               	movlw	1
 39387   0032C6  ECD0  F059         	call	_readNVM
 39388   0032CA  0100               	movlb	0	; () banked
 39389   0032CC  5191               	movf	?_readNVM& (0+255),w,b
 39390   0032CE  0101               	movlb	1	; () banked
 39391   0032D0  6FD2               	movwf	writeEv@nextF& (0+255),b
 39392                           
 39393                           ; BSR set to: 1
 39394                           ;../../VLCBlib_PIC/event_teach_large.c: 1071:                 if (nextF.freeEntry) {
 39395   0032D2  AFD2               	btfss	writeEv@nextF& (0+255),7,b
 39396   0032D4  D0D9               	goto	l19304
 39397                           
 39398                           ; BSR set to: 1
 39399                           ;../../VLCBlib_PIC/event_teach_large.c: 1072:                     uint8_t e;;../../VLCBl
      +                          ib_PIC/event_teach_large.c: 1074:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*nextIdx+2, 0xff);
 39400   0032D6  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39401   0032D8  0D10               	mullw	16
 39402   0032DA  CFF3 F1CD          	movff	prodl,??_writeEv
 39403   0032DE  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39404   0032E2  0E82               	movlw	130
 39405   0032E4  25CD               	addwf	??_writeEv& (0+255),w,b
 39406   0032E6  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39407   0032E8  0EEF               	movlw	239
 39408   0032EA  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39409   0032EC  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39410   0032EE  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39411   0032F2  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39412   0032F6  0100               	movlb	0	; () banked
 39413   0032F8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39414   0032FA  0EFF               	movlw	255
 39415   0032FC  6FA7               	movwf	writeNVM@value& (0+255),b
 39416   0032FE  0E01               	movlw	1
 39417   003300  EC60  F05C         	call	_writeNVM
 39418                           
 39419                           ;../../VLCBlib_PIC/event_teach_large.c: 1075:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+2 +1, 0xff);
 39420   003304  0101               	movlb	1	; () banked
 39421   003306  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39422   003308  0D10               	mullw	16
 39423   00330A  CFF3 F1CD          	movff	prodl,??_writeEv
 39424   00330E  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39425   003312  0E83               	movlw	131
 39426   003314  25CD               	addwf	??_writeEv& (0+255),w,b
 39427   003316  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39428   003318  0EEF               	movlw	239
 39429   00331A  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39430   00331C  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39431   00331E  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39432   003322  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39433   003326  0100               	movlb	0	; () banked
 39434   003328  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39435   00332A  0EFF               	movlw	255
 39436   00332C  6FA7               	movwf	writeNVM@value& (0+255),b
 39437   00332E  0E01               	movlw	1
 39438   003330  EC60  F05C         	call	_writeNVM
 39439                           
 39440                           ;../../VLCBlib_PIC/event_teach_large.c: 1076:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4, 0xff);
 39441   003334  0101               	movlb	1	; () banked
 39442   003336  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39443   003338  0D10               	mullw	16
 39444   00333A  CFF3 F1CD          	movff	prodl,??_writeEv
 39445   00333E  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39446   003342  0E84               	movlw	132
 39447   003344  25CD               	addwf	??_writeEv& (0+255),w,b
 39448   003346  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39449   003348  0EEF               	movlw	239
 39450   00334A  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39451   00334C  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39452   00334E  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39453   003352  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39454   003356  0100               	movlb	0	; () banked
 39455   003358  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39456   00335A  0EFF               	movlw	255
 39457   00335C  6FA7               	movwf	writeNVM@value& (0+255),b
 39458   00335E  0E01               	movlw	1
 39459   003360  EC60  F05C         	call	_writeNVM
 39460                           
 39461                           ;../../VLCBlib_PIC/event_teach_large.c: 1077:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4 +1, 0xff);
 39462   003364  0101               	movlb	1	; () banked
 39463   003366  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39464   003368  0D10               	mullw	16
 39465   00336A  CFF3 F1CD          	movff	prodl,??_writeEv
 39466   00336E  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39467   003372  0E85               	movlw	133
 39468   003374  25CD               	addwf	??_writeEv& (0+255),w,b
 39469   003376  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39470   003378  0EEF               	movlw	239
 39471   00337A  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39472   00337C  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39473   00337E  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39474   003382  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39475   003386  0100               	movlb	0	; () banked
 39476   003388  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39477   00338A  0EFF               	movlw	255
 39478   00338C  6FA7               	movwf	writeNVM@value& (0+255),b
 39479   00338E  0E01               	movlw	1
 39480   003390  EC60  F05C         	call	_writeNVM
 39481                           
 39482                           ;../../VLCBlib_PIC/event_teach_large.c: 1078:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+0, 0x20);
 39483   003394  0101               	movlb	1	; () banked
 39484   003396  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39485   003398  6FCD               	movwf	??_writeEv& (0+255),b
 39486   00339A  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39487   00339C  3BCD               	swapf	??_writeEv& (0+255),f,b
 39488   00339E  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39489   0033A0  0EF0               	movlw	240
 39490   0033A2  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39491   0033A4  51CD               	movf	??_writeEv& (0+255),w,b
 39492   0033A6  0B0F               	andlw	15
 39493   0033A8  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39494   0033AA  0EF0               	movlw	240
 39495   0033AC  17CD               	andwf	??_writeEv& (0+255),f,b
 39496   0033AE  0E80               	movlw	128
 39497   0033B0  25CD               	addwf	??_writeEv& (0+255),w,b
 39498   0033B2  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39499   0033B4  0EEF               	movlw	239
 39500   0033B6  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39501   0033B8  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39502   0033BA  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39503   0033BE  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39504   0033C2  0100               	movlb	0	; () banked
 39505   0033C4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39506   0033C6  0E20               	movlw	32
 39507   0033C8  6FA7               	movwf	writeNVM@value& (0+255),b
 39508   0033CA  0E01               	movlw	1
 39509   0033CC  EC60  F05C         	call	_writeNVM
 39510                           
 39511                           ;../../VLCBlib_PIC/event_teach_large.c: 1079:                     for (e = 0; e < 10; e+
      +                          +) {
 39512   0033D0  0E00               	movlw	0
 39513   0033D2  0101               	movlb	1	; () banked
 39514   0033D4  6FD3               	movwf	writeEv@e& (0+255),b
 39515   0033D6                     l19290:
 39516                           
 39517                           ; BSR set to: 1
 39518                           ;../../VLCBlib_PIC/event_teach_large.c: 1080:                         writeNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*nextIdx+6 +e, 0);
 39519   0033D6  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39520   0033D8  0D10               	mullw	16
 39521   0033DA  CFF3 F1CD          	movff	prodl,??_writeEv
 39522   0033DE  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39523   0033E2  51D3               	movf	writeEv@e& (0+255),w,b
 39524   0033E4  27CD               	addwf	??_writeEv& (0+255),f,b
 39525   0033E6  0E00               	movlw	0
 39526   0033E8  23CE               	addwfc	(??_writeEv+1)& (0+255),f,b
 39527   0033EA  0E86               	movlw	134
 39528   0033EC  25CD               	addwf	??_writeEv& (0+255),w,b
 39529   0033EE  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39530   0033F0  0EEF               	movlw	239
 39531   0033F2  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39532   0033F4  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39533   0033F6  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39534   0033FA  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39535   0033FE  0100               	movlb	0	; () banked
 39536   003400  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39537   003402  0E00               	movlw	0
 39538   003404  6FA7               	movwf	writeNVM@value& (0+255),b
 39539   003406  0E01               	movlw	1
 39540   003408  EC60  F05C         	call	_writeNVM
 39541                           
 39542                           ;../../VLCBlib_PIC/event_teach_large.c: 1081:                     }
 39543   00340C  0101               	movlb	1	; () banked
 39544   00340E  2BD3               	incf	writeEv@e& (0+255),f,b
 39545                           
 39546                           ; BSR set to: 1
 39547   003410  0E09               	movlw	9
 39548   003412  65D3               	cpfsgt	writeEv@e& (0+255),b
 39549   003414  D7E0               	goto	l19290
 39550                           
 39551                           ; BSR set to: 1
 39552                           ;../../VLCBlib_PIC/event_teach_large.c: 1083:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+1, nextIdx);
 39553   003416  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39554   003418  0D10               	mullw	16
 39555   00341A  CFF3 F1CD          	movff	prodl,??_writeEv
 39556   00341E  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39557   003422  0E81               	movlw	129
 39558   003424  25CD               	addwf	??_writeEv& (0+255),w,b
 39559   003426  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39560   003428  0EEF               	movlw	239
 39561   00342A  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39562   00342C  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39563   00342E  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39564   003432  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39565   003436  0100               	movlb	0	; () banked
 39566   003438  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39567   00343A  C1D6  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 39568   00343E  0E01               	movlw	1
 39569   003440  EC60  F05C         	call	_writeNVM
 39570                           
 39571                           ;../../VLCBlib_PIC/event_teach_large.c: 1085:                     f.continued = 1;
 39572   003444  0101               	movlb	1	; () banked
 39573   003446  89D4               	bsf	writeEv@f& (0+255),4,b
 39574                           
 39575                           ; BSR set to: 1
 39576                           ;../../VLCBlib_PIC/event_teach_large.c: 1086:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0, f.asByte);
 39577   003448  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39578   00344A  6FCD               	movwf	??_writeEv& (0+255),b
 39579   00344C  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39580   00344E  3BCD               	swapf	??_writeEv& (0+255),f,b
 39581   003450  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39582   003452  0EF0               	movlw	240
 39583   003454  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39584   003456  51CD               	movf	??_writeEv& (0+255),w,b
 39585   003458  0B0F               	andlw	15
 39586   00345A  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39587   00345C  0EF0               	movlw	240
 39588   00345E  17CD               	andwf	??_writeEv& (0+255),f,b
 39589   003460  0E80               	movlw	128
 39590   003462  25CD               	addwf	??_writeEv& (0+255),w,b
 39591   003464  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39592   003466  0EEF               	movlw	239
 39593   003468  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39594   00346A  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39595   00346C  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39596   003470  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39597   003474  0100               	movlb	0	; () banked
 39598   003476  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39599   003478  C1D4  F0A7         	movff	writeEv@f,writeNVM@value
 39600   00347C  0E01               	movlw	1
 39601   00347E  EC60  F05C         	call	_writeNVM
 39602                           
 39603                           ;../../VLCBlib_PIC/event_teach_large.c: 1087:                     tableIndex = nextIdx;
 39604   003482  C1D6  F1D5         	movff	writeEv@nextIdx,writeEv@tableIndex
 39605                           
 39606                           ;../../VLCBlib_PIC/event_teach_large.c: 1088:                     break;
 39607   003486  D004               	goto	u18980
 39608   003488                     l19304:
 39609                           
 39610                           ; BSR set to: 1
 39611                           ;../../VLCBlib_PIC/event_teach_large.c: 1090:             }
 39612   003488  2BD6               	incf	writeEv@nextIdx& (0+255),f,b
 39613   00348A                     l19306:
 39614                           
 39615                           ; BSR set to: 1
 39616   00348A  29D6               	incf	writeEv@nextIdx& (0+255),w,b
 39617   00348C  A4D8               	btfss	status,2,c
 39618   00348E  D702               	goto	l19276
 39619   003490                     u18980:
 39620                           
 39621                           ;../../VLCBlib_PIC/event_teach_large.c: 1091:             if (nextIdx >= 255) {
 39622   003490  0101               	movlb	1	; () banked
 39623   003492  29D6               	incf	writeEv@nextIdx& (0+255),w,b
 39624   003494  A4D8               	btfss	status,2,c
 39625   003496  D002               	goto	l19314
 39626                           
 39627                           ; BSR set to: 1
 39628                           ;../../VLCBlib_PIC/event_teach_large.c: 1093:                 return CMDERR_TOO_MANY_EVE
      +                          NTS;
 39629   003498  0E04               	movlw	4
 39630   00349A  0012               	return	
 39631   00349C                     l19314:
 39632                           
 39633                           ; BSR set to: 1
 39634                           ;../../VLCBlib_PIC/event_teach_large.c: 1045:     while (evNum >= 10) {
 39635   00349C  0E0A               	movlw	10
 39636   00349E  61CB               	cpfslt	writeEv@evNum& (0+255),b
 39637   0034A0  D6B0               	goto	l19252
 39638                           
 39639                           ; BSR set to: 1
 39640                           ;../../VLCBlib_PIC/event_teach_large.c: 1098:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*t
      +                          ableIndex+6 +evNum, evVal);
 39641   0034A2  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39642   0034A4  0D10               	mullw	16
 39643   0034A6  CFF3 F1CD          	movff	prodl,??_writeEv
 39644   0034AA  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39645   0034AE  51CB               	movf	writeEv@evNum& (0+255),w,b
 39646   0034B0  27CD               	addwf	??_writeEv& (0+255),f,b
 39647   0034B2  0E00               	movlw	0
 39648   0034B4  23CE               	addwfc	(??_writeEv+1)& (0+255),f,b
 39649   0034B6  0E86               	movlw	134
 39650   0034B8  25CD               	addwf	??_writeEv& (0+255),w,b
 39651   0034BA  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39652   0034BC  0EEF               	movlw	239
 39653   0034BE  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39654   0034C0  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39655   0034C2  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39656   0034C6  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39657   0034CA  0100               	movlb	0	; () banked
 39658   0034CC  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39659   0034CE  C1CC  F0A7         	movff	writeEv@evVal,writeNVM@value
 39660   0034D2  0E01               	movlw	1
 39661   0034D4  EC60  F05C         	call	_writeNVM
 39662                           
 39663                           ;../../VLCBlib_PIC/event_teach_large.c: 1100:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 39664   0034D8  0101               	movlb	1	; () banked
 39665   0034DA  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39666   0034DC  6FCD               	movwf	??_writeEv& (0+255),b
 39667   0034DE  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39668   0034E0  3BCD               	swapf	??_writeEv& (0+255),f,b
 39669   0034E2  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39670   0034E4  0EF0               	movlw	240
 39671   0034E6  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39672   0034E8  51CD               	movf	??_writeEv& (0+255),w,b
 39673   0034EA  0B0F               	andlw	15
 39674   0034EC  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39675   0034EE  0EF0               	movlw	240
 39676   0034F0  17CD               	andwf	??_writeEv& (0+255),f,b
 39677   0034F2  0E80               	movlw	128
 39678   0034F4  25CD               	addwf	??_writeEv& (0+255),w,b
 39679   0034F6  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39680   0034F8  0EEF               	movlw	239
 39681   0034FA  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39682   0034FC  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39683   0034FE  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39684   003502  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39685   003506  0100               	movlb	0	; () banked
 39686   003508  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39687   00350A  0E01               	movlw	1
 39688   00350C  ECD0  F059         	call	_readNVM
 39689   003510  0100               	movlb	0	; () banked
 39690   003512  5191               	movf	?_readNVM& (0+255),w,b
 39691   003514  0101               	movlb	1	; () banked
 39692   003516  6FD4               	movwf	writeEv@f& (0+255),b
 39693                           
 39694                           ; BSR set to: 1
 39695                           ;../../VLCBlib_PIC/event_teach_large.c: 1101:     if (f.eVsUsed <= evNum) {
 39696   003518  51D4               	movf	writeEv@f& (0+255),w,b
 39697   00351A  0B0F               	andlw	15
 39698   00351C  6FCD               	movwf	??_writeEv& (0+255),b
 39699   00351E  51CD               	movf	??_writeEv& (0+255),w,b
 39700   003520  5DCB               	subwf	writeEv@evNum& (0+255),w,b
 39701   003522  A0D8               	btfss	status,0,c
 39702   003524  D026               	goto	l19326
 39703                           
 39704                           ; BSR set to: 1
 39705                           ;../../VLCBlib_PIC/event_teach_large.c: 1102:         f.eVsUsed = evNum+1U;
 39706   003526  C1CB  F1CD         	movff	writeEv@evNum,??_writeEv
 39707   00352A  0E01               	movlw	1
 39708   00352C  27CD               	addwf	??_writeEv& (0+255),f,b
 39709   00352E  51D4               	movf	writeEv@f& (0+255),w,b
 39710   003530  19CD               	xorwf	??_writeEv& (0+255),w,b
 39711   003532  0BF0               	andlw	-16
 39712   003534  19CD               	xorwf	??_writeEv& (0+255),w,b
 39713   003536  6FD4               	movwf	writeEv@f& (0+255),b
 39714                           
 39715                           ; BSR set to: 1
 39716                           ;../../VLCBlib_PIC/event_teach_large.c: 1103:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*tableIndex+0, f.asByte);
 39717   003538  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39718   00353A  6FCD               	movwf	??_writeEv& (0+255),b
 39719   00353C  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39720   00353E  3BCD               	swapf	??_writeEv& (0+255),f,b
 39721   003540  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39722   003542  0EF0               	movlw	240
 39723   003544  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39724   003546  51CD               	movf	??_writeEv& (0+255),w,b
 39725   003548  0B0F               	andlw	15
 39726   00354A  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39727   00354C  0EF0               	movlw	240
 39728   00354E  17CD               	andwf	??_writeEv& (0+255),f,b
 39729   003550  0E80               	movlw	128
 39730   003552  25CD               	addwf	??_writeEv& (0+255),w,b
 39731   003554  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39732   003556  0EEF               	movlw	239
 39733   003558  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39734   00355A  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39735   00355C  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39736   003560  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39737   003564  0100               	movlb	0	; () banked
 39738   003566  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39739   003568  C1D4  F0A7         	movff	writeEv@f,writeNVM@value
 39740   00356C  0E01               	movlw	1
 39741   00356E  EC60  F05C         	call	_writeNVM
 39742   003572                     l19326:
 39743                           
 39744                           ;../../VLCBlib_PIC/event_teach_large.c: 1106:     if (evVal == 0) {
 39745   003572  0101               	movlb	1	; () banked
 39746   003574  51CC               	movf	writeEv@evVal& (0+255),w,b
 39747   003576  A4D8               	btfss	status,2,c
 39748   003578  D688               	goto	u18940
 39749                           
 39750                           ; BSR set to: 1
 39751                           ;../../VLCBlib_PIC/event_teach_large.c: 1107:         checkRemoveTableEntry(startIndex);
 39752   00357A  51D1               	movf	writeEv@startIndex& (0+255),w,b
 39753   00357C  EC8A  F05D         	call	_checkRemoveTableEntry
 39754   003580  D684               	goto	u18940
 39755   003582                     __end_of_writeEv:
 39756                           	callstack 0
 39757                           
 39758 ;; *************** function _checkRemoveTableEntry *****************
 39759 ;; Defined at:
 39760 ;;		line 908 in file "../../VLCBlib_PIC/event_teach_large.c"
 39761 ;; Parameters:    Size  Location     Type
 39762 ;;  tableIndex      1    wreg     unsigned char 
 39763 ;; Auto vars:     Size  Location     Type
 39764 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 39765 ;;  e               1   16[BANK1 ] unsigned char 
 39766 ;; Return value:  Size  Location     Type
 39767 ;;                  1    wreg      void 
 39768 ;; Registers used:
 39769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39770 ;; Tracked objects:
 39771 ;;		On entry : 0/0
 39772 ;;		On exit  : 0/0
 39773 ;;		Unchanged: 0/0
 39774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39776 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39778 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39779 ;;Total ram usage:        2 bytes
 39780 ;; Hardware stack levels used: 1
 39781 ;; Hardware stack levels required when called: 19
 39782 ;; This function calls:
 39783 ;;		_getEVs
 39784 ;;		_removeTableEntry
 39785 ;;		_validStart
 39786 ;; This function is called by:
 39787 ;;		_deleteActionRange
 39788 ;;		_APP_addEvent
 39789 ;;		_writeEv
 39790 ;;		_deleteHappeningRange
 39791 ;; This function uses a non-reentrant model
 39792 ;;
 39793                           
 39794                           	psect	text170
 39795   00BB14                     __ptext170:
 39796                           	callstack 0
 39797   00BB14                     _checkRemoveTableEntry:
 39798                           	callstack 6
 39799                           
 39800                           ;incstack = 0
 39801                           ;checkRemoveTableEntry@tableIndex stored from wreg
 39802   00BB14  0101               	movlb	1	; () banked
 39803   00BB16  6FC9               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 39804                           
 39805                           ;../../VLCBlib_PIC/event_teach_large.c: 909:     uint8_t e;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 911:     if ( validStart(tableIndex)) {
 39806   00BB18  0101               	movlb	1	; () banked
 39807   00BB1A  51C9               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39808   00BB1C  EC39  F05C         	call	_validStart
 39809   00BB20  0900               	iorlw	0
 39810   00BB22  B4D8               	btfsc	status,2,c
 39811   00BB24  0012               	return	
 39812                           
 39813                           ;../../VLCBlib_PIC/event_teach_large.c: 912:         if (getEVs(tableIndex)) {
 39814   00BB26  0101               	movlb	1	; () banked
 39815   00BB28  51C9               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39816   00BB2A  EC3A  F041         	call	_getEVs
 39817   00BB2E  0900               	iorlw	0
 39818   00BB30  A4D8               	btfss	status,2,c
 39819   00BB32  0012               	return	
 39820                           
 39821                           ;../../VLCBlib_PIC/event_teach_large.c: 915:         for (e=0; e<20; e++) {
 39822   00BB34  0E00               	movlw	0
 39823   00BB36  0101               	movlb	1	; () banked
 39824   00BB38  6FCA               	movwf	checkRemoveTableEntry@e& (0+255),b
 39825   00BB3A                     l19164:
 39826                           
 39827                           ; BSR set to: 1
 39828                           ;../../VLCBlib_PIC/event_teach_large.c: 916:             if (evs[e] != 0) {
 39829   00BB3A  0E20               	movlw	low _evs
 39830   00BB3C  25CA               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 39831   00BB3E  6ED9               	movwf	fsr2l,c
 39832   00BB40  6ADA               	clrf	fsr2h,c
 39833   00BB42  0E02               	movlw	high _evs
 39834   00BB44  22DA               	addwfc	fsr2h,f,c
 39835   00BB46  50DF               	movf	indf2,w,c
 39836   00BB48  A4D8               	btfss	status,2,c
 39837   00BB4A  0012               	return	
 39838                           
 39839                           ; BSR set to: 1
 39840                           ;../../VLCBlib_PIC/event_teach_large.c: 919:         }
 39841   00BB4C  2BCA               	incf	checkRemoveTableEntry@e& (0+255),f,b
 39842                           
 39843                           ; BSR set to: 1
 39844   00BB4E  0E13               	movlw	19
 39845   00BB50  65CA               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 39846   00BB52  D7F3               	goto	l19164
 39847                           
 39848                           ; BSR set to: 1
 39849                           ;../../VLCBlib_PIC/event_teach_large.c: 920:         removeTableEntry(tableIndex);
 39850   00BB54  51C9               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39851   00BB56  ECB5  F03C         	call	_removeTableEntry
 39852   00BB5A  0012               	return		;funcret
 39853   00BB5C                     __end_of_checkRemoveTableEntry:
 39854                           	callstack 0
 39855                           
 39856 ;; *************** function _removeTableEntry *****************
 39857 ;; Defined at:
 39858 ;;		line 872 in file "../../VLCBlib_PIC/event_teach_large.c"
 39859 ;; Parameters:    Size  Location     Type
 39860 ;;  tableIndex      1    wreg     unsigned char 
 39861 ;; Auto vars:     Size  Location     Type
 39862 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 39863 ;;  f               1   13[BANK1 ] struct .
 39864 ;; Return value:  Size  Location     Type
 39865 ;;                  1    wreg      unsigned char 
 39866 ;; Registers used:
 39867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39868 ;; Tracked objects:
 39869 ;;		On entry : 0/0
 39870 ;;		On exit  : 0/0
 39871 ;;		Unchanged: 0/0
 39872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39874 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39875 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39876 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39877 ;;Total ram usage:        6 bytes
 39878 ;; Hardware stack levels used: 1
 39879 ;; Hardware stack levels required when called: 18
 39880 ;; This function calls:
 39881 ;;		_flushFlashBlock
 39882 ;;		_readNVM
 39883 ;;		_rebuildHashtable
 39884 ;;		_validStart
 39885 ;;		_writeNVM
 39886 ;; This function is called by:
 39887 ;;		_removeEvent
 39888 ;;		_checkRemoveTableEntry
 39889 ;; This function uses a non-reentrant model
 39890 ;;
 39891                           
 39892                           	psect	text171
 39893   00796A                     __ptext171:
 39894                           	callstack 0
 39895   00796A                     _removeTableEntry:
 39896                           	callstack 8
 39897                           
 39898                           ;incstack = 0
 39899                           ;removeTableEntry@tableIndex stored from wreg
 39900   00796A  0101               	movlb	1	; () banked
 39901   00796C  6FC8               	movwf	removeTableEntry@tableIndex& (0+255),b
 39902                           
 39903                           ;../../VLCBlib_PIC/event_teach_large.c: 873:     EventTableFlags f;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 878:     if (validStart(tableIndex)) {
 39904   00796E  0101               	movlb	1	; () banked
 39905   007970  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39906   007972  EC39  F05C         	call	_validStart
 39907   007976  0900               	iorlw	0
 39908   007978  B4D8               	btfsc	status,2,c
 39909   00797A  D09F               	goto	l19148
 39910                           
 39911                           ;../../VLCBlib_PIC/event_teach_large.c: 879:         f.asByte = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+0);
 39912   00797C  0101               	movlb	1	; () banked
 39913   00797E  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39914   007980  6FC3               	movwf	??_removeTableEntry& (0+255),b
 39915   007982  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 39916   007984  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 39917   007986  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39918   007988  0EF0               	movlw	240
 39919   00798A  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39920   00798C  51C3               	movf	??_removeTableEntry& (0+255),w,b
 39921   00798E  0B0F               	andlw	15
 39922   007990  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39923   007992  0EF0               	movlw	240
 39924   007994  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 39925   007996  0E80               	movlw	128
 39926   007998  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39927   00799A  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39928   00799C  0EEF               	movlw	239
 39929   00799E  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39930   0079A0  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39931   0079A2  C1C5  F091         	movff	??_removeTableEntry+2,readNVM@index
 39932   0079A6  C1C6  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39933   0079AA  0100               	movlb	0	; () banked
 39934   0079AC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39935   0079AE  0E01               	movlw	1
 39936   0079B0  ECD0  F059         	call	_readNVM
 39937   0079B4  0100               	movlb	0	; () banked
 39938   0079B6  5191               	movf	?_readNVM& (0+255),w,b
 39939   0079B8  0101               	movlb	1	; () banked
 39940   0079BA  6FC7               	movwf	removeTableEntry@f& (0+255),b
 39941                           
 39942                           ;../../VLCBlib_PIC/event_teach_large.c: 881:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex+0, 0xff);
 39943   0079BC  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39944   0079BE  6FC3               	movwf	??_removeTableEntry& (0+255),b
 39945   0079C0  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 39946   0079C2  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 39947   0079C4  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39948   0079C6  0EF0               	movlw	240
 39949   0079C8  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39950   0079CA  51C3               	movf	??_removeTableEntry& (0+255),w,b
 39951   0079CC  0B0F               	andlw	15
 39952   0079CE  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39953   0079D0  0EF0               	movlw	240
 39954   0079D2  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 39955   0079D4  0E80               	movlw	128
 39956   0079D6  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39957   0079D8  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39958   0079DA  0EEF               	movlw	239
 39959   0079DC  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39960   0079DE  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39961   0079E0  C1C5  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 39962   0079E4  C1C6  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 39963   0079E8  0100               	movlb	0	; () banked
 39964   0079EA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39965   0079EC  0EFF               	movlw	255
 39966   0079EE  6FA7               	movwf	writeNVM@value& (0+255),b
 39967   0079F0  0E01               	movlw	1
 39968   0079F2  EC60  F05C         	call	_writeNVM
 39969                           
 39970                           ;../../VLCBlib_PIC/event_teach_large.c: 883:         while (f.continued) {
 39971   0079F6  D05A               	goto	l19142
 39972   0079F8                     l19130:
 39973                           
 39974                           ; BSR set to: 1
 39975                           ;../../VLCBlib_PIC/event_teach_large.c: 884:             tableIndex = (uint8_t)readNVM(F
      +                          LASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39976   0079F8  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39977   0079FA  0D10               	mullw	16
 39978   0079FC  CFF3 F1C3          	movff	prodl,??_removeTableEntry
 39979   007A00  CFF4 F1C4          	movff	prodh,??_removeTableEntry+1
 39980   007A04  0E81               	movlw	129
 39981   007A06  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39982   007A08  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39983   007A0A  0EEF               	movlw	239
 39984   007A0C  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39985   007A0E  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39986   007A10  C1C5  F091         	movff	??_removeTableEntry+2,readNVM@index
 39987   007A14  C1C6  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39988   007A18  0100               	movlb	0	; () banked
 39989   007A1A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39990   007A1C  0E01               	movlw	1
 39991   007A1E  ECD0  F059         	call	_readNVM
 39992   007A22  0100               	movlb	0	; () banked
 39993   007A24  5191               	movf	?_readNVM& (0+255),w,b
 39994   007A26  0101               	movlb	1	; () banked
 39995   007A28  6FC8               	movwf	removeTableEntry@tableIndex& (0+255),b
 39996                           
 39997                           ; BSR set to: 1
 39998                           ;../../VLCBlib_PIC/event_teach_large.c: 885:             f.asByte = (uint8_t)readNVM(FLA
      +                          SH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39999   007A2A  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40000   007A2C  6FC3               	movwf	??_removeTableEntry& (0+255),b
 40001   007A2E  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 40002   007A30  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 40003   007A32  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40004   007A34  0EF0               	movlw	240
 40005   007A36  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40006   007A38  51C3               	movf	??_removeTableEntry& (0+255),w,b
 40007   007A3A  0B0F               	andlw	15
 40008   007A3C  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40009   007A3E  0EF0               	movlw	240
 40010   007A40  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 40011   007A42  0E80               	movlw	128
 40012   007A44  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 40013   007A46  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 40014   007A48  0EEF               	movlw	239
 40015   007A4A  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40016   007A4C  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 40017   007A4E  C1C5  F091         	movff	??_removeTableEntry+2,readNVM@index
 40018   007A52  C1C6  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40019   007A56  0100               	movlb	0	; () banked
 40020   007A58  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40021   007A5A  0E01               	movlw	1
 40022   007A5C  ECD0  F059         	call	_readNVM
 40023   007A60  0100               	movlb	0	; () banked
 40024   007A62  5191               	movf	?_readNVM& (0+255),w,b
 40025   007A64  0101               	movlb	1	; () banked
 40026   007A66  6FC7               	movwf	removeTableEntry@f& (0+255),b
 40027                           
 40028                           ; BSR set to: 1
 40029                           ;../../VLCBlib_PIC/event_teach_large.c: 887:             if (tableIndex >= 255) return C
      +                          MDERR_INV_EV_IDX;
 40030   007A68  29C8               	incf	removeTableEntry@tableIndex& (0+255),w,b
 40031   007A6A  A4D8               	btfss	status,2,c
 40032   007A6C  D002               	goto	l19140
 40033                           
 40034                           ; BSR set to: 1
 40035   007A6E  0E06               	movlw	6
 40036   007A70  0012               	return	
 40037   007A72                     l19140:
 40038                           
 40039                           ; BSR set to: 1
 40040                           ;../../VLCBlib_PIC/event_teach_large.c: 890:             writeNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+0, 0xff);
 40041   007A72  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40042   007A74  6FC3               	movwf	??_removeTableEntry& (0+255),b
 40043   007A76  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 40044   007A78  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 40045   007A7A  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40046   007A7C  0EF0               	movlw	240
 40047   007A7E  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40048   007A80  51C3               	movf	??_removeTableEntry& (0+255),w,b
 40049   007A82  0B0F               	andlw	15
 40050   007A84  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40051   007A86  0EF0               	movlw	240
 40052   007A88  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 40053   007A8A  0E80               	movlw	128
 40054   007A8C  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 40055   007A8E  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 40056   007A90  0EEF               	movlw	239
 40057   007A92  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40058   007A94  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 40059   007A96  C1C5  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 40060   007A9A  C1C6  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 40061   007A9E  0100               	movlb	0	; () banked
 40062   007AA0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40063   007AA2  0EFF               	movlw	255
 40064   007AA4  6FA7               	movwf	writeNVM@value& (0+255),b
 40065   007AA6  0E01               	movlw	1
 40066   007AA8  EC60  F05C         	call	_writeNVM
 40067   007AAC                     l19142:
 40068                           
 40069                           ;../../VLCBlib_PIC/event_teach_large.c: 883:         while (f.continued) {
 40070   007AAC  0101               	movlb	1	; () banked
 40071   007AAE  B9C7               	btfsc	removeTableEntry@f& (0+255),4,b
 40072   007AB0  D7A3               	goto	l19130
 40073                           
 40074                           ; BSR set to: 1
 40075                           ;../../VLCBlib_PIC/event_teach_large.c: 893:         flushFlashBlock();
 40076   007AB2  EC5F  F053         	call	_flushFlashBlock	;wreg free
 40077                           
 40078                           ;../../VLCBlib_PIC/event_teach_large.c: 896:         rebuildHashtable();
 40079   007AB6  EC93  F03E         	call	_rebuildHashtable	;wreg free
 40080   007ABA                     l19148:
 40081                           
 40082                           ;../../VLCBlib_PIC/event_teach_large.c: 899:     return 0;
 40083   007ABA  0E00               	movlw	0
 40084   007ABC  0012               	return		;funcret
 40085   007ABE                     __end_of_removeTableEntry:
 40086                           	callstack 0
 40087                           
 40088 ;; *************** function _rebuildHashtable *****************
 40089 ;; Defined at:
 40090 ;;		line 1328 in file "../../VLCBlib_PIC/event_teach_large.c"
 40091 ;; Parameters:    Size  Location     Type
 40092 ;;		None
 40093 ;; Auto vars:     Size  Location     Type
 40094 ;;  ev              2    3[BANK1 ] short 
 40095 ;;  a               2    0        int 
 40096 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 40097 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 40098 ;;  happening       1    6[BANK1 ] unsigned char 
 40099 ;;  hash            1    5[BANK1 ] unsigned char 
 40100 ;; Return value:  Size  Location     Type
 40101 ;;                  1    wreg      void 
 40102 ;; Registers used:
 40103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40104 ;; Tracked objects:
 40105 ;;		On entry : 0/0
 40106 ;;		On exit  : 0/0
 40107 ;;		Unchanged: 0/0
 40108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40110 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40111 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40112 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40113 ;;Total ram usage:        9 bytes
 40114 ;; Hardware stack levels used: 1
 40115 ;; Hardware stack levels required when called: 16
 40116 ;; This function calls:
 40117 ;;		_getEN
 40118 ;;		_getEv
 40119 ;;		_getHash
 40120 ;;		_getNN
 40121 ;;		_validStart
 40122 ;; This function is called by:
 40123 ;;		_deleteActionRange
 40124 ;;		_APP_addEvent
 40125 ;;		_mnsProcessMessage
 40126 ;;		_teachPowerUp
 40127 ;;		_clearAllEvents
 40128 ;;		_removeTableEntry
 40129 ;;		_addEvent
 40130 ;;		_deleteHappeningRange
 40131 ;; This function uses a non-reentrant model
 40132 ;;
 40133                           
 40134                           	psect	text172
 40135   007D26                     __ptext172:
 40136                           	callstack 0
 40137   007D26                     _rebuildHashtable:
 40138                           	callstack 12
 40139                           
 40140                           ;../../VLCBlib_PIC/event_teach_large.c: 1330:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1331:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_large.c: 1332: 
      +                              uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_large.c: 1333:     int a;;../../VL
      +                          CBlib_PIC/event_teach_large.c: 1336:     Happening happening;;../../VLCBlib_PIC/event_te
      +                          ach_large.c: 1337:     for (happening=0; happening<=(1+(7+16*4)-1); happening++) {
 40141                           
 40142                           ;incstack = 0
 40143   007D26  0E00               	movlw	0
 40144   007D28  0101               	movlb	1	; () banked
 40145   007D2A  6FC0               	movwf	rebuildHashtable@happening& (0+255),b
 40146   007D2C                     l18996:
 40147                           
 40148                           ; BSR set to: 1
 40149                           ;../../VLCBlib_PIC/event_teach_large.c: 1338:         happening2Event[happening] = 0xff;
 40150   007D2C  0E00               	movlw	low _happening2Event
 40151   007D2E  25C0               	addwf	rebuildHashtable@happening& (0+255),w,b
 40152   007D30  6ED9               	movwf	fsr2l,c
 40153   007D32  6ADA               	clrf	fsr2h,c
 40154   007D34  0E03               	movlw	high _happening2Event
 40155   007D36  22DA               	addwfc	fsr2h,f,c
 40156   007D38  0EFF               	movlw	255
 40157   007D3A  6EDF               	movwf	indf2,c
 40158                           
 40159                           ; BSR set to: 1
 40160                           ;../../VLCBlib_PIC/event_teach_large.c: 1339:     }
 40161   007D3C  2BC0               	incf	rebuildHashtable@happening& (0+255),f,b
 40162                           
 40163                           ; BSR set to: 1
 40164   007D3E  0E47               	movlw	71
 40165   007D40  65C0               	cpfsgt	rebuildHashtable@happening& (0+255),b
 40166   007D42  D7F4               	goto	l18996
 40167                           
 40168                           ; BSR set to: 1
 40169                           ;../../VLCBlib_PIC/event_teach_large.c: 1341:     for (hash=0; hash<32; hash++) {
 40170   007D44  0E00               	movlw	0
 40171   007D46  6FBF               	movwf	rebuildHashtable@hash& (0+255),b
 40172   007D48                     l19008:
 40173                           
 40174                           ; BSR set to: 1
 40175                           ;../../VLCBlib_PIC/event_teach_large.c: 1342:         for (chainIdx=0; chainIdx < 20; ch
      +                          ainIdx++) {
 40176   007D48  0E00               	movlw	0
 40177   007D4A  6FC1               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40178   007D4C                     l19014:
 40179                           
 40180                           ; BSR set to: 1
 40181                           ;../../VLCBlib_PIC/event_teach_large.c: 1343:             eventChains[hash][chainIdx] = 
      +                          0xff;
 40182   007D4C  51BF               	movf	rebuildHashtable@hash& (0+255),w,b
 40183   007D4E  0D14               	mullw	20
 40184   007D50  0E48               	movlw	low _eventChains
 40185   007D52  24F3               	addwf	243,w,c
 40186   007D54  6FBA               	movwf	??_rebuildHashtable& (0+255),b
 40187   007D56  0E05               	movlw	high _eventChains
 40188   007D58  20F4               	addwfc	prodh,w,c
 40189   007D5A  6FBB               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40190   007D5C  51C1               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40191   007D5E  25BA               	addwf	??_rebuildHashtable& (0+255),w,b
 40192   007D60  6ED9               	movwf	fsr2l,c
 40193   007D62  0E00               	movlw	0
 40194   007D64  21BB               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40195   007D66  6EDA               	movwf	fsr2h,c
 40196   007D68  0EFF               	movlw	255
 40197   007D6A  6EDF               	movwf	indf2,c
 40198                           
 40199                           ; BSR set to: 1
 40200                           ;../../VLCBlib_PIC/event_teach_large.c: 1344:         }
 40201   007D6C  2BC1               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40202                           
 40203                           ; BSR set to: 1
 40204   007D6E  0E13               	movlw	19
 40205   007D70  65C1               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40206   007D72  D7EC               	goto	l19014
 40207                           
 40208                           ; BSR set to: 1
 40209                           ;../../VLCBlib_PIC/event_teach_large.c: 1345:     }
 40210   007D74  2BBF               	incf	rebuildHashtable@hash& (0+255),f,b
 40211                           
 40212                           ; BSR set to: 1
 40213   007D76  0E1F               	movlw	31
 40214   007D78  65BF               	cpfsgt	rebuildHashtable@hash& (0+255),b
 40215   007D7A  D7E6               	goto	l19008
 40216                           
 40217                           ; BSR set to: 1
 40218                           ;../../VLCBlib_PIC/event_teach_large.c: 1348:     for (tableIndex=0; tableIndex<255; tab
      +                          leIndex++) {
 40219   007D7C  0E00               	movlw	0
 40220   007D7E  6FC2               	movwf	rebuildHashtable@tableIndex& (0+255),b
 40221   007D80                     l19030:
 40222                           
 40223                           ; BSR set to: 1
 40224                           ;../../VLCBlib_PIC/event_teach_large.c: 1349:         if (validStart(tableIndex)) {
 40225   007D80  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40226   007D82  EC39  F05C         	call	_validStart
 40227   007D86  0900               	iorlw	0
 40228   007D88  B4D8               	btfsc	status,2,c
 40229   007D8A  D059               	goto	u18670
 40230                           
 40231                           ;../../VLCBlib_PIC/event_teach_large.c: 1350:             int16_t ev;;../../VLCBlib_PIC/
      +                          event_teach_large.c: 1365:             ev = getEv(tableIndex, 0);
 40232   007D8C  0E00               	movlw	0
 40233   007D8E  0100               	movlb	0	; () banked
 40234   007D90  6F9D               	movwf	getEv@evNum& (0+255),b
 40235   007D92  0101               	movlb	1	; () banked
 40236   007D94  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40237   007D96  EC0A  F03C         	call	_getEv
 40238   007D9A  C09D  F1BD         	movff	?_getEv,rebuildHashtable@ev
 40239   007D9E  C09E  F1BE         	movff	?_getEv+1,rebuildHashtable@ev+1
 40240                           
 40241                           ;../../VLCBlib_PIC/event_teach_large.c: 1366:             if (ev < 0) continue;
 40242   007DA2  0101               	movlb	1	; () banked
 40243   007DA4  BFBE               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 40244   007DA6  D04B               	goto	u18670
 40245                           
 40246                           ; BSR set to: 1
 40247                           ;../../VLCBlib_PIC/event_teach_large.c: 1367:             happening = (uint8_t) ev;
 40248   007DA8  C1BD  F1C0         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 40249                           
 40250                           ; BSR set to: 1
 40251                           ;../../VLCBlib_PIC/event_teach_large.c: 1369:             if ((happening<= (7+16*4)) && 
      +                          (happening >= 1)) {
 40252   007DAC  0E48               	movlw	72
 40253   007DAE  61C0               	cpfslt	rebuildHashtable@happening& (0+255),b
 40254   007DB0  D00B               	goto	l19044
 40255                           
 40256                           ; BSR set to: 1
 40257   007DB2  51C0               	movf	rebuildHashtable@happening& (0+255),w,b
 40258   007DB4  B4D8               	btfsc	status,2,c
 40259   007DB6  D008               	goto	l19044
 40260                           
 40261                           ; BSR set to: 1
 40262                           ;../../VLCBlib_PIC/event_teach_large.c: 1370:                 happening2Event[happening-
      +                          1] = tableIndex;
 40263   007DB8  0EFF               	movlw	low (_happening2Event+65535)
 40264   007DBA  25C0               	addwf	rebuildHashtable@happening& (0+255),w,b
 40265   007DBC  6ED9               	movwf	fsr2l,c
 40266   007DBE  6ADA               	clrf	fsr2h,c
 40267   007DC0  0E02               	movlw	high (_happening2Event+65535)
 40268   007DC2  22DA               	addwfc	fsr2h,f,c
 40269   007DC4  C1C2  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40270   007DC8                     l19044:
 40271                           
 40272                           ; BSR set to: 1
 40273                           ;../../VLCBlib_PIC/event_teach_large.c: 1373:             hash = getHash(getNN(tableInde
      +                          x), getEN(tableIndex));
 40274   007DC8  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40275   007DCA  ECBF  F049         	call	_getNN
 40276   007DCE  C097  F0A3         	movff	?_getNN,getHash@nn
 40277   007DD2  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 40278   007DD6  0101               	movlb	1	; () banked
 40279   007DD8  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40280   007DDA  EC9B  F055         	call	_getEN
 40281   007DDE  C097  F0A5         	movff	?_getEN,getHash@en
 40282   007DE2  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 40283   007DE6  EC14  F062         	call	_getHash	;wreg free
 40284   007DEA  0101               	movlb	1	; () banked
 40285   007DEC  6FBF               	movwf	rebuildHashtable@hash& (0+255),b
 40286                           
 40287                           ; BSR set to: 1
 40288                           ;../../VLCBlib_PIC/event_teach_large.c: 1375:             for (chainIdx=0; chainIdx<20; 
      +                          chainIdx++) {
 40289   007DEE  0E00               	movlw	0
 40290   007DF0  6FC1               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40291   007DF2                     l19052:
 40292                           
 40293                           ; BSR set to: 1
 40294                           ;../../VLCBlib_PIC/event_teach_large.c: 1376:                 if (eventChains[hash][chai
      +                          nIdx] == 0xff) {
 40295   007DF2  51BF               	movf	rebuildHashtable@hash& (0+255),w,b
 40296   007DF4  0D14               	mullw	20
 40297   007DF6  0E48               	movlw	low _eventChains
 40298   007DF8  24F3               	addwf	243,w,c
 40299   007DFA  6FBA               	movwf	??_rebuildHashtable& (0+255),b
 40300   007DFC  0E05               	movlw	high _eventChains
 40301   007DFE  20F4               	addwfc	prodh,w,c
 40302   007E00  6FBB               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40303   007E02  51C1               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40304   007E04  25BA               	addwf	??_rebuildHashtable& (0+255),w,b
 40305   007E06  6ED9               	movwf	fsr2l,c
 40306   007E08  0E00               	movlw	0
 40307   007E0A  21BB               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40308   007E0C  6EDA               	movwf	fsr2h,c
 40309   007E0E  28DE               	incf	postinc2,w,c
 40310   007E10  A4D8               	btfss	status,2,c
 40311   007E12  D011               	goto	l19056
 40312                           
 40313                           ; BSR set to: 1
 40314                           ;../../VLCBlib_PIC/event_teach_large.c: 1378:                     eventChains[hash][chai
      +                          nIdx] = tableIndex;
 40315   007E14  51BF               	movf	rebuildHashtable@hash& (0+255),w,b
 40316   007E16  0D14               	mullw	20
 40317   007E18  0E48               	movlw	low _eventChains
 40318   007E1A  24F3               	addwf	243,w,c
 40319   007E1C  6FBA               	movwf	??_rebuildHashtable& (0+255),b
 40320   007E1E  0E05               	movlw	high _eventChains
 40321   007E20  20F4               	addwfc	prodh,w,c
 40322   007E22  6FBB               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40323   007E24  51C1               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40324   007E26  25BA               	addwf	??_rebuildHashtable& (0+255),w,b
 40325   007E28  6ED9               	movwf	fsr2l,c
 40326   007E2A  0E00               	movlw	0
 40327   007E2C  21BB               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40328   007E2E  6EDA               	movwf	fsr2h,c
 40329   007E30  C1C2  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40330                           
 40331                           ;../../VLCBlib_PIC/event_teach_large.c: 1379:                     break;
 40332   007E34  D004               	goto	u18670
 40333   007E36                     l19056:
 40334                           
 40335                           ; BSR set to: 1
 40336                           ;../../VLCBlib_PIC/event_teach_large.c: 1381:             }
 40337   007E36  2BC1               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40338                           
 40339                           ; BSR set to: 1
 40340   007E38  0E13               	movlw	19
 40341   007E3A  65C1               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40342   007E3C  D7DA               	goto	l19052
 40343   007E3E                     u18670:
 40344   007E3E  0101               	movlb	1	; () banked
 40345   007E40  2BC2               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 40346                           
 40347                           ; BSR set to: 1
 40348   007E42  29C2               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 40349   007E44  B4D8               	btfsc	status,2,c
 40350   007E46  0012               	return	
 40351   007E48  D79B               	goto	l19030
 40352   007E4A                     __end_of_rebuildHashtable:
 40353                           	callstack 0
 40354                           
 40355 ;; *************** function _getEv *****************
 40356 ;; Defined at:
 40357 ;;		line 1119 in file "../../VLCBlib_PIC/event_teach_large.c"
 40358 ;; Parameters:    Size  Location     Type
 40359 ;;  tableIndex      1    wreg     unsigned char 
 40360 ;;  evNum           1   61[BANK0 ] unsigned char 
 40361 ;; Auto vars:     Size  Location     Type
 40362 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 40363 ;;  f               1   68[BANK0 ] struct .
 40364 ;; Return value:  Size  Location     Type
 40365 ;;                  2   61[BANK0 ] short 
 40366 ;; Registers used:
 40367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40368 ;; Tracked objects:
 40369 ;;		On entry : 0/0
 40370 ;;		On exit  : 0/0
 40371 ;;		Unchanged: 0/0
 40372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40373 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40374 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40375 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40376 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40377 ;;Total ram usage:        9 bytes
 40378 ;; Hardware stack levels used: 1
 40379 ;; Hardware stack levels required when called: 15
 40380 ;; This function calls:
 40381 ;;		_readNVM
 40382 ;;		_validStart
 40383 ;; This function is called by:
 40384 ;;		_isConsumedEvent
 40385 ;;		_doReval
 40386 ;;		_doReqev
 40387 ;;		_reqevCallback
 40388 ;;		_rebuildHashtable
 40389 ;;		_producerProcessMessage
 40390 ;; This function uses a non-reentrant model
 40391 ;;
 40392                           
 40393                           	psect	text173
 40394   007814                     __ptext173:
 40395                           	callstack 0
 40396   007814                     _getEv:
 40397                           	callstack 12
 40398                           
 40399                           ; BSR set to: 1
 40400                           ;incstack = 0
 40401                           ;getEv@tableIndex stored from wreg
 40402   007814  0100               	movlb	0	; () banked
 40403   007816  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40404                           
 40405                           ;../../VLCBlib_PIC/event_teach_large.c: 1120:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1121:     if ( ! validStart(tableIndex)) {
 40406   007818  0100               	movlb	0	; () banked
 40407   00781A  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40408   00781C  EC39  F05C         	call	_validStart
 40409   007820  0900               	iorlw	0
 40410   007822  A4D8               	btfss	status,2,c
 40411   007824  D006               	goto	l18838
 40412   007826                     u18420:
 40413                           
 40414                           ;../../VLCBlib_PIC/event_teach_large.c: 1123:         return -CMDERR_INVALID_EVENT;
 40415   007826  0EFF               	movlw	255
 40416   007828  0100               	movlb	0	; () banked
 40417   00782A  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40418   00782C  0EF9               	movlw	249
 40419   00782E  6F9D               	movwf	?_getEv& (0+255),b
 40420   007830  0012               	return	
 40421   007832                     l18838:
 40422                           
 40423                           ;../../VLCBlib_PIC/event_teach_large.c: 1125:     if (evNum >= 20) {
 40424   007832  0E13               	movlw	19
 40425   007834  0100               	movlb	0	; () banked
 40426   007836  659D               	cpfsgt	getEv@evNum& (0+255),b
 40427   007838  D005               	goto	l18844
 40428                           
 40429                           ; BSR set to: 0
 40430                           ;../../VLCBlib_PIC/event_teach_large.c: 1126:         return -CMDERR_INV_EV_IDX;
 40431   00783A  0EFF               	movlw	255
 40432   00783C  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40433   00783E  0EFA               	movlw	250
 40434   007840  6F9D               	movwf	?_getEv& (0+255),b
 40435   007842  0012               	return	
 40436   007844                     l18844:
 40437                           
 40438                           ; BSR set to: 0
 40439                           ;../../VLCBlib_PIC/event_teach_large.c: 1128:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 40440   007844  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40441   007846  6F9F               	movwf	??_getEv& (0+255),b
 40442   007848  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40443   00784A  3B9F               	swapf	??_getEv& (0+255),f,b
 40444   00784C  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40445   00784E  0EF0               	movlw	240
 40446   007850  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40447   007852  519F               	movf	??_getEv& (0+255),w,b
 40448   007854  0B0F               	andlw	15
 40449   007856  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40450   007858  0EF0               	movlw	240
 40451   00785A  179F               	andwf	??_getEv& (0+255),f,b
 40452   00785C  0E80               	movlw	128
 40453   00785E  259F               	addwf	??_getEv& (0+255),w,b
 40454   007860  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40455   007862  0EEF               	movlw	239
 40456   007864  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40457   007866  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40458   007868  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40459   00786C  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40460   007870  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40461   007872  0E01               	movlw	1
 40462   007874  ECD0  F059         	call	_readNVM
 40463   007878  0100               	movlb	0	; () banked
 40464   00787A  5191               	movf	?_readNVM& (0+255),w,b
 40465   00787C  6FA4               	movwf	getEv@f& (0+255),b
 40466                           
 40467                           ;../../VLCBlib_PIC/event_teach_large.c: 1129:     while (evNum >= 10) {
 40468   00787E  D040               	goto	l18862
 40469   007880                     l2933:
 40470                           
 40471                           ; BSR set to: 0
 40472                           ;../../VLCBlib_PIC/event_teach_large.c: 1131:         if (! f.continued) {
 40473   007880  B9A4               	btfsc	getEv@f& (0+255),4,b
 40474   007882  D005               	goto	l18850
 40475   007884                     u18440:
 40476                           
 40477                           ; BSR set to: 0
 40478                           ;../../VLCBlib_PIC/event_teach_large.c: 1132:             return -CMDERR_NO_EV;
 40479   007884  0EFF               	movlw	255
 40480   007886  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40481   007888  0EFB               	movlw	251
 40482   00788A  6F9D               	movwf	?_getEv& (0+255),b
 40483   00788C  0012               	return	
 40484   00788E                     l18850:
 40485                           
 40486                           ; BSR set to: 0
 40487                           ;../../VLCBlib_PIC/event_teach_large.c: 1134:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40488   00788E  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40489   007890  0D10               	mullw	16
 40490   007892  CFF3 F09F          	movff	prodl,??_getEv
 40491   007896  CFF4 F0A0          	movff	prodh,??_getEv+1
 40492   00789A  0E81               	movlw	129
 40493   00789C  259F               	addwf	??_getEv& (0+255),w,b
 40494   00789E  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40495   0078A0  0EEF               	movlw	239
 40496   0078A2  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40497   0078A4  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40498   0078A6  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40499   0078AA  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40500   0078AE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40501   0078B0  0E01               	movlw	1
 40502   0078B2  ECD0  F059         	call	_readNVM
 40503   0078B6  0100               	movlb	0	; () banked
 40504   0078B8  5191               	movf	?_readNVM& (0+255),w,b
 40505   0078BA  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40506                           
 40507                           ; BSR set to: 0
 40508                           ;../../VLCBlib_PIC/event_teach_large.c: 1135:         if (tableIndex == 0xff) {
 40509   0078BC  29A5               	incf	getEv@tableIndex& (0+255),w,b
 40510   0078BE  B4D8               	btfsc	status,2,c
 40511   0078C0  D7B2               	goto	u18420
 40512                           
 40513                           ; BSR set to: 0
 40514                           ;../../VLCBlib_PIC/event_teach_large.c: 1138:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40515   0078C2  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40516   0078C4  6F9F               	movwf	??_getEv& (0+255),b
 40517   0078C6  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40518   0078C8  3B9F               	swapf	??_getEv& (0+255),f,b
 40519   0078CA  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40520   0078CC  0EF0               	movlw	240
 40521   0078CE  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40522   0078D0  519F               	movf	??_getEv& (0+255),w,b
 40523   0078D2  0B0F               	andlw	15
 40524   0078D4  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40525   0078D6  0EF0               	movlw	240
 40526   0078D8  179F               	andwf	??_getEv& (0+255),f,b
 40527   0078DA  0E80               	movlw	128
 40528   0078DC  259F               	addwf	??_getEv& (0+255),w,b
 40529   0078DE  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40530   0078E0  0EEF               	movlw	239
 40531   0078E2  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40532   0078E4  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40533   0078E6  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40534   0078EA  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40535   0078EE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40536   0078F0  0E01               	movlw	1
 40537   0078F2  ECD0  F059         	call	_readNVM
 40538   0078F6  0100               	movlb	0	; () banked
 40539   0078F8  5191               	movf	?_readNVM& (0+255),w,b
 40540   0078FA  6FA4               	movwf	getEv@f& (0+255),b
 40541                           
 40542                           ; BSR set to: 0
 40543                           ;../../VLCBlib_PIC/event_teach_large.c: 1139:         evNum -= 10;
 40544   0078FC  0E0A               	movlw	10
 40545   0078FE  5F9D               	subwf	getEv@evNum& (0+255),f,b
 40546   007900                     l18862:
 40547                           
 40548                           ; BSR set to: 0
 40549                           ;../../VLCBlib_PIC/event_teach_large.c: 1129:     while (evNum >= 10) {
 40550   007900  0E0A               	movlw	10
 40551   007902  619D               	cpfslt	getEv@evNum& (0+255),b
 40552   007904  D7BD               	goto	l2933
 40553                           
 40554                           ; BSR set to: 0
 40555                           ;../../VLCBlib_PIC/event_teach_large.c: 1141:     if (evNum+1 > f.eVsUsed) {
 40556   007906  519D               	movf	getEv@evNum& (0+255),w,b
 40557   007908  6F9F               	movwf	??_getEv& (0+255),b
 40558   00790A  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40559   00790C  0E01               	movlw	1
 40560   00790E  279F               	addwf	??_getEv& (0+255),f,b
 40561   007910  0E00               	movlw	0
 40562   007912  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40563   007914  51A4               	movf	getEv@f& (0+255),w,b
 40564   007916  0B0F               	andlw	15
 40565   007918  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40566   00791A  6BA2               	clrf	(??_getEv+3)& (0+255),b
 40567   00791C  519F               	movf	??_getEv& (0+255),w,b
 40568   00791E  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 40569   007920  51A2               	movf	(??_getEv+3)& (0+255),w,b
 40570   007922  0A80               	xorlw	128
 40571   007924  6FA3               	movwf	(??_getEv+4)& (0+255),b
 40572   007926  51A0               	movf	(??_getEv+1)& (0+255),w,b
 40573   007928  0A80               	xorlw	128
 40574   00792A  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 40575   00792C  A0D8               	btfss	status,0,c
 40576   00792E  D7AA               	goto	u18440
 40577                           
 40578                           ; BSR set to: 0
 40579                           ;../../VLCBlib_PIC/event_teach_large.c: 1145:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +evNum);
 40580   007930  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40581   007932  0D10               	mullw	16
 40582   007934  CFF3 F09F          	movff	prodl,??_getEv
 40583   007938  CFF4 F0A0          	movff	prodh,??_getEv+1
 40584   00793C  519D               	movf	getEv@evNum& (0+255),w,b
 40585   00793E  279F               	addwf	??_getEv& (0+255),f,b
 40586   007940  0E00               	movlw	0
 40587   007942  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40588   007944  0E86               	movlw	134
 40589   007946  259F               	addwf	??_getEv& (0+255),w,b
 40590   007948  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40591   00794A  0EEF               	movlw	239
 40592   00794C  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40593   00794E  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40594   007950  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40595   007954  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40596   007958  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40597   00795A  0E01               	movlw	1
 40598   00795C  ECD0  F059         	call	_readNVM
 40599   007960  0100               	movlb	0	; () banked
 40600   007962  5191               	movf	?_readNVM& (0+255),w,b
 40601   007964  6F9D               	movwf	?_getEv& (0+255),b
 40602   007966  6B9E               	clrf	(?_getEv+1)& (0+255),b
 40603                           
 40604                           ; BSR set to: 0
 40605   007968  0012               	return		;funcret
 40606   00796A                     __end_of_getEv:
 40607                           	callstack 0
 40608                           
 40609 ;; *************** function _getEVs *****************
 40610 ;; Defined at:
 40611 ;;		line 1184 in file "../../VLCBlib_PIC/event_teach_large.c"
 40612 ;; Parameters:    Size  Location     Type
 40613 ;;  tableIndex      1    wreg     unsigned char 
 40614 ;; Auto vars:     Size  Location     Type
 40615 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 40616 ;;  evIdx           1   66[BANK0 ] unsigned char 
 40617 ;;  evNum           1   68[BANK0 ] unsigned char 
 40618 ;;  f               1   65[BANK0 ] struct .
 40619 ;; Return value:  Size  Location     Type
 40620 ;;                  1    wreg      unsigned char 
 40621 ;; Registers used:
 40622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40623 ;; Tracked objects:
 40624 ;;		On entry : 0/0
 40625 ;;		On exit  : 0/0
 40626 ;;		Unchanged: 0/0
 40627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40629 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40631 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40632 ;;Total ram usage:        8 bytes
 40633 ;; Hardware stack levels used: 1
 40634 ;; Hardware stack levels required when called: 15
 40635 ;; This function calls:
 40636 ;;		_readNVM
 40637 ;;		_validStart
 40638 ;; This function is called by:
 40639 ;;		_consumer2QProcessMessage
 40640 ;;		_deleteActionRange
 40641 ;;		_checkRemoveTableEntry
 40642 ;; This function uses a non-reentrant model
 40643 ;;
 40644                           
 40645                           	psect	text174
 40646   008274                     __ptext174:
 40647                           	callstack 0
 40648   008274                     _getEVs:
 40649                           	callstack 9
 40650                           
 40651                           ; BSR set to: 0
 40652                           ;incstack = 0
 40653                           ;getEVs@tableIndex stored from wreg
 40654   008274  0100               	movlb	0	; () banked
 40655   008276  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 40656                           
 40657                           ;../../VLCBlib_PIC/event_teach_large.c: 1185:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1186:     uint8_t evNum;;../../VLCBlib_PIC/event_teach_large.c: 1188
      +                          :     if ( ! validStart(tableIndex)) {
 40658   008278  0100               	movlb	0	; () banked
 40659   00827A  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40660   00827C  EC39  F05C         	call	_validStart
 40661   008280  0900               	iorlw	0
 40662   008282  A4D8               	btfss	status,2,c
 40663   008284  D002               	goto	l19070
 40664   008286                     u18690:
 40665                           
 40666                           ;../../VLCBlib_PIC/event_teach_large.c: 1190:         return CMDERR_INVALID_EVENT;
 40667   008286  0E07               	movlw	7
 40668   008288  0012               	return	
 40669   00828A                     l19070:
 40670                           
 40671                           ;../../VLCBlib_PIC/event_teach_large.c: 1192:     for (evNum=0; evNum < 20; ) {
 40672   00828A  0E00               	movlw	0
 40673   00828C  0100               	movlb	0	; () banked
 40674   00828E  6FA4               	movwf	getEVs@evNum& (0+255),b
 40675   008290                     l19076:
 40676                           
 40677                           ; BSR set to: 0
 40678                           ;../../VLCBlib_PIC/event_teach_large.c: 1193:         uint8_t evIdx;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1194:         for (evIdx=0; evIdx < 10; evIdx++) {
 40679   008290  0E00               	movlw	0
 40680   008292  6FA2               	movwf	getEVs@evIdx& (0+255),b
 40681   008294                     l19082:
 40682                           
 40683                           ; BSR set to: 0
 40684                           ;../../VLCBlib_PIC/event_teach_large.c: 1195:             evs[evNum] = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 40685   008294  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40686   008296  0D10               	mullw	16
 40687   008298  CFF3 F09D          	movff	prodl,??_getEVs
 40688   00829C  CFF4 F09E          	movff	prodh,??_getEVs+1
 40689   0082A0  51A2               	movf	getEVs@evIdx& (0+255),w,b
 40690   0082A2  279D               	addwf	??_getEVs& (0+255),f,b
 40691   0082A4  0E00               	movlw	0
 40692   0082A6  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 40693   0082A8  0E86               	movlw	134
 40694   0082AA  259D               	addwf	??_getEVs& (0+255),w,b
 40695   0082AC  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40696   0082AE  0EEF               	movlw	239
 40697   0082B0  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40698   0082B2  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40699   0082B4  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40700   0082B8  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40701   0082BC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40702   0082BE  0E01               	movlw	1
 40703   0082C0  ECD0  F059         	call	_readNVM
 40704   0082C4  0E20               	movlw	low _evs
 40705   0082C6  0100               	movlb	0	; () banked
 40706   0082C8  25A4               	addwf	getEVs@evNum& (0+255),w,b
 40707   0082CA  6ED9               	movwf	fsr2l,c
 40708   0082CC  6ADA               	clrf	fsr2h,c
 40709   0082CE  0E02               	movlw	high _evs
 40710   0082D0  22DA               	addwfc	fsr2h,f,c
 40711   0082D2  C091  FFDF         	movff	?_readNVM,indf2
 40712                           
 40713                           ; BSR set to: 0
 40714                           ;../../VLCBlib_PIC/event_teach_large.c: 1196:             evNum++;
 40715   0082D6  2BA4               	incf	getEVs@evNum& (0+255),f,b
 40716                           
 40717                           ; BSR set to: 0
 40718                           ;../../VLCBlib_PIC/event_teach_large.c: 1197:         }
 40719   0082D8  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 40720                           
 40721                           ; BSR set to: 0
 40722   0082DA  0E09               	movlw	9
 40723   0082DC  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 40724   0082DE  D7DA               	goto	l19082
 40725                           
 40726                           ; BSR set to: 0
 40727                           ;../../VLCBlib_PIC/event_teach_large.c: 1198:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40728   0082E0  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40729   0082E2  6F9D               	movwf	??_getEVs& (0+255),b
 40730   0082E4  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 40731   0082E6  3B9D               	swapf	??_getEVs& (0+255),f,b
 40732   0082E8  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 40733   0082EA  0EF0               	movlw	240
 40734   0082EC  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 40735   0082EE  519D               	movf	??_getEVs& (0+255),w,b
 40736   0082F0  0B0F               	andlw	15
 40737   0082F2  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 40738   0082F4  0EF0               	movlw	240
 40739   0082F6  179D               	andwf	??_getEVs& (0+255),f,b
 40740   0082F8  0E80               	movlw	128
 40741   0082FA  259D               	addwf	??_getEVs& (0+255),w,b
 40742   0082FC  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40743   0082FE  0EEF               	movlw	239
 40744   008300  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40745   008302  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40746   008304  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40747   008308  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40748   00830C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40749   00830E  0E01               	movlw	1
 40750   008310  ECD0  F059         	call	_readNVM
 40751   008314  0100               	movlb	0	; () banked
 40752   008316  5191               	movf	?_readNVM& (0+255),w,b
 40753   008318  6FA1               	movwf	getEVs@f& (0+255),b
 40754                           
 40755                           ; BSR set to: 0
 40756                           ;../../VLCBlib_PIC/event_teach_large.c: 1199:         if (! f.continued) {
 40757   00831A  B9A1               	btfsc	getEVs@f& (0+255),4,b
 40758   00831C  D00F               	goto	l19108
 40759   00831E                     u18710:
 40760                           
 40761                           ; BSR set to: 0
 40762                           ;../../VLCBlib_PIC/event_teach_large.c: 1200:             for (; evNum < 20; evNum++) {
 40763   00831E  0E13               	movlw	19
 40764   008320  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 40765   008322  D001               	goto	l19098
 40766   008324  D009               	goto	l19104
 40767   008326                     l19098:
 40768                           
 40769                           ; BSR set to: 0
 40770                           ;../../VLCBlib_PIC/event_teach_large.c: 1201:                 evs[evNum] = 0;
 40771   008326  0E20               	movlw	low _evs
 40772   008328  25A4               	addwf	getEVs@evNum& (0+255),w,b
 40773   00832A  6ED9               	movwf	fsr2l,c
 40774   00832C  6ADA               	clrf	fsr2h,c
 40775   00832E  0E02               	movlw	high _evs
 40776   008330  22DA               	addwfc	fsr2h,f,c
 40777   008332  6ADF               	clrf	indf2,c
 40778                           
 40779                           ; BSR set to: 0
 40780                           ;../../VLCBlib_PIC/event_teach_large.c: 1202:             }
 40781   008334  2BA4               	incf	getEVs@evNum& (0+255),f,b
 40782   008336  D7F3               	goto	u18710
 40783   008338                     l19104:
 40784                           
 40785                           ; BSR set to: 0
 40786                           ;../../VLCBlib_PIC/event_teach_large.c: 1203:             return 0;
 40787   008338  0E00               	movlw	0
 40788   00833A  0012               	return	
 40789   00833C                     l19108:
 40790                           
 40791                           ; BSR set to: 0
 40792                           ;../../VLCBlib_PIC/event_teach_large.c: 1205:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40793   00833C  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40794   00833E  0D10               	mullw	16
 40795   008340  CFF3 F09D          	movff	prodl,??_getEVs
 40796   008344  CFF4 F09E          	movff	prodh,??_getEVs+1
 40797   008348  0E81               	movlw	129
 40798   00834A  259D               	addwf	??_getEVs& (0+255),w,b
 40799   00834C  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40800   00834E  0EEF               	movlw	239
 40801   008350  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40802   008352  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40803   008354  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40804   008358  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40805   00835C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40806   00835E  0E01               	movlw	1
 40807   008360  ECD0  F059         	call	_readNVM
 40808   008364  0100               	movlb	0	; () banked
 40809   008366  5191               	movf	?_readNVM& (0+255),w,b
 40810   008368  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 40811                           
 40812                           ; BSR set to: 0
 40813                           ;../../VLCBlib_PIC/event_teach_large.c: 1206:         if (tableIndex == 0xff) {
 40814   00836A  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 40815   00836C  B4D8               	btfsc	status,2,c
 40816   00836E  D78B               	goto	u18690
 40817                           
 40818                           ; BSR set to: 0
 40819                           ;../../VLCBlib_PIC/event_teach_large.c: 1209:     }
 40820   008370  0E13               	movlw	19
 40821   008372  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 40822   008374  D78D               	goto	l19076
 40823   008376  D7E0               	goto	l19104
 40824   008378                     __end_of_getEVs:
 40825                           	callstack 0
 40826                           
 40827 ;; *************** function _validStart *****************
 40828 ;; Defined at:
 40829 ;;		line 1283 in file "../../VLCBlib_PIC/event_teach_large.c"
 40830 ;; Parameters:    Size  Location     Type
 40831 ;;  tableIndex      1    wreg     unsigned char 
 40832 ;; Auto vars:     Size  Location     Type
 40833 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 40834 ;;  f               1   60[BANK0 ] struct .
 40835 ;; Return value:  Size  Location     Type
 40836 ;;                  1    wreg      enum E12766
 40837 ;; Registers used:
 40838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40839 ;; Tracked objects:
 40840 ;;		On entry : 0/0
 40841 ;;		On exit  : 0/0
 40842 ;;		Unchanged: 0/0
 40843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40846 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40847 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40848 ;;Total ram usage:        6 bytes
 40849 ;; Hardware stack levels used: 1
 40850 ;; Hardware stack levels required when called: 14
 40851 ;; This function calls:
 40852 ;;		_readNVM
 40853 ;; This function is called by:
 40854 ;;		_deleteActionRange
 40855 ;;		_nerdCallback
 40856 ;;		_doNenrd
 40857 ;;		_doRqevn
 40858 ;;		_doReval
 40859 ;;		_removeTableEntry
 40860 ;;		_checkRemoveTableEntry
 40861 ;;		_getEv
 40862 ;;		_numEv
 40863 ;;		_getEVs
 40864 ;;		_rebuildHashtable
 40865 ;;		_deleteHappeningRange
 40866 ;; This function uses a non-reentrant model
 40867 ;;
 40868                           
 40869                           	psect	text175
 40870   00B872                     __ptext175:
 40871                           	callstack 0
 40872   00B872                     _validStart:
 40873                           	callstack 13
 40874                           
 40875                           ;incstack = 0
 40876                           ;validStart@tableIndex stored from wreg
 40877   00B872  0100               	movlb	0	; () banked
 40878   00B874  6F9B               	movwf	validStart@tableIndex& (0+255),b
 40879                           
 40880                           ;../../VLCBlib_PIC/event_teach_large.c: 1284:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1288:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*ta
      +                          bleIndex+0);
 40881   00B876  0100               	movlb	0	; () banked
 40882   00B878  519B               	movf	validStart@tableIndex& (0+255),w,b
 40883   00B87A  6F97               	movwf	??_validStart& (0+255),b
 40884   00B87C  6B98               	clrf	(??_validStart+1)& (0+255),b
 40885   00B87E  3B97               	swapf	??_validStart& (0+255),f,b
 40886   00B880  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 40887   00B882  0EF0               	movlw	240
 40888   00B884  1798               	andwf	(??_validStart+1)& (0+255),f,b
 40889   00B886  5197               	movf	??_validStart& (0+255),w,b
 40890   00B888  0B0F               	andlw	15
 40891   00B88A  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 40892   00B88C  0EF0               	movlw	240
 40893   00B88E  1797               	andwf	??_validStart& (0+255),f,b
 40894   00B890  0E80               	movlw	128
 40895   00B892  2597               	addwf	??_validStart& (0+255),w,b
 40896   00B894  6F99               	movwf	(??_validStart+2)& (0+255),b
 40897   00B896  0EEF               	movlw	239
 40898   00B898  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 40899   00B89A  6F9A               	movwf	(??_validStart+3)& (0+255),b
 40900   00B89C  C099  F091         	movff	??_validStart+2,readNVM@index
 40901   00B8A0  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 40902   00B8A4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40903   00B8A6  0E01               	movlw	1
 40904   00B8A8  ECD0  F059         	call	_readNVM
 40905   00B8AC  0100               	movlb	0	; () banked
 40906   00B8AE  5191               	movf	?_readNVM& (0+255),w,b
 40907   00B8B0  6F9C               	movwf	validStart@f& (0+255),b
 40908                           
 40909                           ; BSR set to: 0
 40910                           ;../../VLCBlib_PIC/event_teach_large.c: 1289:     if (( !f.freeEntry) && ( ! f.continuat
      +                          ion)) {
 40911   00B8B2  AF9C               	btfss	validStart@f& (0+255),7,b
 40912                           
 40913                           ; BSR set to: 0
 40914   00B8B4  BB9C               	btfsc	validStart@f& (0+255),5,b
 40915   00B8B6  D002               	goto	l18800
 40916                           
 40917                           ; BSR set to: 0
 40918                           ;../../VLCBlib_PIC/event_teach_large.c: 1290:         return TRUE;
 40919   00B8B8  0E01               	movlw	1
 40920   00B8BA  0012               	return	
 40921   00B8BC                     l18800:
 40922                           
 40923                           ; BSR set to: 0
 40924                           ;../../VLCBlib_PIC/event_teach_large.c: 1292:         return FALSE;
 40925   00B8BC  0E00               	movlw	0
 40926                           
 40927                           ; BSR set to: 0
 40928   00B8BE  0012               	return		;funcret
 40929   00B8C0                     __end_of_validStart:
 40930                           	callstack 0
 40931                           
 40932 ;; *************** function _findEvent *****************
 40933 ;; Defined at:
 40934 ;;		line 999 in file "../../VLCBlib_PIC/event_teach_large.c"
 40935 ;; Parameters:    Size  Location     Type
 40936 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 40937 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 40938 ;; Auto vars:     Size  Location     Type
 40939 ;;  en              2    8[BANK1 ] unsigned short 
 40940 ;;  nn              2    6[BANK1 ] unsigned short 
 40941 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 40942 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 40943 ;;  hash            1   10[BANK1 ] unsigned char 
 40944 ;; Return value:  Size  Location     Type
 40945 ;;                  1    wreg      unsigned char 
 40946 ;; Registers used:
 40947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40948 ;; Tracked objects:
 40949 ;;		On entry : 0/0
 40950 ;;		On exit  : 0/0
 40951 ;;		Unchanged: 0/0
 40952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40953 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40954 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40955 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40956 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40957 ;;Total ram usage:       13 bytes
 40958 ;; Hardware stack levels used: 1
 40959 ;; Hardware stack levels required when called: 15
 40960 ;; This function calls:
 40961 ;;		_getEN
 40962 ;;		_getHash
 40963 ;;		_getNN
 40964 ;; This function is called by:
 40965 ;;		_consumer2QProcessMessage
 40966 ;;		_ackEventProcessMessage
 40967 ;;		_doReqev
 40968 ;;		_removeEvent
 40969 ;;		_addEvent
 40970 ;;		_producerProcessMessage
 40971 ;; This function uses a non-reentrant model
 40972 ;;
 40973                           
 40974                           	psect	text176
 40975   00A376                     __ptext176:
 40976                           	callstack 0
 40977   00A376                     _findEvent:
 40978                           	callstack 12
 40979                           
 40980                           ;../../VLCBlib_PIC/event_teach_large.c: 1001:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 40981                           
 40982                           ; BSR set to: 0
 40983                           ;incstack = 0
 40984   00A376  C1BA  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 40985   00A37A  C1BB  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 40986   00A37E  C1BC  F0A5         	movff	findEvent@eventNumber,getHash@en
 40987   00A382  C1BD  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 40988   00A386  EC14  F062         	call	_getHash	;wreg free
 40989   00A38A  0101               	movlb	1	; () banked
 40990   00A38C  6FC4               	movwf	findEvent@hash& (0+255),b
 40991                           
 40992                           ; BSR set to: 1
 40993                           ;../../VLCBlib_PIC/event_teach_large.c: 1002:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 1003:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 40994   00A38E  0E00               	movlw	0
 40995   00A390  6FC5               	movwf	findEvent@chainIdx& (0+255),b
 40996   00A392                     l19474:
 40997                           
 40998                           ; BSR set to: 1
 40999                           ;../../VLCBlib_PIC/event_teach_large.c: 1004:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 41000   00A392  51C4               	movf	findEvent@hash& (0+255),w,b
 41001   00A394  0D14               	mullw	20
 41002   00A396  0E48               	movlw	low _eventChains
 41003   00A398  24F3               	addwf	243,w,c
 41004   00A39A  6FBE               	movwf	??_findEvent& (0+255),b
 41005   00A39C  0E05               	movlw	high _eventChains
 41006   00A39E  20F4               	addwfc	prodh,w,c
 41007   00A3A0  6FBF               	movwf	(??_findEvent+1)& (0+255),b
 41008   00A3A2  51C5               	movf	findEvent@chainIdx& (0+255),w,b
 41009   00A3A4  25BE               	addwf	??_findEvent& (0+255),w,b
 41010   00A3A6  6ED9               	movwf	fsr2l,c
 41011   00A3A8  0E00               	movlw	0
 41012   00A3AA  21BF               	addwfc	(??_findEvent+1)& (0+255),w,b
 41013   00A3AC  6EDA               	movwf	fsr2h,c
 41014   00A3AE  50DF               	movf	indf2,w,c
 41015   00A3B0  6FC6               	movwf	findEvent@tableIndex& (0+255),b
 41016                           
 41017                           ; BSR set to: 1
 41018                           ;../../VLCBlib_PIC/event_teach_large.c: 1005:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1006:         if (tableIndex == 0xff) return 0xff;
 41019   00A3B2  29C6               	incf	findEvent@tableIndex& (0+255),w,b
 41020   00A3B4  A4D8               	btfss	status,2,c
 41021   00A3B6  D002               	goto	l19482
 41022   00A3B8                     u19250:
 41023                           
 41024                           ; BSR set to: 1
 41025   00A3B8  0EFF               	movlw	255
 41026   00A3BA  0012               	return	
 41027   00A3BC                     l19482:
 41028                           
 41029                           ; BSR set to: 1
 41030                           ;../../VLCBlib_PIC/event_teach_large.c: 1007:         nn = getNN(tableIndex);
 41031   00A3BC  51C6               	movf	findEvent@tableIndex& (0+255),w,b
 41032   00A3BE  ECBF  F049         	call	_getNN
 41033   00A3C2  C097  F1C0         	movff	?_getNN,findEvent@nn
 41034   00A3C6  C098  F1C1         	movff	?_getNN+1,findEvent@nn+1
 41035                           
 41036                           ;../../VLCBlib_PIC/event_teach_large.c: 1008:         en = getEN(tableIndex);
 41037   00A3CA  0101               	movlb	1	; () banked
 41038   00A3CC  51C6               	movf	findEvent@tableIndex& (0+255),w,b
 41039   00A3CE  EC9B  F055         	call	_getEN
 41040   00A3D2  C097  F1C2         	movff	?_getEN,findEvent@en
 41041   00A3D6  C098  F1C3         	movff	?_getEN+1,findEvent@en+1
 41042                           
 41043                           ;../../VLCBlib_PIC/event_teach_large.c: 1009:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 41044   00A3DA  0101               	movlb	1	; () banked
 41045   00A3DC  51BA               	movf	findEvent@nodeNumber& (0+255),w,b
 41046   00A3DE  19C0               	xorwf	findEvent@nn& (0+255),w,b
 41047   00A3E0  E10D               	bnz	l19492
 41048   00A3E2  51BB               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 41049   00A3E4  19C1               	xorwf	(findEvent@nn+1)& (0+255),w,b
 41050   00A3E6  A4D8               	btfss	status,2,c
 41051   00A3E8  D009               	goto	l19492
 41052                           
 41053                           ; BSR set to: 1
 41054   00A3EA  51BC               	movf	findEvent@eventNumber& (0+255),w,b
 41055   00A3EC  19C2               	xorwf	findEvent@en& (0+255),w,b
 41056   00A3EE  E106               	bnz	l19492
 41057   00A3F0  51BD               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 41058   00A3F2  19C3               	xorwf	(findEvent@en+1)& (0+255),w,b
 41059   00A3F4  A4D8               	btfss	status,2,c
 41060   00A3F6  D002               	goto	l19492
 41061                           
 41062                           ; BSR set to: 1
 41063                           ;../../VLCBlib_PIC/event_teach_large.c: 1010:             return tableIndex;
 41064   00A3F8  51C6               	movf	findEvent@tableIndex& (0+255),w,b
 41065   00A3FA  0012               	return	
 41066   00A3FC                     l19492:
 41067                           
 41068                           ; BSR set to: 1
 41069                           ;../../VLCBlib_PIC/event_teach_large.c: 1012:     }
 41070   00A3FC  2BC5               	incf	findEvent@chainIdx& (0+255),f,b
 41071                           
 41072                           ; BSR set to: 1
 41073   00A3FE  0E13               	movlw	19
 41074   00A400  65C5               	cpfsgt	findEvent@chainIdx& (0+255),b
 41075   00A402  D7C7               	goto	l19474
 41076   00A404  D7D9               	goto	u19250
 41077   00A406                     __end_of_findEvent:
 41078                           	callstack 0
 41079                           
 41080 ;; *************** function _getNN *****************
 41081 ;; Defined at:
 41082 ;;		line 1220 in file "../../VLCBlib_PIC/event_teach_large.c"
 41083 ;; Parameters:    Size  Location     Type
 41084 ;;  tableIndex      1    wreg     unsigned char 
 41085 ;; Auto vars:     Size  Location     Type
 41086 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 41087 ;;  lo              2   63[BANK0 ] unsigned short 
 41088 ;;  hi              2   61[BANK0 ] unsigned short 
 41089 ;;  f               1   65[BANK0 ] struct .
 41090 ;; Return value:  Size  Location     Type
 41091 ;;                  2   55[BANK0 ] unsigned short 
 41092 ;; Registers used:
 41093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41094 ;; Tracked objects:
 41095 ;;		On entry : 0/0
 41096 ;;		On exit  : 0/0
 41097 ;;		Unchanged: 0/0
 41098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41099 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41100 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41101 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41102 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41103 ;;Total ram usage:       12 bytes
 41104 ;; Hardware stack levels used: 1
 41105 ;; Hardware stack levels required when called: 14
 41106 ;; This function calls:
 41107 ;;		_readNVM
 41108 ;; This function is called by:
 41109 ;;		_nerdCallback
 41110 ;;		_doNenrd
 41111 ;;		_reqevCallback
 41112 ;;		_findEvent
 41113 ;;		_rebuildHashtable
 41114 ;;		_sendProducedEvent
 41115 ;; This function uses a non-reentrant model
 41116 ;;
 41117                           
 41118                           	psect	text177
 41119   00937E                     __ptext177:
 41120                           	callstack 0
 41121   00937E                     _getNN:
 41122                           	callstack 13
 41123                           
 41124                           ; BSR set to: 1
 41125                           ;incstack = 0
 41126                           ;getNN@tableIndex stored from wreg
 41127   00937E  0100               	movlb	0	; () banked
 41128   009380  6FA2               	movwf	getNN@tableIndex& (0+255),b
 41129                           
 41130                           ;../../VLCBlib_PIC/event_teach_large.c: 1221:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1222:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1223:     Ev
      +                          entTableFlags f;;../../VLCBlib_PIC/event_teach_large.c: 1225:     f.asByte = (uint8_t)re
      +                          adNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 41131   009382  0100               	movlb	0	; () banked
 41132   009384  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41133   009386  6F99               	movwf	??_getNN& (0+255),b
 41134   009388  6B9A               	clrf	(??_getNN+1)& (0+255),b
 41135   00938A  3B99               	swapf	??_getNN& (0+255),f,b
 41136   00938C  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 41137   00938E  0EF0               	movlw	240
 41138   009390  179A               	andwf	(??_getNN+1)& (0+255),f,b
 41139   009392  5199               	movf	??_getNN& (0+255),w,b
 41140   009394  0B0F               	andlw	15
 41141   009396  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 41142   009398  0EF0               	movlw	240
 41143   00939A  1799               	andwf	??_getNN& (0+255),f,b
 41144   00939C  0E80               	movlw	128
 41145   00939E  2599               	addwf	??_getNN& (0+255),w,b
 41146   0093A0  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41147   0093A2  0EEF               	movlw	239
 41148   0093A4  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41149   0093A6  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41150   0093A8  C09B  F091         	movff	??_getNN+2,readNVM@index
 41151   0093AC  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41152   0093B0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41153   0093B2  0E01               	movlw	1
 41154   0093B4  ECD0  F059         	call	_readNVM
 41155   0093B8  0100               	movlb	0	; () banked
 41156   0093BA  5191               	movf	?_readNVM& (0+255),w,b
 41157   0093BC  6FA1               	movwf	getNN@f& (0+255),b
 41158                           
 41159                           ; BSR set to: 0
 41160                           ;../../VLCBlib_PIC/event_teach_large.c: 1226:     if (f.forceOwnNN) {
 41161   0093BE  ADA1               	btfss	getNN@f& (0+255),6,b
 41162   0093C0  D005               	goto	l18948
 41163                           
 41164                           ; BSR set to: 0
 41165                           ;../../VLCBlib_PIC/event_teach_large.c: 1227:         return nn.word;
 41166   0093C2  C0BD  F097         	movff	_nn,?_getNN
 41167   0093C6  C0BE  F098         	movff	_nn+1,?_getNN+1
 41168   0093CA  0012               	return	
 41169   0093CC                     l18948:
 41170                           
 41171                           ; BSR set to: 0
 41172                           ;../../VLCBlib_PIC/event_teach_large.c: 1229:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2);
 41173   0093CC  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41174   0093CE  0D10               	mullw	16
 41175   0093D0  CFF3 F099          	movff	prodl,??_getNN
 41176   0093D4  CFF4 F09A          	movff	prodh,??_getNN+1
 41177   0093D8  0E82               	movlw	130
 41178   0093DA  2599               	addwf	??_getNN& (0+255),w,b
 41179   0093DC  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41180   0093DE  0EEF               	movlw	239
 41181   0093E0  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41182   0093E2  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41183   0093E4  C09B  F091         	movff	??_getNN+2,readNVM@index
 41184   0093E8  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41185   0093EC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41186   0093EE  0E01               	movlw	1
 41187   0093F0  ECD0  F059         	call	_readNVM
 41188   0093F4  0100               	movlb	0	; () banked
 41189   0093F6  5191               	movf	?_readNVM& (0+255),w,b
 41190   0093F8  6F9F               	movwf	getNN@lo& (0+255),b
 41191   0093FA  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 41192                           
 41193                           ;../../VLCBlib_PIC/event_teach_large.c: 1230:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2 +1);
 41194   0093FC  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41195   0093FE  0D10               	mullw	16
 41196   009400  CFF3 F099          	movff	prodl,??_getNN
 41197   009404  CFF4 F09A          	movff	prodh,??_getNN+1
 41198   009408  0E83               	movlw	131
 41199   00940A  2599               	addwf	??_getNN& (0+255),w,b
 41200   00940C  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41201   00940E  0EEF               	movlw	239
 41202   009410  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41203   009412  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41204   009414  C09B  F091         	movff	??_getNN+2,readNVM@index
 41205   009418  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41206   00941C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41207   00941E  0E01               	movlw	1
 41208   009420  ECD0  F059         	call	_readNVM
 41209   009424  0100               	movlb	0	; () banked
 41210   009426  5191               	movf	?_readNVM& (0+255),w,b
 41211   009428  6F9D               	movwf	getNN@hi& (0+255),b
 41212   00942A  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 41213                           
 41214                           ; BSR set to: 0
 41215                           ;../../VLCBlib_PIC/event_teach_large.c: 1231:     return lo | (hi << 8);
 41216   00942C  519D               	movf	getNN@hi& (0+255),w,b
 41217   00942E  6F9A               	movwf	(??_getNN+1)& (0+255),b
 41218   009430  6B99               	clrf	??_getNN& (0+255),b
 41219   009432  519F               	movf	getNN@lo& (0+255),w,b
 41220   009434  1199               	iorwf	??_getNN& (0+255),w,b
 41221   009436  6F97               	movwf	?_getNN& (0+255),b
 41222   009438  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 41223   00943A  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 41224   00943C  6F98               	movwf	(?_getNN+1)& (0+255),b
 41225                           
 41226                           ; BSR set to: 0
 41227   00943E  0012               	return		;funcret
 41228   009440                     __end_of_getNN:
 41229                           	callstack 0
 41230                           
 41231 ;; *************** function _getHash *****************
 41232 ;; Defined at:
 41233 ;;		line 1314 in file "../../VLCBlib_PIC/event_teach_large.c"
 41234 ;; Parameters:    Size  Location     Type
 41235 ;;  nn              2   67[BANK0 ] unsigned short 
 41236 ;;  en              2   69[BANK0 ] unsigned short 
 41237 ;; Auto vars:     Size  Location     Type
 41238 ;;  hash            1   72[BANK0 ] unsigned char 
 41239 ;; Return value:  Size  Location     Type
 41240 ;;                  1    wreg      unsigned char 
 41241 ;; Registers used:
 41242 ;;		wreg, status,2, status,0, prodl, prodh
 41243 ;; Tracked objects:
 41244 ;;		On entry : 0/0
 41245 ;;		On exit  : 0/0
 41246 ;;		Unchanged: 0/0
 41247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41248 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41250 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41251 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41252 ;;Total ram usage:        6 bytes
 41253 ;; Hardware stack levels used: 1
 41254 ;; Hardware stack levels required when called: 12
 41255 ;; This function calls:
 41256 ;;		Nothing
 41257 ;; This function is called by:
 41258 ;;		_findEvent
 41259 ;;		_rebuildHashtable
 41260 ;; This function uses a non-reentrant model
 41261 ;;
 41262                           
 41263                           	psect	text178
 41264   00C428                     __ptext178:
 41265                           	callstack 0
 41266   00C428                     _getHash:
 41267                           	callstack 15
 41268                           
 41269                           ;../../VLCBlib_PIC/event_teach_large.c: 1315:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1317:     hash = (uint8_t)(nn ^ (nn >> 8U));
 41270                           
 41271                           ; BSR set to: 0
 41272                           ;incstack = 0
 41273   00C428  0100               	movlb	0	; () banked
 41274   00C42A  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 41275   00C42C  19A3               	xorwf	getHash@nn& (0+255),w,b
 41276   00C42E  6FA8               	movwf	getHash@hash& (0+255),b
 41277                           
 41278                           ; BSR set to: 0
 41279                           ;../../VLCBlib_PIC/event_teach_large.c: 1318:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 41280   00C430  51A6               	movf	(getHash@en+1)& (0+255),w,b
 41281   00C432  19A5               	xorwf	getHash@en& (0+255),w,b
 41282   00C434  6FA7               	movwf	??_getHash& (0+255),b
 41283   00C436  51A8               	movf	getHash@hash& (0+255),w,b
 41284   00C438  0D07               	mullw	7
 41285   00C43A  50F3               	movf	243,w,c
 41286   00C43C  25A7               	addwf	??_getHash& (0+255),w,b
 41287   00C43E  6FA8               	movwf	getHash@hash& (0+255),b
 41288                           
 41289                           ; BSR set to: 0
 41290                           ;../../VLCBlib_PIC/event_teach_large.c: 1320:     hash %= 32;
 41291   00C440  0E1F               	movlw	31
 41292   00C442  17A8               	andwf	getHash@hash& (0+255),f,b
 41293                           
 41294                           ; BSR set to: 0
 41295                           ;../../VLCBlib_PIC/event_teach_large.c: 1321:     return hash;
 41296   00C444  51A8               	movf	getHash@hash& (0+255),w,b
 41297                           
 41298                           ; BSR set to: 0
 41299   00C446  0012               	return		;funcret
 41300   00C448                     __end_of_getHash:
 41301                           	callstack 0
 41302                           
 41303 ;; *************** function _getEN *****************
 41304 ;; Defined at:
 41305 ;;		line 1241 in file "../../VLCBlib_PIC/event_teach_large.c"
 41306 ;; Parameters:    Size  Location     Type
 41307 ;;  tableIndex      1    wreg     unsigned char 
 41308 ;; Auto vars:     Size  Location     Type
 41309 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 41310 ;;  lo              2   63[BANK0 ] unsigned short 
 41311 ;;  hi              2   61[BANK0 ] unsigned short 
 41312 ;; Return value:  Size  Location     Type
 41313 ;;                  2   55[BANK0 ] unsigned short 
 41314 ;; Registers used:
 41315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41316 ;; Tracked objects:
 41317 ;;		On entry : 0/0
 41318 ;;		On exit  : 0/0
 41319 ;;		Unchanged: 0/0
 41320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41322 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41323 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41324 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41325 ;;Total ram usage:       11 bytes
 41326 ;; Hardware stack levels used: 1
 41327 ;; Hardware stack levels required when called: 14
 41328 ;; This function calls:
 41329 ;;		_readNVM
 41330 ;; This function is called by:
 41331 ;;		_nerdCallback
 41332 ;;		_doNenrd
 41333 ;;		_reqevCallback
 41334 ;;		_findEvent
 41335 ;;		_rebuildHashtable
 41336 ;;		_sendProducedEvent
 41337 ;; This function uses a non-reentrant model
 41338 ;;
 41339                           
 41340                           	psect	text179
 41341   00AB36                     __ptext179:
 41342                           	callstack 0
 41343   00AB36                     _getEN:
 41344                           	callstack 13
 41345                           
 41346                           ; BSR set to: 0
 41347                           ;incstack = 0
 41348                           ;getEN@tableIndex stored from wreg
 41349   00AB36  0100               	movlb	0	; () banked
 41350   00AB38  6FA1               	movwf	getEN@tableIndex& (0+255),b
 41351                           
 41352                           ;../../VLCBlib_PIC/event_teach_large.c: 1242:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1243:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1245:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 41353   00AB3A  0100               	movlb	0	; () banked
 41354   00AB3C  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41355   00AB3E  0D10               	mullw	16
 41356   00AB40  CFF3 F099          	movff	prodl,??_getEN
 41357   00AB44  CFF4 F09A          	movff	prodh,??_getEN+1
 41358   00AB48  0E84               	movlw	132
 41359   00AB4A  2599               	addwf	??_getEN& (0+255),w,b
 41360   00AB4C  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41361   00AB4E  0EEF               	movlw	239
 41362   00AB50  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41363   00AB52  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41364   00AB54  C09B  F091         	movff	??_getEN+2,readNVM@index
 41365   00AB58  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41366   00AB5C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41367   00AB5E  0E01               	movlw	1
 41368   00AB60  ECD0  F059         	call	_readNVM
 41369   00AB64  0100               	movlb	0	; () banked
 41370   00AB66  5191               	movf	?_readNVM& (0+255),w,b
 41371   00AB68  6F9F               	movwf	getEN@lo& (0+255),b
 41372   00AB6A  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 41373                           
 41374                           ;../../VLCBlib_PIC/event_teach_large.c: 1246:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+4 +1);
 41375   00AB6C  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41376   00AB6E  0D10               	mullw	16
 41377   00AB70  CFF3 F099          	movff	prodl,??_getEN
 41378   00AB74  CFF4 F09A          	movff	prodh,??_getEN+1
 41379   00AB78  0E85               	movlw	133
 41380   00AB7A  2599               	addwf	??_getEN& (0+255),w,b
 41381   00AB7C  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41382   00AB7E  0EEF               	movlw	239
 41383   00AB80  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41384   00AB82  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41385   00AB84  C09B  F091         	movff	??_getEN+2,readNVM@index
 41386   00AB88  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41387   00AB8C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41388   00AB8E  0E01               	movlw	1
 41389   00AB90  ECD0  F059         	call	_readNVM
 41390   00AB94  0100               	movlb	0	; () banked
 41391   00AB96  5191               	movf	?_readNVM& (0+255),w,b
 41392   00AB98  6F9D               	movwf	getEN@hi& (0+255),b
 41393   00AB9A  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 41394                           
 41395                           ; BSR set to: 0
 41396                           ;../../VLCBlib_PIC/event_teach_large.c: 1247:     return lo | (hi << 8);
 41397   00AB9C  519D               	movf	getEN@hi& (0+255),w,b
 41398   00AB9E  6F9A               	movwf	(??_getEN+1)& (0+255),b
 41399   00ABA0  6B99               	clrf	??_getEN& (0+255),b
 41400   00ABA2  519F               	movf	getEN@lo& (0+255),w,b
 41401   00ABA4  1199               	iorwf	??_getEN& (0+255),w,b
 41402   00ABA6  6F97               	movwf	?_getEN& (0+255),b
 41403   00ABA8  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 41404   00ABAA  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 41405   00ABAC  6F98               	movwf	(?_getEN+1)& (0+255),b
 41406                           
 41407                           ; BSR set to: 0
 41408   00ABAE  0012               	return		;funcret
 41409   00ABB0                     __end_of_getEN:
 41410                           	callstack 0
 41411                           
 41412 ;; *************** function _configIO *****************
 41413 ;; Defined at:
 41414 ;;		line 558 in file "../main.c"
 41415 ;; Parameters:    Size  Location     Type
 41416 ;;  i               1    wreg     unsigned char 
 41417 ;; Auto vars:     Size  Location     Type
 41418 ;;  i               1    9[BANK1 ] unsigned char 
 41419 ;;  type            1    8[BANK1 ] unsigned char 
 41420 ;;  action          1    7[BANK1 ] unsigned char 
 41421 ;; Return value:  Size  Location     Type
 41422 ;;                  1    wreg      void 
 41423 ;; Registers used:
 41424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41425 ;; Tracked objects:
 41426 ;;		On entry : 0/0
 41427 ;;		On exit  : 0/0
 41428 ;;		Unchanged: 0/0
 41429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41431 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41432 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41433 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41434 ;;Total ram usage:        8 bytes
 41435 ;; Hardware stack levels used: 1
 41436 ;; Hardware stack levels required when called: 18
 41437 ;; This function calls:
 41438 ;;		_getNV
 41439 ;;		_readNVM
 41440 ;;		_setDigitalOutput
 41441 ;;		_writeNVM
 41442 ;; This function is called by:
 41443 ;;		_setup
 41444 ;;		_setType
 41445 ;; This function uses a non-reentrant model
 41446 ;;
 41447                           
 41448                           	psect	text180
 41449   004CA4                     __ptext180:
 41450                           	callstack 0
 41451   004CA4                     _configIO:
 41452                           	callstack 11
 41453                           
 41454                           ; BSR set to: 0
 41455                           ;incstack = 0
 41456                           ;configIO@i stored from wreg
 41457   004CA4  0101               	movlb	1	; () banked
 41458   004CA6  6FC3               	movwf	configIO@i& (0+255),b
 41459                           
 41460                           ;../main.c: 559:     uint8_t action;;../main.c: 560:     uint8_t type;;../main.c: 562:  
      +                             if (i >= 16) return;
 41461   004CA8  0E0F               	movlw	15
 41462   004CAA  0101               	movlb	1	; () banked
 41463   004CAC  65C3               	cpfsgt	configIO@i& (0+255),b
 41464   004CAE  D001               	goto	l19710
 41465   004CB0  0012               	return	
 41466   004CB2                     l19710:
 41467                           
 41468                           ; BSR set to: 1
 41469                           ;../main.c: 565:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 41470   004CB2  51C3               	movf	configIO@i& (0+255),w,b
 41471   004CB4  0D07               	mullw	7
 41472   004CB6  50F3               	movf	243,w,c
 41473   004CB8  0F10               	addlw	16
 41474   004CBA  EC52  F05E         	call	_getNV
 41475   004CBE  0100               	movlb	0	; () banked
 41476   004CC0  518D               	movf	?_getNV& (0+255),w,b
 41477   004CC2  0101               	movlb	1	; () banked
 41478   004CC4  6FC2               	movwf	configIO@type& (0+255),b
 41479                           
 41480                           ;../main.c: 566:     switch (type) {
 41481   004CC6  D060               	goto	l19734
 41482   004CC8                     l19712:
 41483                           
 41484                           ; BSR set to: 1
 41485                           ;../main.c: 568:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 41486   004CC8  51C3               	movf	configIO@i& (0+255),w,b
 41487   004CCA  0D07               	mullw	7
 41488   004CCC  50F3               	movf	243,w,c
 41489   004CCE  0F11               	addlw	17
 41490   004CD0  EC52  F05E         	call	_getNV
 41491   004CD4  0100               	movlb	0	; () banked
 41492   004CD6  A58D               	btfss	?_getNV& (0+255),2,b
 41493   004CD8  D018               	goto	l19716
 41494                           
 41495                           ; BSR set to: 0
 41496                           ;../main.c: 569:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 41497   004CDA  0EDE               	movlw	222
 41498   004CDC  0101               	movlb	1	; () banked
 41499   004CDE  25C3               	addwf	configIO@i& (0+255),w,b
 41500   004CE0  6FBC               	movwf	??_configIO& (0+255),b
 41501   004CE2  6BBD               	clrf	(??_configIO+1)& (0+255),b
 41502   004CE4  0E03               	movlw	3
 41503   004CE6  23BD               	addwfc	(??_configIO+1)& (0+255),f,b
 41504   004CE8  C1BC  F091         	movff	??_configIO,readNVM@index
 41505   004CEC  C1BD  F092         	movff	??_configIO+1,readNVM@index+1
 41506   004CF0  0100               	movlb	0	; () banked
 41507   004CF2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41508   004CF4  0E00               	movlw	0
 41509   004CF6  ECD0  F059         	call	_readNVM
 41510   004CFA  0100               	movlb	0	; () banked
 41511   004CFC  5191               	movf	?_readNVM& (0+255),w,b
 41512   004CFE  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41513   004D00  0101               	movlb	1	; () banked
 41514   004D02  51C3               	movf	configIO@i& (0+255),w,b
 41515   004D04  EC4A  F052         	call	_setDigitalOutput
 41516                           
 41517                           ;../main.c: 570:             } else {
 41518   004D08  D122               	goto	l19768
 41519   004D0A                     l19716:
 41520                           
 41521                           ; BSR set to: 0
 41522                           ;../main.c: 571:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 41523   004D0A  0101               	movlb	1	; () banked
 41524   004D0C  51C3               	movf	configIO@i& (0+255),w,b
 41525   004D0E  0D07               	mullw	7
 41526   004D10  50F3               	movf	243,w,c
 41527   004D12  0F11               	addlw	17
 41528   004D14  EC52  F05E         	call	_getNV
 41529   004D18  0100               	movlb	0	; () banked
 41530   004D1A  BB8D               	btfsc	?_getNV& (0+255),5,b
 41531   004D1C  D005               	goto	l19720
 41532                           
 41533                           ; BSR set to: 0
 41534   004D1E  0E00               	movlw	0
 41535   004D20  0101               	movlb	1	; () banked
 41536   004D22  6FC0               	movwf	(_configIO$746+1)& (0+255),b
 41537   004D24  0E02               	movlw	2
 41538   004D26  D004               	goto	L24
 41539   004D28                     l19720:
 41540                           
 41541                           ; BSR set to: 0
 41542   004D28  0E00               	movlw	0
 41543   004D2A  0101               	movlb	1	; () banked
 41544   004D2C  6FC0               	movwf	(_configIO$746+1)& (0+255),b
 41545   004D2E  0E01               	movlw	1
 41546   004D30                     L24:
 41547   004D30  6FBF               	movwf	_configIO$746& (0+255),b
 41548                           
 41549                           ; BSR set to: 1
 41550   004D32  C1BF  F1C1         	movff	_configIO$746,configIO@action
 41551                           
 41552                           ; BSR set to: 1
 41553                           ;../main.c: 572:                 setDigitalOutput(i, action);
 41554   004D36  C1C1  F097         	movff	configIO@action,setDigitalOutput@state
 41555   004D3A  51C3               	movf	configIO@i& (0+255),w,b
 41556   004D3C  EC4A  F052         	call	_setDigitalOutput
 41557                           
 41558                           ;../main.c: 574:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 41559   004D40  0EDE               	movlw	222
 41560   004D42  0101               	movlb	1	; () banked
 41561   004D44  25C3               	addwf	configIO@i& (0+255),w,b
 41562   004D46  6FBC               	movwf	??_configIO& (0+255),b
 41563   004D48  6BBD               	clrf	(??_configIO+1)& (0+255),b
 41564   004D4A  0E03               	movlw	3
 41565   004D4C  23BD               	addwfc	(??_configIO+1)& (0+255),f,b
 41566   004D4E  C1BC  F0A4         	movff	??_configIO,writeNVM@index
 41567   004D52  C1BD  F0A5         	movff	??_configIO+1,writeNVM@index+1
 41568   004D56  0100               	movlb	0	; () banked
 41569   004D58  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 41570   004D5A  C1C1  F0A7         	movff	configIO@action,writeNVM@value
 41571   004D5E  0E00               	movlw	0
 41572   004D60  EC60  F05C         	call	_writeNVM
 41573   004D64  D0F4               	goto	l19768
 41574   004D66                     l19728:
 41575                           
 41576                           ; BSR set to: 1
 41577                           ;../main.c: 583:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41578   004D66  51C3               	movf	configIO@i& (0+255),w,b
 41579   004D68  0D07               	mullw	7
 41580   004D6A  50F3               	movf	243,w,c
 41581   004D6C  0F11               	addlw	17
 41582   004D6E  EC52  F05E         	call	_getNV
 41583   004D72  0100               	movlb	0	; () banked
 41584   004D74  518D               	movf	?_getNV& (0+255),w,b
 41585   004D76  0B10               	andlw	16
 41586   004D78  0101               	movlb	1	; () banked
 41587   004D7A  6FBE               	movwf	_configIO$8086& (0+255),b
 41588                           
 41589                           ; BSR set to: 1
 41590                           ;../main.c: 583:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41591   004D7C  C1BE  F097         	movff	_configIO$8086,setDigitalOutput@state
 41592   004D80  51C3               	movf	configIO@i& (0+255),w,b
 41593   004D82  EC4A  F052         	call	_setDigitalOutput
 41594                           
 41595                           ;../main.c: 584:             break;
 41596   004D86  D0E3               	goto	l19768
 41597   004D88                     l19734:
 41598                           
 41599                           ; BSR set to: 1
 41600   004D88  51C2               	movf	configIO@type& (0+255),w,b
 41601                           
 41602                           ; Switch size 1, requested type "simple"
 41603                           ; Number of cases is 3, Range of values is 1 to 3
 41604                           ; switch strategies available:
 41605                           ; Name         Instructions Cycles
 41606                           ; simple_byte           10     6 (average)
 41607                           ;	Chosen strategy is simple_byte
 41608   004D8A  0A01               	xorlw	1	; case 1
 41609   004D8C  B4D8               	btfsc	status,2,c
 41610   004D8E  D79C               	goto	l19712
 41611   004D90  0A03               	xorlw	3	; case 2
 41612   004D92  B4D8               	btfsc	status,2,c
 41613   004D94  D7E8               	goto	l19728
 41614   004D96  0A01               	xorlw	1	; case 3
 41615   004D98  B4D8               	btfsc	status,2,c
 41616   004D9A  D7E5               	goto	l19728
 41617   004D9C  D0D8               	goto	l19768
 41618   004D9E                     l19736:
 41619                           
 41620                           ; BSR set to: 1
 41621                           ;../main.c: 598:             if ((type == 0) || (type == 5) || (type == 6)) {
 41622   004D9E  51C2               	movf	configIO@type& (0+255),w,b
 41623   004DA0  B4D8               	btfsc	status,2,c
 41624   004DA2  D008               	goto	u19630
 41625                           
 41626                           ; BSR set to: 1
 41627   004DA4  0E05               	movlw	5
 41628   004DA6  19C2               	xorwf	configIO@type& (0+255),w,b
 41629   004DA8  B4D8               	btfsc	status,2,c
 41630   004DAA  D004               	goto	u19630
 41631                           
 41632                           ; BSR set to: 1
 41633   004DAC  0E06               	movlw	6
 41634   004DAE  19C2               	xorwf	configIO@type& (0+255),w,b
 41635   004DB0  A4D8               	btfss	status,2,c
 41636   004DB2  D01E               	goto	l19744
 41637   004DB4                     u19630:
 41638                           
 41639                           ; BSR set to: 1
 41640                           ;../main.c: 599:                 TRISA |= (1 << configs[i].no);
 41641   004DB4  51C3               	movf	configIO@i& (0+255),w,b
 41642   004DB6  0D04               	mullw	4
 41643   004DB8  0E02               	movlw	2
 41644   004DBA  26F3               	addwf	243,f,c
 41645   004DBC  0E00               	movlw	0
 41646   004DBE  22F4               	addwfc	244,f,c
 41647   004DC0  0E29               	movlw	low _configs
 41648   004DC2  24F3               	addwf	243,w,c
 41649   004DC4  6EF6               	movwf	tblptrl,c
 41650   004DC6  0EEE               	movlw	high _configs
 41651   004DC8  20F4               	addwfc	244,w,c
 41652   004DCA  6EF7               	movwf	tblptrh,c
 41653   004DCC                     	if	1	;There are 3 active tblptr bytes
 41654   004DCC  6AF8               	clrf	tblptru,c
 41655   004DCE  0E00               	movlw	low (__mediumconst shr (0+16))
 41656   004DD0  22F8               	addwfc	tblptru,f,c
 41657   004DD2                     	endif
 41658   004DD2  0008               	tblrd		*
 41659   004DD4  CFF5 F1BC          	movff	tablat,??_configIO
 41660   004DD8  0E01               	movlw	1
 41661   004DDA  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41662   004DDC  2BBC               	incf	??_configIO& (0+255),f,b
 41663   004DDE  D002               	goto	u19644
 41664   004DE0                     u19645:
 41665   004DE0  90D8               	bcf	status,0,c
 41666   004DE2  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41667   004DE4                     u19644:
 41668   004DE4  2FBC               	decfsz	??_configIO& (0+255),f,b
 41669   004DE6  D7FC               	goto	u19645
 41670   004DE8  0101               	movlb	1	; () banked
 41671   004DEA  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41672   004DEC  1292               	iorwf	146,f,c	;volatile
 41673                           
 41674                           ;../main.c: 600:             } else {
 41675   004DEE  0012               	return	
 41676   004DF0                     l19744:
 41677                           
 41678                           ; BSR set to: 1
 41679                           ;../main.c: 601:                 TRISA &= ~(1 << configs[i].no);
 41680   004DF0  51C3               	movf	configIO@i& (0+255),w,b
 41681   004DF2  0D04               	mullw	4
 41682   004DF4  0E02               	movlw	2
 41683   004DF6  26F3               	addwf	243,f,c
 41684   004DF8  0E00               	movlw	0
 41685   004DFA  22F4               	addwfc	244,f,c
 41686   004DFC  0E29               	movlw	low _configs
 41687   004DFE  24F3               	addwf	243,w,c
 41688   004E00  6EF6               	movwf	tblptrl,c
 41689   004E02  0EEE               	movlw	high _configs
 41690   004E04  20F4               	addwfc	244,w,c
 41691   004E06  6EF7               	movwf	tblptrh,c
 41692   004E08                     	if	1	;There are 3 active tblptr bytes
 41693   004E08  6AF8               	clrf	tblptru,c
 41694   004E0A  0E00               	movlw	low (__mediumconst shr (0+16))
 41695   004E0C  22F8               	addwfc	tblptru,f,c
 41696   004E0E                     	endif
 41697   004E0E  0008               	tblrd		*
 41698   004E10  CFF5 F1BC          	movff	tablat,??_configIO
 41699   004E14  0E01               	movlw	1
 41700   004E16  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41701   004E18  2BBC               	incf	??_configIO& (0+255),f,b
 41702   004E1A  D002               	goto	u19654
 41703   004E1C                     u19655:
 41704   004E1C  90D8               	bcf	status,0,c
 41705   004E1E  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41706   004E20                     u19654:
 41707   004E20  2FBC               	decfsz	??_configIO& (0+255),f,b
 41708   004E22  D7FC               	goto	u19655
 41709   004E24  0101               	movlb	1	; () banked
 41710   004E26  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41711   004E28  0AFF               	xorlw	255
 41712   004E2A  1692               	andwf	146,f,c	;volatile
 41713   004E2C  0012               	return	
 41714   004E2E                     l19746:
 41715                           
 41716                           ; BSR set to: 1
 41717                           ;../main.c: 605:             if ((type == 0) || (type == 5) || (type == 6)) {
 41718   004E2E  51C2               	movf	configIO@type& (0+255),w,b
 41719   004E30  B4D8               	btfsc	status,2,c
 41720   004E32  D008               	goto	u19680
 41721                           
 41722                           ; BSR set to: 1
 41723   004E34  0E05               	movlw	5
 41724   004E36  19C2               	xorwf	configIO@type& (0+255),w,b
 41725   004E38  B4D8               	btfsc	status,2,c
 41726   004E3A  D004               	goto	u19680
 41727                           
 41728                           ; BSR set to: 1
 41729   004E3C  0E06               	movlw	6
 41730   004E3E  19C2               	xorwf	configIO@type& (0+255),w,b
 41731   004E40  A4D8               	btfss	status,2,c
 41732   004E42  D01E               	goto	l19754
 41733   004E44                     u19680:
 41734                           
 41735                           ; BSR set to: 1
 41736                           ;../main.c: 606:                 TRISB |= (1 << configs[i].no);
 41737   004E44  51C3               	movf	configIO@i& (0+255),w,b
 41738   004E46  0D04               	mullw	4
 41739   004E48  0E02               	movlw	2
 41740   004E4A  26F3               	addwf	243,f,c
 41741   004E4C  0E00               	movlw	0
 41742   004E4E  22F4               	addwfc	244,f,c
 41743   004E50  0E29               	movlw	low _configs
 41744   004E52  24F3               	addwf	243,w,c
 41745   004E54  6EF6               	movwf	tblptrl,c
 41746   004E56  0EEE               	movlw	high _configs
 41747   004E58  20F4               	addwfc	244,w,c
 41748   004E5A  6EF7               	movwf	tblptrh,c
 41749   004E5C                     	if	1	;There are 3 active tblptr bytes
 41750   004E5C  6AF8               	clrf	tblptru,c
 41751   004E5E  0E00               	movlw	low (__mediumconst shr (0+16))
 41752   004E60  22F8               	addwfc	tblptru,f,c
 41753   004E62                     	endif
 41754   004E62  0008               	tblrd		*
 41755   004E64  CFF5 F1BC          	movff	tablat,??_configIO
 41756   004E68  0E01               	movlw	1
 41757   004E6A  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41758   004E6C  2BBC               	incf	??_configIO& (0+255),f,b
 41759   004E6E  D002               	goto	u19694
 41760   004E70                     u19695:
 41761   004E70  90D8               	bcf	status,0,c
 41762   004E72  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41763   004E74                     u19694:
 41764   004E74  2FBC               	decfsz	??_configIO& (0+255),f,b
 41765   004E76  D7FC               	goto	u19695
 41766   004E78  0101               	movlb	1	; () banked
 41767   004E7A  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41768   004E7C  1293               	iorwf	147,f,c	;volatile
 41769                           
 41770                           ;../main.c: 607:             } else {
 41771   004E7E  0012               	return	
 41772   004E80                     l19754:
 41773                           
 41774                           ; BSR set to: 1
 41775                           ;../main.c: 608:                 TRISB &= ~(1 << configs[i].no);
 41776   004E80  51C3               	movf	configIO@i& (0+255),w,b
 41777   004E82  0D04               	mullw	4
 41778   004E84  0E02               	movlw	2
 41779   004E86  26F3               	addwf	243,f,c
 41780   004E88  0E00               	movlw	0
 41781   004E8A  22F4               	addwfc	244,f,c
 41782   004E8C  0E29               	movlw	low _configs
 41783   004E8E  24F3               	addwf	243,w,c
 41784   004E90  6EF6               	movwf	tblptrl,c
 41785   004E92  0EEE               	movlw	high _configs
 41786   004E94  20F4               	addwfc	244,w,c
 41787   004E96  6EF7               	movwf	tblptrh,c
 41788   004E98                     	if	1	;There are 3 active tblptr bytes
 41789   004E98  6AF8               	clrf	tblptru,c
 41790   004E9A  0E00               	movlw	low (__mediumconst shr (0+16))
 41791   004E9C  22F8               	addwfc	tblptru,f,c
 41792   004E9E                     	endif
 41793   004E9E  0008               	tblrd		*
 41794   004EA0  CFF5 F1BC          	movff	tablat,??_configIO
 41795   004EA4  0E01               	movlw	1
 41796   004EA6  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41797   004EA8  2BBC               	incf	??_configIO& (0+255),f,b
 41798   004EAA  D002               	goto	u19704
 41799   004EAC                     u19705:
 41800   004EAC  90D8               	bcf	status,0,c
 41801   004EAE  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41802   004EB0                     u19704:
 41803   004EB0  2FBC               	decfsz	??_configIO& (0+255),f,b
 41804   004EB2  D7FC               	goto	u19705
 41805   004EB4  0101               	movlb	1	; () banked
 41806   004EB6  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41807   004EB8  0AFF               	xorlw	255
 41808   004EBA  1693               	andwf	147,f,c	;volatile
 41809   004EBC  0012               	return	
 41810   004EBE                     l19756:
 41811                           
 41812                           ; BSR set to: 1
 41813                           ;../main.c: 612:             if ((type == 0) || (type == 5) || (type == 6)) {
 41814   004EBE  51C2               	movf	configIO@type& (0+255),w,b
 41815   004EC0  B4D8               	btfsc	status,2,c
 41816   004EC2  D008               	goto	u19730
 41817                           
 41818                           ; BSR set to: 1
 41819   004EC4  0E05               	movlw	5
 41820   004EC6  19C2               	xorwf	configIO@type& (0+255),w,b
 41821   004EC8  B4D8               	btfsc	status,2,c
 41822   004ECA  D004               	goto	u19730
 41823                           
 41824                           ; BSR set to: 1
 41825   004ECC  0E06               	movlw	6
 41826   004ECE  19C2               	xorwf	configIO@type& (0+255),w,b
 41827   004ED0  A4D8               	btfss	status,2,c
 41828   004ED2  D01E               	goto	l19764
 41829   004ED4                     u19730:
 41830                           
 41831                           ; BSR set to: 1
 41832                           ;../main.c: 613:                 TRISC |= (1 << configs[i].no);
 41833   004ED4  51C3               	movf	configIO@i& (0+255),w,b
 41834   004ED6  0D04               	mullw	4
 41835   004ED8  0E02               	movlw	2
 41836   004EDA  26F3               	addwf	243,f,c
 41837   004EDC  0E00               	movlw	0
 41838   004EDE  22F4               	addwfc	244,f,c
 41839   004EE0  0E29               	movlw	low _configs
 41840   004EE2  24F3               	addwf	243,w,c
 41841   004EE4  6EF6               	movwf	tblptrl,c
 41842   004EE6  0EEE               	movlw	high _configs
 41843   004EE8  20F4               	addwfc	244,w,c
 41844   004EEA  6EF7               	movwf	tblptrh,c
 41845   004EEC                     	if	1	;There are 3 active tblptr bytes
 41846   004EEC  6AF8               	clrf	tblptru,c
 41847   004EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 41848   004EF0  22F8               	addwfc	tblptru,f,c
 41849   004EF2                     	endif
 41850   004EF2  0008               	tblrd		*
 41851   004EF4  CFF5 F1BC          	movff	tablat,??_configIO
 41852   004EF8  0E01               	movlw	1
 41853   004EFA  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41854   004EFC  2BBC               	incf	??_configIO& (0+255),f,b
 41855   004EFE  D002               	goto	u19744
 41856   004F00                     u19745:
 41857   004F00  90D8               	bcf	status,0,c
 41858   004F02  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41859   004F04                     u19744:
 41860   004F04  2FBC               	decfsz	??_configIO& (0+255),f,b
 41861   004F06  D7FC               	goto	u19745
 41862   004F08  0101               	movlb	1	; () banked
 41863   004F0A  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41864   004F0C  1294               	iorwf	148,f,c	;volatile
 41865                           
 41866                           ;../main.c: 614:             } else {
 41867   004F0E  0012               	return	
 41868   004F10                     l19764:
 41869                           
 41870                           ; BSR set to: 1
 41871                           ;../main.c: 615:                 TRISC &= ~(1 << configs[i].no);
 41872   004F10  51C3               	movf	configIO@i& (0+255),w,b
 41873   004F12  0D04               	mullw	4
 41874   004F14  0E02               	movlw	2
 41875   004F16  26F3               	addwf	243,f,c
 41876   004F18  0E00               	movlw	0
 41877   004F1A  22F4               	addwfc	244,f,c
 41878   004F1C  0E29               	movlw	low _configs
 41879   004F1E  24F3               	addwf	243,w,c
 41880   004F20  6EF6               	movwf	tblptrl,c
 41881   004F22  0EEE               	movlw	high _configs
 41882   004F24  20F4               	addwfc	244,w,c
 41883   004F26  6EF7               	movwf	tblptrh,c
 41884   004F28                     	if	1	;There are 3 active tblptr bytes
 41885   004F28  6AF8               	clrf	tblptru,c
 41886   004F2A  0E00               	movlw	low (__mediumconst shr (0+16))
 41887   004F2C  22F8               	addwfc	tblptru,f,c
 41888   004F2E                     	endif
 41889   004F2E  0008               	tblrd		*
 41890   004F30  CFF5 F1BC          	movff	tablat,??_configIO
 41891   004F34  0E01               	movlw	1
 41892   004F36  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41893   004F38  2BBC               	incf	??_configIO& (0+255),f,b
 41894   004F3A  D002               	goto	u19754
 41895   004F3C                     u19755:
 41896   004F3C  90D8               	bcf	status,0,c
 41897   004F3E  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41898   004F40                     u19754:
 41899   004F40  2FBC               	decfsz	??_configIO& (0+255),f,b
 41900   004F42  D7FC               	goto	u19755
 41901   004F44  0101               	movlb	1	; () banked
 41902   004F46  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41903   004F48  0AFF               	xorlw	255
 41904   004F4A  1694               	andwf	148,f,c	;volatile
 41905   004F4C  0012               	return	
 41906   004F4E                     l19768:
 41907   004F4E  0101               	movlb	1	; () banked
 41908   004F50  51C3               	movf	configIO@i& (0+255),w,b
 41909   004F52  0D04               	mullw	4
 41910   004F54  0E01               	movlw	1
 41911   004F56  26F3               	addwf	243,f,c
 41912   004F58  0E00               	movlw	0
 41913   004F5A  22F4               	addwfc	244,f,c
 41914   004F5C  0E29               	movlw	low _configs
 41915   004F5E  24F3               	addwf	243,w,c
 41916   004F60  6EF6               	movwf	tblptrl,c
 41917   004F62  0EEE               	movlw	high _configs
 41918   004F64  20F4               	addwfc	244,w,c
 41919   004F66  6EF7               	movwf	tblptrh,c
 41920   004F68                     	if	1	;There are 3 active tblptr bytes
 41921   004F68  6AF8               	clrf	tblptru,c
 41922   004F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 41923   004F6C  22F8               	addwfc	tblptru,f,c
 41924   004F6E                     	endif
 41925   004F6E  0008               	tblrd		*
 41926   004F70  50F5               	movf	tablat,w,c
 41927                           
 41928                           ; Switch size 1, requested type "simple"
 41929                           ; Number of cases is 3, Range of values is 65 to 67
 41930                           ; switch strategies available:
 41931                           ; Name         Instructions Cycles
 41932                           ; simple_byte           10     6 (average)
 41933                           ;	Chosen strategy is simple_byte
 41934   004F72  0A41               	xorlw	65	; case 65
 41935   004F74  B4D8               	btfsc	status,2,c
 41936   004F76  D713               	goto	l19736
 41937   004F78  0A03               	xorlw	3	; case 66
 41938   004F7A  B4D8               	btfsc	status,2,c
 41939   004F7C  D758               	goto	l19746
 41940   004F7E  0A01               	xorlw	1	; case 67
 41941   004F80  A4D8               	btfss	status,2,c
 41942   004F82  0012               	return	
 41943   004F84  D79C               	goto	l19756
 41944   004F86                     __end_of_configIO:
 41945                           	callstack 0
 41946                           
 41947 ;; *************** function _writeNVM *****************
 41948 ;; Defined at:
 41949 ;;		line 533 in file "../../VLCBlib_PIC/nvm.c"
 41950 ;; Parameters:    Size  Location     Type
 41951 ;;  type            1    wreg     enum E12738
 41952 ;;  index           3   68[BANK0 ] unsigned um
 41953 ;;  value           1   71[BANK0 ] unsigned char 
 41954 ;; Auto vars:     Size  Location     Type
 41955 ;;  type            1   72[BANK0 ] enum E12738
 41956 ;; Return value:  Size  Location     Type
 41957 ;;                  1    wreg      unsigned char 
 41958 ;; Registers used:
 41959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41960 ;; Tracked objects:
 41961 ;;		On entry : 0/0
 41962 ;;		On exit  : 0/0
 41963 ;;		Unchanged: 0/0
 41964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41967 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41968 ;;      Totals:         0       5       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41969 ;;Total ram usage:        7 bytes
 41970 ;; Hardware stack levels used: 1
 41971 ;; Hardware stack levels required when called: 17
 41972 ;; This function calls:
 41973 ;;		_EEPROM_Write
 41974 ;;		_FLASH_Write
 41975 ;; This function is called by:
 41976 ;;		_configIO
 41977 ;;		_startDigitalOutput
 41978 ;;		_inputScan
 41979 ;;		_pollServos
 41980 ;;		_bootProcessMessage
 41981 ;;		_mnsFactoryReset
 41982 ;;		_mnsProcessMessage
 41983 ;;		_mnsPoll
 41984 ;;		_nvFactoryReset
 41985 ;;		_saveNV
 41986 ;;		_setNV
 41987 ;;		_factoryReset
 41988 ;;		_canFactoryReset
 41989 ;;		_setNewCanId
 41990 ;;		_clearAllEvents
 41991 ;;		_removeTableEntry
 41992 ;;		_addEvent
 41993 ;;		_writeEv
 41994 ;; This function uses a non-reentrant model
 41995 ;;
 41996                           
 41997                           	psect	text181
 41998   00B8C0                     __ptext181:
 41999                           	callstack 0
 42000   00B8C0                     _writeNVM:
 42001                           	callstack 11
 42002                           
 42003                           ; BSR set to: 1
 42004                           ;incstack = 0
 42005                           ;writeNVM@type stored from wreg
 42006   00B8C0  0100               	movlb	0	; () banked
 42007   00B8C2  6FA8               	movwf	writeNVM@type& (0+255),b
 42008                           
 42009                           ;../../VLCBlib_PIC/nvm.c: 534:     switch(type) {
 42010   00B8C4  D012               	goto	l18982
 42011   00B8C6                     l18972:
 42012                           
 42013                           ; BSR set to: 1
 42014                           ;../../VLCBlib_PIC/nvm.c: 536:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 42015   00B8C6  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 42016   00B8CA  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 42017   00B8CE  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 42018   00B8D2  EC42  F058         	call	_EEPROM_Write	;wreg free
 42019   00B8D6  0012               	return	
 42020   00B8D8                     l18976:
 42021                           
 42022                           ; BSR set to: 1
 42023                           ;../../VLCBlib_PIC/nvm.c: 538:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 42024   00B8D8  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 42025   00B8DC  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 42026   00B8E0  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 42027   00B8E4  EC63  F047         	call	_FLASH_Write	;wreg free
 42028   00B8E8  0012               	return	
 42029   00B8EA                     l18982:
 42030   00B8EA  0100               	movlb	0	; () banked
 42031   00B8EC  51A8               	movf	writeNVM@type& (0+255),w,b
 42032   00B8EE  0101               	movlb	1	; () banked
 42033   00B8F0  6FBA               	movwf	??_writeNVM& (0+255),b
 42034   00B8F2  6BBB               	clrf	(??_writeNVM+1)& (0+255),b
 42035                           
 42036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42037                           ; Switch size 1, requested type "simple"
 42038                           ; Number of cases is 1, Range of values is 0 to 0
 42039                           ; switch strategies available:
 42040                           ; Name         Instructions Cycles
 42041                           ; simple_byte            4     3 (average)
 42042                           ;	Chosen strategy is simple_byte
 42043   00B8F4  51BB               	movf	(??_writeNVM+1)& (0+255),w,b
 42044   00B8F6  0A00               	xorlw	0	; case 0
 42045   00B8F8  A4D8               	btfss	status,2,c
 42046   00B8FA  0012               	return	
 42047                           
 42048                           ; BSR set to: 1
 42049                           ; Switch size 1, requested type "simple"
 42050                           ; Number of cases is 2, Range of values is 0 to 1
 42051                           ; switch strategies available:
 42052                           ; Name         Instructions Cycles
 42053                           ; simple_byte            7     4 (average)
 42054                           ;	Chosen strategy is simple_byte
 42055   00B8FC  51BA               	movf	??_writeNVM& (0+255),w,b
 42056   00B8FE  0A00               	xorlw	0	; case 0
 42057   00B900  B4D8               	btfsc	status,2,c
 42058   00B902  D7E1               	goto	l18972
 42059   00B904  0A01               	xorlw	1	; case 1
 42060   00B906  A4D8               	btfss	status,2,c
 42061   00B908  0012               	return	
 42062   00B90A  D7E6               	goto	l18976
 42063   00B90C                     __end_of_writeNVM:
 42064                           	callstack 0
 42065                           
 42066 ;; *************** function _FLASH_Write *****************
 42067 ;; Defined at:
 42068 ;;		line 487 in file "../../VLCBlib_PIC/nvm.c"
 42069 ;; Parameters:    Size  Location     Type
 42070 ;;  index           2   48[BANK0 ] unsigned short 
 42071 ;;  value           1   50[BANK0 ] unsigned char 
 42072 ;; Auto vars:     Size  Location     Type
 42073 ;;  oldValue        1    0        unsigned char 
 42074 ;; Return value:  Size  Location     Type
 42075 ;;                  1    wreg      unsigned char 
 42076 ;; Registers used:
 42077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42078 ;; Tracked objects:
 42079 ;;		On entry : 0/0
 42080 ;;		On exit  : 0/0
 42081 ;;		Unchanged: 0/0
 42082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42083 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42085 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42086 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42087 ;;Total ram usage:        7 bytes
 42088 ;; Hardware stack levels used: 1
 42089 ;; Hardware stack levels required when called: 16
 42090 ;; This function calls:
 42091 ;;		_eraseFlashBlock
 42092 ;;		_flushFlashBlock
 42093 ;;		_loadFlashBlock
 42094 ;; This function is called by:
 42095 ;;		_writeNVM
 42096 ;; This function uses a non-reentrant model
 42097 ;;
 42098                           
 42099                           	psect	text182
 42100   008EC6                     __ptext182:
 42101                           	callstack 0
 42102   008EC6                     _FLASH_Write:
 42103                           	callstack 11
 42104                           
 42105                           ;../../VLCBlib_PIC/nvm.c: 488:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 503:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 42106                           
 42107                           ;incstack = 0
 42108   008EC6  0EC0               	movlw	192
 42109   008EC8  0100               	movlb	0	; () banked
 42110   008ECA  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42111   008ECC  6F93               	movwf	??_FLASH_Write& (0+255),b
 42112   008ECE  0EFF               	movlw	255
 42113   008ED0  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42114   008ED2  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42115   008ED4  51D1               	movf	_flashBlock& (0+255),w,b
 42116   008ED6  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 42117   008ED8  E104               	bnz	u18520
 42118   008EDA  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 42119   008EDC  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 42120   008EDE  B4D8               	btfsc	status,2,c
 42121   008EE0  D015               	goto	l18930
 42122   008EE2                     u18520:
 42123                           
 42124                           ; BSR set to: 0
 42125                           ;../../VLCBlib_PIC/nvm.c: 504:         if (flashBlock != 0) {
 42126   008EE2  51D1               	movf	_flashBlock& (0+255),w,b
 42127   008EE4  11D2               	iorwf	(_flashBlock+1)& (0+255),w,b
 42128   008EE6  B4D8               	btfsc	status,2,c
 42129   008EE8  D008               	goto	l18926
 42130                           
 42131                           ; BSR set to: 0
 42132                           ;../../VLCBlib_PIC/nvm.c: 506:             if (flashFlags.eraseNeeded) {
 42133   008EEA  A3C2               	btfss	_flashFlags& (0+255),1,b
 42134   008EEC  D004               	goto	l18924
 42135                           
 42136                           ; BSR set to: 0
 42137                           ;../../VLCBlib_PIC/nvm.c: 507:                 eraseFlashBlock();
 42138   008EEE  EC86  F05C         	call	_eraseFlashBlock	;wreg free
 42139                           
 42140                           ;../../VLCBlib_PIC/nvm.c: 508:                 flashFlags.eraseNeeded = 0;
 42141   008EF2  0100               	movlb	0	; () banked
 42142   008EF4  93C2               	bcf	_flashFlags& (0+255),1,b
 42143   008EF6                     l18924:
 42144                           
 42145                           ; BSR set to: 0
 42146                           ;../../VLCBlib_PIC/nvm.c: 511:             flushFlashBlock();
 42147   008EF6  EC5F  F053         	call	_flushFlashBlock	;wreg free
 42148   008EFA                     l18926:
 42149                           
 42150                           ;../../VLCBlib_PIC/nvm.c: 515:         flashBlock = (index&(~((flash_address_t)64 -1)));
 42151   008EFA  0EC0               	movlw	192
 42152   008EFC  0100               	movlb	0	; () banked
 42153   008EFE  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42154   008F00  6FD1               	movwf	_flashBlock& (0+255),b
 42155   008F02  0EFF               	movlw	255
 42156   008F04  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42157   008F06  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 42158                           
 42159                           ; BSR set to: 0
 42160                           ;../../VLCBlib_PIC/nvm.c: 516:         loadFlashBlock();
 42161   008F08  EC41  F05D         	call	_loadFlashBlock	;wreg free
 42162   008F0C                     l18930:
 42163                           
 42164                           ;../../VLCBlib_PIC/nvm.c: 518:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 42165   008F0C  0E3F               	movlw	63
 42166   008F0E  0100               	movlb	0	; () banked
 42167   008F10  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42168   008F12  6F93               	movwf	??_FLASH_Write& (0+255),b
 42169   008F14  0E00               	movlw	0
 42170   008F16  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42171   008F18  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42172   008F1A  0E48               	movlw	low _flashBuffer
 42173   008F1C  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42174   008F1E  6ED9               	movwf	fsr2l,c
 42175   008F20  0E03               	movlw	high _flashBuffer
 42176   008F22  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42177   008F24  6EDA               	movwf	fsr2h,c
 42178   008F26  50DF               	movf	indf2,w,c
 42179   008F28  0AFF               	xorlw	255
 42180   008F2A  1592               	andwf	FLASH_Write@value& (0+255),w,b
 42181   008F2C  0900               	iorlw	0
 42182   008F2E  B4D8               	btfsc	status,2,c
 42183   008F30  D003               	goto	u18550
 42184   008F32  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42185   008F34  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 42186   008F36  D002               	goto	u18568
 42187   008F38                     u18550:
 42188   008F38  0100               	movlb	0	; () banked
 42189   008F3A  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42190   008F3C                     u18568:
 42191   008F3C  31C2               	rrcf	_flashFlags& (0+255),w,b
 42192   008F3E  0B01               	andlw	1
 42193   008F40  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 42194   008F42  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 42195   008F44  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 42196   008F46  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 42197   008F48  51C2               	movf	_flashFlags& (0+255),w,b
 42198   008F4A  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42199   008F4C  0BFD               	andlw	-3
 42200   008F4E  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42201   008F50  6FC2               	movwf	_flashFlags& (0+255),b
 42202                           
 42203                           ; BSR set to: 0
 42204                           ;../../VLCBlib_PIC/nvm.c: 519:     if (flashBuffer[(index&(64 -1))] != value) {
 42205   008F52  0E3F               	movlw	63
 42206   008F54  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42207   008F56  6F93               	movwf	??_FLASH_Write& (0+255),b
 42208   008F58  0E00               	movlw	0
 42209   008F5A  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42210   008F5C  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42211   008F5E  0E48               	movlw	low _flashBuffer
 42212   008F60  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42213   008F62  6ED9               	movwf	fsr2l,c
 42214   008F64  0E03               	movlw	high _flashBuffer
 42215   008F66  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42216   008F68  6EDA               	movwf	fsr2h,c
 42217   008F6A  5192               	movf	FLASH_Write@value& (0+255),w,b
 42218   008F6C  18DE               	xorwf	postinc2,w,c
 42219   008F6E  B4D8               	btfsc	status,2,c
 42220   008F70  D00F               	goto	l18938
 42221                           
 42222                           ; BSR set to: 0
 42223                           ;../../VLCBlib_PIC/nvm.c: 520:         flashFlags.writeNeeded = 1;
 42224   008F72  81C2               	bsf	_flashFlags& (0+255),0,b
 42225                           
 42226                           ; BSR set to: 0
 42227                           ;../../VLCBlib_PIC/nvm.c: 521:         flashBuffer[(index&(64 -1))] = value;
 42228   008F74  0E3F               	movlw	63
 42229   008F76  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42230   008F78  6F93               	movwf	??_FLASH_Write& (0+255),b
 42231   008F7A  0E00               	movlw	0
 42232   008F7C  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42233   008F7E  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42234   008F80  0E48               	movlw	low _flashBuffer
 42235   008F82  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42236   008F84  6ED9               	movwf	fsr2l,c
 42237   008F86  0E03               	movlw	high _flashBuffer
 42238   008F88  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42239   008F8A  6EDA               	movwf	fsr2h,c
 42240   008F8C  C092  FFDF         	movff	FLASH_Write@value,indf2
 42241   008F90                     l18938:
 42242                           
 42243                           ; BSR set to: 0
 42244                           ;../../VLCBlib_PIC/nvm.c: 523:     return GRSP_OK;
 42245   008F90  0E00               	movlw	0
 42246                           
 42247                           ; BSR set to: 0
 42248   008F92  0012               	return		;funcret
 42249   008F94                     __end_of_FLASH_Write:
 42250                           	callstack 0
 42251                           
 42252 ;; *************** function _loadFlashBlock *****************
 42253 ;; Defined at:
 42254 ;;		line 449 in file "../../VLCBlib_PIC/nvm.c"
 42255 ;; Parameters:    Size  Location     Type
 42256 ;;		None
 42257 ;; Auto vars:     Size  Location     Type
 42258 ;;  i               1   45[BANK0 ] unsigned char 
 42259 ;; Return value:  Size  Location     Type
 42260 ;;                  1    wreg      void 
 42261 ;; Registers used:
 42262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42263 ;; Tracked objects:
 42264 ;;		On entry : 0/0
 42265 ;;		On exit  : 0/0
 42266 ;;		Unchanged: 0/0
 42267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42271 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42272 ;;Total ram usage:        1 bytes
 42273 ;; Hardware stack levels used: 1
 42274 ;; Hardware stack levels required when called: 12
 42275 ;; This function calls:
 42276 ;;		Nothing
 42277 ;; This function is called by:
 42278 ;;		_FLASH_Write
 42279 ;; This function uses a non-reentrant model
 42280 ;;
 42281                           
 42282                           	psect	text183
 42283   00BA82                     __ptext183:
 42284                           	callstack 0
 42285   00BA82                     _loadFlashBlock:
 42286                           	callstack 14
 42287                           
 42288                           ;../../VLCBlib_PIC/nvm.c: 451:     EECON1=0X80;
 42289                           
 42290                           ; BSR set to: 0
 42291                           ;incstack = 0
 42292   00BA82  0E80               	movlw	128
 42293   00BA84  6E7F               	movwf	127,c	;volsfr
 42294                           
 42295                           ;../../VLCBlib_PIC/nvm.c: 452:     TBLPTR = flashBlock;
 42296   00BA86  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42297   00BA8A  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42298   00BA8E  6AF8               	clrf	248,c	;volatile
 42299                           
 42300                           ;../../VLCBlib_PIC/nvm.c: 453:     TBLPTRU = 0;
 42301   00BA90  0E00               	movlw	0
 42302   00BA92  6EF8               	movwf	248,c	;volatile
 42303                           
 42304                           ;../../VLCBlib_PIC/nvm.c: 454:     for (uint8_t i=0; i<64; i++) {
 42305   00BA94  0E00               	movlw	0
 42306   00BA96  0100               	movlb	0	; () banked
 42307   00BA98  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 42308   00BA9A                     l2211:
 42309                           
 42310                           ; BSR set to: 0
 42311   00BA9A  0009               	tblrd		*+	;# 
 42312                           
 42313                           ;../../VLCBlib_PIC/nvm.c: 456:         __nop();
 42314   00BA9C  0000               	nop	
 42315                           
 42316                           ;../../VLCBlib_PIC/nvm.c: 457:         flashBuffer[i] = TABLAT;
 42317   00BA9E  0E48               	movlw	low _flashBuffer
 42318   00BAA0  0100               	movlb	0	; () banked
 42319   00BAA2  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 42320   00BAA4  6ED9               	movwf	fsr2l,c
 42321   00BAA6  6ADA               	clrf	fsr2h,c
 42322   00BAA8  0E03               	movlw	high _flashBuffer
 42323   00BAAA  22DA               	addwfc	fsr2h,f,c
 42324   00BAAC  CFF5 FFDF          	movff	tablat,indf2	;volatile
 42325                           
 42326                           ; BSR set to: 0
 42327                           ;../../VLCBlib_PIC/nvm.c: 458:     }
 42328   00BAB0  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 42329                           
 42330                           ; BSR set to: 0
 42331   00BAB2  0E3F               	movlw	63
 42332   00BAB4  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 42333   00BAB6  D7F1               	goto	l2211
 42334                           
 42335                           ; BSR set to: 0
 42336                           ;../../VLCBlib_PIC/nvm.c: 459:     TBLPTR = flashBlock;
 42337   00BAB8  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42338   00BABC  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42339   00BAC0  6AF8               	clrf	248,c	;volatile
 42340                           
 42341                           ; BSR set to: 0
 42342                           ;../../VLCBlib_PIC/nvm.c: 460:     TBLPTRU = 0;
 42343   00BAC2  0E00               	movlw	0
 42344   00BAC4  6EF8               	movwf	248,c	;volatile
 42345                           
 42346                           ; BSR set to: 0
 42347                           ;../../VLCBlib_PIC/nvm.c: 476:     flashFlags.asByte = 0;
 42348   00BAC6  0E00               	movlw	0
 42349   00BAC8  6FC2               	movwf	_flashFlags& (0+255),b
 42350                           
 42351                           ; BSR set to: 0
 42352   00BACA  0012               	return		;funcret
 42353   00BACC                     __end_of_loadFlashBlock:
 42354                           	callstack 0
 42355                           
 42356 ;; *************** function _flushFlashBlock *****************
 42357 ;; Defined at:
 42358 ;;		line 375 in file "../../VLCBlib_PIC/nvm.c"
 42359 ;; Parameters:    Size  Location     Type
 42360 ;;		None
 42361 ;; Auto vars:     Size  Location     Type
 42362 ;;  i               1   47[BANK0 ] unsigned char 
 42363 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 42364 ;; Return value:  Size  Location     Type
 42365 ;;                  1    wreg      void 
 42366 ;; Registers used:
 42367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42368 ;; Tracked objects:
 42369 ;;		On entry : 0/0
 42370 ;;		On exit  : 0/0
 42371 ;;		Unchanged: 0/0
 42372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42374 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42376 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42377 ;;Total ram usage:        2 bytes
 42378 ;; Hardware stack levels used: 1
 42379 ;; Hardware stack levels required when called: 15
 42380 ;; This function calls:
 42381 ;;		_APP_isSuitableTimeToWriteFlash
 42382 ;;		_eraseFlashBlock
 42383 ;; This function is called by:
 42384 ;;		_APP_factoryReset
 42385 ;;		_deleteActionRange
 42386 ;;		_poll
 42387 ;;		_FLASH_Write
 42388 ;;		_clearAllEvents
 42389 ;;		_removeTableEntry
 42390 ;;		_addEvent
 42391 ;;		_deleteHappeningRange
 42392 ;; This function uses a non-reentrant model
 42393 ;;
 42394                           
 42395                           	psect	text184
 42396   00A6BE                     __ptext184:
 42397                           	callstack 0
 42398   00A6BE                     _flushFlashBlock:
 42399                           	callstack 11
 42400                           
 42401                           ;../../VLCBlib_PIC/nvm.c: 376:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 37
      +                          8:     TBLPTR = flashBlock;
 42402                           
 42403                           ; BSR set to: 0
 42404                           ;incstack = 0
 42405   00A6BE  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42406   00A6C2  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42407   00A6C6  6AF8               	clrf	248,c	;volatile
 42408                           
 42409                           ;../../VLCBlib_PIC/nvm.c: 379:     TBLPTRU = 0;
 42410   00A6C8  0E00               	movlw	0
 42411   00A6CA  6EF8               	movwf	248,c	;volatile
 42412                           
 42413                           ;../../VLCBlib_PIC/nvm.c: 384:     if (! flashFlags.writeNeeded) return;
 42414   00A6CC  0100               	movlb	0	; () banked
 42415   00A6CE  A1C2               	btfss	_flashFlags& (0+255),0,b
 42416   00A6D0  0012               	return	
 42417   00A6D2                     l18740:
 42418                           
 42419                           ;../../VLCBlib_PIC/nvm.c: 387:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42420   00A6D2  ECD6  F062         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42421   00A6D6  0900               	iorlw	0
 42422   00A6D8  B4D8               	btfsc	status,2,c
 42423   00A6DA  D7FB               	goto	l18740
 42424                           
 42425                           ;../../VLCBlib_PIC/nvm.c: 390:     if (flashFlags.eraseNeeded) {
 42426   00A6DC  0100               	movlb	0	; () banked
 42427   00A6DE  B3C2               	btfsc	_flashFlags& (0+255),1,b
 42428                           
 42429                           ; BSR set to: 0
 42430                           ;../../VLCBlib_PIC/nvm.c: 391:         eraseFlashBlock();
 42431   00A6E0  EC86  F05C         	call	_eraseFlashBlock	;wreg free
 42432                           
 42433                           ;../../VLCBlib_PIC/nvm.c: 394:     interruptEnabled = (INTCONbits.GIEH);
 42434   00A6E4  0E00               	movlw	0
 42435   00A6E6  BEF2               	btfsc	242,7,c	;volatile
 42436   00A6E8  0E01               	movlw	1
 42437   00A6EA  0100               	movlb	0	; () banked
 42438   00A6EC  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 42439                           
 42440                           ; BSR set to: 0
 42441                           ;../../VLCBlib_PIC/nvm.c: 395:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42442   00A6EE  9EF2               	bcf	242,7,c	;volatile
 42443                           
 42444                           ; BSR set to: 0
 42445   00A6F0  9CF2               	bcf	242,6,c	;volatile
 42446                           
 42447                           ; BSR set to: 0
 42448                           ;../../VLCBlib_PIC/nvm.c: 397:     for (uint8_t i=0; i<64; i++) {
 42449   00A6F2  0E00               	movlw	0
 42450   00A6F4  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 42451   00A6F6                     l18756:
 42452                           
 42453                           ; BSR set to: 0
 42454                           ;../../VLCBlib_PIC/nvm.c: 398:         TABLAT = flashBuffer[i];
 42455   00A6F6  0E48               	movlw	low _flashBuffer
 42456   00A6F8  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 42457   00A6FA  6ED9               	movwf	fsr2l,c
 42458   00A6FC  6ADA               	clrf	fsr2h,c
 42459   00A6FE  0E03               	movlw	high _flashBuffer
 42460   00A700  22DA               	addwfc	fsr2h,f,c
 42461   00A702  50DF               	movf	indf2,w,c
 42462   00A704  6EF5               	movwf	245,c	;volatile
 42463   00A706  000D               	tblwt		*+	;# 
 42464                           
 42465                           ;../../VLCBlib_PIC/nvm.c: 400:     }
 42466   00A708  0100               	movlb	0	; () banked
 42467   00A70A  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 42468                           
 42469                           ; BSR set to: 0
 42470   00A70C  0E3F               	movlw	63
 42471   00A70E  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 42472   00A710  D7F2               	goto	l18756
 42473                           
 42474                           ; BSR set to: 0
 42475                           ;../../VLCBlib_PIC/nvm.c: 407:     TBLPTR = flashBlock;
 42476   00A712  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42477   00A716  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42478   00A71A  6AF8               	clrf	248,c	;volatile
 42479                           
 42480                           ; BSR set to: 0
 42481                           ;../../VLCBlib_PIC/nvm.c: 408:     TBLPTRU = 0;
 42482   00A71C  0E00               	movlw	0
 42483   00A71E  6EF8               	movwf	248,c	;volatile
 42484                           
 42485                           ; BSR set to: 0
 42486                           ;../../VLCBlib_PIC/nvm.c: 409:     EECON1bits.EEPGD = 1;
 42487   00A720  8E7F               	bsf	127,7,c	;volsfr
 42488                           
 42489                           ; BSR set to: 0
 42490                           ;../../VLCBlib_PIC/nvm.c: 410:     EECON1bits.CFGS = 0;
 42491   00A722  9C7F               	bcf	127,6,c	;volsfr
 42492                           
 42493                           ; BSR set to: 0
 42494                           ;../../VLCBlib_PIC/nvm.c: 411:     EECON1bits.FREE = 0;
 42495   00A724  987F               	bcf	127,4,c	;volsfr
 42496                           
 42497                           ; BSR set to: 0
 42498                           ;../../VLCBlib_PIC/nvm.c: 412:     EECON1bits.WREN = 1;
 42499   00A726  847F               	bsf	127,2,c	;volsfr
 42500                           
 42501                           ; BSR set to: 0
 42502                           ;../../VLCBlib_PIC/nvm.c: 414:     EECON2 = 0x55;
 42503   00A728  0E55               	movlw	85
 42504   00A72A  6E7E               	movwf	126,c	;volsfr
 42505                           
 42506                           ; BSR set to: 0
 42507                           ;../../VLCBlib_PIC/nvm.c: 415:     EECON2 = 0xAA;
 42508   00A72C  0EAA               	movlw	170
 42509   00A72E  6E7E               	movwf	126,c	;volsfr
 42510                           
 42511                           ; BSR set to: 0
 42512                           ;../../VLCBlib_PIC/nvm.c: 416:     EECON1bits.WR = 1;
 42513   00A730  827F               	bsf	127,1,c	;volsfr
 42514                           
 42515                           ; BSR set to: 0
 42516                           ;../../VLCBlib_PIC/nvm.c: 417:     EECON1bits.WREN = 0;
 42517   00A732  947F               	bcf	127,2,c	;volsfr
 42518                           
 42519                           ; BSR set to: 0
 42520                           ;../../VLCBlib_PIC/nvm.c: 440:     if (interruptEnabled) {
 42521   00A734  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 42522   00A736  B4D8               	btfsc	status,2,c
 42523   00A738  D002               	goto	l18786
 42524                           
 42525                           ; BSR set to: 0
 42526                           ;../../VLCBlib_PIC/nvm.c: 441:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42527   00A73A  8EF2               	bsf	242,7,c	;volatile
 42528   00A73C  8CF2               	bsf	242,6,c	;volatile
 42529   00A73E                     l18786:
 42530                           
 42531                           ; BSR set to: 0
 42532                           ;../../VLCBlib_PIC/nvm.c: 443:     flashFlags.asByte = 0;
 42533   00A73E  0E00               	movlw	0
 42534   00A740  6FC2               	movwf	_flashFlags& (0+255),b
 42535                           
 42536                           ; BSR set to: 0
 42537   00A742  0012               	return		;funcret
 42538   00A744                     __end_of_flushFlashBlock:
 42539                           	callstack 0
 42540                           
 42541 ;; *************** function _eraseFlashBlock *****************
 42542 ;; Defined at:
 42543 ;;		line 324 in file "../../VLCBlib_PIC/nvm.c"
 42544 ;; Parameters:    Size  Location     Type
 42545 ;;		None
 42546 ;; Auto vars:     Size  Location     Type
 42547 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 42548 ;; Return value:  Size  Location     Type
 42549 ;;                  1    wreg      void 
 42550 ;; Registers used:
 42551 ;;		wreg, status,2, cstack
 42552 ;; Tracked objects:
 42553 ;;		On entry : 0/0
 42554 ;;		On exit  : 0/0
 42555 ;;		Unchanged: 0/0
 42556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42561 ;;Total ram usage:        1 bytes
 42562 ;; Hardware stack levels used: 1
 42563 ;; Hardware stack levels required when called: 14
 42564 ;; This function calls:
 42565 ;;		_APP_isSuitableTimeToWriteFlash
 42566 ;; This function is called by:
 42567 ;;		_flushFlashBlock
 42568 ;;		_FLASH_Write
 42569 ;; This function uses a non-reentrant model
 42570 ;;
 42571                           
 42572                           	psect	text185
 42573   00B90C                     __ptext185:
 42574                           	callstack 0
 42575   00B90C                     _eraseFlashBlock:
 42576                           	callstack 11
 42577                           
 42578                           ;../../VLCBlib_PIC/nvm.c: 328:     while (! APP_isSuitableTimeToWriteFlash())
 42579                           
 42580                           ;../../VLCBlib_PIC/nvm.c: 325:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 32
      +                          8:     while (! APP_isSuitableTimeToWriteFlash())
 42581                           
 42582                           ; BSR set to: 0
 42583                           ;incstack = 0
 42584   00B90C  ECD6  F062         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42585   00B910  0900               	iorlw	0
 42586   00B912  B4D8               	btfsc	status,2,c
 42587   00B914  D7FB               	goto	__ptext185
 42588                           
 42589                           ;../../VLCBlib_PIC/nvm.c: 331:     interruptEnabled = (INTCONbits.GIEH);
 42590   00B916  0E00               	movlw	0
 42591   00B918  BEF2               	btfsc	242,7,c	;volatile
 42592   00B91A  0E01               	movlw	1
 42593   00B91C  0100               	movlb	0	; () banked
 42594   00B91E  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 42595                           
 42596                           ; BSR set to: 0
 42597                           ;../../VLCBlib_PIC/nvm.c: 333:     TBLPTR = flashBlock;
 42598   00B920  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42599   00B924  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42600   00B928  6AF8               	clrf	248,c	;volatile
 42601                           
 42602                           ;../../VLCBlib_PIC/nvm.c: 334:     TBLPTRU = 0;
 42603   00B92A  0E00               	movlw	0
 42604   00B92C  6EF8               	movwf	248,c	;volatile
 42605                           
 42606                           ; BSR set to: 0
 42607                           ;../../VLCBlib_PIC/nvm.c: 335:     EECON1bits.EEPGD = 1;
 42608   00B92E  8E7F               	bsf	127,7,c	;volsfr
 42609                           
 42610                           ; BSR set to: 0
 42611                           ;../../VLCBlib_PIC/nvm.c: 336:     EECON1bits.CFGS = 0;
 42612   00B930  9C7F               	bcf	127,6,c	;volsfr
 42613                           
 42614                           ; BSR set to: 0
 42615                           ;../../VLCBlib_PIC/nvm.c: 337:     EECON1bits.WREN = 1;
 42616   00B932  847F               	bsf	127,2,c	;volsfr
 42617                           
 42618                           ; BSR set to: 0
 42619                           ;../../VLCBlib_PIC/nvm.c: 338:     EECON1bits.FREE = 1;
 42620   00B934  887F               	bsf	127,4,c	;volsfr
 42621                           
 42622                           ; BSR set to: 0
 42623                           ;../../VLCBlib_PIC/nvm.c: 339:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42624   00B936  9EF2               	bcf	242,7,c	;volatile
 42625                           
 42626                           ; BSR set to: 0
 42627   00B938  9CF2               	bcf	242,6,c	;volatile
 42628                           
 42629                           ;../../VLCBlib_PIC/nvm.c: 340:     EECON2 = 0x55;
 42630   00B93A  0E55               	movlw	85
 42631   00B93C  6E7E               	movwf	126,c	;volsfr
 42632                           
 42633                           ;../../VLCBlib_PIC/nvm.c: 341:     EECON2 = 0xaa;
 42634   00B93E  0EAA               	movlw	170
 42635   00B940  6E7E               	movwf	126,c	;volsfr
 42636                           
 42637                           ; BSR set to: 0
 42638                           ;../../VLCBlib_PIC/nvm.c: 342:     EECON1bits.WR = 1;
 42639   00B942  827F               	bsf	127,1,c	;volsfr
 42640   00B944                     l2193:
 42641                           
 42642                           ;../../VLCBlib_PIC/nvm.c: 343:     while(EECON1bits.WR)
 42643   00B944  B27F               	btfsc	127,1,c	;volsfr
 42644   00B946  D7FE               	goto	l2193
 42645                           
 42646                           ;../../VLCBlib_PIC/nvm.c: 345:     EECON1bits.WREN = 0;
 42647   00B948  947F               	bcf	127,2,c	;volsfr
 42648                           
 42649                           ;../../VLCBlib_PIC/nvm.c: 365:     if (interruptEnabled) {
 42650   00B94A  0100               	movlb	0	; () banked
 42651   00B94C  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 42652   00B94E  B4D8               	btfsc	status,2,c
 42653   00B950  0012               	return	
 42654                           
 42655                           ; BSR set to: 0
 42656                           ;../../VLCBlib_PIC/nvm.c: 366:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42657   00B952  8EF2               	bsf	242,7,c	;volatile
 42658   00B954  8CF2               	bsf	242,6,c	;volatile
 42659                           
 42660                           ; BSR set to: 0
 42661   00B956  0012               	return		;funcret
 42662   00B958                     __end_of_eraseFlashBlock:
 42663                           	callstack 0
 42664                           
 42665 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 42666 ;; Defined at:
 42667 ;;		line 402 in file "../main.c"
 42668 ;; Parameters:    Size  Location     Type
 42669 ;;		None
 42670 ;; Auto vars:     Size  Location     Type
 42671 ;;		None
 42672 ;; Return value:  Size  Location     Type
 42673 ;;                  1    wreg      enum E12692
 42674 ;; Registers used:
 42675 ;;		wreg, status,2, cstack
 42676 ;; Tracked objects:
 42677 ;;		On entry : 0/0
 42678 ;;		On exit  : 0/0
 42679 ;;		Unchanged: 0/0
 42680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42685 ;;Total ram usage:        0 bytes
 42686 ;; Hardware stack levels used: 1
 42687 ;; Hardware stack levels required when called: 13
 42688 ;; This function calls:
 42689 ;;		_isNoServoPulses
 42690 ;; This function is called by:
 42691 ;;		_eraseFlashBlock
 42692 ;;		_flushFlashBlock
 42693 ;; This function uses a non-reentrant model
 42694 ;;
 42695                           
 42696                           	psect	text186
 42697   00C5AC                     __ptext186:
 42698                           	callstack 0
 42699   00C5AC                     _APP_isSuitableTimeToWriteFlash:
 42700                           	callstack 11
 42701                           
 42702                           ;../main.c: 404:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 42703                           
 42704                           ; BSR set to: 0
 42705                           ;incstack = 0
 42706   00C5AC  ECDF  F062         	call	_isNoServoPulses	;wreg free
 42707   00C5B0  0900               	iorlw	0
 42708   00C5B2  B4D8               	btfsc	status,2,c
 42709   00C5B4  D002               	goto	u18250
 42710   00C5B6  0E01               	movlw	1
 42711   00C5B8  0012               	return	
 42712   00C5BA                     u18250:
 42713   00C5BA  0E00               	movlw	0
 42714   00C5BC  0012               	return		;funcret
 42715   00C5BE                     __end_of_APP_isSuitableTimeToWriteFlash:
 42716                           	callstack 0
 42717                           
 42718 ;; *************** function _isNoServoPulses *****************
 42719 ;; Defined at:
 42720 ;;		line 694 in file "../servo.c"
 42721 ;; Parameters:    Size  Location     Type
 42722 ;;		None
 42723 ;; Auto vars:     Size  Location     Type
 42724 ;;		None
 42725 ;; Return value:  Size  Location     Type
 42726 ;;                  1    wreg      enum E12716
 42727 ;; Registers used:
 42728 ;;		wreg
 42729 ;; Tracked objects:
 42730 ;;		On entry : 0/0
 42731 ;;		On exit  : 0/0
 42732 ;;		Unchanged: 0/0
 42733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42738 ;;Total ram usage:        0 bytes
 42739 ;; Hardware stack levels used: 1
 42740 ;; Hardware stack levels required when called: 12
 42741 ;; This function calls:
 42742 ;;		Nothing
 42743 ;; This function is called by:
 42744 ;;		_APP_isSuitableTimeToWriteFlash
 42745 ;; This function uses a non-reentrant model
 42746 ;;
 42747                           
 42748                           	psect	text187
 42749   00C5BE                     __ptext187:
 42750                           	callstack 0
 42751   00C5BE                     _isNoServoPulses:
 42752                           	callstack 11
 42753                           
 42754                           ;../servo.c: 696:     if (T1CONbits.TMR1ON) return FALSE;
 42755                           
 42756                           ;incstack = 0
 42757   00C5BE  A0CD               	btfss	205,0,c	;volatile
 42758   00C5C0  D002               	goto	l1180
 42759   00C5C2                     u18230:
 42760   00C5C2  0E00               	movlw	0
 42761   00C5C4  0012               	return	
 42762   00C5C6                     l1180:
 42763                           
 42764                           ;../servo.c: 697:     if (T3CONbits.TMR3ON) return FALSE;
 42765   00C5C6  B0B1               	btfsc	177,0,c	;volatile
 42766   00C5C8  D7FC               	goto	u18230
 42767                           
 42768                           ;../servo.c: 699:     return TRUE;
 42769   00C5CA  0E01               	movlw	1
 42770   00C5CC  0012               	return		;funcret
 42771   00C5CE                     __end_of_isNoServoPulses:
 42772                           	callstack 0
 42773                           
 42774 ;; *************** function _EEPROM_Write *****************
 42775 ;; Defined at:
 42776 ;;		line 216 in file "../../VLCBlib_PIC/nvm.c"
 42777 ;; Parameters:    Size  Location     Type
 42778 ;;  index           2   47[BANK0 ] unsigned short 
 42779 ;;  value           1   49[BANK0 ] unsigned char 
 42780 ;; Auto vars:     Size  Location     Type
 42781 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 42782 ;; Return value:  Size  Location     Type
 42783 ;;                  1    wreg      unsigned char 
 42784 ;; Registers used:
 42785 ;;		wreg, status,2, status,0, cstack
 42786 ;; Tracked objects:
 42787 ;;		On entry : 0/0
 42788 ;;		On exit  : 0/0
 42789 ;;		Unchanged: 0/0
 42790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42791 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42794 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42795 ;;Total ram usage:        4 bytes
 42796 ;; Hardware stack levels used: 1
 42797 ;; Hardware stack levels required when called: 13
 42798 ;; This function calls:
 42799 ;;		_EEPROM_Read
 42800 ;;		_updateModuleErrorStatus
 42801 ;; This function is called by:
 42802 ;;		_writeNVM
 42803 ;; This function uses a non-reentrant model
 42804 ;;
 42805                           
 42806                           	psect	text188
 42807   00B084                     __ptext188:
 42808                           	callstack 0
 42809   00B084                     _EEPROM_Write:
 42810                           	callstack 14
 42811                           
 42812                           ;../../VLCBlib_PIC/nvm.c: 217:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 21
      +                          8:     interruptEnabled = (INTCONbits.GIEH);
 42813                           
 42814                           ;incstack = 0
 42815   00B084  0E00               	movlw	0
 42816   00B086  BEF2               	btfsc	242,7,c	;volatile
 42817   00B088  0E01               	movlw	1
 42818   00B08A  0100               	movlb	0	; () banked
 42819   00B08C  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 42820   00B08E                     l18876:
 42821                           
 42822                           ;../../VLCBlib_PIC/nvm.c: 221:         EEADRH = (index >> 8)&0xFF;
 42823   00B08E  0100               	movlb	0	; () banked
 42824   00B090  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 42825   00B092  6E75               	movwf	117,c	;volatile
 42826                           
 42827                           ; BSR set to: 0
 42828                           ;../../VLCBlib_PIC/nvm.c: 222:         EEADR = index & 0xFF;
 42829   00B094  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 42830                           
 42831                           ; BSR set to: 0
 42832                           ;../../VLCBlib_PIC/nvm.c: 223:         EEDATA = value;
 42833   00B098  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 42834                           
 42835                           ; BSR set to: 0
 42836                           ;../../VLCBlib_PIC/nvm.c: 224:         EECON1bits.EEPGD = 0;
 42837   00B09C  9E7F               	bcf	127,7,c	;volsfr
 42838                           
 42839                           ; BSR set to: 0
 42840                           ;../../VLCBlib_PIC/nvm.c: 225:         EECON1bits.CFGS = 0;
 42841   00B09E  9C7F               	bcf	127,6,c	;volsfr
 42842                           
 42843                           ; BSR set to: 0
 42844                           ;../../VLCBlib_PIC/nvm.c: 226:         EECON1bits.WREN = 1;
 42845   00B0A0  847F               	bsf	127,2,c	;volsfr
 42846                           
 42847                           ; BSR set to: 0
 42848                           ;../../VLCBlib_PIC/nvm.c: 228:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42849   00B0A2  9EF2               	bcf	242,7,c	;volatile
 42850                           
 42851                           ; BSR set to: 0
 42852   00B0A4  9CF2               	bcf	242,6,c	;volatile
 42853                           
 42854                           ; BSR set to: 0
 42855                           ;../../VLCBlib_PIC/nvm.c: 229:         EECON2 = 0x55;
 42856   00B0A6  0E55               	movlw	85
 42857   00B0A8  6E7E               	movwf	126,c	;volsfr
 42858                           
 42859                           ; BSR set to: 0
 42860                           ;../../VLCBlib_PIC/nvm.c: 230:         EECON2 = 0xAA;
 42861   00B0AA  0EAA               	movlw	170
 42862   00B0AC  6E7E               	movwf	126,c	;volsfr
 42863                           
 42864                           ; BSR set to: 0
 42865                           ;../../VLCBlib_PIC/nvm.c: 231:         EECON1bits.WR = 1;
 42866   00B0AE  827F               	bsf	127,1,c	;volsfr
 42867   00B0B0                     l2173:
 42868                           
 42869                           ;../../VLCBlib_PIC/nvm.c: 232:         while (EECON1bits.WR)
 42870   00B0B0  B27F               	btfsc	127,1,c	;volsfr
 42871   00B0B2  D7FE               	goto	l2173
 42872   00B0B4                     u18480:
 42873                           
 42874                           ;../../VLCBlib_PIC/nvm.c: 234:         while (!EEIF)
 42875                           
 42876                           ;../../VLCBlib_PIC/nvm.c: 235:             ;
 42877   00B0B4  ACB7               	btfss	4023,6,c	;volatile
 42878   00B0B6  D7FE               	goto	u18480
 42879                           
 42880                           ;../../VLCBlib_PIC/nvm.c: 236:         EEIF = 0;
 42881   00B0B8  9CB7               	bcf	4023,6,c	;volatile
 42882                           
 42883                           ;../../VLCBlib_PIC/nvm.c: 237:         if (interruptEnabled) {
 42884   00B0BA  0100               	movlb	0	; () banked
 42885   00B0BC  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 42886   00B0BE  B4D8               	btfsc	status,2,c
 42887   00B0C0  D002               	goto	l2179
 42888                           
 42889                           ; BSR set to: 0
 42890                           ;../../VLCBlib_PIC/nvm.c: 239:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42891   00B0C2  8EF2               	bsf	242,7,c	;volatile
 42892   00B0C4  8CF2               	bsf	242,6,c	;volatile
 42893   00B0C6                     l2179:
 42894                           
 42895                           ; BSR set to: 0
 42896                           ;../../VLCBlib_PIC/nvm.c: 241:         EECON1bits.WREN = 0;
 42897   00B0C6  947F               	bcf	127,2,c	;volsfr
 42898                           
 42899                           ; BSR set to: 0
 42900                           ;../../VLCBlib_PIC/nvm.c: 277:         if (EEPROM_Read(index) == value) {
 42901   00B0C8  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 42902   00B0CC  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 42903   00B0D0  EC53  F062         	call	_EEPROM_Read	;wreg free
 42904   00B0D4  0100               	movlb	0	; () banked
 42905   00B0D6  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 42906   00B0D8  B4D8               	btfsc	status,2,c
 42907   00B0DA  D006               	goto	l18910
 42908                           
 42909                           ; BSR set to: 0
 42910                           ;../../VLCBlib_PIC/nvm.c: 281:         mnsDiagnostics[0x04].asUint++;
 42911   00B0DC  0101               	movlb	1	; () banked
 42912   00B0DE  4B95               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 42913   00B0E0  2B96               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 42914                           
 42915                           ; BSR set to: 1
 42916                           ;../../VLCBlib_PIC/nvm.c: 282:         updateModuleErrorStatus();
 42917   00B0E2  ECED  F062         	call	_updateModuleErrorStatus	;wreg free
 42918                           
 42919                           ;../../VLCBlib_PIC/nvm.c: 284:     } while (1);
 42920   00B0E6  D7D3               	goto	l18876
 42921   00B0E8                     l18910:
 42922                           
 42923                           ; BSR set to: 0
 42924                           ;../../VLCBlib_PIC/nvm.c: 285:     return GRSP_OK;
 42925   00B0E8  0E00               	movlw	0
 42926                           
 42927                           ; BSR set to: 0
 42928   00B0EA  0012               	return		;funcret
 42929   00B0EC                     __end_of_EEPROM_Write:
 42930                           	callstack 0
 42931                           
 42932 ;; *************** function _updateModuleErrorStatus *****************
 42933 ;; Defined at:
 42934 ;;		line 632 in file "../../VLCBlib_PIC/mns.c"
 42935 ;; Parameters:    Size  Location     Type
 42936 ;;		None
 42937 ;; Auto vars:     Size  Location     Type
 42938 ;;		None
 42939 ;; Return value:  Size  Location     Type
 42940 ;;                  1    wreg      void 
 42941 ;; Registers used:
 42942 ;;		wreg, status,2, status,0
 42943 ;; Tracked objects:
 42944 ;;		On entry : 0/0
 42945 ;;		On exit  : 0/0
 42946 ;;		Unchanged: 0/0
 42947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42952 ;;Total ram usage:        0 bytes
 42953 ;; Hardware stack levels used: 1
 42954 ;; Hardware stack levels required when called: 12
 42955 ;; This function calls:
 42956 ;;		Nothing
 42957 ;; This function is called by:
 42958 ;;		_EEPROM_Write
 42959 ;;		_canSendMessage
 42960 ;;		_processEnumeration
 42961 ;; This function uses a non-reentrant model
 42962 ;;
 42963                           
 42964                           	psect	text189
 42965   00C5DA                     __ptext189:
 42966                           	callstack 0
 42967   00C5DA                     _updateModuleErrorStatus:
 42968                           	callstack 14
 42969                           
 42970                           ;../../VLCBlib_PIC/mns.c: 633:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 42971                           
 42972                           ; BSR set to: 0
 42973                           ;incstack = 0
 42974   00C5DA  0101               	movlb	1	; () banked
 42975   00C5DC  298F               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 42976   00C5DE  B4D8               	btfsc	status,2,c
 42977   00C5E0  0012               	return	
 42978                           
 42979                           ; BSR set to: 1
 42980                           ;../../VLCBlib_PIC/mns.c: 634:         mnsDiagnostics[0x01].asBytes.lo++;
 42981   00C5E2  2B8F               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 42982                           
 42983                           ; BSR set to: 1
 42984   00C5E4  0012               	return		;funcret
 42985   00C5E6                     __end_of_updateModuleErrorStatus:
 42986                           	callstack 0
 42987                           
 42988 ;; *************** function _setDigitalOutput *****************
 42989 ;; Defined at:
 42990 ;;		line 226 in file "../digitalOut.c"
 42991 ;; Parameters:    Size  Location     Type
 42992 ;;  io              1    wreg     unsigned char 
 42993 ;;  state           1   55[BANK0 ] unsigned char 
 42994 ;; Auto vars:     Size  Location     Type
 42995 ;;  io              1   57[BANK0 ] unsigned char 
 42996 ;;  pinState        1   56[BANK0 ] enum E12766
 42997 ;; Return value:  Size  Location     Type
 42998 ;;                  1    wreg      void 
 42999 ;; Registers used:
 43000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43001 ;; Tracked objects:
 43002 ;;		On entry : 0/0
 43003 ;;		On exit  : 0/0
 43004 ;;		Unchanged: 0/0
 43005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43006 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43007 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43009 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43010 ;;Total ram usage:        3 bytes
 43011 ;; Hardware stack levels used: 1
 43012 ;; Hardware stack levels required when called: 13
 43013 ;; This function calls:
 43014 ;;		_getNV
 43015 ;;		_setOutputPin
 43016 ;; This function is called by:
 43017 ;;		_configIO
 43018 ;;		_setOutputPosition
 43019 ;; This function uses a non-reentrant model
 43020 ;;
 43021                           
 43022                           	psect	text190
 43023   00A494                     __ptext190:
 43024                           	callstack 0
 43025   00A494                     _setDigitalOutput:
 43026                           	callstack 14
 43027                           
 43028                           ; BSR set to: 1
 43029                           ;incstack = 0
 43030                           ;setDigitalOutput@io stored from wreg
 43031   00A494  0100               	movlb	0	; () banked
 43032   00A496  6F99               	movwf	setDigitalOutput@io& (0+255),b
 43033                           
 43034                           ;../digitalOut.c: 227:     Boolean pinState;;../digitalOut.c: 228:     switch (state) {
 43035   00A498  D038               	goto	l19616
 43036   00A49A                     l19600:
 43037                           
 43038                           ; BSR set to: 0
 43039                           ;../digitalOut.c: 230:             state = 2;
 43040   00A49A  0E02               	movlw	2
 43041   00A49C  6F97               	movwf	setDigitalOutput@state& (0+255),b
 43042   00A49E                     l19602:
 43043                           
 43044                           ; BSR set to: 0
 43045                           ;../digitalOut.c: 234:             pinState = (state == 1);
 43046   00A49E  0597               	decf	setDigitalOutput@state& (0+255),w,b
 43047   00A4A0  A4D8               	btfss	status,2,c
 43048   00A4A2  D002               	goto	u19430
 43049   00A4A4  0E01               	movlw	1
 43050   00A4A6  D001               	goto	u19440
 43051   00A4A8                     u19430:
 43052   00A4A8  0E00               	movlw	0
 43053   00A4AA                     u19440:
 43054   00A4AA  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 43055                           
 43056                           ; BSR set to: 0
 43057                           ;../digitalOut.c: 238:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 43058   00A4AC  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43059   00A4AE  0D07               	mullw	7
 43060   00A4B0  50F3               	movf	243,w,c
 43061   00A4B2  0F11               	addlw	17
 43062   00A4B4  EC52  F05E         	call	_getNV
 43063   00A4B8  0100               	movlb	0	; () banked
 43064   00A4BA  AB8D               	btfss	?_getNV& (0+255),5,b
 43065   00A4BC  D00B               	goto	l19608
 43066                           
 43067                           ; BSR set to: 0
 43068                           ;../digitalOut.c: 239:                 setOutputPin(io, ! pinState);
 43069   00A4BE  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 43070   00A4C0  A4D8               	btfss	status,2,c
 43071   00A4C2  D002               	goto	u19460
 43072   00A4C4  0E01               	movlw	1
 43073   00A4C6  D001               	goto	u19470
 43074   00A4C8                     u19460:
 43075   00A4C8  0E00               	movlw	0
 43076   00A4CA                     u19470:
 43077   00A4CA  6F91               	movwf	setOutputPin@state& (0+255),b
 43078   00A4CC  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43079   00A4CE  ECAB  F036         	call	_setOutputPin
 43080                           
 43081                           ;../digitalOut.c: 240:             } else {
 43082   00A4D2  0012               	return	
 43083   00A4D4                     l19608:
 43084                           
 43085                           ; BSR set to: 0
 43086                           ;../digitalOut.c: 241:                 setOutputPin(io, pinState);
 43087   00A4D4  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 43088   00A4D8  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43089   00A4DA  ECAB  F036         	call	_setOutputPin
 43090   00A4DE  0012               	return	
 43091   00A4E0                     l19610:
 43092                           
 43093                           ; BSR set to: 0
 43094                           ;../digitalOut.c: 245:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 43095   00A4E0  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43096   00A4E2  0D07               	mullw	7
 43097   00A4E4  50F3               	movf	243,w,c
 43098   00A4E6  0F13               	addlw	19
 43099   00A4E8  EC52  F05E         	call	_getNV
 43100   00A4EC  0E30               	movlw	low _flashDelays
 43101   00A4EE  0100               	movlb	0	; () banked
 43102   00A4F0  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 43103   00A4F2  6ED9               	movwf	fsr2l,c
 43104   00A4F4  6ADA               	clrf	fsr2h,c
 43105   00A4F6  0E01               	movlw	high _flashDelays
 43106   00A4F8  22DA               	addwfc	fsr2h,f,c
 43107   00A4FA  C08D  FFDF         	movff	?_getNV,indf2
 43108                           
 43109                           ; BSR set to: 0
 43110                           ;../digitalOut.c: 246:             setOutputPin(io, TRUE);
 43111   00A4FE  0E01               	movlw	1
 43112   00A500  6F91               	movwf	setOutputPin@state& (0+255),b
 43113   00A502  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43114   00A504  ECAB  F036         	call	_setOutputPin
 43115                           
 43116                           ;../digitalOut.c: 247:             break;
 43117   00A508  0012               	return	
 43118   00A50A                     l19616:
 43119   00A50A  0100               	movlb	0	; () banked
 43120   00A50C  5197               	movf	setDigitalOutput@state& (0+255),w,b
 43121                           
 43122                           ; Switch size 1, requested type "simple"
 43123                           ; Number of cases is 3, Range of values is 1 to 3
 43124                           ; switch strategies available:
 43125                           ; Name         Instructions Cycles
 43126                           ; simple_byte           10     6 (average)
 43127                           ;	Chosen strategy is simple_byte
 43128   00A50E  0A01               	xorlw	1	; case 1
 43129   00A510  B4D8               	btfsc	status,2,c
 43130   00A512  D7C5               	goto	l19602
 43131   00A514  0A03               	xorlw	3	; case 2
 43132   00A516  B4D8               	btfsc	status,2,c
 43133   00A518  D7C2               	goto	l19602
 43134   00A51A  0A01               	xorlw	1	; case 3
 43135   00A51C  B4D8               	btfsc	status,2,c
 43136   00A51E  D7E0               	goto	l19610
 43137   00A520  D7BC               	goto	l19600
 43138   00A522                     __end_of_setDigitalOutput:
 43139                           	callstack 0
 43140                           
 43141 ;; *************** function _setOutputPin *****************
 43142 ;; Defined at:
 43143 ;;		line 256 in file "../digitalOut.c"
 43144 ;; Parameters:    Size  Location     Type
 43145 ;;  io              1    wreg     unsigned char 
 43146 ;;  state           1   49[BANK0 ] enum E12766
 43147 ;; Auto vars:     Size  Location     Type
 43148 ;;  io              1   52[BANK0 ] unsigned char 
 43149 ;; Return value:  Size  Location     Type
 43150 ;;                  1    wreg      void 
 43151 ;; Registers used:
 43152 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 43153 ;; Tracked objects:
 43154 ;;		On entry : 0/0
 43155 ;;		On exit  : 0/0
 43156 ;;		Unchanged: 0/0
 43157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43158 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43160 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43161 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43162 ;;Total ram usage:        4 bytes
 43163 ;; Hardware stack levels used: 1
 43164 ;; Hardware stack levels required when called: 12
 43165 ;; This function calls:
 43166 ;;		Nothing
 43167 ;; This function is called by:
 43168 ;;		_startDigitalOutput
 43169 ;;		_processOutputs
 43170 ;;		_setDigitalOutput
 43171 ;;		_setOutputPosition
 43172 ;;		_setupTimer1
 43173 ;;		_setupTimer3
 43174 ;; This function uses a non-reentrant model
 43175 ;;
 43176                           
 43177                           	psect	text191
 43178   006D56                     __ptext191:
 43179                           	callstack 0
 43180   006D56                     _setOutputPin:
 43181                           	callstack 15
 43182                           
 43183                           ;incstack = 0
 43184                           ;setOutputPin@io stored from wreg
 43185   006D56  0100               	movlb	0	; () banked
 43186   006D58  6F94               	movwf	setOutputPin@io& (0+255),b
 43187                           
 43188                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 43189   006D5A  D0C0               	goto	l19464
 43190   006D5C                     l19444:
 43191                           
 43192                           ; BSR set to: 0
 43193                           ;../digitalOut.c: 259:             if (state) {
 43194   006D5C  5191               	movf	setOutputPin@state& (0+255),w,b
 43195   006D5E  B4D8               	btfsc	status,2,c
 43196   006D60  D01E               	goto	l19448
 43197                           
 43198                           ; BSR set to: 0
 43199                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 43200   006D62  5194               	movf	setOutputPin@io& (0+255),w,b
 43201   006D64  0D04               	mullw	4
 43202   006D66  0E02               	movlw	2
 43203   006D68  26F3               	addwf	243,f,c
 43204   006D6A  0E00               	movlw	0
 43205   006D6C  22F4               	addwfc	244,f,c
 43206   006D6E  0E29               	movlw	low _configs
 43207   006D70  24F3               	addwf	243,w,c
 43208   006D72  6EF6               	movwf	tblptrl,c
 43209   006D74  0EEE               	movlw	high _configs
 43210   006D76  20F4               	addwfc	244,w,c
 43211   006D78  6EF7               	movwf	tblptrh,c
 43212   006D7A                     	if	1	;There are 3 active tblptr bytes
 43213   006D7A  6AF8               	clrf	tblptru,c
 43214   006D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 43215   006D7E  22F8               	addwfc	tblptru,f,c
 43216   006D80                     	endif
 43217   006D80  0008               	tblrd		*
 43218   006D82  CFF5 F092          	movff	tablat,??_setOutputPin
 43219   006D86  0E01               	movlw	1
 43220   006D88  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43221   006D8A  2B92               	incf	??_setOutputPin& (0+255),f,b
 43222   006D8C  D002               	goto	u19174
 43223   006D8E                     u19175:
 43224   006D8E  90D8               	bcf	status,0,c
 43225   006D90  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43226   006D92                     u19174:
 43227   006D92  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43228   006D94  D7FC               	goto	u19175
 43229   006D96  0100               	movlb	0	; () banked
 43230   006D98  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43231   006D9A  1289               	iorwf	137,f,c	;volatile
 43232                           
 43233                           ;../digitalOut.c: 262:             } else {
 43234   006D9C  0012               	return	
 43235   006D9E                     l19448:
 43236                           
 43237                           ; BSR set to: 0
 43238                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 43239   006D9E  5194               	movf	setOutputPin@io& (0+255),w,b
 43240   006DA0  0D04               	mullw	4
 43241   006DA2  0E02               	movlw	2
 43242   006DA4  26F3               	addwf	243,f,c
 43243   006DA6  0E00               	movlw	0
 43244   006DA8  22F4               	addwfc	244,f,c
 43245   006DAA  0E29               	movlw	low _configs
 43246   006DAC  24F3               	addwf	243,w,c
 43247   006DAE  6EF6               	movwf	tblptrl,c
 43248   006DB0  0EEE               	movlw	high _configs
 43249   006DB2  20F4               	addwfc	244,w,c
 43250   006DB4  6EF7               	movwf	tblptrh,c
 43251   006DB6                     	if	1	;There are 3 active tblptr bytes
 43252   006DB6  6AF8               	clrf	tblptru,c
 43253   006DB8  0E00               	movlw	low (__mediumconst shr (0+16))
 43254   006DBA  22F8               	addwfc	tblptru,f,c
 43255   006DBC                     	endif
 43256   006DBC  0008               	tblrd		*
 43257   006DBE  CFF5 F092          	movff	tablat,??_setOutputPin
 43258   006DC2  0E01               	movlw	1
 43259   006DC4  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43260   006DC6  2B92               	incf	??_setOutputPin& (0+255),f,b
 43261   006DC8  D002               	goto	u19184
 43262   006DCA                     u19185:
 43263   006DCA  90D8               	bcf	status,0,c
 43264   006DCC  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43265   006DCE                     u19184:
 43266   006DCE  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43267   006DD0  D7FC               	goto	u19185
 43268   006DD2  0100               	movlb	0	; () banked
 43269   006DD4  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43270   006DD6  0AFF               	xorlw	255
 43271   006DD8  1689               	andwf	137,f,c	;volatile
 43272   006DDA  0012               	return	
 43273   006DDC                     l19450:
 43274                           
 43275                           ; BSR set to: 0
 43276                           ;../digitalOut.c: 268:             if (state) {
 43277   006DDC  5191               	movf	setOutputPin@state& (0+255),w,b
 43278   006DDE  B4D8               	btfsc	status,2,c
 43279   006DE0  D01E               	goto	l19454
 43280                           
 43281                           ; BSR set to: 0
 43282                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 43283   006DE2  5194               	movf	setOutputPin@io& (0+255),w,b
 43284   006DE4  0D04               	mullw	4
 43285   006DE6  0E02               	movlw	2
 43286   006DE8  26F3               	addwf	243,f,c
 43287   006DEA  0E00               	movlw	0
 43288   006DEC  22F4               	addwfc	244,f,c
 43289   006DEE  0E29               	movlw	low _configs
 43290   006DF0  24F3               	addwf	243,w,c
 43291   006DF2  6EF6               	movwf	tblptrl,c
 43292   006DF4  0EEE               	movlw	high _configs
 43293   006DF6  20F4               	addwfc	244,w,c
 43294   006DF8  6EF7               	movwf	tblptrh,c
 43295   006DFA                     	if	1	;There are 3 active tblptr bytes
 43296   006DFA  6AF8               	clrf	tblptru,c
 43297   006DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 43298   006DFE  22F8               	addwfc	tblptru,f,c
 43299   006E00                     	endif
 43300   006E00  0008               	tblrd		*
 43301   006E02  CFF5 F092          	movff	tablat,??_setOutputPin
 43302   006E06  0E01               	movlw	1
 43303   006E08  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43304   006E0A  2B92               	incf	??_setOutputPin& (0+255),f,b
 43305   006E0C  D002               	goto	u19204
 43306   006E0E                     u19205:
 43307   006E0E  90D8               	bcf	status,0,c
 43308   006E10  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43309   006E12                     u19204:
 43310   006E12  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43311   006E14  D7FC               	goto	u19205
 43312   006E16  0100               	movlb	0	; () banked
 43313   006E18  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43314   006E1A  128A               	iorwf	138,f,c	;volatile
 43315                           
 43316                           ;../digitalOut.c: 271:             } else {
 43317   006E1C  0012               	return	
 43318   006E1E                     l19454:
 43319                           
 43320                           ; BSR set to: 0
 43321                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 43322   006E1E  5194               	movf	setOutputPin@io& (0+255),w,b
 43323   006E20  0D04               	mullw	4
 43324   006E22  0E02               	movlw	2
 43325   006E24  26F3               	addwf	243,f,c
 43326   006E26  0E00               	movlw	0
 43327   006E28  22F4               	addwfc	244,f,c
 43328   006E2A  0E29               	movlw	low _configs
 43329   006E2C  24F3               	addwf	243,w,c
 43330   006E2E  6EF6               	movwf	tblptrl,c
 43331   006E30  0EEE               	movlw	high _configs
 43332   006E32  20F4               	addwfc	244,w,c
 43333   006E34  6EF7               	movwf	tblptrh,c
 43334   006E36                     	if	1	;There are 3 active tblptr bytes
 43335   006E36  6AF8               	clrf	tblptru,c
 43336   006E38  0E00               	movlw	low (__mediumconst shr (0+16))
 43337   006E3A  22F8               	addwfc	tblptru,f,c
 43338   006E3C                     	endif
 43339   006E3C  0008               	tblrd		*
 43340   006E3E  CFF5 F092          	movff	tablat,??_setOutputPin
 43341   006E42  0E01               	movlw	1
 43342   006E44  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43343   006E46  2B92               	incf	??_setOutputPin& (0+255),f,b
 43344   006E48  D002               	goto	u19214
 43345   006E4A                     u19215:
 43346   006E4A  90D8               	bcf	status,0,c
 43347   006E4C  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43348   006E4E                     u19214:
 43349   006E4E  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43350   006E50  D7FC               	goto	u19215
 43351   006E52  0100               	movlb	0	; () banked
 43352   006E54  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43353   006E56  0AFF               	xorlw	255
 43354   006E58  168A               	andwf	138,f,c	;volatile
 43355   006E5A  0012               	return	
 43356   006E5C                     l19456:
 43357                           
 43358                           ; BSR set to: 0
 43359                           ;../digitalOut.c: 277:             if (state) {
 43360   006E5C  5191               	movf	setOutputPin@state& (0+255),w,b
 43361   006E5E  B4D8               	btfsc	status,2,c
 43362   006E60  D01E               	goto	l19460
 43363                           
 43364                           ; BSR set to: 0
 43365                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 43366   006E62  5194               	movf	setOutputPin@io& (0+255),w,b
 43367   006E64  0D04               	mullw	4
 43368   006E66  0E02               	movlw	2
 43369   006E68  26F3               	addwf	243,f,c
 43370   006E6A  0E00               	movlw	0
 43371   006E6C  22F4               	addwfc	244,f,c
 43372   006E6E  0E29               	movlw	low _configs
 43373   006E70  24F3               	addwf	243,w,c
 43374   006E72  6EF6               	movwf	tblptrl,c
 43375   006E74  0EEE               	movlw	high _configs
 43376   006E76  20F4               	addwfc	244,w,c
 43377   006E78  6EF7               	movwf	tblptrh,c
 43378   006E7A                     	if	1	;There are 3 active tblptr bytes
 43379   006E7A  6AF8               	clrf	tblptru,c
 43380   006E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 43381   006E7E  22F8               	addwfc	tblptru,f,c
 43382   006E80                     	endif
 43383   006E80  0008               	tblrd		*
 43384   006E82  CFF5 F092          	movff	tablat,??_setOutputPin
 43385   006E86  0E01               	movlw	1
 43386   006E88  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43387   006E8A  2B92               	incf	??_setOutputPin& (0+255),f,b
 43388   006E8C  D002               	goto	u19234
 43389   006E8E                     u19235:
 43390   006E8E  90D8               	bcf	status,0,c
 43391   006E90  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43392   006E92                     u19234:
 43393   006E92  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43394   006E94  D7FC               	goto	u19235
 43395   006E96  0100               	movlb	0	; () banked
 43396   006E98  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43397   006E9A  128B               	iorwf	139,f,c	;volatile
 43398                           
 43399                           ;../digitalOut.c: 280:             } else {
 43400   006E9C  0012               	return	
 43401   006E9E                     l19460:
 43402                           
 43403                           ; BSR set to: 0
 43404                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 43405   006E9E  5194               	movf	setOutputPin@io& (0+255),w,b
 43406   006EA0  0D04               	mullw	4
 43407   006EA2  0E02               	movlw	2
 43408   006EA4  26F3               	addwf	243,f,c
 43409   006EA6  0E00               	movlw	0
 43410   006EA8  22F4               	addwfc	244,f,c
 43411   006EAA  0E29               	movlw	low _configs
 43412   006EAC  24F3               	addwf	243,w,c
 43413   006EAE  6EF6               	movwf	tblptrl,c
 43414   006EB0  0EEE               	movlw	high _configs
 43415   006EB2  20F4               	addwfc	244,w,c
 43416   006EB4  6EF7               	movwf	tblptrh,c
 43417   006EB6                     	if	1	;There are 3 active tblptr bytes
 43418   006EB6  6AF8               	clrf	tblptru,c
 43419   006EB8  0E00               	movlw	low (__mediumconst shr (0+16))
 43420   006EBA  22F8               	addwfc	tblptru,f,c
 43421   006EBC                     	endif
 43422   006EBC  0008               	tblrd		*
 43423   006EBE  CFF5 F092          	movff	tablat,??_setOutputPin
 43424   006EC2  0E01               	movlw	1
 43425   006EC4  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43426   006EC6  2B92               	incf	??_setOutputPin& (0+255),f,b
 43427   006EC8  D002               	goto	u19244
 43428   006ECA                     u19245:
 43429   006ECA  90D8               	bcf	status,0,c
 43430   006ECC  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43431   006ECE                     u19244:
 43432   006ECE  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43433   006ED0  D7FC               	goto	u19245
 43434   006ED2  0100               	movlb	0	; () banked
 43435   006ED4  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43436   006ED6  0AFF               	xorlw	255
 43437   006ED8  168B               	andwf	139,f,c	;volatile
 43438   006EDA  0012               	return	
 43439   006EDC                     l19464:
 43440   006EDC  0100               	movlb	0	; () banked
 43441   006EDE  5194               	movf	setOutputPin@io& (0+255),w,b
 43442   006EE0  0D04               	mullw	4
 43443   006EE2  0E01               	movlw	1
 43444   006EE4  26F3               	addwf	243,f,c
 43445   006EE6  0E00               	movlw	0
 43446   006EE8  22F4               	addwfc	244,f,c
 43447   006EEA  0E29               	movlw	low _configs
 43448   006EEC  24F3               	addwf	243,w,c
 43449   006EEE  6EF6               	movwf	tblptrl,c
 43450   006EF0  0EEE               	movlw	high _configs
 43451   006EF2  20F4               	addwfc	244,w,c
 43452   006EF4  6EF7               	movwf	tblptrh,c
 43453   006EF6                     	if	1	;There are 3 active tblptr bytes
 43454   006EF6  6AF8               	clrf	tblptru,c
 43455   006EF8  0E00               	movlw	low (__mediumconst shr (0+16))
 43456   006EFA  22F8               	addwfc	tblptru,f,c
 43457   006EFC                     	endif
 43458   006EFC  0008               	tblrd		*
 43459   006EFE  50F5               	movf	tablat,w,c
 43460                           
 43461                           ; Switch size 1, requested type "simple"
 43462                           ; Number of cases is 3, Range of values is 65 to 67
 43463                           ; switch strategies available:
 43464                           ; Name         Instructions Cycles
 43465                           ; simple_byte           10     6 (average)
 43466                           ;	Chosen strategy is simple_byte
 43467   006F00  0A41               	xorlw	65	; case 65
 43468   006F02  B4D8               	btfsc	status,2,c
 43469   006F04  D72B               	goto	l19444
 43470   006F06  0A03               	xorlw	3	; case 66
 43471   006F08  B4D8               	btfsc	status,2,c
 43472   006F0A  D768               	goto	l19450
 43473   006F0C  0A01               	xorlw	1	; case 67
 43474   006F0E  A4D8               	btfss	status,2,c
 43475   006F10  0012               	return	
 43476   006F12  D7A4               	goto	l19456
 43477   006F14                     __end_of_setOutputPin:
 43478                           	callstack 0
 43479                           
 43480 ;; *************** function _getNV *****************
 43481 ;; Defined at:
 43482 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 43483 ;; Parameters:    Size  Location     Type
 43484 ;;  index           1    wreg     unsigned char 
 43485 ;; Auto vars:     Size  Location     Type
 43486 ;;  index           1   48[BANK0 ] unsigned char 
 43487 ;; Return value:  Size  Location     Type
 43488 ;;                  2   45[BANK0 ] short 
 43489 ;; Registers used:
 43490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43491 ;; Tracked objects:
 43492 ;;		On entry : 0/0
 43493 ;;		On exit  : 0/0
 43494 ;;		Unchanged: 0/0
 43495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43498 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43499 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43500 ;;Total ram usage:        4 bytes
 43501 ;; Hardware stack levels used: 1
 43502 ;; Hardware stack levels required when called: 12
 43503 ;; This function calls:
 43504 ;;		Nothing
 43505 ;; This function is called by:
 43506 ;;		_setup
 43507 ;;		_loop
 43508 ;;		_APP_GetEventState
 43509 ;;		_configIO
 43510 ;;		_startDigitalOutput
 43511 ;;		_processOutputs
 43512 ;;		_setDigitalOutput
 43513 ;;		_initInputScan
 43514 ;;		_inputScan
 43515 ;;		_readInput
 43516 ;;		_consumer2QProcessMessage
 43517 ;;		_processActions
 43518 ;;		_sodTRCallback
 43519 ;;		_APP_nvValueChanged
 43520 ;;		_setOutputPosition
 43521 ;;		_initServos
 43522 ;;		_startServos
 43523 ;;		_setupTimer1
 43524 ;;		_setupTimer3
 43525 ;;		_pollServos
 43526 ;;		_startServoOutput
 43527 ;;		_startMultiOutput
 43528 ;;		_setServoState
 43529 ;;		_setBounceState
 43530 ;;		_setMultiState
 43531 ;;		_bounceDown
 43532 ;;		_bounceUp
 43533 ;;		_nvProcessMessage
 43534 ;;		_nvTRnvrdCallback
 43535 ;; This function uses a non-reentrant model
 43536 ;;
 43537                           
 43538                           	psect	text192
 43539   00BCA4                     __ptext192:
 43540                           	callstack 0
 43541   00BCA4                     _getNV:
 43542                           	callstack 14
 43543                           
 43544                           ; BSR set to: 0
 43545                           ;incstack = 0
 43546                           ;getNV@index stored from wreg
 43547   00BCA4  0100               	movlb	0	; () banked
 43548   00BCA6  6F90               	movwf	getNV@index& (0+255),b
 43549                           
 43550                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 43551   00BCA8  0100               	movlb	0	; () banked
 43552   00BCAA  5190               	movf	getNV@index& (0+255),w,b
 43553   00BCAC  A4D8               	btfss	status,2,c
 43554   00BCAE  D005               	goto	l19432
 43555                           
 43556                           ; BSR set to: 0
 43557   00BCB0  0E00               	movlw	0
 43558   00BCB2  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43559   00BCB4  0E7F               	movlw	127
 43560   00BCB6  6F8D               	movwf	?_getNV& (0+255),b
 43561   00BCB8  0012               	return	
 43562   00BCBA                     l19432:
 43563                           
 43564                           ; BSR set to: 0
 43565                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 43566   00BCBA  0E7F               	movlw	127
 43567   00BCBC  6590               	cpfsgt	getNV@index& (0+255),b
 43568   00BCBE  D005               	goto	l19438
 43569                           
 43570                           ; BSR set to: 0
 43571   00BCC0  0EFF               	movlw	255
 43572   00BCC2  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43573   00BCC4  0EF6               	movlw	246
 43574   00BCC6  6F8D               	movwf	?_getNV& (0+255),b
 43575   00BCC8  0012               	return	
 43576   00BCCA                     l19438:
 43577                           
 43578                           ; BSR set to: 0
 43579                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 43580   00BCCA  0E00               	movlw	low _nvCache
 43581   00BCCC  2590               	addwf	getNV@index& (0+255),w,b
 43582   00BCCE  6ED9               	movwf	fsr2l,c
 43583   00BCD0  6ADA               	clrf	fsr2h,c
 43584   00BCD2  0E04               	movlw	high _nvCache
 43585   00BCD4  22DA               	addwfc	fsr2h,f,c
 43586   00BCD6  50DF               	movf	indf2,w,c
 43587   00BCD8  6F8F               	movwf	??_getNV& (0+255),b
 43588   00BCDA  518F               	movf	??_getNV& (0+255),w,b
 43589   00BCDC  6F8D               	movwf	?_getNV& (0+255),b
 43590   00BCDE  6B8E               	clrf	(?_getNV+1)& (0+255),b
 43591                           
 43592                           ; BSR set to: 0
 43593   00BCE0  0012               	return		;funcret
 43594   00BCE2                     __end_of_getNV:
 43595                           	callstack 0
 43596                           
 43597 ;; *************** function _readNVM *****************
 43598 ;; Defined at:
 43599 ;;		line 550 in file "../../VLCBlib_PIC/nvm.c"
 43600 ;; Parameters:    Size  Location     Type
 43601 ;;  type            1    wreg     enum E12738
 43602 ;;  index           3   49[BANK0 ] unsigned um
 43603 ;; Auto vars:     Size  Location     Type
 43604 ;;  type            1   54[BANK0 ] enum E12738
 43605 ;; Return value:  Size  Location     Type
 43606 ;;                  2   49[BANK0 ] short 
 43607 ;; Registers used:
 43608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43609 ;; Tracked objects:
 43610 ;;		On entry : 0/0
 43611 ;;		On exit  : 0/0
 43612 ;;		Unchanged: 0/0
 43613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43614 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43616 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43617 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43618 ;;Total ram usage:        6 bytes
 43619 ;; Hardware stack levels used: 1
 43620 ;; Hardware stack levels required when called: 13
 43621 ;; This function calls:
 43622 ;;		_EEPROM_Read
 43623 ;;		_FLASH_Read
 43624 ;; This function is called by:
 43625 ;;		_APP_GetEventState
 43626 ;;		_configIO
 43627 ;;		_initInputScan
 43628 ;;		_initServos
 43629 ;;		_bootPowerUp
 43630 ;;		_mnsPowerUp
 43631 ;;		_loadNvCache
 43632 ;;		_main
 43633 ;;		_canPowerUp
 43634 ;;		_doNnevn
 43635 ;;		_removeTableEntry
 43636 ;;		_addEvent
 43637 ;;		_writeEv
 43638 ;;		_getEv
 43639 ;;		_numEv
 43640 ;;		_getEVs
 43641 ;;		_getNN
 43642 ;;		_getEN
 43643 ;;		_validStart
 43644 ;;		_deleteHappeningRange
 43645 ;; This function uses a non-reentrant model
 43646 ;;
 43647                           
 43648                           	psect	text193
 43649   00B3A0                     __ptext193:
 43650                           	callstack 0
 43651   00B3A0                     _readNVM:
 43652                           	callstack 15
 43653                           
 43654                           ; BSR set to: 0
 43655                           ;incstack = 0
 43656                           ;readNVM@type stored from wreg
 43657   00B3A0  0100               	movlb	0	; () banked
 43658   00B3A2  6F96               	movwf	readNVM@type& (0+255),b
 43659                           
 43660                           ;../../VLCBlib_PIC/nvm.c: 551:     switch(type) {
 43661   00B3A4  D01D               	goto	l18700
 43662   00B3A6                     l18686:
 43663                           
 43664                           ; BSR set to: 0
 43665                           ;../../VLCBlib_PIC/nvm.c: 553:             return EEPROM_Read((uint16_t)index);
 43666   00B3A6  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 43667   00B3AA  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 43668   00B3AE  EC53  F062         	call	_EEPROM_Read	;wreg free
 43669   00B3B2  0100               	movlb	0	; () banked
 43670   00B3B4  6F94               	movwf	??_readNVM& (0+255),b
 43671   00B3B6  5194               	movf	??_readNVM& (0+255),w,b
 43672   00B3B8  6F91               	movwf	?_readNVM& (0+255),b
 43673   00B3BA  6B92               	clrf	(?_readNVM+1)& (0+255),b
 43674   00B3BC  0012               	return	
 43675   00B3BE                     l18690:
 43676                           
 43677                           ; BSR set to: 0
 43678                           ;../../VLCBlib_PIC/nvm.c: 556:             return FLASH_Read((uint16_t)index);
 43679   00B3BE  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 43680   00B3C2  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 43681   00B3C6  ECAC  F05C         	call	_FLASH_Read	;wreg free
 43682   00B3CA  0100               	movlb	0	; () banked
 43683   00B3CC  6F94               	movwf	??_readNVM& (0+255),b
 43684   00B3CE  5194               	movf	??_readNVM& (0+255),w,b
 43685   00B3D0  6F91               	movwf	?_readNVM& (0+255),b
 43686   00B3D2  6B92               	clrf	(?_readNVM+1)& (0+255),b
 43687   00B3D4  0012               	return	
 43688   00B3D6                     l18694:
 43689                           
 43690                           ; BSR set to: 0
 43691                           ;../../VLCBlib_PIC/nvm.c: 562:             return -GRSP_UNKNOWN_NVM_TYPE;
 43692   00B3D6  0EFF               	movlw	255
 43693   00B3D8  6F92               	movwf	(?_readNVM+1)& (0+255),b
 43694   00B3DA  0E02               	movlw	2
 43695   00B3DC  6F91               	movwf	?_readNVM& (0+255),b
 43696   00B3DE  0012               	return	
 43697   00B3E0                     l18700:
 43698   00B3E0  0100               	movlb	0	; () banked
 43699   00B3E2  5196               	movf	readNVM@type& (0+255),w,b
 43700   00B3E4  6F94               	movwf	??_readNVM& (0+255),b
 43701   00B3E6  6B95               	clrf	(??_readNVM+1)& (0+255),b
 43702                           
 43703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43704                           ; Switch size 1, requested type "simple"
 43705                           ; Number of cases is 1, Range of values is 0 to 0
 43706                           ; switch strategies available:
 43707                           ; Name         Instructions Cycles
 43708                           ; simple_byte            4     3 (average)
 43709                           ;	Chosen strategy is simple_byte
 43710   00B3E8  5195               	movf	(??_readNVM+1)& (0+255),w,b
 43711   00B3EA  0A00               	xorlw	0	; case 0
 43712   00B3EC  A4D8               	btfss	status,2,c
 43713   00B3EE  D7F3               	goto	l18694
 43714                           
 43715                           ; BSR set to: 0
 43716                           ; Switch size 1, requested type "simple"
 43717                           ; Number of cases is 2, Range of values is 0 to 1
 43718                           ; switch strategies available:
 43719                           ; Name         Instructions Cycles
 43720                           ; simple_byte            7     4 (average)
 43721                           ;	Chosen strategy is simple_byte
 43722   00B3F0  5194               	movf	??_readNVM& (0+255),w,b
 43723   00B3F2  0A00               	xorlw	0	; case 0
 43724   00B3F4  B4D8               	btfsc	status,2,c
 43725   00B3F6  D7D7               	goto	l18686
 43726   00B3F8  0A01               	xorlw	1	; case 1
 43727   00B3FA  B4D8               	btfsc	status,2,c
 43728   00B3FC  D7E0               	goto	l18690
 43729   00B3FE  D7EB               	goto	l18694
 43730   00B400                     __end_of_readNVM:
 43731                           	callstack 0
 43732                           
 43733 ;; *************** function _FLASH_Read *****************
 43734 ;; Defined at:
 43735 ;;		line 295 in file "../../VLCBlib_PIC/nvm.c"
 43736 ;; Parameters:    Size  Location     Type
 43737 ;;  address         2   45[BANK0 ] unsigned short 
 43738 ;; Auto vars:     Size  Location     Type
 43739 ;;		None
 43740 ;; Return value:  Size  Location     Type
 43741 ;;                  1    wreg      unsigned char 
 43742 ;; Registers used:
 43743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43744 ;; Tracked objects:
 43745 ;;		On entry : 0/0
 43746 ;;		On exit  : 0/0
 43747 ;;		Unchanged: 0/0
 43748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43752 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43753 ;;Total ram usage:        4 bytes
 43754 ;; Hardware stack levels used: 1
 43755 ;; Hardware stack levels required when called: 12
 43756 ;; This function calls:
 43757 ;;		Nothing
 43758 ;; This function is called by:
 43759 ;;		_readNVM
 43760 ;; This function uses a non-reentrant model
 43761 ;;
 43762                           
 43763                           	psect	text194
 43764   00B958                     __ptext194:
 43765                           	callstack 0
 43766   00B958                     _FLASH_Read:
 43767                           	callstack 15
 43768                           
 43769                           ;../../VLCBlib_PIC/nvm.c: 297:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 43770                           
 43771                           ; BSR set to: 0
 43772                           ;incstack = 0
 43773   00B958  0EC0               	movlw	192
 43774   00B95A  0100               	movlb	0	; () banked
 43775   00B95C  158D               	andwf	FLASH_Read@address& (0+255),w,b
 43776   00B95E  6F8F               	movwf	??_FLASH_Read& (0+255),b
 43777   00B960  0EFF               	movlw	255
 43778   00B962  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 43779   00B964  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 43780   00B966  51D1               	movf	_flashBlock& (0+255),w,b
 43781   00B968  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 43782   00B96A  E112               	bnz	l18676
 43783   00B96C  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 43784   00B96E  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 43785   00B970  A4D8               	btfss	status,2,c
 43786   00B972  D00E               	goto	l18676
 43787                           
 43788                           ; BSR set to: 0
 43789                           ;../../VLCBlib_PIC/nvm.c: 299:         return flashBuffer[(address&(64 -1))];
 43790   00B974  0E3F               	movlw	63
 43791   00B976  158D               	andwf	FLASH_Read@address& (0+255),w,b
 43792   00B978  6F8F               	movwf	??_FLASH_Read& (0+255),b
 43793   00B97A  0E00               	movlw	0
 43794   00B97C  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 43795   00B97E  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 43796   00B980  0E48               	movlw	low _flashBuffer
 43797   00B982  258F               	addwf	??_FLASH_Read& (0+255),w,b
 43798   00B984  6ED9               	movwf	fsr2l,c
 43799   00B986  0E03               	movlw	high _flashBuffer
 43800   00B988  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 43801   00B98A  6EDA               	movwf	fsr2h,c
 43802   00B98C  50DF               	movf	indf2,w,c
 43803   00B98E  0012               	return	
 43804   00B990                     l18676:
 43805                           
 43806                           ; BSR set to: 0
 43807                           ;../../VLCBlib_PIC/nvm.c: 303:         TBLPTR = address;
 43808   00B990  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 43809   00B994  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 43810   00B998  6AF8               	clrf	248,c	;volatile
 43811                           
 43812                           ; BSR set to: 0
 43813                           ;../../VLCBlib_PIC/nvm.c: 304:         TBLPTRU = 0;
 43814   00B99A  0E00               	movlw	0
 43815   00B99C  6EF8               	movwf	248,c	;volatile
 43816   00B99E  0008               	tblrd		*	;# 
 43817                           
 43818                           ;../../VLCBlib_PIC/nvm.c: 315:         return TABLAT;
 43819   00B9A0  50F5               	movf	245,w,c	;volatile
 43820   00B9A2  0012               	return		;funcret
 43821   00B9A4                     __end_of_FLASH_Read:
 43822                           	callstack 0
 43823                           
 43824 ;; *************** function _EEPROM_Read *****************
 43825 ;; Defined at:
 43826 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 43827 ;; Parameters:    Size  Location     Type
 43828 ;;  index           2   45[BANK0 ] unsigned short 
 43829 ;; Auto vars:     Size  Location     Type
 43830 ;;		None
 43831 ;; Return value:  Size  Location     Type
 43832 ;;                  1    wreg      unsigned char 
 43833 ;; Registers used:
 43834 ;;		wreg, status,2
 43835 ;; Tracked objects:
 43836 ;;		On entry : 0/0
 43837 ;;		On exit  : 0/0
 43838 ;;		Unchanged: 0/0
 43839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43844 ;;Total ram usage:        2 bytes
 43845 ;; Hardware stack levels used: 1
 43846 ;; Hardware stack levels required when called: 12
 43847 ;; This function calls:
 43848 ;;		Nothing
 43849 ;; This function is called by:
 43850 ;;		_EEPROM_Write
 43851 ;;		_readNVM
 43852 ;; This function uses a non-reentrant model
 43853 ;;
 43854                           
 43855                           	psect	text195
 43856   00C4A6                     __ptext195:
 43857                           	callstack 0
 43858   00C4A6                     _EEPROM_Read:
 43859                           	callstack 15
 43860                           
 43861                           ;../../VLCBlib_PIC/nvm.c: 174:     while (EECON1bits.WR)
 43862                           
 43863                           ;../../VLCBlib_PIC/nvm.c: 175:         ;
 43864                           
 43865                           ;incstack = 0
 43866   00C4A6  B27F               	btfsc	127,1,c	;volsfr
 43867   00C4A8  D7FE               	goto	__ptext195
 43868                           
 43869                           ;../../VLCBlib_PIC/nvm.c: 177:     EEADRH = (index >> 8)&0xFF;
 43870   00C4AA  0100               	movlb	0	; () banked
 43871   00C4AC  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 43872   00C4AE  6E75               	movwf	117,c	;volatile
 43873                           
 43874                           ; BSR set to: 0
 43875                           ;../../VLCBlib_PIC/nvm.c: 178:     EEADR = index & 0xFF;
 43876   00C4B0  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 43877                           
 43878                           ; BSR set to: 0
 43879                           ;../../VLCBlib_PIC/nvm.c: 179:     EECON1bits.EEPGD = 0;
 43880   00C4B4  9E7F               	bcf	127,7,c	;volsfr
 43881                           
 43882                           ; BSR set to: 0
 43883                           ;../../VLCBlib_PIC/nvm.c: 180:     EECON1bits.CFGS = 0;
 43884   00C4B6  9C7F               	bcf	127,6,c	;volsfr
 43885                           
 43886                           ; BSR set to: 0
 43887                           ;../../VLCBlib_PIC/nvm.c: 181:     EECON1bits.RD = 1;
 43888   00C4B8  807F               	bsf	127,0,c	;volsfr
 43889   00C4BA                     l2166:
 43890                           
 43891                           ;../../VLCBlib_PIC/nvm.c: 182:     while (EECON1bits.RD)
 43892   00C4BA  B07F               	btfsc	127,0,c	;volsfr
 43893   00C4BC  D7FE               	goto	l2166
 43894   00C4BE  0000               	nop		;# 
 43895                           
 43896                           ;../../VLCBlib_PIC/nvm.c: 187:     return EEDATA;
 43897   00C4C0  5073               	movf	115,w,c	;volatile
 43898   00C4C2  0012               	return		;funcret
 43899   00C4C4                     __end_of_EEPROM_Read:
 43900                           	callstack 0
 43901                           
 43902 ;; *************** function _factoryResetGlobalEvents *****************
 43903 ;; Defined at:
 43904 ;;		line 100 in file "../universalEvents.c"
 43905 ;; Parameters:    Size  Location     Type
 43906 ;;		None
 43907 ;; Auto vars:     Size  Location     Type
 43908 ;;		None
 43909 ;; Return value:  Size  Location     Type
 43910 ;;                  1    wreg      void 
 43911 ;; Registers used:
 43912 ;;		None
 43913 ;; Tracked objects:
 43914 ;;		On entry : 0/0
 43915 ;;		On exit  : 0/0
 43916 ;;		Unchanged: 0/0
 43917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43922 ;;Total ram usage:        0 bytes
 43923 ;; Hardware stack levels used: 1
 43924 ;; Hardware stack levels required when called: 12
 43925 ;; This function calls:
 43926 ;;		Nothing
 43927 ;; This function is called by:
 43928 ;;		_APP_factoryReset
 43929 ;; This function uses a non-reentrant model
 43930 ;;
 43931                           
 43932                           	psect	text196
 43933   00C652                     __ptext196:
 43934                           	callstack 0
 43935   00C652                     _factoryResetGlobalEvents:
 43936                           	callstack 14
 43937                           
 43938                           ;incstack = 0
 43939   00C652  0012               	return		;funcret
 43940   00C654                     __end_of_factoryResetGlobalEvents:
 43941                           	callstack 0
 43942                           
 43943 ;; *************** function _APP_testMode *****************
 43944 ;; Defined at:
 43945 ;;		line 229 in file "../main.c"
 43946 ;; Parameters:    Size  Location     Type
 43947 ;;		None
 43948 ;; Auto vars:     Size  Location     Type
 43949 ;;		None
 43950 ;; Return value:  Size  Location     Type
 43951 ;;                  1    wreg      void 
 43952 ;; Registers used:
 43953 ;;		None
 43954 ;; Tracked objects:
 43955 ;;		On entry : 0/0
 43956 ;;		On exit  : 0/0
 43957 ;;		Unchanged: 0/0
 43958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43963 ;;Total ram usage:        0 bytes
 43964 ;; Hardware stack levels used: 1
 43965 ;; Hardware stack levels required when called: 12
 43966 ;; This function calls:
 43967 ;;		Nothing
 43968 ;; This function is called by:
 43969 ;;		_checkPowerOnPb
 43970 ;; This function uses a non-reentrant model
 43971 ;;
 43972                           
 43973                           	psect	text197
 43974   00C654                     __ptext197:
 43975                           	callstack 0
 43976   00C654                     _APP_testMode:
 43977                           	callstack 17
 43978                           
 43979                           ;incstack = 0
 43980   00C654  0012               	return		;funcret
 43981   00C656                     __end_of_APP_testMode:
 43982                           	callstack 0
 43983                           
 43984 ;; *************** function _isrLow *****************
 43985 ;; Defined at:
 43986 ;;		line 1332 in file "../../VLCBlib_PIC/vlcb.c"
 43987 ;; Parameters:    Size  Location     Type
 43988 ;;		None
 43989 ;; Auto vars:     Size  Location     Type
 43990 ;;		None
 43991 ;; Return value:  Size  Location     Type
 43992 ;;                  1    wreg      void 
 43993 ;; Registers used:
 43994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43995 ;; Tracked objects:
 43996 ;;		On entry : 0/0
 43997 ;;		On exit  : 0/0
 43998 ;;		Unchanged: 0/0
 43999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44002 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44003 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44004 ;;Total ram usage:       15 bytes
 44005 ;; Hardware stack levels used: 1
 44006 ;; Hardware stack levels required when called: 11
 44007 ;; This function calls:
 44008 ;;		_lowIsr
 44009 ;; This function is called by:
 44010 ;;		Interrupt level 1
 44011 ;; This function uses a non-reentrant model
 44012 ;;
 44013                           
 44014 ;; *************** function _isrHigh *****************
 44015 ;; Defined at:
 44016 ;;		line 1325 in file "../../VLCBlib_PIC/vlcb.c"
 44017 ;; Parameters:    Size  Location     Type
 44018 ;;		None
 44019 ;; Auto vars:     Size  Location     Type
 44020 ;;		None
 44021 ;; Return value:  Size  Location     Type
 44022 ;;                  1    wreg      void 
 44023 ;; Registers used:
 44024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44025 ;; Tracked objects:
 44026 ;;		On entry : 0/0
 44027 ;;		On exit  : 0/0
 44028 ;;		Unchanged: 0/0
 44029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44032 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44033 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44034 ;;Total ram usage:       12 bytes
 44035 ;; Hardware stack levels used: 1
 44036 ;; Hardware stack levels required when called: 5
 44037 ;; This function calls:
 44038 ;;		_highIsr
 44039 ;; This function is called by:
 44040 ;;		Interrupt level 2
 44041 ;; This function uses a non-reentrant model
 44042 ;;
 44043                           
 44044                           	psect	mainSec
 44045   008476                     __pmainSec:
 44046                           	callstack 0
 44047   008476                     _isrLow:
 44048                           	callstack 2
 44049                           
 44050                           ;incstack = 0
 44051   008476  8054               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 44052   008478  CFD8 F07E          	movff	status,??_isrLow
 44053   00847C  CFE8 F07F          	movff	wreg,??_isrLow+1
 44054   008480  CFE0 F080          	movff	bsr,??_isrLow+2
 44055   008484  CFFA F081          	movff	pclath,??_isrLow+3
 44056   008488  CFFB F082          	movff	pclatu,??_isrLow+4
 44057   00848C  CFE1 F083          	movff	fsr1l,??_isrLow+5
 44058   008490  CFE2 F084          	movff	fsr1h,??_isrLow+6
 44059   008494  CFD9 F085          	movff	fsr2l,??_isrLow+7
 44060   008498  CFDA F086          	movff	fsr2h,??_isrLow+8
 44061   00849C  CFF3 F087          	movff	prodl,??_isrLow+9
 44062   0084A0  CFF4 F088          	movff	prodh,??_isrLow+10
 44063   0084A4  CFF6 F089          	movff	tblptrl,??_isrLow+11
 44064   0084A8  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 44065   0084AC  CFF8 F08B          	movff	tblptru,??_isrLow+13
 44066   0084B0  CFF5 F08C          	movff	tablat,??_isrLow+14
 44067   0084B4                     
 44068                           ;../../VLCBlib_PIC/vlcb.c: 1333:     lowIsr();
 44069   0084B4  ECCA  F047         	call	_lowIsr	;wreg free
 44070   0084B8  C08C  FFF5         	movff	??_isrLow+14,tablat
 44071   0084BC  C08B  FFF8         	movff	??_isrLow+13,tblptru
 44072   0084C0  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 44073   0084C4  C089  FFF6         	movff	??_isrLow+11,tblptrl
 44074   0084C8  C088  FFF4         	movff	??_isrLow+10,prodh
 44075   0084CC  C087  FFF3         	movff	??_isrLow+9,prodl
 44076   0084D0  C086  FFDA         	movff	??_isrLow+8,fsr2h
 44077   0084D4  C085  FFD9         	movff	??_isrLow+7,fsr2l
 44078   0084D8  C084  FFE2         	movff	??_isrLow+6,fsr1h
 44079   0084DC  C083  FFE1         	movff	??_isrLow+5,fsr1l
 44080   0084E0  C082  FFFB         	movff	??_isrLow+4,pclatu
 44081   0084E4  C081  FFFA         	movff	??_isrLow+3,pclath
 44082   0084E8  C080  FFE0         	movff	??_isrLow+2,bsr
 44083   0084EC  C07F  FFE8         	movff	??_isrLow+1,wreg
 44084   0084F0  C07E  FFD8         	movff	??_isrLow,status
 44085   0084F4  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 44086   0084F6  0010               	retfie	
 44087   0084F8                     __end_of_isrLow:
 44088                           	callstack 0
 44089   0084F8                     _isrHigh:
 44090                           	callstack 2
 44091                           
 44092                           ;incstack = 0
 44093   0084F8  8254               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 44094   0084FA  CFFA F01F          	movff	pclath,??_isrHigh
 44095   0084FE  CFFB F020          	movff	pclatu,??_isrHigh+1
 44096   008502  CFE1 F021          	movff	fsr1l,??_isrHigh+2
 44097   008506  CFE2 F022          	movff	fsr1h,??_isrHigh+3
 44098   00850A  CFD9 F023          	movff	fsr2l,??_isrHigh+4
 44099   00850E  CFDA F024          	movff	fsr2h,??_isrHigh+5
 44100   008512  CFF3 F025          	movff	prodl,??_isrHigh+6
 44101   008516  CFF4 F026          	movff	prodh,??_isrHigh+7
 44102   00851A  CFF6 F027          	movff	tblptrl,??_isrHigh+8
 44103   00851E  CFF7 F028          	movff	tblptrh,??_isrHigh+9
 44104   008522  CFF8 F029          	movff	tblptru,??_isrHigh+10
 44105   008526  CFF5 F02A          	movff	tablat,??_isrHigh+11
 44106   00852A                     
 44107                           ;../../VLCBlib_PIC/vlcb.c: 1326:     highIsr();
 44108   00852A  EC31  F048         	call	_highIsr	;wreg free
 44109   00852E  C02A  FFF5         	movff	??_isrHigh+11,tablat
 44110   008532  C029  FFF8         	movff	??_isrHigh+10,tblptru
 44111   008536  C028  FFF7         	movff	??_isrHigh+9,tblptrh
 44112   00853A  C027  FFF6         	movff	??_isrHigh+8,tblptrl
 44113   00853E  C026  FFF4         	movff	??_isrHigh+7,prodh
 44114   008542  C025  FFF3         	movff	??_isrHigh+6,prodl
 44115   008546  C024  FFDA         	movff	??_isrHigh+5,fsr2h
 44116   00854A  C023  FFD9         	movff	??_isrHigh+4,fsr2l
 44117   00854E  C022  FFE2         	movff	??_isrHigh+3,fsr1h
 44118   008552  C021  FFE1         	movff	??_isrHigh+2,fsr1l
 44119   008556  C020  FFFB         	movff	??_isrHigh+1,pclatu
 44120   00855A  C01F  FFFA         	movff	??_isrHigh,pclath
 44121   00855E  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 44122   008560  0011               	retfie		f
 44123   008562                     __end_of_isrHigh:
 44124                           	callstack 0
 44125                           
 44126                           	psect	intcodelo
 44127   000818                     __pintcodelo:
 44128                           	callstack 2
 44129   000818  EF3B  F042         	goto	_isrLow
 44130                           
 44131 ;; *************** function _lowIsr *****************
 44132 ;; Defined at:
 44133 ;;		line 1077 in file "../../VLCBlib_PIC/vlcb.c"
 44134 ;; Parameters:    Size  Location     Type
 44135 ;;		None
 44136 ;; Auto vars:     Size  Location     Type
 44137 ;;  i               1   29[BANK0 ] unsigned char 
 44138 ;; Return value:  Size  Location     Type
 44139 ;;                  1    wreg      void 
 44140 ;; Registers used:
 44141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44142 ;; Tracked objects:
 44143 ;;		On entry : 0/0
 44144 ;;		On exit  : 0/0
 44145 ;;		Unchanged: 0/0
 44146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44150 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44151 ;;Total ram usage:        5 bytes
 44152 ;; Hardware stack levels used: 1
 44153 ;; Hardware stack levels required when called: 10
 44154 ;; This function calls:
 44155 ;;		NULL
 44156 ;;		_APP_lowIsr
 44157 ;;		_canIsr
 44158 ;;		_mnsLowIsr
 44159 ;; This function is called by:
 44160 ;;		_isrLow
 44161 ;; This function uses a non-reentrant model
 44162 ;;
 44163                           
 44164                           	psect	text199
 44165   008F94                     __ptext199:
 44166                           	callstack 0
 44167   008F94                     _lowIsr:
 44168                           	callstack 2
 44169                           
 44170                           ;../../VLCBlib_PIC/vlcb.c: 1078:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1080:     for 
      +                          (i=0; i<9; i++) {
 44171                           
 44172                           ;incstack = 0
 44173   008F94  0E00               	movlw	0
 44174   008F96  0100               	movlb	0	; () banked
 44175   008F98  6F7D               	movwf	lowIsr@i& (0+255),b
 44176   008F9A                     i1l24958:
 44177                           
 44178                           ; BSR set to: 0
 44179                           ;../../VLCBlib_PIC/vlcb.c: 1081:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 44180   008F9A  517D               	movf	lowIsr@i& (0+255),w,b
 44181   008F9C  0D02               	mullw	2
 44182   008F9E  0E69               	movlw	low _services
 44183   008FA0  24F3               	addwf	243,w,c
 44184   008FA2  6EF6               	movwf	tblptrl,c
 44185   008FA4  0EEE               	movlw	high _services
 44186   008FA6  20F4               	addwfc	244,w,c
 44187   008FA8  6EF7               	movwf	tblptrh,c
 44188   008FAA                     	if	1	;There are 3 active tblptr bytes
 44189   008FAA  6AF8               	clrf	tblptru,c
 44190   008FAC  0E00               	movlw	low (__mediumconst shr (0+16))
 44191   008FAE  22F8               	addwfc	tblptru,f,c
 44192   008FB0                     	endif
 44193   008FB0  0009               	tblrd		*+
 44194   008FB2  50F5               	movf	tablat,w,c
 44195   008FB4  0009               	tblrd		*+
 44196   008FB6  10F5               	iorwf	tablat,w,c
 44197   008FB8  B4D8               	btfsc	status,2,c
 44198   008FBA  D04B               	goto	i1u2681_29
 44199                           
 44200                           ; BSR set to: 0
 44201   008FBC  517D               	movf	lowIsr@i& (0+255),w,b
 44202   008FBE  0D02               	mullw	2
 44203   008FC0  0E69               	movlw	low _services
 44204   008FC2  24F3               	addwf	243,w,c
 44205   008FC4  6EF6               	movwf	tblptrl,c
 44206   008FC6  0EEE               	movlw	high _services
 44207   008FC8  20F4               	addwfc	244,w,c
 44208   008FCA  6EF7               	movwf	tblptrh,c
 44209   008FCC                     	if	1	;There are 3 active tblptr bytes
 44210   008FCC  6AF8               	clrf	tblptru,c
 44211   008FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 44212   008FD0  22F8               	addwfc	tblptru,f,c
 44213   008FD2                     	endif
 44214   008FD2  0009               	tblrd		*+
 44215   008FD4  CFF5 F079          	movff	tablat,??_lowIsr
 44216   008FD8  0009               	tblrd		*+
 44217   008FDA  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44218   008FDE  0E0C               	movlw	12
 44219   008FE0  2779               	addwf	??_lowIsr& (0+255),f,b
 44220   008FE2  0E00               	movlw	0
 44221   008FE4  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44222   008FE6  C079  FFF6         	movff	??_lowIsr,tblptrl
 44223   008FEA  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44224   008FEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44225   008FEE  6AF8               	clrf	tblptru,c
 44226   008FF0                     	endif
 44227   008FF0                     	if	0	;tblptru may be non-zero
 44228   008FF0                     	endif
 44229   008FF0  0009               	tblrd		*+
 44230   008FF2  50F5               	movf	tablat,w,c
 44231   008FF4  0009               	tblrd		*+
 44232   008FF6  10F5               	iorwf	tablat,w,c
 44233   008FF8  B4D8               	btfsc	status,2,c
 44234   008FFA  D02B               	goto	i1u2681_29
 44235                           
 44236                           ; BSR set to: 0
 44237                           ;../../VLCBlib_PIC/vlcb.c: 1082:             services[i]->lowIsr();
 44238   008FFC  517D               	movf	lowIsr@i& (0+255),w,b
 44239   008FFE  0D02               	mullw	2
 44240   009000  0E69               	movlw	low _services
 44241   009002  24F3               	addwf	243,w,c
 44242   009004  6EF6               	movwf	tblptrl,c
 44243   009006  0EEE               	movlw	high _services
 44244   009008  20F4               	addwfc	244,w,c
 44245   00900A  6EF7               	movwf	tblptrh,c
 44246   00900C                     	if	1	;There are 3 active tblptr bytes
 44247   00900C  6AF8               	clrf	tblptru,c
 44248   00900E  0E00               	movlw	low (__mediumconst shr (0+16))
 44249   009010  22F8               	addwfc	tblptru,f,c
 44250   009012                     	endif
 44251   009012  0009               	tblrd		*+
 44252   009014  CFF5 F079          	movff	tablat,??_lowIsr
 44253   009018  0009               	tblrd		*+
 44254   00901A  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44255   00901E  0E0C               	movlw	12
 44256   009020  2779               	addwf	??_lowIsr& (0+255),f,b
 44257   009022  0E00               	movlw	0
 44258   009024  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44259   009026  C079  FFF6         	movff	??_lowIsr,tblptrl
 44260   00902A  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44261   00902E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44262   00902E  6AF8               	clrf	tblptru,c
 44263   009030                     	endif
 44264   009030                     	if	0	;tblptru may be non-zero
 44265   009030                     	endif
 44266   009030  0009               	tblrd		*+
 44267   009032  CFF5 F07B          	movff	tablat,??_lowIsr+2
 44268   009036  0009               	tblrd		*+
 44269   009038  CFF5 F07C          	movff	tablat,??_lowIsr+3
 44270   00903C  D801               	call	i1u2681_28
 44271   00903E  D009               	goto	i1u2681_29
 44272   009040                     i1u2681_28:
 44273   009040  0005               	push	
 44274   009042  6EFA               	movwf	pclath,c
 44275   009044  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 44276   009046  6EFD               	movwf	tosl,c
 44277   009048  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 44278   00904A  6EFE               	movwf	tosh,c
 44279   00904C  6AFF               	clrf	tosu,c
 44280   00904E  50FA               	movf	pclath,w,c
 44281   009050  0012               	return		;indir
 44282   009052                     i1u2681_29:
 44283                           
 44284                           ;../../VLCBlib_PIC/vlcb.c: 1084:     }
 44285   009052  0100               	movlb	0	; () banked
 44286   009054  2B7D               	incf	lowIsr@i& (0+255),f,b
 44287                           
 44288                           ; BSR set to: 0
 44289   009056  0E08               	movlw	8
 44290   009058  657D               	cpfsgt	lowIsr@i& (0+255),b
 44291   00905A  D79F               	goto	i1l24958
 44292                           
 44293                           ; BSR set to: 0
 44294                           ;../../VLCBlib_PIC/vlcb.c: 1085:     APP_lowIsr();
 44295   00905C  EC2B  F063         	call	_APP_lowIsr	;wreg free
 44296   009060  0012               	return		;funcret
 44297   009062                     __end_of_lowIsr:
 44298                           	callstack 0
 44299                           
 44300 ;; *************** function _canIsr *****************
 44301 ;; Defined at:
 44302 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 44303 ;; Parameters:    Size  Location     Type
 44304 ;;		None
 44305 ;; Auto vars:     Size  Location     Type
 44306 ;;		None
 44307 ;; Return value:  Size  Location     Type
 44308 ;;                  1    wreg      void 
 44309 ;; Registers used:
 44310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44311 ;; Tracked objects:
 44312 ;;		On entry : 0/0
 44313 ;;		On exit  : 0/0
 44314 ;;		Unchanged: 0/0
 44315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44320 ;;Total ram usage:        0 bytes
 44321 ;; Hardware stack levels used: 1
 44322 ;; Hardware stack levels required when called: 9
 44323 ;; This function calls:
 44324 ;;		_canFillRxFifo
 44325 ;;		_canTxError
 44326 ;;		_checkCANTimeout
 44327 ;;		_checkTxFifo
 44328 ;; This function is called by:
 44329 ;;		_highIsr
 44330 ;;		_lowIsr
 44331 ;; This function uses a non-reentrant model
 44332 ;;
 44333                           
 44334                           	psect	text200
 44335   00C448                     __ptext200:
 44336                           	callstack 0
 44337   00C448                     _canIsr:
 44338                           	callstack 0
 44339                           
 44340                           ;Skip over the trampoline to the duplicate function for level 2
 44341   00C448  A254               	btfss	btemp,1,c
 44342   00C44A  D002               	goto	_canIsr$intlevel1
 44343   00C44C  EFA2  F062         	goto	i2_canIsr
 44344   00C450                     _canIsr$intlevel1:
 44345                           	callstack 2
 44346                           
 44347                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 44348                           
 44349                           ;incstack = 0
 44350   00C450  B077               	btfsc	119,0,c	;volatile
 44351                           
 44352                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 44353   00C452  EC3E  F039         	call	_canFillRxFifo	;wreg free
 44354                           
 44355                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 44356   00C456  BA77               	btfsc	119,5,c	;volatile
 44357                           
 44358                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 44359   00C458  EC0E  F059         	call	_canTxError	;wreg free
 44360                           
 44361                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 44362   00C45C  B877               	btfsc	119,4,c	;volatile
 44363                           
 44364                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 44365   00C45E  EC29  F029         	call	_checkTxFifo	;wreg free
 44366                           
 44367                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 44368                           
 44369                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 44370   00C462  ECBD  F05B         	call	_checkCANTimeout	;wreg free
 44371   00C466  0012               	return		;funcret
 44372   00C468                     __end_of_canIsr:
 44373                           	callstack 0
 44374                           
 44375 ;; *************** function _mnsLowIsr *****************
 44376 ;; Defined at:
 44377 ;;		line 781 in file "../../VLCBlib_PIC/mns.c"
 44378 ;; Parameters:    Size  Location     Type
 44379 ;;		None
 44380 ;; Auto vars:     Size  Location     Type
 44381 ;;		None
 44382 ;; Return value:  Size  Location     Type
 44383 ;;                  1    wreg      void 
 44384 ;; Registers used:
 44385 ;;		wreg, status,2, status,0
 44386 ;; Tracked objects:
 44387 ;;		On entry : 0/0
 44388 ;;		On exit  : 0/0
 44389 ;;		Unchanged: 0/0
 44390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44395 ;;Total ram usage:        0 bytes
 44396 ;; Hardware stack levels used: 1
 44397 ;; Hardware stack levels required when called: 6
 44398 ;; This function calls:
 44399 ;;		Nothing
 44400 ;; This function is called by:
 44401 ;;		_lowIsr
 44402 ;; This function uses a non-reentrant model
 44403 ;;
 44404                           
 44405                           	psect	text201
 44406   00C586                     __ptext201:
 44407                           	callstack 0
 44408   00C586                     _mnsLowIsr:
 44409                           	callstack 5
 44410                           
 44411                           ;../../VLCBlib_PIC/mns.c: 784:     if(INTCONbits.TMR0IF) {
 44412                           
 44413                           ;incstack = 0
 44414   00C586  A4F2               	btfss	242,2,c	;volatile
 44415   00C588  0012               	return	
 44416                           
 44417                           ;../../VLCBlib_PIC/mns.c: 786:         INTCONbits.TMR0IF = 0;
 44418   00C58A  94F2               	bcf	242,2,c	;volatile
 44419                           
 44420                           ;../../VLCBlib_PIC/mns.c: 787:         timerExtension1++;
 44421   00C58C  0100               	movlb	0	; () banked
 44422   00C58E  2BC7               	incf	_timerExtension1& (0+255),f,b	;volatile
 44423                           
 44424                           ; BSR set to: 0
 44425                           ;../../VLCBlib_PIC/mns.c: 788:         if(timerExtension1 == 0) {
 44426   00C590  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 44427   00C592  A4D8               	btfss	status,2,c
 44428   00C594  0012               	return	
 44429                           
 44430                           ; BSR set to: 0
 44431                           ;../../VLCBlib_PIC/mns.c: 789:             timerExtension2++;
 44432   00C596  2BC6               	incf	_timerExtension2& (0+255),f,b	;volatile
 44433   00C598  0012               	return		;funcret
 44434   00C59A                     __end_of_mnsLowIsr:
 44435                           	callstack 0
 44436                           
 44437 ;; *************** function _checkCANTimeout *****************
 44438 ;; Defined at:
 44439 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 44440 ;; Parameters:    Size  Location     Type
 44441 ;;		None
 44442 ;; Auto vars:     Size  Location     Type
 44443 ;;		None
 44444 ;; Return value:  Size  Location     Type
 44445 ;;                  1    wreg      void 
 44446 ;; Registers used:
 44447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44448 ;; Tracked objects:
 44449 ;;		On entry : 0/0
 44450 ;;		On exit  : 0/0
 44451 ;;		Unchanged: 0/0
 44452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44455 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44456 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44457 ;;Total ram usage:        4 bytes
 44458 ;; Hardware stack levels used: 1
 44459 ;; Hardware stack levels required when called: 8
 44460 ;; This function calls:
 44461 ;;		_checkTxFifo
 44462 ;;		i1_tickGet
 44463 ;;		i1_updateModuleErrorStatus
 44464 ;; This function is called by:
 44465 ;;		_canIsr
 44466 ;; This function uses a non-reentrant model
 44467 ;;
 44468                           
 44469                           	psect	text202
 44470   00B77A                     __ptext202:
 44471                           	callstack 0
 44472   00B77A                     _checkCANTimeout:
 44473                           	callstack 2
 44474                           
 44475                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 44476                           
 44477                           ;incstack = 0
 44478   00B77A  502F               	movf	_canTransmitTimeout^0,w,c
 44479   00B77C  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 44480   00B77E  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 44481   00B780  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 44482   00B782  B4D8               	btfsc	status,2,c
 44483   00B784  0012               	return	
 44484                           
 44485                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 44486   00B786  EC3C  F05B         	call	i1_tickGet	;wreg free
 44487   00B78A  502F               	movf	_canTransmitTimeout^0,w,c
 44488   00B78C  0100               	movlb	0	; () banked
 44489   00B78E  5D60               	subwf	?i1_tickGet& (0+255),w,b
 44490   00B790  6F75               	movwf	??_checkCANTimeout& (0+255),b
 44491   00B792  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 44492   00B794  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 44493   00B796  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 44494   00B798  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 44495   00B79A  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 44496   00B79C  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 44497   00B79E  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 44498   00B7A0  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 44499   00B7A2  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 44500   00B7A4  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 44501   00B7A6  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 44502   00B7A8  E106               	bnz	i1u2334_20
 44503   00B7AA  0E25               	movlw	37
 44504   00B7AC  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 44505   00B7AE  0EF4               	movlw	244
 44506   00B7B0  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 44507   00B7B2  A0D8               	btfss	status,0,c
 44508   00B7B4  0012               	return	
 44509   00B7B6                     i1u2334_20:
 44510                           
 44511                           ; BSR set to: 0
 44512                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 44513   00B7B6  0E01               	movlw	1
 44514   00B7B8  6FC0               	movwf	_canTransmitFailed& (0+255),b
 44515                           
 44516                           ; BSR set to: 0
 44517                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 44518   00B7BA  010F               	movlb	15	; () banked
 44519   00B7BC  9720               	bcf	32,3,b	;volatile
 44520                           
 44521                           ; BSR set to: 15
 44522                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 44523   00B7BE  EC29  F029         	call	_checkTxFifo	;wreg free
 44524                           
 44525                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 44526   00B7C2  0101               	movlb	1	; () banked
 44527   00B7C4  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44528   00B7C6  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 44529                           
 44530                           ; BSR set to: 1
 44531                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 44532   00B7C8  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44533   00B7CC  0012               	return		;funcret
 44534   00B7CE                     __end_of_checkCANTimeout:
 44535                           	callstack 0
 44536                           
 44537 ;; *************** function _canTxError *****************
 44538 ;; Defined at:
 44539 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 44540 ;; Parameters:    Size  Location     Type
 44541 ;;		None
 44542 ;; Auto vars:     Size  Location     Type
 44543 ;;		None
 44544 ;; Return value:  Size  Location     Type
 44545 ;;                  1    wreg      void 
 44546 ;; Registers used:
 44547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44548 ;; Tracked objects:
 44549 ;;		On entry : 0/0
 44550 ;;		On exit  : 0/0
 44551 ;;		Unchanged: 0/0
 44552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44557 ;;Total ram usage:        0 bytes
 44558 ;; Hardware stack levels used: 1
 44559 ;; Hardware stack levels required when called: 8
 44560 ;; This function calls:
 44561 ;;		_checkTxFifo
 44562 ;;		i1_updateModuleErrorStatus
 44563 ;; This function is called by:
 44564 ;;		_canIsr
 44565 ;; This function uses a non-reentrant model
 44566 ;;
 44567                           
 44568                           	psect	text203
 44569   00B21C                     __ptext203:
 44570                           	callstack 0
 44571   00B21C                     _canTxError:
 44572                           	callstack 2
 44573                           
 44574                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 44575                           
 44576                           ;incstack = 0
 44577   00B21C  010F               	movlb	15	; () banked
 44578   00B21E  AB20               	btfss	32,5,b	;volatile
 44579   00B220  D012               	goto	i1l22308
 44580                           
 44581                           ; BSR set to: 15
 44582                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 44583   00B222  0E01               	movlw	1
 44584   00B224  0100               	movlb	0	; () banked
 44585   00B226  6FC0               	movwf	_canTransmitFailed& (0+255),b
 44586                           
 44587                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 44588   00B228  0E00               	movlw	0
 44589   00B22A  6E2F               	movwf	_canTransmitTimeout^0,c
 44590   00B22C  0E00               	movlw	0
 44591   00B22E  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 44592   00B230  0E00               	movlw	0
 44593   00B232  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 44594   00B234  0E00               	movlw	0
 44595   00B236  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 44596                           
 44597                           ; BSR set to: 0
 44598                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 44599   00B238  010F               	movlb	15	; () banked
 44600   00B23A  9720               	bcf	32,3,b	;volatile
 44601                           
 44602                           ; BSR set to: 15
 44603                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 44604   00B23C  0101               	movlb	1	; () banked
 44605   00B23E  4B7F               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 44606   00B240  2B80               	incf	(_canDiagnostics+25)& (0+255),f,b
 44607                           
 44608                           ; BSR set to: 1
 44609                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 44610   00B242  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44611   00B246                     i1l22308:
 44612                           
 44613                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 44614   00B246  010F               	movlb	15	; () banked
 44615   00B248  A920               	btfss	32,4,b	;volatile
 44616   00B24A  D012               	goto	i1l22318
 44617                           
 44618                           ; BSR set to: 15
 44619                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 44620   00B24C  0E01               	movlw	1
 44621   00B24E  0100               	movlb	0	; () banked
 44622   00B250  6FC0               	movwf	_canTransmitFailed& (0+255),b
 44623                           
 44624                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 44625   00B252  0E00               	movlw	0
 44626   00B254  6E2F               	movwf	_canTransmitTimeout^0,c
 44627   00B256  0E00               	movlw	0
 44628   00B258  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 44629   00B25A  0E00               	movlw	0
 44630   00B25C  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 44631   00B25E  0E00               	movlw	0
 44632   00B260  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 44633                           
 44634                           ; BSR set to: 0
 44635                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 44636   00B262  010F               	movlb	15	; () banked
 44637   00B264  9720               	bcf	32,3,b	;volatile
 44638                           
 44639                           ; BSR set to: 15
 44640                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 44641   00B266  0101               	movlb	1	; () banked
 44642   00B268  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44643   00B26A  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 44644                           
 44645                           ; BSR set to: 1
 44646                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 44647   00B26C  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44648   00B270                     i1l22318:
 44649                           
 44650                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 44651   00B270  0100               	movlb	0	; () banked
 44652   00B272  51C0               	movf	_canTransmitFailed& (0+255),w,b
 44653   00B274  A4D8               	btfss	status,2,c
 44654                           
 44655                           ; BSR set to: 0
 44656                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 44657   00B276  EC29  F029         	call	_checkTxFifo	;wreg free
 44658                           
 44659                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 44660   00B27A  9A77               	bcf	119,5,c	;volatile
 44661   00B27C  0012               	return		;funcret
 44662   00B27E                     __end_of_canTxError:
 44663                           	callstack 0
 44664                           
 44665 ;; *************** function _checkTxFifo *****************
 44666 ;; Defined at:
 44667 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 44668 ;; Parameters:    Size  Location     Type
 44669 ;;		None
 44670 ;; Auto vars:     Size  Location     Type
 44671 ;;  mp              2   19[BANK0 ] PTR struct Message
 44672 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44673 ;;  m               2   17[BANK0 ] PTR struct Message
 44674 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44675 ;; Return value:  Size  Location     Type
 44676 ;;                  1    wreg      void 
 44677 ;; Registers used:
 44678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44679 ;; Tracked objects:
 44680 ;;		On entry : 0/0
 44681 ;;		On exit  : 0/0
 44682 ;;		Unchanged: 0/0
 44683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44685 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44686 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44687 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44688 ;;Total ram usage:        9 bytes
 44689 ;; Hardware stack levels used: 1
 44690 ;; Hardware stack levels required when called: 7
 44691 ;; This function calls:
 44692 ;;		i1_getNextWriteMessage
 44693 ;;		i1_isEvent
 44694 ;;		i1_pop
 44695 ;;		i1_tickGet
 44696 ;;		i1_updateModuleErrorStatus
 44697 ;; This function is called by:
 44698 ;;		_canIsr
 44699 ;;		_checkCANTimeout
 44700 ;;		_canTxError
 44701 ;; This function uses a non-reentrant model
 44702 ;;
 44703                           
 44704                           	psect	text204
 44705   005252                     __ptext204:
 44706                           	callstack 0
 44707   005252                     _checkTxFifo:
 44708                           	callstack 3
 44709                           
 44710                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 44711                           
 44712                           ;incstack = 0
 44713   005252  9877               	bcf	119,4,c	;volatile
 44714                           
 44715                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 44716   005254  010F               	movlb	15	; () banked
 44717   005256  B720               	btfsc	32,3,b	;volatile
 44718   005258  D158               	goto	i1l2540
 44719                           
 44720                           ; BSR set to: 15
 44721                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 44722   00525A  0E4A               	movlw	low _txQueue
 44723   00525C  0100               	movlb	0	; () banked
 44724   00525E  6F60               	movwf	i1pop@q& (0+255),b
 44725   005260  EC86  F04E         	call	i1_pop	;wreg free
 44726   005264  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 44727   005268  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 44728                           
 44729                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 44730   00526C  0100               	movlb	0	; () banked
 44731   00526E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44732   005270  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 44733   005272  B4D8               	btfsc	status,2,c
 44734   005274  D13C               	goto	i1l21168
 44735                           
 44736                           ; BSR set to: 0
 44737                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 44738   005276  EE20 F001          	lfsr	2,1
 44739   00527A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44740   00527C  26D9               	addwf	fsr2l,f,c
 44741   00527E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44742   005280  22DA               	addwfc	fsr2h,f,c
 44743   005282  50DF               	movf	indf2,w,c
 44744   005284  6F6C               	movwf	??_checkTxFifo& (0+255),b
 44745   005286  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 44746   005288  0E29               	movlw	low _priorities
 44747   00528A  256C               	addwf	??_checkTxFifo& (0+255),w,b
 44748   00528C  6EF6               	movwf	tblptrl,c
 44749   00528E  0EED               	movlw	high _priorities
 44750   005290  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 44751   005292  6EF7               	movwf	tblptrh,c
 44752   005294                     	if	1	;There are 3 active tblptr bytes
 44753   005294  6AF8               	clrf	tblptru,c
 44754   005296  0E00               	movlw	low (__mediumconst shr (0+16))
 44755   005298  22F8               	addwfc	tblptru,f,c
 44756   00529A                     	endif
 44757   00529A  0008               	tblrd		*
 44758   00529C  50F5               	movf	tablat,w,c
 44759   00529E  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 44760   0052A0  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 44761   0052A2  0E86               	movlw	low _canPri
 44762   0052A4  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 44763   0052A6  6EF6               	movwf	tblptrl,c
 44764   0052A8  0EEE               	movlw	high _canPri
 44765   0052AA  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 44766   0052AC  6EF7               	movwf	tblptrh,c
 44767   0052AE                     	if	1	;There are 3 active tblptr bytes
 44768   0052AE  6AF8               	clrf	tblptru,c
 44769   0052B0  0E00               	movlw	low (__mediumconst shr (0+16))
 44770   0052B2  22F8               	addwfc	tblptru,f,c
 44771   0052B4                     	endif
 44772   0052B4  0008               	tblrd		*
 44773   0052B6  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 44774   0052BA  39C1               	swapf	_canId& (0+255),w,b
 44775   0052BC  46E8               	rlncf	wreg,f,c
 44776   0052BE  0B1F               	andlw	31
 44777   0052C0  0B0F               	andlw	15
 44778   0052C2  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 44779   0052C4  010F               	movlb	15	; () banked
 44780   0052C6  6F21               	movwf	33,b	;volatile
 44781                           
 44782                           ; BSR set to: 15
 44783                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 44784   0052C8  C0C1  F06C         	movff	_canId,??_checkTxFifo
 44785   0052CC  0E07               	movlw	7
 44786   0052CE  0100               	movlb	0	; () banked
 44787   0052D0  176C               	andwf	??_checkTxFifo& (0+255),f,b
 44788   0052D2  0E05               	movlw	5
 44789   0052D4  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 44790   0052D6                     i1u2167_25:
 44791   0052D6  90D8               	bcf	status,0,c
 44792   0052D8  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 44793   0052DA  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 44794   0052DC  D7FC               	goto	i1u2167_25
 44795   0052DE  516C               	movf	??_checkTxFifo& (0+255),w,b
 44796   0052E0  010F               	movlb	15	; () banked
 44797   0052E2  6F22               	movwf	34,b	;volatile
 44798                           
 44799                           ; BSR set to: 15
 44800                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 44801   0052E4  0100               	movlb	0	; () banked
 44802   0052E6  EE20 F001          	lfsr	2,1
 44803   0052EA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44804   0052EC  26D9               	addwf	fsr2l,f,c
 44805   0052EE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44806   0052F0  22DA               	addwfc	fsr2h,f,c
 44807   0052F2  50DF               	movf	indf2,w,c
 44808   0052F4  010F               	movlb	15	; () banked
 44809   0052F6  6F26               	movwf	38,b	;volatile
 44810                           
 44811                           ; BSR set to: 15
 44812                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 44813   0052F8  0100               	movlb	0	; () banked
 44814   0052FA  EE20 F002          	lfsr	2,2
 44815   0052FE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44816   005300  26D9               	addwf	fsr2l,f,c
 44817   005302  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44818   005304  22DA               	addwfc	fsr2h,f,c
 44819   005306  50DF               	movf	indf2,w,c
 44820   005308  010F               	movlb	15	; () banked
 44821   00530A  6F27               	movwf	39,b	;volatile
 44822                           
 44823                           ; BSR set to: 15
 44824                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 44825   00530C  0100               	movlb	0	; () banked
 44826   00530E  EE20 F003          	lfsr	2,3
 44827   005312  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44828   005314  26D9               	addwf	fsr2l,f,c
 44829   005316  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44830   005318  22DA               	addwfc	fsr2h,f,c
 44831   00531A  50DF               	movf	indf2,w,c
 44832   00531C  010F               	movlb	15	; () banked
 44833   00531E  6F28               	movwf	40,b	;volatile
 44834                           
 44835                           ; BSR set to: 15
 44836                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 44837   005320  0100               	movlb	0	; () banked
 44838   005322  EE20 F004          	lfsr	2,4
 44839   005326  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44840   005328  26D9               	addwf	fsr2l,f,c
 44841   00532A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44842   00532C  22DA               	addwfc	fsr2h,f,c
 44843   00532E  50DF               	movf	indf2,w,c
 44844   005330  010F               	movlb	15	; () banked
 44845   005332  6F29               	movwf	41,b	;volatile
 44846                           
 44847                           ; BSR set to: 15
 44848                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 44849   005334  0100               	movlb	0	; () banked
 44850   005336  EE20 F005          	lfsr	2,5
 44851   00533A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44852   00533C  26D9               	addwf	fsr2l,f,c
 44853   00533E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44854   005340  22DA               	addwfc	fsr2h,f,c
 44855   005342  50DF               	movf	indf2,w,c
 44856   005344  010F               	movlb	15	; () banked
 44857   005346  6F2A               	movwf	42,b	;volatile
 44858                           
 44859                           ; BSR set to: 15
 44860                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 44861   005348  0100               	movlb	0	; () banked
 44862   00534A  EE20 F006          	lfsr	2,6
 44863   00534E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44864   005350  26D9               	addwf	fsr2l,f,c
 44865   005352  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44866   005354  22DA               	addwfc	fsr2h,f,c
 44867   005356  50DF               	movf	indf2,w,c
 44868   005358  010F               	movlb	15	; () banked
 44869   00535A  6F2B               	movwf	43,b	;volatile
 44870                           
 44871                           ; BSR set to: 15
 44872                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 44873   00535C  0100               	movlb	0	; () banked
 44874   00535E  EE20 F007          	lfsr	2,7
 44875   005362  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44876   005364  26D9               	addwf	fsr2l,f,c
 44877   005366  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44878   005368  22DA               	addwfc	fsr2h,f,c
 44879   00536A  50DF               	movf	indf2,w,c
 44880   00536C  010F               	movlb	15	; () banked
 44881   00536E  6F2C               	movwf	44,b	;volatile
 44882                           
 44883                           ; BSR set to: 15
 44884                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 44885   005370  0100               	movlb	0	; () banked
 44886   005372  EE20 F008          	lfsr	2,8
 44887   005376  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44888   005378  26D9               	addwf	fsr2l,f,c
 44889   00537A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44890   00537C  22DA               	addwfc	fsr2h,f,c
 44891   00537E  50DF               	movf	indf2,w,c
 44892   005380  010F               	movlb	15	; () banked
 44893   005382  6F2D               	movwf	45,b	;volatile
 44894                           
 44895                           ; BSR set to: 15
 44896                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 44897   005384  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 44898   005388  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 44899   00538C  50DF               	movf	indf2,w,c
 44900   00538E  6F25               	movwf	37,b	;volatile
 44901                           
 44902                           ; BSR set to: 15
 44903                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 44904   005390  EC3C  F05B         	call	i1_tickGet	;wreg free
 44905   005394  C060  F02F         	movff	?i1_tickGet,_canTransmitTimeout
 44906   005398  C061  F030         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 44907   00539C  C062  F031         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 44908   0053A0  C063  F032         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 44909                           
 44910                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 44911   0053A4  0E00               	movlw	0
 44912   0053A6  0100               	movlb	0	; () banked
 44913   0053A8  6FC0               	movwf	_canTransmitFailed& (0+255),b
 44914                           
 44915                           ; BSR set to: 0
 44916                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 44917   0053AA  010F               	movlb	15	; () banked
 44918   0053AC  8720               	bsf	32,3,b	;volatile
 44919                           
 44920                           ; BSR set to: 15
 44921                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 44922   0053AE  8876               	bsf	118,4,c	;volatile
 44923                           
 44924                           ; BSR set to: 15
 44925                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 44926   0053B0  0101               	movlb	1	; () banked
 44927   0053B2  4B73               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 44928   0053B4  2B74               	incf	(_canDiagnostics+13)& (0+255),f,b
 44929                           
 44930                           ; BSR set to: 1
 44931                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 44932   0053B6  0100               	movlb	0	; () banked
 44933   0053B8  EE20 F001          	lfsr	2,1
 44934   0053BC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44935   0053BE  26D9               	addwf	fsr2l,f,c
 44936   0053C0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44937   0053C2  22DA               	addwfc	fsr2h,f,c
 44938   0053C4  50DF               	movf	indf2,w,c
 44939   0053C6  EC63  F061         	call	i1_isEvent
 44940   0053CA  0900               	iorlw	0
 44941   0053CC  B4D8               	btfsc	status,2,c
 44942   0053CE  0012               	return	
 44943                           
 44944                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 44945   0053D0  0E4F               	movlw	low _rxQueue
 44946   0053D2  0100               	movlb	0	; () banked
 44947   0053D4  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44948   0053D6  EC92  F046         	call	i1_getNextWriteMessage	;wreg free
 44949   0053DA  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 44950   0053DE  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 44951                           
 44952                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 44953   0053E2  0100               	movlb	0	; () banked
 44954   0053E4  5171               	movf	checkTxFifo@m& (0+255),w,b
 44955   0053E6  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 44956   0053E8  A4D8               	btfss	status,2,c
 44957   0053EA  D006               	goto	i1l21150
 44958                           
 44959                           ; BSR set to: 0
 44960                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 44961   0053EC  0101               	movlb	1	; () banked
 44962   0053EE  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 44963   0053F0  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 44964                           
 44965                           ; BSR set to: 1
 44966                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 44967   0053F2  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44968                           
 44969                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 44970   0053F6  0012               	return	
 44971   0053F8                     i1l21150:
 44972                           
 44973                           ; BSR set to: 0
 44974                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 44975   0053F8  EE20 F001          	lfsr	2,1
 44976   0053FC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44977   0053FE  26D9               	addwf	fsr2l,f,c
 44978   005400  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44979   005402  22DA               	addwfc	fsr2h,f,c
 44980   005404  EE10 F001          	lfsr	1,1
 44981   005408  5171               	movf	checkTxFifo@m& (0+255),w,b
 44982   00540A  26E1               	addwf	fsr1l,f,c
 44983   00540C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44984   00540E  22E2               	addwfc	fsr1h,f,c
 44985   005410  CFDF FFE7          	movff	indf2,indf1
 44986                           
 44987                           ; BSR set to: 0
 44988                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 44989   005414  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 44990   005418  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 44991   00541C  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 44992   005420  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 44993   005424  CFDF FFE7          	movff	indf2,indf1
 44994                           
 44995                           ; BSR set to: 0
 44996                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 44997   005428  EE20 F002          	lfsr	2,2
 44998   00542C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44999   00542E  26D9               	addwf	fsr2l,f,c
 45000   005430  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45001   005432  22DA               	addwfc	fsr2h,f,c
 45002   005434  EE10 F002          	lfsr	1,2
 45003   005438  5171               	movf	checkTxFifo@m& (0+255),w,b
 45004   00543A  26E1               	addwf	fsr1l,f,c
 45005   00543C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45006   00543E  22E2               	addwfc	fsr1h,f,c
 45007   005440  CFDF FFE7          	movff	indf2,indf1
 45008                           
 45009                           ; BSR set to: 0
 45010                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 45011   005444  EE20 F003          	lfsr	2,3
 45012   005448  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45013   00544A  26D9               	addwf	fsr2l,f,c
 45014   00544C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45015   00544E  22DA               	addwfc	fsr2h,f,c
 45016   005450  EE10 F003          	lfsr	1,3
 45017   005454  5171               	movf	checkTxFifo@m& (0+255),w,b
 45018   005456  26E1               	addwf	fsr1l,f,c
 45019   005458  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45020   00545A  22E2               	addwfc	fsr1h,f,c
 45021   00545C  CFDF FFE7          	movff	indf2,indf1
 45022                           
 45023                           ; BSR set to: 0
 45024                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 45025   005460  EE20 F004          	lfsr	2,4
 45026   005464  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45027   005466  26D9               	addwf	fsr2l,f,c
 45028   005468  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45029   00546A  22DA               	addwfc	fsr2h,f,c
 45030   00546C  EE10 F004          	lfsr	1,4
 45031   005470  5171               	movf	checkTxFifo@m& (0+255),w,b
 45032   005472  26E1               	addwf	fsr1l,f,c
 45033   005474  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45034   005476  22E2               	addwfc	fsr1h,f,c
 45035   005478  CFDF FFE7          	movff	indf2,indf1
 45036                           
 45037                           ; BSR set to: 0
 45038                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 45039   00547C  EE20 F005          	lfsr	2,5
 45040   005480  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45041   005482  26D9               	addwf	fsr2l,f,c
 45042   005484  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45043   005486  22DA               	addwfc	fsr2h,f,c
 45044   005488  EE10 F005          	lfsr	1,5
 45045   00548C  5171               	movf	checkTxFifo@m& (0+255),w,b
 45046   00548E  26E1               	addwf	fsr1l,f,c
 45047   005490  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45048   005492  22E2               	addwfc	fsr1h,f,c
 45049   005494  CFDF FFE7          	movff	indf2,indf1
 45050                           
 45051                           ; BSR set to: 0
 45052                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 45053   005498  EE20 F006          	lfsr	2,6
 45054   00549C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45055   00549E  26D9               	addwf	fsr2l,f,c
 45056   0054A0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45057   0054A2  22DA               	addwfc	fsr2h,f,c
 45058   0054A4  EE10 F006          	lfsr	1,6
 45059   0054A8  5171               	movf	checkTxFifo@m& (0+255),w,b
 45060   0054AA  26E1               	addwf	fsr1l,f,c
 45061   0054AC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45062   0054AE  22E2               	addwfc	fsr1h,f,c
 45063   0054B0  CFDF FFE7          	movff	indf2,indf1
 45064                           
 45065                           ; BSR set to: 0
 45066                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 45067   0054B4  EE20 F007          	lfsr	2,7
 45068   0054B8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45069   0054BA  26D9               	addwf	fsr2l,f,c
 45070   0054BC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45071   0054BE  22DA               	addwfc	fsr2h,f,c
 45072   0054C0  EE10 F007          	lfsr	1,7
 45073   0054C4  5171               	movf	checkTxFifo@m& (0+255),w,b
 45074   0054C6  26E1               	addwf	fsr1l,f,c
 45075   0054C8  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45076   0054CA  22E2               	addwfc	fsr1h,f,c
 45077   0054CC  CFDF FFE7          	movff	indf2,indf1
 45078                           
 45079                           ; BSR set to: 0
 45080                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 45081   0054D0  EE20 F008          	lfsr	2,8
 45082   0054D4  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45083   0054D6  26D9               	addwf	fsr2l,f,c
 45084   0054D8  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45085   0054DA  22DA               	addwfc	fsr2h,f,c
 45086   0054DC  EE10 F008          	lfsr	1,8
 45087   0054E0  5171               	movf	checkTxFifo@m& (0+255),w,b
 45088   0054E2  26E1               	addwf	fsr1l,f,c
 45089   0054E4  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45090   0054E6  22E2               	addwfc	fsr1h,f,c
 45091   0054E8  CFDF FFE7          	movff	indf2,indf1
 45092   0054EC  0012               	return	
 45093   0054EE                     i1l21168:
 45094                           
 45095                           ; BSR set to: 0
 45096                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 45097   0054EE  0E00               	movlw	0
 45098   0054F0  6E2F               	movwf	_canTransmitTimeout^0,c
 45099   0054F2  0E00               	movlw	0
 45100   0054F4  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 45101   0054F6  0E00               	movlw	0
 45102   0054F8  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 45103   0054FA  0E00               	movlw	0
 45104   0054FC  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 45105                           
 45106                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 45107   0054FE  0E00               	movlw	0
 45108   005500  010F               	movlb	15	; () banked
 45109   005502  6F20               	movwf	32,b	;volatile
 45110                           
 45111                           ; BSR set to: 15
 45112                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 45113   005504  9877               	bcf	119,4,c	;volatile
 45114                           
 45115                           ; BSR set to: 15
 45116                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 45117   005506  9876               	bcf	118,4,c	;volatile
 45118   005508  0012               	return	
 45119   00550A                     i1l2540:
 45120                           
 45121                           ; BSR set to: 15
 45122                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 45123   00550A  9877               	bcf	119,4,c	;volatile
 45124                           
 45125                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 45126   00550C  8876               	bsf	118,4,c	;volatile
 45127   00550E  0012               	return		;funcret
 45128   005510                     __end_of_checkTxFifo:
 45129                           	callstack 0
 45130                           
 45131 ;; *************** function i1_tickGet *****************
 45132 ;; Defined at:
 45133 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45134 ;; Parameters:    Size  Location     Type
 45135 ;;		None
 45136 ;; Auto vars:     Size  Location     Type
 45137 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 45138 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 45139 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 45140 ;; Return value:  Size  Location     Type
 45141 ;;                  4    0[BANK0 ] unsigned long 
 45142 ;; Registers used:
 45143 ;;		wreg, status,2, status,0
 45144 ;; Tracked objects:
 45145 ;;		On entry : 0/0
 45146 ;;		On exit  : 0/0
 45147 ;;		Unchanged: 0/0
 45148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45149 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45150 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45152 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45153 ;;Total ram usage:       10 bytes
 45154 ;; Hardware stack levels used: 1
 45155 ;; Hardware stack levels required when called: 6
 45156 ;; This function calls:
 45157 ;;		Nothing
 45158 ;; This function is called by:
 45159 ;;		_checkTxFifo
 45160 ;;		_checkCANTimeout
 45161 ;; This function uses a non-reentrant model
 45162 ;;
 45163                           
 45164                           	psect	text205
 45165   00B678                     __ptext205:
 45166                           	callstack 0
 45167   00B678                     i1_tickGet:
 45168                           	callstack 3
 45169                           
 45170                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45171                           
 45172                           ;incstack = 0
 45173   00B678  0E00               	movlw	0
 45174   00B67A  0100               	movlb	0	; () banked
 45175   00B67C  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 45176                           
 45177                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45178   00B67E  0E00               	movlw	0
 45179   00B680  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 45180                           
 45181                           ; BSR set to: 0
 45182                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 45183   00B682  9AF2               	bcf	242,5,c	;volatile
 45184   00B684                     i1l20266:
 45185                           
 45186                           ; BSR set to: 0
 45187                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 45188   00B684  0E00               	movlw	0
 45189   00B686  B4F2               	btfsc	242,2,c	;volatile
 45190   00B688  0E01               	movlw	1
 45191   00B68A  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 45192                           
 45193                           ; BSR set to: 0
 45194                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45195   00B68C  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 45196                           
 45197                           ; BSR set to: 0
 45198                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45199   00B690  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 45200                           
 45201                           ; BSR set to: 0
 45202                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 45203   00B694  0E00               	movlw	0
 45204   00B696  B4F2               	btfsc	242,2,c	;volatile
 45205   00B698  0E01               	movlw	1
 45206   00B69A  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 45207                           
 45208                           ; BSR set to: 0
 45209                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45210   00B69C  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 45211   00B69E  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 45212   00B6A0  A4D8               	btfss	status,2,c
 45213   00B6A2  D7F0               	goto	i1l20266
 45214                           
 45215                           ; BSR set to: 0
 45216                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45217   00B6A4  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 45218   00B6A6  B4D8               	btfsc	status,2,c
 45219   00B6A8  D005               	goto	i1l20286
 45220                           
 45221                           ; BSR set to: 0
 45222                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 45223   00B6AA  94F2               	bcf	242,2,c	;volatile
 45224                           
 45225                           ; BSR set to: 0
 45226                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 45227   00B6AC  2BC7               	incf	_timerExtension1& (0+255),f,b	;volatile
 45228                           
 45229                           ; BSR set to: 0
 45230                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 45231   00B6AE  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 45232   00B6B0  B4D8               	btfsc	status,2,c
 45233                           
 45234                           ; BSR set to: 0
 45235                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 45236   00B6B2  2BC6               	incf	_timerExtension2& (0+255),f,b	;volatile
 45237   00B6B4                     i1l20286:
 45238                           
 45239                           ; BSR set to: 0
 45240                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 45241   00B6B4  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 45242   00B6B6  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 45243                           
 45244                           ; BSR set to: 0
 45245                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 45246   00B6B8  51C6               	movf	_timerExtension2& (0+255),w,b	;volatile
 45247   00B6BA  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 45248                           
 45249                           ; BSR set to: 0
 45250                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 45251   00B6BC  8AF2               	bsf	242,5,c	;volatile
 45252                           
 45253                           ; BSR set to: 0
 45254                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 45255   00B6BE  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 45256   00B6C2  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 45257   00B6C6  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 45258   00B6CA  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 45259                           
 45260                           ; BSR set to: 0
 45261   00B6CE  0012               	return		;funcret
 45262   00B6D0                     __end_ofi1_tickGet:
 45263                           	callstack 0
 45264                           
 45265 ;; *************** function i1_pop *****************
 45266 ;; Defined at:
 45267 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 45268 ;; Parameters:    Size  Location     Type
 45269 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 45270 ;;		 -> txQueue(5), rxQueue(5), 
 45271 ;; Auto vars:     Size  Location     Type
 45272 ;;  ret             2    7[BANK0 ] PTR struct Message
 45273 ;;		 -> txBuffers(72), rxBuffers(288), 
 45274 ;; Return value:  Size  Location     Type
 45275 ;;                  2    0[BANK0 ] PTR struct Message
 45276 ;; Registers used:
 45277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45278 ;; Tracked objects:
 45279 ;;		On entry : 0/0
 45280 ;;		On exit  : 0/0
 45281 ;;		Unchanged: 0/0
 45282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45284 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45285 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45286 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45287 ;;Total ram usage:        9 bytes
 45288 ;; Hardware stack levels used: 1
 45289 ;; Hardware stack levels required when called: 6
 45290 ;; This function calls:
 45291 ;;		Nothing
 45292 ;; This function is called by:
 45293 ;;		_checkTxFifo
 45294 ;; This function uses a non-reentrant model
 45295 ;;
 45296                           
 45297                           	psect	text206
 45298   009D0C                     __ptext206:
 45299                           	callstack 0
 45300   009D0C                     i1_pop:
 45301                           	callstack 3
 45302                           
 45303                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 45304                           
 45305                           ; BSR set to: 0
 45306                           ;incstack = 0
 45307   009D0C  0100               	movlb	0	; () banked
 45308   009D0E  5160               	movf	i1pop@q& (0+255),w,b
 45309   009D10  6ED9               	movwf	fsr2l,c
 45310   009D12  6ADA               	clrf	fsr2h,c
 45311   009D14  0E02               	movlw	2
 45312   009D16  26D9               	addwf	fsr2l,f,c
 45313   009D18  5160               	movf	i1pop@q& (0+255),w,b
 45314   009D1A  6EE1               	movwf	fsr1l,c
 45315   009D1C  6AE2               	clrf	fsr1h,c
 45316   009D1E  0E03               	movlw	3
 45317   009D20  26E1               	addwf	fsr1l,f,c
 45318   009D22  50DE               	movf	postinc2,w,c
 45319   009D24  18E6               	xorwf	postinc1,w,c
 45320   009D26  A4D8               	btfss	status,2,c
 45321   009D28  D005               	goto	i1l20328
 45322                           
 45323                           ; BSR set to: 0
 45324                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 45325   009D2A  0E00               	movlw	0
 45326   009D2C  6F60               	movwf	?i1_pop& (0+255),b
 45327   009D2E  0E00               	movlw	0
 45328   009D30  6F61               	movwf	(?i1_pop+1)& (0+255),b
 45329   009D32  0012               	return	
 45330   009D34                     i1l20328:
 45331                           
 45332                           ; BSR set to: 0
 45333                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 45334   009D34  5160               	movf	i1pop@q& (0+255),w,b
 45335   009D36  6ED9               	movwf	fsr2l,c
 45336   009D38  6ADA               	clrf	fsr2h,c
 45337   009D3A  0E02               	movlw	2
 45338   009D3C  26D9               	addwf	fsr2l,f,c
 45339   009D3E  50DF               	movf	indf2,w,c
 45340   009D40  6F62               	movwf	??i1_pop& (0+255),b
 45341   009D42  5162               	movf	??i1_pop& (0+255),w,b
 45342   009D44  0D09               	mullw	9
 45343   009D46  CFF3 F063          	movff	prodl,??i1_pop+1
 45344   009D4A  CFF4 F064          	movff	prodh,??i1_pop+2
 45345   009D4E  5160               	movf	i1pop@q& (0+255),w,b
 45346   009D50  6ED9               	movwf	fsr2l,c
 45347   009D52  6ADA               	clrf	fsr2h,c
 45348   009D54  CFDE F065          	movff	postinc2,??i1_pop+3
 45349   009D58  CFDD F066          	movff	postdec2,??i1_pop+4
 45350   009D5C  5163               	movf	(??i1_pop+1)& (0+255),w,b
 45351   009D5E  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 45352   009D60  6F67               	movwf	i1pop@ret& (0+255),b
 45353   009D62  5164               	movf	(??i1_pop+2)& (0+255),w,b
 45354   009D64  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 45355   009D66  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 45356                           
 45357                           ; BSR set to: 0
 45358   009D68  5160               	movf	i1pop@q& (0+255),w,b
 45359   009D6A  6ED9               	movwf	fsr2l,c
 45360   009D6C  6ADA               	clrf	fsr2h,c
 45361   009D6E  0E02               	movlw	2
 45362   009D70  26D9               	addwf	fsr2l,f,c
 45363   009D72  2ADF               	incf	indf2,f,c
 45364                           
 45365                           ; BSR set to: 0
 45366                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 45367   009D74  5160               	movf	i1pop@q& (0+255),w,b
 45368   009D76  6ED9               	movwf	fsr2l,c
 45369   009D78  6ADA               	clrf	fsr2h,c
 45370   009D7A  0E04               	movlw	4
 45371   009D7C  26D9               	addwf	fsr2l,f,c
 45372   009D7E  5160               	movf	i1pop@q& (0+255),w,b
 45373   009D80  6EE1               	movwf	fsr1l,c
 45374   009D82  6AE2               	clrf	fsr1h,c
 45375   009D84  0E02               	movlw	2
 45376   009D86  26E1               	addwf	fsr1l,f,c
 45377   009D88  50DE               	movf	postinc2,w,c
 45378   009D8A  5CE6               	subwf	postinc1,w,c
 45379   009D8C  A0D8               	btfss	status,0,c
 45380   009D8E  D006               	goto	i1l20336
 45381                           
 45382                           ; BSR set to: 0
 45383   009D90  5160               	movf	i1pop@q& (0+255),w,b
 45384   009D92  6ED9               	movwf	fsr2l,c
 45385   009D94  6ADA               	clrf	fsr2h,c
 45386   009D96  0E02               	movlw	2
 45387   009D98  26D9               	addwf	fsr2l,f,c
 45388   009D9A  6ADF               	clrf	indf2,c
 45389   009D9C                     i1l20336:
 45390                           
 45391                           ; BSR set to: 0
 45392                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 45393   009D9C  C067  F060         	movff	i1pop@ret,?i1_pop
 45394   009DA0  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 45395                           
 45396                           ; BSR set to: 0
 45397   009DA4  0012               	return		;funcret
 45398   009DA6                     __end_ofi1_pop:
 45399                           	callstack 0
 45400                           
 45401 ;; *************** function i1_isEvent *****************
 45402 ;; Defined at:
 45403 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 45404 ;; Parameters:    Size  Location     Type
 45405 ;;  opc             1    wreg     unsigned char 
 45406 ;; Auto vars:     Size  Location     Type
 45407 ;;  opc             1    1[BANK0 ] unsigned char 
 45408 ;; Return value:  Size  Location     Type
 45409 ;;                  1    wreg      enum E12766
 45410 ;; Registers used:
 45411 ;;		wreg, status,2, status,0
 45412 ;; Tracked objects:
 45413 ;;		On entry : 0/0
 45414 ;;		On exit  : 0/0
 45415 ;;		Unchanged: 0/0
 45416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45418 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45421 ;;Total ram usage:        2 bytes
 45422 ;; Hardware stack levels used: 1
 45423 ;; Hardware stack levels required when called: 6
 45424 ;; This function calls:
 45425 ;;		Nothing
 45426 ;; This function is called by:
 45427 ;;		_checkTxFifo
 45428 ;; This function uses a non-reentrant model
 45429 ;;
 45430                           
 45431                           	psect	text207
 45432   00C2C6                     __ptext207:
 45433                           	callstack 0
 45434   00C2C6                     i1_isEvent:
 45435                           	callstack 3
 45436                           
 45437                           ; BSR set to: 0
 45438                           ;incstack = 0
 45439                           ;i1isEvent@opc stored from wreg
 45440   00C2C6  0100               	movlb	0	; () banked
 45441   00C2C8  6F61               	movwf	i1isEvent@opc& (0+255),b
 45442                           
 45443                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 45444   00C2CA  0E00               	movlw	0
 45445   00C2CC  0100               	movlb	0	; () banked
 45446   00C2CE  6F60               	movwf	i1_isEvent$4890& (0+255),b
 45447                           
 45448                           ; BSR set to: 0
 45449   00C2D0  5161               	movf	i1isEvent@opc& (0+255),w,b
 45450   00C2D2  0B90               	andlw	144
 45451   00C2D4  0A90               	xorlw	144
 45452   00C2D6  A4D8               	btfss	status,2,c
 45453   00C2D8  D008               	goto	i1l2048
 45454                           
 45455                           ; BSR set to: 0
 45456   00C2DA  5161               	movf	i1isEvent@opc& (0+255),w,b
 45457   00C2DC  0AFF               	xorlw	255
 45458   00C2DE  0B06               	andlw	6
 45459   00C2E0  0A06               	xorlw	6
 45460   00C2E2  A4D8               	btfss	status,2,c
 45461   00C2E4  D002               	goto	i1l2048
 45462                           
 45463                           ; BSR set to: 0
 45464   00C2E6  0E01               	movlw	1
 45465   00C2E8  6F60               	movwf	i1_isEvent$4890& (0+255),b
 45466   00C2EA                     i1l2048:
 45467                           
 45468                           ; BSR set to: 0
 45469   00C2EA  5160               	movf	i1_isEvent$4890& (0+255),w,b
 45470                           
 45471                           ; BSR set to: 0
 45472   00C2EC  0012               	return		;funcret
 45473   00C2EE                     __end_ofi1_isEvent:
 45474                           	callstack 0
 45475                           
 45476 ;; *************** function _canFillRxFifo *****************
 45477 ;; Defined at:
 45478 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 45479 ;; Parameters:    Size  Location     Type
 45480 ;;		None
 45481 ;; Auto vars:     Size  Location     Type
 45482 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 45483 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 45484 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 45485 ;;		 -> NULL(0), 
 45486 ;;  m               2   12[BANK0 ] PTR struct Message
 45487 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45488 ;;  hiIndex         1    0        unsigned char 
 45489 ;; Return value:  Size  Location     Type
 45490 ;;                  1    wreg      void 
 45491 ;; Registers used:
 45492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45493 ;; Tracked objects:
 45494 ;;		On entry : 0/0
 45495 ;;		On exit  : 0/0
 45496 ;;		Unchanged: 0/0
 45497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45499 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45502 ;;Total ram usage:        4 bytes
 45503 ;; Hardware stack levels used: 1
 45504 ;; Hardware stack levels required when called: 7
 45505 ;; This function calls:
 45506 ;;		i1_getBufferPointer
 45507 ;;		i1_getNextWriteMessage
 45508 ;;		i1_updateModuleErrorStatus
 45509 ;; This function is called by:
 45510 ;;		_canIsr
 45511 ;; This function uses a non-reentrant model
 45512 ;;
 45513                           
 45514                           	psect	text208
 45515   00727C                     __ptext208:
 45516                           	callstack 0
 45517   00727C                     _canFillRxFifo:
 45518                           	callstack 3
 45519                           
 45520                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 45521                           
 45522                           ; BSR set to: 0
 45523                           ;incstack = 0
 45524   00727C  D0B4               	goto	i1l22296
 45525   00727E                     i1l22258:
 45526                           
 45527                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 45528   00727E  506F               	movf	111,w,c	;volatile
 45529   007280  0B07               	andlw	7
 45530   007282  EC01  F050         	call	i1_getBufferPointer
 45531   007286  C060  F06E         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 45532   00728A  C061  F06F         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 45533                           
 45534                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 45535   00728E  9277               	bcf	119,1,c	;volatile
 45536                           
 45537                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 45538   007290  BC71               	btfsc	113,6,c	;volatile
 45539                           
 45540                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 45541   007292  9C71               	bcf	113,6,c	;volatile
 45542                           
 45543                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 45544   007294  0100               	movlb	0	; () banked
 45545   007296  EE20 F002          	lfsr	2,2
 45546   00729A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45547   00729C  26D9               	addwf	fsr2l,f,c
 45548   00729E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45549   0072A0  22DA               	addwfc	fsr2h,f,c
 45550   0072A2  B6DF               	btfsc	indf2,3,c
 45551   0072A4  D093               	goto	i1l22286
 45552                           
 45553                           ; BSR set to: 0
 45554                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 45555   0072A6  0E4F               	movlw	low _rxQueue
 45556   0072A8  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 45557   0072AA  EC92  F046         	call	i1_getNextWriteMessage	;wreg free
 45558   0072AE  C060  F06C         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 45559   0072B2  C061  F06D         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 45560                           
 45561                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 45562   0072B6  0100               	movlb	0	; () banked
 45563   0072B8  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45564   0072BA  116D               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 45565   0072BC  A4D8               	btfss	status,2,c
 45566   0072BE  D009               	goto	i1l22282
 45567                           
 45568                           ; BSR set to: 0
 45569                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 45570   0072C0  0101               	movlb	1	; () banked
 45571   0072C2  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 45572   0072C4  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 45573                           
 45574                           ; BSR set to: 1
 45575                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 45576   0072C6  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 45577                           
 45578                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 45579   0072CA  AE77               	btfss	119,7,c	;volatile
 45580   0072CC  0012               	return	
 45581                           
 45582                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 45583   0072CE  9E77               	bcf	119,7,c	;volatile
 45584   0072D0  0012               	return	
 45585   0072D2                     i1l22282:
 45586                           
 45587                           ; BSR set to: 0
 45588                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 45589   0072D2  EE20 F006          	lfsr	2,6
 45590   0072D6  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45591   0072D8  26D9               	addwf	fsr2l,f,c
 45592   0072DA  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45593   0072DC  22DA               	addwfc	fsr2h,f,c
 45594   0072DE  EE10 F001          	lfsr	1,1
 45595   0072E2  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45596   0072E4  26E1               	addwf	fsr1l,f,c
 45597   0072E6  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45598   0072E8  22E2               	addwfc	fsr1h,f,c
 45599   0072EA  CFDF FFE7          	movff	indf2,indf1
 45600                           
 45601                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 45602   0072EE  EE20 F007          	lfsr	2,7
 45603   0072F2  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45604   0072F4  26D9               	addwf	fsr2l,f,c
 45605   0072F6  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45606   0072F8  22DA               	addwfc	fsr2h,f,c
 45607   0072FA  EE10 F002          	lfsr	1,2
 45608   0072FE  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45609   007300  26E1               	addwf	fsr1l,f,c
 45610   007302  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45611   007304  22E2               	addwfc	fsr1h,f,c
 45612   007306  CFDF FFE7          	movff	indf2,indf1
 45613                           
 45614                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 45615   00730A  EE20 F008          	lfsr	2,8
 45616   00730E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45617   007310  26D9               	addwf	fsr2l,f,c
 45618   007312  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45619   007314  22DA               	addwfc	fsr2h,f,c
 45620   007316  EE10 F003          	lfsr	1,3
 45621   00731A  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45622   00731C  26E1               	addwf	fsr1l,f,c
 45623   00731E  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45624   007320  22E2               	addwfc	fsr1h,f,c
 45625   007322  CFDF FFE7          	movff	indf2,indf1
 45626                           
 45627                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 45628   007326  EE20 F009          	lfsr	2,9
 45629   00732A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45630   00732C  26D9               	addwf	fsr2l,f,c
 45631   00732E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45632   007330  22DA               	addwfc	fsr2h,f,c
 45633   007332  EE10 F004          	lfsr	1,4
 45634   007336  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45635   007338  26E1               	addwf	fsr1l,f,c
 45636   00733A  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45637   00733C  22E2               	addwfc	fsr1h,f,c
 45638   00733E  CFDF FFE7          	movff	indf2,indf1
 45639                           
 45640                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 45641   007342  EE20 F00A          	lfsr	2,10
 45642   007346  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45643   007348  26D9               	addwf	fsr2l,f,c
 45644   00734A  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45645   00734C  22DA               	addwfc	fsr2h,f,c
 45646   00734E  EE10 F005          	lfsr	1,5
 45647   007352  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45648   007354  26E1               	addwf	fsr1l,f,c
 45649   007356  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45650   007358  22E2               	addwfc	fsr1h,f,c
 45651   00735A  CFDF FFE7          	movff	indf2,indf1
 45652                           
 45653                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 45654   00735E  EE20 F00B          	lfsr	2,11
 45655   007362  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45656   007364  26D9               	addwf	fsr2l,f,c
 45657   007366  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45658   007368  22DA               	addwfc	fsr2h,f,c
 45659   00736A  EE10 F006          	lfsr	1,6
 45660   00736E  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45661   007370  26E1               	addwf	fsr1l,f,c
 45662   007372  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45663   007374  22E2               	addwfc	fsr1h,f,c
 45664   007376  CFDF FFE7          	movff	indf2,indf1
 45665                           
 45666                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 45667   00737A  EE20 F00C          	lfsr	2,12
 45668   00737E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45669   007380  26D9               	addwf	fsr2l,f,c
 45670   007382  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45671   007384  22DA               	addwfc	fsr2h,f,c
 45672   007386  EE10 F007          	lfsr	1,7
 45673   00738A  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45674   00738C  26E1               	addwf	fsr1l,f,c
 45675   00738E  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45676   007390  22E2               	addwfc	fsr1h,f,c
 45677   007392  CFDF FFE7          	movff	indf2,indf1
 45678                           
 45679                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 45680   007396  EE20 F00D          	lfsr	2,13
 45681   00739A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45682   00739C  26D9               	addwf	fsr2l,f,c
 45683   00739E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45684   0073A0  22DA               	addwfc	fsr2h,f,c
 45685   0073A2  EE10 F008          	lfsr	1,8
 45686   0073A6  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45687   0073A8  26E1               	addwf	fsr1l,f,c
 45688   0073AA  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45689   0073AC  22E2               	addwfc	fsr1h,f,c
 45690   0073AE  CFDF FFE7          	movff	indf2,indf1
 45691                           
 45692                           ; BSR set to: 0
 45693                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 45694   0073B2  EE20 F005          	lfsr	2,5
 45695   0073B6  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45696   0073B8  26D9               	addwf	fsr2l,f,c
 45697   0073BA  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45698   0073BC  22DA               	addwfc	fsr2h,f,c
 45699   0073BE  50DF               	movf	indf2,w,c
 45700   0073C0  0B0F               	andlw	15
 45701   0073C2  C06C  FFD9         	movff	canFillRxFifo@m,fsr2l
 45702   0073C6  C06D  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 45703   0073CA  6EDF               	movwf	indf2,c
 45704   0073CC                     i1l22286:
 45705                           
 45706                           ; BSR set to: 0
 45707                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 45708   0073CC  AE77               	btfss	119,7,c	;volatile
 45709   0073CE  D004               	goto	i1l22292
 45710                           
 45711                           ; BSR set to: 0
 45712                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 45713   0073D0  0101               	movlb	1	; () banked
 45714   0073D2  4B69               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45715   0073D4  2B6A               	incf	(_canDiagnostics+3)& (0+255),f,b
 45716                           
 45717                           ; BSR set to: 1
 45718                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 45719   0073D6  9E77               	bcf	119,7,c	;volatile
 45720   0073D8                     i1l22292:
 45721                           
 45722                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 45723   0073D8  C06E  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 45724   0073DC  C06F  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 45725   0073E0  0E7F               	movlw	127
 45726   0073E2  16DF               	andwf	indf2,f,c
 45727                           
 45728                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 45729   0073E4  9077               	bcf	119,0,c	;volatile
 45730   0073E6                     i1l22296:
 45731                           
 45732                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 45733   0073E6  AE71               	btfss	113,7,c	;volatile
 45734   0073E8  0012               	return	
 45735   0073EA  D749               	goto	i1l22258
 45736   0073EC                     __end_of_canFillRxFifo:
 45737                           	callstack 0
 45738                           
 45739 ;; *************** function i1_updateModuleErrorStatus *****************
 45740 ;; Defined at:
 45741 ;;		line 632 in file "../../VLCBlib_PIC/mns.c"
 45742 ;; Parameters:    Size  Location     Type
 45743 ;;		None
 45744 ;; Auto vars:     Size  Location     Type
 45745 ;;		None
 45746 ;; Return value:  Size  Location     Type
 45747 ;;                  1    wreg      void 
 45748 ;; Registers used:
 45749 ;;		wreg, status,2, status,0
 45750 ;; Tracked objects:
 45751 ;;		On entry : 0/0
 45752 ;;		On exit  : 0/0
 45753 ;;		Unchanged: 0/0
 45754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45759 ;;Total ram usage:        0 bytes
 45760 ;; Hardware stack levels used: 1
 45761 ;; Hardware stack levels required when called: 6
 45762 ;; This function calls:
 45763 ;;		Nothing
 45764 ;; This function is called by:
 45765 ;;		_checkTxFifo
 45766 ;;		_checkCANTimeout
 45767 ;;		_canTxError
 45768 ;;		_canFillRxFifo
 45769 ;; This function uses a non-reentrant model
 45770 ;;
 45771                           
 45772                           	psect	text209
 45773   00C5E6                     __ptext209:
 45774                           	callstack 0
 45775   00C5E6                     i1_updateModuleErrorStatus:
 45776                           	callstack 3
 45777                           
 45778                           ;../../VLCBlib_PIC/mns.c: 633:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 45779                           
 45780                           ;incstack = 0
 45781   00C5E6  0101               	movlb	1	; () banked
 45782   00C5E8  298F               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 45783   00C5EA  B4D8               	btfsc	status,2,c
 45784   00C5EC  0012               	return	
 45785                           
 45786                           ; BSR set to: 1
 45787                           ;../../VLCBlib_PIC/mns.c: 634:         mnsDiagnostics[0x01].asBytes.lo++;
 45788   00C5EE  2B8F               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 45789                           
 45790                           ; BSR set to: 1
 45791   00C5F0  0012               	return		;funcret
 45792   00C5F2                     __end_ofi1_updateModuleErrorStatus:
 45793                           	callstack 0
 45794                           
 45795 ;; *************** function i1_getNextWriteMessage *****************
 45796 ;; Defined at:
 45797 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 45798 ;; Parameters:    Size  Location     Type
 45799 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 45800 ;;		 -> rxQueue(5), 
 45801 ;; Auto vars:     Size  Location     Type
 45802 ;;  wr              1   11[BANK0 ] unsigned char 
 45803 ;; Return value:  Size  Location     Type
 45804 ;;                  2    0[BANK0 ] PTR struct Message
 45805 ;; Registers used:
 45806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45807 ;; Tracked objects:
 45808 ;;		On entry : 0/0
 45809 ;;		On exit  : 0/0
 45810 ;;		Unchanged: 0/0
 45811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45814 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45815 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45816 ;;Total ram usage:       12 bytes
 45817 ;; Hardware stack levels used: 1
 45818 ;; Hardware stack levels required when called: 6
 45819 ;; This function calls:
 45820 ;;		Nothing
 45821 ;; This function is called by:
 45822 ;;		_checkTxFifo
 45823 ;;		_canFillRxFifo
 45824 ;; This function uses a non-reentrant model
 45825 ;;
 45826                           
 45827                           	psect	text210
 45828   008D24                     __ptext210:
 45829                           	callstack 0
 45830   008D24                     i1_getNextWriteMessage:
 45831                           	callstack 3
 45832                           
 45833                           ; BSR set to: 1
 45834                           ;incstack = 0
 45835   008D24  0100               	movlb	0	; () banked
 45836   008D26  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45837   008D28  6ED9               	movwf	fsr2l,c
 45838   008D2A  6ADA               	clrf	fsr2h,c
 45839   008D2C  0E02               	movlw	2
 45840   008D2E  26D9               	addwf	fsr2l,f,c
 45841   008D30  50DF               	movf	indf2,w,c
 45842   008D32  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 45843   008D34  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 45844   008D36  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45845   008D38  6ED9               	movwf	fsr2l,c
 45846   008D3A  6ADA               	clrf	fsr2h,c
 45847   008D3C  0E04               	movlw	4
 45848   008D3E  26D9               	addwf	fsr2l,f,c
 45849   008D40  50DF               	movf	indf2,w,c
 45850   008D42  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 45851   008D44  0EFF               	movlw	255
 45852   008D46  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 45853   008D48  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 45854   008D4A  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 45855   008D4C  0EFF               	movlw	255
 45856   008D4E  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 45857   008D50  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45858   008D52  6ED9               	movwf	fsr2l,c
 45859   008D54  6ADA               	clrf	fsr2h,c
 45860   008D56  0E03               	movlw	3
 45861   008D58  26D9               	addwf	fsr2l,f,c
 45862   008D5A  50DF               	movf	indf2,w,c
 45863   008D5C  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 45864   008D5E  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 45865   008D60  0E01               	movlw	1
 45866   008D62  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 45867   008D64  0E00               	movlw	0
 45868   008D66  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 45869   008D68  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 45870   008D6A  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 45871   008D6C  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 45872   008D6E  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 45873   008D70  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 45874   008D72  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 45875   008D74  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 45876   008D76  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 45877   008D78  E109               	bnz	i1l20312
 45878   008D7A  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 45879   008D7C  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 45880   008D7E  A4D8               	btfss	status,2,c
 45881   008D80  D005               	goto	i1l20312
 45882                           
 45883                           ; BSR set to: 0
 45884   008D82  0E00               	movlw	0
 45885   008D84  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 45886   008D86  0E00               	movlw	0
 45887   008D88  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 45888   008D8A  0012               	return	
 45889   008D8C                     i1l20312:
 45890                           
 45891                           ; BSR set to: 0
 45892   008D8C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45893   008D8E  6ED9               	movwf	fsr2l,c
 45894   008D90  6ADA               	clrf	fsr2h,c
 45895   008D92  0E03               	movlw	3
 45896   008D94  26D9               	addwf	fsr2l,f,c
 45897   008D96  50DF               	movf	indf2,w,c
 45898   008D98  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 45899   008D9A  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45900   008D9C  6ED9               	movwf	fsr2l,c
 45901   008D9E  6ADA               	clrf	fsr2h,c
 45902   008DA0  0E03               	movlw	3
 45903   008DA2  26D9               	addwf	fsr2l,f,c
 45904   008DA4  2ADF               	incf	indf2,f,c
 45905                           
 45906                           ; BSR set to: 0
 45907   008DA6  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45908   008DA8  6ED9               	movwf	fsr2l,c
 45909   008DAA  6ADA               	clrf	fsr2h,c
 45910   008DAC  0E04               	movlw	4
 45911   008DAE  26D9               	addwf	fsr2l,f,c
 45912   008DB0  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45913   008DB2  6EE1               	movwf	fsr1l,c
 45914   008DB4  6AE2               	clrf	fsr1h,c
 45915   008DB6  0E03               	movlw	3
 45916   008DB8  26E1               	addwf	fsr1l,f,c
 45917   008DBA  50DE               	movf	postinc2,w,c
 45918   008DBC  5CE6               	subwf	postinc1,w,c
 45919   008DBE  A0D8               	btfss	status,0,c
 45920   008DC0  D006               	goto	i1l20318
 45921                           
 45922                           ; BSR set to: 0
 45923   008DC2  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45924   008DC4  6ED9               	movwf	fsr2l,c
 45925   008DC6  6ADA               	clrf	fsr2h,c
 45926   008DC8  0E03               	movlw	3
 45927   008DCA  26D9               	addwf	fsr2l,f,c
 45928   008DCC  6ADF               	clrf	indf2,c
 45929   008DCE                     i1l20318:
 45930                           
 45931                           ; BSR set to: 0
 45932   008DCE  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 45933   008DD0  0D09               	mullw	9
 45934   008DD2  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 45935   008DD6  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 45936   008DDA  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45937   008DDC  6ED9               	movwf	fsr2l,c
 45938   008DDE  6ADA               	clrf	fsr2h,c
 45939   008DE0  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 45940   008DE4  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 45941   008DE8  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 45942   008DEA  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 45943   008DEC  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 45944   008DEE  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 45945   008DF0  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 45946   008DF2  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 45947                           
 45948                           ; BSR set to: 0
 45949   008DF4  0012               	return		;funcret
 45950   008DF6                     __end_ofi1_getNextWriteMessage:
 45951                           	callstack 0
 45952                           
 45953 ;; *************** function i1_getBufferPointer *****************
 45954 ;; Defined at:
 45955 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 45956 ;; Parameters:    Size  Location     Type
 45957 ;;  b               1    wreg     unsigned char 
 45958 ;; Auto vars:     Size  Location     Type
 45959 ;;  b               1    2[BANK0 ] unsigned char 
 45960 ;; Return value:  Size  Location     Type
 45961 ;;                  2    0[BANK0 ] PTR unsigned char 
 45962 ;; Registers used:
 45963 ;;		wreg, status,2, status,0
 45964 ;; Tracked objects:
 45965 ;;		On entry : 0/0
 45966 ;;		On exit  : 0/0
 45967 ;;		Unchanged: 0/0
 45968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45969 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45970 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45972 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45973 ;;Total ram usage:        3 bytes
 45974 ;; Hardware stack levels used: 1
 45975 ;; Hardware stack levels required when called: 6
 45976 ;; This function calls:
 45977 ;;		Nothing
 45978 ;; This function is called by:
 45979 ;;		_canFillRxFifo
 45980 ;; This function uses a non-reentrant model
 45981 ;;
 45982                           
 45983                           	psect	text211
 45984   00A002                     __ptext211:
 45985                           	callstack 0
 45986   00A002                     i1_getBufferPointer:
 45987                           	callstack 3
 45988                           
 45989                           ; BSR set to: 0
 45990                           ;incstack = 0
 45991                           ;i1getBufferPointer@b stored from wreg
 45992   00A002  0100               	movlb	0	; () banked
 45993   00A004  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 45994                           
 45995                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 45996   00A006  D02D               	goto	i1l21334
 45997   00A008                     i1l21296:
 45998                           
 45999                           ; BSR set to: 0
 46000                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 46001   00A008  0E60               	movlw	96
 46002   00A00A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46003   00A00C  0E0F               	movlw	15
 46004   00A00E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46005   00A010  0012               	return	
 46006   00A012                     i1l21300:
 46007                           
 46008                           ; BSR set to: 0
 46009                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 46010   00A012  0E30               	movlw	48
 46011   00A014  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46012   00A016  0E0F               	movlw	15
 46013   00A018  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46014   00A01A  0012               	return	
 46015   00A01C                     i1l21304:
 46016                           
 46017                           ; BSR set to: 0
 46018                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 46019   00A01C  0E80               	movlw	128
 46020   00A01E  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46021   00A020  0E0E               	movlw	14
 46022   00A022  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46023   00A024  0012               	return	
 46024   00A026                     i1l21308:
 46025                           
 46026                           ; BSR set to: 0
 46027                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 46028   00A026  0E90               	movlw	144
 46029   00A028  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46030   00A02A  0E0E               	movlw	14
 46031   00A02C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46032   00A02E  0012               	return	
 46033   00A030                     i1l21312:
 46034                           
 46035                           ; BSR set to: 0
 46036                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 46037   00A030  0EA0               	movlw	160
 46038   00A032  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46039   00A034  0E0E               	movlw	14
 46040   00A036  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46041   00A038  0012               	return	
 46042   00A03A                     i1l21316:
 46043                           
 46044                           ; BSR set to: 0
 46045                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 46046   00A03A  0EB0               	movlw	176
 46047   00A03C  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46048   00A03E  0E0E               	movlw	14
 46049   00A040  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46050   00A042  0012               	return	
 46051   00A044                     i1l21320:
 46052                           
 46053                           ; BSR set to: 0
 46054                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 46055   00A044  0EC0               	movlw	192
 46056   00A046  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46057   00A048  0E0E               	movlw	14
 46058   00A04A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46059   00A04C  0012               	return	
 46060   00A04E                     i1l21324:
 46061                           
 46062                           ; BSR set to: 0
 46063                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 46064   00A04E  0ED0               	movlw	208
 46065   00A050  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46066   00A052  0E0E               	movlw	14
 46067   00A054  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46068   00A056  0012               	return	
 46069   00A058                     i1l21328:
 46070                           
 46071                           ; BSR set to: 0
 46072                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 46073   00A058  0E00               	movlw	0
 46074   00A05A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46075   00A05C  0E00               	movlw	0
 46076   00A05E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46077   00A060  0012               	return	
 46078   00A062                     i1l21334:
 46079   00A062  0100               	movlb	0	; () banked
 46080   00A064  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 46081                           
 46082                           ; Switch size 1, requested type "simple"
 46083                           ; Number of cases is 8, Range of values is 0 to 7
 46084                           ; switch strategies available:
 46085                           ; Name         Instructions Cycles
 46086                           ; simple_byte           25    13 (average)
 46087                           ;	Chosen strategy is simple_byte
 46088   00A066  0A00               	xorlw	0	; case 0
 46089   00A068  B4D8               	btfsc	status,2,c
 46090   00A06A  D7CE               	goto	i1l21296
 46091   00A06C  0A01               	xorlw	1	; case 1
 46092   00A06E  B4D8               	btfsc	status,2,c
 46093   00A070  D7D0               	goto	i1l21300
 46094   00A072  0A03               	xorlw	3	; case 2
 46095   00A074  B4D8               	btfsc	status,2,c
 46096   00A076  D7D2               	goto	i1l21304
 46097   00A078  0A01               	xorlw	1	; case 3
 46098   00A07A  B4D8               	btfsc	status,2,c
 46099   00A07C  D7D4               	goto	i1l21308
 46100   00A07E  0A07               	xorlw	7	; case 4
 46101   00A080  B4D8               	btfsc	status,2,c
 46102   00A082  D7D6               	goto	i1l21312
 46103   00A084  0A01               	xorlw	1	; case 5
 46104   00A086  B4D8               	btfsc	status,2,c
 46105   00A088  D7D8               	goto	i1l21316
 46106   00A08A  0A03               	xorlw	3	; case 6
 46107   00A08C  B4D8               	btfsc	status,2,c
 46108   00A08E  D7DA               	goto	i1l21320
 46109   00A090  0A01               	xorlw	1	; case 7
 46110   00A092  B4D8               	btfsc	status,2,c
 46111   00A094  D7DC               	goto	i1l21324
 46112   00A096  D7E0               	goto	i1l21328
 46113   00A098                     __end_ofi1_getBufferPointer:
 46114                           	callstack 0
 46115                           
 46116 ;; *************** function _APP_lowIsr *****************
 46117 ;; Defined at:
 46118 ;;		line 707 in file "../main.c"
 46119 ;; Parameters:    Size  Location     Type
 46120 ;;		None
 46121 ;; Auto vars:     Size  Location     Type
 46122 ;;		None
 46123 ;; Return value:  Size  Location     Type
 46124 ;;                  1    wreg      void 
 46125 ;; Registers used:
 46126 ;;		None
 46127 ;; Tracked objects:
 46128 ;;		On entry : 0/0
 46129 ;;		On exit  : 0/0
 46130 ;;		Unchanged: 0/0
 46131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46136 ;;Total ram usage:        0 bytes
 46137 ;; Hardware stack levels used: 1
 46138 ;; Hardware stack levels required when called: 6
 46139 ;; This function calls:
 46140 ;;		Nothing
 46141 ;; This function is called by:
 46142 ;;		_lowIsr
 46143 ;; This function uses a non-reentrant model
 46144 ;;
 46145                           
 46146                           	psect	text212
 46147   00C656                     __ptext212:
 46148                           	callstack 0
 46149   00C656                     _APP_lowIsr:
 46150                           	callstack 5
 46151                           
 46152                           ; BSR set to: 0
 46153                           ;incstack = 0
 46154   00C656  0012               	return		;funcret
 46155   00C658                     __end_of_APP_lowIsr:
 46156                           	callstack 0
 46157                           
 46158                           	psect	intcode
 46159   000808                     __pintcode:
 46160                           	callstack 2
 46161   000808  EF7C  F042         	goto	_isrHigh
 46162                           
 46163 ;; *************** function _highIsr *****************
 46164 ;; Defined at:
 46165 ;;		line 1057 in file "../../VLCBlib_PIC/vlcb.c"
 46166 ;; Parameters:    Size  Location     Type
 46167 ;;		None
 46168 ;; Auto vars:     Size  Location     Type
 46169 ;;  i               1   29[COMRAM] unsigned char 
 46170 ;; Return value:  Size  Location     Type
 46171 ;;                  1    wreg      void 
 46172 ;; Registers used:
 46173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 46174 ;; Tracked objects:
 46175 ;;		On entry : 0/0
 46176 ;;		On exit  : 0/0
 46177 ;;		Unchanged: 0/0
 46178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46181 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46182 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46183 ;;Total ram usage:        5 bytes
 46184 ;; Hardware stack levels used: 1
 46185 ;; Hardware stack levels required when called: 4
 46186 ;; This function calls:
 46187 ;;		NULL
 46188 ;;		_APP_highIsr
 46189 ;;		i2_canIsr
 46190 ;; This function is called by:
 46191 ;;		_isrHigh
 46192 ;; This function uses a non-reentrant model
 46193 ;;
 46194                           
 46195                           	psect	text214
 46196   009062                     __ptext214:
 46197                           	callstack 0
 46198   009062                     _highIsr:
 46199                           	callstack 2
 46200                           
 46201                           ;../../VLCBlib_PIC/vlcb.c: 1058:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1060:     for 
      +                          (i=0; i<9; i++) {
 46202                           
 46203                           ;incstack = 0
 46204   009062  0E00               	movlw	0
 46205   009064  6E1E               	movwf	highIsr@i^0,c
 46206   009066                     i2l24940:
 46207                           
 46208                           ;../../VLCBlib_PIC/vlcb.c: 1061:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 46209   009066  501E               	movf	highIsr@i^0,w,c
 46210   009068  0D02               	mullw	2
 46211   00906A  0E69               	movlw	low _services
 46212   00906C  24F3               	addwf	243,w,c
 46213   00906E  6EF6               	movwf	tblptrl,c
 46214   009070  0EEE               	movlw	high _services
 46215   009072  20F4               	addwfc	244,w,c
 46216   009074  6EF7               	movwf	tblptrh,c
 46217   009076                     	if	1	;There are 3 active tblptr bytes
 46218   009076  6AF8               	clrf	tblptru,c
 46219   009078  0E00               	movlw	low (__mediumconst shr (0+16))
 46220   00907A  22F8               	addwfc	tblptru,f,c
 46221   00907C                     	endif
 46222   00907C  0009               	tblrd		*+
 46223   00907E  50F5               	movf	tablat,w,c
 46224   009080  0009               	tblrd		*+
 46225   009082  10F5               	iorwf	tablat,w,c
 46226   009084  B4D8               	btfsc	status,2,c
 46227   009086  D04B               	goto	i2u2677_49
 46228   009088  501E               	movf	highIsr@i^0,w,c
 46229   00908A  0D02               	mullw	2
 46230   00908C  0E69               	movlw	low _services
 46231   00908E  24F3               	addwf	243,w,c
 46232   009090  6EF6               	movwf	tblptrl,c
 46233   009092  0EEE               	movlw	high _services
 46234   009094  20F4               	addwfc	244,w,c
 46235   009096  6EF7               	movwf	tblptrh,c
 46236   009098                     	if	1	;There are 3 active tblptr bytes
 46237   009098  6AF8               	clrf	tblptru,c
 46238   00909A  0E00               	movlw	low (__mediumconst shr (0+16))
 46239   00909C  22F8               	addwfc	tblptru,f,c
 46240   00909E                     	endif
 46241   00909E  0009               	tblrd		*+
 46242   0090A0  CFF5 F01A          	movff	tablat,??_highIsr
 46243   0090A4  0009               	tblrd		*+
 46244   0090A6  CFF5 F01B          	movff	tablat,??_highIsr+1
 46245   0090AA  0E0A               	movlw	10
 46246   0090AC  261A               	addwf	??_highIsr^0,f,c
 46247   0090AE  0E00               	movlw	0
 46248   0090B0  221B               	addwfc	(??_highIsr+1)^0,f,c
 46249   0090B2  C01A  FFF6         	movff	??_highIsr,tblptrl
 46250   0090B6  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 46251   0090BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46252   0090BA  6AF8               	clrf	tblptru,c
 46253   0090BC                     	endif
 46254   0090BC                     	if	0	;tblptru may be non-zero
 46255   0090BC                     	endif
 46256   0090BC  0009               	tblrd		*+
 46257   0090BE  50F5               	movf	tablat,w,c
 46258   0090C0  0009               	tblrd		*+
 46259   0090C2  10F5               	iorwf	tablat,w,c
 46260   0090C4  B4D8               	btfsc	status,2,c
 46261   0090C6  D02B               	goto	i2u2677_49
 46262                           
 46263                           ;../../VLCBlib_PIC/vlcb.c: 1062:             services[i]->highIsr();
 46264   0090C8  501E               	movf	highIsr@i^0,w,c
 46265   0090CA  0D02               	mullw	2
 46266   0090CC  0E69               	movlw	low _services
 46267   0090CE  24F3               	addwf	243,w,c
 46268   0090D0  6EF6               	movwf	tblptrl,c
 46269   0090D2  0EEE               	movlw	high _services
 46270   0090D4  20F4               	addwfc	244,w,c
 46271   0090D6  6EF7               	movwf	tblptrh,c
 46272   0090D8                     	if	1	;There are 3 active tblptr bytes
 46273   0090D8  6AF8               	clrf	tblptru,c
 46274   0090DA  0E00               	movlw	low (__mediumconst shr (0+16))
 46275   0090DC  22F8               	addwfc	tblptru,f,c
 46276   0090DE                     	endif
 46277   0090DE  0009               	tblrd		*+
 46278   0090E0  CFF5 F01A          	movff	tablat,??_highIsr
 46279   0090E4  0009               	tblrd		*+
 46280   0090E6  CFF5 F01B          	movff	tablat,??_highIsr+1
 46281   0090EA  0E0A               	movlw	10
 46282   0090EC  261A               	addwf	??_highIsr^0,f,c
 46283   0090EE  0E00               	movlw	0
 46284   0090F0  221B               	addwfc	(??_highIsr+1)^0,f,c
 46285   0090F2  C01A  FFF6         	movff	??_highIsr,tblptrl
 46286   0090F6  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 46287   0090FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46288   0090FA  6AF8               	clrf	tblptru,c
 46289   0090FC                     	endif
 46290   0090FC                     	if	0	;tblptru may be non-zero
 46291   0090FC                     	endif
 46292   0090FC  0009               	tblrd		*+
 46293   0090FE  CFF5 F01C          	movff	tablat,??_highIsr+2
 46294   009102  0009               	tblrd		*+
 46295   009104  CFF5 F01D          	movff	tablat,??_highIsr+3
 46296   009108  D801               	call	i2u2677_48
 46297   00910A  D009               	goto	i2u2677_49
 46298   00910C                     i2u2677_48:
 46299   00910C  0005               	push	
 46300   00910E  6EFA               	movwf	pclath,c
 46301   009110  501C               	movf	(??_highIsr+2)^0,w,c
 46302   009112  6EFD               	movwf	tosl,c
 46303   009114  501D               	movf	(??_highIsr+3)^0,w,c
 46304   009116  6EFE               	movwf	tosh,c
 46305   009118  6AFF               	clrf	tosu,c
 46306   00911A  50FA               	movf	pclath,w,c
 46307   00911C  0012               	return		;indir
 46308   00911E                     i2u2677_49:
 46309                           
 46310                           ;../../VLCBlib_PIC/vlcb.c: 1064:     }
 46311   00911E  2A1E               	incf	highIsr@i^0,f,c
 46312   009120  0E08               	movlw	8
 46313   009122  641E               	cpfsgt	highIsr@i^0,c
 46314   009124  D7A0               	goto	i2l24940
 46315                           
 46316                           ;../../VLCBlib_PIC/vlcb.c: 1065:     APP_highIsr();
 46317   009126  ECAE  F062         	call	_APP_highIsr	;wreg free
 46318   00912A  0012               	return		;funcret
 46319   00912C                     __end_of_highIsr:
 46320                           	callstack 0
 46321                           
 46322 ;; *************** function i2_canIsr *****************
 46323 ;; Defined at:
 46324 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 46325 ;; Parameters:    Size  Location     Type
 46326 ;;		None
 46327 ;; Auto vars:     Size  Location     Type
 46328 ;;		None
 46329 ;; Return value:  Size  Location     Type
 46330 ;;                  1    wreg      void 
 46331 ;; Registers used:
 46332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46333 ;; Tracked objects:
 46334 ;;		On entry : 0/0
 46335 ;;		On exit  : 0/0
 46336 ;;		Unchanged: 0/0
 46337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46342 ;;Total ram usage:        0 bytes
 46343 ;; Hardware stack levels used: 1
 46344 ;; Hardware stack levels required when called: 3
 46345 ;; This function calls:
 46346 ;;		i2_canFillRxFifo
 46347 ;;		i2_canTxError
 46348 ;;		i2_checkCANTimeout
 46349 ;;		i2_checkTxFifo
 46350 ;; This function is called by:
 46351 ;;		_highIsr
 46352 ;;		_lowIsr
 46353 ;; This function uses a non-reentrant model
 46354 ;;
 46355                           
 46356                           	psect	text215
 46357   00C544                     __ptext215:
 46358                           	callstack 0
 46359   00C544                     i2_canIsr:
 46360                           	callstack 2
 46361                           
 46362                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 46363                           
 46364                           ;incstack = 0
 46365   00C544  B077               	btfsc	119,0,c	;volatile
 46366                           
 46367                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 46368   00C546  ECF6  F039         	call	i2_canFillRxFifo	;wreg free
 46369                           
 46370                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 46371   00C54A  BA77               	btfsc	119,5,c	;volatile
 46372                           
 46373                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 46374   00C54C  EC3F  F059         	call	i2_canTxError	;wreg free
 46375                           
 46376                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 46377   00C550  B877               	btfsc	119,4,c	;volatile
 46378                           
 46379                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 46380   00C552  ECE3  F02B         	call	i2_checkTxFifo	;wreg free
 46381                           
 46382                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 46383                           
 46384                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 46385   00C556  ECE7  F05B         	call	i2_checkCANTimeout	;wreg free
 46386   00C55A  0012               	return		;funcret
 46387   00C55C                     __end_ofi2_canIsr:
 46388                           	callstack 0
 46389                           
 46390 ;; *************** function i2_checkCANTimeout *****************
 46391 ;; Defined at:
 46392 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 46393 ;; Parameters:    Size  Location     Type
 46394 ;;		None
 46395 ;; Auto vars:     Size  Location     Type
 46396 ;;		None
 46397 ;; Return value:  Size  Location     Type
 46398 ;;                  1    wreg      void 
 46399 ;; Registers used:
 46400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46401 ;; Tracked objects:
 46402 ;;		On entry : 0/0
 46403 ;;		On exit  : 0/0
 46404 ;;		Unchanged: 0/0
 46405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46409 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46410 ;;Total ram usage:        4 bytes
 46411 ;; Hardware stack levels used: 1
 46412 ;; Hardware stack levels required when called: 2
 46413 ;; This function calls:
 46414 ;;		i2_checkTxFifo
 46415 ;;		i2_tickGet
 46416 ;;		i2_updateModuleErrorStatus
 46417 ;; This function is called by:
 46418 ;;		i2_canIsr
 46419 ;; This function uses a non-reentrant model
 46420 ;;
 46421                           
 46422                           	psect	text216
 46423   00B7CE                     __ptext216:
 46424                           	callstack 0
 46425   00B7CE                     i2_checkCANTimeout:
 46426                           	callstack 2
 46427                           
 46428                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 46429                           
 46430                           ;incstack = 0
 46431   00B7CE  502F               	movf	_canTransmitTimeout^0,w,c
 46432   00B7D0  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 46433   00B7D2  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 46434   00B7D4  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 46435   00B7D6  B4D8               	btfsc	status,2,c
 46436   00B7D8  0012               	return	
 46437                           
 46438                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 46439   00B7DA  EC8B  F05A         	call	i2_tickGet	;wreg free
 46440   00B7DE  502F               	movf	_canTransmitTimeout^0,w,c
 46441   00B7E0  5C01               	subwf	?i2_tickGet^0,w,c
 46442   00B7E2  6E16               	movwf	??i2_checkCANTimeout^0,c
 46443   00B7E4  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 46444   00B7E6  5802               	subwfb	(?i2_tickGet+1)^0,w,c
 46445   00B7E8  6E17               	movwf	(??i2_checkCANTimeout+1)^0,c
 46446   00B7EA  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 46447   00B7EC  5803               	subwfb	(?i2_tickGet+2)^0,w,c
 46448   00B7EE  6E18               	movwf	(??i2_checkCANTimeout+2)^0,c
 46449   00B7F0  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 46450   00B7F2  5804               	subwfb	(?i2_tickGet+3)^0,w,c
 46451   00B7F4  6E19               	movwf	(??i2_checkCANTimeout+3)^0,c
 46452   00B7F6  5019               	movf	(??i2_checkCANTimeout+3)^0,w,c
 46453   00B7F8  1018               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 46454   00B7FA  E106               	bnz	i2u1498_40
 46455   00B7FC  0E25               	movlw	37
 46456   00B7FE  5C16               	subwf	??i2_checkCANTimeout^0,w,c
 46457   00B800  0EF4               	movlw	244
 46458   00B802  5817               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 46459   00B804  A0D8               	btfss	status,0,c
 46460   00B806  0012               	return	
 46461   00B808                     i2u1498_40:
 46462                           
 46463                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 46464   00B808  0E01               	movlw	1
 46465   00B80A  0100               	movlb	0	; () banked
 46466   00B80C  6FC0               	movwf	_canTransmitFailed& (0+255),b
 46467                           
 46468                           ; BSR set to: 0
 46469                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 46470   00B80E  010F               	movlb	15	; () banked
 46471   00B810  9720               	bcf	32,3,b	;volatile
 46472                           
 46473                           ; BSR set to: 15
 46474                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 46475   00B812  ECE3  F02B         	call	i2_checkTxFifo	;wreg free
 46476                           
 46477                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 46478   00B816  0101               	movlb	1	; () banked
 46479   00B818  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46480   00B81A  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 46481                           
 46482                           ; BSR set to: 1
 46483                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 46484   00B81C  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46485   00B820  0012               	return		;funcret
 46486   00B822                     __end_ofi2_checkCANTimeout:
 46487                           	callstack 0
 46488                           
 46489 ;; *************** function i2_canTxError *****************
 46490 ;; Defined at:
 46491 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 46492 ;; Parameters:    Size  Location     Type
 46493 ;;		None
 46494 ;; Auto vars:     Size  Location     Type
 46495 ;;		None
 46496 ;; Return value:  Size  Location     Type
 46497 ;;                  1    wreg      void 
 46498 ;; Registers used:
 46499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46500 ;; Tracked objects:
 46501 ;;		On entry : 0/0
 46502 ;;		On exit  : 0/0
 46503 ;;		Unchanged: 0/0
 46504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46509 ;;Total ram usage:        0 bytes
 46510 ;; Hardware stack levels used: 1
 46511 ;; Hardware stack levels required when called: 2
 46512 ;; This function calls:
 46513 ;;		i2_checkTxFifo
 46514 ;;		i2_updateModuleErrorStatus
 46515 ;; This function is called by:
 46516 ;;		i2_canIsr
 46517 ;; This function uses a non-reentrant model
 46518 ;;
 46519                           
 46520                           	psect	text217
 46521   00B27E                     __ptext217:
 46522                           	callstack 0
 46523   00B27E                     i2_canTxError:
 46524                           	callstack 2
 46525                           
 46526                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 46527                           
 46528                           ;incstack = 0
 46529   00B27E  010F               	movlb	15	; () banked
 46530   00B280  AB20               	btfss	32,5,b	;volatile
 46531   00B282  D012               	goto	i2l15536
 46532                           
 46533                           ; BSR set to: 15
 46534                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 46535   00B284  0E01               	movlw	1
 46536   00B286  0100               	movlb	0	; () banked
 46537   00B288  6FC0               	movwf	_canTransmitFailed& (0+255),b
 46538                           
 46539                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 46540   00B28A  0E00               	movlw	0
 46541   00B28C  6E2F               	movwf	_canTransmitTimeout^0,c
 46542   00B28E  0E00               	movlw	0
 46543   00B290  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 46544   00B292  0E00               	movlw	0
 46545   00B294  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 46546   00B296  0E00               	movlw	0
 46547   00B298  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 46548                           
 46549                           ; BSR set to: 0
 46550                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 46551   00B29A  010F               	movlb	15	; () banked
 46552   00B29C  9720               	bcf	32,3,b	;volatile
 46553                           
 46554                           ; BSR set to: 15
 46555                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 46556   00B29E  0101               	movlb	1	; () banked
 46557   00B2A0  4B7F               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 46558   00B2A2  2B80               	incf	(_canDiagnostics+25)& (0+255),f,b
 46559                           
 46560                           ; BSR set to: 1
 46561                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 46562   00B2A4  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46563   00B2A8                     i2l15536:
 46564                           
 46565                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 46566   00B2A8  010F               	movlb	15	; () banked
 46567   00B2AA  A920               	btfss	32,4,b	;volatile
 46568   00B2AC  D012               	goto	i2l15546
 46569                           
 46570                           ; BSR set to: 15
 46571                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 46572   00B2AE  0E01               	movlw	1
 46573   00B2B0  0100               	movlb	0	; () banked
 46574   00B2B2  6FC0               	movwf	_canTransmitFailed& (0+255),b
 46575                           
 46576                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 46577   00B2B4  0E00               	movlw	0
 46578   00B2B6  6E2F               	movwf	_canTransmitTimeout^0,c
 46579   00B2B8  0E00               	movlw	0
 46580   00B2BA  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 46581   00B2BC  0E00               	movlw	0
 46582   00B2BE  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 46583   00B2C0  0E00               	movlw	0
 46584   00B2C2  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 46585                           
 46586                           ; BSR set to: 0
 46587                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 46588   00B2C4  010F               	movlb	15	; () banked
 46589   00B2C6  9720               	bcf	32,3,b	;volatile
 46590                           
 46591                           ; BSR set to: 15
 46592                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 46593   00B2C8  0101               	movlb	1	; () banked
 46594   00B2CA  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46595   00B2CC  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 46596                           
 46597                           ; BSR set to: 1
 46598                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 46599   00B2CE  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46600   00B2D2                     i2l15546:
 46601                           
 46602                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 46603   00B2D2  0100               	movlb	0	; () banked
 46604   00B2D4  51C0               	movf	_canTransmitFailed& (0+255),w,b
 46605   00B2D6  A4D8               	btfss	status,2,c
 46606                           
 46607                           ; BSR set to: 0
 46608                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 46609   00B2D8  ECE3  F02B         	call	i2_checkTxFifo	;wreg free
 46610                           
 46611                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 46612   00B2DC  9A77               	bcf	119,5,c	;volatile
 46613   00B2DE  0012               	return		;funcret
 46614   00B2E0                     __end_ofi2_canTxError:
 46615                           	callstack 0
 46616                           
 46617 ;; *************** function i2_checkTxFifo *****************
 46618 ;; Defined at:
 46619 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 46620 ;; Parameters:    Size  Location     Type
 46621 ;;		None
 46622 ;; Auto vars:     Size  Location     Type
 46623 ;;  mp              2   19[COMRAM] PTR struct Message
 46624 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46625 ;;  m               2   17[COMRAM] PTR struct Message
 46626 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46627 ;; Return value:  Size  Location     Type
 46628 ;;                  1    wreg      void 
 46629 ;; Registers used:
 46630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46631 ;; Tracked objects:
 46632 ;;		On entry : 0/0
 46633 ;;		On exit  : 0/0
 46634 ;;		Unchanged: 0/0
 46635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46637 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46638 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46639 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46640 ;;Total ram usage:        9 bytes
 46641 ;; Hardware stack levels used: 1
 46642 ;; Hardware stack levels required when called: 1
 46643 ;; This function calls:
 46644 ;;		i2_getNextWriteMessage
 46645 ;;		i2_isEvent
 46646 ;;		i2_pop
 46647 ;;		i2_tickGet
 46648 ;;		i2_updateModuleErrorStatus
 46649 ;; This function is called by:
 46650 ;;		i2_canIsr
 46651 ;;		i2_checkCANTimeout
 46652 ;;		i2_canTxError
 46653 ;; This function uses a non-reentrant model
 46654 ;;
 46655                           
 46656                           	psect	text218
 46657   0057C6                     __ptext218:
 46658                           	callstack 0
 46659   0057C6                     i2_checkTxFifo:
 46660                           	callstack 3
 46661                           
 46662                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 46663                           
 46664                           ;incstack = 0
 46665   0057C6  9877               	bcf	119,4,c	;volatile
 46666                           
 46667                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 46668   0057C8  010F               	movlb	15	; () banked
 46669   0057CA  B720               	btfsc	32,3,b	;volatile
 46670   0057CC  D142               	goto	i2l2540
 46671                           
 46672                           ; BSR set to: 15
 46673                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 46674   0057CE  0E4A               	movlw	low _txQueue
 46675   0057D0  6E01               	movwf	i2pop@q^0,c
 46676   0057D2  EC1F  F04F         	call	i2_pop	;wreg free
 46677   0057D6  C001  F014         	movff	?i2_pop,i2checkTxFifo@mp
 46678   0057DA  C002  F015         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 46679                           
 46680                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 46681   0057DE  5014               	movf	i2checkTxFifo@mp^0,w,c
 46682   0057E0  1015               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 46683   0057E2  B4D8               	btfsc	status,2,c
 46684   0057E4  D128               	goto	i2l14116
 46685                           
 46686                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 46687   0057E6  EE20 F001          	lfsr	2,1
 46688   0057EA  5014               	movf	i2checkTxFifo@mp^0,w,c
 46689   0057EC  26D9               	addwf	fsr2l,f,c
 46690   0057EE  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46691   0057F0  22DA               	addwfc	fsr2h,f,c
 46692   0057F2  50DF               	movf	indf2,w,c
 46693   0057F4  6E0D               	movwf	??i2_checkTxFifo^0,c
 46694   0057F6  6A0E               	clrf	(??i2_checkTxFifo+1)^0,c
 46695   0057F8  0E29               	movlw	low _priorities
 46696   0057FA  240D               	addwf	??i2_checkTxFifo^0,w,c
 46697   0057FC  6EF6               	movwf	tblptrl,c
 46698   0057FE  0EED               	movlw	high _priorities
 46699   005800  200E               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 46700   005802  6EF7               	movwf	tblptrh,c
 46701   005804                     	if	1	;There are 3 active tblptr bytes
 46702   005804  6AF8               	clrf	tblptru,c
 46703   005806  0E00               	movlw	low (__mediumconst shr (0+16))
 46704   005808  22F8               	addwfc	tblptru,f,c
 46705   00580A                     	endif
 46706   00580A  0008               	tblrd		*
 46707   00580C  50F5               	movf	tablat,w,c
 46708   00580E  6E0F               	movwf	(??i2_checkTxFifo+2)^0,c
 46709   005810  6A10               	clrf	(??i2_checkTxFifo+3)^0,c
 46710   005812  0E86               	movlw	low _canPri
 46711   005814  240F               	addwf	(??i2_checkTxFifo+2)^0,w,c
 46712   005816  6EF6               	movwf	tblptrl,c
 46713   005818  0EEE               	movlw	high _canPri
 46714   00581A  2010               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 46715   00581C  6EF7               	movwf	tblptrh,c
 46716   00581E                     	if	1	;There are 3 active tblptr bytes
 46717   00581E  6AF8               	clrf	tblptru,c
 46718   005820  0E00               	movlw	low (__mediumconst shr (0+16))
 46719   005822  22F8               	addwfc	tblptru,f,c
 46720   005824                     	endif
 46721   005824  0008               	tblrd		*
 46722   005826  CFF5 F011          	movff	tablat,??i2_checkTxFifo+4
 46723   00582A  0100               	movlb	0	; () banked
 46724   00582C  39C1               	swapf	_canId& (0+255),w,b
 46725   00582E  46E8               	rlncf	wreg,f,c
 46726   005830  0B1F               	andlw	31
 46727   005832  0B0F               	andlw	15
 46728   005834  1011               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 46729   005836  010F               	movlb	15	; () banked
 46730   005838  6F21               	movwf	33,b	;volatile
 46731                           
 46732                           ; BSR set to: 15
 46733                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 46734   00583A  C0C1  F00D         	movff	_canId,??i2_checkTxFifo
 46735   00583E  0E07               	movlw	7
 46736   005840  160D               	andwf	??i2_checkTxFifo^0,f,c
 46737   005842  0E05               	movlw	5
 46738   005844  6E0E               	movwf	(??i2_checkTxFifo+1)^0,c
 46739   005846                     i2u1294_45:
 46740   005846  90D8               	bcf	status,0,c
 46741   005848  360D               	rlcf	??i2_checkTxFifo^0,f,c
 46742   00584A  2E0E               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 46743   00584C  D7FC               	goto	i2u1294_45
 46744   00584E  500D               	movf	??i2_checkTxFifo^0,w,c
 46745   005850  6F22               	movwf	34,b	;volatile
 46746                           
 46747                           ; BSR set to: 15
 46748                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 46749   005852  EE20 F001          	lfsr	2,1
 46750   005856  5014               	movf	i2checkTxFifo@mp^0,w,c
 46751   005858  26D9               	addwf	fsr2l,f,c
 46752   00585A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46753   00585C  22DA               	addwfc	fsr2h,f,c
 46754   00585E  50DF               	movf	indf2,w,c
 46755   005860  6F26               	movwf	38,b	;volatile
 46756                           
 46757                           ; BSR set to: 15
 46758                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 46759   005862  EE20 F002          	lfsr	2,2
 46760   005866  5014               	movf	i2checkTxFifo@mp^0,w,c
 46761   005868  26D9               	addwf	fsr2l,f,c
 46762   00586A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46763   00586C  22DA               	addwfc	fsr2h,f,c
 46764   00586E  50DF               	movf	indf2,w,c
 46765   005870  6F27               	movwf	39,b	;volatile
 46766                           
 46767                           ; BSR set to: 15
 46768                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 46769   005872  EE20 F003          	lfsr	2,3
 46770   005876  5014               	movf	i2checkTxFifo@mp^0,w,c
 46771   005878  26D9               	addwf	fsr2l,f,c
 46772   00587A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46773   00587C  22DA               	addwfc	fsr2h,f,c
 46774   00587E  50DF               	movf	indf2,w,c
 46775   005880  6F28               	movwf	40,b	;volatile
 46776                           
 46777                           ; BSR set to: 15
 46778                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 46779   005882  EE20 F004          	lfsr	2,4
 46780   005886  5014               	movf	i2checkTxFifo@mp^0,w,c
 46781   005888  26D9               	addwf	fsr2l,f,c
 46782   00588A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46783   00588C  22DA               	addwfc	fsr2h,f,c
 46784   00588E  50DF               	movf	indf2,w,c
 46785   005890  6F29               	movwf	41,b	;volatile
 46786                           
 46787                           ; BSR set to: 15
 46788                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 46789   005892  EE20 F005          	lfsr	2,5
 46790   005896  5014               	movf	i2checkTxFifo@mp^0,w,c
 46791   005898  26D9               	addwf	fsr2l,f,c
 46792   00589A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46793   00589C  22DA               	addwfc	fsr2h,f,c
 46794   00589E  50DF               	movf	indf2,w,c
 46795   0058A0  6F2A               	movwf	42,b	;volatile
 46796                           
 46797                           ; BSR set to: 15
 46798                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 46799   0058A2  EE20 F006          	lfsr	2,6
 46800   0058A6  5014               	movf	i2checkTxFifo@mp^0,w,c
 46801   0058A8  26D9               	addwf	fsr2l,f,c
 46802   0058AA  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46803   0058AC  22DA               	addwfc	fsr2h,f,c
 46804   0058AE  50DF               	movf	indf2,w,c
 46805   0058B0  6F2B               	movwf	43,b	;volatile
 46806                           
 46807                           ; BSR set to: 15
 46808                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 46809   0058B2  EE20 F007          	lfsr	2,7
 46810   0058B6  5014               	movf	i2checkTxFifo@mp^0,w,c
 46811   0058B8  26D9               	addwf	fsr2l,f,c
 46812   0058BA  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46813   0058BC  22DA               	addwfc	fsr2h,f,c
 46814   0058BE  50DF               	movf	indf2,w,c
 46815   0058C0  6F2C               	movwf	44,b	;volatile
 46816                           
 46817                           ; BSR set to: 15
 46818                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 46819   0058C2  EE20 F008          	lfsr	2,8
 46820   0058C6  5014               	movf	i2checkTxFifo@mp^0,w,c
 46821   0058C8  26D9               	addwf	fsr2l,f,c
 46822   0058CA  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46823   0058CC  22DA               	addwfc	fsr2h,f,c
 46824   0058CE  50DF               	movf	indf2,w,c
 46825   0058D0  6F2D               	movwf	45,b	;volatile
 46826                           
 46827                           ; BSR set to: 15
 46828                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 46829   0058D2  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 46830   0058D6  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 46831   0058DA  50DF               	movf	indf2,w,c
 46832   0058DC  6F25               	movwf	37,b	;volatile
 46833                           
 46834                           ; BSR set to: 15
 46835                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 46836   0058DE  EC8B  F05A         	call	i2_tickGet	;wreg free
 46837   0058E2  C001  F02F         	movff	?i2_tickGet,_canTransmitTimeout
 46838   0058E6  C002  F030         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 46839   0058EA  C003  F031         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 46840   0058EE  C004  F032         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 46841                           
 46842                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 46843   0058F2  0E00               	movlw	0
 46844   0058F4  0100               	movlb	0	; () banked
 46845   0058F6  6FC0               	movwf	_canTransmitFailed& (0+255),b
 46846                           
 46847                           ; BSR set to: 0
 46848                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 46849   0058F8  010F               	movlb	15	; () banked
 46850   0058FA  8720               	bsf	32,3,b	;volatile
 46851                           
 46852                           ; BSR set to: 15
 46853                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 46854   0058FC  8876               	bsf	118,4,c	;volatile
 46855                           
 46856                           ; BSR set to: 15
 46857                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 46858   0058FE  0101               	movlb	1	; () banked
 46859   005900  4B73               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 46860   005902  2B74               	incf	(_canDiagnostics+13)& (0+255),f,b
 46861                           
 46862                           ; BSR set to: 1
 46863                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 46864   005904  EE20 F001          	lfsr	2,1
 46865   005908  5014               	movf	i2checkTxFifo@mp^0,w,c
 46866   00590A  26D9               	addwf	fsr2l,f,c
 46867   00590C  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46868   00590E  22DA               	addwfc	fsr2h,f,c
 46869   005910  50DF               	movf	indf2,w,c
 46870   005912  ECD1  F061         	call	i2_isEvent
 46871   005916  0900               	iorlw	0
 46872   005918  B4D8               	btfsc	status,2,c
 46873   00591A  0012               	return	
 46874                           
 46875                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 46876   00591C  0E4F               	movlw	low _rxQueue
 46877   00591E  6E01               	movwf	i2getNextWriteMessage@q^0,c
 46878   005920  ECFB  F046         	call	i2_getNextWriteMessage	;wreg free
 46879   005924  C001  F012         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 46880   005928  C002  F013         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 46881                           
 46882                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 46883   00592C  5012               	movf	i2checkTxFifo@m^0,w,c
 46884   00592E  1013               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 46885   005930  A4D8               	btfss	status,2,c
 46886   005932  D006               	goto	i2l14098
 46887                           
 46888                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 46889   005934  0101               	movlb	1	; () banked
 46890   005936  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 46891   005938  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 46892                           
 46893                           ; BSR set to: 1
 46894                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 46895   00593A  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46896                           
 46897                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 46898   00593E  0012               	return	
 46899   005940                     i2l14098:
 46900                           
 46901                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 46902   005940  EE20 F001          	lfsr	2,1
 46903   005944  5014               	movf	i2checkTxFifo@mp^0,w,c
 46904   005946  26D9               	addwf	fsr2l,f,c
 46905   005948  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46906   00594A  22DA               	addwfc	fsr2h,f,c
 46907   00594C  EE10 F001          	lfsr	1,1
 46908   005950  5012               	movf	i2checkTxFifo@m^0,w,c
 46909   005952  26E1               	addwf	fsr1l,f,c
 46910   005954  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46911   005956  22E2               	addwfc	fsr1h,f,c
 46912   005958  CFDF FFE7          	movff	indf2,indf1
 46913                           
 46914                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 46915   00595C  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 46916   005960  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 46917   005964  C012  FFE1         	movff	i2checkTxFifo@m,fsr1l
 46918   005968  C013  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 46919   00596C  CFDF FFE7          	movff	indf2,indf1
 46920                           
 46921                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 46922   005970  EE20 F002          	lfsr	2,2
 46923   005974  5014               	movf	i2checkTxFifo@mp^0,w,c
 46924   005976  26D9               	addwf	fsr2l,f,c
 46925   005978  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46926   00597A  22DA               	addwfc	fsr2h,f,c
 46927   00597C  EE10 F002          	lfsr	1,2
 46928   005980  5012               	movf	i2checkTxFifo@m^0,w,c
 46929   005982  26E1               	addwf	fsr1l,f,c
 46930   005984  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46931   005986  22E2               	addwfc	fsr1h,f,c
 46932   005988  CFDF FFE7          	movff	indf2,indf1
 46933                           
 46934                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 46935   00598C  EE20 F003          	lfsr	2,3
 46936   005990  5014               	movf	i2checkTxFifo@mp^0,w,c
 46937   005992  26D9               	addwf	fsr2l,f,c
 46938   005994  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46939   005996  22DA               	addwfc	fsr2h,f,c
 46940   005998  EE10 F003          	lfsr	1,3
 46941   00599C  5012               	movf	i2checkTxFifo@m^0,w,c
 46942   00599E  26E1               	addwf	fsr1l,f,c
 46943   0059A0  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46944   0059A2  22E2               	addwfc	fsr1h,f,c
 46945   0059A4  CFDF FFE7          	movff	indf2,indf1
 46946                           
 46947                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 46948   0059A8  EE20 F004          	lfsr	2,4
 46949   0059AC  5014               	movf	i2checkTxFifo@mp^0,w,c
 46950   0059AE  26D9               	addwf	fsr2l,f,c
 46951   0059B0  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46952   0059B2  22DA               	addwfc	fsr2h,f,c
 46953   0059B4  EE10 F004          	lfsr	1,4
 46954   0059B8  5012               	movf	i2checkTxFifo@m^0,w,c
 46955   0059BA  26E1               	addwf	fsr1l,f,c
 46956   0059BC  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46957   0059BE  22E2               	addwfc	fsr1h,f,c
 46958   0059C0  CFDF FFE7          	movff	indf2,indf1
 46959                           
 46960                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 46961   0059C4  EE20 F005          	lfsr	2,5
 46962   0059C8  5014               	movf	i2checkTxFifo@mp^0,w,c
 46963   0059CA  26D9               	addwf	fsr2l,f,c
 46964   0059CC  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46965   0059CE  22DA               	addwfc	fsr2h,f,c
 46966   0059D0  EE10 F005          	lfsr	1,5
 46967   0059D4  5012               	movf	i2checkTxFifo@m^0,w,c
 46968   0059D6  26E1               	addwf	fsr1l,f,c
 46969   0059D8  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46970   0059DA  22E2               	addwfc	fsr1h,f,c
 46971   0059DC  CFDF FFE7          	movff	indf2,indf1
 46972                           
 46973                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 46974   0059E0  EE20 F006          	lfsr	2,6
 46975   0059E4  5014               	movf	i2checkTxFifo@mp^0,w,c
 46976   0059E6  26D9               	addwf	fsr2l,f,c
 46977   0059E8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46978   0059EA  22DA               	addwfc	fsr2h,f,c
 46979   0059EC  EE10 F006          	lfsr	1,6
 46980   0059F0  5012               	movf	i2checkTxFifo@m^0,w,c
 46981   0059F2  26E1               	addwf	fsr1l,f,c
 46982   0059F4  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46983   0059F6  22E2               	addwfc	fsr1h,f,c
 46984   0059F8  CFDF FFE7          	movff	indf2,indf1
 46985                           
 46986                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 46987   0059FC  EE20 F007          	lfsr	2,7
 46988   005A00  5014               	movf	i2checkTxFifo@mp^0,w,c
 46989   005A02  26D9               	addwf	fsr2l,f,c
 46990   005A04  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46991   005A06  22DA               	addwfc	fsr2h,f,c
 46992   005A08  EE10 F007          	lfsr	1,7
 46993   005A0C  5012               	movf	i2checkTxFifo@m^0,w,c
 46994   005A0E  26E1               	addwf	fsr1l,f,c
 46995   005A10  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46996   005A12  22E2               	addwfc	fsr1h,f,c
 46997   005A14  CFDF FFE7          	movff	indf2,indf1
 46998                           
 46999                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 47000   005A18  EE20 F008          	lfsr	2,8
 47001   005A1C  5014               	movf	i2checkTxFifo@mp^0,w,c
 47002   005A1E  26D9               	addwf	fsr2l,f,c
 47003   005A20  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47004   005A22  22DA               	addwfc	fsr2h,f,c
 47005   005A24  EE10 F008          	lfsr	1,8
 47006   005A28  5012               	movf	i2checkTxFifo@m^0,w,c
 47007   005A2A  26E1               	addwf	fsr1l,f,c
 47008   005A2C  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47009   005A2E  22E2               	addwfc	fsr1h,f,c
 47010   005A30  CFDF FFE7          	movff	indf2,indf1
 47011   005A34  0012               	return	
 47012   005A36                     i2l14116:
 47013                           
 47014                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 47015   005A36  0E00               	movlw	0
 47016   005A38  6E2F               	movwf	_canTransmitTimeout^0,c
 47017   005A3A  0E00               	movlw	0
 47018   005A3C  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 47019   005A3E  0E00               	movlw	0
 47020   005A40  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 47021   005A42  0E00               	movlw	0
 47022   005A44  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 47023                           
 47024                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 47025   005A46  0E00               	movlw	0
 47026   005A48  010F               	movlb	15	; () banked
 47027   005A4A  6F20               	movwf	32,b	;volatile
 47028                           
 47029                           ; BSR set to: 15
 47030                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 47031   005A4C  9877               	bcf	119,4,c	;volatile
 47032                           
 47033                           ; BSR set to: 15
 47034                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 47035   005A4E  9876               	bcf	118,4,c	;volatile
 47036   005A50  0012               	return	
 47037   005A52                     i2l2540:
 47038                           
 47039                           ; BSR set to: 15
 47040                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 47041   005A52  9877               	bcf	119,4,c	;volatile
 47042                           
 47043                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 47044   005A54  8876               	bsf	118,4,c	;volatile
 47045   005A56  0012               	return		;funcret
 47046   005A58                     __end_ofi2_checkTxFifo:
 47047                           	callstack 0
 47048                           
 47049 ;; *************** function i2_tickGet *****************
 47050 ;; Defined at:
 47051 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 47052 ;; Parameters:    Size  Location     Type
 47053 ;;		None
 47054 ;; Auto vars:     Size  Location     Type
 47055 ;;  currentTime     4    6[COMRAM] struct _TickValue
 47056 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 47057 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 47058 ;; Return value:  Size  Location     Type
 47059 ;;                  4    0[COMRAM] unsigned long 
 47060 ;; Registers used:
 47061 ;;		wreg, status,2, status,0
 47062 ;; Tracked objects:
 47063 ;;		On entry : 0/0
 47064 ;;		On exit  : 0/0
 47065 ;;		Unchanged: 0/0
 47066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47068 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47070 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47071 ;;Total ram usage:       10 bytes
 47072 ;; Hardware stack levels used: 1
 47073 ;; This function calls:
 47074 ;;		Nothing
 47075 ;; This function is called by:
 47076 ;;		i2_checkTxFifo
 47077 ;;		i2_checkCANTimeout
 47078 ;; This function uses a non-reentrant model
 47079 ;;
 47080                           
 47081                           	psect	text219
 47082   00B516                     __ptext219:
 47083                           	callstack 0
 47084   00B516                     i2_tickGet:
 47085                           	callstack 3
 47086                           
 47087                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 47088                           
 47089                           ;incstack = 0
 47090   00B516  0E00               	movlw	0
 47091   00B518  6E09               	movwf	(i2tickGet@currentTime+2)^0,c
 47092                           
 47093                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 47094   00B51A  0E00               	movlw	0
 47095   00B51C  6E0A               	movwf	(i2tickGet@currentTime+3)^0,c
 47096                           
 47097                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 47098   00B51E  9AF2               	bcf	242,5,c	;volatile
 47099   00B520                     i2l12854:
 47100                           
 47101                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 47102   00B520  0E00               	movlw	0
 47103   00B522  B4F2               	btfsc	242,2,c	;volatile
 47104   00B524  0E01               	movlw	1
 47105   00B526  6E06               	movwf	i2tickGet@IntFlag1^0,c
 47106                           
 47107                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 47108   00B528  CFD6 F007          	movff	4054,i2tickGet@currentTime	;volatile
 47109                           
 47110                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 47111   00B52C  CFD7 F008          	movff	4055,i2tickGet@currentTime+1	;volatile
 47112                           
 47113                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 47114   00B530  0E00               	movlw	0
 47115   00B532  B4F2               	btfsc	242,2,c	;volatile
 47116   00B534  0E01               	movlw	1
 47117   00B536  6E05               	movwf	i2tickGet@IntFlag2^0,c
 47118                           
 47119                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 47120   00B538  5005               	movf	i2tickGet@IntFlag2^0,w,c
 47121   00B53A  1806               	xorwf	i2tickGet@IntFlag1^0,w,c
 47122   00B53C  A4D8               	btfss	status,2,c
 47123   00B53E  D7F0               	goto	i2l12854
 47124                           
 47125                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 47126   00B540  5006               	movf	i2tickGet@IntFlag1^0,w,c
 47127   00B542  B4D8               	btfsc	status,2,c
 47128   00B544  D006               	goto	i2l12874
 47129                           
 47130                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 47131   00B546  94F2               	bcf	242,2,c	;volatile
 47132                           
 47133                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 47134   00B548  0100               	movlb	0	; () banked
 47135   00B54A  2BC7               	incf	_timerExtension1& (0+255),f,b	;volatile
 47136                           
 47137                           ; BSR set to: 0
 47138                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 47139   00B54C  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 47140   00B54E  B4D8               	btfsc	status,2,c
 47141                           
 47142                           ; BSR set to: 0
 47143                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 47144   00B550  2BC6               	incf	_timerExtension2& (0+255),f,b	;volatile
 47145   00B552                     i2l12874:
 47146                           
 47147                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 47148   00B552  0100               	movlb	0	; () banked
 47149   00B554  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 47150   00B556  2609               	addwf	(i2tickGet@currentTime+2)^0,f,c
 47151                           
 47152                           ; BSR set to: 0
 47153                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 47154   00B558  51C6               	movf	_timerExtension2& (0+255),w,b	;volatile
 47155   00B55A  260A               	addwf	(i2tickGet@currentTime+3)^0,f,c
 47156                           
 47157                           ; BSR set to: 0
 47158                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 47159   00B55C  8AF2               	bsf	242,5,c	;volatile
 47160                           
 47161                           ; BSR set to: 0
 47162                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 47163   00B55E  C007  F001         	movff	i2tickGet@currentTime,?i2_tickGet
 47164   00B562  C008  F002         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 47165   00B566  C009  F003         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 47166   00B56A  C00A  F004         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 47167                           
 47168                           ; BSR set to: 0
 47169   00B56E  0012               	return		;funcret
 47170   00B570                     __end_ofi2_tickGet:
 47171                           	callstack 0
 47172                           
 47173 ;; *************** function i2_pop *****************
 47174 ;; Defined at:
 47175 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 47176 ;; Parameters:    Size  Location     Type
 47177 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 47178 ;;		 -> txQueue(5), rxQueue(5), 
 47179 ;; Auto vars:     Size  Location     Type
 47180 ;;  ret             2    7[COMRAM] PTR struct Message
 47181 ;;		 -> txBuffers(72), rxBuffers(288), 
 47182 ;; Return value:  Size  Location     Type
 47183 ;;                  2    0[COMRAM] PTR struct Message
 47184 ;; Registers used:
 47185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47186 ;; Tracked objects:
 47187 ;;		On entry : 0/0
 47188 ;;		On exit  : 0/0
 47189 ;;		Unchanged: 0/0
 47190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47193 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47194 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47195 ;;Total ram usage:        9 bytes
 47196 ;; Hardware stack levels used: 1
 47197 ;; This function calls:
 47198 ;;		Nothing
 47199 ;; This function is called by:
 47200 ;;		i2_checkTxFifo
 47201 ;; This function uses a non-reentrant model
 47202 ;;
 47203                           
 47204                           	psect	text220
 47205   009E3E                     __ptext220:
 47206                           	callstack 0
 47207   009E3E                     i2_pop:
 47208                           	callstack 3
 47209                           
 47210                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 47211                           
 47212                           ; BSR set to: 0
 47213                           ;incstack = 0
 47214   009E3E  5001               	movf	i2pop@q^0,w,c
 47215   009E40  6ED9               	movwf	fsr2l,c
 47216   009E42  6ADA               	clrf	fsr2h,c
 47217   009E44  0E02               	movlw	2
 47218   009E46  26D9               	addwf	fsr2l,f,c
 47219   009E48  5001               	movf	i2pop@q^0,w,c
 47220   009E4A  6EE1               	movwf	fsr1l,c
 47221   009E4C  6AE2               	clrf	fsr1h,c
 47222   009E4E  0E03               	movlw	3
 47223   009E50  26E1               	addwf	fsr1l,f,c
 47224   009E52  50DE               	movf	postinc2,w,c
 47225   009E54  18E6               	xorwf	postinc1,w,c
 47226   009E56  A4D8               	btfss	status,2,c
 47227   009E58  D005               	goto	i2l12960
 47228                           
 47229                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 47230   009E5A  0E00               	movlw	0
 47231   009E5C  6E01               	movwf	?i2_pop^0,c
 47232   009E5E  0E00               	movlw	0
 47233   009E60  6E02               	movwf	(?i2_pop+1)^0,c
 47234   009E62  0012               	return	
 47235   009E64                     i2l12960:
 47236                           
 47237                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 47238   009E64  5001               	movf	i2pop@q^0,w,c
 47239   009E66  6ED9               	movwf	fsr2l,c
 47240   009E68  6ADA               	clrf	fsr2h,c
 47241   009E6A  0E02               	movlw	2
 47242   009E6C  26D9               	addwf	fsr2l,f,c
 47243   009E6E  50DF               	movf	indf2,w,c
 47244   009E70  6E03               	movwf	??i2_pop^0,c
 47245   009E72  5003               	movf	??i2_pop^0,w,c
 47246   009E74  0D09               	mullw	9
 47247   009E76  CFF3 F004          	movff	prodl,??i2_pop+1
 47248   009E7A  CFF4 F005          	movff	prodh,??i2_pop+2
 47249   009E7E  5001               	movf	i2pop@q^0,w,c
 47250   009E80  6ED9               	movwf	fsr2l,c
 47251   009E82  6ADA               	clrf	fsr2h,c
 47252   009E84  CFDE F006          	movff	postinc2,??i2_pop+3
 47253   009E88  CFDD F007          	movff	postdec2,??i2_pop+4
 47254   009E8C  5004               	movf	(??i2_pop+1)^0,w,c
 47255   009E8E  2406               	addwf	(??i2_pop+3)^0,w,c
 47256   009E90  6E08               	movwf	i2pop@ret^0,c
 47257   009E92  5005               	movf	(??i2_pop+2)^0,w,c
 47258   009E94  2007               	addwfc	(??i2_pop+4)^0,w,c
 47259   009E96  6E09               	movwf	(i2pop@ret+1)^0,c
 47260   009E98  5001               	movf	i2pop@q^0,w,c
 47261   009E9A  6ED9               	movwf	fsr2l,c
 47262   009E9C  6ADA               	clrf	fsr2h,c
 47263   009E9E  0E02               	movlw	2
 47264   009EA0  26D9               	addwf	fsr2l,f,c
 47265   009EA2  2ADF               	incf	indf2,f,c
 47266                           
 47267                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 47268   009EA4  5001               	movf	i2pop@q^0,w,c
 47269   009EA6  6ED9               	movwf	fsr2l,c
 47270   009EA8  6ADA               	clrf	fsr2h,c
 47271   009EAA  0E04               	movlw	4
 47272   009EAC  26D9               	addwf	fsr2l,f,c
 47273   009EAE  5001               	movf	i2pop@q^0,w,c
 47274   009EB0  6EE1               	movwf	fsr1l,c
 47275   009EB2  6AE2               	clrf	fsr1h,c
 47276   009EB4  0E02               	movlw	2
 47277   009EB6  26E1               	addwf	fsr1l,f,c
 47278   009EB8  50DE               	movf	postinc2,w,c
 47279   009EBA  5CE6               	subwf	postinc1,w,c
 47280   009EBC  A0D8               	btfss	status,0,c
 47281   009EBE  D006               	goto	i2l12968
 47282   009EC0  5001               	movf	i2pop@q^0,w,c
 47283   009EC2  6ED9               	movwf	fsr2l,c
 47284   009EC4  6ADA               	clrf	fsr2h,c
 47285   009EC6  0E02               	movlw	2
 47286   009EC8  26D9               	addwf	fsr2l,f,c
 47287   009ECA  6ADF               	clrf	indf2,c
 47288   009ECC                     i2l12968:
 47289                           
 47290                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 47291   009ECC  C008  F001         	movff	i2pop@ret,?i2_pop
 47292   009ED0  C009  F002         	movff	i2pop@ret+1,?i2_pop+1
 47293   009ED4  0012               	return		;funcret
 47294   009ED6                     __end_ofi2_pop:
 47295                           	callstack 0
 47296                           
 47297 ;; *************** function i2_isEvent *****************
 47298 ;; Defined at:
 47299 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 47300 ;; Parameters:    Size  Location     Type
 47301 ;;  opc             1    wreg     unsigned char 
 47302 ;; Auto vars:     Size  Location     Type
 47303 ;;  opc             1    1[COMRAM] unsigned char 
 47304 ;; Return value:  Size  Location     Type
 47305 ;;                  1    wreg      enum E12766
 47306 ;; Registers used:
 47307 ;;		wreg, status,2, status,0
 47308 ;; Tracked objects:
 47309 ;;		On entry : 0/0
 47310 ;;		On exit  : 0/0
 47311 ;;		Unchanged: 0/0
 47312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47317 ;;Total ram usage:        2 bytes
 47318 ;; Hardware stack levels used: 1
 47319 ;; This function calls:
 47320 ;;		Nothing
 47321 ;; This function is called by:
 47322 ;;		i2_checkTxFifo
 47323 ;; This function uses a non-reentrant model
 47324 ;;
 47325                           
 47326                           	psect	text221
 47327   00C3A2                     __ptext221:
 47328                           	callstack 0
 47329   00C3A2                     i2_isEvent:
 47330                           	callstack 3
 47331                           
 47332                           ;incstack = 0
 47333                           ;i2isEvent@opc stored from wreg
 47334   00C3A2  6E02               	movwf	i2isEvent@opc^0,c
 47335                           
 47336                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 47337   00C3A4  0E00               	movlw	0
 47338   00C3A6  6E01               	movwf	i2_isEvent$4890^0,c
 47339   00C3A8  5002               	movf	i2isEvent@opc^0,w,c
 47340   00C3AA  0B90               	andlw	144
 47341   00C3AC  0A90               	xorlw	144
 47342   00C3AE  A4D8               	btfss	status,2,c
 47343   00C3B0  D008               	goto	i2l2048
 47344   00C3B2  5002               	movf	i2isEvent@opc^0,w,c
 47345   00C3B4  0AFF               	xorlw	255
 47346   00C3B6  0B06               	andlw	6
 47347   00C3B8  0A06               	xorlw	6
 47348   00C3BA  A4D8               	btfss	status,2,c
 47349   00C3BC  D002               	goto	i2l2048
 47350   00C3BE  0E01               	movlw	1
 47351   00C3C0  6E01               	movwf	i2_isEvent$4890^0,c
 47352   00C3C2                     i2l2048:
 47353   00C3C2  5001               	movf	i2_isEvent$4890^0,w,c
 47354   00C3C4  0012               	return		;funcret
 47355   00C3C6                     __end_ofi2_isEvent:
 47356                           	callstack 0
 47357                           
 47358 ;; *************** function i2_canFillRxFifo *****************
 47359 ;; Defined at:
 47360 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 47361 ;; Parameters:    Size  Location     Type
 47362 ;;		None
 47363 ;; Auto vars:     Size  Location     Type
 47364 ;;  ptr             2   14[COMRAM] PTR unsigned char 
 47365 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 47366 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 47367 ;;		 -> NULL(0), 
 47368 ;;  m               2   12[COMRAM] PTR struct Message
 47369 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47370 ;;  hiIndex         1    0        unsigned char 
 47371 ;; Return value:  Size  Location     Type
 47372 ;;                  1    wreg      void 
 47373 ;; Registers used:
 47374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47375 ;; Tracked objects:
 47376 ;;		On entry : 0/0
 47377 ;;		On exit  : 0/0
 47378 ;;		Unchanged: 0/0
 47379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47383 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47384 ;;Total ram usage:        4 bytes
 47385 ;; Hardware stack levels used: 1
 47386 ;; Hardware stack levels required when called: 1
 47387 ;; This function calls:
 47388 ;;		i2_getBufferPointer
 47389 ;;		i2_getNextWriteMessage
 47390 ;;		i2_updateModuleErrorStatus
 47391 ;; This function is called by:
 47392 ;;		i2_canIsr
 47393 ;; This function uses a non-reentrant model
 47394 ;;
 47395                           
 47396                           	psect	text222
 47397   0073EC                     __ptext222:
 47398                           	callstack 0
 47399   0073EC                     i2_canFillRxFifo:
 47400                           	callstack 3
 47401                           
 47402                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47403                           
 47404                           ;incstack = 0
 47405   0073EC  D0B2               	goto	i2l15592
 47406   0073EE                     i2l15554:
 47407                           
 47408                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 47409   0073EE  506F               	movf	111,w,c	;volatile
 47410   0073F0  0B07               	andlw	7
 47411   0073F2  EC72  F051         	call	i2_getBufferPointer
 47412   0073F6  C001  F00F         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 47413   0073FA  C002  F010         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 47414                           
 47415                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 47416   0073FE  9277               	bcf	119,1,c	;volatile
 47417                           
 47418                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 47419   007400  BC71               	btfsc	113,6,c	;volatile
 47420                           
 47421                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 47422   007402  9C71               	bcf	113,6,c	;volatile
 47423                           
 47424                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 47425   007404  EE20 F002          	lfsr	2,2
 47426   007408  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47427   00740A  26D9               	addwf	fsr2l,f,c
 47428   00740C  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47429   00740E  22DA               	addwfc	fsr2h,f,c
 47430   007410  B6DF               	btfsc	indf2,3,c
 47431   007412  D092               	goto	i2l15582
 47432                           
 47433                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 47434   007414  0E4F               	movlw	low _rxQueue
 47435   007416  6E01               	movwf	i2getNextWriteMessage@q^0,c
 47436   007418  ECFB  F046         	call	i2_getNextWriteMessage	;wreg free
 47437   00741C  C001  F00D         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 47438   007420  C002  F00E         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 47439                           
 47440                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 47441   007424  500D               	movf	i2canFillRxFifo@m^0,w,c
 47442   007426  100E               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 47443   007428  A4D8               	btfss	status,2,c
 47444   00742A  D009               	goto	i2l15578
 47445                           
 47446                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 47447   00742C  0101               	movlb	1	; () banked
 47448   00742E  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 47449   007430  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 47450                           
 47451                           ; BSR set to: 1
 47452                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 47453   007432  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 47454                           
 47455                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 47456   007436  AE77               	btfss	119,7,c	;volatile
 47457   007438  0012               	return	
 47458                           
 47459                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 47460   00743A  9E77               	bcf	119,7,c	;volatile
 47461   00743C  0012               	return	
 47462   00743E                     i2l15578:
 47463                           
 47464                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 47465   00743E  EE20 F006          	lfsr	2,6
 47466   007442  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47467   007444  26D9               	addwf	fsr2l,f,c
 47468   007446  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47469   007448  22DA               	addwfc	fsr2h,f,c
 47470   00744A  EE10 F001          	lfsr	1,1
 47471   00744E  500D               	movf	i2canFillRxFifo@m^0,w,c
 47472   007450  26E1               	addwf	fsr1l,f,c
 47473   007452  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47474   007454  22E2               	addwfc	fsr1h,f,c
 47475   007456  CFDF FFE7          	movff	indf2,indf1
 47476                           
 47477                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 47478   00745A  EE20 F007          	lfsr	2,7
 47479   00745E  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47480   007460  26D9               	addwf	fsr2l,f,c
 47481   007462  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47482   007464  22DA               	addwfc	fsr2h,f,c
 47483   007466  EE10 F002          	lfsr	1,2
 47484   00746A  500D               	movf	i2canFillRxFifo@m^0,w,c
 47485   00746C  26E1               	addwf	fsr1l,f,c
 47486   00746E  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47487   007470  22E2               	addwfc	fsr1h,f,c
 47488   007472  CFDF FFE7          	movff	indf2,indf1
 47489                           
 47490                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 47491   007476  EE20 F008          	lfsr	2,8
 47492   00747A  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47493   00747C  26D9               	addwf	fsr2l,f,c
 47494   00747E  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47495   007480  22DA               	addwfc	fsr2h,f,c
 47496   007482  EE10 F003          	lfsr	1,3
 47497   007486  500D               	movf	i2canFillRxFifo@m^0,w,c
 47498   007488  26E1               	addwf	fsr1l,f,c
 47499   00748A  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47500   00748C  22E2               	addwfc	fsr1h,f,c
 47501   00748E  CFDF FFE7          	movff	indf2,indf1
 47502                           
 47503                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 47504   007492  EE20 F009          	lfsr	2,9
 47505   007496  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47506   007498  26D9               	addwf	fsr2l,f,c
 47507   00749A  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47508   00749C  22DA               	addwfc	fsr2h,f,c
 47509   00749E  EE10 F004          	lfsr	1,4
 47510   0074A2  500D               	movf	i2canFillRxFifo@m^0,w,c
 47511   0074A4  26E1               	addwf	fsr1l,f,c
 47512   0074A6  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47513   0074A8  22E2               	addwfc	fsr1h,f,c
 47514   0074AA  CFDF FFE7          	movff	indf2,indf1
 47515                           
 47516                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 47517   0074AE  EE20 F00A          	lfsr	2,10
 47518   0074B2  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47519   0074B4  26D9               	addwf	fsr2l,f,c
 47520   0074B6  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47521   0074B8  22DA               	addwfc	fsr2h,f,c
 47522   0074BA  EE10 F005          	lfsr	1,5
 47523   0074BE  500D               	movf	i2canFillRxFifo@m^0,w,c
 47524   0074C0  26E1               	addwf	fsr1l,f,c
 47525   0074C2  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47526   0074C4  22E2               	addwfc	fsr1h,f,c
 47527   0074C6  CFDF FFE7          	movff	indf2,indf1
 47528                           
 47529                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 47530   0074CA  EE20 F00B          	lfsr	2,11
 47531   0074CE  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47532   0074D0  26D9               	addwf	fsr2l,f,c
 47533   0074D2  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47534   0074D4  22DA               	addwfc	fsr2h,f,c
 47535   0074D6  EE10 F006          	lfsr	1,6
 47536   0074DA  500D               	movf	i2canFillRxFifo@m^0,w,c
 47537   0074DC  26E1               	addwf	fsr1l,f,c
 47538   0074DE  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47539   0074E0  22E2               	addwfc	fsr1h,f,c
 47540   0074E2  CFDF FFE7          	movff	indf2,indf1
 47541                           
 47542                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 47543   0074E6  EE20 F00C          	lfsr	2,12
 47544   0074EA  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47545   0074EC  26D9               	addwf	fsr2l,f,c
 47546   0074EE  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47547   0074F0  22DA               	addwfc	fsr2h,f,c
 47548   0074F2  EE10 F007          	lfsr	1,7
 47549   0074F6  500D               	movf	i2canFillRxFifo@m^0,w,c
 47550   0074F8  26E1               	addwf	fsr1l,f,c
 47551   0074FA  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47552   0074FC  22E2               	addwfc	fsr1h,f,c
 47553   0074FE  CFDF FFE7          	movff	indf2,indf1
 47554                           
 47555                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 47556   007502  EE20 F00D          	lfsr	2,13
 47557   007506  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47558   007508  26D9               	addwf	fsr2l,f,c
 47559   00750A  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47560   00750C  22DA               	addwfc	fsr2h,f,c
 47561   00750E  EE10 F008          	lfsr	1,8
 47562   007512  500D               	movf	i2canFillRxFifo@m^0,w,c
 47563   007514  26E1               	addwf	fsr1l,f,c
 47564   007516  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47565   007518  22E2               	addwfc	fsr1h,f,c
 47566   00751A  CFDF FFE7          	movff	indf2,indf1
 47567                           
 47568                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 47569   00751E  EE20 F005          	lfsr	2,5
 47570   007522  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47571   007524  26D9               	addwf	fsr2l,f,c
 47572   007526  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47573   007528  22DA               	addwfc	fsr2h,f,c
 47574   00752A  50DF               	movf	indf2,w,c
 47575   00752C  0B0F               	andlw	15
 47576   00752E  C00D  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 47577   007532  C00E  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 47578   007536  6EDF               	movwf	indf2,c
 47579   007538                     i2l15582:
 47580                           
 47581                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 47582   007538  AE77               	btfss	119,7,c	;volatile
 47583   00753A  D004               	goto	i2l15588
 47584                           
 47585                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 47586   00753C  0101               	movlb	1	; () banked
 47587   00753E  4B69               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 47588   007540  2B6A               	incf	(_canDiagnostics+3)& (0+255),f,b
 47589                           
 47590                           ; BSR set to: 1
 47591                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 47592   007542  9E77               	bcf	119,7,c	;volatile
 47593   007544                     i2l15588:
 47594                           
 47595                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 47596   007544  C00F  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 47597   007548  C010  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 47598   00754C  0E7F               	movlw	127
 47599   00754E  16DF               	andwf	indf2,f,c
 47600                           
 47601                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 47602   007550  9077               	bcf	119,0,c	;volatile
 47603   007552                     i2l15592:
 47604                           
 47605                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47606   007552  AE71               	btfss	113,7,c	;volatile
 47607   007554  0012               	return	
 47608   007556  D74B               	goto	i2l15554
 47609   007558                     __end_ofi2_canFillRxFifo:
 47610                           	callstack 0
 47611                           
 47612 ;; *************** function i2_updateModuleErrorStatus *****************
 47613 ;; Defined at:
 47614 ;;		line 632 in file "../../VLCBlib_PIC/mns.c"
 47615 ;; Parameters:    Size  Location     Type
 47616 ;;		None
 47617 ;; Auto vars:     Size  Location     Type
 47618 ;;		None
 47619 ;; Return value:  Size  Location     Type
 47620 ;;                  1    wreg      void 
 47621 ;; Registers used:
 47622 ;;		wreg, status,2, status,0
 47623 ;; Tracked objects:
 47624 ;;		On entry : 0/0
 47625 ;;		On exit  : 0/0
 47626 ;;		Unchanged: 0/0
 47627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47632 ;;Total ram usage:        0 bytes
 47633 ;; Hardware stack levels used: 1
 47634 ;; This function calls:
 47635 ;;		Nothing
 47636 ;; This function is called by:
 47637 ;;		i2_checkTxFifo
 47638 ;;		i2_checkCANTimeout
 47639 ;;		i2_canTxError
 47640 ;;		i2_canFillRxFifo
 47641 ;; This function uses a non-reentrant model
 47642 ;;
 47643                           
 47644                           	psect	text223
 47645   00C5F2                     __ptext223:
 47646                           	callstack 0
 47647   00C5F2                     i2_updateModuleErrorStatus:
 47648                           	callstack 3
 47649                           
 47650                           ;../../VLCBlib_PIC/mns.c: 633:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 47651                           
 47652                           ;incstack = 0
 47653   00C5F2  0101               	movlb	1	; () banked
 47654   00C5F4  298F               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 47655   00C5F6  B4D8               	btfsc	status,2,c
 47656   00C5F8  0012               	return	
 47657                           
 47658                           ; BSR set to: 1
 47659                           ;../../VLCBlib_PIC/mns.c: 634:         mnsDiagnostics[0x01].asBytes.lo++;
 47660   00C5FA  2B8F               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 47661                           
 47662                           ; BSR set to: 1
 47663   00C5FC  0012               	return		;funcret
 47664   00C5FE                     __end_ofi2_updateModuleErrorStatus:
 47665                           	callstack 0
 47666                           
 47667 ;; *************** function i2_getNextWriteMessage *****************
 47668 ;; Defined at:
 47669 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 47670 ;; Parameters:    Size  Location     Type
 47671 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 47672 ;;		 -> rxQueue(5), 
 47673 ;; Auto vars:     Size  Location     Type
 47674 ;;  wr              1   11[COMRAM] unsigned char 
 47675 ;; Return value:  Size  Location     Type
 47676 ;;                  2    0[COMRAM] PTR struct Message
 47677 ;; Registers used:
 47678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47679 ;; Tracked objects:
 47680 ;;		On entry : 0/0
 47681 ;;		On exit  : 0/0
 47682 ;;		Unchanged: 0/0
 47683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47686 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47687 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47688 ;;Total ram usage:       12 bytes
 47689 ;; Hardware stack levels used: 1
 47690 ;; This function calls:
 47691 ;;		Nothing
 47692 ;; This function is called by:
 47693 ;;		i2_checkTxFifo
 47694 ;;		i2_canFillRxFifo
 47695 ;; This function uses a non-reentrant model
 47696 ;;
 47697                           
 47698                           	psect	text224
 47699   008DF6                     __ptext224:
 47700                           	callstack 0
 47701   008DF6                     i2_getNextWriteMessage:
 47702                           	callstack 3
 47703                           
 47704                           ; BSR set to: 1
 47705                           ;incstack = 0
 47706   008DF6  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47707   008DF8  6ED9               	movwf	fsr2l,c
 47708   008DFA  6ADA               	clrf	fsr2h,c
 47709   008DFC  0E02               	movlw	2
 47710   008DFE  26D9               	addwf	fsr2l,f,c
 47711   008E00  50DF               	movf	indf2,w,c
 47712   008E02  6E03               	movwf	??i2_getNextWriteMessage^0,c
 47713   008E04  6A04               	clrf	(??i2_getNextWriteMessage+1)^0,c
 47714   008E06  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47715   008E08  6ED9               	movwf	fsr2l,c
 47716   008E0A  6ADA               	clrf	fsr2h,c
 47717   008E0C  0E04               	movlw	4
 47718   008E0E  26D9               	addwf	fsr2l,f,c
 47719   008E10  50DF               	movf	indf2,w,c
 47720   008E12  6E05               	movwf	(??i2_getNextWriteMessage+2)^0,c
 47721   008E14  0EFF               	movlw	255
 47722   008E16  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 47723   008E18  6E06               	movwf	(??i2_getNextWriteMessage+3)^0,c
 47724   008E1A  6A07               	clrf	(??i2_getNextWriteMessage+4)^0,c
 47725   008E1C  0EFF               	movlw	255
 47726   008E1E  2207               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 47727   008E20  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47728   008E22  6ED9               	movwf	fsr2l,c
 47729   008E24  6ADA               	clrf	fsr2h,c
 47730   008E26  0E03               	movlw	3
 47731   008E28  26D9               	addwf	fsr2l,f,c
 47732   008E2A  50DF               	movf	indf2,w,c
 47733   008E2C  6E08               	movwf	(??i2_getNextWriteMessage+5)^0,c
 47734   008E2E  6A09               	clrf	(??i2_getNextWriteMessage+6)^0,c
 47735   008E30  0E01               	movlw	1
 47736   008E32  2608               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 47737   008E34  0E00               	movlw	0
 47738   008E36  2209               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 47739   008E38  5006               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 47740   008E3A  1408               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 47741   008E3C  6E0A               	movwf	(??i2_getNextWriteMessage+7)^0,c
 47742   008E3E  5007               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 47743   008E40  1409               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 47744   008E42  6E0B               	movwf	(??i2_getNextWriteMessage+8)^0,c
 47745   008E44  5003               	movf	??i2_getNextWriteMessage^0,w,c
 47746   008E46  180A               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 47747   008E48  E109               	bnz	i2l12926
 47748   008E4A  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 47749   008E4C  180B               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 47750   008E4E  A4D8               	btfss	status,2,c
 47751   008E50  D005               	goto	i2l12926
 47752   008E52  0E00               	movlw	0
 47753   008E54  6E01               	movwf	?i2_getNextWriteMessage^0,c
 47754   008E56  0E00               	movlw	0
 47755   008E58  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 47756   008E5A  0012               	return	
 47757   008E5C                     i2l12926:
 47758   008E5C  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47759   008E5E  6ED9               	movwf	fsr2l,c
 47760   008E60  6ADA               	clrf	fsr2h,c
 47761   008E62  0E03               	movlw	3
 47762   008E64  26D9               	addwf	fsr2l,f,c
 47763   008E66  50DF               	movf	indf2,w,c
 47764   008E68  6E0C               	movwf	i2getNextWriteMessage@wr^0,c
 47765   008E6A  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47766   008E6C  6ED9               	movwf	fsr2l,c
 47767   008E6E  6ADA               	clrf	fsr2h,c
 47768   008E70  0E03               	movlw	3
 47769   008E72  26D9               	addwf	fsr2l,f,c
 47770   008E74  2ADF               	incf	indf2,f,c
 47771   008E76  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47772   008E78  6ED9               	movwf	fsr2l,c
 47773   008E7A  6ADA               	clrf	fsr2h,c
 47774   008E7C  0E04               	movlw	4
 47775   008E7E  26D9               	addwf	fsr2l,f,c
 47776   008E80  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47777   008E82  6EE1               	movwf	fsr1l,c
 47778   008E84  6AE2               	clrf	fsr1h,c
 47779   008E86  0E03               	movlw	3
 47780   008E88  26E1               	addwf	fsr1l,f,c
 47781   008E8A  50DE               	movf	postinc2,w,c
 47782   008E8C  5CE6               	subwf	postinc1,w,c
 47783   008E8E  A0D8               	btfss	status,0,c
 47784   008E90  D006               	goto	i2l12932
 47785   008E92  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47786   008E94  6ED9               	movwf	fsr2l,c
 47787   008E96  6ADA               	clrf	fsr2h,c
 47788   008E98  0E03               	movlw	3
 47789   008E9A  26D9               	addwf	fsr2l,f,c
 47790   008E9C  6ADF               	clrf	indf2,c
 47791   008E9E                     i2l12932:
 47792   008E9E  500C               	movf	i2getNextWriteMessage@wr^0,w,c
 47793   008EA0  0D09               	mullw	9
 47794   008EA2  CFF3 F003          	movff	prodl,??i2_getNextWriteMessage
 47795   008EA6  CFF4 F004          	movff	prodh,??i2_getNextWriteMessage+1
 47796   008EAA  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47797   008EAC  6ED9               	movwf	fsr2l,c
 47798   008EAE  6ADA               	clrf	fsr2h,c
 47799   008EB0  CFDE F005          	movff	postinc2,??i2_getNextWriteMessage+2
 47800   008EB4  CFDD F006          	movff	postdec2,??i2_getNextWriteMessage+3
 47801   008EB8  5003               	movf	??i2_getNextWriteMessage^0,w,c
 47802   008EBA  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 47803   008EBC  6E01               	movwf	?i2_getNextWriteMessage^0,c
 47804   008EBE  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 47805   008EC0  2006               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 47806   008EC2  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 47807   008EC4  0012               	return		;funcret
 47808   008EC6                     __end_ofi2_getNextWriteMessage:
 47809                           	callstack 0
 47810                           
 47811 ;; *************** function i2_getBufferPointer *****************
 47812 ;; Defined at:
 47813 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 47814 ;; Parameters:    Size  Location     Type
 47815 ;;  b               1    wreg     unsigned char 
 47816 ;; Auto vars:     Size  Location     Type
 47817 ;;  b               1    2[COMRAM] unsigned char 
 47818 ;; Return value:  Size  Location     Type
 47819 ;;                  2    0[COMRAM] PTR unsigned char 
 47820 ;; Registers used:
 47821 ;;		wreg, status,2, status,0
 47822 ;; Tracked objects:
 47823 ;;		On entry : 0/0
 47824 ;;		On exit  : 0/0
 47825 ;;		Unchanged: 0/0
 47826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47830 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47831 ;;Total ram usage:        3 bytes
 47832 ;; Hardware stack levels used: 1
 47833 ;; This function calls:
 47834 ;;		Nothing
 47835 ;; This function is called by:
 47836 ;;		i2_canFillRxFifo
 47837 ;; This function uses a non-reentrant model
 47838 ;;
 47839                           
 47840                           	psect	text225
 47841   00A2E4                     __ptext225:
 47842                           	callstack 0
 47843   00A2E4                     i2_getBufferPointer:
 47844                           	callstack 3
 47845                           
 47846                           ;incstack = 0
 47847                           ;i2getBufferPointer@b stored from wreg
 47848   00A2E4  6E03               	movwf	i2getBufferPointer@b^0,c
 47849                           
 47850                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 47851   00A2E6  D02D               	goto	i2l14048
 47852   00A2E8                     i2l14010:
 47853                           
 47854                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 47855   00A2E8  0E60               	movlw	96
 47856   00A2EA  6E01               	movwf	?i2_getBufferPointer^0,c
 47857   00A2EC  0E0F               	movlw	15
 47858   00A2EE  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47859   00A2F0  0012               	return	
 47860   00A2F2                     i2l14014:
 47861                           
 47862                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 47863   00A2F2  0E30               	movlw	48
 47864   00A2F4  6E01               	movwf	?i2_getBufferPointer^0,c
 47865   00A2F6  0E0F               	movlw	15
 47866   00A2F8  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47867   00A2FA  0012               	return	
 47868   00A2FC                     i2l14018:
 47869                           
 47870                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 47871   00A2FC  0E80               	movlw	128
 47872   00A2FE  6E01               	movwf	?i2_getBufferPointer^0,c
 47873   00A300  0E0E               	movlw	14
 47874   00A302  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47875   00A304  0012               	return	
 47876   00A306                     i2l14022:
 47877                           
 47878                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 47879   00A306  0E90               	movlw	144
 47880   00A308  6E01               	movwf	?i2_getBufferPointer^0,c
 47881   00A30A  0E0E               	movlw	14
 47882   00A30C  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47883   00A30E  0012               	return	
 47884   00A310                     i2l14026:
 47885                           
 47886                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 47887   00A310  0EA0               	movlw	160
 47888   00A312  6E01               	movwf	?i2_getBufferPointer^0,c
 47889   00A314  0E0E               	movlw	14
 47890   00A316  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47891   00A318  0012               	return	
 47892   00A31A                     i2l14030:
 47893                           
 47894                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 47895   00A31A  0EB0               	movlw	176
 47896   00A31C  6E01               	movwf	?i2_getBufferPointer^0,c
 47897   00A31E  0E0E               	movlw	14
 47898   00A320  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47899   00A322  0012               	return	
 47900   00A324                     i2l14034:
 47901                           
 47902                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 47903   00A324  0EC0               	movlw	192
 47904   00A326  6E01               	movwf	?i2_getBufferPointer^0,c
 47905   00A328  0E0E               	movlw	14
 47906   00A32A  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47907   00A32C  0012               	return	
 47908   00A32E                     i2l14038:
 47909                           
 47910                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 47911   00A32E  0ED0               	movlw	208
 47912   00A330  6E01               	movwf	?i2_getBufferPointer^0,c
 47913   00A332  0E0E               	movlw	14
 47914   00A334  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47915   00A336  0012               	return	
 47916   00A338                     i2l14042:
 47917                           
 47918                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 47919   00A338  0E00               	movlw	0
 47920   00A33A  6E01               	movwf	?i2_getBufferPointer^0,c
 47921   00A33C  0E00               	movlw	0
 47922   00A33E  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47923   00A340  0012               	return	
 47924   00A342                     i2l14048:
 47925   00A342  5003               	movf	i2getBufferPointer@b^0,w,c
 47926                           
 47927                           ; Switch size 1, requested type "simple"
 47928                           ; Number of cases is 8, Range of values is 0 to 7
 47929                           ; switch strategies available:
 47930                           ; Name         Instructions Cycles
 47931                           ; simple_byte           25    13 (average)
 47932                           ;	Chosen strategy is simple_byte
 47933   00A344  0A00               	xorlw	0	; case 0
 47934   00A346  B4D8               	btfsc	status,2,c
 47935   00A348  D7CF               	goto	i2l14010
 47936   00A34A  0A01               	xorlw	1	; case 1
 47937   00A34C  B4D8               	btfsc	status,2,c
 47938   00A34E  D7D1               	goto	i2l14014
 47939   00A350  0A03               	xorlw	3	; case 2
 47940   00A352  B4D8               	btfsc	status,2,c
 47941   00A354  D7D3               	goto	i2l14018
 47942   00A356  0A01               	xorlw	1	; case 3
 47943   00A358  B4D8               	btfsc	status,2,c
 47944   00A35A  D7D5               	goto	i2l14022
 47945   00A35C  0A07               	xorlw	7	; case 4
 47946   00A35E  B4D8               	btfsc	status,2,c
 47947   00A360  D7D7               	goto	i2l14026
 47948   00A362  0A01               	xorlw	1	; case 5
 47949   00A364  B4D8               	btfsc	status,2,c
 47950   00A366  D7D9               	goto	i2l14030
 47951   00A368  0A03               	xorlw	3	; case 6
 47952   00A36A  B4D8               	btfsc	status,2,c
 47953   00A36C  D7DB               	goto	i2l14034
 47954   00A36E  0A01               	xorlw	1	; case 7
 47955   00A370  B4D8               	btfsc	status,2,c
 47956   00A372  D7DD               	goto	i2l14038
 47957   00A374  D7E1               	goto	i2l14042
 47958   00A376                     __end_ofi2_getBufferPointer:
 47959                           	callstack 0
 47960                           
 47961 ;; *************** function _APP_highIsr *****************
 47962 ;; Defined at:
 47963 ;;		line 711 in file "../main.c"
 47964 ;; Parameters:    Size  Location     Type
 47965 ;;		None
 47966 ;; Auto vars:     Size  Location     Type
 47967 ;;		None
 47968 ;; Return value:  Size  Location     Type
 47969 ;;                  1    wreg      void 
 47970 ;; Registers used:
 47971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47972 ;; Tracked objects:
 47973 ;;		On entry : 0/0
 47974 ;;		On exit  : 0/0
 47975 ;;		Unchanged: 0/0
 47976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47981 ;;Total ram usage:        0 bytes
 47982 ;; Hardware stack levels used: 1
 47983 ;; Hardware stack levels required when called: 2
 47984 ;; This function calls:
 47985 ;;		_timer1DoneInterruptHandler
 47986 ;;		_timer3DoneInterruptHandler
 47987 ;; This function is called by:
 47988 ;;		_highIsr
 47989 ;; This function uses a non-reentrant model
 47990 ;;
 47991                           
 47992                           	psect	text226
 47993   00C55C                     __ptext226:
 47994                           	callstack 0
 47995   00C55C                     _APP_highIsr:
 47996                           	callstack 3
 47997                           
 47998                           ;../main.c: 714:     if (PIR1bits.TMR1IF) {
 47999                           
 48000                           ;incstack = 0
 48001   00C55C  A09E               	btfss	158,0,c	;volatile
 48002   00C55E  D003               	goto	i2l15946
 48003                           
 48004                           ;../main.c: 715:         timer1DoneInterruptHandler();
 48005   00C560  EC34  F062         	call	_timer1DoneInterruptHandler	;wreg free
 48006                           
 48007                           ;../main.c: 716:         PIR1bits.TMR1IF = 0;
 48008   00C564  909E               	bcf	158,0,c	;volatile
 48009   00C566                     i2l15946:
 48010                           
 48011                           ;../main.c: 718:     if (PIR2bits.TMR3IF) {
 48012   00C566  A2A1               	btfss	161,1,c	;volatile
 48013   00C568  0012               	return	
 48014                           
 48015                           ;../main.c: 719:         timer3DoneInterruptHandler();
 48016   00C56A  ECE3  F061         	call	_timer3DoneInterruptHandler	;wreg free
 48017                           
 48018                           ;../main.c: 720:         PIR2bits.TMR3IF = 0;
 48019   00C56E  92A1               	bcf	161,1,c	;volatile
 48020   00C570  0012               	return		;funcret
 48021   00C572                     __end_of_APP_highIsr:
 48022                           	callstack 0
 48023                           
 48024 ;; *************** function _timer3DoneInterruptHandler *****************
 48025 ;; Defined at:
 48026 ;;		line 240 in file "../servo.c"
 48027 ;; Parameters:    Size  Location     Type
 48028 ;;		None
 48029 ;; Auto vars:     Size  Location     Type
 48030 ;;		None
 48031 ;; Return value:  Size  Location     Type
 48032 ;;                  1    wreg      void 
 48033 ;; Registers used:
 48034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48035 ;; Tracked objects:
 48036 ;;		On entry : 0/0
 48037 ;;		On exit  : 0/0
 48038 ;;		Unchanged: 0/0
 48039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48044 ;;Total ram usage:        0 bytes
 48045 ;; Hardware stack levels used: 1
 48046 ;; Hardware stack levels required when called: 1
 48047 ;; This function calls:
 48048 ;;		i2_getNV
 48049 ;;		i2_setOutputPin
 48050 ;; This function is called by:
 48051 ;;		_APP_highIsr
 48052 ;; This function uses a non-reentrant model
 48053 ;;
 48054                           
 48055                           	psect	text227
 48056   00C3C6                     __ptext227:
 48057                           	callstack 0
 48058   00C3C6                     _timer3DoneInterruptHandler:
 48059                           	callstack 3
 48060                           
 48061                           ;../servo.c: 241:     T3CONbits.TMR3ON = 0;
 48062                           
 48063                           ;incstack = 0
 48064   00C3C6  90B1               	bcf	177,0,c	;volatile
 48065                           
 48066                           ;../servo.c: 242:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 48067   00C3C8  0100               	movlb	0	; () banked
 48068   00C3CA  51C9               	movf	_servoInBlock& (0+255),w,b
 48069   00C3CC  0D07               	mullw	7
 48070   00C3CE  50F3               	movf	243,w,c
 48071   00C3D0  0F49               	addlw	73
 48072   00C3D2  ECC9  F05E         	call	i2_getNV
 48073   00C3D6  5001               	movf	?i2_getNV^0,w,c
 48074   00C3D8  0B20               	andlw	32
 48075   00C3DA  6E05               	movwf	i2setOutputPin@state^0,c
 48076   00C3DC  0100               	movlb	0	; () banked
 48077   00C3DE  51C9               	movf	_servoInBlock& (0+255),w,b
 48078   00C3E0  0F08               	addlw	8
 48079   00C3E2  EC67  F038         	call	i2_setOutputPin
 48080   00C3E6  0012               	return		;funcret
 48081   00C3E8                     __end_of_timer3DoneInterruptHandler:
 48082                           	callstack 0
 48083                           
 48084 ;; *************** function _timer1DoneInterruptHandler *****************
 48085 ;; Defined at:
 48086 ;;		line 235 in file "../servo.c"
 48087 ;; Parameters:    Size  Location     Type
 48088 ;;		None
 48089 ;; Auto vars:     Size  Location     Type
 48090 ;;		None
 48091 ;; Return value:  Size  Location     Type
 48092 ;;                  1    wreg      void 
 48093 ;; Registers used:
 48094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48095 ;; Tracked objects:
 48096 ;;		On entry : 0/0
 48097 ;;		On exit  : 0/0
 48098 ;;		Unchanged: 0/0
 48099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48104 ;;Total ram usage:        0 bytes
 48105 ;; Hardware stack levels used: 1
 48106 ;; Hardware stack levels required when called: 1
 48107 ;; This function calls:
 48108 ;;		i2_getNV
 48109 ;;		i2_setOutputPin
 48110 ;; This function is called by:
 48111 ;;		_APP_highIsr
 48112 ;; This function uses a non-reentrant model
 48113 ;;
 48114                           
 48115                           	psect	text228
 48116   00C468                     __ptext228:
 48117                           	callstack 0
 48118   00C468                     _timer1DoneInterruptHandler:
 48119                           	callstack 3
 48120                           
 48121                           ;../servo.c: 236:     T1CONbits.TMR1ON = 0;
 48122                           
 48123                           ;incstack = 0
 48124   00C468  90CD               	bcf	205,0,c	;volatile
 48125                           
 48126                           ;../servo.c: 237:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 48127   00C46A  0100               	movlb	0	; () banked
 48128   00C46C  51C9               	movf	_servoInBlock& (0+255),w,b
 48129   00C46E  0D07               	mullw	7
 48130   00C470  50F3               	movf	243,w,c
 48131   00C472  0F11               	addlw	17
 48132   00C474  ECC9  F05E         	call	i2_getNV
 48133   00C478  5001               	movf	?i2_getNV^0,w,c
 48134   00C47A  0B20               	andlw	32
 48135   00C47C  6E05               	movwf	i2setOutputPin@state^0,c
 48136   00C47E  0100               	movlb	0	; () banked
 48137   00C480  51C9               	movf	_servoInBlock& (0+255),w,b
 48138   00C482  EC67  F038         	call	i2_setOutputPin
 48139   00C486  0012               	return		;funcret
 48140   00C488                     __end_of_timer1DoneInterruptHandler:
 48141                           	callstack 0
 48142                           
 48143 ;; *************** function i2_setOutputPin *****************
 48144 ;; Defined at:
 48145 ;;		line 256 in file "../digitalOut.c"
 48146 ;; Parameters:    Size  Location     Type
 48147 ;;  io              1    wreg     unsigned char 
 48148 ;;  state           1    4[COMRAM] enum E12766
 48149 ;; Auto vars:     Size  Location     Type
 48150 ;;  io              1    7[COMRAM] unsigned char 
 48151 ;; Return value:  Size  Location     Type
 48152 ;;                  1    wreg      void 
 48153 ;; Registers used:
 48154 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 48155 ;; Tracked objects:
 48156 ;;		On entry : 0/0
 48157 ;;		On exit  : 0/0
 48158 ;;		Unchanged: 0/0
 48159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48160 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48163 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48164 ;;Total ram usage:        4 bytes
 48165 ;; Hardware stack levels used: 1
 48166 ;; This function calls:
 48167 ;;		Nothing
 48168 ;; This function is called by:
 48169 ;;		_timer1DoneInterruptHandler
 48170 ;;		_timer3DoneInterruptHandler
 48171 ;; This function uses a non-reentrant model
 48172 ;;
 48173                           
 48174                           	psect	text229
 48175   0070CE                     __ptext229:
 48176                           	callstack 0
 48177   0070CE                     i2_setOutputPin:
 48178                           	callstack 3
 48179                           
 48180                           ;incstack = 0
 48181                           ;i2setOutputPin@io stored from wreg
 48182   0070CE  6E08               	movwf	i2setOutputPin@io^0,c
 48183                           
 48184                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 48185   0070D0  D0BA               	goto	i2l13948
 48186   0070D2                     i2l13928:
 48187                           
 48188                           ;../digitalOut.c: 259:             if (state) {
 48189   0070D2  5005               	movf	i2setOutputPin@state^0,w,c
 48190   0070D4  B4D8               	btfsc	status,2,c
 48191   0070D6  D01D               	goto	i2l13932
 48192                           
 48193                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 48194   0070D8  5008               	movf	i2setOutputPin@io^0,w,c
 48195   0070DA  0D04               	mullw	4
 48196   0070DC  0E02               	movlw	2
 48197   0070DE  26F3               	addwf	243,f,c
 48198   0070E0  0E00               	movlw	0
 48199   0070E2  22F4               	addwfc	244,f,c
 48200   0070E4  0E29               	movlw	low _configs
 48201   0070E6  24F3               	addwf	243,w,c
 48202   0070E8  6EF6               	movwf	tblptrl,c
 48203   0070EA  0EEE               	movlw	high _configs
 48204   0070EC  20F4               	addwfc	244,w,c
 48205   0070EE  6EF7               	movwf	tblptrh,c
 48206   0070F0                     	if	1	;There are 3 active tblptr bytes
 48207   0070F0  6AF8               	clrf	tblptru,c
 48208   0070F2  0E00               	movlw	low (__mediumconst shr (0+16))
 48209   0070F4  22F8               	addwfc	tblptru,f,c
 48210   0070F6                     	endif
 48211   0070F6  0008               	tblrd		*
 48212   0070F8  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48213   0070FC  0E01               	movlw	1
 48214   0070FE  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48215   007100  2A06               	incf	??i2_setOutputPin^0,f,c
 48216   007102  D002               	goto	i2u1282_44
 48217   007104                     i2u1282_45:
 48218   007104  90D8               	bcf	status,0,c
 48219   007106  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48220   007108                     i2u1282_44:
 48221   007108  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48222   00710A  D7FC               	goto	i2u1282_45
 48223   00710C  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48224   00710E  1289               	iorwf	137,f,c	;volatile
 48225                           
 48226                           ;../digitalOut.c: 262:             } else {
 48227   007110  0012               	return	
 48228   007112                     i2l13932:
 48229                           
 48230                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 48231   007112  5008               	movf	i2setOutputPin@io^0,w,c
 48232   007114  0D04               	mullw	4
 48233   007116  0E02               	movlw	2
 48234   007118  26F3               	addwf	243,f,c
 48235   00711A  0E00               	movlw	0
 48236   00711C  22F4               	addwfc	244,f,c
 48237   00711E  0E29               	movlw	low _configs
 48238   007120  24F3               	addwf	243,w,c
 48239   007122  6EF6               	movwf	tblptrl,c
 48240   007124  0EEE               	movlw	high _configs
 48241   007126  20F4               	addwfc	244,w,c
 48242   007128  6EF7               	movwf	tblptrh,c
 48243   00712A                     	if	1	;There are 3 active tblptr bytes
 48244   00712A  6AF8               	clrf	tblptru,c
 48245   00712C  0E00               	movlw	low (__mediumconst shr (0+16))
 48246   00712E  22F8               	addwfc	tblptru,f,c
 48247   007130                     	endif
 48248   007130  0008               	tblrd		*
 48249   007132  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48250   007136  0E01               	movlw	1
 48251   007138  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48252   00713A  2A06               	incf	??i2_setOutputPin^0,f,c
 48253   00713C  D002               	goto	i2u1283_44
 48254   00713E                     i2u1283_45:
 48255   00713E  90D8               	bcf	status,0,c
 48256   007140  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48257   007142                     i2u1283_44:
 48258   007142  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48259   007144  D7FC               	goto	i2u1283_45
 48260   007146  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48261   007148  0AFF               	xorlw	255
 48262   00714A  1689               	andwf	137,f,c	;volatile
 48263   00714C  0012               	return	
 48264   00714E                     i2l13934:
 48265                           
 48266                           ;../digitalOut.c: 268:             if (state) {
 48267   00714E  5005               	movf	i2setOutputPin@state^0,w,c
 48268   007150  B4D8               	btfsc	status,2,c
 48269   007152  D01D               	goto	i2l13938
 48270                           
 48271                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 48272   007154  5008               	movf	i2setOutputPin@io^0,w,c
 48273   007156  0D04               	mullw	4
 48274   007158  0E02               	movlw	2
 48275   00715A  26F3               	addwf	243,f,c
 48276   00715C  0E00               	movlw	0
 48277   00715E  22F4               	addwfc	244,f,c
 48278   007160  0E29               	movlw	low _configs
 48279   007162  24F3               	addwf	243,w,c
 48280   007164  6EF6               	movwf	tblptrl,c
 48281   007166  0EEE               	movlw	high _configs
 48282   007168  20F4               	addwfc	244,w,c
 48283   00716A  6EF7               	movwf	tblptrh,c
 48284   00716C                     	if	1	;There are 3 active tblptr bytes
 48285   00716C  6AF8               	clrf	tblptru,c
 48286   00716E  0E00               	movlw	low (__mediumconst shr (0+16))
 48287   007170  22F8               	addwfc	tblptru,f,c
 48288   007172                     	endif
 48289   007172  0008               	tblrd		*
 48290   007174  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48291   007178  0E01               	movlw	1
 48292   00717A  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48293   00717C  2A06               	incf	??i2_setOutputPin^0,f,c
 48294   00717E  D002               	goto	i2u1285_44
 48295   007180                     i2u1285_45:
 48296   007180  90D8               	bcf	status,0,c
 48297   007182  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48298   007184                     i2u1285_44:
 48299   007184  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48300   007186  D7FC               	goto	i2u1285_45
 48301   007188  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48302   00718A  128A               	iorwf	138,f,c	;volatile
 48303                           
 48304                           ;../digitalOut.c: 271:             } else {
 48305   00718C  0012               	return	
 48306   00718E                     i2l13938:
 48307                           
 48308                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 48309   00718E  5008               	movf	i2setOutputPin@io^0,w,c
 48310   007190  0D04               	mullw	4
 48311   007192  0E02               	movlw	2
 48312   007194  26F3               	addwf	243,f,c
 48313   007196  0E00               	movlw	0
 48314   007198  22F4               	addwfc	244,f,c
 48315   00719A  0E29               	movlw	low _configs
 48316   00719C  24F3               	addwf	243,w,c
 48317   00719E  6EF6               	movwf	tblptrl,c
 48318   0071A0  0EEE               	movlw	high _configs
 48319   0071A2  20F4               	addwfc	244,w,c
 48320   0071A4  6EF7               	movwf	tblptrh,c
 48321   0071A6                     	if	1	;There are 3 active tblptr bytes
 48322   0071A6  6AF8               	clrf	tblptru,c
 48323   0071A8  0E00               	movlw	low (__mediumconst shr (0+16))
 48324   0071AA  22F8               	addwfc	tblptru,f,c
 48325   0071AC                     	endif
 48326   0071AC  0008               	tblrd		*
 48327   0071AE  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48328   0071B2  0E01               	movlw	1
 48329   0071B4  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48330   0071B6  2A06               	incf	??i2_setOutputPin^0,f,c
 48331   0071B8  D002               	goto	i2u1286_44
 48332   0071BA                     i2u1286_45:
 48333   0071BA  90D8               	bcf	status,0,c
 48334   0071BC  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48335   0071BE                     i2u1286_44:
 48336   0071BE  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48337   0071C0  D7FC               	goto	i2u1286_45
 48338   0071C2  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48339   0071C4  0AFF               	xorlw	255
 48340   0071C6  168A               	andwf	138,f,c	;volatile
 48341   0071C8  0012               	return	
 48342   0071CA                     i2l13940:
 48343                           
 48344                           ;../digitalOut.c: 277:             if (state) {
 48345   0071CA  5005               	movf	i2setOutputPin@state^0,w,c
 48346   0071CC  B4D8               	btfsc	status,2,c
 48347   0071CE  D01D               	goto	i2l13944
 48348                           
 48349                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 48350   0071D0  5008               	movf	i2setOutputPin@io^0,w,c
 48351   0071D2  0D04               	mullw	4
 48352   0071D4  0E02               	movlw	2
 48353   0071D6  26F3               	addwf	243,f,c
 48354   0071D8  0E00               	movlw	0
 48355   0071DA  22F4               	addwfc	244,f,c
 48356   0071DC  0E29               	movlw	low _configs
 48357   0071DE  24F3               	addwf	243,w,c
 48358   0071E0  6EF6               	movwf	tblptrl,c
 48359   0071E2  0EEE               	movlw	high _configs
 48360   0071E4  20F4               	addwfc	244,w,c
 48361   0071E6  6EF7               	movwf	tblptrh,c
 48362   0071E8                     	if	1	;There are 3 active tblptr bytes
 48363   0071E8  6AF8               	clrf	tblptru,c
 48364   0071EA  0E00               	movlw	low (__mediumconst shr (0+16))
 48365   0071EC  22F8               	addwfc	tblptru,f,c
 48366   0071EE                     	endif
 48367   0071EE  0008               	tblrd		*
 48368   0071F0  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48369   0071F4  0E01               	movlw	1
 48370   0071F6  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48371   0071F8  2A06               	incf	??i2_setOutputPin^0,f,c
 48372   0071FA  D002               	goto	i2u1288_44
 48373   0071FC                     i2u1288_45:
 48374   0071FC  90D8               	bcf	status,0,c
 48375   0071FE  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48376   007200                     i2u1288_44:
 48377   007200  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48378   007202  D7FC               	goto	i2u1288_45
 48379   007204  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48380   007206  128B               	iorwf	139,f,c	;volatile
 48381                           
 48382                           ;../digitalOut.c: 280:             } else {
 48383   007208  0012               	return	
 48384   00720A                     i2l13944:
 48385                           
 48386                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 48387   00720A  5008               	movf	i2setOutputPin@io^0,w,c
 48388   00720C  0D04               	mullw	4
 48389   00720E  0E02               	movlw	2
 48390   007210  26F3               	addwf	243,f,c
 48391   007212  0E00               	movlw	0
 48392   007214  22F4               	addwfc	244,f,c
 48393   007216  0E29               	movlw	low _configs
 48394   007218  24F3               	addwf	243,w,c
 48395   00721A  6EF6               	movwf	tblptrl,c
 48396   00721C  0EEE               	movlw	high _configs
 48397   00721E  20F4               	addwfc	244,w,c
 48398   007220  6EF7               	movwf	tblptrh,c
 48399   007222                     	if	1	;There are 3 active tblptr bytes
 48400   007222  6AF8               	clrf	tblptru,c
 48401   007224  0E00               	movlw	low (__mediumconst shr (0+16))
 48402   007226  22F8               	addwfc	tblptru,f,c
 48403   007228                     	endif
 48404   007228  0008               	tblrd		*
 48405   00722A  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48406   00722E  0E01               	movlw	1
 48407   007230  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48408   007232  2A06               	incf	??i2_setOutputPin^0,f,c
 48409   007234  D002               	goto	i2u1289_44
 48410   007236                     i2u1289_45:
 48411   007236  90D8               	bcf	status,0,c
 48412   007238  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48413   00723A                     i2u1289_44:
 48414   00723A  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48415   00723C  D7FC               	goto	i2u1289_45
 48416   00723E  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48417   007240  0AFF               	xorlw	255
 48418   007242  168B               	andwf	139,f,c	;volatile
 48419   007244  0012               	return	
 48420   007246                     i2l13948:
 48421   007246  5008               	movf	i2setOutputPin@io^0,w,c
 48422   007248  0D04               	mullw	4
 48423   00724A  0E01               	movlw	1
 48424   00724C  26F3               	addwf	243,f,c
 48425   00724E  0E00               	movlw	0
 48426   007250  22F4               	addwfc	244,f,c
 48427   007252  0E29               	movlw	low _configs
 48428   007254  24F3               	addwf	243,w,c
 48429   007256  6EF6               	movwf	tblptrl,c
 48430   007258  0EEE               	movlw	high _configs
 48431   00725A  20F4               	addwfc	244,w,c
 48432   00725C  6EF7               	movwf	tblptrh,c
 48433   00725E                     	if	1	;There are 3 active tblptr bytes
 48434   00725E  6AF8               	clrf	tblptru,c
 48435   007260  0E00               	movlw	low (__mediumconst shr (0+16))
 48436   007262  22F8               	addwfc	tblptru,f,c
 48437   007264                     	endif
 48438   007264  0008               	tblrd		*
 48439   007266  50F5               	movf	tablat,w,c
 48440                           
 48441                           ; Switch size 1, requested type "simple"
 48442                           ; Number of cases is 3, Range of values is 65 to 67
 48443                           ; switch strategies available:
 48444                           ; Name         Instructions Cycles
 48445                           ; simple_byte           10     6 (average)
 48446                           ;	Chosen strategy is simple_byte
 48447   007268  0A41               	xorlw	65	; case 65
 48448   00726A  B4D8               	btfsc	status,2,c
 48449   00726C  D732               	goto	i2l13928
 48450   00726E  0A03               	xorlw	3	; case 66
 48451   007270  B4D8               	btfsc	status,2,c
 48452   007272  D76D               	goto	i2l13934
 48453   007274  0A01               	xorlw	1	; case 67
 48454   007276  A4D8               	btfss	status,2,c
 48455   007278  0012               	return	
 48456   00727A  D7A7               	goto	i2l13940
 48457   00727C                     __end_ofi2_setOutputPin:
 48458                           	callstack 0
 48459                           
 48460 ;; *************** function i2_getNV *****************
 48461 ;; Defined at:
 48462 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 48463 ;; Parameters:    Size  Location     Type
 48464 ;;  index           1    wreg     unsigned char 
 48465 ;; Auto vars:     Size  Location     Type
 48466 ;;  index           1    3[COMRAM] unsigned char 
 48467 ;; Return value:  Size  Location     Type
 48468 ;;                  2    0[COMRAM] short 
 48469 ;; Registers used:
 48470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48471 ;; Tracked objects:
 48472 ;;		On entry : 0/0
 48473 ;;		On exit  : 0/0
 48474 ;;		Unchanged: 0/0
 48475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48479 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48480 ;;Total ram usage:        4 bytes
 48481 ;; Hardware stack levels used: 1
 48482 ;; This function calls:
 48483 ;;		Nothing
 48484 ;; This function is called by:
 48485 ;;		_timer1DoneInterruptHandler
 48486 ;;		_timer3DoneInterruptHandler
 48487 ;; This function uses a non-reentrant model
 48488 ;;
 48489                           
 48490                           	psect	text230
 48491   00BD92                     __ptext230:
 48492                           	callstack 0
 48493   00BD92                     i2_getNV:
 48494                           	callstack 3
 48495                           
 48496                           ;incstack = 0
 48497                           ;i2getNV@index stored from wreg
 48498   00BD92  6E04               	movwf	i2getNV@index^0,c
 48499                           
 48500                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 48501   00BD94  5004               	movf	i2getNV@index^0,w,c
 48502   00BD96  A4D8               	btfss	status,2,c
 48503   00BD98  D005               	goto	i2l13956
 48504   00BD9A  0E00               	movlw	0
 48505   00BD9C  6E02               	movwf	(?i2_getNV+1)^0,c
 48506   00BD9E  0E7F               	movlw	127
 48507   00BDA0  6E01               	movwf	?i2_getNV^0,c
 48508   00BDA2  0012               	return	
 48509   00BDA4                     i2l13956:
 48510                           
 48511                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 48512   00BDA4  0E7F               	movlw	127
 48513   00BDA6  6404               	cpfsgt	i2getNV@index^0,c
 48514   00BDA8  D005               	goto	i2l13962
 48515   00BDAA  0EFF               	movlw	255
 48516   00BDAC  6E02               	movwf	(?i2_getNV+1)^0,c
 48517   00BDAE  0EF6               	movlw	246
 48518   00BDB0  6E01               	movwf	?i2_getNV^0,c
 48519   00BDB2  0012               	return	
 48520   00BDB4                     i2l13962:
 48521                           
 48522                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 48523   00BDB4  0E00               	movlw	low _nvCache
 48524   00BDB6  2404               	addwf	i2getNV@index^0,w,c
 48525   00BDB8  6ED9               	movwf	fsr2l,c
 48526   00BDBA  6ADA               	clrf	fsr2h,c
 48527   00BDBC  0E04               	movlw	high _nvCache
 48528   00BDBE  22DA               	addwfc	fsr2h,f,c
 48529   00BDC0  50DF               	movf	indf2,w,c
 48530   00BDC2  6E03               	movwf	??i2_getNV^0,c
 48531   00BDC4  5003               	movf	??i2_getNV^0,w,c
 48532   00BDC6  6E01               	movwf	?i2_getNV^0,c
 48533   00BDC8  6A02               	clrf	(?i2_getNV+1)^0,c
 48534   00BDCA  0012               	return		;funcret
 48535   00BDCC                     __end_ofi2_getNV:
 48536                           	callstack 0
 48537                           
 48538                           	psect	rparam
 48539   000000                     
 48540                           	psect	temp
 48541   000054                     btemp:
 48542                           	callstack 0
 48543   000054                     	ds	1
 48544   000000                     int$flags	set	btemp
 48545   000000                     wtemp8	set	btemp+1
 48546   000000                     ttemp5	set	btemp+1
 48547   000000                     ttemp6	set	btemp+4
 48548   000000                     ttemp7	set	btemp+8
 48549                           
 48550                           	psect	config
 48551                           
 48552                           ;Config register CONFIG1L @ 0x300000
 48553                           ;	VREG Sleep Enable bit
 48554                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 48555                           ;	LF-INTOSC Low-power Enable bit
 48556                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 48557                           ;	SOSC Power Selection and mode Configuration bits
 48558                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 48559                           ;	Extended Instruction Set
 48560                           ;	XINST = OFF, Disabled
 48561   300000                     	org	3145728
 48562   300000  15                 	db	21
 48563                           
 48564                           ;Config register CONFIG1H @ 0x300001
 48565                           ;	Oscillator
 48566                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 48567                           ;	PLL x4 Enable bit
 48568                           ;	PLLCFG = OFF, Disabled
 48569                           ;	Fail-Safe Clock Monitor
 48570                           ;	FCMEN = OFF, Disabled
 48571                           ;	Internal External Oscillator Switch Over Mode
 48572                           ;	IESO = OFF, Disabled
 48573   300001                     	org	3145729
 48574   300001  03                 	db	3
 48575                           
 48576                           ;Config register CONFIG2L @ 0x300002
 48577                           ;	Power Up Timer
 48578                           ;	PWRTEN = ON, Enabled
 48579                           ;	Brown Out Detect
 48580                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 48581                           ;	Brown-out Reset Voltage bits
 48582                           ;	BORV = 0, 3.0V
 48583                           ;	BORMV Power level
 48584                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 48585   300002                     	org	3145730
 48586   300002  66                 	db	102
 48587                           
 48588                           ;Config register CONFIG2H @ 0x300003
 48589                           ;	Watchdog Timer
 48590                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 48591                           ;	Watchdog Postscaler
 48592                           ;	WDTPS = 1048576, 1:1048576
 48593   300003                     	org	3145731
 48594   300003  50                 	db	80
 48595                           
 48596                           ; Padding undefined space
 48597   300004                     	org	3145732
 48598   300004  FF                 	db	255
 48599                           
 48600                           ;Config register CONFIG3H @ 0x300005
 48601                           ;	ECAN Mux bit
 48602                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 48603                           ;	MSSP address masking
 48604                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 48605                           ;	Master Clear Enable
 48606                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 48607   300005                     	org	3145733
 48608   300005  89                 	db	137
 48609                           
 48610                           ;Config register CONFIG4L @ 0x300006
 48611                           ;	Stack Overflow Reset
 48612                           ;	STVREN = ON, Enabled
 48613                           ;	Boot Block Size
 48614                           ;	BBSIZ = BB1K, 1K word Boot Block size
 48615                           ;	Background Debugger
 48616                           ;	DEBUG = 0x1, unprogrammed default
 48617   300006                     	org	3145734
 48618   300006  81                 	db	129
 48619                           
 48620                           ; Padding undefined space
 48621   300007                     	org	3145735
 48622   300007  FF                 	db	255
 48623                           
 48624                           ;Config register CONFIG5L @ 0x300008
 48625                           ;	Code Protect 00800-03FFF
 48626                           ;	CP0 = OFF, Disabled
 48627                           ;	Code Protect 04000-07FFF
 48628                           ;	CP1 = OFF, Disabled
 48629                           ;	Code Protect 08000-0BFFF
 48630                           ;	CP2 = OFF, Disabled
 48631                           ;	Code Protect 0C000-0FFFF
 48632                           ;	CP3 = OFF, Disabled
 48633   300008                     	org	3145736
 48634   300008  0F                 	db	15
 48635                           
 48636                           ;Config register CONFIG5H @ 0x300009
 48637                           ;	Code Protect Boot
 48638                           ;	CPB = OFF, Disabled
 48639                           ;	Data EE Read Protect
 48640                           ;	CPD = OFF, Disabled
 48641   300009                     	org	3145737
 48642   300009  C0                 	db	192
 48643                           
 48644                           ;Config register CONFIG6L @ 0x30000A
 48645                           ;	Table Write Protect 00800-03FFF
 48646                           ;	WRT0 = OFF, Disabled
 48647                           ;	Table Write Protect 04000-07FFF
 48648                           ;	WRT1 = OFF, Disabled
 48649                           ;	Table Write Protect 08000-0BFFF
 48650                           ;	WRT2 = OFF, Disabled
 48651                           ;	Table Write Protect 0C000-0FFFF
 48652                           ;	WRT3 = OFF, Disabled
 48653   30000A                     	org	3145738
 48654   30000A  0F                 	db	15
 48655                           
 48656                           ;Config register CONFIG6H @ 0x30000B
 48657                           ;	Config. Write Protect
 48658                           ;	WRTC = OFF, Disabled
 48659                           ;	Table Write Protect Boot
 48660                           ;	WRTB = OFF, Disabled
 48661                           ;	Data EE Write Protect
 48662                           ;	WRTD = OFF, Disabled
 48663   30000B                     	org	3145739
 48664   30000B  E0                 	db	224
 48665                           
 48666                           ;Config register CONFIG7L @ 0x30000C
 48667                           ;	Table Read Protect 00800-03FFF
 48668                           ;	EBTR0 = OFF, Disabled
 48669                           ;	Table Read Protect 04000-07FFF
 48670                           ;	EBTR1 = OFF, Disabled
 48671                           ;	Table Read Protect 08000-0BFFF
 48672                           ;	EBTR2 = OFF, Disabled
 48673                           ;	Table Read Protect 0C000-0FFFF
 48674                           ;	EBTR3 = OFF, Disabled
 48675   30000C                     	org	3145740
 48676   30000C  0F                 	db	15
 48677                           
 48678                           ;Config register CONFIG7H @ 0x30000D
 48679                           ;	Table Read Protect Boot
 48680                           ;	EBTRB = OFF, Disabled
 48681   30000D                     	org	3145741
 48682   30000D  40                 	db	64
 48683                           tosu	equ	0xFFF
 48684                           tosh	equ	0xFFE
 48685                           tosl	equ	0xFFD
 48686                           stkptr	equ	0xFFC
 48687                           pclatu	equ	0xFFB
 48688                           pclath	equ	0xFFA
 48689                           pcl	equ	0xFF9
 48690                           tblptru	equ	0xFF8
 48691                           tblptrh	equ	0xFF7
 48692                           tblptrl	equ	0xFF6
 48693                           tablat	equ	0xFF5
 48694                           prodh	equ	0xFF4
 48695                           prodl	equ	0xFF3
 48696                           indf0	equ	0xFEF
 48697                           postinc0	equ	0xFEE
 48698                           postdec0	equ	0xFED
 48699                           preinc0	equ	0xFEC
 48700                           plusw0	equ	0xFEB
 48701                           fsr0h	equ	0xFEA
 48702                           fsr0l	equ	0xFE9
 48703                           wreg	equ	0xFE8
 48704                           indf1	equ	0xFE7
 48705                           postinc1	equ	0xFE6
 48706                           postdec1	equ	0xFE5
 48707                           preinc1	equ	0xFE4
 48708                           plusw1	equ	0xFE3
 48709                           fsr1h	equ	0xFE2
 48710                           fsr1l	equ	0xFE1
 48711                           bsr	equ	0xFE0
 48712                           indf2	equ	0xFDF
 48713                           postinc2	equ	0xFDE
 48714                           postdec2	equ	0xFDD
 48715                           preinc2	equ	0xFDC
 48716                           plusw2	equ	0xFDB
 48717                           fsr2h	equ	0xFDA
 48718                           fsr2l	equ	0xFD9
 48719                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    597
    Data        0
    BSS         1863
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      83
    BANK0           160     73     115
    BANK1           256     69     255
    BANK2           256     45     249
    BANK3           256      0     200
    BANK4           256      0     192
    BANK5           256      0      72
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8099	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    getNumRxBuffersInUse@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    poll$8100	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8101	const PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8101$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    pop@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    quantity@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    S5130MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12928 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12928 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _setup->_initServos
    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _bootPowerUp->_readNVM
    _teachProcessMessage->_sendMessage3
    _teachProcessMessage->_teachCheckLen
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNnclr->_sendMessage2
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage2
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage2
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _APP_GetEventState->___awdiv
    _numEv->_validStart
    _nvProcessMessage->_sendMessage2
    _nvProcessMessage->_sendMessage3
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awdiv
    _mnsProcessMessage->_sendMessage2
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_writeNVM
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _mnsPoll->_sendMessage2
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _getNumRxBuffersInUse->_quantity
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _isConsumedEvent->_getEv
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_sendProducedEvent
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_sendProducedEvent
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _processOutputs->_sendProducedEvent
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _sendInvertedProducedEvent->_sendProducedEvent
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _doSOD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _inputScan->_sendProducedEvent
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_push
    _getNumTxBuffersInUse->_quantity
    _readInput->_getNV
    _checkPowerOnPb->_pbDownTimer
    _checkPowerOnPb->_pbUpTimer
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _poll->_mnsProcessMessage
    _poll->_nvProcessMessage
    _poll->_producerProcessMessage
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_sendInvertedProducedEvent
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 4211750
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   32705
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0   10025
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4743
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4738
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   44346
                                             10 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                        _bootPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   24492
                                              9 BANK1      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4592
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    5006
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4780
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0    4663
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2702213
                                             30 BANK2     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  897486
                                             63 BANK1      2     0      2
                                              0 BANK2      6     6      0
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   62481
                                             72 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   20252
                                              9 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   68271
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   90839
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   20190
                                              9 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   75628
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   58370
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  112213
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   54958
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  340828
                                             52 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         8     1      7  282937
                                             44 BANK1      8     1      7
                           _addEvent
              _checkRemoveTableEntry
                   _rebuildHashtable
                            _writeEv
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              12    10      2   62938
                                             63 BANK1      6     4      2
                                              0 BANK2      6     6      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  188069
                                             41 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                       14    12      2   46634
                                             26 BANK1     13    11      2
                  _APP_GetEventState
                            ___awdiv
                              _getNV
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                   11    11      0   11604
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   41462
                                             26 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8958
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13934
                                             26 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   27593
                                             26 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   29138
                                             26 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   14215
                                             26 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   15059
                                             26 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  612518
                                             63 BANK1      6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  539096
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  519783
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    9015
                                             63 BANK0      2     1      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   37    35      2  729448
                                             63 BANK1      6     4      2
                                              0 BANK2     30    30      0
                                NULL *
                   _ackGetDiagnostic *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
                  _consumer2QEsdData *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   13385
                                             70 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15722
                                             70 BANK0      3     0      3
                                              8 BANK1      1     1      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     439
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     247
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumer2QEsdData                                    1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     4     2      2    1020
                                             54 BANK0      4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   51318
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   12181
                                             70 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            20    18      2   31318
                                             63 BANK1      5     3      2
                                              0 BANK2     14    14      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2   13809
                                             10 BANK1      9     7      2
                   _getBufferPointer
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              3 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              2 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (5) _getNumRxBuffersInUse                                 4     4      0     564
                                             50 BANK0      4     4      0
                   _getBufferPointer
                           _quantity
 ---------------------------------------------------------------------------------
 (6) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   29169
                                             63 BANK1      4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   65978
                                             63 BANK1      4     2      2
                                              0 BANK2      5     5      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13956
                                             70 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                  _consumer2QEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      2     2      0    9681
                                             70 BANK0      2     2      0
                              _getEv
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   30013
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29771
                                             71 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   29014
                                             70 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  226257
                                             46 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   73384
                                             30 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   69399
                                             18 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    8078
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12774
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       2     2      0   27931
                                             18 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   62111
                                             37 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                     _finaliseOutput
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   42590
                                             34 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   39938
                                             26 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   27223
                                             18 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _finaliseOutput                                       2     1      1     211
                                             45 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1626
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   35780
                                             18 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendProducedEvent                                    8     7      1   25464
                                             71 BANK0      2     1      1
                                             12 BANK1      6     6      0
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13683
                                             70 BANK0      1     1      0
                                              8 BANK1      4     0      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9928
                                             67 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      10     8      2    3889
                                             57 BANK0     10     8      2
                _getNextWriteMessage
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _push                                                12     9      3    1234
                                             45 BANK0     12     9      3
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 0     0      0     363
                           _quantity
 ---------------------------------------------------------------------------------
 (7) _quantity                                             5     4      1     363
                                             45 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  610328
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    7243
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  591603
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   34433
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   34433
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   23401
                                              2 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   13497
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    6925
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  504286
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  503952
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14853
                                              6 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              2 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4493
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        5     4      1  461056
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  332882
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  163860
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  168929
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  127554
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _writeEv                                             12    10      2   73087
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _checkRemoveTableEntry                                2     2      0   57047
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   43283
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   24393
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9616
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (7) _getEVs                                               8     8      0    9178
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4394
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   11368
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4493
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4428
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17410
                                              2 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      5     1      4
                                              0 BANK1      2     2      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2269
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1500
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4298
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7802
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7802
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7641
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1071
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    6190
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    6190
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    5353
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    1672
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1461
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1461
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     225
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     759
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _rebuildHashtable
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _getNumTxBuffersInUse
                 _quantity
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         _findServiceIndex
         _startTimedResponse
           _findServiceIndex (ARG)
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _finaliseOutput
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _isConsumedEvent
         _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumer2QEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _producerEsdData (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _getNumRxBuffersInUse
         _getBufferPointer
         _quantity
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _consumer2QEsdData *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerEsdData *
       _producerGetDiagnostic *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awdiv
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
       _sodTRCallback *
         _APP_GetEventState
           ___awdiv
           _getNV
           _readNVM
         ___awdiv
         _getNV
         _sendInvertedProducedEvent
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
           _checkRemoveTableEntry
           _rebuildHashtable
           _writeEv
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      70       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      68        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      67        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      66        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      65        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      64        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      63        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      62        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      61        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      60        0.0%
BANK5              100      0      48      14       28.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C0      13       75.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      F9       9       97.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      53       1       88.3%
BITBANK14           41      0       0      69        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlllhl      2A      0       0      57        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      48        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRllhllh      F      0       0      54        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlllhhl      7      0       0      56        0.0%
BITBIGSFRhh          7      0       0      24        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRllhhll      4      0       0      47        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlllhhh      3      0       0      55        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      58        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     48E      59        0.0%
DATA                 0      0     82E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Nov 15 07:42:28 2024

                   nerdCallback@nodeNumber 01D6                        findEvent@tableIndex 01C6  
                __end_of_pollTimedResponse AA40                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 01BC                           sendMessage@data1 01BB  
                         sendMessage@data2 01BC                           sendMessage@data3 01BD  
                         sendMessage@data4 01BE                           sendMessage@data5 01BF  
                         sendMessage@data6 01C0                           sendMessage@data7 01C1  
                      findEvent@nodeNumber 01BA              __end_of_setTimedResponseDelay C61C  
            __end_of_producerGetDiagnostic C1AE                          ackEventCheckLen@m 01CB  
                           _completed$1545 0091                              ?_APP_addEvent 01E6  
                     _getNumRxBuffersInUse BD1E                      _timedResponseCallback 003F  
                             ___awdiv@sign 009C                            _normalReadIndex 00CD  
                                       _io 00CF                                         _nn 00BD  
                                       bsr 0FE0                                ?_APP_lowIsr 0001  
                      ___wmul@multiplicand 0093                               configIO@type 01C2  
                       i2_getBufferPointer A2E4             _sendInvertedProducedEvent$1404 01D1  
                         ?_flushFlashBlock 0001                     _eventConsumer2QService EF0E  
                             ?_APP_highIsr 0001                    __end_of_eraseFlashBlock B958  
              __end_of_universalEventsInit C5AC                  ?_consumer2QProcessMessage 01F9  
                              _startServos 9A92                             ??_getTwoAction 008F  
                __end_of_deleteActionRange 97DE                                        l500 389E  
                                      l501 38AA                                        l352 5070  
                                      l281 6B88                                        l259 560C  
                                      l453 35CC                                        l550 A620  
                                      l462 35E2                                        l279 6AF2  
                                      l560 A92E                                        l448 35C2  
                                      l465 37C6                                        l457 35D8  
                                      l546 A5DE                                        l490 38F8  
                                      l555 A8EC                                _startOutput B4BC  
                                      l645 759C                                        l813 31EC  
                                      l653 AF8E                                        l469 37BA  
                                      l819 AD7A                                        l916 A198  
                          checkPowerOnPb@i 01F3                         _enumerationResults 0234  
                    deleteHappeningRange@h 01DE            ?_APP_isSuitableTimeToWriteFlash 0001  
         ??_APP_isSuitableTimeToWriteFlash 008D                        _expeditedWriteIndex 00CA  
                          _initServos$8087 00A7                            _initServos$8088 00A6  
                                      _evs 0220                                        _pop 9C72  
                            _APP_nvDefault 8C52                               ___awmod@sign 0092  
                                      prod 0FF3                    i2getNextWriteMessage@wr 000C  
                                      tosl 0FFD                                        wreg 0FE8  
             tableIndexToEvtIdx@tableIndex 008D                        ?i2_getBufferPointer 0001  
     sendInvertedProducedEvent@can_send_on 01CE                    APP_nvValueChanged@index 01F2  
             APP_GetEventState@disable_off 01BB                    APP_nvValueChanged@value 01ED  
      __end_of_mnsTRallDiagnosticsCallback 8274                _mnsTRallDiagnosticsCallback 8170  
                                     l1310 6684                                       l2017 3C6C  
                                     l2211 BA9A                                       l1180 C5C6  
                                     l2048 C29A                                       l1096 13B2  
                                     l1272 C318                                       l1256 91D6  
                                     l1440 7EC6                                       l1441 7EF2  
                                     l1274 C31C                                       l1435 7E76  
                                     l2173 B0B0                                       l1509 21B8  
                                     l2166 C4BA                                       l3126 A7B6  
                                     l2510 4CA0                                       l1439 7EC2  
                                     l1544 44EA                                       l3056 605A  
                                     l2193 B944                                       l1801 8750  
                                     l1553 45F0                                       l2514 683C  
                                     l1546 451E                                       l2179 B0C6  
                                     l1539 4480                                       l2451 7022  
                                     l2444 6F64                                       l1477 1A6E  
                                     l2518 6860                                       l1478 1A92  
                                     l1751 5D34                                       l1760 5DBC  
                                     l2448 6FB2                                       l1753 5D3C  
                                     l1762 5DCC                                       l1771 5E40  
                                     l1780 5EC2                                       l1764 5DDE  
                                     l1773 5E48                                       l2485 AFC6  
                                     l1782 5ED2                                       l1766 5DE4  
                                     l1784 5EE2                                       l1768 5DEA  
                                     l2833 BDE6                                       l2737 231A  
                                     l1786 5EEC                             _bootloaderType 00C8  
                                     l1788 5EF6                                       l2933 7880  
                                     l1992 9852                                       l1985 9902  
            __end_ofi2_getNextWriteMessage 8EC6                                       _BIE0 0E7E  
                       doEvuln@eventNumber 01D0                                       ?_pop 008D  
                         setOutputState@io 0095                                       _EEIF 7DBE  
                   __end_of_checkPowerOnPb B4BC                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _IPR5 0F78                          doEvuln@nodeNumber 01CE  
                    __end_of_sodTRCallback 8476                             configIO@action 01C1  
                                     _WPUB 0F5B                          setOutputPin@state 0091  
                           i2_setOutputPin 70CE                                _outputState 02B4  
                            _pushTwoAction B400                      i1_getNextWriteMessage 8D24  
                                     _have ADF0                                       _main B9A4  
                                     _name 0848                                       _loop 6B94  
                                     _poll 390C                 __end_of_mnsTRrqnpnCallback C132  
                                     fsr1h 0FE2                                       fsr2h 0FDA  
                                     indf1 0FE7                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     _push 3FE2                        setMultiState@action 0091  
                                     btemp 0054                           ?_producerEsdData 0001  
                        ?_removeTableEntry 0001                sodTRCallback@happeningIndex 01DB  
                                     pop@q 008D                                       prodh 0FF4  
                                     prodl 0FF3                            __end_ofi2_getNV BDCC  
                                     start 081C                               ?_loadNvCache 0001  
                       bounceDown@reversed 01BA                               bootPowerUp@a 009A  
                             bootPowerUp@b 0097                               bootPowerUp@i 0099  
          APP_GetEventState@happeningIndex 01BD                              setupTimer1@io 009C  
                      _setExpeditedActions C638                              setupTimer3@io 009C  
               __end_of_startDigitalOutput 57C6                             _setBounceState 95BA  
              consumer2QProcessMessage@end 02CC                consumer2QProcessMessage@enn 02CF  
                     ??i2_getBufferPointer 0003                consumer2QProcessMessage@opc 02CE  
                       ??_removeTableEntry 01C3                              ?_APP_testMode 0001  
                          getEN@tableIndex 00A1                               ___param_bank 0000  
                           ??_APP_addEvent 00A9                      ?_getNumRxBuffersInUse 0001  
                    __end_of_defaultEvents 76BA                           ?_producerPowerUp 0001  
                        findServiceIndex@i 0090                                completed@io 0092  
                     __end_of_EEPROM_Write B0EC                                _uptimeTimer 014C  
                                    ??_pop 008F                                      l20022 C0C4  
                                    l20102 95A8                                      l20040 8C60  
                                    l20112 92EE                                      l21000 868C  
                                    _B0CON 0E80                                      l20130 95C0  
                                    l20114 92FE                                      l20106 92C0  
                                    l20210 B5B0                                      l20202 B596  
                                    l20060 8C70                                      l20052 8C68  
                                    l20140 9644                                      l20108 92CE  
                                    l21012 86B0                                      l21004 869E  
                                    l20134 95F2                                      l20150 B16E  
                                    l20118 932C                                      l20230 BD30  
                                    l20214 B5BA                                      l21022 86B4  
                                    l20064 8C74                                      l20056 8C6C  
                                    l20048 8C64                                      l21040 873C  
                                    l20136 9612                                      l20144 9664  
                                    l20160 8816                                      l21032 C1EC  
                                    _B1CON 0E90                                      l20074 8C78  
                                    l22010 8568                                      l21042 8746  
                                    l20162 8836                                      l20154 B188  
                                    l22002 BEBA                                      l20410 3CDA  
                                    l20076 8CB2                                      l21060 8790  
                                    l21052 8778                                      l20164 8856  
                                    l20092 9536                                      l20156 B198  
                                    l20148 B158                                      l21220 C264  
                                    l20404 3CB2                                      l21046 875A  
                                    l21038 8732                                      l20174 88D2  
                                    l20094 9556                                      l20502 55CE  
                                    l20182 9C20                                      l20430 3D5C  
                                    l20422 3D18                                      l20414 3CF6  
                                    l22030 A412                                      l20248 B72C  
                                    l21064 879C                                      l21056 8784  
                                    l21048 876C                                      l20168 8894  
                                    l20088 9504                                      l23000 6A50  
                                    l22104 C506                                      l21240 8AC2  
                                    l20440 3DB8                                      l20432 3D68  
                                    l20424 3D2A                                      l22040 81D0  
                                    l22112 BBF4                                      _B2CON 0EA0  
                                    l21082 BCE8                                      l20098 9588  
                                    l23010 6ACE                                      l21410 C416  
                                    l21242 8B00                                      l20348 C388  
                                    l21068 87AE                                      l21340 7F7E  
                                    l20532 56D6                                      l20516 563E  
                                    l23020 6B44                                      l21180 AFD0  
                                    l21404 C412                                      l20460 3EBA  
                                    l20436 3D90                                      l22044 81D4  
                                    l20366 B5D4                                      l22150 5D94  
                                    l22134 5D36                                      l20630 AD88  
                                    l20550 578A                                      l20542 5728  
                                    l20526 56B6                                      l23022 6B50  
                                    l23006 6AA6                                      l20198 B586  
                                    l21094 C1C4                                      l21182 AFE2  
                                    l21254 8B72                                      l20470 3F40  
                                    l20454 3E7A                                      l20446 3E3C  
                                    l21270 C154                                      l23110 374A  
                                    l22144 5D6C                                      l22224 5EFC  
                                    l21344 7FBA                                      l20536 5700  
                                    l21520 B4CE                                      l21280 C19C  
                                    l20720 3036                                      l20712 2FA8  
                                    l20704 2F2A                                      l20464 3EEE  
                                    l20456 3E86                                      l20448 3E54  
                                    l22064 C112                                      l24000 4890  
                                    l23040 BAD2                                      _B3CON 0EB0  
                                    l21290 B646                                      l20386 B604  
                                    l22138 5D40                                      l21354 8032  
                                    l21434 A904                                      l20570 A5D0  
                                    l20810 5BC4                                      l21186 AFF4  
                                    l22082 AA64                                      l20482 3FB0  
                                    l23202 38C8                                      l23122 3774  
                                    l23114 3760                                      l23130 378A  
                                    l23050 BAF2                                      l22180 5E42  
                                    l21348 7FF6                                      l21356 8066  
                                    l20652 BC40                                      l21460 A544  
                                    l21508 A824                                      l21524 B4DA  
                                    l21516 B4C2                                      l20812 5BDC  
                                    l22252 9D02                                      l22244 9C9A  
                                    l22412 77EA                                      l22404 77E2  
                                    l21188 B008                                      l22340 C4E4  
                                    l20732 30B4                                      l20708 2F6A  
                                    l22076 AA50                                      l21620 844E  
                                    l21604 83F6                                      l23140 37CE  
                                    l23108 3704                                      l24012 48FA  
                                    l23044 BADA                                      l21286 B632  
                                    l22190 5E76                                      l21542 A136  
                                    l20638 ADE4                                      l20582 A5F6  
                                    l21470 B6D6                                      l21534 B4F2  
                                    l20806 5B9C                                      l20902 A8C4  
                                    l20558 C23C                                      l22094 C4FE  
                                    l22350 C4EC                                      l20726 3076  
                                    l20478 3F92                                      l21614 841A  
                                    l24102 AA1C                                      l22502 928A  
                                    l23150 37F0                                      l23126 3780  
                                    l23310 C056                                      l21630 ACA0  
                                    l22184 5E4C                                      l24112 98A8  
                                    l21560 A19C                                      l20656 BC54  
                                    l21528 B4E6                                      l20824 5C4E  
                                    l21800 10D4                                      l21712 0BAA  
                                    l21704 0B46                                      l22424 BBB4  
                                    l22432 BBD4                                      l22416 77F2  
                                    l21376 B434                                      l20912 C214  
                                    l22344 C4E8                                      l20744 3130  
                                    l20672 2DC0                                      l21608 840E  
                                    l23072 35EA                                      l24024 4950  
                                    _B4CON 0EC0                                      l22178 5DF0  
                                    l21546 A150                                      l21538 A132  
                                    l21474 B6E2                                      l21810 1192  
                                    l21706 0B64                                      l21722 0C16  
                                    l21650 085A                                      l22362 76FE  
                                    l22354 76BC                                      l22098 C502  
                                    l20738 30F2                                      l20690 2E60  
                                    l20754 31BE                                      l21618 8426  
                                    l22602 AF06                                      l23074 366A  
                                    l23058 3594                                      l23410 7E9E  
                                    l21634 ACAC                                      l21642 ACE0  
                                    l22196 5E9C                                      l24124 97F8  
                                    l21492 A7D2                                      l21484 B6FA  
                                    l20836 5CA8                                      l21820 1234  
                                    l21804 112A                                      l21740 0D66  
                                    l21732 0CCC                                      l21716 0BDE  
                                    l21660 092E                                      l22452 8122  
                                    l22444 8098                                      l22380 7784  
                                    l21396 C40E                                      l20684 2E20  
                                    l20676 2DD0                                      l21580 839E  
                                    l23340 6668                                      l24060 BB6A  
                                    l23252 9186                                      l23244 9146  
                                    l21478 B6EE                                      l20854 2982  
                                    l20838 5CD8                                      l21830 12B0  
                                    l21734 0CF4                                      l21662 0940  
                                    l21654 08B6                                      l22462 814E  
                                    l22390 77BE                                      l22382 7786  
                                    l24302 685C                                      l20950 865E  
                                    l20942 8656                                      l20934 864E  
                                    l20774 AD58                                      l22518 AB0A  
                                    l22534 7B46                                      l22630 94D0  
                                    l22622 949C                                      l22614 946C  
                                    l23174 382C                                      l23094 36CC  
                                    l23326 661E                                      l24038 497A  
                                    l23238 9142                                      l23430 7F14  
                                    l23422 7EF6                                      l25006 B9E4  
                                    l21496 A7EC                                      l21488 A7CE  
                                    l20864 2B38                                      l21840 1350  
                                    l21808 1180                                      l21760 0E5A  
                                    l22800 9AEC                                      l22376 7740  
                                    l22704 C3F6                                      l20768 AD54  
                                    l20696 2E9E                                      l22552 7BDE  
                                    l22544 7B8C                                      l22528 7B0E  
                                    l22624 94AE                                      l23192 38B4  
                                    l23184 3892                                      l23176 3872  
                                    l23272 A0B4                                      l24232 9B80  
                                    l24216 9B4A                                      l24152 6F68  
                                    l22712 7C04                                      _B5CON 0ED0  
                                    l20874 2D02                                      l20882 2D5C  
                                    l20786 5A94                                      l21826 127A  
                                    l21818 1216                                      l21746 0D8C  
                                    l21682 0A3C                                      l21674 09D8  
                                    l21658 090C                                      l21738 0D28  
                                    l22394 77C4                                      l20970 8670  
                                    l20962 8666                                      l20946 865A  
                                    l20938 8652                                      l22642 C340  
                                    l22570 B026                                      l22634 94E8  
                                    l22474 B322                                      l22482 B32A  
                                    l23194 38BA                                      l23370 66FA  
                                    l23610 1BA2                                      l23522 191A  
                                    l23506 18D8                                      l23442 16D8  
                                    l22730 7CE0                                      l15508 A7A8  
                                    l22900 61D2                                      l20868 2B90  
                                    l21676 09F6                                      l21668 0970  
                                    l21692 0AB0                                      l24324 68DA  
                                    l24340 69A2                                      l20980 8684  
                                    l22652 C348                                      l22660 B0F8  
                                    l23284 A0E2                                      l23372 6710  
                                    l23380 672A                                      l23348 6680  
                                    l23620 1BD8                                      l23540 1962  
                                    l23460 1778                                      l23532 1926  
                                    l24228 9B7C                                      l22716 7C28  
                                    l22814 4F8C                                      l20878 2D58  
                                    l20798 5B34                                      l21870 1576  
                                    l21862 14BE                                      l21846 1396  
                                    l21838 1332                                      l21790 0FF2  
                                    l21686 0A70                                      l20974 8674  
                                    l20966 866A                                      l20958 8662  
                                    l22646 C344                                      l22638 C33C  
                                    l21598 83DE                                      l24086 A9DA  
                                    l22494 9230                                      l22478 B326  
                                    l24502 2514                                      l23278 A0CE  
                                    l23382 6762                                      l23606 1B18  
                                    l23534 1952                                      l23462 177C  
                                    l23446 1704                                      l24246 9BAA  
                                    l24158 6F70                                      l22726 7CAE  
                                    l22718 7C36                                      l22832 5020  
                                    l22912 6202                                      l21880 160E  
                                    l21792 102A                                      l21776 0F3E  
                                    l21928 A28C                                      l21944 A1FA  
                                    l24096 AA12                                      l24088 AA00  
                                    l24432 22E8                                      l23296 A100  
                                    l23368 66A8                                      l23640 1D06  
                                    l23632 1CDA                                      l23560 19C2  
                                    l23552 1996                                      l23472 17A6  
                                    l22760 99F6                                      l22818 4F94  
                                    l22906 61EA                                      l21890 16C2  
                                    l21874 15A8                                      l21866 151A  
                                    l21858 1462                                      l21698 0AE0  
                                    l20898 A8C0                                      l24346 69AE  
                                    l24282 67FC                                      l22690 C3EE  
                                    l22666 B14E                                      l24098 AA18  
                                    l22586 BDD6                                      l24522 2598  
                                    l24450 23A6                                      l24426 22E0  
                                    l23730 218E                                      l23626 1C8E  
                                    l23466 1780                                      l15650 C0E0  
                                    l22852 5130                                      l22844 50BA  
                                    l22940 62DE                                      l22924 6232  
                                    l21796 107E                                      l23804 4414  
                                    l20988 8688                                      l21964 C324  
                                    l22684 9F68                                      l24604 26F6  
                                    l24524 259E                                      l24428 22E4  
                                    l24380 220C                                      l23716 2152  
                                    l23660 1E5E                                      l23492 188A  
                                    l23900 BE42                                      l22756 99EE  
                                    l19030 7D80                                      l19014 7D4C  
                                    l22862 518A                                      l22870 51D2  
                                    l22854 5140                                      l22918 621A  
                                    l21878 15E0                                      l23806 4418  
                                    l21958 C320                                      l22678 9F12  
                                    l23718 2164                                      l23646 1D4A  
                                    l23750 21BE                                      l23478 182C  
                                    l23486 184E                                      l24710 6112  
                                    l22774 9A80                                      l19104 8338  
                                    l19008 7D48                                      l15496 A768  
                                    l22864 519C                                      l22880 524C  
                                    l21888 1692                                      l24800 6CF8  
                                    l21984 9E2C                                      l21976 9DB0  
                                    l24624 2768                                      l24544 25F0  
                                    l24392 2262                                      l23656 1D78  
                                    l23568 1A08                                      l23488 1886  
                                    l24368 BE78                                      l22768 9A30  
                                    l19130 79F8                                      l15498 A774  
                                    l22874 520C                                      l22938 62D6  
                                    l21994 BEA2                                      l23834 4518  
                                    l23818 449A                                      l22698 C3F2  
                                    l24482 24C6                                      l24466 242E  
                                    l24386 222C                                      l23674 2080  
                                    l23666 2052                                      l23594 1AC0  
                                    l23586 1A94                                      l23498 18AC  
                                    l24714 6150                                      l24722 6182  
                                    l19108 833C                                      l19052 7DF2  
                                    l19044 7DC8                                      l19140 7A72  
                                    l19220 4338                                      l19212 4044  
                                    l22868 51C0                                      l22876 522A  
                                    l22972 63B4                                      l22892 61C6  
                                    l22788 9AA4                                      l21996 BEAA  
                                    l23852 458C                                      l24564 2642  
                                    l23932 470E                                      l23916 469E  
                                    l24724 61AE                                      l24708 60C8  
                                    l24820 8908                                      l19070 828A  
                                    l19142 7AAC                                      l19230 8BE8  
                                    l22878 523C                                      l22966 638A  
                                    l22974 63B8                                      l22982 63E4  
                                    l22990 69C8                                      l21998 BEB2  
                                    l23790 43C2                                      l24398 2268  
                                    l24646 283C                                      l23694 20DA  
                                    l23678 209C                                      l23598 1AEA  
                                    l23950 476E                                      l23934 4714  
                                    l19056 7E36                                      l19304 3488  
                                    l23880 4674                                      l23784 43A6  
                                    l24584 2694                                      l23928 46D0  
                                    l24920 3C4A                                      l24912 3B78  
                                    l24664 C028                                      l19082 8294  
                                    l19306 348A                                      l19314 349C  
                                    l19410 4C5E                                      l23858 45E2  
                                    l23962 47C2                                      l23938 4718  
                                    l24682 5F72                                      l24674 5F4C  
                                    l24754 9982                                      l18700 B3E0  
                                    l19076 8290                                      l19148 7ABA  
                                    l19164 BB3A                                      l19252 3202  
                                    l19236 8C2A                                      l19180 ADFA  
                                    l19420 4C84                                      l23796 43E8  
                                    l23972 47EC                                      l24764 9996  
                                    l19326 3572                                      l24846 B484  
                                    l23990 4866                                      l24686 5FEE  
                                    l24678 5F6E                                      l24758 998A  
                                    l19432 BCBA                                      l19600 A49A  
                                    l18800 B8BC                                      l19272 328E  
                                    l19520 975A                                      l19352 49F6  
                                    l24792 6C98                                      l23984 483A  
                                    l24880 3A02                                      l19450 6DDC  
                                    l19610 A4E0                                      l19602 A49E  
                                    l19098 8326                                      l19290 33D6  
                                    l19266 3284                                      l19506 9736  
                                    l19346 49DA                                      l24786 6C42  
                                    l24874 39FC                                      l19460 6E9E  
                                    l19444 6D5C                                      l18740 A6D2  
                                    l19276 3294                                      l19700 BA78  
                                    l19188 AE56                                      l24868 399E  
                                    l19438 BCCA                                      l19454 6E1E  
                                    l18910 B0E8                                      l19710 4CB2  
                                    l19630 6412                                      l19550 89D6  
                                    l19390 4B68                                      l19456 6E5C  
                                    l19448 6D9E                                      l19464 6EDC  
                                    l19608 A4D4                                      l19616 A50A  
                                    l19720 4D28                                      l19712 4CC8  
                                    l19528 97B6                                      l19536 97CA  
                                    l19800 9706                                      l18690 B3BE  
                                    l18930 8F0C                                      l19482 A3BC  
                                    l19474 A392                                      l18850 788E  
                                    l19562 8A94                                      l19802 970C  
                                    l18676 B990                                      l18756 A6F6  
                                    l18924 8EF6                                      l19716 4D0A  
                                    l19492 A3FC                                      l18844 7844  
                                    l19636 641A                                      l19820 B82C  
                                    l18694 B3D6                                      l18686 B3A6  
                                    l18926 8EFA                                      l19734 4D88  
                                    l18862 7900                                      l18838 7832  
                                    l19654 6574                                      l19662 65BA  
                                    l19910 A674                                      l19744 4DF0  
                                    l19736 4D9E                                      l19728 4D66  
                                    l19672 65CC                                      l19832 7572  
                                    l19840 769A                                      l19912 A67C  
                                    l19904 A65E                                      l18786 A73E  
                                    l18938 8F90                                      l19754 4E80  
                                    l19746 4E2E                                      l19834 75C6  
                                    l19930 A6B4                                      l19922 A69C  
                                    l18876 B08E                                      l18972 B8C6  
                                    l19764 4F10                                      l19756 4EBE  
                                    l18948 93CC                                      l19836 75EE  
                                    l19692 BA3E                                      l19860 9F9A  
                                    l19852 9F86                                      l19844 9F72  
                                    l18982 B8EA                                      l19678 65E4  
                                    l19926 A6A6                                      l19950 AE92  
                                    l19942 AE78                                      l18976 B8D8  
                                    l19768 4F4E                                      l19952 AE9A  
                                    l19792 96EA                                      l19872 9FB8  
                                    l19864 9FA4                                      l19856 9F90  
                                    l19848 9F7C                                      l19962 AEBC  
                                    l19946 AE84                                      l19778 968C  
                                    l19882 9FCC                                      l18996 7D2C  
                                    l19796 96FA                                      l19876 9FC2  
                                    l19868 9FAE                                      l19966 AECA  
                                    l19958 AEB2                                      l19986 B394  
                                    l19898 A64E                                      l19994 BA00  
                                    ?_have 0001                                      ?_main 0001  
                ??_consumer2QGetDiagnostic 0098                               ?_initOutputs 0001  
                      processEnumeration@i 01C3                            __end_of___awdiv A6BE  
                                    _EEADR 0F74                                      ?_loop 0001  
                        setOutputState@act 0093                            __end_of___awmod AED4  
                                    ?_poll 0001                                      ?_push 008D  
                                    _BSEL0 0E7D                            __end_of___lldiv A7C8  
                                    u20000 BA0C                                      u20020 BA20  
                                    u20040 BA2C                                      _T0CON 0FD5  
                          ___awdiv@divisor 0099                                      u20150 8874  
                                    u20160 88B2                                      u22010 A7E8  
                                    u20410 3CAE                                      u22100 A194  
                                    u20420 3CF2                                      u21221 2FC6  
                                    u20510 3DB4                                      u22040 A820  
                                    u21090 BC50                                      u21410 5C3A  
                                    u20610 3F0E                                      u20530 3E38  
                                    u20450 3D14                                      u21171 2EBC  
                                    u22060 A14C                                      u20700 55E6  
                                    u21340 5A8E                                      u22300 0A9E  
                                    u20620 3F3C                                      u20710 55E8  
                                    u21350 5A90                                      u20470 3D58  
                                    u23030 BBF0                                      u20640 3F60  
                                    u22160 8416                                      u23050 5D1A  
                                    u20730 5608                                      u21450 2960  
                                    u22410 0CB8                                      u20650 3F8E  
                                    u20570 3EB6                                      u20490 3D8C  
                                    u20820 5724                                      u20740 560A  
                                    u21460 2982                                      u22500 0EFA  
                                    u22420 0CBA                                      u22180 ACD4  
                                    u20830 5726                                      u21470 29B4  
                                    u22510 0EFC                                      u22430 0CE2  
                                    u20590 3EEA                                      u22190 ACD6  
                                    u24040 50B6                                      u20920 A5CC  
                                    u20680 556C                                      u21480 29B6  
                                    u22440 0CE4                                      u23170 5EC8  
                                    u24050 50B8                                      u20690 556E  
                                    u22610 1296                                      u22290 0A9C  
                                    u21570 8680                                      u23180 5ED8  
                                    u20860 575A                                      u24300 63BE  
                                    u22700 1452                                      u22460 0E14  
                                    u21900 C37A                                      u21740 8ABE  
                                    u24150 51FA                                      u20870 575C  
                                    u22470 0E16                                      u23350 76FA  
                                    u21824 7FAE                                      u24160 51FC  
                                    u24080 50FA                                      u20880 5796  
                                    u22720 14AC                                      u23520 816C  
                                    u21825 7FAA                                      u21834 7FEA  
                                    u24090 50FC                                      u20890 5798  
                                    u24170 61C0                                      u22810 1682  
                                    u22730 14AE                                      u23370 777E  
                                    u21835 7FE6                                      u21844 8026  
                                    u21845 8022                     APP_GetEventState@flags 01BA  
                                    u24350 6A78                                      u22750 1508  
                                    u23390 779E                                      u25118 1C3E  
                                    u25119 1C60                                      u24360 6A7A  
                                    u22760 150A                                      u22840 A2D6  
                                    u23480 80EC                                      u25320 43FE  
                                    u23465 80AC                                      u22690 1450  
                                    u22850 A2D8                                      u25410 45CA  
                                    u25330 4458                                      u24450 3590  
                                    u22780 1564                                      u25260 4386  
                                    u18230 C5C2                                      u14950 A778  
                                    u22790 1566                                      u22870 A244  
                                    u23494 8100                                      u25350 4484  
                                    u24710 91F2                                      u23830 9A2C  
                                    u23495 80FC                                      u22880 A246  
                                    u26400 6C80                                      u25440 4634  
                                    u25360 44DA                                      u24720 A0B0  
                                    u23840 9A2E                                      u18250 C5BA  
                                    u23930 9B1A                                      u25178 1F34  
                                    u25179 1F48                                      u19204 6E12  
                                    u18420 7826                                      u22948 860E  
                                    u26420 6CE0                                      u25620 A9D4  
                                    u25188 1FB2                                      u19205 6E0E  
                                    u22949 8620                                      u25189 1FC6  
                                    u25605 BB8E                                      u19214 6E4E  
                                    u26430 6D38                                      u25390 4562  
                                    u24670 3902                                      u25198 2030  
                                    u25550 4826                                      u25606 BB90  
                                    u25710 6F9A                                      u19215 6E4A  
                                    u25199 2044                                      u18520 8EE2  
                                    u18440 7884                                      u25480 469A  
                                    u19234 6E92                                      u19250 A3B8  
                                    u23890 9AD2                                      u24770 661A  
                                    u25570 48CA                                      u24690 9192  
                                    u19235 6E8E                                      u19244 6ECE  
                                    u22988 8218                                      u25900 2228  
                                    u25740 9B46                                      u19245 6ECA  
                                    u19085 4A56                                      u22989 822C  
                                    u19174 6D92                                      u19430 A4A8  
                                    u18550 8F38                                      u18710 831E  
                                    u25638 A9DE                                      u24870 7E6C  
                                    u19175 6D8E                                      u25639 A9FA  
                                    u19184 6DCE                                      u19440 A4AA  
                                    u18480 B0B4                                      u25840 685A  
                                    u25920 225C                                      u26720 3C54  
                                    u26608 3AA8                                      u19185 6DCA  
                                    u26609 3ABA                                      u19530 65C2  
                                    u26570 39E4                                      u19515 6530  
                                    u19460 A4C8                                      u19516 6534  
                                    u19428 A9B2                                      u26708 3C2A  
                                    u26468 89AE                                      u26709 3C3C  
                                    u26469 89C0                                      u19470 A4CA  
                                    u19630 4DB4                                      u18670 7E3E  
                                    u18568 8F3C                                      u19704 4EB0  
                                    u26648 3B36                                      u19705 4EAC  
                                    u26649 3B48                                      u19730 4ED4  
                                    u18690 8286                                      u19490 640E  
                          reqevCallback@ev 01DC                       __end_of_factoryReset 8648  
                                    u19644 4DE4                                      u18940 328A  
                                    u19645 4DE0                                      u19654 4E20  
                                    u19655 4E1C                                      u19744 4F04  
                                    u19680 4E44                                      u19920 AE9E  
                                    u19745 4F00                                      u19754 4F40  
                                    u19770 9688                                      u19755 4F3C  
                                    u18980 3490                                      u19860 A680  
                                    u19694 4E74                                      u19695 4E70  
                        _initTimedResponse C62C                                      u19970 B388  
                                    u19990 BA0A                             ?_APP_nvDefault 0001  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                 __end_of_nvTRnvrdCallback BC28                               i2_canTxError B27E  
         __end_of_factoryResetGlobalEvents C654                             _APP_nvValidate AD0C  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0008  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 92BA  
                          __end_of_doNenrd AF44                       ?_setExpeditedActions 0001  
             nvProcessMessage@valueOrError 01FD                            __end_of_doEvuln AB36  
                           _ackDiagnostics 01B2                            __end_of_doNnclr BF32  
                          __end_of_doNnevn B084         sendInvertedProducedEvent@happening 01D0  
                          __end_of_doReqev 7BFE                            __end_of_doReval 94FE  
                                    i1_pop 9D0C                                      i2_pop 9E3E  
                          __end_of_doRqevn BE04                            __end_of_getHash C448  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 002F  
                       ?_initTimedResponse 0001                         __p_paramBlock_text 0820  
                          __end_of_highIsr 912C                              ?_leds_powerUp 0001  
                          __end_of_isEvent C29E                            __end_of_configs EE69  
                                    _canId 00C1                                      _doSOD C512  
              ??_sendInvertedProducedEvent 00A9                                      _getEN AB36  
                                    _getNN 937E                                      _getNV BCA4  
                                    _getEv 7814                           needsStarting@act 008D  
                     _enumerationStartTime 002B                            __end_of_readNVM B400  
                          __end_of_isrHigh 8562                                      _setNV AA40  
                   __end_ofi2_setOutputPin 727C                                      _numEv 8AA8  
                                    have@i 0090                                      _speed 0200  
                                    _setup 993E                        canReceiveMessage@mp 01C8  
                      canReceiveMessage@no 01CA               __end_of_getNumTxBuffersInUse C5DA  
                          __end_of_mnsPoll 468C                              setNV@oldValue 01F7  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B620  
                          ?_checkPowerOnPb 0001                            __end_of_setType B3A0  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 0001  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01D5            mnsTRallDiagnosticsCallback@type 0001  
                                    poll@i 02EF                                      poll@m 02F0  
                         __end_ofi2_canIsr C55C                            __end_of_powerUp 89CC  
                                    plusw2 0FDB                                      push@m 008E  
                                    push@q 008D                    reqevCallback@tableIndex 01E2  
                                    ttemp5 0055                                      ttemp6 0058  
                                    ttemp7 005C                           _setServoPosition C2EE  
                                    status 0FD8                                      wtemp8 0055  
                            ?_nvGetESDdata 0001                     __end_of_setBounceState 9676  
                  reqevCallback@nodeNumber 01DE                            __end_of_writeEv 3582  
                 ?_updateModuleErrorStatus 0001                 __end_of_startTimedResponse BC66  
                             bounceDown@io 01BD                           ?_nvGetDiagnostic 0096  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01C1                            __initialization AC28  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have AE62                               __end_of_main B9EE  
                             __end_of_name 0850                               __end_of_loop 6D56  
                             __end_of_poll 3C82                               __end_of_push 433C  
                            ?_nerdCallback 01D4                           i2canFillRxFifo@m 000D  
                         _setupTimer1$1931 0098                           _setupTimer3$1935 0098  
                     __end_of_getParameter 872C                  __end_of_initTimedResponse C632  
                   __end_of_APP_nvValidate AD7E                                     ??_have 008D  
                             ?_setNewCanId 0001                                     ??_main 00A9  
                         ?_eraseFlashBlock 0001                                     ??_loop 01E8  
                             ?_sendMessage 01BA                                     ??_poll 02EA  
                                   ??_push 0090                      __end_of_reqevCallback 9F6C  
                 __end_of_ackEventCheckLen C544                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01F9                          _pollsPerStepSpeed 0274  
                                   ?i1_pop 0060                                     ?i2_pop 0001  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00CC  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 88F0                                     ?_doSOD 0001  
                    __end_of_setServoState 95BA                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 015C                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 65EE  
                                   ?_setNV 01F4                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7A                                     ?_numEv 0001  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 0005  
                                   _CIOCON 0F70                                     ?_setup 0001  
                      APP_nvValidate@index 00A0        consumer2QProcessMessage@firstAction 02D3  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 009F  
                       setOutputState@type 0094                                  ??i2_getNV 0003  
                   ?i1_getNextWriteMessage 0060                           reqevCallback@nEv 01DB  
                                   i1l2048 C2EA                                     i1l2097 84B8  
                                   i1l2540 550A                                     i2l2048 C3C2  
                                   i2l2092 852E                      getNumRxBuffersInUse@i 0095  
                                   i2l2540 5A52                                     _TABLAT 0FF5  
                       rebuildHashtable@ev 01BD                     _producerProcessMessage 5F4A  
                  ackEventProcessMessage@m 01F9                                     _TBLPTR 0FF6  
                           ??_nvGetESDdata 008D                              _needsStarting A7C8  
          __end_of_consumer2QGetDiagnostic C24E                                     _TXB0D0 0F26  
                                   _TXB0D1 0F27                                     _TXB0D2 0F28  
                                   _TXB0D3 0F29                                     _TXB0D4 0F2A  
                                   _TXB0D5 0F2B                                     _TXB0D6 0F2C  
                                   _TXB0D7 0F2D                           __end_of_checkLen A8C8  
                             ?_removeEvent 01C9                            ?_setBounceState 0091  
                      setServoPosition@pos 009F                             _clearAllEvents B726  
                 __end_of_APP_factoryReset C3A2                       __end_of_getTwoAction C624  
                      setServoState@action 0091                            setMultiState@io 0092  
                            _canFillRxFifo 727C                                initTicker@i 008F  
                        ?_findServiceIndex 0001                           _rebuildHashtable 7D26  
                         ??_processActions 00A9                          _canProcessMessage 9B38  
                                   i1pop@q 0060                              teachPowerUp@i 01C3  
                                   i2pop@q 0001                            completed@action 008D  
                       finaliseOutput@type 008D                   reqevCallback@eventNumber 01E0  
               __end_of_APP_nvValueChanged 31EE                            setServoState@io 0092  
                         __end_of_configIO 4F86                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent B9EE                         _processEnumeration 76BA  
                              readInput@io 0093                         ?_canProcessMessage 01F9  
                   ??_getNumRxBuffersInUse 0092                           pollServos@midway 01D6  
               startDigitalOutput@pinState 01D9                             teachCheckLen@m 01CB  
             ??_timer3DoneInterruptHandler 0009                           __end_of_bounceUp 5CDC  
                         pollServos@target 01D4                                     ___lmul B620  
                 __end_of_mnsGetDiagnostic C1FE                             ??_nerdCallback 00A9  
                                   _canIsr C448            checkRemoveTableEntry@tableIndex 01C9  
                                   _canPri EE86                                     ___wmul C29E  
                                ??___awdiv 009B                                     _doNerd C4C4  
                                ??___awmod 0091                      _APP_preProcessMessage C64A  
                                   _doWait A522                           ??_finaliseOutput 008E  
                                   _getEVs 8274                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                            sodTRCallback@io 01E0  
                            _nvDiagnostics 01A4                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy BBA2  
                                ??_doEvlrn 00A9                                  ??_doNenrd 00A9  
                                   _isrLow 8476                                  ??_doEvuln 00A9  
                                   getNN@f 00A1                                  ??_doNnclr 00A9  
                                   clear_0 AC30                                     clear_1 AC42  
                                   clear_2 AC4E                                  ??_doNnevn 01C3  
                                   clear_3 AC5A                                     clear_4 AC66  
                                   clear_5 AC72                                     clear_6 AC7E  
                                   clear_7 AC8A                                  ??_doReqev 00A9  
                                ??_doReval 01C8                                     _lowIsr 8F94  
                                   _saveNV BD58                           ___awdiv@quotient 009D  
                                   getEv@f 00A4                   __end_of_setDigitalOutput A522  
                          ___awmod@divisor 008F                                  ??_doRqevn 00A9  
                         flushFlashBlock@i 008F                        ?_processEnumeration 0001  
                                   have@id 008F                                  ??_getHash 00A7  
                          ??_APP_nvDefault 009F                        ??_canProcessMessage 01FB  
                                   isa$std 0001                            ___awmod@counter 0091  
                          ?_APP_nvValidate 009F                           ??_processOutputs 01CC  
                                ??_highIsr 001A                                  ??_isEvent 008D  
           __end_of_ackEventProcessMessage 67DC                   __end_of_setNormalActions C638  
              producerProcessMessage@index 01FE                                  ??_readNVM 0094  
                 nerdCallback@serviceIndex 01D4                                  ??_isrHigh 001F  
                            i2_checkTxFifo 57C6                      ackGetDiagnostic@index 0098  
                        _canReceiveMessage 67DC                 __end_of_teachGetDiagnostic C276  
                         _nvProcessMessage 468C                                     numEv@f 00A2  
                                ??_mnsPoll 01C7                                     pop@ret 0094  
                         canFillRxFifo@ptr 006E                          ??_mnsFactoryReset 00A9  
                             __mediumconst ED28                                  ??_tickGet 0091  
                         __end_of_services EE7B                         _tableIndexToEvtIdx C608  
              findServiceIndex@serviceType 008F                                  ??_setType 00A9  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                        doEvlrn@nodeNumber 01EE                                     tblptru 0FF8  
                             ??_FLASH_Read 008F                              _initInputScan 99E8  
                         __end_of_quantity BE3C                          nvProcessMessage@m 01F9  
                       ?_canReceiveMessage 01C4                                  ??_powerUp 01C4  
                        __end_ofi1_isEvent C2EE                               i2getNV@index 0004  
               __end_of_peekTwoActionQueue A638                     getParameterFlags@flags 0091  
                             ?_setupTimer1 0001          mnsTRserviceDiscoveryCallback@step 01D5  
                             ?_setupTimer3 0001                            ??_pushTwoAction 008D  
        mnsTRserviceDiscoveryCallback@type 0001                              checkTxFifo@mp 0073  
                        __end_ofi2_isEvent C3C6                          i2_checkCANTimeout B7CE  
                     __end_of_APP_addEvent AFB0                                  ??_writeEv 01CD  
                             __p_name_text 0848                      _checkRemoveTableEntry BB14  
                      addEvent@eventNumber 01D9                          _expeditedQueueBuf 02C4  
             nvTRnvrdCallback@valueOrError 01D6                           __end_of_writeNVM B90C  
                           ?_needsStarting 008D                        ?_tableIndexToEvtIdx 0001  
                   __end_of_clearAllEvents B77A                      mnsGetDiagnostic@index 0098  
                        __end_ofi1_tickGet B6D0                     startServoOutput@action 0091  
                     ??_processEnumeration 01BD                         ?i2_checkCANTimeout 0001  
                               __accesstop 0060                    __end_of__initialization AC90  
                __end_of_canProcessMessage 9BD6                          __end_ofi2_tickGet B570  
                            bounceDown@tmp 01BB                        ??_canReceiveMessage 01C6  
                        EEPROM_Write@index 008F                             nvGetESDdata@id 008D  
                        EEPROM_Write@value 0091                             ?_canFillRxFifo 0001  
                           setOutputPin@io 0094                     checkRemoveTableEntry@e 01CA  
                            doEvuln@result 01D2                              ___rparam_used 0001  
                       teachCheckLen@learn 01CE                                 _eeBootFlag 0042  
                        i1tickGet@IntFlag1 0065                          i1tickGet@IntFlag2 0064  
                  ??_handleSelfEnumeration 0099                  ?_factoryResetGlobalEvents 0001  
                            ?_teachPowerUp 0001                           FLASH_Write@index 0090  
                        _getParameterFlags B570                              __end_ofi1_pop 9DA6  
                         FLASH_Write@value 0092                              __end_ofi2_pop 9ED6  
                      ??i2_checkCANTimeout 0016                             __pcstackCOMRAM 0001  
               ?i1_updateModuleErrorStatus 0001  mnsTRserviceDiscoveryCallback@serviceIndex 01D4  
                           _io@inputs$F849 00CE                                 _canEsdData C4DE  
                            __end_of_doSOD C52C                         ?_getParameterFlags 0001  
                            __end_of_getEN ABB0                              __end_of_getNN 9440  
                            __end_of_getNV BCE2                              __end_of_getEv 796A  
                       __end_of_FLASH_Read B9A4                                 _ackPowerUp C050  
                   ackEventCheckLen@needed 01CD                              __end_of_setNV AABC  
                            __end_of_numEv 8B80                              __end_of_setup 99E8  
                     ??_tableIndexToEvtIdx 008D                               i1isEvent@opc 0061  
                             ??_APP_lowIsr 0060                       _getNumTxBuffersInUse C5CE  
                   consumer2QEsdData@index 008D                         APP_factoryReset@io 01ED  
                             ?_startServos 0001                  __end_of_canReceiveMessage 69C2  
                             ?_startOutput 01DC               nvTRnvrdCallback@serviceIndex 01D4  
               __end_of_bootProcessMessage A12C                                  ?i2_canIsr 0001  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 0001  
                               _canTxError B21C                                 _canService EF68  
                        ??_isConsumedEvent 00A6                                 _canPowerUp 6F14  
                  producerProcessMessage@h 01FD                    producerProcessMessage@m 01F9  
                                  ??i1_pop 0062                                    ??i2_pop 0003  
                           ?_initInputScan 0001                  reqevCallback@serviceIndex 01D4  
                     __end_of_APP_testMode C656                 rebuildHashtable@tableIndex 01C2  
             __end_of_deleteHappeningRange 8AA8                  __end_ofi2_checkCANTimeout B822  
             consumer2QGetDiagnostic@index 0098                                    ??_doSOD 0095  
                            completed@type 008E                                    ??_getEN 0099  
                                  ??_getNN 0099                                    ??_getNV 008F  
                                  ??_getEv 009F                    startDigitalOutput@state 01D4  
                              saveNV@index 01BF                             canFillRxFifo@m 006C  
                                  ??_setNV 01F5                              ?_sendMessage2 00A6  
                            ?_sendMessage3 00A6                              ?_sendMessage4 01C2  
                            ?_sendMessage5 01C2                              ?_sendMessage6 01C2  
                            ?_sendMessage7 01C2                                    ??_numEv 009D  
                    _setupModePreviousMode 0165                                    ??_setup 00A9  
                             canEsdData@id 008D                                saveNV@value 01BC  
                             readNVM@index 0091                   mnsProcessMessage@newMode 01FE  
                        initTicker@divider 008E                               _EEPROM_Write B084  
                               __pbssBANK0 00A9                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                             loadNvCache@i 009B                               i2isEvent@opc 0002  
                          ?_clearAllEvents 0001                 startTimedResponse@callback 0092  
                          canSendMessage@m 00A1                                 _defaultNVs B822  
                       __end_of_APP_lowIsr C658                        setNewCanId@newCanId 01BC  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B5C8  
                               _delayCount 0284                             _loadFlashBlock BA82  
                             _factoryReset 8562                             ??_teachPowerUp 00A9  
                            _setLEDsByMode BEA0                              addEvent@evVal 01DC  
                            addEvent@evNum 01DB                             _canDiagnostics 0167  
                            addEvent@error 01E2             __end_of_eventConsumer2QService EF20  
                   processActions@ioAction 01E4                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 01FC                         mnsProcessMessage@i 01FB  
                       mnsProcessMessage@m 01F9                       __end_of_leds_powerUp BF02  
                               _bl_version EE7B                     ?_APP_preProcessMessage 008D  
                                  ?___lmul 0091                                    ?_canIsr 0001  
                     i2tickGet@currentTime 0007                                    ?___wmul 0091  
                        _bootloaderVersion 0048                               initBounce@io 008D  
                                  ?_doNerd 0001                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C5F2                                    ?_getEVs 0001  
                        i2tickGet@IntFlag1 0006                          i2tickGet@IntFlag2 0005  
                    ?_getNumTxBuffersInUse 0001                                    ?_memcpy 008D  
                                ?_addEvent 01D7                                    _ECANCON 0F72  
                                  ?_isrLow 0001                         _mnsTRrqnpnCallback C106  
                           ___lmul@product 0099                        i1getBufferPointer@b 0062  
                                  ?_lowIsr 0001                                    ?_saveNV 01BC  
                      setOutputPosition@io 00A3                      _setTimedResponseDelay C612  
                    _producerGetDiagnostic C186                                    _BRGCON1 0E43  
                                  _BRGCON2 0E44                                    _BRGCON3 0E45  
                   processActions@peekItem 01E0                   __end_of_setServoPosition C312  
                     __end_of_nvGetESDdata C512                                 ??i2_canIsr 001A  
                       _startDigitalOutput 5510                                    _COMSTAT 0F71  
                         _canGetDiagnostic AFB0                                 _flashBlock 00D1  
                               _flashFlags 00C2                                    i1l20312 8D8C  
                                  i1l21300 A012                                    i1l20318 8DCE  
                                  i1l21150 53F8                                    i1l21320 A044  
                                  i1l21312 A030                                    i1l21304 A01C  
                                  i1l20336 9D9C                                    i1l20328 9D34  
                                  i1l20266 B684                                    i1l21324 A04E  
                                  i1l21316 A03A                                    i1l21308 A026  
                                  i1l21334 A062                                    i1l20286 B6B4  
                                  i1l21328 A058                                    i1l21168 54EE  
                                  i1l22308 B246                                    i1l22318 B270  
                                  i1l21296 A008                                    i1l22282 72D2  
                                  i1l22258 727E                                    i1l22292 73D8  
                                  i1l25012 84B4                                    i1l22286 73CC  
                                  i1l22296 73E6                                    i2l14010 A2E8  
                                  i2l14030 A31A                                    i2l14022 A306  
                                  i2l14014 A2F2                                    i1l24958 8F9A  
                                  i2l14042 A338                                    i2l14034 A324  
                                  i2l14026 A310                                    i2l14018 A2FC  
                                  i2l14116 5A36                                    i2l14038 A32E  
                                  i2l14048 A342                                    i2l14098 5940  
                                  i2l25010 852A                                    i2l12932 8E9E  
                                  i2l12926 8E5C                                    i2l12854 B520  
                                  i2l12960 9E64                                    i2l12874 B552  
                                  i2l13940 71CA                                    i2l13932 7112  
                                  i2l13934 714E                                    i2l13944 720A  
                                  i2l13928 70D2                                    i2l12968 9ECC  
                                  i2l15536 B2A8                                    i2l13962 BDB4  
                                  i2l13938 718E                                    i2l15554 73EE  
                                  i2l15546 B2D2                                    i2l13956 BDA4  
                                  i2l13948 7246                                    i2l15582 7538  
                                  i2l15592 7552                                    i2l15578 743E  
                                  i2l15588 7544                                    i2l15946 C566  
                                  i2l24940 9066                                  ?_checkLen 01C7  
                           _setOutputState B6D0                     getNumRxBuffersInUse@no 0094  
                        ?_nvTRnvrdCallback 01D4                          reqevCallback@step 01D5  
                   processActions@nextType 01E1                        ?_mnsTRrqnpnCallback 01D4  
                         ??_checkPowerOnPb 00A9                          ??i2_canFillRxFifo 000D  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00A9                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A8  
                           ??_sendMessage3 00A9                             ??_sendMessage4 00A6  
                           ??_sendMessage5 00A6                             ??_sendMessage6 00A6  
                           ??_sendMessage7 00A6                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01D4                     ?_checkRemoveTableEntry 0001  
                                  _RXFCON0 0E46                           _teachDiagnostics 01AE  
                          ??_needsStarting 008F                                  ?_configIO 0001  
                               _bounceDown 28AC                       __end_of_nerdCallback B152  
                           inputScan@input 01CF                                  ?_bounceUp 0001  
                isConsumedEvent@eventIndex 00A6                                    i2_getNV BD92  
                          loadFlashBlock@i 008D                            ??_canFillRxFifo 006C  
                           checkLen@needed 01C9                               _getParameter 8648  
                   __end_of_loadFlashBlock BACC                          _sendProducedEvent 9676  
                    i2_getNextWriteMessage 8DF6                            _timerExtension1 00C7  
                          _timerExtension2 00C6                             ?_setLEDsByMode 0001  
                   mnsTRrqnpnCallback@step 01D5                     mnsTRrqnpnCallback@type 0001  
                       ?_sendProducedEvent 00A7                                poll@handled 02EE  
                     ??_mnsTRrqnpnCallback 00A9                          __end_of_findEvent A406  
                                  __Hparam 0000                               initServos@io 00A8  
                    setOutputPosition@type 00A2                              ?_popTwoAction 0001  
                                  __Lparam 0000         __end_of_timer3DoneInterruptHandler C3E8  
               _timer3DoneInterruptHandler C3C6                                 _initBounce C15C  
                   _APP_postProcessMessage C64E                                 _eventTable EF80  
                     ??_startDigitalOutput 01D5                         pbDownTimer@timeout 00A8  
                              ?_canEsdData 0001                          __end_of_pbUpTimer 988E  
                         pbUpTimer@timeout 00A8                                 _initTicker BB5C  
                                  ___awdiv A638                                 _initRomOps C572  
                                  ___awmod AE62                   _consumer2QProcessMessage 3582  
                         _ackGetDiagnostic C1FE                                 _initServos 7BFE  
                                ?_quantity 008D                                    ___lldiv A744  
                      ??_sendProducedEvent 00A8                          __end_of_completed A1C0  
                              ?_ackPowerUp 0001                                validStart@f 009C  
             EEPROM_Write@interruptEnabled 0092                       startDigitalOutput@io 01DB  
                               ??_addEvent 01DE                                 _currentPos 00A9  
                                  _doEvlrn 91F4                                 _paramBlock 0820  
                                  _doNenrd AED4                         canProcessMessage@m 01F9  
                                  _doEvuln AABC                                    _doNnclr BF02  
                 sodTRCallback@disable_off 01DC                                    _doNnevn B01C  
                                  _doReqev 7ABE                                    _doReval 9440  
                                  __pcinit AC28                            ??i2_checkTxFifo 000D  
                              setType@type 01EA                              _teachCheckLen B2E0  
                                  _doRqevn BDCC                          __end_of_leds_poll 5F4A  
                       _startTimedResponse BC28                                    __ramtop 0F00  
                                  _getHash C428                                  ?_writeNVM 00A4  
                       doEvlrn@eventNumber 01F0                              ??_checkTxFifo 006C  
                                  __ptext0 B9A4                                    __ptext1 993E  
                                  __ptext2 C59A                                    __ptext3 7BFE  
                                  __ptext4 AC9A                                    __ptext5 C0DA  
                                  __ptext6 99E8                                    __ptext7 88F0  
                                  __ptext8 C022                                    __ptext9 6F14  
                   __end_of_setOutputState B726                                    _highIsr 9062  
                                  _isEvent C276                                    _configs EE29  
                                  _pbTimer 0033                                  _T0CONbits 0FD5  
                       APP_nvDefault@index 00A3                            getEv@tableIndex 00A5  
                              ?_canTxError 0001                           _EnumerationState 0041  
                        ??_canFactoryReset 00A9                          _mnsProcessMessage 16CE  
                                  _nvCache 0400                            ??_initInputScan 0097  
                               _mode_flags 0166                                  _T1CONbits 0FCD  
                              ?_canPowerUp 0001                                    _readNVM B3A0  
                        __end_of_readInput 806A                             _nvFactoryReset BCE2  
                             _getTwoAction C61C                                    getEN@hi 009D  
                                  getEN@lo 009F                          ?_ackEventCheckLen 01CB  
                                  _isrHigh 84F8                          ??_teachGetESDdata 008D  
                 __end_of_rebuildHashtable 7E4A                                 ??_checkLen 00A7  
                         ??i2_setOutputPin 0006                                  _T3CONbits 0FB1  
                                  getNN@hi 009D                                    getNN@lo 009F  
                               _mode_state 00C5                                    getEVs@f 00A1  
                         ___awmod@dividend 008D                               _configIO$746 01BF  
                       doReqev@eventNumber 01CA                                    _mnsPoll 433C  
                       ?_mnsProcessMessage 01F9                                    _tickGet B5C8  
                             _flashCounter 00B9                          doNenrd@tableIndex 01CC  
                      ?_startTimedResponse 0091                                    _setType B340  
                             _isEvent$4890 008D                         ??_ackEventCheckLen 00A8  
                           ??_setOutputPin 0092                    ??i1_getNextWriteMessage 0062  
                               getNV@index 0090                                 _inputState 0294  
                                  _rxQueue 004F                          doNenrd@nodeNumber 01C8  
                 processActions@nextAction 01E5                                    _powerUp 88F0  
                        __end_of_inputScan 5252                          __end_of_mnsLowIsr C59A  
                        _consumer2QEsdData C408                                    _txQueue 004A  
                  ?_producerProcessMessage 01F9                            defaultEvents@en 01E7  
                          defaultEvents@io 01E9                                    _started 00D0  
                               ??_configIO 01BC                                 _mnsService EF56  
                        __end_of_nvService EF56                           ??_setBounceState 0092  
                               _mnsPowerUp 7E4A                          __end_of_nvPowerUp BE6E  
                                  _writeEv 31EE                  __end_of_sendProducedEvent 972C  
                               ??_bounceUp 009F                       end_of_initialization AC90  
                       _expeditedReadIndex 00CB                              startOutput@io 01DE  
                       ?_consumer2QEsdData 0001                        ??_mnsProcessMessage 02CC  
                             writeNVM@type 00A8                                 getEv@evNum 009D  
                         producerPowerUp@i 008D                                    memcpy@d 0094  
                                  memcpy@n 0091                                    memcpy@s 0096  
               APP_nvValueChanged@oldValue 01EE                                ?_defaultNVs 01C0  
                            ??_EEPROM_Read 008F                            ?_loadFlashBlock 0001  
                            ??_clearEvents 00A9                                  i1u2334_20 B7B6  
                                i1u2167_25 52D6                      __end_of_doneTwoAction C644  
                                  lowIsr@i 007D                                  i1u2681_28 9040  
                                i1u2681_29 9052                          _consumer2QPowerUp BACC  
                                i2u1282_44 7108                                  i2u1282_45 7104  
                                i2u1283_44 7142                                  i2u1283_45 713E  
                                i2u1285_44 7184                                  i2u1285_45 7180  
                                i2u1286_44 71BE                                  i2u1286_45 71BA  
                                i2u1294_45 5846                                  i2u1288_44 7200  
                                i2u1288_45 71FC                                  i2u1289_44 723A  
                                i2u1289_45 7236                          ?_APP_factoryReset 0001  
                                i2u1498_40 B808                             ??_popTwoAction 008D  
                               _validStart B872                            ___lldiv@divisor 009B  
                                i2u2677_48 910C                                  i2u2677_49 911E  
                      ??_consumer2QEsdData 008D                               writeEv@evVal 01CC  
                 __end_of_nvProcessMessage 49AC                               writeEv@evNum 01CB  
                          ___lldiv@counter 00A3                       ??_startTimedResponse 0094  
                       ?_consumer2QPowerUp 0001                               writeEv@nextF 01D2  
                  pollTimedResponse@result 01E5                         ??_APP_factoryReset 00A9  
          eraseFlashBlock@interruptEnabled 008D                                 _pollServos 0850  
                   pollServos@beforeMidway 01D5                           ??_APP_nvValidate 00A0  
                consumer2QProcessMessage@e 02D8                  consumer2QProcessMessage@m 01F9  
                     _deleteHappeningRange 89CC                              ??_FLASH_Write 0093  
                     nvGetDiagnostic@index 0098                                    postdec1 0FE5  
                                  postdec2 0FDD                     ??_getNumTxBuffersInUse 0092  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 0096  
                          _mnsFactoryReset ABB0                          ?_mnsGetDiagnostic 0096  
                               ??_quantity 008E                __end_of_setExpeditedActions C63E  
                   ?_setTimedResponseDelay 0001                               _APP_addEvent AF44  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 0096  
                           ?_teachCheckLen 01CB                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 220A                                 _tmpMessage 019B  
                       ??_mnsGetDiagnostic 0098             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset BD1E                                 _servoState 0110  
                               ??_writeNVM 01BA                                 _showStatus 872C  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0160  
           deleteHappeningRange@tableIndex 01DF                          ?_setNormalActions 0001  
                       _APP_nvValueChanged 2D60                  _timedResponseServiceIndex 00C4  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01DF                                 _priorities ED29  
                       _lastActionPollTime 0154                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent BA38                            sendMessage2@opc 00A8  
                     __end_of_teachPowerUp BEA0                            sendMessage3@opc 01C2  
                __end_of_consumer2QEsdData C428                            sendMessage4@opc 00A6  
                          sendMessage5@opc 00A6                            sendMessage6@opc 00A6  
                          sendMessage7@opc 00A6                         _sodTRCallback$1424 01D9  
                       _sodTRCallback$1425 01DA                          _eventTeachService EF20  
           __end_of_producerProcessMessage 61B2                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01C7                           setupTimer3@ticks 009A  
                       _timedResponseDelay 0164                        __end_of_checkTxFifo 5510  
                     APP_nvValueChanged@io 01F3                                showStatus@s 008F  
                            ??_findService 008F                            loadNvCache@temp 0099  
                              ?_bounceDown 0001                             i1_isEvent$4890 0060  
                      ?_APP_nvValueChanged 01ED                              clearEvents@io 01E1  
                            ??_bootEsdData 008D                                 isEvent@opc 008E  
                   ?i2_getNextWriteMessage 0001                    peekTwoActionQueue@index 008E  
                   i2getNextWriteMessage@q 0001                            ??_setLEDsByMode 0090  
                __end_of_consumer2QPowerUp BB14                              _sodTRCallback 8378  
                                i1_isEvent C2C6                        teachCheckLen@needed 01CD  
          ??_mnsTRserviceDiscoveryCallback 01D6                          ??_flushFlashBlock 008E  
                                i2_isEvent C3A2                         _teachGetDiagnostic C24E  
   sendInvertedProducedEvent@state_to_send 01D3                 deleteHappeningRange@number 01D7  
                        _heartbeatSequence 0045                        _teachProcessMessage 220A  
         sendProducedEvent@producedEventEN 01C7           sendProducedEvent@producedEventNN 01C9  
                                i1_tickGet B678                          removeTableEntry@f 01C7  
                           bounceUp@midway 00A6                              ??_bootPowerUp 0097  
                           _normalQueueBuf 0480                         _peekTwoActionQueue A5AE  
               consumer2QProcessMessage@ca 02D7                                  i2_tickGet B516  
               consumer2QProcessMessage@io 02D5                                 bounceUp@io 00A7  
                              ?_initBounce 0001          sodTRCallback@disable_SOD_response 01D6  
                             _APP_testMode C654                            _isConsumedEvent C35A  
                    ?_deleteHappeningRange 01D7              __end_of_handleSelfEnumeration 8170  
             ??_timer1DoneInterruptHandler 0009                        __end_of_EEPROM_Read C4C4  
                      ?_teachGetDiagnostic 0096                        __end_of_clearEvents BCA4  
                        _canTransmitFailed 00C0                ??i1_updateModuleErrorStatus 0060  
                              ?_initTicker 0001                                ?_initRomOps 0001  
                     ??_APP_nvValueChanged 01EF                                ?_initServos 0001  
                     __end_of_sendMessage2 BF92                       __end_of_sendMessage3 C0AC  
                     __end_of_sendMessage4 C022                       __end_of_sendMessage5 BFF2  
                     __end_of_sendMessage6 BF62                       __end_of_sendMessage7 BFC2  
                           __end_of___lmul B678                              _defaultEvents 7558  
                           __end_of_canIsr C468                             __end_of_canPri EE8B  
                           __end_of___wmul C2C6                        ?_peekTwoActionQueue 0001  
                           __end_of_doNerd C4DE                 removeTableEntry@tableIndex 01C8  
                           __end_of_doWait A5AE                             __end_of_getEVs 8378  
                            ??_APP_highIsr 0009                            ?_nvFactoryReset 0001  
                         _removeTableEntry 796A                            needsStarting@io 0091  
                           __end_of_memcpy BBE8                             __end_of_isrLow 84F8  
                       canReceiveMessage@m 01C4                         canReceiveMessage@p 01CB  
                           __end_of_lowIsr 9062                             __end_of_saveNV BD92  
               __end_ofi1_getBufferPointer A098                       ?_teachProcessMessage 01F9  
                __end_of_eventTeachService EF32                        __end_of_FLASH_Write 8F94  
                    __end_of_APP_nvDefault 8D24                             _canSendMessage 49AC  
                        ??_producerEsdData 008D                               _name_absaddr 0848  
                      start_initialization AC28                           ??_clearAllEvents 01C3  
                          _checkCANTimeout B77A                               _leds_powerUp BED2  
                     ??_teachGetDiagnostic 0098                                __end_of_pop 9D0C  
                            factoryReset@i 01F2                                ?_mnsPowerUp 0001  
             ?_mnsTRallDiagnosticsCallback 01D4                       setBounceState@action 0091  
                 setDigitalOutput@pinState 0098                          ??_producerPowerUp 008D  
                     ??_peekTwoActionQueue 008D                                _CANSTATbits 0F6E  
                           ?_sodTRCallback 01D4                         i2canFillRxFifo@ptr 000F  
                    __end_of_pushTwoAction B45E                        __end_of_pbDownTimer 993E  
                       _bootProcessMessage A098                                 ?i1_isEvent 0001  
                 producerProcessMessage@ev 01FB                        _getNextWriteMessage 8B80  
                               ?i2_isEvent 0001                               _nvGetESDdata C4F8  
                 __end_of_canGetDiagnostic B01C                    ??_APP_preProcessMessage 008F  
                  __end_of_mnsFactoryReset AC28                        __end_of_findService 9E3E  
                            ??_loadNvCache 0097                                 ?i1_tickGet 0060  
                              ?_validStart 0001                         setServoPosition@io 00A0  
                      __end_of_bootEsdData C336                          isConsumedEvent@ev 00A7  
                      ?_bootProcessMessage 01F9                                 ?i2_tickGet 0001  
                             doEvlrn@evVal 01F3                               doEvlrn@evNum 01F2  
                          numEv@tableIndex 00A3                     startTimedResponse@type 0094  
             __end_of_deleteTwoActionQueue A946                               doEvlrn@error 01F4  
                              ?_pollServos 0001                 __end_of_evtIdxToTableIndex C608  
                 rebuildHashtable@chainIdx 01C1                       __end_of_setOutputPin 6F14  
                                 ??___lmul 0099                            ??_teachCheckLen 00A8  
                                 ??_canIsr 0079                        _universalEventsInit C59A  
                                 ??___wmul 0095                               doNenrd@index 01C7  
                                 ??_doNerd 0095                                   ??_doWait 009F  
                                 ??_getEVs 009D                             ?_defaultEvents 01E6  
                      bootProcessMessage@m 01F9                         addEvent@forceOwnNN 01DD  
                             _nerdCallback B0EC                            i2_canFillRxFifo 73EC  
               ?i2_updateModuleErrorStatus 0001                    _updateModuleErrorStatus C5DA  
                      __end_of_bootService EF44                                   ??_memcpy 0093  
                                 ??_isrLow 007E                        __end_of_bootPowerUp 91F4  
                                 ??_lowIsr 0079                                   ??_saveNV 01BD  
                   __end_of_canSendMessage 4CA4                                ?_showStatus 0001  
                            ??_initOutputs 008D                   sodTRCallback@send_off_ok 01D8  
                     ?_getNextWriteMessage 008D                      ??_teachProcessMessage 02CC  
                             checkTxFifo@m 0071                                _checkTxFifo 5252  
                         _startMultiOutput 9BD6                          ?_setServoPosition 009F  
                            ?i2_canTxError 0001                         startMultiOutput@io 0093  
                         _startServoOutput 92BA                                __pbssBIGRAM 0548  
                            _reqevCallback 9ED6         consumer2QProcessMessage@tableIndex 02D1  
                  ??_checkRemoveTableEntry 00A9      consumer2QProcessMessage@masked_action 02D6  
                     ??_bootProcessMessage 01FB                                __pbssCOMRAM 002B  
                    peekTwoActionQueue@qty 008D                          ??_nvGetDiagnostic 0098  
                     __end_of_popTwoAction C0DA                         ??_setServoPosition 00A0  
                         canSendMessage@mp 0099                           canSendMessage@no 00A0  
                            __pcstackBANK0 0060                              __pcstackBANK1 01BA  
                            __pcstackBANK2 02CC                        __end_of_APP_highIsr C572  
                i1_updateModuleErrorStatus C5E6         consumer2QProcessMessage@nextAction 02D2  
                     ?_universalEventsInit 0001                                 setNV@index 01F8  
                            _setMultiState 8810                            _happening2Event 0300  
                            _setServoState 94FE                                 setNV@value 01F4  
                       startServoOutput@io 0093                         addEvent@tableIndex 01E5  
                 __end_of_ackGetDiagnostic C226                             i2_isEvent$4890 0001  
               setTimedResponseDelay@delay 008D                                  addEvent@e 01E4  
                                addEvent@f 01E3                                   ?i2_getNV 0001  
                       addEvent@nodeNumber 01D7              ??_mnsTRallDiagnosticsCallback 01D6  
                 _factoryResetGlobalEvents C652                    __end_of_isConsumedEvent C37E  
                       initInputScan@input 0099      sendInvertedProducedEvent@can_send_off 01CF  
                              _EEPROM_Read C4A6                 ??_consumer2QProcessMessage 01FB  
                       initTicker@priority 008D                                _clearEvents BC66  
                  ?_APP_postProcessMessage 008D                          ??_eraseFlashBlock 008D  
                                __pnvBANK0 00D1                            i2checkTxFifo@mp 0014  
                         setBounceState@io 0092                     ??_deleteHappeningRange 01D8  
                           mnsPowerUp@temp 0098                               doNnevn@count 01C8  
                                __pmainSec 8476                       teachProcessMessage@m 01F9  
                         _getBufferPointer 9F6C                            _canFactoryReset C488  
              ?_timer3DoneInterruptHandler 0001      __end_of_mnsTRserviceDiscoveryCallback A494  
            _mnsTRserviceDiscoveryCallback A406               mnsTRallDiagnosticsCallback@d 01DA  
                               nvPowerUp@i 009C                            tickGet@IntFlag1 0092  
                          tickGet@IntFlag2 0091                                  __pintcode 0808  
                          _teachGetESDdata C336                               ??_canEsdData 008D  
       handleSelfEnumeration@incomingCanId 009D                          _lastInputScanTime 0158  
                            __pmediumconst ED28                   ??_ackEventProcessMessage 01FB  
                     i1tickGet@currentTime 0066                                ackPowerUp@i 008D  
                         getEVs@tableIndex 00A3                                   ?___awdiv 0097  
                                __ptext100 0850                                  __ptext101 C15C  
                                __ptext110 B9EE                                  __ptext102 5A58  
                                __ptext111 B152                                  __ptext103 28AC  
                                __ptext200 C448                                  __ptext120 A522  
                                __ptext112 B6D0                                  __ptext104 69C2  
                                __ptext201 C586                                  __ptext121 C63E  
                                __ptext113 94FE                                  __ptext105 61B2  
                                __ptext210 8D24                                  __ptext202 B77A  
                                __ptext130 BFF2                                  __ptext122 C0AC  
                                __ptext114 8810                                  __ptext106 B4BC  
                                __ptext211 A002                                  __ptext203 B21C  
                                __ptext131 A946                                  __ptext123 C512  
                                __ptext115 95BA                                  __ptext107 92BA  
                                __ptext220 9E3E                                  __ptext212 C656  
                                __ptext204 5252                                  __ptext140 C572  
                                __ptext132 49AC                                  __ptext124 BC28  
                                __ptext116 A7C8                                  __ptext108 9BD6  
                                __ptext221 C3A2                                  __ptext205 B678  
                                __ptext141 B45E                                  __ptext133 3FE2  
                                __ptext125 AD7E                                  __ptext117 C61C  
                                __ptext109 5510                                _FLASH_Write 8EC6  
                                __ptext230 BD92                                  __ptext222 73EC  
                                __ptext214 9062                                  __ptext206 9D0C  
                                __ptext150 C488                                  __ptext142 872C  
                                __ptext134 C276                                  __ptext126 A8C8  
                                __ptext118 A5AE                                  __ptext223 C5F2  
                                __ptext215 C544                                  __ptext207 C2C6  
                                __ptext151 BCE2                                  __ptext143 97DE  
                                __ptext135 ADF0                                  __ptext127 A12C  
                                __ptext119 C624                                  __ptext224 8DF6  
                                __ptext216 B7CE                                  __ptext208 727C  
                                __ptext160 B340                                  __ptext152 ABB0  
                                __ptext144 988E                                  __ptext136 C5CE  
                                __ptext128 4F86                                  __ptext225 A2E4  
                                __ptext217 B27E                                  __ptext209 C5E6  
                                __ptext161 B822                                  __ptext153 C644  
                                __ptext145 5CDC                                  __ptext137 BE04  
                                __ptext129 9676                                  __ptext226 C55C  
                                __ptext218 57C6                                  __ptext170 BB14  
                                __ptext162 BD58                                  __ptext154 B726  
                                __ptext146 B5C8                                  __ptext138 8B80  
                                __ptext227 C3C6                                  __ptext219 B516  
                                __ptext171 796A                                  __ptext163 BA38  
                                __ptext155 8C52                                  __ptext147 B620  
                                __ptext139 7F60                                  __ptext228 C468  
                                __ptext180 4CA4                                  __ptext172 7D26  
                                __ptext164 7558                                  __ptext156 C29E  
                                __ptext148 A744                                  __ptext229 70CE  
                                __ptext181 B8C0                                  __ptext173 7814  
                                __ptext165 BC66                                  __ptext157 AE62  
                                __ptext149 8562                                  __ptext190 A494  
                                __ptext182 8EC6                                  __ptext174 8274  
                                __ptext166 89CC                                  __ptext158 A638  
                                __ptext191 6D56                                  __ptext183 BA82  
                                __ptext175 B872                                  __ptext167 972C  
                                __ptext159 C37E                                  __ptext192 BCA4  
                                __ptext184 A6BE                                  __ptext176 A376  
                                __ptext168 63EA                                  __ptext193 B3A0  
                                __ptext185 B90C                                  __ptext177 937E  
                                __ptext169 31EE                                  __ptext194 B958  
                                __ptext186 C5AC                                  __ptext178 C428  
                                __ptext195 C4A6                                  __ptext187 C5BE  
                                __ptext179 AB36                                   ?___awmod 008D  
                                __ptext196 C652                                  __ptext188 B084  
                                __ptext197 C654                                  __ptext189 C5DA  
                                __ptext199 8F94                               defaultNVs@io 01C3  
                                _findEvent A376                                   ?___lldiv 0097  
                             ??_ackPowerUp 008D                     _startDigitalOutput$808 01D7  
                      __end_of_loadNvCache BA82                               doReqev@evVal 01CD  
                             doReqev@evNum 01CC                            getNN@tableIndex 00A2  
                         processActions@io 01E6                               doReval@enNum 01CA  
                       sodTRCallback@flags 01DF                               doReval@evVal 01CB  
                             doReval@evNum 01C7                                   ?_doEvlrn 01EE  
                                 ?_doNenrd 0001                                   ?_doEvuln 01CE  
                              __pintcodelo 0818                                   ?_doNnclr 0001  
                                 ?_doNnevn 0001                        i2getBufferPointer@b 0003  
                                 ?_doReqev 01C8                                   ?_doReval 01C7  
                        teachGetESDdata@id 008D                         sodTRCallback@value 01DD  
        __end_ofi2_updateModuleErrorStatus C5FE                                   ?_doRqevn 0001  
                    ??_getNextWriteMessage 008F                                   ?_getHash 00A3  
                 deleteActionRange@updated 01DD                    __end_of_checkCANTimeout B7CE  
                            ??_setNewCanId 00A9                                  _pbUpTimer 97DE  
                          ?_canSendMessage 0099                              ??_sendMessage 00A3  
                                 ?_highIsr 0001                             ??i2_canTxError 0016  
                                 ?_isEvent 0001                               ??_canTxError 0075  
                         _findServiceIndex AD7E                                  _completed A12C  
                         nerdCallback@step 01D5                           nerdCallback@type 0001  
                           ?_reqevCallback 01D4                               ??_canPowerUp 0097  
                           _heartbeatTimer 0150                                   ?_readNVM 0091  
                                 ?_isrHigh 0001                                _COMSTATbits 0F71  
                  i1getNextWriteMessage@wr 006B                                  _leds_poll 5CDC  
               producerGetDiagnostic@index 0098                                   ?_mnsPoll 0001  
                        ?_rebuildHashtable 0001                           _canIsr$intlevel1 C450  
                     setOutputPosition@pos 00A1                                   ?_tickGet 008D  
  mnsTRallDiagnosticsCallback@serviceIndex 01D4                                _pbDownTimer 988E  
                                checkLen@m 01C7                                   ?_setType 01EA  
         ackEventProcessMessage@eventIndex 02CE                      ??_universalEventsInit 008D  
                           defaultNVs@type 01C0                             ?_setMultiState 0091  
                  startBounceOutput@action 008D                        __end_of_initOutputs C106  
                         ??_loadFlashBlock 008D                             ?_setServoState 0091  
                                 ?_powerUp 0001                                  _readInput 7F60  
                       ??_rebuildHashtable 01BA                            ??_sodTRCallback 00A9  
                              _findService 9DA6              __end_ofi1_getNextWriteMessage 8DF6  
                                 ?_writeEv 01CB                            startServos@type 01D8  
                              _flashDelays 0130                         processActions@type 01E3  
                                _expedited 0049                                _bootEsdData C312  
                       __end_of_canEsdData C4F8                      __end_of_needsStarting A84A  
                              _flashBuffer 0348                             doReval@evIndex 01C9  
                              ??i1_isEvent 0060              deleteHappeningRange@happening 01DD  
                             ??_defaultNVs 01C1                                  _inputScan 4F86  
           __end_of_APP_postProcessMessage C652                            _eventAckService EED8  
                                _mnsLowIsr C586                         __end_of_ackPowerUp C07E  
                                _nvService EF44                             ___wmul@product 0095  
                                _loopCount 0254                              ??_removeEvent 00A9  
                              ??i2_isEvent 0001                       sendProducedEvent@opc 01C6  
                                 _LATBbits 0F8A                                  _nvPowerUp BE3C  
                    __end_of_canFillRxFifo 73EC                          findEvent@chainIdx 01C5  
                          _isNoServoPulses C5BE                 __end_ofi2_getBufferPointer A376  
                  getNumRxBuffersInUse@ptr 0092                                   _PIE1bits 0F9D  
                                 _PIE2bits 0FA0                       rebuildHashtable@hash 01BF  
                         ?_mnsFactoryReset 0001                                   _PIE5bits 0F76  
                              ??i1_tickGet 0064                                  _rxBuffers 07C8  
                       __p_eventTable_text EF80                                  getHash@en 00A5  
                                getHash@nn 00A3                    __end_ofi2_canFillRxFifo 7558  
                           _flashFlushTime 0140     __end_of_APP_isSuitableTimeToWriteFlash C5BE  
           _APP_isSuitableTimeToWriteFlash C5AC                          _channelDefaultNVs EE8B  
                                _targetPos 0120                                _bootService EF32  
       __end_of_timer1DoneInterruptHandler C488                 _timer1DoneInterruptHandler C468  
                              ??i2_tickGet 0005                         __end_of_canTxError B27E  
                       __end_of_canService EF7A                               _teachPowerUp BE6E  
                                _pollCount 0264                                _bootPowerUp 912C  
                                 _PIR1bits 0F9E                                   _PIR2bits 0FA1  
                       __end_of_canPowerUp 70CE                          ?_nvProcessMessage 01F9  
                  ??_setTimedResponseDelay 008D                                   _PIR5bits 0F77  
                        doReqev@tableIndex 01CF                    ??_producerGetDiagnostic 0098  
                          ??_defaultEvents 00A9                                  _txBuffers 0500  
                           _mnsDiagnostics 018D                  ??_updateModuleErrorStatus 008D  
                                 _RCONbits 0FD0                          doReqev@nodeNumber 01C8  
                         ??_setOutputState 0095                                   _RXF0SIDL 0EE1  
            startDigitalOutput@actionState 01DA                         ??_nvProcessMessage 01FB  
                                 _RXM0EIDH 0EFA                                   _RXM0EIDL 0EFB  
                               ?_findEvent 01BA                                   _TXB0SIDH 0F21  
                                 _TXB0SIDL 0F22                                   _TXB1SIDH 0F11  
                                 _TXB1SIDL 0F12                                   _TXB2SIDH 0F01  
                                 _TXB2SIDL 0F02                                   _RXFBCON0 0E71  
                                 _RXM0SIDH 0EF8                                   _RXM0SIDL 0EF9  
                           pushTwoAction@a 008D                sodTRCallback@event_inverted 01DE  
                          inputScan@change 01CE                        i2setOutputPin@state 0005  
                        _stepsPerPollSpeed 0100                          _teachFactoryReset C644  
                               ?_pbUpTimer 0001                                  configIO@i 01C3  
                              _bounceState 0244                                _APP_highIsr C55C  
                           sendMessage@len 01BA                             sendMessage@opc 00A5  
                        _timedResponseTime 0144                          ___wmul@multiplier 0091  
                        _timedResponseStep 0043                          _timedResponseType 00C3  
                                _startWait 0037                                  _startTime 003B  
                               ?_completed 008D                                   i2_canIsr C544  
                    __end_ofi2_checkTxFifo 5A58                           _enumerationState 00BF  
                             doRqevn@count 01C3                                  _transport 0162  
                       ?_teachFactoryReset 0001                          defaultEvents@type 01E6  
                       __end_of_defaultNVs B872                                 ?_leds_poll 0001  
                    __end_of_initInputScan 9A92                            _flushFlashBlock A6BE  
               processActions@simultaneous 01DF                    ??i2_getNextWriteMessage 0003  
                      __end_of_setNewCanId B21C                        __end_of_sendMessage A9C4  
                               ?_readInput 0001                             doWait@duration 009D  
                            ??_setupTimer1 0095                              ??_setupTimer3 0095  
                     _deleteTwoActionQueue A8C8                            _eventCoeService EEEA  
                             ??_bounceDown 009F                        ??_teachFactoryReset 00A9  
                          checkLen@service 01CA                         __end_of_bl_version EE86  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 BF62                               _sendMessage3 C07E  
                             _sendMessage4 BFF2                               _sendMessage5 BFC2  
                             _sendMessage6 BF32                               _sendMessage7 BF92  
                                 i1pop@ret 0067                                   i2pop@ret 0008  
                          startOutput@type 01DD                            nvFactoryReset@i 01BE  
                               ?_inputScan 0001                                 ?_mnsLowIsr 0001  
                  __end_of_canFactoryReset C4A6                   __end_of_removeTableEntry 7ABE  
                         ?_isConsumedEvent 0001                    __end_of_teachGetESDdata C35A  
                               ?_nvPowerUp 0001                  __end_of_channelDefaultNVs EED8  
             __end_of_eventProducerService EF0E                     handleSelfEnumeration@p 0097  
                               _EECON1bits 0F7F                        startBounceOutput@io 008E  
                              _loadNvCache BA38                                   __Hrparam 0000  
                              _eventChains 0548                           finaliseOutput@io 0001  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01E8                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01CD  
                          _producerEsdData C3E8                           ??_nvFactoryReset 01BC  
                             ??_initTicker 008D                        __end_of_removeEvent C15C  
                             ??_initRomOps 008D                     removeEvent@eventNumber 01CB  
 consumer2QProcessMessage@nextSimultaneous 02D4                               ??_initServos 00A4  
                __end_of_teachFactoryReset C64A                    sodTRCallback@send_on_ok 01D7  
                                 _addEvent 63EA                          _startBounceOutput B152  
           ?_mnsTRserviceDiscoveryCallback 01D4                             _processActions 61B2  
                       __end_of_bounceDown 2D60                            ??_reqevCallback 01D6  
                            ??_startServos 00A9                           ?_checkCANTimeout 0001  
                            ??_startOutput 00A9                                _initOutputs C0DA  
                       ?_startBounceOutput 008D                            _producerPowerUp C022  
                       doNenrd@eventNumber 01CA                  rebuildHashtable@happening 01C0  
                             setType@index 01EB                                   _checkLen A84A  
                          ??_setMultiState 0092                            ??_setServoState 0092  
                           i2checkTxFifo@m 0012                             _finaliseOutput C624  
                      _producerDiagnostics 01AA                    deleteActionRange@action 01DE  
                            initOutputs@io 008D                       processActions@action 01E7  
          __end_of_updateModuleErrorStatus C5E6                    __end_of_eventAckService EEEA  
                               _FLASH_Read B958                 ?_sendInvertedProducedEvent 01CC  
                    ?_deleteTwoActionQueue 0001                      getNextWriteMessage@wr 0098  
                                 __ptext10 BE3C                                   __ptext11 7E4A  
                                 __ptext20 5F4A                                   __ptext12 C050  
                                 __ptext21 9B38                                   __ptext13 912C  
                               _T1GCONbits 0FAA                                   __ptext30 9440  
                                 __ptext22 468C                                   __ptext14 BACC  
                                 __ptext31 7ABE                                   __ptext23 16CE  
                                 __ptext15 BE6E                                defaultNVs@i 01C4  
                                 __ptext40 AF44                                   __ptext32 B01C  
                                 __ptext24 65EE                                   __ptext16 BED2  
                                 __ptext41 A9C4                                   __ptext33 BF02  
                                 __ptext25 A098                                   __ptext17 C62C  
                                 __ptext50 8AA8                                   __ptext42 9ED6  
                                 __ptext34 C4C4                                   __ptext26 3582  
                                 __ptext18 BB5C                                   __ptext51 C608  
                                 __ptext43 B0EC                                   __ptext35 AED4  
                                 __ptext27 220A                                   __ptext19 390C  
                                 __ptext60 C312                                   __ptext52 AA40  
                                 __ptext44 BBE8                                   __ptext36 C5FE  
                                 __ptext28 B2E0                                   __ptext61 C408  
                                 __ptext53 2D60                                   __ptext45 A406  
                                 __ptext37 AABC                                   __ptext29 BDCC  
                                 __ptext70 BF32                                   __ptext62 C336  
                                 __ptext54 C612                                   __ptext46 8170  
                                 __ptext38 C132                                   __ptext71 C07E  
                                 __ptext63 C186                                   __ptext55 C2EE  
                                 __ptext47 C106                                   __ptext39 91F4  
                                 __ptext80 67DC                                   __ptext72 8648  
                                 __ptext64 AFB0                                   __ptext56 AD0C  
                                 __ptext48 8378                                   __ptext81 76BA  
                                 __ptext73 B570                                   __ptext65 C1AE  
                                 __ptext57 C3E8                                   __ptext49 3C82  
                                 __ptext90 9DA6                                   __ptext82 B1B8  
                                 __ptext74 433C                                   __ptext66 C1D6  
                                 __ptext58 C4DE                                   __ptext91 C52C  
                                 __ptext83 9C72                                   __ptext75 BEA0  
                                 __ptext67 C1FE                                   __ptext59 C4F8  
                                 __ptext92 A84A                                   __ptext84 BBA2  
                                 __ptext76 BF62                                   __ptext68 C226  
                                 __ptext93 BFC2                                   __ptext85 806A  
                                 __ptext77 C632                                   __ptext69 C24E  
                                 __ptext94 C64A                                   __ptext86 BD1E  
                                 __ptext78 C638                                   __ptext95 C64E  
                                 __ptext87 9F6C                                   __ptext79 B400  
                                 __ptext96 6B94                                   __ptext88 BF92  
                                 __ptext97 9A92                                   __ptext89 C35A  
                                 __ptext98 A1C0                                   __ptext99 A252  
                      ??_startBounceOutput 008E               __end_of_getNumRxBuffersInUse BD58  
                  __end_of_isNoServoPulses C5CE                               _setOutputPin 6D56  
                     processActions@nextIo 01E2                               ??_mnsPowerUp 0097  
                                 _configIO 4CA4                                   _ledTimer 0148  
                  deleteActionRange@number 01D7                             _processOutputs 69C2  
                        _APP_GetEventState 3C82                                   _ledState 00BB  
                        sodTRCallback@step 01D5                         __end_of_initBounce C186  
                        sodTRCallback@type 0001                              ?_EEPROM_Write 008F  
                       __end_of_eventTable FF70                                   _bounceUp 5A58  
                               _T3GCONbits 0FB0                     i1getNextWriteMessage@q 0060  
                       __end_of_initTicker BBA2                         __end_of_initRomOps C586  
                       i1_getBufferPointer A002                         ?_APP_GetEventState 0001  
                       __end_of_initServos 7D26           __end_of_consumer2QProcessMessage 390C  
                                setType@io 01EC                                   doNnevn@f 01C7  
                                 doNnevn@i 01C9                 sendProducedEvent@happening 01CB  
                       __end_of_paramBlock 0840                             canPowerUp@temp 0098  
                    __end_of_setLEDsByMode BED2                        __end_of_setupTimer1 A2E4  
                      __end_of_setupTimer3 A252                       __end_ofi2_canTxError B2E0  
                            ?_factoryReset 0001                   __end_of_startMultiOutput 9C72  
                         _nvTRnvrdCallback BBE8                              _configIO$8086 01BE  
                            findEvent@hash 01C4                   __end_of_startServoOutput 937E  
                             ??_validStart 0097                                   doRqevn@i 01C4  
                        ?_canGetDiagnostic 0096                             writeEv@nextIdx 01D6  
                              getEVs@evIdx 00A2             consumer2QProcessMessage@change 02CD  
           consumer2QProcessMessage@action 02D9                           ?i2_canFillRxFifo 0001  
                              getEVs@evNum 00A4                        ?i1_getBufferPointer 0060  
                      ??_APP_GetEventState 009F              __end_of_APP_preProcessMessage C64E  
            ackEventProcessMessage@eventEN 02CC              ackEventProcessMessage@eventNN 02CF  
                             _popTwoAction C0AC                         ??_canGetDiagnostic 0098  
                             ??_pollServos 01CC                                   isa$xinst 0000  
                                 _services EE69                  __end_of_startBounceOutput B1B8  
                   __end_of_processActions 63EA                   clearAllEvents@tableIndex 01C7  
                                 int$flags 0054                            _nvGetDiagnostic C1AE  
                                 highIsr@i 001E                                ??_findEvent 01BE  
                                 _quantity BE04                      _handleSelfEnumeration 806A  
              ??i2_updateModuleErrorStatus 0001                                 _APP_lowIsr C656  
                   sendProducedEvent@onOff 00A7                         __end_of_mnsService EF68  
                  __end_of_flushFlashBlock A744                          writeEv@tableIndex 01D5  
                       __end_of_mnsPowerUp 7F60                          _setOutputPosition AC9A  
                             ??_showStatus 008D                                ??_pbUpTimer 00A4  
                         processOutputs@io 01CD                                   _writeNVM B8C0  
               processEnumeration@newCanId 01C2                     APP_addEvent@forceOwnNN 01EC  
                              _setNewCanId B1B8                               ?_checkTxFifo 0001  
                             pollServos@io 01D7                                ??_completed 008F  
                              _sendMessage A946                     __end_of_finaliseOutput C62C  
                           startOutput@act 01DC                    __end_of_eventCoeService EEFC  
                            writeNVM@index 00A4                         ?_setOutputPosition 00A1  
                                quantity@q 008D                              writeNVM@value 00A7  
                              _OSCTUNEbits 0F9B                                 _INTCONbits 0FF2  
                              ??_leds_poll 009F                 ??_factoryResetGlobalEvents 008D  
                       _evtIdxToTableIndex C5FE                       ??i1_getBufferPointer 0062  
                    canGetDiagnostic@index 0099                                   memcpy@d1 008D  
                                 memcpy@s1 008F                     __end_of_processOutputs 6B94  
                __end_of_APP_GetEventState 3FE2                   __end_of_getBufferPointer A002  
                          _eraseFlashBlock B90C                          APP_addEvent@evVal 01EB  
            __end_of_checkRemoveTableEntry BB5C                          APP_addEvent@evNum 01EA  
                       __end_of_validStart B8C0                        __end_of_startServos 9B38  
                  teachGetDiagnostic@index 0098                                ??_readInput 0091  
                      __end_of_startOutput B516                     _ackEventProcessMessage 65EE  
                  deleteTwoActionQueue@qty 008D                             ??_EEPROM_Write 0092  
                      ??_setOutputPosition 00A3                 __end_of_processEnumeration 7814  
                              getHash@hash 00A8                         __end_of_pollServos 16CE  
                        ?_ackGetDiagnostic 0096                                   intlevel1 0000  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 0001  
                            ?_getParameter 0001                                ??_inputScan 01CC  
                             _servoInBlock 00C9                                ??_mnsLowIsr 0060  
                     getNextWriteMessage@q 008D                           ?_canFactoryReset 0001  
                   APP_addEvent@tableIndex 01ED                                   numEv@num 00A1  
                             ?_EEPROM_Read 008D                           ___lldiv@dividend 0097  
                       ??_ackGetDiagnostic 0098            sendInvertedProducedEvent@invert 01CD  
                           ??_factoryReset 01EE                    __end_of_producerEsdData C408  
                              ??_nvPowerUp 009C                               ?_clearEvents 0001  
                         _ackEventCheckLen C52C                      removeEvent@tableIndex 01CD  
                         ?_teachGetESDdata 0001                   __end_of_findServiceIndex ADF0  
                              _removeEvent C132                     APP_addEvent@nodeNumber 01E6  
                              _TXB0CONbits 0F20                              _doneTwoAction C63E  
                       __end_of_showStatus 8810             mnsTRrqnpnCallback@serviceIndex 01D4  
                    removeEvent@nodeNumber 01C9                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01E0                         __end_of_priorities EE29  
                         ??_canSendMessage 009B                __end_of_teachProcessMessage 28AC  
               __end_of_tableIndexToEvtIdx C612                  sodTRCallback@serviceIndex 01D4  
                     __end_of_canTransport EF7E                               ?_FLASH_Write 0090  
                  __end_of_producerPowerUp C050                         tickGet@currentTime 0093  
                          ?_processActions 0001                              findService@id 0091  
                __end_of_setOutputPosition AD0C                                   powerUp@i 01C8  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse A9C4  
                    __end_of_teachCheckLen B340                   ??_producerProcessMessage 02CC  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 0001                          FLASH_Read@address 008D  
                         _APP_factoryReset C37E                            ?_finaliseOutput 008D  
                  nerdCallback@eventNumber 01D8                              ?_getTwoAction 0001  
                         _ticksWhenStopped 0388                           ___lldiv@quotient 009F  
                     producerEsdData@index 008D                       _eventProducerService EEFC  
           sendInvertedProducedEvent@state 01CC                    _consumer2QGetDiagnostic C226  
                   ??_deleteTwoActionQueue 008D                          _deleteActionRange 972C  
                             ?_pbDownTimer 0001                                findEvent@en 01C2  
                              findEvent@nn 01C0                          writeEv@startIndex 01D1  
                     findEvent@eventNumber 01BC                                   writeEv@e 01D3  
                                 writeEv@f 01D4                            ?_processOutputs 0001  
                              ?_FLASH_Read 008D                              bootEsdData@id 008D  
                      ??_pollTimedResponse 01E3                           _mnsGetDiagnostic C1D6  
                             findService@i 0092                         ?_deleteActionRange 01D7  
             _timedResponseAllServicesFlag 0044                                _setupTimer1 A252  
                              _setupTimer3 A1C0                           ?_isNoServoPulses 0001  
                             ?_findService 008D                     startMultiOutput@action 0091  
                i2_updateModuleErrorStatus C5F2                             ??_getParameter 0092  
                             ?_bootEsdData 0001                          sendMessage2@data1 00A6  
                        sendMessage2@data2 00A7                          sendMessage3@data1 00A6  
                        sendMessage3@data2 00A7                          sendMessage3@data3 00A8  
                        sendMessage4@data1 01C2                          sendMessage4@data2 01C3  
                        sendMessage4@data3 01C4                          sendMessage4@data4 01C5  
                         _setDigitalOutput A494                          getBufferPointer@b 008F  
                        sendMessage5@data1 01C2                          sendMessage5@data2 01C3  
                        sendMessage5@data3 01C4                          sendMessage5@data4 01C5  
                        sendMessage5@data5 01C6                      _consumer2QDiagnostics 01B6  
                        sendMessage6@data1 01C2                          sendMessage6@data2 01C3  
                        sendMessage6@data3 01C4                          sendMessage6@data4 01C5  
                        sendMessage6@data5 01C6                          sendMessage6@data6 01C7  
                         bootPowerUp@found 0098                            _last_mode_flags 0046  
                        sendMessage7@data1 01C2                          sendMessage7@data2 01C3  
                        sendMessage7@data3 01C4                          sendMessage7@data4 01C5  
                        sendMessage7@data5 01C6                          sendMessage7@data6 01C7  
                        sendMessage7@data7 01C8                             _checkPowerOnPb B45E  
                         EEPROM_Read@index 008D                        ??_deleteActionRange 01D8  
                         _setNormalActions C632                             ?_doneTwoAction 0001  
                          _last_mode_state 0047                    __end_of_nvGetDiagnostic C1D6  
                             ?_bootPowerUp 0001                       validStart@tableIndex 009B  
                     nvTRnvrdCallback@step 01D5                ?_timer1DoneInterruptHandler 0001  
                     nvTRnvrdCallback@type 0001                                _pulseDelays 02A4  
              __end_of_getNextWriteMessage 8C52  
